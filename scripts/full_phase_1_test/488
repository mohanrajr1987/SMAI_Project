Positive 488 pHow to make this with jsbr If console or Dev Tools is opened will perform function p  precodefunction    alertConsole is open.  codepre
Positive 488 pI am working on a program to average grades. For some reason my scanner or console is not letting me enter an answer for the third question and I am not sure why. p  pA lot of the code is commented out as it unneeded for now. p  pedit I am not sure how to number lines of code here but the lines 2328 I think are the problemp  precodeimport java.text.DecimalFormat import java.util.Scanner  public class GradeData       public static void mainString[] args   int count  0 double grade  0 decided to use double for grade in case users want to be specific with decimal points. String user boolean enter String name String enterAgain Scanner userInput  new ScannerSystem.in System.out.printlnPlease enter your name  name  userInput.nextLine System.out.printlnPlease enter a grade  grade  userInput.nextDouble  System.out.printlnuser May not need this line System.out.printlnWould you like to continue entering grades yn enterAgain  userInput.nextLine  if enterAgain.equalsIgnoreCasey          enterAgain.equalsIgnoreCaseYes       System.out.printlnPlease enter another grade     if user.getScore gt highScore           highScore  user.getScore          System.out.printlnHigh Score               DecimalFormat.formatgrade     user.setScore0   else      enter  false userInput.close        codepre
Positive 488 pIm writing a command line program that makes use of println to display text in a very specific format. The problem I encounter is that every time I ask the user to enter something via Scanner.nextLine, the console automatically echos their input in the console. Is there a way to disable the console from immediately displaying the users entered text In case it matters, I am running Linux.p
Positive 488 pI want to print codeJSON.stringifycoded objects to the console, for context as part of a Mocha test suite output.p  pAs the tests indent, Id like the object log lines to be indented far enough rightwards say, 34 tab spaces that they are recognisably in the right codedescribecode group.p  pHow could I achieve this with something like codeconsole.logcode or codeprocess.stdout.writecodep
Positive 488 pIm attempting to send data from one machine to another in node.js.p  pI seem to be having some difficulty getting the parser to function correctly. Here is my client and server codep  pstrongClient.JSstrongp  precodevar request  requirerequest  request.post     http192.168.1.2253002,      form  key notyourmother  ,     function error, response, body          if error ampamp response.statusCode  200              console.logbody                codepre  pstrongServer.JSstrongp  precodevar express  requireexpress var bodyParser  requirebodyparser var app  express app.usebodyParser.json app.post, function req, res    res.sendPOST request to the homepage console.logreq.body   var server  app.listen3002, function     var host  server.address.address   var port  server.address.port    console.logExample app listening at httpss, host, port  codepre  pWhen I run both snippets, the console outputs .p  pWhat may I be doing incorrect Thank youp
Positive 488 pI am making a C console textbased game, and because I wanted it to look more oldschool, Ive added an effect so that any text descriptions, tutorials, dialogues looks like its being typed, and it looks like thisp  precodepublic static int pauseTime  50  class Writer      public void WriteLinestring myText              int pauseTime  MainClass.time         for int i  0 i lt myText.Length i                          Console.WritemyText[i]                 System.Threading.Thread.SleeppauseTime                  Console.WriteLine       codepre  pBut then I thought that this might be annoying and I thought about adding an option to skip the effect and make all the text appear at once. So I chose the Enter key to be the skip key, and it makes the text appear at once, but pressing the enter key also creates a new text line, scrambling the text.p  pSo I want to somehow disable user input, so that the user cannot write anything in the console. Is there a way to, for example, disable the command prompt and by command prompt I dont mean cmd.exe, but the flashing  underscore signp
Positive 488 pIs it possible to determine whether the current script is executed from strongusing the node.js consolestrongp  precode node gt require.script codepre  por from running emthe classic wayem of strongusing a filestrong likep  precodenode script.js codepre
Positive 488 pI have to check whether the number exist which sum is entered by user in text file. I have tried some code but it is not working.p  pstrongCodestrongp  precodeArrayListltIntegergt integers  new ArrayListltIntegergt  Scanner fileScanner  new Scannernew FileCintfile.txt while fileScanner.hasNextInt     integers.addfileScanner.nextInt   Scanner in  new ScannerSystem.in System.out.printlnintegers System.out.printlnenter number int num  in.nextInt in.nextLine forint i0 iltintegers.size i      int temp     tempintegers.getiintegers.geti1     i     if tempnum               System.out.printlntrue         codepre
Positive 488 pIm trying to print long size String list. but elements not printed properly. Im not able to figure out whats happening.p  poutput of console  a hrefhttpi.stack.imgur.comN76us.jpg relnofollowimg srchttpi.stack.imgur.comN76us.jpg altenter image description herea look, head of line is not visiblep  pbut if I have slice list into 200, list printed properly. please help me. Im using STS p  precodeSpring Tool Suite  Version 3.6.4.RELEASE Build Id 201503100339 Platform Eclipse Luna SR1 4.4.2 codepre  pcode p  precodeimport java.util.Arrays import java.util.List   public class Test       public static void mainString[] args          ListltStringgt asList  Arrays.asListtestLongLongLongColumnName1,                 testLongLongLongColumnName2, testLongLongLongColumnName3,                 testLongLongLongColumnName4, testLongLongLongColumnName5,                 testLongLongLongColumnName6, testLongLongLongColumnName7,                 testLongLongLongColumnName8, testLongLongLongColumnName9,                 testLongLongLongColumnName10, testLongLongLongColumnName11,                 testLongLongLongColumnName12, testLongLongLongColumnName13,                 testLongLongLongColumnName14, testLongLongLongColumnName15,                 testLongLongLongColumnName16, testLongLongLongColumnName17,                 testLongLongLongColumnName18, testLongLongLongColumnName19,                 testLongLongLongColumnName20, testLongLongLongColumnName21,                 testLongLongLongColumnName22, testLongLongLongColumnName23,                 testLongLongLongColumnName24, testLongLongLongColumnName25,                 testLongLongLongColumnName26, testLongLongLongColumnName27,                 testLongLongLongColumnName28, testLongLongLongColumnName29,                 testLongLongLongColumnName30, testLongLongLongColumnName31,                 testLongLongLongColumnName32, testLongLongLongColumnName33,                 testLongLongLongColumnName34, testLongLongLongColumnName35,                 testLongLongLongColumnName36, testLongLongLongColumnName37,                 testLongLongLongColumnName38, testLongLongLongColumnName39,                 testLongLongLongColumnName40, testLongLongLongColumnName41,                 testLongLongLongColumnName42, testLongLongLongColumnName43,                 testLongLongLongColumnName44, testLongLongLongColumnName45,                 testLongLongLongColumnName46, testLongLongLongColumnName47,                 testLongLongLongColumnName48, testLongLongLongColumnName49,                 testLongLongLongColumnName50, testLongLongLongColumnName51,                 testLongLongLongColumnName52, testLongLongLongColumnName53,                 testLongLongLongColumnName54, testLongLongLongColumnName55,                 testLongLongLongColumnName56, testLongLongLongColumnName57,                 testLongLongLongColumnName58, testLongLongLongColumnName59,                 testLongLongLongColumnName60, testLongLongLongColumnName61,                 testLongLongLongColumnName62, testLongLongLongColumnName63,                 testLongLongLongColumnName64, testLongLongLongColumnName65,                 testLongLongLongColumnName66, testLongLongLongColumnName67,                 testLongLongLongColumnName68, testLongLongLongColumnName69,                 testLongLongLongColumnName70, testLongLongLongColumnName71,                 testLongLongLongColumnName72, testLongLongLongColumnName73,                 testLongLongLongColumnName74, testLongLongLongColumnName75,                 testLongLongLongColumnName76, testLongLongLongColumnName77,                 testLongLongLongColumnName78, testLongLongLongColumnName79,                 testLongLongLongColumnName80, testLongLongLongColumnName81,                 testLongLongLongColumnName82, testLongLongLongColumnName83,                 testLongLongLongColumnName84, testLongLongLongColumnName85,                 testLongLongLongColumnName86, testLongLongLongColumnName87,                 testLongLongLongColumnName88, testLongLongLongColumnName89,                 testLongLongLongColumnName90, testLongLongLongColumnName91,                 testLongLongLongColumnName92, testLongLongLongColumnName93,                 testLongLongLongColumnName94, testLongLongLongColumnName95,                 testLongLongLongColumnName96, testLongLongLongColumnName97,                 testLongLongLongColumnName98, testLongLongLongColumnName99,                 testLongLongLongColumnName100,                 testLongLongLongColumnName101,                 testLongLongLongColumnName102,                 testLongLongLongColumnName103,                 testLongLongLongColumnName104,                 testLongLongLongColumnName105,                 testLongLongLongColumnName106,                 testLongLongLongColumnName107,                 testLongLongLongColumnName108,                 testLongLongLongColumnName109,                 testLongLongLongColumnName110,                 testLongLongLongColumnName111,                 testLongLongLongColumnName112,                 testLongLongLongColumnName113,                 testLongLongLongColumnName114,                 testLongLongLongColumnName115,                 testLongLongLongColumnName116,                 testLongLongLongColumnName117,                 testLongLongLongColumnName118,                 testLongLongLongColumnName119,                 testLongLongLongColumnName120,                 testLongLongLongColumnName121,                 testLongLongLongColumnName122,                 testLongLongLongColumnName123,                 testLongLongLongColumnName124,                 testLongLongLongColumnName125,                 testLongLongLongColumnName126,                 testLongLongLongColumnName127,                 testLongLongLongColumnName128,                 testLongLongLongColumnName129,                 testLongLongLongColumnName130,                 testLongLongLongColumnName131,                 testLongLongLongColumnName132,                 testLongLongLongColumnName133,                 testLongLongLongColumnName134,                 testLongLongLongColumnName135,                 testLongLongLongColumnName136,                 testLongLongLongColumnName137,                 testLongLongLongColumnName138,                 testLongLongLongColumnName139,                 testLongLongLongColumnName140,                 testLongLongLongColumnName141,                 testLongLongLongColumnName142,                 testLongLongLongColumnName143,                 testLongLongLongColumnName144,                 testLongLongLongColumnName145,                 testLongLongLongColumnName146,                 testLongLongLongColumnName147,                 testLongLongLongColumnName148,                 testLongLongLongColumnName149,                 testLongLongLongColumnName150,                 testLongLongLongColumnName151,                 testLongLongLongColumnName152,                 testLongLongLongColumnName153,                 testLongLongLongColumnName154,                 testLongLongLongColumnName155,                 testLongLongLongColumnName156,                 testLongLongLongColumnName157,                 testLongLongLongColumnName158,                 testLongLongLongColumnName159,                 testLongLongLongColumnName160,                 testLongLongLongColumnName161,                 testLongLongLongColumnName162,                 testLongLongLongColumnName163,                 testLongLongLongColumnName164,                 testLongLongLongColumnName165,                 testLongLongLongColumnName166,                 testLongLongLongColumnName167,                 testLongLongLongColumnName168,                 testLongLongLongColumnName169,                 testLongLongLongColumnName170,                 testLongLongLongColumnName171,                 testLongLongLongColumnName172,                 testLongLongLongColumnName173,                 testLongLongLongColumnName174,                 testLongLongLongColumnName175,                 testLongLongLongColumnName176,                 testLongLongLongColumnName177,                 testLongLongLongColumnName178,                 testLongLongLongColumnName179,                 testLongLongLongColumnName180,                 testLongLongLongColumnName181,                 testLongLongLongColumnName182,                 testLongLongLongColumnName183,                 testLongLongLongColumnName184,                 testLongLongLongColumnName185,                 testLongLongLongColumnName186,                 testLongLongLongColumnName187,                 testLongLongLongColumnName188,                 testLongLongLongColumnName189,                 testLongLongLongColumnName190,                 testLongLongLongColumnName191,                 testLongLongLongColumnName192,                 testLongLongLongColumnName193,                 testLongLongLongColumnName194,                 testLongLongLongColumnName195,                 testLongLongLongColumnName196,                 testLongLongLongColumnName197,                 testLongLongLongColumnName198,                 testLongLongLongColumnName199,                 testLongLongLongColumnName200,                 testLongLongLongColumnName201,                 testLongLongLongColumnName202,                 testLongLongLongColumnName203,                 testLongLongLongColumnName204,                 testLongLongLongColumnName205,                 testLongLongLongColumnName206,                 testLongLongLongColumnName207,                 testLongLongLongColumnName208,                 testLongLongLongColumnName209,                 testLongLongLongColumnName210,                 testLongLongLongColumnName211,                 testLongLongLongColumnName212,                 testLongLongLongColumnName213,                 testLongLongLongColumnName214,                 testLongLongLongColumnName215,                 testLongLongLongColumnName216,                 testLongLongLongColumnName217,                 testLongLongLongColumnName218,                 testLongLongLongColumnName219,                 testLongLongLongColumnName220,                 testLongLongLongColumnName221,                 testLongLongLongColumnName222,                 testLongLongLongColumnName223,                 testLongLongLongColumnName224,                 testLongLongLongColumnName225,                 testLongLongLongColumnName226,                 testLongLongLongColumnName227,                 testLongLongLongColumnName228,                 testLongLongLongColumnName229,                 testLongLongLongColumnName230,                 testLongLongLongColumnName231,                 testLongLongLongColumnName232,                 testLongLongLongColumnName233,                 testLongLongLongColumnName234,                 testLongLongLongColumnName235,                 testLongLongLongColumnName236,                 testLongLongLongColumnName237,                 testLongLongLongColumnName238,                 testLongLongLongColumnName239,                 testLongLongLongColumnName240,                 testLongLongLongColumnName241,                 testLongLongLongColumnName242,                 testLongLongLongColumnName243,                 testLongLongLongColumnName244,                 testLongLongLongColumnName245,                 testLongLongLongColumnName246,                 testLongLongLongColumnName247,                 testLongLongLongColumnName248,                 testLongLongLongColumnName249,                 testLongLongLongColumnName250,                 testLongLongLongColumnName251,                 testLongLongLongColumnName252,                 testLongLongLongColumnName253,                 testLongLongLongColumnName254,                 testLongLongLongColumnName255,                 testLongLongLongColumnName256,                 testLongLongLongColumnName257,                 testLongLongLongColumnName258,                 testLongLongLongColumnName259,                 testLongLongLongColumnName260,                 testLongLongLongColumnName261,                 testLongLongLongColumnName262,                 testLongLongLongColumnName263,                 testLongLongLongColumnName264,                 testLongLongLongColumnName265,                 testLongLongLongColumnName266,                 testLongLongLongColumnName267,                 testLongLongLongColumnName268,                 testLongLongLongColumnName269,                 testLongLongLongColumnName270,                 testLongLongLongColumnName271,                 testLongLongLongColumnName272,                 testLongLongLongColumnName273,                 testLongLongLongColumnName274,                 testLongLongLongColumnName275,                 testLongLongLongColumnName276,                 testLongLongLongColumnName277,                 testLongLongLongColumnName278,                 testLongLongLongColumnName279,                 testLongLongLongColumnName280,                 testLongLongLongColumnName281,                 testLongLongLongColumnName282,                 testLongLongLongColumnName283,                 testLongLongLongColumnName284,                 testLongLongLongColumnName285,                 testLongLongLongColumnName286,                 testLongLongLongColumnName287,                 testLongLongLongColumnName288,                 testLongLongLongColumnName289,                 testLongLongLongColumnName290,                 testLongLongLongColumnName291,                 testLongLongLongColumnName292,                 testLongLongLongColumnName293,                 testLongLongLongColumnName294,                 testLongLongLongColumnName295,                 testLongLongLongColumnName296,                 testLongLongLongColumnName297,                 testLongLongLongColumnName298,                 testLongLongLongColumnName299,                 testLongLongLongColumnName300,                 testLongLongLongColumnName301,                 testLongLongLongColumnName302,                 testLongLongLongColumnName303,                 testLongLongLongColumnName304,                 testLongLongLongColumnName305,                 testLongLongLongColumnName306,                 testLongLongLongColumnName307,                 testLongLongLongColumnName308,                 testLongLongLongColumnName309,                 testLongLongLongColumnName310,                 testLongLongLongColumnName311,                 testLongLongLongColumnName312,                 testLongLongLongColumnName313,                 testLongLongLongColumnName314,                 testLongLongLongColumnName315,                 testLongLongLongColumnName316,                 testLongLongLongColumnName317,                 testLongLongLongColumnName318,                 testLongLongLongColumnName319,                 testLongLongLongColumnName320,                 testLongLongLongColumnName321,                 testLongLongLongColumnName322,                 testLongLongLongColumnName323,                 testLongLongLongColumnName324,                 testLongLongLongColumnName325,                 testLongLongLongColumnName326,                 testLongLongLongColumnName327,                 testLongLongLongColumnName328,                 testLongLongLongColumnName329,                 testLongLongLongColumnName330,                 testLongLongLongColumnName331,                 testLongLongLongColumnName332,                 testLongLongLongColumnName333,                 testLongLongLongColumnName334,                 testLongLongLongColumnName335,                 testLongLongLongColumnName336,                 testLongLongLongColumnName337,                 testLongLongLongColumnName338,                 testLongLongLongColumnName339,                 testLongLongLongColumnName340,                 testLongLongLongColumnName341,                 testLongLongLongColumnName342,                 testLongLongLongColumnName343,                 testLongLongLongColumnName344,                 testLongLongLongColumnName345,                 testLongLongLongColumnName346,                 testLongLongLongColumnName347,                 testLongLongLongColumnName348,                 testLongLongLongColumnName349,                 testLongLongLongColumnName350         System.out.printlnasList        codepre
Positive 488 pI have this strange problem with codestdoutcodecodestderrcode.  p  pI want to apologize for not being able to put here the original code, its too long  too many libraries dependent etc...br So please let me know if you ever encountered anything like it, or what may cause this issue without getting the original code, only the idea and examples of the simple things I tried to dop  ul liIm using codeg GCC 4.4.6 20120305 Red Hat 4.4.64code on codeRHEL 6.3codeli liI couldnt isolate the problem for putting it here, Ill give code examples of what I did.li licodefprintf  printf  stdcoutcode stops working after a while. Im using codeboostasioioservicecode with codedeadlinetimercode in order to call a codemyprintcode function.br This codemyprintcode function prints to screen every code1 secondcode some information.li ul  pIn order to print, I use alignments, like the followingp  precodefprintfstdout, sn, printWidth, someEnumToStr[i] fprintfstdout, sn, aString fprintfstdout, un, num codepre  pWhile codeaStringcode is a codestdstringcode. Sometimes I construct codeaStringcode from codestdostringstreamcode.br Sometimes I construct it with codesnprintfcode.p  ul liI have an codestdmapcode with information, exactly 16 elements inside the map. I iterate over it, and for each element I try to print data with the example of codefprintfcode above.li liFor an unknown reason, the line of element code16code isnt printed.li liIf I call the executable, and redirect codestdoutcode to a file code.a.out gt aaa.txtcode the line of element code16code is getting printed.li liIf I open a new codeFILEcode and codefprintfcode to this file, again, everything is getting printed all lines, including line of element code16codeli liBefore using codefprintfcode I tried to use codestdcoutcode and alignments with codestdcout.widthprintWidth ltlt stdleftcode..., The same behavior happened, but when line code16code wasnt drawn, codestdoutcode got stuck I mean, the program still worked, but nothing was printed to codestdoutcode never again. I had to call codestdcout.clearcode for it to work again. Since a point in the code, which I couldnt lay my hands on, codestdcout.failbitcode and codebadbitcode were code1code.li liIf I run the code with codevalgrindcode this behavior doesnt happen. codevalgrindcode doesnt say anything wrong.li liIf I run it with codegdbcode it happens, but codegdbcode doesnt say anything wrong.li liIf I run it in an IDE codeclioncode in debug mode, it doesnt happen.li liIf I run it in IDE, without debug, it happens.li liI figure it depends on the codeprintWidthcode I give for the alignment in codefprintfcode  When codeprintWidthcode is bigger, it happens sooner when its smaller, line code16code is randomly getting printed.li liAnother important thing it happens more frequently when there is more to print.li liI tried to give codestdcoutcode a bigger buffer not his default and it didnt work.li liI tried to buffer all of the output into a buffer instead of printing each line, then to only codefprintfcode once. Same behavior happens.li liI didnt find anywhere in the code I try to print a codeNULLcode pointer.li liI print with codencode every couple of codefprintfscode, and do codefflushcode in the end of codemyprintcodeli ul  pPlease let me know if you know anything.p  hr  pIllustrationp  precodedeadlinetimer..... every 1 sec... myprint boostasioioservice.run  myprint       forstdmapltgtiterator... begin, end, it....          fprintfs....       codepre
Negative 488 pShould links to external sites set targetblank  E.g. I am on www.acme.net and have a link to www.otherplace.net, should that link bep  blockquote   plta hrefhttpbbwww.otherplace.net targetblankotherplaces websiteltap blockquote  porp  blockquote   plta hrefhttpbbwww.otherplace.netotherplaces websitelta p blockquote  pI was under the impression that using blank to sites outside your domain was best practice, but now I am being told otherwise.p
Negative 488 pI am using checkstyle version 5.6.1 .I get this error when I try to use a user defined check style template p  pcannot initialize module TreeWalker  TreeWalker is not allowed as a parent of RegexpHeaderp
Negative 488 pI submit my form and it should find the value of FirstName and LastName in my MySQL database and send me to a success page.  Instead Im being sent to the fail page.  I cannot see what is wrong with it.p  phere is my html form login1.phpp  precodeltform nameloginForm actionloginCheck.php methodpostgt       ltinput typetext namefirstnamefieldname idfirstnamefieldID valueFirst Name gt   ltinput typetext namelastnamefieldname idlastnamefieldID valueLast Name gt  ltinput typesubmit nameSubmit valueSubmit gt ltformgt codepre  phere is the phpp  precodeltphp     sessionstart     SESSION[firstnamesession]  POST[firstnamefieldname]     SESSION[lastnamesession]  POST[lastnamefieldname]      requireconfigphp.php     con  mysqliconnectDBHOST, DBUSER, DBPASS, DBNAME or dieCould not connect to database server.      myfirstnamePOST[firstnamefieldname]      mylastnamePOST[lastnamefieldname]      result  mysqliquerycon,SELECT  FROM test WHERE FirstNamemyfirstname AND LastNamemylastname     countmysqlinumrowsresult      ifcountgt0     success                  headerLocation loggedin.php         exit          else     fail         headerLocation login1.php         exit      gt codepre
Negative 488 pIn codeSymfony2code I have built an intranet. It currently uses the codeFOSUserBundlecode and an codeLDAP bundlecode to log users in, and I would like to add the functionality to log in user from their session in Windows.p  pI found a hrefhttpsiphon9.netloune200710simplelightweightntlminphpan NTLM scripta for PHP and a hrefhttpsiphon9.netloune201011phpntlmnowworkingwithlighttpdfastcgian updated versiona of it, but I havent been able to incorporate them into Symfony2.p  pI also found a hrefhttpsgithub.comecoadNtlmBundlean NTLM bundle for Symfony2a, but it was written for an older version of Symfony and it is not maintained anymore. I was unable to rewrite it and get it to work.p  pMy question is how could I automatically log in users from their Windows session in my Symfony2app, in addition to the already present codeLDAPcode functionality What would be the best and easiest wayp
Negative 488 pI have added a UserNamePasswordValidator class to my WCF Service.  It appears to work fine.  The FaultException and custom error message appears as expected when I supply wrong credentials.  And it passes without an exception with correct credentials.p  pMy problem is that I cannot hit a breakpoint placed within the Validate method.  I can hit breakpoints everywhere else in the project.p  pAny suggestions  Test code is belowp  precodeusing System.IdentityModel.Selectors using System.ServiceModel  namespace WcfTestService1      public class Service1Authenticator  UserNamePasswordValidator              public override void Validatestring userName, string password                      if userName  testUser ampamp password  testPassword                              Specific Exception                 throw new SecurityTokenExceptionInvalid Username or Password                  Or Specific Message                 throw new FaultExceptionCustom message to prove this works                             codepre
Negative 488 pCurrently I am able to select attributes in an XML document because they are uniquely identifiable, like thisp  precodeXmlDocument weatherData  new XmlDocument weatherData.Loadquery  XmlNode channel  weatherData.SelectSingleNoderss.SelectSingleNodechannel XmlNamespaceManager man  new XmlNamespaceManagerweatherData.NameTable man.AddNamespaceyweather, httpxml.weather.yahoo.comnsrss1.0  town             channel.SelectSingleNodeyweatherlocation, man.Attributes[city].Value codepre  pBut how do I select the text attribute from a node of the same name yweatherforecastp  precodeltyweatherforecast daySat textSunny code32gt ltyweatherforecast daySun textPartly Cloudy code30gt ltyweatherforecast dayMon textAM Showers code39gt ltyweatherforecast dayTue textCloudy code26gt ltyweatherforecast dayWed textCloudyWind code24gt codepre  pIs there a conditional statement I can use to only select the codetextcode attribute where the codedaycode attribute is equal to Monp
Negative 488 pIm accustomed to seeing No persister for errors when I dont have a class map defined for one of my classes, but not for an internal NHibernate class.p  pIm the getting this exception when I attempt to access the codeTaskscode collection defined in the following relationship. It doesnt make a difference if the collection is eager or lazy loaded, except that if it is lazy loaded, the exception isnt thrown until I try to access the collection, so it seems that the exception is the result of NHibernate trying to query for the collection.p  pIm using the Fluent API for the mappings, but Ive included the resulting hbm.xml file below.p  pstrongTaskContainerstrong base classp  precodepublic abstract class TaskContainer  DomainObject      public virtual IListltTaskgt Tasks  get set   codepre  pstrongTaskstrongp  precodepublic class Task  TaskContainer      public virtual TaskContainer TaskContainer  get set      public virtual string Description  get set       public virtual void AddChildTaskTask childTask              if Tasks  null                      Tasks  new ListltTaskgt                   childTask.TaskContainer  this         Tasks.AddchildTask           public static Task Getint id              return GetltTaskgtid       codepre  pstrongTaskMapstrongp  precodepublic class TaskMap  ClassMapltTaskgt      public TaskMap              Idx gt x.Id         Mapx gt x.Description         ReferencesAnyx gt x.TaskContainer             .EntityIdentifierColumnTaskContainerId             .EntityTypeColumnTaskContainerDiscriminator             .IdentityTypeltintgt             .AddMetaValueltTaskgtTask         HasManyx gt x.Tasks             .KeyColumns.AddTaskContainerId, TaskContainerDiscriminator             .PropertyRefTaskContainer             .Not.LazyLoad       codepre  pstrongExported hbm.xml mapstrongp  precodelthibernatemapping xmlnsurnnhibernatemapping2.2 defaultcascadeallgt   ltclass xmlnsurnnhibernatemapping2.2 lazyfalse nameCubeNet.Service.DomainObjects.Task, CubeNet.Service, Version1.0.0.0, Cultureneutral, PublicKeyTokennull tableTaskgt     ltid nameId typeSystem.Int32, mscorlib, Version4.0.0.0, Cultureneutral, PublicKeyTokenb77a5c561934e089gt       ltcolumn nameId gt       ltgenerator classidentity gt     ltidgt     ltbag nameTasksgt       ltkey propertyrefTaskContainergt         ltcolumn nameTaskContainerId gt         ltcolumn nameTaskContainerDiscriminator gt       ltkeygt       ltonetomany classCubeNet.Service.DomainObjects.Task, CubeNet.Service, Version1.0.0.0, Cultureneutral, PublicKeyTokennull gt     ltbaggt     ltproperty nameDescription typeSystem.String, mscorlib, Version4.0.0.0, Cultureneutral, PublicKeyTokenb77a5c561934e089gt       ltcolumn nameDescription gt     ltpropertygt     ltany idtypeSystem.Int32, mscorlib, Version4.0.0.0, Cultureneutral, PublicKeyTokenb77a5c561934e089 metatypeSystem.String, mscorlib, Version4.0.0.0, Cultureneutral, PublicKeyTokenb77a5c561934e089 nameTaskContainergt       ltmetavalue valueTask classCubeNet.Service.DomainObjects.Task, CubeNet.Service, Version1.0.0.0, Cultureneutral, PublicKeyTokennull gt       ltcolumn nameTaskContainerDiscriminator gt       ltcolumn nameTaskContainerId gt     ltanygt   ltclassgt lthibernatemappinggt codepre  pSaving records with this configuration works as expected and produces the following table with these recordsp  precodeId  Description  TaskContainerDiscriminator  TaskContainerId        1   Parent task  NULL                        NULL 2   Child Task   Task                        1 codepre  pRetrieving the either record works, but the exception is thrown when attempting to access the collection of child records.p
Negative 488 pI am messing around with pointers in C so I can fill any gaps in my knowledge and cant figure out they the following code isnt workingp  pPlease sort me out and let me know what I am doing wrongp  pI have included comments in my code describing what I think is happening at each linep  precodeinclude ltstdio.hgt include ltstring.hgt  int mainint argc, char argv[]        I declare two character pointers and C stores string1 and string2      into two memory locations big enough to hold them.  C then puts the      address of those memory locations into string1 and string2.     char string1  string1     char string2  string2       I tell c to store the string in string2 in the location refereneced       by string1     strcpystring1,string2       next I get a seg fault      return 0   codepre
Negative 488 pI am trying to open an image  picture in the Gallery builtin app from inside my application.p  pI have a URI of the picture the picture is located on the SD card.p  pDo you have any suggestionsp
Negative 488 pI found out the base 64 encoded string in .net using the following command in windows p  precode Console.WriteLineSystem.Convert.ToBase64StringEncoding.UTF8.GetBytes4 codepre  pwhich comes out to be p  precodeNA codepre  pAfter that i found out the base64 encoded string in linux using the following command  p  precodeopenssl enc base64 ltltlt 4 codepre  pwhich comes out to bep  precode NAo codepre  pAfter reading a lot from other post i made sure that in windows it uses the codeutf8code encoding. But, now problem is with i think coderncode or codencode. So how do we rectify thatp
