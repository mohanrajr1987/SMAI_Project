<p>I know how to do that while the <code>WebView</code> is part of an activity which is visible. I have my own <code>MyWebView</code> class that extends <code>WebView</code>. There I have my own overriden <code>onDraw</code> and <code>invalidate</code> methods (see below). This seems to work well.</p>  <pre><code>public class MyWebView extends WebView {     private static final String TAG = MyWebView.class.getName();      private Canvas offscreen;     private Bitmap bitmap = null;      public MyWebView(Context context) {         super(context);     }      public MyWebView(Context context, AttributeSet attrs, int defStyle) {         super(context, attrs, defStyle);     }      public MyWebView(Context context, AttributeSet attrs) {         super(context, attrs);     }      @Override     protected void onDraw(Canvas canvas) {         // We want the superclass to draw directly to the offscreen canvas         // so that we don't get an infinitely deep recursive call         if(canvas == offscreen) {             super.onDraw(offscreen);         } else {             //Our offscreen image uses the dimensions of the view rather than the canvas             bitmap = Bitmap.createBitmap(getWidth(), getHeight(), Bitmap.Config.ARGB_8888);             offscreen = new Canvas(bitmap);             super.onDraw(offscreen);             Log.d(TAG, "Drew canvas into a bitmap");         }     }      @Override     public void invalidate() {         super.invalidate();          if ((getContentHeight() &gt; 0) &amp;&amp; (getProgress() == 100)) {             // WebView has displayed some content             // Now is the time to store the bitmap into a file             FileOutputStream fos = null;             String path = Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS).getAbsolutePath() + File.separator + "image.jpeg";             File imageFile = new File(path);              try {                 fos = new FileOutputStream(imageFile);                 bitmap.compress(Bitmap.CompressFormat.JPEG, 100, fos);                 fos.close();                 Log.i(TAG, "Image stored into : " + path);             } catch (Exception e) {                 String eMessage = "Unable to save the image into: " + e.toString();                 Log.e(TAG, eMessage);             } finally {                 try {                     if (fos != null) {                         fos.close();                     }                 } catch (Exception e) {                     String eMessage = "Something went really wrong. Unable to close FileOutputStream: " + e.toString();                     Log.e(TAG, eMessage);                 }             }         }     } } </code></pre>  <p>I need to do this within an activity which does not have UI, for instance one that has theme set to <code>Theme.NoDisplay</code>.</p>  <p>Can anyone help me with that please?</p>  <p>For the activity where the theme is set to <code>Theme.NoDisplay</code> it seems like the <code>onDraw</code> method is never called while <code>invalidate</code> is called several times.</p>  <p>How to force the system to call the <code>onDraw</code> method even in an activity without UI?</p>  <p>I will be also very glad for any other approach how to get an html page rendered/saved into a bitmap. All has to happen as a background task without a user to even noticing it. <code>WebView</code> is probably not a must have but to me it seems very useful.</p>