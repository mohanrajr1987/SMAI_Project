<p>I have a set of soap webservices that are tightly coupled to an application within the same architecture but I need it to also be an API for other applications to hook into.</p>  <p>At the moment, the services use a parameter (and method) structure like this</p>  <p><strong>Entity GetEntity(int entityId) Entity GetEntityByName(string entityName)</strong> .... etc.</p>  <p>In the case of creates I use: <strong>void CreateEntity(Entity entity)</strong></p>  <p>I am wondering though would it be better to do it like this:</p>  <p><strong>EntityResponse GetEntity(EntityRequest requestObj)</strong> ..... </p>  <p>and in the requestObj I have id, entityName and depending what the user supplies, I can perform either function.</p>  <p>and for the create it would be:</p>  <p><strong>CreateEntityResponse CreateEntity(CreateEntityRequest requestObj).</strong></p>  <p>My thinking is that by doing it like this, the API can change internally...add new parameters etc without immediately breaking any integration that has already been done.</p>