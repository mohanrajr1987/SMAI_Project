<p>In my webservice I have a page for inserting values of longitude and latitude. When successfully inserted into the database a new row is created in a table and with a key "id" (INT) which is auto increment.</p>  <p>It returns a JSON object: </p>  <blockquote>   <p>{"success":1,"message":"Spot Successfully Added!"}</p> </blockquote>  <p>My problem: I want to add the id that is created for each row to the resulting JSON object. Like this:</p>  <blockquote>   <p>{"success":1,"message":"Spot Successfully Added!","id":54}</p> </blockquote>  <p>This is what I've got so far. Rows are inserted into table, but I fail to display my id in the JSON Object:</p>  <blockquote>   <p>{"success":1,"message":"Spot Successfully Added!","like_id":null}</p> </blockquote>  <p><strong>idtest.php</strong></p>  <pre><code>&lt;?php //load and connect to MySQL database stuff require("config.inc.php");  if (!empty($_POST)) {       //initial query     if(isset($_POST['user_id']) &amp;&amp; !empty($_POST['user_id'])) {         $query = "INSERT INTO spot ( latitude, longitude, user_id ) VALUES ( :lat, :long, :uid ) ";         //Update query         $query_params = array(             ':lat' =&gt; $_POST['latitude'],             ':long' =&gt; $_POST['longitude'],             ':uid' =&gt; $_POST['user_id']             );      } else {         $query = "INSERT INTO spot ( latitude, longitude ) VALUES ( :lat, :long ) ";         //Update query         $query_params = array(             ':lat' =&gt; $_POST['latitude'],             ':long' =&gt; $_POST['longitude']             );     }     //execute query     try {         $stmt   = $db-&gt;prepare($query);         $result = $stmt-&gt;execute($query_params);     }     catch (PDOException $ex) {         // For testing, you could use a die and message.          //die("Failed to run query: " . $ex-&gt;getMessage());          //or just use this use this one:         $response["success"] = 0;         $response["message"] = "Database Error. Couldn't add lat/long-pair!";         die(json_encode($response));     }      $latt = $_POST['latitude'];     $longg = $_POST['longitude'];      $getId = "SELECT id FROM spot WHERE latitude=$latt AND longitude=$longg LIMIT 1";     echo $getId;     //execute query     try {         $stmt2   = $db-&gt;prepare($getId);         $result2 = $stmt2-&gt;execute($query_params);     }     catch (PDOException $ex) {         // For testing, you could use a die and message.          //die("Failed to run query: " . $ex-&gt;getMessage());          //or just use this use this one:         $response["success"] = 0;         $response["message"] = "Database Error. Couldn't retrieve like_id!";         die(json_encode($response));     }      $row = $stmt2-&gt;fetchAll();     if($row) {      $response["success"] = 1;     $response["message"] = "Spot Successfully Added!";     $response["like_id"] = $row["id"];     echo json_encode($response);     }  } else {     ?&gt;     &lt;h1&gt;Registrer GPS-koordinater&lt;/h1&gt;     &lt;form action="idtest.php" method="post"&gt;         Latitude:&lt;br /&gt;         &lt;input type="text" name="latitude" value="" /&gt;         &lt;br /&gt;&lt;br /&gt;         Longitude:&lt;br /&gt;         &lt;input type="text" name="longitude" value="" /&gt;         &lt;br /&gt;&lt;br /&gt;         Google ID:&lt;br /&gt;         &lt;input type="text" name="user_id" value="" /&gt;         &lt;br /&gt;&lt;br /&gt;         &lt;input type="submit" value="Opprett kolonne i 'spot'" /&gt;     &lt;/form&gt;     &lt;?php }  ?&gt; </code></pre>