<p>I have a class named <code>webserviceCall</code>.</p>  <p>This is my class structure :</p>  <p><code>Constructor</code> ---></p>  <p>Initiate webservice clients and DB handler class and some properties :</p>  <pre><code>public function __construct() {      $this-&gt;username = $GLOBALS['WEBSRVC']['username'];     $this-&gt;password = $GLOBALS['WEBSRVC']['password'];     $this-&gt;api      = $GLOBALS['WEBSRVC']['api'];      $this-&gt;loginClient = new SoapClient(NULL, array(           'location' =&gt; "http://domain.com/webservice/kks/server.php",           'uri'      =&gt; "urn://test/webservice") );      $this-&gt;booksClient = new SoapClient(null, array(           'location' =&gt; "http://domain.com/webservice/kks/books.php",           'uri'      =&gt; "urn://test/webservice"         ));       $this-&gt;shopClient  = new SoapClient(null, array(           'location' =&gt; "http://domain.com/webservice/kks/newShop.php",           'uri'      =&gt; "urn://test/webservice/shop"         ) );       $this-&gt;db = new dbHandler($GLOBALS['DBVAR']['dbn'], $GLOBALS['DBVAR']['usn'], $GLOBALS['DBVAR']['psw']);      $this-&gt;param = self::freshLogin( $this-&gt;username, $this-&gt;password, $this-&gt;api);  }//__Construct </code></pre>  <p>And there's a method for check Login, based on webservice needs:</p>  <pre><code>protected function freshLogin($username, $password, $api) {     $currentInfo = $this-&gt;db-&gt;simple_search('webservice');      $token = ( ($currentInfo[0]['token'] != '')  ? $currentInfo[0]['token'] : false );      if( $token == false )     {         $token = $this-&gt;loginClient-&gt;__soapCall('authenticate', array($currentInfo[0]['username'], $currentInfo[0]['password'], $currentInfo[0]['api']) );          //update token in table         $updateToken = $this-&gt;db-&gt;update_single('webservice', 'token', $token, true, 'api', $api);          return $token . '||' . $api;     }//token is empty - first login      else     {         $checkToken = $this-&gt;loginClient-&gt;__soapCall('checkToken', array($token, $api) );          if( isset($checkToken) &amp;&amp; $checkToken &gt; 0 )         {             return $token . '||' . $api;            }//if token is valid          else         {             $token = $this-&gt;loginClient-&gt;__soapCall('authenticate', array($currentInfo[0]['username'], $currentInfo[0]['password'], $currentInfo[0]['api']) );              //update token in table             $updateToken = $this-&gt;db-&gt;update_single('webservice', 'token', $token, true, 'api', $api);              return $token . '||' . $api;            }//authenticate again, save token and create param value      }//token exists }//function freshLogin </code></pre>  <p><strong>And finally, there's a method for transact webservice :</strong></p>  <pre><code>public function getBooks() {     return $this-&gt;booksClient-&gt;__soapCall('getAllBooks', array($this-&gt;param) );     }//function getAllBooks </code></pre>  <p>When I check <code>getBooks()</code> function with <code>getAllBooks</code> method, it seems the browser is waiting for the response, and there's no result. This is error:</p>  <blockquote>   <p>Maximum execution time of 30 seconds exceeded in C:\xampp\htdocs\ketabTheme\PHP\classes\webserviceCall.php on line 114</p> </blockquote>  <p>But When I check exactly the same request in another file, out of a class, it's OK. Besides, when I call another method of webservice inside <code>getBooks</code> method, again everything is fine.</p>  <p>Would you please help me to find out what's wrong here?</p>  <p><strong><em>Note :</em></strong> <code>getBooks</code> method should have an array with 1935 index in result.</p>  <p><br><br><br><br> <strong>UPDATE :</strong> When I check this request in another file outside a class, this is the request-response  timeline :</p>  <p><a href="http://i.stack.imgur.com/ioTAZ.png" rel="nofollow"><img src="http://i.stack.imgur.com/ioTAZ.png" alt="enter image description here"></a></p>