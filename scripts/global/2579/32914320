<p>Error: <code>Could not find a base address that matches scheme https for the endpoint with binding WebHttpBinding. Registered base address schemes are [http].</code></p>  <p>I've searched other answers and tried out different things, but my web service still isn't working. Note: I am new at this, but have experience in dev/web service. I only need the service to run on HTTPS, btw.</p>  <p>Web.config:</p>  <pre><code>&lt;system.serviceModel&gt;     &lt;bindings&gt;         &lt;webHttpBinding&gt;             &lt;binding name="bindingHTTPS" crossDomainScriptAccessEnabled="true"&gt;                 &lt;security mode="Transport"&gt;                     &lt;transport clientCredentialType="None"&gt;&lt;/transport&gt;                 &lt;/security&gt;             &lt;/binding&gt;             &lt;binding name="httpbind" crossDomainScriptAccessEnabled="true"&gt;&lt;/binding&gt;         &lt;/webHttpBinding&gt;     &lt;/bindings&gt;     &lt;services&gt;         &lt;service name="Personnel.Personnel" behaviorConfiguration="personnelBehavior"&gt;             &lt;endpoint address="" binding="webHttpBinding" bindingConfiguration="bindingHTTPS" contract="Personnel.IPersonnel" behaviorConfiguration="web"&gt;&lt;/endpoint&gt;             &lt;endpoint address="" binding="webHttpBinding" bindingConfiguration="httpbind" contract="Personnel.IPersonnel" behaviorConfiguration="web"&gt;&lt;/endpoint&gt;         &lt;/service&gt;     &lt;/services&gt;     &lt;behaviors&gt;         &lt;serviceBehaviors&gt;             &lt;behavior name="personnelBehavior"&gt;                 &lt;serviceMetadata httpGetEnabled="true"/&gt;                 &lt;serviceDebug includeExceptionDetailInFaults="false"/&gt;             &lt;/behavior&gt;             &lt;behavior&gt;                 &lt;!-- To avoid disclosing metadata information, set the values below to false before deployment --&gt;                 &lt;serviceMetadata httpGetEnabled="true" httpsGetEnabled="true"/&gt;                 &lt;!-- To receive exception details in faults for debugging purposes, set the value below to true.  Set to false before deployment to avoid disclosing exception information --&gt;                 &lt;serviceDebug includeExceptionDetailInFaults="false"/&gt;             &lt;/behavior&gt;         &lt;/serviceBehaviors&gt;         &lt;endpointBehaviors&gt;             &lt;behavior name="web"&gt;                 &lt;webHttp/&gt;             &lt;/behavior&gt;         &lt;/endpointBehaviors&gt;     &lt;/behaviors&gt;     &lt;protocolMapping&gt;         &lt;add binding="basicHttpsBinding" scheme="https" /&gt;     &lt;/protocolMapping&gt;     &lt;serviceHostingEnvironment aspNetCompatibilityEnabled="true" multipleSiteBindingsEnabled="true" /&gt; &lt;/system.serviceModel&gt; </code></pre>  <p>It worked fine until I added another method? So now I have two methods? in my web service:</p>  <pre><code>[WebGet(UriTemplate="createOffboardTask/{resourceName}/{lastDay}/{submitter}",ResponseFormat=WebMessageFormat.Json, BodyStyle=WebMessageBodyStyle.Wrapped)]         public string createOffboardTask(string resourceName, string lastDay, string submitter)         {             //do some stuff         }  [WebGet(UriTemplate = "createOnboardTask/{resourceName}/{firstDay}/{submitter}/{itemID}", ResponseFormat = WebMessageFormat.Json, BodyStyle = WebMessageBodyStyle.Wrapped)]             public string createOnboardTask(string resourceName, string firstDay, string submitter, string itemID)             {                 //do some stuff             } </code></pre>  <p>And I do have both operation contracts in the Ifile:</p>  <pre><code>[OperationContract]         string createOffboardTask(string resourceName, string lastDay, string submitter);  [OperationContract]         string createOnboardTask(string resourceName, string firstDay, string submitter, string ID); </code></pre>