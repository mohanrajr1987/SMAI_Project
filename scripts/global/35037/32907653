<p>I'm new to LoopBack but I love it so far. I need to filter a find all based on user dynamic role.</p>  <p>For instance I have a <code>Project</code> collection with a state property. If a specific project is in <code>draft</code> state only the creator can CRUD it, and is is managed by a <a href="https://docs.strongloop.com/display/public/LB/Defining+and+using+roles#Definingandusingroles-Dynamicroles" rel="nofollow">dynamic role</a>. The other users can't even view them.</p>  <p>Example: instance operation (<code>findOne</code>, <code>findById</code> where I have the <code>ctx.req.params.id</code>) I used <code>app.models.ACL.checkAccessForToken</code> and ACL, it works great.</p>  <p>But.. what to do for static operation where I don't have the id? I can't use <code>checkAccessForToken</code>..</p>  <p>I'm new to non-relational database and in <a href="https://www.allbuttonspressed.com/blog/django/2010/09/JOINs-via-denormalization-for-NoSQL-coders-Part-1-Intro" rel="nofollow">this nice article</a> I read about de-normalization but honestly I don't like it and I'm sure that a complete framework like LoopBack can handle this problem in a more structured way (I think that filter find all operation by authorisation is a common feature in so many project).</p>  <p>So.. is there any alternative/standard way in LoopBack? Thanks!</p>