<p>I want to know how to evaluate one tool over another.</p>  <p>My major concern is as following:  </p>  <p>In google datastore, we define 'kind'. Each 'entities' has 'properties'.<br> Then the datastore backends use those properties to index data for future query. The query itself use almost the same idea in SQL, though different syntax, to filter data and find what we want.<br> If you index every property, the index metadata would be even bigger than real data.</p>  <p>Google bigquery uses it's dialect of SQL. And it's fully managed so users don't have to worry about the scaling problem. </p>  <p>So my question is, what's the purpose of using nosql datastore, spending so many computing cycles and storage for indexes so that we could just query it like we naturally could in bigquery SQL database?</p>  <p>Please share with me your evaluation process.  Share with me what's the missing piece in my understandings.  Thanks.</p>