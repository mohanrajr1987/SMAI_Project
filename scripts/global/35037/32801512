<p>I have a question regarding how I should set up a database in Parse.com to have scalable queries. Below, is a picture of a simplified example of what I am trying to do.</p>  <p><a href="http://i.stack.imgur.com/Xb6V6.jpg" rel="nofollow"><img src="http://i.stack.imgur.com/Xb6V6.jpg" alt="First Approach"></a></p>  <p>So, as you can see with this idea, there is a user, that can create a <code>ChatMessage</code> or a <code>MainMessage</code>. The <code>MainMessage</code> also can have <code>Comments</code> posted to it. However, in a "feed" I will want to display both <code>ChatMessages</code> and <code>MainMessages</code> by <code>dateCreated</code> and I don't think that it will be an efficient query to get both <code>ChatMessages</code> and then <code>MainMessages</code>, and then sort. </p>  <p>To simplify, I have this...</p>  <p><a href="http://i.stack.imgur.com/77GdO.jpg" rel="nofollow"><img src="http://i.stack.imgur.com/77GdO.jpg" alt="Second Approach"></a></p>  <p>As you can see, I made both <code>ChatMessage</code> and <code>MainMessage</code> from the first approach into a single <code>Message</code> with all of the attributes for both <code>ChatMessage</code> and <code>MainMessage</code> with the additional <code>type</code> attribute to distinguish between the two. Is it okay that in the new <code>Message</code> that will have multiple unused attributes based on type? Is that inefficient in Parse.com? Hypothetically, if <code>MainMessage</code> had way more (say 10) attributes than <code>ChatMessage</code> would this still be okay? I believe the second approach is better because I can simplify the query for the "feed". However, if there is anybody with anything to say on how I should be setting up the database, any comments are greatly appreciated. Thanks.</p>