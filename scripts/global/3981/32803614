<p>I have created an external class that overrides <code>JTextField</code>. In the class I have added a DocumentListener which replaces prevents a certain character from being entered. Below is code (its not exact code, for purpose of simplicity of this question):</p>  <pre><code>import javax.swing.JTextField; import javax.swing.event.DocumentEvent; import javax.swing.event.DocumentListener;  class test extends JTextField{ private String filteredText;  public void getDefaultText(){ super.getText(); }  public String getText(){ return filteredText; }  public void remword(){ super.getDocument().addDocumentListener(new DocumentListener() {              @Override             public void changedUpdate(DocumentEvent arg0) {             }              @Override             public void insertUpdate(DocumentEvent arg0) {                 Runnable ru = new Runnable() {                     @Override                     public void run() {                                 String finalText = getDefaultText().replace("xyz", "asd");                                 setText(finalText);                                 filteredText = finalText;                         }                     }                 };                 SwingUtilities.invokeLater(ru);          }              @Override             public void removeUpdate(DocumentEvent arg0) {             } }); } } </code></pre>  <p>Now this code works fine unless I use the <code>getText()</code> method which returns error <code>Attempt to mutate in notificaton</code>. I have tried messing around with <code>synchronized</code> and <code>Runnable</code> to no avail.</p>