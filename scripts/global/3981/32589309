<p>Here's pretty much my issue in steps. 1. I shuffle my deck and display cards to make sure it shuffled (works perfectly). 2. I play my blackjack game, work perfectly. 3. I shuffle my deck again and display cards again and it doesnt't work. Answers to some questions you guys might ask: 1. The whole program is in a big while loop, the program doesn't end unless i select exit game as an option. 2. I have tried to display my deck again without shuffling it a second time and it works fine.</p>  <pre><code> public Card deal()  {      Card temp;      temp = storage[top];      storage[top] = null;      top++;      return temp;  }   public void shuffle()  {  int n = storage.length; for (int i = 0; i &lt; storage.length; i++)      {     // Get a random index of the array past i.     int random = i + (int) (Math.random() * (n - i));     // Swap the random element with the present element.     Card randomElement = storage[random];     storage[random] = storage[i];     storage[i] = randomElement;  }  }  public void display () {     for (int i = top; i&lt;52; i++)         storage[i].display();  } </code></pre>  <p>Here is my stack trace Exception in thread "main" java.lang.NullPointerException J of C     at blackjack.Deck.display(Deck.java:104)     at blackjack.BlackJack.main(BlackJack.java:55) Java Result: 1</p>  <pre><code>case 3:     {       myDeck.display();       break;     } </code></pre>  <p>and my code from deck.display</p>  <pre><code>public void display () {     for (int i = top; i&lt;storage.length; i++)         storage[i].display();  } </code></pre>