<p>I have searched everywhere for a solution to this problem but for whatever reason I cannot find a clear answer as to how I can carry out this task.  </p>  <p>I have built a very simple server with node.js that accesses two numbers from a website API and outputs them onto a localhost port on my computer as shown below:</p>  <pre><code>var request = require("request"); var http    = require('http');  var server  = http.createServer(onRequest);  server.listen(3000);   //---------------------------------------------------- function onRequest(req, res){      var parkingUrl = 'https://www.jmu.edu/cgi-bin/parking_get_sign_data.cgi?date=' + (new Date()).getTime();      request(parkingUrl, function (error, response, body) {          var data   = error;         var status = 404;          if(!error){             status = 200;             data = {                 championStatus : getStatus(body, '2'),                  warsawStatus   : getStatus(body, '10')             };         }          res.writeHead(status, { 'Content-Type': 'application/json', "Access-Control-Allow-Origin":"*" });         res.write(JSON.stringify(data));         res.end();     }); }   //---------------------------------------------------- function getStatus(ss, si){     var status = ss;      status = status.split("&lt;SignId&gt;"+si+"&lt;/SignId&gt;");      status = status[1];     status = status.split("&lt;Display&gt;");      status = status[1];     status = status.split("&lt;/Display&gt;");      status = status[0];     status = status.replace(' ','');     if(isNaN(status)){         // do nothing      } else {         status = parseInt(status);     }      if( status == 'Errors'){status = '';}     else if(status != 'FULL' &amp;&amp; isNaN(status)){status = 'Unavailable';}     else if(status != '' &amp;&amp; status != 'FULL'  &amp;&amp; status != 'OPEN'){         if(status == '   1'){status = status + ' space available'; }         else{status = status + ' spaces available'; }     }      return status; } </code></pre>  <p>This works great when I run the above node.js server from the command line and I am able to reference the data displayed on the localhost port with this piece of code in a different javascript based project:</p>  <pre><code>httpGetAsync("http://localhost:3000/", function(res){     var data = JSON.parse(res);     console.log(data); }); </code></pre>  <p>My question is how can I take my server and make it accessible to applications without having to go into the command line and run the server file?  Is there a way I can host it online instead of locally so that I can distribute the application and anyone with the application can pull from this server?  What would be the best way to go about accomplishing this task?</p>