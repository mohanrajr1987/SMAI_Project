<p>I use python 3.4 and communicate with Excel using COM.</p>  <p>I want to transfer a vector to Excel using python. When I do the transfer in sequence it works fine. 1,'Test' and 3 appear on the Excel ws.</p>  <p>But the sequence method is slow and in order to speed up I would like to tranfer the vector in one step. Like</p>  <pre><code>Range.value = (1,'Test',3) .  </code></pre>  <p>When I do this I see three 1's on the Excel side. It has something to do with the data type because when I use the formating/data type below it works fine.</p>  <hr>  <pre><code>Range.value = ((1,),('Test'),(3,))  </code></pre>  <p>What I want to do is to transfer a 200+ elements vector with number and strings mixed. How can I create the vector with the working format above using a for loop? Below is my test program.</p>  <pre><code>from win32com.client import Dispatch xlApp=Dispatch("Excel.Application") xlApp.visible=1 #  xlApp.Workbooks.Add() Range = xlApp.ActiveWorkbook.ActiveSheet.Range("C2:C4") Range2 = xlApp.ActiveWorkbook.ActiveSheet.Range("C7;D9") vector=(1,'test3',3)  # Elements transfered to Excel one by one xlApp.ActiveWorkbook.ActiveSheet.Range('C2').value = vector[0] xlApp.ActiveWorkbook.ActiveSheet.Range('C3').value = vector[1] xlApp.ActiveWorkbook.ActiveSheet.Range('C4').value = vector[2] print ('Elements transfered to Excel one by one:', vector)   # Vector read from Excel vector2 = Range.value print('Elements read from Excel using vector: ',vector2)  # Elements transfered to Excel using vector Range.value = vector print('Elements transfered to Excel using vector: ',vector)  # Element read from Excel using vector vector3 = Range.value print('Elements transfered from Excel using vector: ',vector3)  # Elements transfered to/from Excel using vector with another data type Range.value = ((1,),('test5',),(3,)) print('Elements transfered to/from Excel using vector with another data     type: ',Range.Value) </code></pre>