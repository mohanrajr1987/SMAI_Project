<p>While I have found many instances of this question on SO, none of the solutions I have implemented have solved my problem; hopefully you can help me solve this riddle. <em>Note: This is my first foray into the world of COM objects, so my ignorance is as deep as it is wide.</em></p>  <p>As a beginning, I am using Adrian Brown's <a href="http://adriandev.blogspot.com/2008/01/listening-to-calendar-events-with.html" rel="nofollow">Outlook Add-In code</a>.  I won't duplicate his <code>CalendarMonitor</code> class entirely; here are the relevant parts:</p>  <pre><code>public class CalendarMonitor {     private ItemsEvents_ItemAddEventHandler itemAddEventHandler;     public event EventHandler&lt;EventArgs&lt;AppointmentItem&gt;&gt; AppointmentAdded = delegate { };      public CalendarMonitor(Explorer explorer)     {         _calendarItems = new List&lt;Items&gt;();         HookupDefaultCalendarEvents(session);     }      private void HookupDefaultCalendarEvents(_NameSpace session)     {         var folder = session.GetDefaultFolder(OlDefaultFolders.olFolderCalendar);         if (folder == null) return;          try         {             HookupCalendarEvents(folder);         }         finally         {             Marshal.ReleaseComObject(folder);             folder = null;         }     }      private void HookupCalendarEvents(MAPIFolder calendarFolder)     {         var items = calendarFolder.Items;          _calendarItems.Add(items);          // Add listeners         itemAddEventHandler = new ItemsEvents_ItemAddEventHandler(CalendarItems_ItemAdd);         items.ItemAdd += itemAddEventHandler;     }      private void CalendarItems_ItemAdd(object obj)     {         var appointment = (obj as AppointmentItem);         if (appointment == null) return;          try         {             AppointmentAdded(this, new EventArgs&lt;AppointmentItem&gt;(appointment));         }         finally         {             Marshal.ReleaseComObject(appointment);             appointment = null;         }     } </code></pre>  <p>Bits not relevant to adding appointments have been redacted.</p>  <p>I instantiate the <code>CalendarMonitor</code> class when I spool up the Add-in, and do the work in the AppointmentAdded event, <em>including adding a UserProperty to the AppointmentItem</em>:</p>  <pre><code>private void ThisAddIn_Startup(object sender, EventArgs e) {     _calendarMonitor = new CalendarMonitor(Application.ActiveExplorer());     _calendarMonitor.AppointmentAdded += monitor_AppointmentAdded; }  private async void monitor_AppointmentAdded(object sender, EventArgs&lt;AppointmentItem&gt; e) {     var item = e.Value;      Debug.Print("Outlook Appointment Added: {0}", item.GlobalAppointmentID);      try     {         var result = await GCalUtils.AddEventAsync(item);          //store a reference to the GCal Event for later.         AddUserProperty(item, Resources.GCalId, result.Id);          Debug.Print("GCal Appointment Added: {0}", result.Id);     }     catch (GoogleApiException ex)     {         PrintToDebug(ex);     }     finally     {         Marshal.ReleaseComObject(item);         item = null;     } } </code></pre>  <p>The error is thrown here, where I try to add a UserProperty to the AppointmentItem.  I have followed the best example I could find:</p>  <pre><code>private void AddUserProperty(AppointmentItem item, string propertyName, object value) {     UserProperties userProperties = null;     UserProperty userProperty = null;      try     {         userProperties = item.UserProperties;         userProperty = userProperties.Add(propertyName, OlUserPropertyType.olText);         userProperty.Value = value;         item.Save();     }     catch (Exception ex)     {         Debug.Print("Error setting User Properties:");         PrintToDebug(ex);     }     finally     {         if (userProperty != null) Marshal.ReleaseComObject(userProperty);         if (userProperties != null) Marshal.ReleaseComObject(userProperties);         userProperty = null;         userProperties = null;     } } </code></pre>  <p>... but it chokes on when I try to add the UserProperty to the AppointmentItem. I get the ever-popular error: <code>COM object that has been separated from its underlying RCW cannot be used.</code> In all honesty, I have no idea what I'm doing; so I'm desperately seeking a Jedi Master to my Padawan.</p>