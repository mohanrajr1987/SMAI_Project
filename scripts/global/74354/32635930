<p>I've been working with some legacy code and I've some troubles. I have enum written by other guy and now I should write into database some data and read from it. Here some examples:</p>  <p>Here's the enum</p>  <pre><code>object MarketType extends scala.Enumeration {   type MarketType = Value   val Continent, Country, State, City = Value   implicit val marketTypeReads = EnumUtility.enumFormat(MarketType) }  case class Market(   id: ObjectId = new ObjectId,   name: String,   marketType: Option[MarketType] = None, )  object Market {   val writes = new Writes[Market] {     def writes(o: Market) = Json.obj(       "id" -&gt; o.id,       "name" -&gt; o.name,       "type" -&gt; o.marketType ) }   val reads: Reads[Market] = (     (JsPath \ "id").readNullable[ObjectId].map(validateAndFetchObjectId) and       (JsPath \ "name").read[String] and       (JsPath \ "type").read[MarketType] )(Market.apply _)   implicit val format: Format[Market] = Format(reads, writes) </code></pre>  <p>Here's JSON which I take from front-end and what I should write to the database :</p>  <pre><code>{"name":"Name","type":"state","description":"Desc"} </code></pre>