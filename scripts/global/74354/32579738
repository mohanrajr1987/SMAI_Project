<p>I am trying to implement the Play's Authentication by extending the <code>Security.Authenticator</code> class. I am using Play 2.4.2 (Damiya ) and here is my code.</p>  <pre><code>public class Secured extends Security.Authenticator{      public Secured() {         Logger.info("In secured constructor....");     }      @Override     public String getUsername(Context context) {         return context.session().get("loggedin_user");     }      @Override     public Result onUnauthorized(Context context) {         return redirect(routes.Application.index());     } } </code></pre>  <p>I think this class which extends Security.Authenticator acts as J2EE filter intercepting every single request. But I haven't seen a single time the constructor logger printed. Correct me if I misunderstood the concept of Security.Authenticator, let me know how it works.</p>  <p>I tried to use <code>@Security.Authenticated</code> on top of one of the action method in controller and the class is not even compiling despite throwing the following compile time error.</p>  <pre><code>package Security does not exist Security.Authenitcated </code></pre>  <p>I guess some library is missing, Is the process of Play's Authentication changed in Play 2.4.2 version? Does this Secured class filters all requests checking for authentication?</p>  <p><strong>Update:</strong> After keeping the @Authenticated annotation from <code>play.mvc.Security.Authenticated</code> on top the action method in controller request is filtered at Secured class. I noticed that each time request is passed through the Security class, it's constructors logger message is printed. Does it mean each time a new Secured object is created?</p>