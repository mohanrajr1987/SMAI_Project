<p>I come from J2EE background and am trying to write an application with Play and angular js. The application is basically a booking app which basically looks like this :</p>  <p><a href="https://gb.youcanbook.me/demos.jsp?template=generic&amp;theme=city" rel="nofollow">https://gb.youcanbook.me/demos.jsp?template=generic&amp;theme=city</a></p>  <p>Up until now all things were nice and easy but now there's a design decision that I need to make. In the Play framework, as I understand, the routing happens under Controller and the business logic goes under Model classes. Model classes essentially are EBean annotated domain classes. As per my limited understanding, this is where all the heavy lifting of the application/business logic needs to happen.</p>  <p>Coming from a J2EE background, my mind poses a question. Is this the right way to go? I know I can easily create another service class and just call them straight away from the Controller. But, is that the right way to go? Or has Play! just given us the freedom to go whichever route we want to take?</p>  <p>Also, in my case, I am using Firebase as my backend store so @EBean annotated classes don't make much sense. I can use spring but I don't want to take that route as that would mix in J2EE flavour which I want to avoid for the time being. </p>