<p>I am trying a web application with Scala Play 2, Slick 3 and PostgreSQL. My purpose to return JSON from controller.</p>  <p>These are the Dependencies - </p>  <pre><code>libraryDependencies ++= Seq(     "org.postgresql" % "postgresql" % "9.4-1201-jdbc41",     "com.typesafe.slick" %% "slick" % "3.0.0",     "com.typesafe.play" %% "play-slick" % "1.0.1",     "com.typesafe.play" %% "play-slick-evolutions" % "1.0.1",     specs2 % Test ) </code></pre>  <p>This is one of my Model -</p>  <pre><code>package models  import play.api.libs.json.Json import slick.driver.PostgresDriver.api._  import play.api.mvc._ import play.api.libs.json._ import play.api.libs.functional.syntax._  case class User (id: String, name: String)  class UserModel (tag: Tag) extends Table[User](tag, "USERS") {     def id = column[String]("ID", O.PrimaryKey)     def email = column[String]("EMAIL")      def * = (id, email) &lt;&gt; (User.tupled, User.unapply _) }  object Users extends ModelInit {     lazy val users = TableQuery[UserModel]     implicit val userFormat = Json.format[User]      def all = {         db.run(users.result)     } } </code></pre>  <p>This is my Controller -</p>  <pre><code>package controllers  import models.Users import play.api.libs.json.Json import play.api.mvc._  class Application extends Controller {     def index = Action {         val users = Users.all         val json = Json.toJson(users)         println(json)         Ok(views.html.index("Your new application is ready."))     } } </code></pre>  <p>Currently I am getting following exception-</p>  <pre><code>No Json serializer found for type scala.concurrent.Future[Seq[models.UserModel#TableElementType]]. Try to implement an implicit Writes or Format for this type.     class Application extends Controller { 8       def index = Action { 9           val users = Users.all 10          val json = Json.toJson(users)  11          println(json) 12          Ok(views.html.index("Your new application is ready.")) 13      } 14} </code></pre>