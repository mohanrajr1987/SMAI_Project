<p>I'm trying to migrate my project from using <code>play2-reactivemongo</code> version <code>0.10.5.0.akka23</code> to using version <code>0.11.7.play23</code>. I've already added the following import to fix the problems addressed in <a href="http://stackoverflow.com/questions/31142366/no-json-serializer-as-jsobject-found-for-type-play-api-libs-json-jsobject">this question</a>:</p>  <pre><code>import play.modules.reactivemongo.json._ </code></pre>  <p>With the former version, the following code worked:</p>  <pre><code>val updateEntity = Json.obj("_id" -&gt; Json.obj("$oid" -&gt; id)) val entity = Json.parse(stringJson) collection.update(updateEntity, entity) </code></pre>  <p>however, using the new version, the third line gives a compile error:</p>  <pre><code>[error] No Json serializer as JsObject found for type play.api.libs.json.JsValue. Try to implement an implicit OWrites or OFormat for this type. [error]     collection.update(updateEntity, entity) [error]                      ^ </code></pre>  <p>I've tried introducing an implicit <code>OWriter</code>:</p>  <pre><code>implicit val toJsObject: OWrites[JsValue] = OWrites.apply(_.as[JsObject]) </code></pre>  <p>but that gives an implicit declaration conflict:</p>  <pre><code>[error] ambiguous implicit values: [error]  both value toJsObject of type play.api.libs.json.OWrites[play.api.libs.json.JsValue] [error]  and object JsObjectDocumentWriter in trait ImplicitBSONHandlers of type play.modules.reactivemongo.json.JsObjectDocumentWriter.type [error]  match expected type collection.pack.Writer[play.api.libs.json.JsObject] [error]     collection.update(updateEntity, entity) [error]                      ^ </code></pre>  <p>changing the second line to </p>  <pre><code>val entity = Json.parse(stringJson).as[JsObject] </code></pre>  <p>fixes the problem, but I have a lot of these around my code and I was hoping for a simpler solution.</p>