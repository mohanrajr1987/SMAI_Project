<p>Consider the following example JSON:</p>  <pre><code>properties: {     "key1": "a",     "key2": 1,     "key3": null,     "key4": 0.56     ....     "key99": "zzzzz" } </code></pre>  <p>My code needs to be able to parse that into some sort of Scala structure (case class?) and back into JSON.  </p>  <p>To me, since there are not a finite number of elements inside of <code>properties</code>, this looks like a <code>Map[String, T]</code>.  And since the value of each inner property can be of multiple types, I'm not entirely sure how to represent that as a finite Scala structure.  The documentation on implicit <code>Reads</code>, <code>Writes</code>, and <code>Formats</code> make sense to me, but they don't seem to handle more complicated examples, like the above.</p>  <p>It's also entirely possible I'm thinking about this completely wrong.</p>  <p>I'm new to the framework (as well as the language) and I'm having a hard time wrapping my head around how this should be represented -- any insight would be greatly appreciated.</p>