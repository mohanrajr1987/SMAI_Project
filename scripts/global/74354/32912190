<p>I am new to play and am using it for synchronous database calls and have a few things that I am unclear of or misconceptions; first of all in my application.conf I put in the following code</p>  <pre><code>play {   akka {     akka.loggers = ["akka.event.slf4j.Slf4jLogger"]     loglevel = WARNING     actor {       default-dispatcher = {         fork-join-executor {           parallelism-min = 300           parallelism-max = 300         }       }     }   } } </code></pre>  <p>which I got from <a href="https://www.playframework.com/documentation/2.3.x/ThreadPools" rel="nofollow">https://www.playframework.com/documentation/2.3.x/ThreadPools</a> and also have read <a href="http://stackoverflow.com/questions/30534768/play-framework-and-threadpools">Play Framework and Threadpools</a> . What this means is that you have at all times 300 threads available for blocking database actions? or 300 requests per second at max? also if I had more resources to the server like more Ram,CPU or cores does that increase the amount of threads available? For example if I buy a server that has 4 cores or etc.. would the available threads jump to 1,200 ? As stated before all my actions are blocking from user registration to user chats so trying to get my misconceptions out now before they become more costly.</p>