<p>Given this json:</p>  <pre class="lang-json prettyprint-override"><code>{   "credentials": {     "b79a2ba2-lolo-lolo-lolo-lololololol": {       "description": "meaningful description",       "displayName": "git (meaningful description)",       "fullName": "credential-store/_/b79a2ba2-lolo-lolo-lolo-lololololol",       "typeName": "SSH Username with private key"     }   },   "description": "Credentials that should be available irrespective of domain specification to requirements matching.",   "displayName": "Global credentials (unrestricted)",   "fullDisplayName": "Credentials Â» Global credentials (unrestricted)",   "fullName": "credential-store/_",   "global": true,   "urlName": "_" } </code></pre>  <p>and this scala destination class:</p>  <pre class="lang-scala prettyprint-override"><code>case class JenkinsCredentials(uuid: String, description: String) </code></pre>  <p>How can I create a <code>Reads[JenkinsCredentials]</code> to extract that first object name uuid <code>b79a2ba2-lolo-lolo-lolo-lololololol</code> along with the description?</p>  <p>Following the documentation it'd be something along the lines of this:</p>  <pre class="lang-scala prettyprint-override"><code>implicit val credsReader: Reads[JenkinsCredentials] = (   (JsPath).read[String] and     (JsPath \ "description").read[String]   )(JenkinsCredentials.apply _) </code></pre>  <p>Used with <code>(Json.parse(content) \\ "credentials").validate[Seq[JenkinsCredentials]</code></p>  <p>But the documentation doesn't discuss anything about extracting the names of the objects as a field used somewhere else... </p>  <p>EDIT: clarifying</p>  <p>My end state would be a <code>Seq</code> of <code>JenkinsCredentials</code> that are parsed from a json Object, not an array. Because of how the JSON is structured. I'd pull out the "credentials": "UUID" and "credentials":"UUID":"description" into a single object, for each potential credentials entry under "credentials"</p>