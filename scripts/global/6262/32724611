<p>I'm hoping someone can point me in the right direction here and hoping I explain this clearly enough. I'm getting undesirable results with my report because I need to sum calculated fields.  The Employee Name in the Employee ID header, the labels in the Week header and the Dates and Calculated Hours in the Details header are all showing correctly.  However, Access is filling in the information in the wrong order.</p>  <p>Here is what it is doing:</p>  <p>Calculating and filling in the hours for last day of the last week of the period -> </p>  <p>Filling in the hours for the last week of the period -></p>  <p>Filling in the hours for the period -></p>  <p>Calculating and filling in the last day for the previous week of the period -></p>  <p>Filling in the hours for the previous week of the period -></p>  <p>repeating until the first week.</p>  <p>Then filling in the rest of the calculated hours.</p>  <p>So My results show up like this: (Please note rounding is intentional and the reason I can't just do a =Sum([Hours]) in the footers)</p>  <pre><code>Employee Name     Date       Hours    Reg     OT     9/8/15      8:00     9/9/15      8:28     9/10/15     8:00     9/11/15     7:32 &lt;--Inputs this fourth     ------------------------------ Week Totals:    7:30   7:30   0:00 &lt;--Inputs this fifth then fills in other dates      Date       Hours    Reg     OT     9/14/15     9:43     9/15/15     8:00     9/16/15    13:14     9/17/15    11:39     9/18/15     5:25 &lt;--Starts here first     ------------------------------ Week Totals:    5:30   5:30   0:00 &lt;--Inputs this second     ------------------------------ Period Totals:  5:30   5:30   0:00 &lt;--Inputs this third </code></pre>  <p>Here is how I have my report setup right now:</p>  <pre><code>Employee Name                                                        (Employee ID Header) Date       Hours                Regular            Overtime          (Week Header) =[Date]    =CalcHours([Hours])                                       (Details)                =GetWeekTot()        =GetWeekReg()      =GetWeekOT()      (Week Footer)            =GetPeriodTot()      =GetPeriodReg()    =GetPeriodOT()    (Employee ID Footer) </code></pre>  <p>Here is my Module:</p>  <pre><code>Option Compare Database Option Explicit  Private WeekTot As Double Private WeekReg As Double Private WeekOT As Double  Private PeriodTot As Double Private PeriodReg As Double Private PeriodOT As Double  Public Function CalcHours(ByVal Hours As Double) As String     'Add the Daily Hours to the Total Weekly Hours     WeekTot = WeekTot + Hours      'Format and Return the Daily Hours     CalcHours = Int(Hours) &amp; ":" &amp; Format((Hours * 60) Mod 60, "00") End Function  Public Function GetWeekTot() As String     'Round the Total Weekly Hours to the Nearest Quarter Hour     WeekTot = Round(WeekTot * 4, 0) / 4      'Calculate the Regular Weekly Hours and the Overtime Weekly Hours     If WeekTot &gt; 40 Then         WeekReg = 40         WeekOT = WeekTot - 40     Else         WeekReg = WeekTot         WeekOT = 0     End If      'Add the Total Weekly Hours to the Total Period Hours     PeriodTot = PeriodTot + WeekTot      'Format and Return the Total Weekly Hours     GetWeekTot = Int(WeekTot) &amp; ":" &amp; Format(WeekTot * 60 Mod 60, "00")      'Reset the Total Weekly Hours     WeekTot = 0 End Function  Public Function GetWeekReg() As String     'Add the Regular Weekly Hours to the Regular Period Hours     PeriodReg = PeriodReg + WeekReg      'Format and Return the Regular Weekly Hours     GetWeekReg = Int(WeekReg) &amp; ":" &amp; Format(WeekReg * 60 Mod 60, "00")      'Reset the Regular Weekly Hours     WeekReg = 0 End Function  Public Function GetWeekOT() As String     'Add the Overtime Weekly Hours to the Overtime Period Hours     PeriodOT = PeriodOT + WeekOT      'Format and Return the Overtime Weekly Hours     GetWeekOT = Int(WeekOT) &amp; ":" &amp; Format(WeekOT * 60 Mod 60, "00")      'Reset the Overtime Weekly Hours     WeekOT = 0 End Function  Public Function GetPeriodTot() As String     'Format and Return Total Period Hours     GetPeriodTot = Int(PeriodTot) &amp; ":" &amp; Format((PeriodTot * 60) Mod 60, "00")      'Reset the Total Period Hours     PeriodTot = 0 End Function  Public Function GetPeriodReg() As String     'Format and Return Total Period Hours     GetPeriodReg = Int(PeriodReg) &amp; ":" &amp; Format((PeriodReg * 60) Mod 60, "00")      'Reset the Total Period Hours     PeriodReg = 0 End Function  Public Function GetPeriodOT() As String     'Format and Return Total Period Hours     GetPeriodOT = Int(PeriodOT) &amp; ":" &amp; Format((PeriodOT * 60) Mod 60, "00")      'Reset the Total Period Hours     PeriodOT = 0 End Function </code></pre>  <p>If anyone could figure out a way to make it show this I would be greatly appreciative:</p>  <pre><code>Employee Name     Date       Hours    Reg     OT     9/8/15      8:00     9/9/15      8:28     9/10/15     8:00     9/11/15     7:32     ------------------------------ Week Totals:   32:00  32:00   0:00       Date       Hours    Reg     OT     9/14/15     9:43     9/15/15     8:00     9/16/15    13:14     9/17/15    11:39     9/18/15     5:25      ------------------------------ Week Totals:   48:00  40:00   8:00      ------------------------------ Period Totals: 80:00  72:00   8:00  </code></pre>