<p>I am trying to implement template singleton pattern but I got the following error. How should I overcome this error?</p>  <p>Below is singleton_template.h</p>  <pre><code>#include &lt;iostream&gt; #include &lt;string&gt; /* * Burada yapılan herşey ".h" dosyası içerinde olmalı */ template&lt;typename T&gt; class Singleton { private:    static T* _instance;    Singleton(const Singleton&amp;);    Singleton &amp; operator=(const Singleton&amp; rhs);  protected:    Singleton();  public:    static T* getInstance()    {      if(!_instance)      _instance = new T;      return _instance;    }     void destroyInstance()    {        delete _instance;        _instance = NULL;    } };  template&lt;typename T&gt; T* Singleton&lt;T&gt;::_instance= NULL; </code></pre>  <p>Here is the singleton_template.cpp</p>  <pre><code>#include &lt;iostream&gt; #include &lt;string&gt; #include "singleton_template.h"  class GKM : public Singleton&lt;GKM&gt; { public:    GKM()   {     std::cout &lt;&lt; "Single GKM created"&lt;&lt;std::endl;   }   virtual void initialize(){return;}  };  class Turnstile: public GKM  { public:   Turnstile(){std::cout &lt;&lt; "Single turnstile created add: "&lt;&lt; this&lt;&lt;std::endl;}   virtual void initialize(){std::cout &lt;&lt;"Turnstile"&lt;&lt; std::endl;}  };  int main() {   GKM* trn= Turnstile::getInstance();   trn-&gt;initialize();   return 0; } </code></pre>  <p>Here is what I get after a failed compilation:</p>  <blockquote>   <p>/tmp/ccfD0Xgx.o: In function <code>GKM::GKM()</code>:   singleton_template.cpp:(.text._ZN3GKMC2Ev[_ZN3GKMC5Ev]+0xd): undefined   reference to <code>Singleton&lt;GKM&gt;::Singleton()</code> collect2: error: ld   returned 1 exit status</p> </blockquote>