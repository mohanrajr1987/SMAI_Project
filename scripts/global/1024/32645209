<p>Normally I'm using the statements:</p>  <pre><code>using (SqlConnection connection = new SqlConnection("Data ..."))  {   .... } </code></pre>  <p>to define areas where I use sql commands. Now for a specific application I'm considering putting the sql connection into a singleton instead of the above construct:</p>  <pre><code>public class SimpleClass {     // Static variable that must be initialized at run time.      public static SqlConnection singletonConnection;      // Static constructor is called at most one time, before any      // instance constructor is invoked or member is accessed.      static SimpleClass()     {         singletonConnection = new SqlConnection("Data Source.....");     } } </code></pre>  <p>Now my question with this is....normally when I use "using" the connection gets closed,.... . But when I use a singleton it exists for the whole runtime of the program itself. Is it though necessary to make a "deconstructor" there in order to close the connection at the end of the program?</p>