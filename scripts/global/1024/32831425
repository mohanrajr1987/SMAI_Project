<p>So we are using a common state context singleton with a correlation ID for centralized Logging. The purpose is to track the id throughout our entire process and correlate the different tiers.</p>  <p>The state context is accessed by multiple dlls and multiple users.</p>  <p>The difficulty comes when multi threading comes into play:</p>  <ol> <li>Process 1 has fired by user 1</li> <li>Correlation ID gets set to {1}</li> <li>DLL A  accesses state context and gets correlation ID {1}</li> <li>Before process 1 is completed, Process 2 has fired by user 2</li> <li>Correlation ID gets set to {2}</li> <li>DLL B from 1st process access state context with correlation id {2} when it should be {1}</li> </ol>  <p>How do we solve this issue?</p>  <p>We do not perceive locking to be our solution? Any other ideas?</p>  <p>Here is a diagram</p>  <pre><code>        (S)-&gt;[  CorrelationID {get;set}  ]                                  ^           ^            ^     U1 &lt;--&gt;    |           |            |                 O       U2 &lt;--&gt; [DLLA] &lt;--&gt;  [DLLB] &lt;--&gt;  [DLLC]       &lt;--&gt;  | |     U3 &lt;--&gt;                      {Web}  &lt;--&gt; {Domain} &lt;-&gt; {Data Access} &lt;--&gt; {DB}      (&lt;--                 Process / Thread           --&gt;    )   </code></pre>  <p>{} = Examples of possible DLLs</p>  <p>Each User's process should have 1 correlation ID</p>