<p>I am creating a singleton for use as a model in my app. The initialisation process includes an API call so I need to make use of a completion handler. The problem is that the private initialiser contains the completion handler which is instantiated using a public property. How do I add a completion handler to the get instance call to ensure the data has been loaded?</p>  <p>Here is the code so far with the API call missed to clarity.</p>  <pre><code>import Foundation  struct Country {     var name: String     var region: String     var subRegion: String }  class Countries {      var countryData = [Country]()      // how do I call it?     static let getInstance = Countries()      private init(completionHandler: (Bool)) {         // do some async stuff         completionHandler(true)     }  }  // this is how I envisage calling it from my controller.  Countries.getInstance(completionHandler: {() -&gt; Void in     // the data is available now so we can do stuff with it, such as making calls to extract specific data. }) </code></pre>  <p>I'm probably over-complicating the process but need to be absolutely confident the data has been pulled from the API before trying to use the singleton.</p>