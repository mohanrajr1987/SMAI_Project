<pre><code>#include "iostream" #include "atomic"  using namespace std;  class Singleton {     Singleton();       static Singleton * _pInstance; public:     ~Singleton() {     }      static Singleton* getInstance() {          Singleton * tmp = _pInstance;          atomic_thread_fence(std::memory_order_acquire);          if (tmp == nullptr){              tmp = _pInstance;              if (!tmp) {                  _pInstance = new Singleton();                  atomic_thread_fence(std::memory_order_release);                  _pInstance = tmp;             }          return _pInstance;     } };  Singleton* Singleton::_pInstance = nullptr; </code></pre>