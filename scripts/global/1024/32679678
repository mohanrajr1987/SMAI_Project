<p>I understand what a singleton does any why you would use one. I don't however understand how they work. If the singleton has been created once before and the "get instance" method has been called somewhere else how does it know where in memory the original instance of the singleton is? From reading the code I can't understand where it is coming from. Below is the simple example from the  <a href="https://msdn.microsoft.com/en-us/library/ee817670.aspx%22Microsft%20MSDN%22" rel="nofollow">Microsoft MSDN website</a>.</p>  <pre><code>class Singleton { public:      static Singleton* Instance(); protected:      Singleton(); private:     static Singleton* _instance; }  // Implementation  Singleton* Singleton::_instance = 0;  Singleton* Singleton::Instance() {     if (_instance == 0) {         _instance = new Singleton;     }     return _instance; } </code></pre>  <p>I'm pretty sure it comes from this line here</p>  <pre><code>Singleton* Singleton::_instance = 0; </code></pre>  <p>But I have no idea what that line actually does or how it works.</p>  <p>Thanks in advance</p>