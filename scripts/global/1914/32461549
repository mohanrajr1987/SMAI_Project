<p>I'm having a hard time understanding how to properly install and uninstall custom actions, and what the purpose of rollback is. I have a custom action called <code>CreateFSRegistryLink</code> that creates a <code>REG_LINK</code> registry entry (which cannot be created by MSI/InstallShield directly AFAIK). I think I have this running properly for the most part because if the link is already there, it just returns <code>ERROR_FUNCTION_NOT_CALLED</code>, which MSI seems to handle gracefully, proceeding with the rest of the install. This ensures that multiple instances of the product can be installed cleanly (we have a multi-instance product).</p>  <p>The problem comes during un-install. <code>CreateFSRegistryLink</code> appears to be running again in non-rollback mode. From the MSI log I can see that it's running as it should during an <em>install</em> and but it also runs during an <em>uninstall</em>:</p>  <p>I'm checking the mode with:</p>  <pre><code>if (!MsiGetMode(hInstall, MSIRUNMODE_ROLLBACK)) </code></pre>  <p>When the condition is true I log a message, "CreateFSRegistryLink is running in non-rollback mode." When it is false, I log a message, "CreateFSRegistryLink is running in rollback mode, so was skipped." I have never seen the second message show up in the log.</p>  <p>I have <code>CreateFSRegistryLink</code> set up with In-Script execution of "Deferred Execution in System Context." I also have another custom action <code>DeleteFSRegistryLink</code> set up with In-Script execution of "Rollback Execution in System Context". I see it getting skipped during an install, but not during an un-install (I suspect it's running normally during an un-install, but have not added logging to confirm this).</p>  <p>I also have a custom action <code>CountOtherFSSystems</code> that sets FS_SystemCount to the number of systems (instances) besides the current instance. I set <code>DeleteFSRegisryLink</code> to have a condition to only run when <code>FS_SystemCount&lt;1</code> in the Exec sequence. This is how I can tell that it is being skipped during an install because MSI reports that the condition wasn't met and so <code>DeleteFSRegistryLink</code> was skipped. I expect this to help ensure that it only runs when the last instance is being un-installed. I think this condition is working based on log output, but I don't know how to get this <code>DeleteFSRegistryLink</code> custom action to run properly during un-install without the <code>CreateFSRegistryLink</code> action re-installing the link. The last reference to <code>DeleteFSRegistryLink</code> I see in the log is:</p>  <pre><code>MSI (s) (08:CC) [09:42:23:708]: Executing op: CustomActionSchedule(Action=DeleteFSRegistryLink,ActionType=3329,Source=BinaryData,Target=DeleteFSRegistryLink,) </code></pre>  <p>I haven't added logging to this function yet, so I don't know if it ran, but when the un-install is done, the link in the registry is still there. This is not entirely surprising because immediately after that I see that <code>CreateFSRegistryLink</code> ran again:</p>  <pre><code>MSI (s) (08:CC) [09:42:23:708]: Executing op: ActionStart(Name=CreateFSRegistryLink,,) Action 9:42:23: CreateFSRegistryLink.  MSI (s) (08:CC) [09:42:23:708]: Executing op: CustomActionSchedule(Action=CreateFSRegistryLink,ActionType=3073,Source=BinaryData,Target=CreateFSRegistryLink,) MSI (s) (08:0C) [09:42:23:739]: Invoking remote custom action. DLL: C:\windows\Installer\MSI37E1.tmp, Entrypoint: CreateFSRegistryLink MSI (s) (08:70) [09:42:23:739]: Generating random cookie. MSI (s) (08:70) [09:42:23:739]: Created Custom Action Server with PID 7640 (0x1DD8). MSI (s) (08:18) [09:42:23:786]: Running as a service. MSI (s) (08:18) [09:42:23:786]: Hello, I'm your 32bit Elevated custom action server. CreateFSRegistryLink is running in non-rollback mode. </code></pre>  <p>I followed the rule at <a href="https://msdn.microsoft.com/en-us/library/aa371369(v=vs.85).aspx" rel="nofollow">https://msdn.microsoft.com/en-us/library/aa371369(v=vs.85).aspx</a> of "A rollback custom action must always precede the deferred custom action it rolls back in the action sequence" which is still really not making sense to me seeing this log output and results. I think I'm missing a few key points here.</p>