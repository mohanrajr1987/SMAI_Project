<p>To start, I'm finally posting after battling for a while with this.</p>  <p>Basically, I'm using Socket.IO to create a messenger for a site im working on. I'm having an issue with the timeago plugin displaying NaN years ago as its output.</p>  <p>After googling around, i see that the timeago plugin requires a pretty specfic date format, or a Java Date() object.</p>  <p>Here's my code..</p>  <pre><code>socket.on('chat.message', function (data) {   data = JSON.parse(data);   if (data.hasOwnProperty('system')) {     toastr["success"](data.msg);   } else {     $chat.append(       '&lt;li class="left clearfix"&gt;' +       '&lt;span class="chat-img pull-left"&gt;' +       '&lt;img src="https://www.gravatar.com/avatar/?d=mm&amp;amp;s=40" alt="User Avatar" class="img-circle" width="50" /&gt;' +       '&lt;/span&gt;' +        '&lt;div class="chat-body clearfix"&gt;' +       '&lt;div class="header"&gt;' +       '&lt;strong class="primary-font"&gt;' + data.nickname + '&lt;/strong&gt;' +       '&lt;small class="pull-right text-muted time" data-time="' + data.timeSent + '"&gt;' +       '&lt;span class="glyphicon glyphicon-time"&gt;&lt;/span&gt;' + $.timeago(data.timeSent) +       '&lt;/small&gt;' +       '&lt;/div&gt;' +       '&lt;p&gt;' + data.msg + '&lt;/p&gt;' +       '&lt;/div&gt;' +       '&lt;/li&gt;'     );     $('.panel-body').animate({scrollTop: $chat.height()});   } });  function updateTimes() {   $('.time').each(function () {     var time = $.timeago($(this).attr('data-time'));     $(this).html(time);   }); } setInterval(function () {   updateTimes(); }, 3000); </code></pre>  <p>So as you can see, each message element appended onto the page has the timeago output, and the original time sent stored in an attribute for my function to update using updateTimes().</p>  <p>When the message is first received, everything is fine. However when i use the attribute's value and pass that to timeago, this is where everything goes wrong.</p>  <p>From searching around, i thought i might be able to do the follow:</p>  <pre><code>function updateTimes() {   $('.time').each(function() {     var time = new Date($(this).attr('data-time'));     $(this).html($.timeago(time));   }); } </code></pre>  <p>Although this didnt work either.</p>  <p>....Edit....</p>  <p>I forgot to mention how i'm setting the time at first..</p>  <pre><code>var d = new Date(); var time = d.getTime(); </code></pre>  <p>Hopefully this is obvious for someone, unfortunaly my javascript knowledge is lacking!</p>  <p>Any help is greatly appreciated.</p>  <p>Ok, so this has now been resolved.</p>  <p>Seems you can't pass Date() a string, so i had to</p>  <p><code>var time = new Date(parseInt($(this).attr('data-time')));</code></p>  <p>Many thanks to @amklose</p>