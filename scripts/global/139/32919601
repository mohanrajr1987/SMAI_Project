<p>I am trying to make a program which tests if two separate phrases are anagrams of each other. To do this, I want to sort each string phrase into alphabetical order and compare the results. However, <strong>I want to do this without using any arrays or maps</strong>. So far I have some pretty messy code/pseudocode:</p>  <pre><code>import java.util.Scanner;  public class AnagramComparer{   public static void main(String[] args){     Scanner scan = new Scanner(System.in);      System.out.println("Enter a sentence.");      String sentence = scan.nextLine();          sentence = sentence.toLowerCase();      String empty1 = "";      for(int i = 0; i &lt;= sentence.length(); i++){        //if char is between 97 &amp; 122        // if char i &lt;= charAt (0 to sentence length - x)                       if(sentence.charAt(i) &lt;= empty1.charAt(0)){         empty1.replace(empty1.charAt(0), sentence.charAt(i));                          }       else{          empty1 = (empty1 + (sentence.charAt(i)));       }     }      System.out.println(empty1);     System.out.println(sentence);   } } </code></pre>  <p>The idea here is that I would run through the string sentence character-by-character and sort it alphabetically in the string empty1. Feel free to tell me if I'm going in the wrong direction; any help would be much appreciated.</p>