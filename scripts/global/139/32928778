<p>The instructions for this program given to me by my teacher are:</p>  <blockquote>   <p>Books-a-Trillion Publishing Company wishes you to write a program that will   read a sentence on one line, one word at a time. The sentence is always   terminated by either a ‘.’ , ‘!’, or ‘?’. The program will then output the number of   words in the sentence, the average word length, and the length of the longest   word. For simplicity, assume only the following punctuation marks are allowed   within a sentence: ‘,’ and ‘;’. A sample input would look like the following:</p>  <pre><code>To be or not to be; that is the question! </code></pre>      <p>The output should resemble the following:</p>  <pre><code> There are 10 words in the sentence.  The average length of each word is 3.  The length of the longest word is 8 characters.  </code></pre> </blockquote>  <p>and he gave a pseudocode to help guide us which is</p>  <pre><code>//Prompt the user for a sentence terminated by a ‘.’, ‘!’ or ‘?’ //Read the first character // Loop while the character that was read is not a ‘.’, ‘!’ or ‘?’ // increment word length // if character is a blank, semicolon, or comma // increment word counter // resize the word length to exclude the blank, semicolon or comma // check if the word length is the longest. If yes, save it // reset word length to zero // else // increment character counter // get the next character //end of loop // Output the results </code></pre>  <p>I just honestly have no idea where to start.</p>  <p>Any and all help is greatly appreciated.</p>  <p>But what I have so far is:</p>  <pre><code>#include &lt;iostream&gt;  #include &lt;string&gt;  using namespace std;  int main(int argc, char** argv) {     char ReadChar;     cout &lt;&lt;"Enter a sentence terminated by a period, an exclamation point, or a question mark (.!?) " &lt;&lt; endl;      ReadChar = cin.get();     while ((ReadChar != '.')  &amp;&amp; (ReadChar != '!') &amp;&amp; (ReadChar != '?'))     {         ReadChar = cin.get();         }      cout &lt;&lt;"Done reading" &lt;&lt;endl;      return 0; } </code></pre>