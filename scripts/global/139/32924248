<p>I got a HTML page's content as a PHP string. I want to extract a javascript variable value from that string. I know that the format where the variable is declared in the string will always be:</p>  <pre><code>var token = "var_value"; //var_value is alphanumeric </code></pre>  <p>Therefore, I tried to find the value between <code>var token = "</code> and <code>";</code> by using a regex which does that:</p>  <pre><code>preg_match("/var token = \"(.*?)\"/", $haystack, $result) </code></pre>  <p>The problem is that the string being HTML/JS code, is pretty big to parse (8k+ length in characters) and from <a href="http://php.net/manual/ro/function.preg-match.php" rel="nofollow">preg_match()</a>'s documentation we're being told</p>  <blockquote>   <p>Tip</p>      <p>Do not use preg_match() if you only want to check if one string is contained in another string. Use strpos() instead as it will be faster.</p> </blockquote>  <p>So I went and did that, but I am still concerned whether it's more efficient.</p>  <pre><code>$before = 'var token = "'; $after = '"'; if ($t = strpos($haystack, $before)) {     $tokenstart = substr($haystack, $t + strlen($before));     $g = strpos($tokenstart, $after);     $token = substr($tokenstart, 0, $g);        } </code></pre>  <p>First, define the strings that are before and after the needed value, then find the position in the string where the start is located. Then, using <a href="http://php.net/manual/ro/function.substr.php" rel="nofollow">substr()</a>, return the string without everything before the value. Do the same with whatever is after the value: get the starting position of the <code>"</code>(there are none of it in my variable as it's alphanumeric) and remove everything after it.</p>  <p>I think <code>strpos</code> being more efficient than <code>strstr</code> makes this a better approach, because I know the exact format that I need. It also stops on the first occurence of the string rather than finding all of them.</p>  <p>Is there a better a more efficient way to do this?</p>