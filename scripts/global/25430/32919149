<p>I am trying to understand multidimensional array and pointers, wrote this small program to understand the concept: </p>  <pre><code>#include&lt;stdio.h&gt; void show(int arr[][2]); int main() {     int z[2][2] = { { 1, 2 },                     {3, 4 } };     show(z); }  void show(int arr[][2]) {      printf("value of arr = %d", arr);     printf("\n\nvalue of &amp;arr[0]0] = %d", &amp;arr[0][0]); } </code></pre>  <p>This code fragment prints the same address which makes sense, but when i edit the show function:</p>  <pre><code>void show(int arr[][2]) {      printf("value of *arr = %d", *arr);     printf("\n\nvalue of arr[0]0] = %d", arr[0][0]); } </code></pre>  <p>*arr still prints the same address while the arr[0][0] as expected prints the integer value , i want to know why i need to use **arr to get the int value , if arr is storing the address it should be dereferenced with *arr, isn't it ?</p>  <p>please help i am having really hard time understanding this concept.. thanks in advance.</p>