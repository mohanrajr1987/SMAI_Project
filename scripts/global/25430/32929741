<p>I am having trouble creating and accessing a struct pointer as an array. This is a homework question but it is just my misunderstanding of operations.</p>  <p>My header file (which I cannot change and have to implement this way) contains:</p>  <pre><code>typedef struct gw_struct GW;  extern GW *gw_build(int nrows, int ncols, int pop, int rnd); </code></pre>  <p>In the implementation file I have implemented both of the declarations </p>  <pre><code>#include &lt;stdio.h&gt; #include "gw.h" #include &lt;stdlib.h&gt;  struct gw_struct {     int Alive;     int row;     int column;     int id; };  GW *gw_build(int nrows, int ncols, int pop, int rnd){      GW* list = NULL;     int rows = nrows;     int cols = ncols;      for(nrows = 0; nrows &lt; rows; nrows++){         for(ncols = 0; ncols &lt; cols; ncols++){             GW *nn = malloc(sizeof *nn);              if (nn == NULL){                 break;             }              list = nn;         }      }      return list; } </code></pre>  <p>And finally my test file contains:</p>  <pre><code>#include &lt;stdio.h&gt; #include "gw.h" #include &lt;stdlib.h&gt;  int main (){      GW* World = gw_build(50, 50, 34, 1);      World[0][0] -&gt; Alive = 2;         //Can't get this to work } </code></pre>  <p>Lastly, I compile my program with</p>  <pre><code>gcc -c gw.c gcc gw.o main.c </code></pre>  <p>The struct pointer seems to be created, however I cannot access it like an array.</p>  <p>I have tried to solve this in a number of ways. I originally initialized the variable world as</p>  <pre><code>GW* World[50][50] = gw_build(50,50,34,1); </code></pre>  <p>and i tried the same thing with "list" in the gw_build function yet it returned initialization errors.</p>  <p>Going without the loop and doing</p>  <pre><code>GW* list[nrows][ncols]; </code></pre>  <p>is not allowed as well because you cannot have a variable as a size field.</p>  <p>I could create, maloc, and access a </p>  <pre><code>GW* World[50][50]; </code></pre>  <p>in the main function itself and everything worked fine, but once I try to set it by returning from the gw_build function, it simply does not work. I therefore tried changing the return type but once again, it led to an invalid return error.</p>  <p>Any guidance is appreciated, thank you! </p>