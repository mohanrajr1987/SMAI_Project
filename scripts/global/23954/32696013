<p>I'm using two receivers. One declared in the manifest like this :</p>  <pre><code>    &lt;receiver         android:name="com.app.receivertest"         android:exported="false"         android:enabled="true"         android:permission="MY_PERMISSION"&gt;         &lt;intent-filter android:priority="0"&gt;             &lt;action android:name="NAME_ACTION" /&gt;         &lt;/intent-filter&gt;     &lt;/receiver&gt; </code></pre>  <p>And one declared in my activity A, declared with priority 1.</p>  <p>When I start my service on this activity A, on Android 4.4.2, both receivers are called, in the "correct order" whereas in Android 5 > 0, just the correct receiver declared in the activity A is called, not the manifest's receiver.</p>  <p>This is my code in the receiver used in the activity a :</p>  <pre><code>     @Override     public void onReceive(Context context, Intent intent) {         Utils.log("onReceive test");         abortBroadcast();         setResultData("test");         myfunction();      } </code></pre>  <p>after this code, the other receiver is called. I tried to use "setResultData", to use "getResultData" in the other receiver for don't execute the code if I've something, but getResultData returns always null..</p>  <p>So, why both receivers are called ? What happens on Android 4.4 ? I need your help :D</p>  <p>EDIT : Code for sending broadcast :</p>  <pre><code> Intent broadcastIntent = new Intent();     broadcastIntent.setAction(My_ACTION);     sendOrderedBroadcast(broadcastIntent,   My_PERMISSION); </code></pre>