<p>I have two broadcast receiver. one for sms and one for call. I confront this error. i see this page: <a href="http://stackoverflow.com/questions/18722206/broadcastreceiver-trying-to-return-result-during-a-non-ordered-broadcast-sms-r">BroadcastReceiver trying to return result during a non-ordered broadcast - SMS Receiver</a></p>  <p>but I don't how ti use that suggestion. Context.sendOrderedBroadcast.  and if this is helpful or not. I have other receiver in this package for sms this receiver work fine. but this one doesn't work.</p>  <pre><code>public class PhoneCallReceiver extends BroadcastReceiver {  Context context = null;  SharedPreferences preferences = null ;     Boolean  blacklist;     Boolean  contact;     Boolean  all;     public void onReceive(Context context, Intent intent) {        preferences = context.getSharedPreferences("modes",Context.MODE_PRIVATE);       if (intent.getAction().equals("android.intent.action.PHONE_STATE")) {              String state = intent.getStringExtra(TelephonyManager.EXTRA_STATE);      if (state.equals(TelephonyManager.EXTRA_STATE_RINGING)) { String phoneNumber = intent.getStringExtra(TelephonyManager.EXTRA_INCOMING_NUMBER);            if (preferences.getBoolean("all", true)){                       Log.i("all", ":  " + phoneNumber);                      abortBroadcast();                       Log.i("block: ", phoneNumber);            }             else      if (preferences.getBoolean("blacklist", true)){                      boolean str=Search.search(phoneNumber);                      if (phoneNumber != null &amp;&amp; str ==true) {                      abortBroadcast();}}                else     if (preferences.getBoolean("c", true)&amp;&amp;getDetails(phoneNumber)){                      abortBroadcast();}                 else     if (preferences.getBoolean("g", true)){                     boolean str=SearchInWhiteList.search(phoneNumber);                     if (phoneNumber != null &amp;&amp; str ==true) {                     abortBroadcast();}}                 else      if (preferences.getBoolean("b", true)){                          abortBroadcast();}                  else {}             }          }   }  </code></pre>  <p>manifest</p>  <pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt; &lt;manifest xmlns:android="http://schemas.android.com/apk/res/android" package="blocker.activity" android:versionCode="1" android:versionName="1.0" &gt; &lt;uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/&gt; &lt;uses-permission android:name="android.permission.MODIFY_PHONE_STATE" /&gt;   &lt;uses-permission android:name="android.permission.READ_PHONE_STATE"/&gt; &lt;uses-permission android:name="android.permission.CALL_PHONE"/&gt; &lt;uses-permission android:name="android.permission.READ_CONTACTS" /&gt;  &lt;uses-permission android:name="android.permission.MODIFY_PHONE_STATE" /&gt; &lt;uses-permission android:name="android.permission.RECEIVE_SMS"&gt;&lt;/uses-permission&gt; &lt;uses-permission android:name="android.permission.READ_SMS" /&gt; &lt;uses-permission android:name="android.permission.SEND_SMS"&gt;&lt;/uses-permission&gt;    &lt;uses-sdk android:minSdkVersion="8" /&gt;  &lt;application     android:icon="@drawable/ic_launcher"     android:label="@string/app_name" &gt;     &lt;activity          android:name=".FirstPage"         android:label="@string/app_name" &gt;         &lt;intent-filter&gt;             &lt;action android:name="android.intent.action.MAIN" /&gt;              &lt;category android:name="android.intent.category.LAUNCHER" /&gt;         &lt;/intent-filter&gt;     &lt;/activity&gt;  &lt;receiver android:name=".SmsFilter" android:enabled="true"&gt; &lt;intent-filter android:priority="999"&gt;       &lt;action android:name="android.intent.action.PHONE_STATE" /&gt;     &lt;action android:name="bloker.activity.android.action.broadcast"/&gt;      &lt;action android:name="android.provider.Telephony.SMS_RECEIVED"&gt;&lt;/action&gt; &lt;/intent-filter&gt; &lt;/receiver&gt;  &lt;receiver android:name=".PhoneCallReceiver" android:enabled="true"&gt; &lt;intent-filter android:priority="999"&gt;       &lt;action android:name="android.intent.action.PHONE_STATE" /&gt;     &lt;action android:name="bloker.activity.android.action.broadcast"/&gt;   &lt;/intent-filter&gt; &lt;/receiver&gt;      &lt;activity          android:name=".Search"         android:label="@string/app_name" &gt;      &lt;/activity&gt;      &lt;activity          android:name=".BlockActivity"         android:label="@string/app_name" &gt;      &lt;/activity&gt;       &lt;activity         android:name=".SmsFilter"         android:label="@string/app_name" &gt;      &lt;/activity&gt;       &lt;activity         android:name=".CustomAdapter"         android:label="@string/app_name" &gt;      &lt;/activity&gt;       &lt;activity         android:name=".Setting"         android:label="@string/app_name" &gt;      &lt;/activity&gt;      &lt;activity         android:name=".GetAllContact"         android:label="@string/app_name" &gt;      &lt;/activity&gt;       &lt;activity         android:name=".WhiteList"         android:label="@string/app_name" &gt;      &lt;/activity&gt; &lt;/application&gt;  &lt;/manifest&gt; </code></pre>  <p>edit: broadcastreceiver fro incoming call to android phone is non-ordering. so that cant be aborted using above code. my question is that how can we handle this kind of broadcast? I know that using this code can block call. <a href="http://stackoverflow.com/questions/23097944/can-i-hang-up-a-call-programmatically-in-android">Can I hang up a call programmatically in android?</a> but my question is that how to use above code to abort call?</p>