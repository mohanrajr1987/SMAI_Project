<p>In java it is very simple:</p>  <pre><code>public void onReceive(Context context, Intent intent) {      Bundle bundle = intent.getExtras();     SmsMessage[] recievedMsgs = null;     String str = "";     if (bundle != null)     {          Object[] pdus = (Object[]) bundle.get("pdus");         recievedMsgs = new SmsMessage[pdus.length];         for (int i=0; i             recievedMsgs[i] = SmsMessage.createFromPdu((byte[])pdus[i]);             str += "SMS from " + recievedMsgs[i].getOriginatingAddress()+ " :" + recievedMsgs[i].getMessageBody().toString();         }          Toast.makeText(context, str, Toast.LENGTH_SHORT).show();     } } </code></pre>  <p>I try do it the same in DELPHI:</p>  <pre><code>procedure Form1.BroadcastReceiver1Receive(Context: JContext; Intent: JIntent); var   tBundle: jBundle;   tPDUS: TJavaObjectArray&lt;JObject&gt;;   tOBJ: JObject;   tMSGS: TJavaObjectArray&lt;JSmsMessage&gt;;   tSTR: string; begin   tBundle:= Intent.getExtras;    if tBundle &lt;&gt; nil then     begin       if tBundle.containsKey(StringToJString('pdus')) then         begin           tPDUS:= TJavaObjectArray&lt;JObject&gt;(tBundle.get(StringToJString('pdus'))); </code></pre>  <p><em>The problem is that</em> <strong>tPDUS return nil</strong>.</p>  <p>When I try <strong>tOBJ:= tBundle.get(StringToJString('pdus'))</strong> then <strong>tOBJ return JObject</strong>.</p>  <p><strong>How get <em>tBundle.get(StringToJString('pdus'))</em> into <em>TJavaObjectArray</em>?</strong></p>