<p>Hello I have my Alarm Manager to show a Notification. The problem is that once the alarm is triggered and the notification is shown, when the code of MainActivity(super.onCreate) is executed, it always triggers the notification.</p>  <p>Here is my MainActivity which executes the Alarm.</p>  <pre><code>@Override protected void onCreate(Bundle savedInstanceState) {     super.onCreate(savedInstanceState);     setContentView(R.layout.activity_main);      initAlarm();  }  private void initAlarm(){      Calendar calendar = Calendar.getInstance();      calendar.set(Calendar.MONTH, 8);     calendar.set(Calendar.YEAR, 2015);     calendar.set(Calendar.DAY_OF_MONTH, 21);      calendar.set(Calendar.HOUR_OF_DAY, 15);     calendar.set(Calendar.MINUTE, 45);     calendar.set(Calendar.SECOND, 0);     calendar.set(Calendar.AM_PM,Calendar.PM);      //Creo un intent que ejecutara el BroadcastReceiver     Intent myIntent = new Intent(MainActivity.this, AlarmBroadcastReceiver.class);     PendingIntent pendingIntent = PendingIntent.getBroadcast(MainActivity.this, 0, myIntent, PendingIntent.FLAG_UPDATE_CURRENT);      AlarmManager alarmManager = (AlarmManager)getSystemService(ALARM_SERVICE);     alarmManager.set(AlarmManager.RTC, calendar.getTimeInMillis(), pendingIntent); } </code></pre>  <p>Here is the AlarmBroadcastReceiver which is supposed to be called only when the time of the AlarmManager expires.</p>  <pre><code>public class AlarmBroadcastReceiver extends BroadcastReceiver{      @Override     public void onReceive(Context context, Intent intent) {         Intent startIntent = new Intent(context, AlarmService.class);         context.startService(startIntent);     } } </code></pre>  <p>The service launched by the BroadcastReceiver:</p>  <pre><code>public class AlarmService extends Service{     @Override     public int onStartCommand(Intent intent, int flags, int startId) {          generarNotificacion();          return Service.START_NOT_STICKY;     }  @Override public IBinder onBind(Intent intent) {     return null; }  public void generarNotificacion(){      Intent resultIntent = new Intent(this.getApplicationContext(), MainActivity.class);      android.support.v4.app.NotificationCompat.Builder mBuilder =             new NotificationCompat.Builder(this)                     .setSmallIcon(R.mipmap.logo)                     .setContentTitle(getResources().getString(R.string.app_name))                     .setContentText(getResources().getString(R.string.texto_notificacion));      PendingIntent resultPendingIntent =             PendingIntent.getActivity(                     this,                     0,                     resultIntent,                     PendingIntent.FLAG_UPDATE_CURRENT             );      mBuilder.setContentIntent(resultPendingIntent);      // Sets an ID for the notification     int mNotificationId = 001;      // Gets an instance of the NotificationManager service     NotificationManager mNotifyMgr =             (NotificationManager) getSystemService(NOTIFICATION_SERVICE);      // Builds the notification and issues it.     mNotifyMgr.notify(mNotificationId, mBuilder.build()); }  } </code></pre>  <p>And finally I have added this code to the manifest.xml</p>  <pre><code>&lt;application         android:allowBackup="true"         android:icon="@mipmap/logo"         android:label="@string/app_name"         android:theme="@style/AppTheme" &gt;      &lt;service android:name=".AlarmService"         android:enabled="true" /&gt;      &lt;receiver android:name=".AlarmBroadcastReceiver"/&gt;  ...  &lt;/application&gt; </code></pre>