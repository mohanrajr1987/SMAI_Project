<p>I have a login activity and in it is nested a class that extends BroadcastReceiver to receive GCM registration token. I would like to store the registration token together with the user name and phone number after the user clicks the sign up button. So I instantiated the button in Oncreate method of the activity. So in the OnRecieve method of the BroadcastReciver I have this</p>  <pre><code>signup.setOnClickListener(new View.OnClickListener() {                 @Override                 public void onClick(View view) {                     try {                         mLocationRequest = new LocationRequest();                         mLocationRequest.setInterval(10);                         mLocationRequest.setFastestInterval(10);                         mLocationRequest.setPriority(LocationRequest.PRIORITY_BALANCED_POWER_ACCURACY);                         //mLocationRequest.setPriority(LocationRequest.PRIORITY_LOW_POWER);                         //mLocationRequest.setSmallestDisplacement(0.1F);                          //LocationServices.FusedLocationApi.requestLocationUpdates(mGoogleApiClient, mLocationRequest, this);                         //locationManager.requestLocationUpdates(LocationManager.NETWORK_PROVIDER, 0, 0, (android.location.LocationListener) listener);                         MyActivity maac = new MyActivity();                         maac.startReceivingLocationUpdates();                           Location mLastLocation = locationManager.getLastKnownLocation(LocationManager.GPS_PROVIDER);                         double latitude = mLastLocation.getLatitude();                         double longitude = mLastLocation.getLongitude();                          if ((text != null &amp;&amp; name.getText().length() &gt; 0 &amp;&amp; tele.getText().length() &gt; 0) &amp;&amp; (latitude &gt; 0 &amp;&amp; longitude &gt; 0) &amp;&amp; (isInputValid(name) &amp;&amp; isInputValid(tele))){                             namestring = name.getText().toString();                             telestring = tele.getText().toString();                             String la = String.valueOf(latitude);                             String lo = String.valueOf(longitude);                             SendLogin sendcreds = new SendLogin();                             sendcreds.execute(text, namestring, telestring, la, lo);                             //set number to 1 if user has already signed up if not set it to 0 so they sign up                             sharedPref = getSharedPreferences("data", MODE_PRIVATE);                             number = sharedPref.getInt("isLogged", 0);                             if(number == 0) {                                 //Open the login activity and set this so that next it value is 1 then this condition will be false.                                 SharedPreferences.Editor prefEditor = sharedPref.edit();                                 prefEditor.putInt("isLogged", 1);                                 prefEditor.commit();                             } else {                                 //Open this Home activity                                 Intent intent = new Intent(Login.this, MainActivity.class);                                 startActivity(intent);                             }                          }else{                             Log.i("login!!!", "caution: empty login");                             Toast.makeText(getApplicationContext(), "complete all boxes!!!", Toast.LENGTH_SHORT).show();                             return;                         }                      }catch (NullPointerException npo){                         npo.printStackTrace();                         Log.i("oops-----", "location is null in my opinion");                     }                 }             }); </code></pre>  <p>I have an asyncTask class that is also nested in the login activity, to send the credentials to a server in a separate thread. But when I click the button nothing happens and there is nothing in the logcat. </p>