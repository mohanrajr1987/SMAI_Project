<p>I got a Ruby on rails website where i use the Ckeditor gem. <a href="https://github.com/galetahub/ckeditor" rel="nofollow">https://github.com/galetahub/ckeditor</a></p>  <p>I have it setup with paperclip so i can also upload images in the editor. This works without any problems. </p>  <p>The problem is when i deploy my cloud66 server with CKeditor.  It makes it, so that all the uploaded images trough the ckeditor are deleted. (the links are still the same, only the images are gone) </p>  <p>How to solve this? </p>  <p>Code:  Model > ckeditor > assets.rb</p>  <pre><code>module Ckeditor   class Asset &lt; ActiveRecord::Base     include Ckeditor::Orm::ActiveRecord::AssetBase     include Ckeditor::Backend::Paperclip   end end </code></pre>  <p>Model > ckeditor > attachment_file.rb</p>  <pre><code>module Ckeditor   class AttachmentFile &lt; Ckeditor::Asset     has_attached_file :data,                       url: "/ckeditor_assets/attachments/:id/:filename",                       path: ":rails_root/public/ckeditor_assets/attachments/:id/:filename"      validates_attachment_presence :data     validates_attachment_size :data, less_than: 100.megabytes     do_not_validate_attachment_file_type :data      def url_thumb       @url_thumb ||= Ckeditor::Utils.filethumb(filename)     end   end end </code></pre>  <p>Model > ckeditor > picture.rb</p>  <pre><code>module Ckeditor   class Picture &lt; Ckeditor::Asset     has_attached_file :data,                       url: "/ckeditor_assets/pictures/:id/:style_:basename.:extension",                       path: ":rails_root/public/ckeditor_assets/pictures/:id/:style_:basename.:extension",                       styles: { content: "800&gt;", thumb: "118x100#" }      validates_attachment_presence :data     validates_attachment_size :data, less_than: 2.megabytes     validates_attachment_content_type :data, content_type: /\Aimage/      def url_content       url(:content)     end   end end </code></pre>  <p>config > initialers > assets.rb</p>  <pre><code>Rails.application.config.assets.version = "1.0"  # Add additional assets to the asset load path # Rails.application.config.assets.paths &lt;&lt; Emoji.images_path  # Precompile additional assets. # application.js, application.css, and all non-JS/CSS in app/assets folder are already added. # Rails.application.config.assets.precompile += %w( search.js ) Rails.application.config.assets.precompile += %w( club.css admin.css ) Rails.application.config.assets.precompile += %w( club.js admin.js )  Rails.application.config.assets.precompile += Ckeditor.assets Rails.application.config.assets.precompile += %w(ckeditor/*) </code></pre>  <p>config > initialers > ckeditor.rb</p>  <pre><code>Ckeditor.setup do |config|    require "ckeditor/orm/active_record"  end </code></pre>  <p>config > deploy.rb </p>  <pre><code># if you want to clean up old releases on each deploy uncomment this: set :shared_children, shared_children + %w{public/ckeditor_assets} after "deploy:restart", "deploy:cleanup"  namespace :deploy do   task :start, :roles =&gt; :app do     run "touch #{current_path}/tmp/restart.txt"   end    task :stop, :roles =&gt; :app do     # Do nothing.   end    desc "Restart Application"   task :restart, :roles =&gt; :app do     run "touch #{current_path}/tmp/restart.txt"   end    after 'deploy:update_code' do     #run "cd #{release_path}; RAILS_ENV=production rake db:create"      run "cd #{release_path}; RAILS_ENV=production rake db:migrate"     run "cd #{release_path}; RAILS_ENV=production rake db:seed"     run "cd #{release_path}; RAILS_ENV=production rake assets:precompile"      run "ln -s #{shared_path}/public/ckeditor_assets #{release_path}/public/ckeditor_assets"    end    desc "Update the crontab file"   task :update_crontab, :roles =&gt; :db do     run "cd #{release_path} &amp;&amp; whenever --update-crontab #{application}"     run "cd #{release_path}; tail -f log/cron_log.log"   end </code></pre>  <p>and i got in routes.rb mount Ckeditor::Engine => "/ckeditor"</p>