<p>I'm trying to make a compass app that I can get to point to any place I choose by entering in Lat and Long co-ordinates manually...I broke it :( I've researched it for over two weeks now and pulled some outdated code together with the new methodology and I have got as far as de-bugging to see if the GoogleAPIservices are actually connecting. I got a no, but I want to get a yes :) I have all of the permissions in there (Internet/Fine/course) and I'm targeting 19+.  The code dosn't have any errors and I'm now trying to see what the methods mean.  (I've commented out the sensor event stuff - I don't need true north just yet). can anyone help?</p>  <pre><code> public class MainActivity extends Activity implements ConnectionCallbacks, OnConnectionFailedListener, /*SensorEventListener*/ com.google.android.gms.location.LocationListener {   GoogleApiClient mGoogleApiClient; // Bool to track whether the app is already resolving an error private boolean mResolvingError = false; public Location mLastLocation; public Location targetLocation = new Location("Them"); public ImageView mPointer; private boolean mRequestingLocationUpdates; //private SensorManager mSensorManager; //private Sensor mAccelerometer; //private Sensor mMagnetometer; //magnetic north.       float azimuth; //debug text TextView bearingAngle;  //location     LocationRequest mLocationRequest;     private Location mCurrentLocation;     private TextView mLatitudeText;  @Override protected void onCreate(Bundle savedInstanceState) {     super.onCreate(savedInstanceState);     setContentView(R.layout.activity_main);     //debug read-out.     mPointer = (ImageView) findViewById(R.id.pointer);     mLatitudeText = (TextView)findViewById(R.id.debugAngle);      //bearingAngle = (TextView)findViewById(R.id.textAngle);     //change this later     targetLocation.setLatitude(-43.8085827);     targetLocation.setLongitude(172.96313369999996);     buildGoogleApiClient();    //updateValuesFromBundle();    if(mGoogleApiClient!= null){       mGoogleApiClient.connect();    }    else {        Toast.makeText(this, "Not connected...", Toast.LENGTH_SHORT).show();    }    }  @Override public boolean onCreateOptionsMenu(Menu menu) {     // Inflate the menu; this adds items to the action bar if it is present.     getMenuInflater().inflate(R.menu.main, menu);             return true; }  protected synchronized void buildGoogleApiClient() {     mGoogleApiClient = new GoogleApiClient.Builder(this)         .addConnectionCallbacks(this)         .addOnConnectionFailedListener(this)         .addApi(LocationServices.API)          .build();      if(mGoogleApiClient!= null){         mGoogleApiClient.connect();     }     else {         Toast.makeText(this, "Not connected...", Toast.LENGTH_SHORT).show();     }  } @Override protected void onStart() {     super.onStart();     if (!mResolvingError) {           mGoogleApiClient.connect();     } } @Override protected void onStop() {     super.onStop();     mGoogleApiClient.disconnect();  }   protected void onResume() {     super.onResume();     if (mGoogleApiClient.isConnected() &amp;&amp; !mRequestingLocationUpdates) {         startLocationUpdates();      } }  protected void onPause() {     super.onPause();        }  protected void startLocationUpdates() {      LocationServices.FusedLocationApi.requestLocationUpdates(             mGoogleApiClient, mLocationRequest, this); }  @Override public boolean onOptionsItemSelected(MenuItem item) {     // Handle action bar item clicks here. The action bar will     // automatically handle clicks on the Home/Up button, so long     // as you specify a parent activity in AndroidManifest.xml.     int id = item.getItemId();     if (id == R.id.action_settings) {         return true;     }     return super.onOptionsItemSelected(item); }  protected void createLocationRequest() {     LocationRequest mLocationRequest = new LocationRequest();     mLocationRequest.setInterval(10000);    //Decrease this to save power load if possible     mLocationRequest.setFastestInterval(5000);     //high accuracy means the client will most likely use the gps     mLocationRequest.setPriority(LocationRequest.PRIORITY_HIGH_ACCURACY); }   @Override public void onLocationChanged(Location location) {     //this has the current location       mCurrentLocation = location;   }  @Override public void onConnectionFailed(ConnectionResult arg0) { //debug to UI          mLatitudeText.setText("failed :(");  }  @Override public void onConnected(Bundle arg0) {     // a location object containing the ph position      mLastLocation = LocationServices.FusedLocationApi.getLastLocation(                 mGoogleApiClient);     //debug to UI     mLatitudeText.setText("It's ooown!");       if (mLastLocation != null){          mLatitudeText.setText(String.valueOf(mLastLocation.getLatitude()));      }       //the call to the listener using a bool  if (mRequestingLocationUpdates) {         startLocationUpdates();     }    }  @Override public void onConnectionSuspended(int arg0) {     // TODO Auto-generated method stub  }   } </code></pre>