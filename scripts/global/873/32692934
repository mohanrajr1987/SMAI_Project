<p>I have a task in school, I am supossed to create a tree based on hypothesis and rules, with use of back-chaining. I got stuck on following task: Hypothesis = 'zot', </p>  <p>rules:</p>  <pre><code>ARBITRARY_EXP = ( IF( AND( 'a (?x)',          'b (?x)' ),     THEN( 'c d' '(?x) e' )),  IF( OR( '(?y) f e',         '(?y) g' ),     THEN( 'h (?y) j' )),  IF( AND( 'h c d j',          'h i j' ),     THEN( 'zot' )),  IF( '(?z) i',     THEN( 'i (?z)' )) ) </code></pre>  <p>Tree I got as a result is:</p>  <pre><code>OR( 'zot',     AND('h c d j',         OR('h i j',             AND('i f e',                 OR('i g',                     AND('g i')))))) </code></pre>  <p>Tree I was supossed to get as a result:</p>  <pre><code>OR('zot',     AND('h c d j',         OR('h i j', 'i f e', 'i g', 'g i'))) </code></pre>  <p>If we assign values (true/false) to each leaf of the tree in each answer, get get in most cases same result, except in 2 cases. I am confussed, my result seems good when done manually, I just don't understand how could they put last AND, OR, AND objects under one OR. Please help me, what answer did you get? Thank you in advance.</p>