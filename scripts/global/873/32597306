<p>Hello I'm trying to implement a N-bit adder/subtractor in VHDL but I'm not getting it to work properly for some reason and I can't seem to find what the problem is..</p>  <p>The adder is working as it should but the subtractor isn't and I can't really see what the problem is since I've checked the expression and it is correct, but when I simulate it seems like the subtraction part isn't working at all...</p>  <p>Here's how my implementation with overflow detection and saturation control:</p>  <pre><code>LIBRARY IEEE; USE IEEE.STD_LOGIC_1164.ALL;  entity ripple_adder_subtracter_saturate is     generic (WIDTH : INTEGER := 8);      port (a : IN STD_LOGIC_VECTOR(WIDTH-1 downto 0);            b : IN STD_LOGIC_VECTOR(WIDTH-1 downto 0);            cin : IN STD_LOGIC := '0';            saturate : IN STD_LOGIC := '0';            add_sub : IN STD_LOGIC := '1';            y : OUT STD_LOGIC_VECTOR(WIDTH-1 downto 0);            cout : OUT STD_LOGIC;            overflow : OUT STD_LOGIC);   end ripple_adder_subtracter_saturate;   ARCHITECTURE behavior OF ripple_adder_subtracter_saturate is   component bitAdder is  port(a : IN STD_LOGIC;       b : IN STD_LOGIC;       cin : IN STD_LOGIC;       add_sub : IN STD_LOGIC;       y : OUT STD_LOGIC;      cout : OUT STD_LOGIC);  end component;   signal carry : STD_LOGIC_VECTOR (WIDTH-1 downto 0); -- hold the carry outs from the adders  signal temp_sum : STD_LOGIC_VECTOR (WIDTH-1 downto 0);  signal o_flow : STD_LOGIC;                             -- internal overflow signal so I can read it in the process   begin  cell_0: bitAdder port map(a(0), b(0), cin, add_sub, temp_sum(0), carry(0));  G: FOR i IN 1 TO WIDTH-1 GENERATE     cell_i: bitAdder port map(a(i), b(i), carry(i-1), add_sub, temp_sum(i), carry(i));     end GENERATE;      o_flow &lt;= carry(WIDTH-1) XOR carry(WIDTH-2);     overflow &lt;= o_flow;     cout &lt;= carry(WIDTH-1);      process(saturate, temp_sum, carry, o_flow)      begin         if (saturate = '1' AND o_flow = '1') then             if (carry(WIDTH-1) = '0') then                 y &lt;= (WIDTH-1 =&gt; '0', others =&gt; '1');             else                 y &lt;= (WIDTH-1 =&gt; '1', others =&gt; '0');             end if;         else             y &lt;= temp_sum;          end if;     end process; end behavior; </code></pre>  <p>When the signal add_sub = 0, it should subtract and when it's 1 it should do additon etc..  This is how the full adder/subtractor looks like:</p>  <pre><code>LIBRARY ieee; USE ieee.std_logic_1164.ALL;  ENTITY bitAdder IS     PORT (a: IN STD_LOGIC;       b: IN STD_LOGIC;       cin: IN STD_LOGIC;       add_sub : IN STD_LOGIC;       y: OUT STD_LOGIC;       cout: OUT STD_LOGIC); END bitAdder;  ARCHITECTURE behavior OF bitAdder IS signal b_sub : STD_LOGIC := '1'; BEGIN     process(a, b, cin, add_sub)     begin         if (add_sub = '0') then             b_sub &lt;= (not b);             y &lt;= (a XOR b_sub) XOR cin;             cout &lt;= (a AND b_sub) OR (b_sub AND cin) OR (a AND cin);         else             y &lt;= (a XOR b) XOR cin;             cout &lt;= (a AND b) OR (b AND cin) or (a AND cin);         end if;     end process; END behavior; </code></pre>  <p>Can you see what I might've done wrong? I've been bashing my head towards the wall for multiple hours now without any success. So any kind of pointers would be of help!</p>  <p>Here's the testbench that it should pass through:</p>  <pre><code>----------------------------------- -- testbench type 3 for          -- -- ripple carry adder/subtracter -- -- with overflow signal          -- -- and saturation logic          -- -- for generic vector            -- -----------------------------------  LIBRARY ieee; USE ieee.std_logic_1164.ALL; USE ieee.numeric_std.ALL;  ENTITY ripple_adder_subtracter_saturate_tb3 IS    GENERIC (WIDTH:INTEGER:=8);    PORT(test_OK:OUT STD_LOGIC); END ripple_adder_subtracter_saturate_tb3;  ARCHITECTURE arch_ripple_adder_subtracter_saturate_tb3 OF                        ripple_adder_subtracter_saturate_tb3 IS     COMPONENT ripple_adder_subtracter_saturate IS       GENERIC (WIDTH:INTEGER:=8);       PORT(a:IN STD_LOGIC_VECTOR(WIDTH-1 DOWNTO 0);            b:IN STD_LOGIC_VECTOR(WIDTH-1 DOWNTO 0);            add_sub:IN STD_LOGIC;            saturate:IN STD_LOGIC;            y:OUT STD_LOGIC_VECTOR(WIDTH-1 DOWNTO 0);            overflow:OUT STD_LOGIC);    END COMPONENT ripple_adder_subtracter_saturate;     SIGNAL a_tb_signal:STD_LOGIC_VECTOR(WIDTH-1 DOWNTO 0);    SIGNAL b_tb_signal:STD_LOGIC_VECTOR(WIDTH-1 DOWNTO 0);    SIGNAL y_tb_signal:STD_LOGIC_VECTOR(WIDTH-1 DOWNTO 0);    SIGNAL add_sub_tb_signal:STD_LOGIC;    SIGNAL saturate_tb_signal:STD_LOGIC;    SIGNAL overflow_tb_signal:STD_LOGIC; BEGIN    ripple_adder_subtracter_saturate_comp:    COMPONENT ripple_adder_subtracter_saturate          PORT MAP(a=&gt;a_tb_signal,                   b=&gt;b_tb_signal,                   add_sub=&gt;add_sub_tb_signal,                   saturate=&gt;saturate_tb_signal,                   y=&gt;y_tb_signal,                   overflow=&gt;overflow_tb_signal);     saturate_tb_signal&lt;='0',               -- overflow                 '1' AFTER 1400 ns; -- saturate    add_sub_tb_signal&lt;='1',               -- add                '0' AFTER 700 ns,  -- sub                '1' AFTER 1400 ns, -- add                '0' AFTER 2100 ns; -- sub    a_tb_signal&lt;="00000000",  -- 0          "01010101" AFTER 100 ns, -- 85          "11100101" AFTER 300 ns, -- -27          "00000000" AFTER 700 ns, -- 0          "01010101" AFTER 800 ns, -- 85          "11100101" AFTER 1000 ns,  -- -27          "00000000" AFTER 1400 ns,  -- 0          "01010101" AFTER 1500 ns, -- 85          "11100101" AFTER 1700 ns, -- -27          "00000000" AFTER 2100 ns, -- 0          "01010101" AFTER 2200 ns, -- 85          "11100101" AFTER 2400 ns;  -- -27     b_tb_signal&lt;="00000000",  -- 0          "00011101" AFTER 100 ns, -- 29          "00111000" AFTER 200 ns, -- 56          "00000110" AFTER 400 ns, -- 6          "11001000" AFTER 500 ns, -- -56          "10010111" AFTER 600 ns, -- -105          "00000000" AFTER 700 ns, -- 0          "00011101" AFTER 800 ns, -- 29          "11001000" AFTER 900 ns, -- -56          "00111000" AFTER 1000 ns, -- 56          "00000110" AFTER 1100 ns, -- 6          "11001000" AFTER 1200 ns, -- -56          "01101001" AFTER 1300 ns, -- 105          "00000000" AFTER 1400 ns,  -- 0          "00011101" AFTER 1500 ns, -- 29          "00111000" AFTER 1600 ns, -- 56          "00000110" AFTER 1800 ns, -- 6          "11001000" AFTER 1900 ns, -- -56          "10010111" AFTER 2000 ns, -- -105          "00000000" AFTER 2100 ns, -- 0          "00011101" AFTER 2200 ns, -- 29          "11001000" AFTER 2300 ns, -- -56          "00111000" AFTER 2400 ns, -- 56          "00000110" AFTER 2500 ns, -- 6          "11001000" AFTER 2600 ns, -- -56          "01101001" AFTER 2700 ns; -- 105  test_proc: PROCESS    BEGIN --overflow --addition       WAIT FOR 50 ns; -- 50 ns 0+0=0 (00000000)       ASSERT (y_tb_signal="00000000")       REPORT "Error for 0+0=0=00000000"       SEVERITY ERROR;       ASSERT (overflow_tb_signal='0')       REPORT "Error in overflow bit when 0+0=0=00000000"       SEVERITY ERROR;        WAIT FOR 100 ns; -- 150 ns 85+29=114 (01110010)       ASSERT (y_tb_signal="01110010")       REPORT "Error for 85+29=114=01110010"       SEVERITY ERROR;       ASSERT (overflow_tb_signal='0')       REPORT "Error in overflow bit when 85+29=114=01110010"       SEVERITY ERROR;        WAIT FOR 100 ns; -- 250 ns 85+56=141-&gt;-115 (10001101)       ASSERT (y_tb_signal="10001101")       REPORT "Error for 85+56=141-&gt;-115=10001101"       SEVERITY ERROR;       ASSERT (overflow_tb_signal='1')       REPORT "Error in overflow bit when 85+56=141-&gt;-115=10001101"       SEVERITY ERROR;        WAIT FOR 100 ns; -- 350 ns -27+56=29 (00011101)       ASSERT (y_tb_signal="00011101")       REPORT "Error for -27+56=29=00011101"       SEVERITY ERROR;       ASSERT (overflow_tb_signal='0')       REPORT "Error in overflow bit when -27+56=29=00011101"       SEVERITY ERROR;        WAIT FOR 100 ns; -- 450 ns -27+6=-21 (11101011)       ASSERT (y_tb_signal="11101011")       REPORT "Error for -27+6=-21=11101011"       SEVERITY ERROR;       ASSERT (overflow_tb_signal='0')       REPORT "Error in overflow bit when -27+6=-21=11101011"       SEVERITY ERROR;        WAIT FOR 100 ns; -- 550 ns -27-56=-83 (10101101)       ASSERT (y_tb_signal="10101101")       REPORT "Error for -27-56=-83=10101101"       SEVERITY ERROR;       ASSERT (overflow_tb_signal='0')       REPORT "Error in overflow bit when -27-56=-83=10101101"       SEVERITY ERROR;        WAIT FOR 100 ns; -- 650 ns -27-105=-132-&gt;124 (01111100)       ASSERT (y_tb_signal="01111100")       REPORT "Error for -27-105=-132-&gt;124=01111100"       SEVERITY ERROR;       ASSERT (overflow_tb_signal='1')       REPORT "Error in overflow bit when -27-105=-132-&gt;124=01111100"       SEVERITY ERROR; --subtraction       WAIT FOR 100 ns; -- 750 ns 0-0=0 (00000000)       ASSERT (y_tb_signal="00000000")       REPORT "Error for 0-0=0=00000000"       SEVERITY ERROR;            ASSERT (overflow_tb_signal='0')       REPORT "Error in overflow bit when 0-0=0=00000000"       SEVERITY ERROR;        WAIT FOR 100 ns; -- 850 ns 85-29=56 (00111000)       ASSERT (y_tb_signal="00111000")       REPORT "Error for 85-29=56=00111000"       SEVERITY ERROR;            ASSERT (overflow_tb_signal='0')       REPORT "Error in overflow bit when 85-29=56=00111000"       SEVERITY ERROR;        WAIT FOR 100 ns; -- 950 ns 85-(-56)=141-&gt;-115 (10001101)       ASSERT (y_tb_signal="10001101")       REPORT "Error for 85-(-56)=141-&gt;-115=10001101"       SEVERITY ERROR;            ASSERT (overflow_tb_signal='1')       REPORT "Error in overflow bit when 85-(-56)=141-&gt;-115=10001101"       SEVERITY ERROR;        WAIT FOR 100 ns; -- 1050 ns -27-56=-83 (10101101)       ASSERT (y_tb_signal="10101101")       REPORT "Error for -27-56=-83=10101101"       SEVERITY ERROR;           ASSERT (overflow_tb_signal='0')       REPORT "Error in overflow bit when -27-56=-83=10101101"       SEVERITY ERROR;        WAIT FOR 100 ns; -- 1150 ns -27-6=-33 (11011111)       ASSERT (y_tb_signal="11011111")       REPORT "Error for -27-6=-33=11011111"       SEVERITY ERROR;           ASSERT (overflow_tb_signal='0')       REPORT "Error in overflow bit when -27-6=-33=11011111"       SEVERITY ERROR;        WAIT FOR 100 ns; -- 1250 ns -27-(-56)=29 (00011101)       ASSERT (y_tb_signal="00011101")       REPORT "Error for -27-(-56)=29=00011101"       SEVERITY ERROR;         ASSERT (overflow_tb_signal='0')       REPORT "Error in overflow bit when -27-(-56)=29=00011101"       SEVERITY ERROR;        WAIT FOR 100 ns; -- 1350 ns -27-105=-132-&gt;124 (01111100)       ASSERT (y_tb_signal="01111100")       REPORT "Error for -27-105=-132-&gt;124=01111100"       SEVERITY ERROR;         ASSERT (overflow_tb_signal='1')       REPORT "Error in overflow bit when -27-105=-132-&gt;124=01111100"       SEVERITY ERROR; --saturate --addition       WAIT FOR 100 ns; -- 1450 ns 0+0=0 (00000000)       ASSERT (y_tb_signal="00000000")       REPORT "Error for 0+0=0=00000000"       SEVERITY ERROR;       ASSERT (overflow_tb_signal='0')       REPORT "Error in overflow bit when 0+0=0=00000000"       SEVERITY ERROR;        WAIT FOR 100 ns; -- 1550 ns 85+29=114 (01110010)       ASSERT (y_tb_signal="01110010")       REPORT "Error for 85+29=114=01110010"       SEVERITY ERROR;       ASSERT (overflow_tb_signal='0')       REPORT "Error in overflow bit when 85+29=114=01110010"       SEVERITY ERROR;        WAIT FOR 100 ns; -- 1650 ns 85+56=141-&gt;127 (01111111)       ASSERT (y_tb_signal="01111111")       REPORT "Error for 85+56=141-&gt;127=10001101"       SEVERITY ERROR;       ASSERT (overflow_tb_signal='1')       REPORT "Error in overflow bit when 85+56=141-&gt;127=10001101"       SEVERITY ERROR;        WAIT FOR 100 ns; -- 1750 ns -27+56=29 (00011101)       ASSERT (y_tb_signal="00011101")       REPORT "Error for -27+56=29=00011101"       SEVERITY ERROR;       ASSERT (overflow_tb_signal='0')       REPORT "Error in overflow bit when -27+56=29=00011101"       SEVERITY ERROR;        WAIT FOR 100 ns; -- 1850 ns -27+6=-21 (11101011)       ASSERT (y_tb_signal="11101011")       REPORT "Error for -27+6=-21=11101011"       SEVERITY ERROR;       ASSERT (overflow_tb_signal='0')       REPORT "Error in overflow bit when -27+6=-21=11101011"       SEVERITY ERROR;        WAIT FOR 100 ns; -- 1950 ns -27-56=-83 (10101101)       ASSERT (y_tb_signal="10101101")       REPORT "Error for -27-56=-83=10101101"       SEVERITY ERROR;       ASSERT (overflow_tb_signal='0')       REPORT "Error in overflow bit when -27-56=-83=10101101"       SEVERITY ERROR;        WAIT FOR 100 ns; -- 2050 ns -27-105=-132-&gt;-128 (10000000)       ASSERT (y_tb_signal="10000000")       REPORT "Error for -27-105=-132-&gt;-128=01111100"       SEVERITY ERROR;       ASSERT (overflow_tb_signal='1')       REPORT "Error in overflow bit when -27-105=-132-&gt;-127=10000000"       SEVERITY ERROR; --subtraction       WAIT FOR 100 ns; -- 2150 ns 0-0=0 (00000000)       ASSERT (y_tb_signal="00000000")       REPORT "Error for 0-0=0=00000000"       SEVERITY ERROR;            ASSERT (overflow_tb_signal='0')       REPORT "Error in overflow bit when 0-0=0=00000000"       SEVERITY ERROR;        WAIT FOR 100 ns; -- 2250 ns 85-29=56 (00111000)       ASSERT (y_tb_signal="00111000")       REPORT "Error for 85-29=56=00111000"       SEVERITY ERROR;            ASSERT (overflow_tb_signal='0')       REPORT "Error in overflow bit when 85-29=56=00111000"       SEVERITY ERROR;        WAIT FOR 100 ns; -- 2350 ns 85-(-56)=141-&gt;127 (01111111)       ASSERT (y_tb_signal="01111111")       REPORT "Error for 85-(-56)=141-&gt;127=01111111"       SEVERITY ERROR;            ASSERT (overflow_tb_signal='1')       REPORT "Error in overflow bit when 85-(-56)=141-&gt;127=01111111"       SEVERITY ERROR;        WAIT FOR 100 ns; -- 2450 ns -27-56=-83 (10101101)       ASSERT (y_tb_signal="10101101")       REPORT "Error for -27-56=-83=10101101"       SEVERITY ERROR;           ASSERT (overflow_tb_signal='0')       REPORT "Error in overflow bit when -27-56=-83=10101101"       SEVERITY ERROR;        WAIT FOR 100 ns; -- 2550 ns -27-6=-33 (11011111)       ASSERT (y_tb_signal="11011111")       REPORT "Error for -27-6=-33=11011111"       SEVERITY ERROR;           ASSERT (overflow_tb_signal='0')       REPORT "Error in overflow bit when -27-6=-33=11011111"       SEVERITY ERROR;        WAIT FOR 100 ns; -- 2650 ns -27-(-56)=29 (00011101)       ASSERT (y_tb_signal="00011101")       REPORT "Error for -27-(-56)=29=00011101"       SEVERITY ERROR;         ASSERT (overflow_tb_signal='0')       REPORT "Error in overflow bit when -27-(-56)=29=00011101"       SEVERITY ERROR;        WAIT FOR 100 ns; -- 2750 ns -27-105=-132-&gt;-128 (10000000)       ASSERT (y_tb_signal="10000000")       REPORT "Error for -27-105=-132-&gt;-128=10000000"       SEVERITY ERROR;         ASSERT (overflow_tb_signal='1')       REPORT "Error in overflow bit when -27-105=-132-&gt;-128=10000000"       SEVERITY ERROR;     END PROCESS test_proc; END arch_ripple_adder_subtracter_saturate_tb3; </code></pre>  <p>And the .do file:</p>  <pre><code>-- ripple_adder_saturate_tb3.do  restart -f -nowave view signals wave add wave saturate_tb_signal a_tb_signal b_tb_signal y_tb_signal add wave -radix signed a_tb_signal b_tb_signal y_tb_signal add wave -radix unsigned y_tb_signal add wave overflow_tb_signal run 1380ns </code></pre>