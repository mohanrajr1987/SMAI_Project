<p>Say I have a class Slots as follows</p>  <pre><code>public class Slots {    //Other properties     .     .     .     public DateTime StartTime{get;set;}     public DateTime EndTime{ge;set;}     //Methods } </code></pre>  <p>And I have  <code>List&lt;Slots&gt;</code>, what is the most efficient way to determine consecutive Slotgroups? Consecutive slots are defined as any group of slots which start the next day relative to the previous slot, there is no overlap. If there is a day gap(no slots on that day in the list) then it should be considered start of another slot group.</p>  <pre><code>public List&lt;List&lt;Slots&gt;&gt; GetSlotGroups(List&lt;SLots&gt; slots) {     //return  list of slot groups according to logic described above } </code></pre>