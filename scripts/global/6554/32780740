<p>I have several detected polygons in an image and I try to find the brightest of them. I found a way but its relatively slow when it compares a lot of polygons.</p>  <p>The code does the following:</p>  <ol> <li>It resizes the area to the same size and</li> <li>returns the <a href="http://www.imagemagick.org/script/escape.php" rel="nofollow"><strong><code>format "%\[mean\]"</code></strong></a> value and return the biggest one</li> </ol>  <p>As far as I can see the process get slowed down by the resizing command.  <strong>Any idea or different approach to fasten that algorithm?</strong></p>  <hr>  <h2>Example</h2>  <p>Here an example where just two polygons are compared. It still take <code>~0.3457 sec</code> for the calculation.</p>  <pre class="lang-php prettyprint-override"><code>// the example image $image = "http://i.stack.imgur.com/hmPYh.png";  // get parameters of the image list ($width, $height, $type) = getimagesize ("$image");  // the polygones $quadrilateral[0] = array('pointA' =&gt; array ('x' =&gt; 50, 'y' =&gt; 105),                           'pointB' =&gt; array ('x' =&gt; 470.593, 'y' =&gt; 105),                           'pointC' =&gt; array ('x' =&gt; 475.714, 'y' =&gt; 398.404),                           'pointD' =&gt; array ('x' =&gt; 50, 'y' =&gt; 405.835)); $quadrilateral[1] = array('pointA' =&gt; array ('x' =&gt; 525, 'y' =&gt; 185),                           'pointB' =&gt; array ('x' =&gt; 935, 'y' =&gt; 185),                           'pointC' =&gt; array ('x' =&gt; 935, 'y' =&gt; 477),                           'pointD' =&gt; array ('x' =&gt; 525, 'y' =&gt; 477));  // measure time $start_time = microtime(true);  // start with zero $brightest = 0;  // loop through $quadrilateral foreach ( $quadrilateral as $key =&gt; $q) {      $resize_factor = .5; // resize factor for check if it works faster     $newHeight = $height*$resize_factor;     $newWidth = $width*$resize_factor;      // resize image and return %mean                 $command = "convert $image \\                 -background none \\                 -gravity NorthWest  \\                 -extent ".$width."x".$height." \\                 -alpha set -virtual-pixel transparent \\                 -distort Perspective \"\\                     ".$q['pointA']['x'].",".$q['pointA']['y']." 0,0 \\                     ".$q['pointB']['x'].",".$q['pointB']['y']." $newWidth,0 \\                     ".$q['pointC']['x'].",".$q['pointC']['y']." $newWidth,$newHeight \\                     ".$q['pointD']['x'].",".$q['pointD']['y']." 0,$newHeight \"\\                 -crop ".$newWidth."x".$newHeight."+0+0 +repage \\                 -format \"%[mean]\" info: ";          $output = shell_exec("$command");      $draw =  "polygon ".$q['pointA']['x'].",".$q['pointA']['y']." "                        .$q['pointB']['x'].",".$q['pointB']['y']." "                        .$q['pointC']['x'].",".$q['pointC']['y']." "                        .$q['pointD']['x'].",".$q['pointD']['y']." ";      // check $output is brighter then $brightest     if ($output &gt; $brightest) {          $result = $draw;                                                 $brightest = $output;      }  }  // measure time $end_time = microtime(true);  $command = "convert  $image \\                 -fill none -stroke red -strokewidth 3 \\                 -draw \"$result\" \\                 $image2";  $output = shell_exec("$command");  echo "&lt;pre&gt;".number_format(($end_time-$start_time), 4)  . " sec&lt;/pre&gt;\n"; </code></pre>  <p><a href="http://i.stack.imgur.com/exNVg.png" rel="nofollow"><img src="http://i.stack.imgur.com/exNVg.png" alt="result brightest part is marked"></a></p>