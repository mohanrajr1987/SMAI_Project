<p>I have a function in Java that uses <code>ImageIO.read()</code> to read a file and detect if its fully transparent:  </p>  <pre><code>private static boolean isFullyAlpha(File f) throws IOException {     BufferedImage img = ImageIO.read(f);     for (int y = 0; y &lt; img.getHeight(); y++) {         for (int x = 0; x &lt; img.getWidth(); x++) {             if (((img.getRGB(x, y) &gt;&gt; 24) &amp; 0xFF) != 0) {                 println( f.name + " " + ((img.getRGB(x, y) &gt;&gt; 24) &amp; 0xFF) + " " + x + " " + y)                 return false;             }         }     }     return true; } </code></pre>  <p>If I try to read a very simple file that was created with ImageMagick's convert function by cropping an image it returns that the first pixel of this image has 255 alpha (not transparent at all), whereas it works for other images.</p>  <p>The file that is wrong with ImageIO:   <a href="https://dl.dropboxusercontent.com/u/9186429/imageTest/mountainMap41.png" rel="nofollow">https://dl.dropboxusercontent.com/u/9186429/imageTest/mountainMap41.png</a></p>  <p>Is Java's ImageIO buggy? If yes what library could parse this image correctly? Image editors like Paint.NET or Gimp interpret this image correctly.</p>  <p>Note: A file correctly parsed by this function:<br> <a href="https://dl.dropboxusercontent.com/u/9186429/imageTest/mountainMap305.png" rel="nofollow">https://dl.dropboxusercontent.com/u/9186429/imageTest/mountainMap305.png</a></p>