<p>Just what the title says .</p>  <p>Strictly speaking what I define as "text" bounding box for a grayscaled image is a set of 4 coordinates (x,y,x+width,y+height) that have to define a rectangle area in that image that has the maximum number of non white pixels and at the same time the least possible number of white pixels(without chagning the maximum amount of non-white pixel). I have text in quotation marks since images does not actually contain text because images do only contain pixels with colours. </p>  <p>Having installed ImageMagick in my Ubuntu and typing in the terminal the command: <code>$convert input.png -trim ouput.png</code> , I get :</p>  <p><a href="http://i.stack.imgur.com/4HWDF.png" rel="nofollow"><img src="http://i.stack.imgur.com/4HWDF.png" alt="input.png"></a></p>  <p><a href="http://i.stack.imgur.com/9kFoQ.png" rel="nofollow"><img src="http://i.stack.imgur.com/9kFoQ.png" alt="output.png"></a></p>  <p>Open the two images in new tabs in your web browser and you will understand the difference they have and you will also understand what I define as "text" bounding box. The output.png has actually the width and height that I am looking for.I do not know how to get x and y coordinates.</p>  <p>The answer provided here  <a href="http://stackoverflow.com/questions/6183479/cropping-a-pdf-using-ghostscript-9-01/6184547#6184547">(1)</a> for pdf pages does not meet my criteria since the "text" bounding box that gs gives me has big white margins ( and actually as far as I can understand what gs defines as "text" bounding box for a pdf is something different from my definition of "text" bounding box for a picture).</p>