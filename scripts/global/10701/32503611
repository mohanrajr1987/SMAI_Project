<p>I am facing the following issue while issuing request to retrieve the access token. First, I registered the application in developer console and consequently downloaded the client secret file. The content of which is as below: (i have marked secrets as xxxxx). </p>  <pre><code>{"installed":{"client_id":"xxxx","auth_uri":"https://accounts.google.com/o/oauth2/auth","token_uri":"https://accounts.google.com/o/oauth2/token","auth_provider_x509_cert_url":"https://www.googleapis.com/oauth2/v1/certs","client_secret":"xxxx","redirect_uris":["urn:ietf:wg:oauth:2.0:oob","http://localhost"]}}  </code></pre>  <p>In the developer documentation (located at : <a href="https://developers.google.com/identity/protocols/OAuth2InstalledApp" rel="nofollow">https://developers.google.com/identity/protocols/OAuth2InstalledApp</a> ) however, it is given a different address to connect and retrieve the access tokens.</p>  <p>POST /oauth2/v3/token HTTP/1.1 Host: www.googleapis.com Content-Type: application/x-www-form-urlencoded</p>  <p>I am confused  1. which URI's to use to get access to tokens.  2. What redirect_uri should be used? Is it the local host or the uri  as noted in the developer documentation. </p>  <p>When i use the client secret token uri, i receive a 400 bad request and when i use the uri as noted in the developer documentation, I receive forbidden 403. </p>  <pre><code>POST /oauth2/v3/token HTTP/1.1 Host: www.googleapis.com Content-Type: application/x-www-form-urlencoded </code></pre>  <p>Can someone kindly clarify. It would be an immense help.  I am writing a console application and i do not want to use the C# api already provided. The sample code is located below. </p>  <p>Where am I doing wrong?</p>  <pre><code>        string tokenUri = @"https://accounts.google.com/o/oauth2/token";         HttpWebRequest request=(HttpWebRequest) WebRequest.Create(tokenUri);           NameValueCollection outgoingQueryString = HttpUtility.ParseQueryString(String.Empty);         outgoingQueryString.Add("code", this.clientCode);         outgoingQueryString.Add("client_id", this.clientID);         outgoingQueryString.Add("client_secret", this.clientSecret);         outgoingQueryString.Add("redirect_uri", "https://oauth2-login-demo.appspot.com/code");         outgoingQueryString.Add("grant_type","authorization_code");         string postdata = outgoingQueryString.ToString();           byte[] byteArray = Encoding.UTF8.GetBytes(postdata);          request.Method = "POST";         request.ContentType = "application/x-www-form-urlencoded";         request.ContentLength = byteArray.Length;          Stream reqStr = request.GetRequestStream();         reqStr.Write(byteArray, 0, byteArray.Length);         reqStr.Flush();         reqStr.Close();           HttpWebResponse response=request.GetResponse() as HttpWebResponse;         Console.WriteLine(response.StatusCode.ToString()); </code></pre>  <p>Found out that url-encoded is not to be used, instead json is expected. revised the code as below and still 400 persist. </p>  <pre><code>string tokenUri = "https://accounts.google.com/o/oauth2/token";         TokenFileds f = new TokenFileds() { client_code = this.clientCode, client_id = this.clientID, client_secret = this.clientSecret, redirect_uri = "urn:ietf:wg:oauth:2.0:oob", grant_type = "authorization_code" };         //string retString=this.SerializeToJson&lt;TokenFileds&gt;(f);         string retString = this.NewjsonLib(f);         byte[] byteArray=Encoding.UTF8.GetBytes(retString);          HttpWebRequest request = (HttpWebRequest)WebRequest.Create(tokenUri);         request.Method = "POST";         request.ContentType = "application/x-www-form-urlencoded;charset=utf-8";         request.ContentLength = byteArray.Length;          Stream strm = request.GetRequestStream();         strm.Write(byteArray, 0, byteArray.Length);         strm.Flush();         strm.Close();         HttpWebResponse response =request.GetResponse() as HttpWebResponse; </code></pre>