<p>I have a setup which is explained below:</p>  <ol> <li><strong>MainServer</strong> inside private network which is not accessible from outside/ public internet.</li> <li><strong>Forwarder</strong> resides in public cloud which could be accessed by everybody (both public and private network)</li> <li><strong>Clients</strong> reside in public network can access <em>Forwarder</em> but not <em>MainServer</em></li> </ol>  <p>Now, <em>MainServer</em> will open 'n' webrequests to <em>Forwarder</em> with infinite timeout. When <em>Client</em> make a webrequest to <em>Forwarder</em>, all the webrequest parameters and data are read and sent as response to one of the webrequests from <em>MainServer</em>. That server webrequest from <em>MainServer</em> will be replaced by another infinite timeout webrequest again.</p>  <p>Is this approach correct? Performance? Scalability?</p>  <p>Please comment and suggest any better approach if available.</p>