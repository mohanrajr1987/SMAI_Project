<p>In C#, each of these tasks are relatively easy. I need to open a webpage and login while using an authenticated proxy.</p>  <p>The first approach was to use HTTPWebRequest and HTTPWebResponse to GET and POST to login to the webpage. This worked well, especially with how simply the WebRequest object handles the Proxy object.</p>  <p>The problem with this approach is, there is JavaScript code that appends hidden inputs to the login form. Pre-compile time I cant know all of the parameters for the POST request.</p>  <p>The next approach was to use the WebBrowser object which worked extremely well for logging in. I just did a GetElementById and set the InnerText for 'username' and 'password' and it happily sent the POST request.</p>  <p>The problem with this approach is that the WebBrowser doesnt make use of the Proxy object. One solution I saw for using a WebBrowser object was to change the Internet Settings(IE) programmatically and then login. However, while running multi threaded, each thread will all be on the same proxy (undesirable).</p>  <p>Are there any elegant solutions for my problem? It seems the best i will be able to do is to manually parse the JS and build the POST request myself and send it using HTTPWebRequest. This approach sounds horrible and error prone.</p>