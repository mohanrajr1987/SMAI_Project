<p>Below is my overridden GetWebRequest.  If I remove lines marked with '1' and '2' below, I dont get any error.  But since I want to compress data sent over the network, I uncomment these and I get error "<code>An existing connection was forcibly closed by the remote host.</code>"</p>  <pre><code>protected override WebRequest GetWebRequest(Uri uri) {     WebRequest req = base.GetWebRequest(uri);      byte[] credentialBuffer = new UTF8Encoding().GetBytes(Settings.Get("usr") + ":" + Settings.Get("pwd"));     req.Headers.Add("Accept-Encoding", "gzip, deflate"); //1     req.Headers["Authorization"] = "Basic " + Convert.ToBase64String(credentialBuffer);      if (req is HttpWebRequest)     {         (req as HttpWebRequest).AutomaticDecompression = DecompressionMethods.GZip | DecompressionMethods.Deflate;  //2     }      return req; } </code></pre>  <p>Below is full stack trace of the exception, please help.</p>  <p>I noticed that I get this only if I am sending lots of data to client. Then I tried putting break-point in my GetWebResponse() and than waiting at the break-point for couple of minutes once response comes back and I was getting same error regardless of data size being sent over network. So, this error seems to have something with timing rather than size of data.</p>  <p>Much appreciated</p>  <pre><code>Message:  An existing connection was forcibly closed by the remote host. InnerException: N/A Stack Trace:    at System.Net.Sockets.Socket.ReceiveNoCheck(Byte[] buffer, Int32 index, Int32 request, SocketFlags socketFlags)    at System.Net.Sockets.Socket.Receive(Byte[] buffer, Int32 offset, Int32 size, SocketFlags socketFlags)    at System.Net.Connection.Read(Byte[] buffer, Int32 offset, Int32 count)    at System.Net.HttpWebRequest.ConnectionClient.Read(Byte[] data, Int32 offset, Int32 length)    at System.Net.HttpReadStream.NetworkRead(Byte[] data, Int32 offset, Int32 length)    at System.Net.ContentLengthReadStream.doRead(Byte[] data, Int32 offset, Int32 length)    at System.Net.HttpReadStream.Read(Byte[] buffer, Int32 offset, Int32 length)    at System.IO.StreamReader.ReadBuffer(Char[] userBuffer, Int32 userOffset, Int32 desiredChars, Boolean&amp; readToUserBuffer)    at System.IO.StreamReader.Read(Char[] buffer, Int32 index, Int32 count)    at System.Xml.XmlTextReaderImpl.ReadData()    at System.Xml.XmlTextReaderImpl.ParseAttributeValueSlow(Int32 curPos, Char quoteChar, NodeData attr)    at System.Xml.XmlTextReaderImpl.ParseAttributes()    at System.Xml.XmlTextReaderImpl.ParseElement()    at System.Xml.XmlTextReaderImpl.ParseElementContent()    at System.Xml.XmlTextReaderImpl.Read()    at System.Xml.XmlTextReader.Read()    at System.Xml.XmlReader.ReadEndElement()    at System.Xml.Serialization.XmlSerializationReader.DeserializePrimitiveElement(LogicalType deserializeAs, Accessor accessor, Fixup fixup, Object fixupTarget, String identifier, Boolean emptyValue, Boolean nullValue)    at System.Xml.Serialization.XmlSerializationReader.deserializeElement(Accessor accessor, Fixup fixup, Object fixupTarget)    at System.Xml.Serialization.XmlSerializationReader.DeserializeElementMember(MemberValueCollection members, Object fixupTarget, Hashtable internalState, Boolean&amp; firstElement)    at System.Xml.Serialization.XmlSerializationReader.deserializeMembers(MemberValueCollection members, Object fixupTarget)    at System.Xml.Serialization.XmlSerializationReader.DeserializeComplexElement(LogicalType deserializeAs, Accessor accessor, Fixup fixup, Object fixupTarget, String identifier, Boolean emptyValue, Boolean nullValue)    at System.Xml.Serialization.XmlSerializationReader.deserializeElement(Accessor accessor, Fixup fixup, Object fixupTarget)    at System.Xml.Serialization.XmlSerializationReader.DeserializeElementMember(MemberValueCollection members, Object fixupTarget, Hashtable internalState, Boolean&amp; firstElement)    at System.Xml.Serialization.XmlSerializationReader.deserializeMembers(MemberValueCollection members, Object fixupTarget)    at System.Web.Services.Protocols.SoapMessageParser.execute()    at System.Web.Services.Protocols.SoapMessageSerializer.Deserialize(XmlReader reader, SoapHttpClientProtocol client, LogicalSoapMethod soapMethod, Boolean soap12)    at System.Web.Services.Protocols.SoapHttpClientProtocol.doInvoke(String methodName, Object[] parameters, WebClientAsyncResult asyncResult)    at System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(String methodName, Object[] parameters)    at MyApp.MyWS.IMyService.Login(Int32 SessionID, String SecurityHash)    at MyApp.MainForm.loginButton_Click(Object sender, EventArgs e)    at System.Windows.Forms.Control.OnClick(EventArgs e)    at System.Windows.Forms.Button.OnClick(EventArgs e)    at System.Windows.Forms.ButtonBase.WnProc(WM wm, Int32 wParam, Int32 lParam)    at System.Windows.Forms.Control._InternalWnProc(WM wm, Int32 wParam, Int32 lParam)    at Microsoft.AGL.Forms.EVL.EnterMainLoop(IntPtr hwnMain)    at System.Windows.Forms.Application.Run(Form fm)    at MyApp.MainForm.Main() </code></pre>  <p>VS2008 Output tab will also show several of these </p>  <pre><code>A first chance exception of type 'System.Net.Sockets.SocketException' occurred in System.dll A first chance exception of type 'System.Net.Sockets.SocketException' occurred in System.dll A first chance exception of type 'System.Net.Sockets.SocketException' occurred in System.dll A first chance exception of type 'System.Net.Sockets.SocketException' occurred in System.dll A first chance exception of type 'System.Net.Sockets.SocketException' occurred in System.dll </code></pre>