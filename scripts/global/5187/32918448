<p>Ex:  Is this acceptable? It compiles and seems to work for me; so is this bad form?</p>  <p>.h file</p>  <pre><code>class MyClass {   static char c[]; }; </code></pre>  <p>.cpp file    </p>  <pre><code>char MyClass::c[] = "abcde"; </code></pre>  <hr>  <p>Or must I do this instead, for example?</p>  <p>.h file</p>  <pre><code>class MyClass {   static char c[10]; }; </code></pre>  <p>.cpp file    </p>  <pre><code>char MyClass::c[10] = "abcde"; </code></pre>  <p>Is there a benefit to one technique over the other? I'm not sure if I'm missing something. I don't know what I don't know, ya know?</p>  <h2>Update:</h2>  <p>The original code I posted looked like this below. I edited it to make it as shown above since I didn't mean for the "private" aspect of it to be the point of discussion. In my real code (running on an Arduino), I am using .h and .cpp files and the static member is only intended to be accessed by the class. <s><strong>I guess I'm learning something new though too, as the answers regarding the below code seem to tell me that private static members are the same as public static members ie: they can both be modified by anything outside the class if static. That, I didn't know.</strong></s> WRONG, see the <a href="http://stackoverflow.com/questions/7857989/static-member-variable-when-declared-private">answer by Alok Save here</a>. More on static member variables <a href="http://www.learncpp.com/cpp-tutorial/811-static-member-variables/" rel="nofollow">here</a>. This line was especially helpful to me: <em>"Because static member variables are not part of the individual objects, you must explicitly define the static member if you want to initialize it to a non-zero value...This initializer should be placed in the code file for the class (eg. Something.cpp). In the absense of an initializing line, C++ will initialize the value to 0."</em></p>  <pre><code>class MyClass {   private:   static char c[]; };  char MyClass::c[] = "abcde"; </code></pre>  <hr>  <p>Or must I do this instead, for example?</p>  <pre><code>class MyClass {   private:   static char c[10]; };  char MyClass::c[10] = "abcde"; </code></pre>