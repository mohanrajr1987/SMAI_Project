<p>I just modified it. Another problem is that if I want to have a subclass inherit from BaseParticipant, may I re-implement <code>func performEvent</code> inside the subclass? For example:</p>  <pre><code>class CyclingParticipant: BaseParticipant, Participant { init(name: String) {     super.init(name: name, preferredEvent: Event.CYCLING)  }  func performEvent(event: Event, distance: Distance) throws {  }  } </code></pre>  <p>but the compiler said "redundant conformance of CyclingParticipant to protocol Participant .</p>  <pre><code>class BaseParticipant: Participant {  var name: String  var preferredEvent: Event  var raceTime: Int  var couldNotFinish: Bool  //var performedEvent: Event // in swift, the class accepts protocol must impletment all funcs inside protocol  init(name: String, preferredEvent: Event) {     self.name = name     self.preferredEvent = preferredEvent     self.raceTime = 0     self.couldNotFinish = false }  func getName() -&gt; String {     return self.name }  func getPreferredEvent() -&gt; Event {     return self.preferredEvent }  func isDisqualified() -&gt; Bool {     return self.couldNotFinish }  func addTime(addtionalRaceTime:Int) -&gt; Void {     self.raceTime += addtionalRaceTime }  func setCouldNotFinish() -&gt; Void {     self.couldNotFinish = true } func performEvent(event: Event, distance: Distance) throws -&gt; Int {     return 1 } func getTime() throws {  }  } </code></pre>  <p>The code of protocol Participant:</p>  <pre><code>protocol Participant { func getName() -&gt; String func getPreferredEvent() -&gt; Event func isDisqualified() -&gt; Bool func performEvent(event: Event,distance: Distance) throws -&gt;Int func addTime(addtionalRaceTime: Int) func setCouldNotFinish() func getTime() throws  } </code></pre>