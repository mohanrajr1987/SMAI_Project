<p>I came across this code and i have no idea what it is or what is the purpose.</p>  <p>Class A</p>  <pre><code>internal class RequestBase&lt;T&gt; {     public RequestBase()     {         ID = Helper.GetNextId().ToString(CultureInfo.InvariantCulture);     }     public RequestBase(string method, T @params)         : this()     {         Method = method;         Parameters = @params;     }      [DataMember(Name = "id")]     public string ID { get; private set; }      [DataMember(Name = "method")]     public string Method { get; set; }      [DataMember(Name = "params")]     public T Parameters { get; set; } } </code></pre>  <p>Class B</p>  <pre><code>[DataContract] internal class AuthenicateRequest {     [DataMember(Name = "api_key", IsRequired = true)]     public string APIKey { get; set; }      [DataMember(Name = "secret_key", IsRequired = true)]     public string SecretKey { get; set; } } </code></pre>  <p>So here is the part where i don't understand.</p>  <pre><code>var requestObj = new RequestBase&lt;AuthenicateRequest&gt;                 {                 Method = "auth.accessToken",                 Parameters = new AuthenicateRequest                         {                         APIKey = api_key,                         SecretKey = secret_key                         }                 }; </code></pre>  <p>Q1: In the section Parameters, how does api_key get pass to ClassB APIKey without doing ClassB.APIKey = api_key?</p>  <p>Q2: Why initiate Parameters = new AuthenicateRequest { APIKey = api_key, SecretKey = secret_key } rather than do Parameters = new AuthenicateRequest(api_key, secret_key)?</p>  <p>I have more questions to ask but i think i better put it in a separate post.</p>