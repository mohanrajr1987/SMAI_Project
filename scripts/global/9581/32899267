<p>I need to provide a file name when save button is clicked and i got some code for scribbledraganddrop and i want to implement the save button option for this code, but unable to find the bufferedimage/buffered value which i should take in the imageIO.write as an inputstream.</p>  <pre><code>JFileChooser save = new JFileChooser();         int option = save.showSaveDialog(frame);         if (option == JFileChooser.APPROVE_OPTION) {             try {                  System.out.println(Arrays.toString(Scribble.supportedFlavors));                 //InputStream in = new ByteArrayInputStream(Scribble.supportedFlavors);  // not working??                 //System.out.println(scribbles.toString());                 //BufferedImage awtImage = ImageIO.read(in);                 BufferedImage awtImage = new BufferedImage(frame.getWidth(),frame.getHeight(),BufferedImage.TYPE_INT_RGB);                 File selected = save.getSelectedFile();                 //System.out.println(in);                 frame.paint(awtImage.getGraphics());                 try {                     ImageIO.write(awtImage, "png", selected);                     System.out.println("panel saved as image at: " + selected.getPath());                 } catch (Exception evt) {                     System.out.println("panel not saved" + evt.getMessage());                 }              } catch (Exception ex) { // again, catch any exceptions and...                 System.out.println(ex.getMessage());             }         } </code></pre>  <p>My entire code can be found here: <a href="https://github.com/mitshine/scribbledraganddrop/issues/1" rel="nofollow">https://github.com/mitshine/scribbledraganddrop/issues/1</a> where the Transferhandle is implemented here like this:</p>  <pre><code>  //====== The following methods implement the Transferable interface =====    // This is the custom DataFlavor for Scribble objects   public static DataFlavor scribbleDataFlavor = new DataFlavor(       Scribble.class, "Scribble");    // This is a list of the flavors we know how to work with   public static DataFlavor[] supportedFlavors = { scribbleDataFlavor,       DataFlavor.stringFlavor };    /** Return the data formats or "flavors" we know how to transfer */   public DataFlavor[] getTransferDataFlavors() {     return (DataFlavor[]) supportedFlavors.clone();   }    /** Check whether we support a given flavor */   public boolean isDataFlavorSupported(DataFlavor flavor) {     return (flavor.equals(scribbleDataFlavor) || flavor         .equals(DataFlavor.stringFlavor));   }    /**    * Return the scribble data in the requested format, or throw an exception    * if we don't support the requested format    */   public Object getTransferData(DataFlavor flavor)       throws UnsupportedFlavorException {     if (flavor.equals(scribbleDataFlavor)) {       return this;     } else if (flavor.equals(DataFlavor.stringFlavor)) {       return toString();     } else       throw new UnsupportedFlavorException(flavor);   } </code></pre>