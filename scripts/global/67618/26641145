<p>I have a <code>View</code> that has 2 buttons.</p>  <p>One button called <code>Create</code> causes form validation and shows the preview of <code>SQL Query</code> to be executed. Another button called <code>Confirm</code>, performs actual execution of the query.</p>  <p>I need to identify in my controller which button was clicked to perform an appropriate action.</p>  <p>This my View:</p>  <pre><code>&lt;%using (Html.BeginForm()) { %&gt;    &lt;%:Html.AntiForgeryToken() %&gt;     &lt;div&gt;         &lt;fieldset&gt;             &lt;legend&gt;E-Safe Information&lt;/legend&gt;                &lt;div id="Div1" style="height:10px; margin-bottom:10px" runat="server"&gt;                     &lt;%:@Html.ValidationMessage("message") %&gt;                   &lt;/div&gt;                 &lt;%:ViewData["Message"] %&gt;                 &lt;table&gt;                     &lt;tr&gt;                         &lt;td&gt;&lt;div class="editor-label"&gt;&lt;%: Html.LabelFor(m =&gt; m.Corporation) %&gt;&lt;/div&gt;&lt;/td&gt;                         &lt;td&gt;&lt;div class="editor-field"&gt;&lt;%: Html.TextBoxFor(m =&gt; m.Corporation)%&gt;&lt;/div&gt;&lt;/td&gt;                         &lt;td&gt;&lt;%: Html.ValidationMessageFor(m =&gt; m.Corporation) %&gt;&lt;/td&gt;                     &lt;/tr&gt;                     &lt;tr&gt;                         &lt;td&gt;&lt;div class="editor-label"&gt;&lt;%: Html.LabelFor(m =&gt; m.Region) %&gt;&lt;/div&gt;&lt;/td&gt;                         &lt;td&gt;&lt;div class="editor-field"&gt;&lt;%: Html.TextBoxFor(m =&gt; m.Region, new { @id = "regionTextBox", maxlength = 2 })%&gt;&lt;/div&gt;&lt;/td&gt;                         &lt;td&gt;&lt;%: Html.ValidationMessageFor(m =&gt; m.Region) %&gt;&lt;/td&gt;                     &lt;/tr&gt;                     &lt;tr&gt;                         &lt;td&gt;&lt;div class="editor-label"&gt;&lt;%: Html.LabelFor(m =&gt; m.PortfolioName) %&gt;&lt;/div&gt;&lt;/td&gt;                         &lt;td&gt;&lt;div class="editor-field"&gt;&lt;%: Html.TextBoxFor(m =&gt; m.PortfolioName) %&gt;&lt;/div&gt;&lt;/td&gt;                         &lt;td&gt;&lt;%: Html.ValidationMessageFor(m =&gt; m.PortfolioName) %&gt;&lt;/td&gt;                     &lt;/tr&gt;                     &lt;tr&gt;                         &lt;td&gt; &lt;input type="submit" value="Create" /&gt;&lt;/td&gt;                     &lt;/tr&gt;                 &lt;/table&gt;         &lt;/fieldset&gt;     &lt;/div&gt;                 &lt;div id="review"&gt;         REVIEW:         &lt;p&gt;         &lt;%:ViewData["Review"]%&gt;         &lt;/p&gt;          &lt;input id="queryReview" type="submit" value="OK"   /&gt;     &lt;/div&gt;  &lt;%} %&gt; </code></pre>  <p>This is my controller:</p>  <pre><code>public class EsafeController : Controller {   private ESafeActionService ESafeData { get; set; }  protected override void Initialize(RequestContext requestContext) {     if (ESafeData == null) { ESafeData = new ESafeActionService(); }      base.Initialize(requestContext); }  public ActionResult Index() {     return View(); }  [AcceptVerbs(HttpVerbs.Post)] [ValidateAntiForgeryToken] public ActionResult Index(EsafeModel model) {      if (ModelState.IsValid)     {         EsafeActions eSafe = new EsafeActions(model.Corporation, model.Region, model.PortfolioName);          if (ESafeData.ValidateData(eSafe))         {             ViewData["Review"] = ESafeData.CreateReview(eSafe);              if (ESafeData.Create(eSafe))             {                 ViewData["Message"] = "E-Safe data created!!!";             }         }         else         {            ModelState.AddModelError("message", "The region should be 2 characters long.");         }     }     else     {         ModelState.AddModelError("message", "Creation of Data failed. Please correct errors and try again.");     }     return View(model); } </code></pre>  <p>}</p>  <p>Thank you</p>