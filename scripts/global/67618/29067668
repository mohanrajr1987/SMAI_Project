<p>As we need Async Ajax requests, it is required to disable session state. Web app is based on ASP.Net 4 - MVC 2.</p>  <p>I am aware of <code>[SessionState(SessionStateBehavior.Disabled)]</code>, however it is available in MVC 3+. </p>  <p>I am using the following method to route specific HTTP requests to a sessionless HTTPContext<a href="http://stackoverflow.com/a/9241918/172163"> [source]</a>:</p>  <pre class="lang-cs prettyprint-override"><code>public class CustomRouteHandler : IRouteHandler     {         public System.Web.IHttpHandler GetHttpHandler(RequestContext requestContext)         {             requestContext.HttpContext.SetSessionStateBehavior(System.Web.SessionState.SessionStateBehavior.ReadOnly);             return new MvcHandler(requestContext);         }     } </code></pre>  <p>And in Global.asax:</p>  <pre class="lang-cs prettyprint-override"><code>routes.MapRoute( _           Nothing, _           "ajaxrequest/{id}", _           New With {.controller = "AjaxEngine", .action = "Index", .id = UrlParameter.Optional}, _              New SessionLessRouteHandler()         ) </code></pre>  <p>Result? The code compiles correctly, no errors in runtime. However, it does not change anything and in the HTTP Header of every single Ajax request I see a new set-cookie with a new session. For example, A browser may request 100 Ajax requests, and a new session will be generated for each request. And I never need a session for a static Ajax request. I see the following line in each Ajax request diagnosed by Chrome Network Monitor:</p>  <p><code>Set-Cookie:ASP.NET_SessionId=xlgxdzdxdeilws23prjns3cv; domain=mydomain.com; path=/</code></p>  <p>Any idea why it does not work? And how can I avoid creating a new session for the requests?</p>  <ul> <li>I have tried <a href="http://blogs.msdn.com/b/rickandy/archive/2009/12/17/session-less-mvc-controller.aspx" rel="nofollow">the other solution</a> by Rick, however the result is same as above.</li> </ul>