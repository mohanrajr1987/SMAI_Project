<p>This problem is similar to a previous <a href="http://stackoverflow.com/questions/2641653/pass-a-data-frame-column-name-to-a-function">Stack question</a>, except that the function calls the <code>plyr/dplyr</code> package functions:</p>  <p>Using the example for illustration:</p>  <pre><code>library(dplyr) df &lt;- data.frame(A=1:10, B=2:11, C=3:12)  func &lt;- function(name,dat=df){         output &lt;- dat %&gt;%                   select(A,name) %&gt;%                   arrange(desc(name)) } </code></pre>  <p>The following call naturally produces an error:</p>  <pre><code>result &lt;- func(B) </code></pre>  <p>While passing the arg. as character:</p>  <pre><code>result &lt;- func("B") </code></pre>  <p>gives: </p>  <pre><code>Error: All select() inputs must resolve to integer column positions. </code></pre>  <p><strong>Update</strong>: Note that <code>func</code> also calls the <code>arrange()</code> function from <code>dplyr</code>. For now, <code>select_</code> solved 1/2 of the problem as suggested in the comment.  </p>  <p>Using <code>arrange_(desc(name))</code> throws this error: Error in eval(expr, envir, enclos) : incorrect size (1), expecting : 10</p>  <p><strong>Update/Edit</strong>:  As suggested in the comments, a resolution could be:</p>  <pre><code>func &lt;- function(name,dat=df){         output &lt;- dat %&gt;%                   select_(~A,name) %&gt;%                   arrange_(interp(~desc(var), var=as.name(name))) }  result &lt;- func(B) </code></pre>  <p>Is it possible to "patch" the following call to <code>ggplot()</code> to <code>func</code>? This is highly-desirable to automate the process:</p>  <pre><code> plot &lt;-  ggplot(result, aes(x=A, y=B))+           geom_bar(stat='identity) </code></pre>