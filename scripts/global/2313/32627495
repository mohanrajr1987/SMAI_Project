<p>I found it really useful to reuse a once created <code>coroutine</code>. I found a solution to that and it looks like so:</p>  <pre><code>co = coroutine.create(function (f, args)   while f do     f = coroutine.yield(f(args))   end end)  function dummyFunc(data)   print("XXX "..data)   coroutine.yield()   print("OOO "..data) end  coroutine.resume(co, dummyFunc, "1") coroutine.resume(co, dummyFunc, "2") coroutine.resume(co, dummyFunc, "3") coroutine.resume(co, dummyFunc, "4") </code></pre>  <p>That work like a charm except the output is <strong>not</strong>:</p>  <pre><code>XXX 1 OOO 2 XXX 3 OOO 4 </code></pre>  <p>It is:</p>  <pre><code>XXX 1 OOO 1 XXX 1 OOO 1 </code></pre>  <p>So is it possible to change the arguments to the <code>dummyFunc</code> between the resume calls?</p>