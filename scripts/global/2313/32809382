<p>I have problems with this code. I Hope could have some help.</p>  <pre class="lang-python prettyprint-override"><code>class demo(osv.osv):      _inherit = 'compresores.datos'      def _buscar_compresor(self, cr, uid, ids, context=None):         auxpower = self.browse(cr, uid, id).power         obj = self.pool.get('compresores.datos')         ids = obj.search(cr, uid, [])         res = obj.read(cr, uid, ids, ['name', 'id', 'comp_a1','comp_a2'], context)         res = [(r['id'], r['name'], r['comp_a1'],r['comp_a2'])          for r in res              if (r['comp_a1'] &gt;= auxpower)]         return res      _name = "demo_datos"     _description = "Demo"     _columns = {         'power': fields.float('Potencia frigorifica',digits=(3,2)),         'compresor1': fields.selection(_buscar_compresor,method="True", type="char", size=256, string="Compresor" ),      }  demo() </code></pre>  <p>Here is the XML </p>  <pre class="lang-python prettyprint-override"><code>        &lt;record model="ir.ui.view" id="demo_form"&gt;             &lt;field name="name"&gt;demo.form&lt;/field&gt;             &lt;field name="model"&gt;demo_datos&lt;/field&gt;             &lt;field name="arch" type="xml"&gt;                 &lt;form string="DEMO" version="7.0"&gt;                     &lt;group col='4' colspan='2'&gt;                         &lt;field name="power" class="oe_inline" /&gt;                         &lt;field name="compresor1" /&gt;                      &lt;/group&gt;                 &lt;/form&gt;             &lt;/field&gt;         &lt;/record&gt;          &lt;record model="ir.ui.view" id="demo_tree"&gt;             &lt;field name="name"&gt;demo.tree&lt;/field&gt;             &lt;field name="model"&gt;demo_datos&lt;/field&gt;             &lt;field name="type"&gt;tree&lt;/field&gt;             &lt;field name="arch" type="xml"&gt;                 &lt;tree string="DEMO general"&gt;                     &lt;field name="power" /&gt;                 &lt;/tree&gt;             &lt;/field&gt;         &lt;/record&gt; </code></pre>  <p>I have the field <code>power</code> in my class. And I need a function that compare if the field in another class (comp_a1) is higher and return the registers from that class.</p>  <p>I use <code>self.pool.get</code> to call the other class and it's okay and works. But when I use <code>self.browse</code> to read the field <code>power</code> (with auxpower) in the same function there are problems with arguments I think... what should I do?</p>