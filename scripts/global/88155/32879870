<p>I am writing a directive which take templates according to the attribute provided.</p>  <p><a href="http://plnkr.co/edit/Emu0eYVqtqH6MK9Eh2zR?p=preview" rel="nofollow">Plnkr</a></p>  <p><strong>JS</strong></p>  <pre><code>var app = angular.module('app', []);  app.directive('sample', function($compile){   var a = '&lt;div&gt;template 1&lt;/div&gt;';   var b = '&lt;div&gt;template 2&lt;/div&gt;';    return {     replace: true,     restrict: 'E',     scope: {       type: '@'     },     link: function($scope, $element){       var get_template = function(){           if($scope.type == 'others'){               return b;           } else {               return a;           }       };        $($element).html(get_template()).show();       $compile($($element).contents())($scope);     }   } }); </code></pre>  <p><strong>HTML</strong></p>  <pre><code>&lt;sample&gt;&lt;/sample&gt; &lt;sample type="others"&gt;&lt;/sample&gt; </code></pre>  <p>Here <code>replace: true</code> works when we provide the template property inside the directive. Is there any way to get rid of the <code>&lt;sample /&gt;</code> tag and just have the <code>&lt;div /&gt;</code>.</p>  <p>There is also another approach,</p>  <pre><code>app.directive('sample', function($compile, $templateCache){   var a = '&lt;div&gt;template 1&lt;/div&gt;';   var b = '&lt;div&gt;template 2&lt;/div&gt;';    $templateCache.put('template1.html', a);   $templateCache.put('template2.html', b);    return {     template: '&lt;div ng-include="get_template()" /&gt;',     replace: true,     restrict: 'E',     scope: {       type: '@'     },     link: function($scope, $element){       var get_template = function(){           if($scope.type == 'others'){               return 'template2.html';           } else {               return 'template1.html';           }       };     }   } }); </code></pre>  <p>But the above approach still has <code>&lt;div ng-include /&gt;</code> as the parent for <code>&lt;div&gt;template1&lt;/div&gt;</code> whereas I just need <code>&lt;div&gt;template</code>.</p>  <p>Is there any way?</p>  <p>Thanks in advance.</p>