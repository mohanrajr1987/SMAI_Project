<p>To simplify my form validation, I try to go from this:</p>  <pre class="lang-html prettyprint-override"><code>&lt;div ng-class="{'field--error': form.firstname.$error.maxlength &amp;&amp; form.firstname.$dirty}" class="field"&gt;   &lt;label for="firstname" class="field__label"&gt;Firstname&lt;/label&gt;     &lt;input id="firstname" type="text" name="firsname" ng-model="formData.firstname" ng-maxlength="32" class="field__input"&gt; &lt;/div&gt; </code></pre>  <p>to this:</p>  <pre class="lang-html prettyprint-override"><code>&lt;div field-error="{fieldName: 'firsname'}" class="field"&gt;   &lt;label for="firstname" class="field__label"&gt;Firstname&lt;/label&gt;     &lt;input id="firstname" type="text" name="firsname" ng-model="formData.firstname" ng-maxlength="32" class="field__input"&gt; &lt;/div&gt; </code></pre>  <p>I used a fieldError directive to make validation easier (especially dirty and touched). The directive gets a reference to the formController via the '^form' param:</p>  <pre class="lang-js prettyprint-override"><code>.directive('fieldError', function fieldError(){     return {         restrict: 'A',         require: '^form',         scope: {             fieldError: '='         },         link: function( scope, elem, attrs, formCtrl ) {             var                  fieldInput = formCtrl[ scope.fieldError.fieldName ],                 isInError = false;              if ( fieldInput &amp;&amp; fieldInput.$dirty ) {                 // validation process goes here             }              if ( isInError ) {                 elem.addClass('field--error');             } else {                 elem.removeClass('field--error');             }         }     }; }) </code></pre>  <p><strong>Issue:</strong> the link function isn't called when typing text in the input. Maybe I have to use a watcher, but I heard this is bad practice.</p>  <p><strong>EDIT</strong></p>  <p>following this <a href="http://stackoverflow.com/questions/15899389/angularjs-directive-watch-validity">post</a> I updated my directive:</p>  <pre class="lang-js prettyprint-override"><code>link: function( scope, elem, attrs, formCtrl ) {  var fieldInputPath = formCtrl.$name + '.' + scope.fieldError.fieldName + '.$invalid';   // fieldInputPath = 'form.firstname.$invalid'   scope.$watch( fieldInputPath, function( n, o ) {      // never fired  } ); } </code></pre>  <p>But the watcher is never fired. I put a breakpoint in devtool, fieldInputPath is good.</p>  <p>Any thoughts?</p>