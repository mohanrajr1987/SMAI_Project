<p>If I use $scope, this directive works perfectly:</p>  <pre><code>function alertBox(){   return {     template:        '&lt;div ng-show="alert" class="alert alert-{{alert.type}}" style="text-align: center;"&gt;\          &lt;a href="#" class="close" data-dismiss="alert" aria-label="close" title="close"&gt;x&lt;/a&gt;\          &lt;span ng-bind-html="alert.message | safe_html"&gt;&lt;/span&gt;\        &lt;/div&gt;'   } } </code></pre>  <p>The alert is defined in my controller as:</p>  <pre><code>$scope.alert = {message: 'test!', type: 'danger'}; </code></pre>  <p>And my simple view:</p>  <pre><code>&lt;div alert-box&gt;&lt;/div&gt; </code></pre>  <p>However, I don't use $scope and instead have my alert defined using 'this':</p>  <pre><code>this.alert = {message: 'test!', type: 'danger'}; </code></pre>  <p>But no matter what I try I can't figure out how to inject the value of 'this' into the directive.</p>  <p>Ideally I would be able to reference 'self.alert' or something, so that I don't have to define the scope context as an attribute, but assuming I do, I've tried variations of this to no avail:</p>  <pre><code>function alertBox(){     return {         scope: {             scope: '=scope'         },         template: '&lt;div ng-show="' + scope + '.alert" class="alert alert-' + scope + '.type" style="text-align: center;"&gt;&lt;a href="#" class="close" data-dismiss="alert" aria-label="close" title="close"&gt;x&lt;/a&gt;        &lt;span ng-bind-html="' + scope + '.message | safe_html"&gt;&lt;/span&gt;&lt;/div&gt;'     } } </code></pre>  <p>And my html:</p>  <pre><code>&lt;div alert-box scope="welcome"&gt;&lt;/div&gt; </code></pre>  <p>In that example I've got <code>'WelcomeController as welcome'</code> defined.</p>  <p>Any help is appreciated.</p>