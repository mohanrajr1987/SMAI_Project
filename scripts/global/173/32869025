<p>I have Operation class and Result class that I use to build a list, I use xaml to bind to the properties and a converter to return some content based on certain properties, Most of this works.... </p>  <p>To make it easy I will post the xaml then note what works and what I need help with.</p>  <pre><code>&lt;UserControl x:Class="OperationListView"          xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"             xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"          xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"          xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"           xmlns:d="http://schemas.microsoft.com/expression/blend/2008"           mc:Ignorable="d"           xmlns:prism="http://www.codeplex.com/prism"          xmlns:inf="clr-namespace:***;assembly=***"          xmlns:c="clr-namespace:****.***"          d:DesignHeight="300" d:DesignWidth="300"&gt; &lt;Control.Resources&gt;     &lt;c:LanguageTextConverter x:Key="langConverter" /&gt;     &lt;c:ResultViewConverter x:Key="statusConverter" /&gt;     &lt;c:OpDetailViewConverter x:Key="opConverter" /&gt; &lt;/Control.Resources&gt; &lt;Grid&gt;     &lt;Grid.ColumnDefinitions&gt;         &lt;ColumnDefinition Width="1*"/&gt;     &lt;/Grid.ColumnDefinitions&gt;     &lt;telerik:RadGridView Name="OperationGrid"                          Grid.Column="0"                          RowHeight="75"                          SelectionMode="Single"                          SelectedItem="{Binding SelectedOperation, Mode=TwoWay}"                          ItemsSource="{Binding Operations}"                          IsReadOnly="True"                          AutoGenerateColumns="False"                          RowDetailsVisibilityMode="VisibleWhenSelected"                          ShowGroupPanel="False"                          RowIndicatorVisibility="Collapsed" &gt;         &lt;telerik:RadGridView.RowDetailsTemplate&gt;             &lt;DataTemplate&gt;                 &lt;ContentControl Grid.Column="1" Template="{Binding Converter={StaticResource opConverter}}" /&gt;             &lt;/DataTemplate&gt;         &lt;/telerik:RadGridView.RowDetailsTemplate&gt;         &lt;telerik:RadGridView.Columns&gt;             &lt;telerik:GridViewDataColumn Header="Name"                                         DataMemberBinding="{Binding Key.operationName, Converter={StaticResource langConverter}}"                                         Width="2*"                                         IsGroupable="False" /&gt;             &lt;telerik:GridViewDataColumn Header="Result"                                         Width="1*"                                         MaxWidth="75"&gt;                  &lt;telerik:GridViewDataColumn.CellTemplate&gt;                     &lt;DataTemplate&gt;                         &lt;Grid&gt;                             &lt;ContentControl Template="{Binding Value, Converter={StaticResource statusConverter}}"/&gt;                         &lt;/Grid&gt;                     &lt;/DataTemplate&gt;                 &lt;/telerik:GridViewDataColumn.CellTemplate&gt;             &lt;/telerik:GridViewDataColumn&gt;         &lt;/telerik:RadGridView.Columns&gt;      &lt;/telerik:RadGridView&gt; &lt;/Grid&gt; </code></pre>  <p></p>  <p>everything up to the final binding works, and even the final binding works to a point... </p>  <pre><code>&lt;ContentControl Template="{Binding Value, Converter={StaticResource statusConverter}}"/&gt;    </code></pre>  <p>this works, when binding to Value the converter fires on load and loads the appropriate xaml.</p>  <p>However no additional changes update this value... </p>  <p>In the code behind at some point the Value.status is updated , the setter on the status property fires an propertyChanged. but nothing is caught on the front end.</p>  <pre><code>public OverallStatus status     {         get { return this.Status; }         set { this.Status = value; onPropertyChanged(this, "status"); }     } </code></pre>  <p>What is the property syntax to bind to a Value.Property (currently doesn't work at all) AND have it recognize the propertyChanged setter 3 levels down from the view.</p>