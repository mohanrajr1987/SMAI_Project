<p>I have a VS2015 solution with a folder structure like the following:</p>  <pre><code>solution     project1         (code and headers for project1)     project2         (code and headers for project2)     shared_items_project         folder1             (some shared code and headers)         folder2             (more shared code and headers) </code></pre>  <p>When the target platform is set to x64 code in project1 and project2, which reference the shared project, can include headers in it like <code>#include "folder1\some_header.h"</code>. This seems to be the correct behaviour IMO: everything in the shared project appears to lie in the same directory as the project referencing it.<br> However, switching platform to Win32 stops this working: VS claims it can't find any of the files unless the includes are rewritten like <code>#include "..\shared_project\folder1\some_header.h"</code>, implying that the shared project isn't being referenced.</p>  <p>I've been unable to find anything in the project properties that would stop shared items being imported, nor do the project files give any indication that shared item importing is dependent on architecture setting. So I'm at a loss as to why this should be happening - ideas appreciated!</p>