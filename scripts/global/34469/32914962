<p>I am new to C++ programming and trying to solve some problems on UVa Online Judge our prof gave us. Right now I am on the 706 LCD Display (<a href="https://uva.onlinejudge.org/index.php?option=com_onlinejudge&amp;Itemid=8&amp;category=16&amp;page=show_problem&amp;problem=647" rel="nofollow">https://uva.onlinejudge.org/index.php?option=com_onlinejudge&amp;Itemid=8&amp;category=16&amp;page=show_problem&amp;problem=647</a>). In my IDE (VS2015 Community) everything works fine and as expected but when I'm trying to submit my code I get a runtime error. Unfortunately they don't show more details about it. I tried to run my code in several online c++ compilers (such as <a href="http://cpp.sh/" rel="nofollow">http://cpp.sh/</a>) and never expirienced an error.</p>  <p>This is my code</p>  <pre><code>#include &lt;iostream&gt; #include &lt;cmath&gt;  // set the "borders" for each number #define ZERO 1+2+4+16+32+64; #define ONE 4+32; #define TWO 1+4+8+16+64 #define THREE 1+4+8+32+64 #define FOR 2+4+8+32 #define FIVE 1+2+8+32+64 #define SIX 1+2+8+16+32+64 #define SEVEN 1+4+32 #define EIGHT 1+2+4+8+16+32+64 #define NINE 1+2+4+8+32+64  using namespace std;  // return the integer represented by the character c ('2' returns 2). any non-numeric character will return -1 int getDigit(char* c) {     int res;     switch (*c) {     case '0':         res = 0;         break;     case '1':         res = 1;         break;     case '2':         res = 2;         break;     case '3':         res = 3;         break;     case '4':         res = 4;         break;     case '5':         res = 5;         break;     case '6':         res = 6;         break;     case '7':         res = 7;         break;     case '8':         res = 8;         break;     case '9':         res = 9;         break;     default:         res = -1;     }     return res; }  // draw the digits line by line. some lines (first, middle, last) only represents horizontal lines, where all other lines represent vertical lines // in every line for every digit is checked wheter the lines on the current position must be drawn or not. void drawDigits(int* digits, int cDigits, int height, int width) {     int middle = (height &gt;&gt; 1);     for (int i = 0; i &lt; height; ++i) {         for (int j = 0; j &lt; cDigits; ++j) {              if (i == 0) {                 if (digits[j] &amp; 1) {                     cout &lt;&lt; " ";                     for (int y = 0; y &lt; width - 2; ++y) cout &lt;&lt; "-";                     cout &lt;&lt; " ";                 }                 else {                     for (int y = 0; y &lt; width; ++y) cout &lt;&lt; " ";                 }             }             else if (i &lt; middle) {                 if (digits[j] &amp; 2) {                     cout &lt;&lt; "|";                     for (int y = 0; y &lt; width - 2; ++y) cout &lt;&lt; " ";                 }                 else {                     for (int y = 0; y &lt; width - 1; ++y) cout &lt;&lt; " ";                 }                 if (digits[j] &amp; 4) {                     cout &lt;&lt; "|";                 }                 else {                     cout &lt;&lt; " ";                 }             }             else if (i == middle) {                 if (digits[j] &amp; 8) {                     cout &lt;&lt; " ";                     for (int y = 0; y &lt; width - 2; ++y) cout &lt;&lt; "-";                     cout &lt;&lt; " ";                 }                 else {                     for (int y = 0; y &lt; width; ++y) cout &lt;&lt; " ";                 }             }             else if (i &lt; height - 1) {                 if (digits[j] &amp; 16) {                     cout &lt;&lt; "|";                     for (int y = 0; y &lt; width - 2; ++y) cout &lt;&lt; " ";                 }                 else {                     for (int y = 0; y &lt; width - 1; ++y) cout &lt;&lt; " ";                 }                 if (digits[j] &amp; 32) {                     cout &lt;&lt; "|";                 }                 else {                     cout &lt;&lt; " ";                 }             }             else {                 if (digits[j] &amp; 64) {                     cout &lt;&lt; " ";                     for (int y = 0; y &lt; width - 2; ++y) cout &lt;&lt; "-";                     cout &lt;&lt; " ";                 }                 else {                     for (int y = 0; y &lt; width; ++y) cout &lt;&lt; " ";                 }             }              if (j != cDigits - 1) cout &lt;&lt; " ";         }         cout &lt;&lt; endl;         if (i == height - 1) cout &lt;&lt; endl;     } }  // a given number (c-string) is prepared for drawing // find out the length of the 'number' and assign for each digit the defined value in the ditigs-array void drawLCD(int size, char* number) {     int length = 0;     while (*(number + length) != '\0') {         ++length;     }      int* digits = new int[length];      for (int i = 0; i &lt; length; ++i) {         int t;         switch (getDigit(number++)) {         case 0:             t = ZERO;             break;         case 1:             t = ONE;             break;         case 2:             t = TWO;             break;         case 3:             t = THREE;             break;         case 4:             t = FOR;             break;         case 5:             t = FIVE;             break;         case 6:             t = SIX;             break;         case 7:             t = SEVEN;             break;         case 8:             t = EIGHT;             break;         case 9:             t = NINE;             break;         default:             t = ZERO;         }         digits[i] = t;     }      drawDigits(digits, length, 2 * size + 3, size + 2); }  void callDraws(int cNums, int* size, char** numbers) {     for (int i = 0; i &lt; cNums; ++i) {         drawLCD(size[i], numbers[i]);     } }  // gets the integer value from a number in a c-string int getInt(char* str) {     int length = 0;     int res = 0;     while (*(str + length) != '\0') {         ++length;     }     for (int i = 0; i &lt; length; ++i) {         res += (int)pow(10, length - (i + 1)) * getDigit(str++);     }     return res; }  int main() {     char* n = new char[10];     int counter = 0;     int* size = new int[1000];     char** numbers = new char*[1000];      while (cin &gt;&gt; n) {         if (size[counter] &lt;= 0) {             int nn = getInt(n);             if (nn &lt;= 0) break;             size[counter] = nn;         }         else {             numbers[counter++] = n;             n = new char[10];         }     }      callDraws(counter, size, numbers);      return 0; } </code></pre>  <p>When I enter a 'return 0' before the call to callDraws() the code terminates. So the error must be somewhere in printing the digits.</p>  <p>Where is this runtime error or how can I find it?  Thanks in advance.</p>