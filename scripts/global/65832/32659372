<p>I created a WatchKit Application with the default XCode Template. I added an app group entitlement to the iOS Target, to the Watchkit App Target and to the Watchkit App Extension Target. (this is the app group name: group.com.lombax.fiveminutes) Then, I tried to access the shared folder URL with both the iOS App and the WatchKit Extension:</p>  <p>Extension:</p>  <pre><code>@implementation ExtensionDelegate  - (void)applicationDidFinishLaunching {     // Perform any final initialization of your application.     NSURL *test = [[NSFileManager defaultManager] containerURLForSecurityApplicationGroupIdentifier:@"group.com.lombax.fiveminutes"]; } </code></pre>  <p>iOS App:</p>  <pre><code>- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {     // Override point for customization after application launch.      NSURL *test = [[NSFileManager defaultManager] containerURLForSecurityApplicationGroupIdentifier:@"group.com.lombax.fiveminutes"]; // ...  } </code></pre>  <p>However, the <code>test</code> NSURL is different:</p>  <p>On iOS: </p>  <blockquote>   <p>file:///Users/Lombardo/Library/Developer/CoreSimulator/Devices/38B983DB-342F-4A47-8C26-5D2C92CDB666/data/Containers/Shared/AppGroup/8DEE182E-AFE6-47DD-BA2B-6B0520158A8B/</p> </blockquote>  <p>on Watch: </p>  <blockquote>   <p>file:///Users/Lombardo/Library/Developer/CoreSimulator/Devices/BF52D613-25FF-4092-A5B2-9C3F1B616160/data/Containers/Shared/AppGroup/CECB5EFC-7FBD-4C84-A878-1314CB7CF211/</p> </blockquote>  <p>And for this reason I'm unable to share data between the iOS App and the WatchKit Extension.</p>  <p>I cannon try on a real device since I don't have WatchOS 2.0 on my Apple Watch. Any advice?  Thanks</p>  <p><strong>UPDATE</strong> I did some other tests:</p>  <ul> <li>Installed WatchOS 2, the issue still persists on real devices. </li> </ul>  <p>This is the store url for my iPhone: </p>  <blockquote>   <p>NSURL   * @"file:///private/var/mobile/Containers/Shared/AppGroup/3D05D159-94D6-409C-9A38-90E0830D0C3F/FiveMinutes.sqlite"</p> </blockquote>  <p>And this is the store url for my Watch: </p>  <blockquote>   <p>NSURL   * @"file:///private/var/mobile/Containers/Shared/AppGroup/F1E89377-F456-4FC2-BAAC-3DD705EF381A/FiveMinutes.sqlite"</p> </blockquote>  <p>The two apps reads and write to-from two different <code>.sqlite</code> files.</p>  <ul> <li>On simulator, if I hard-code one of the URLs, both iOS simulator and Watch simulator are able to read-write the same <code>.sqlite</code> file and share the content. However, this is not possible on real devices since the Watch extension cannot write to the iOS path:  </li> </ul>  <blockquote>   <p>URL:file:///private/var/mobile/Containers/Shared/AppGroup/3D05D159-94D6-409C-9A38-90E0830D0C3F/FiveMinutes.sqlite options:(null) ... returned error Error Domain=NSCocoaErrorDomain Code=512 "The file couldnâ€™t be saved." UserInfo={reason=Failed to create file; code = 2} with userInfo dictionary {       reason = "Failed to create file; code = 2";   }</p> </blockquote>