<p>I've seen several answers that come close to this but not a specific answer.</p>  <p>If size_t is set to 64 bits then 2^64 is approximately 18 quintillion standard chars (usually bytes) as the maximum size for a char* array. If divide by 10^9 (GB) we end up with <strong>18GB</strong> as the maximum theoretical (and if its possible to buy a laptop with 32GB - then also real) limit to the size of an array in memory.</p>  <p>Is 18GB really a limit for char arrays/strings on 64 bit machines or have I missed something in my reasoning? </p>  <p>I'm doing my first true CS course so please excuse me if I have got anything seriously wrong with my understanding.</p>  <p>EDIT For anyone reading this it would appear my maths is wrong so make sure to read the answers below. Specifically when I divided by 10^9 this converted the answer into GB units but there was still 18 * 10^9 of those GB. Which is equivalent to 18 Exabytes.</p>