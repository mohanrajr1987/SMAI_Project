<p>First, I am brand new to coding so I am at a standstill. I am working on an app for my students which contains small books. Each book has 5 pages, and on each page there is a picture and one sentence. On the simulator it has been working great but I was able to run it on my iPad and it crashes after the third page. I ran instruments and saw that it was due to low memory (no leaks appear). So now I do not know what is causing the memory crash. Is it due to to my pictures (which are .png files) or is there something in the code. Below I have the coding of the page view controllers I use to make the books. Thanks!  </p>  <h1>import "BookAPVC.h"</h1>  <pre><code>@implementation BookAPVC {     NSArray *aViewControllers; }  -(void)viewDidLoad {     [super viewDidLoad];      self.delegate = self;     self.dataSource = self;      UIViewController *Ap1 = [self.storyboard                              instantiateViewControllerWithIdentifier:@"ABookCover"];     UIViewController *Ap2 = [self.storyboard                              instantiateViewControllerWithIdentifier:@"ABookPage1"];     UIViewController *Ap3 = [self.storyboard                              instantiateViewControllerWithIdentifier:@"ABookPage2"];     UIViewController *Ap4 = [self.storyboard                              instantiateViewControllerWithIdentifier:@"ABookPage3"];     UIViewController *Ap5 = [self.storyboard                              instantiateViewControllerWithIdentifier:@"ABookPage4"];     UIViewController *Ap6 = [self.storyboard                              instantiateViewControllerWithIdentifier:@"ABookPage5"];      aViewControllers = @[Ap1,Ap2,Ap3,Ap4,Ap5,Ap6];      [self setViewControllers:@[Ap1]                    direction:UIPageViewControllerNavigationDirectionForward                     animated:NO completion:nil];      NSLog(@"loaded!"); }  -(UIViewController *)viewControllerAtIndex:(NSUInteger)index {     return aViewControllers[index]; }  -(UIViewController *)pageViewController:(UIPageViewController *)pageViewController      viewControllerBeforeViewController:(UIViewController *)viewController {     NSUInteger currentIndex = [aViewControllers indexOfObject:viewController];      --currentIndex;     currentIndex = currentIndex % (aViewControllers.count);     return [aViewControllers objectAtIndex:currentIndex]; }  -(UIViewController *)pageViewController:(UIPageViewController *)pageViewController       viewControllerAfterViewController:(UIViewController *)viewController {     NSUInteger currentIndex = [aViewControllers indexOfObject:viewController];      ++currentIndex;     currentIndex = currentIndex % (aViewControllers.count);     return [aViewControllers objectAtIndex:currentIndex]; }  -(NSInteger)presentationCountForPageViewController: (UIPageViewController *)pageViewController {     return aViewControllers.count; }  -(NSInteger)presentationIndexForPageViewController: (UIPageViewController *)pageViewController {     return 0; }  @end </code></pre>