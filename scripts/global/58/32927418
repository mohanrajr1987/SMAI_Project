<p>I am trying to install Windows on my Chromebook. I have Windows 8.1 on a flashdrive. </p>  <p>The steps I have followed:  After putting the Chromebook into developer mode and opening the terminal, type</p>  <ul> <li><code>shell</code></li> <li><code>sudo crossystem dev_boot_usb=1</code> enter password</li> <li><code>sudo crossystem dev_boot_legacy=1</code> enter password</li> </ul>  <p>However, after doing so when I run "crossystem" their values are both "error". </p>  <p>Here is the full result of running crosysstem:</p>  <blockquote>   <p><code>arch                   = x86                            # Platform architecture   backup_nvram_request   = (error)                        # Backup the nvram somewhere at the next boot. Cleared on success.   block_devmode          = (error)                        # Block all use of developer mode   clear_tpm_owner_request = (error)                        # Clear TPM owner on next boot   clear_tpm_owner_done   = (error)                        # Clear TPM owner done   cros_debug             = 1                              # OS should allow debug features   dbg_reset              = (error)                        # Debug reset mode request (writable)   debug_build            = 0                              # OS image built for debug features   dev_boot_usb           = (error)                        # Enable developer mode boot from USB/SD (writable)   dev_boot_legacy        = (error)                        # Enable developer mode boot Legacy OSes (writable)   dev_boot_signed_only   = (error)                        # Enable developer mode boot only from official kernels (writable)   devsw_boot             = 1                              # Developer switch position at boot   devsw_cur              = 1                              # Developer switch current position   disable_dev_request    = (error)                        # Disable virtual dev-mode on next boot   ecfw_act               = RW                             # Active EC firmware   fmap_base              = 0xffe10000                     # Main firmware flashmap physical address   fwb_tries              = (error)                        # Try firmware B count (writable)   fw_vboot2              = 0                              # 1 if firmware was selected by vboot2 or 0 otherwise   fwid                   = Google_Auron_yuna.6301.59.8    # Active firmware ID   fwupdate_tries         = 0                              # Times to try OS firmware update (writable, inside kern_nv)   fw_tried               = B                              # Firmware tried this boot (vboot2)   fw_try_count           = (error)                        # Number of times to try fw_try_next (writable)   fw_try_next            = B                              # Firmware to try next (vboot2,writable)   fw_result              = unknown                        # Firmware result this boot (vboot2,writable)   fw_prev_tried          = B                              # Firmware tried on previous boot (vboot2)   fw_prev_result         = unknown                        # Firmware result of previous boot (vboot2)   hwid                   = YUNA D25-A3C-K4A-A9L           # Hardware ID   kern_nv                = (error)                        # Non-volatile field for kernel use   kernkey_vfy            = sig                            # Type of verification done on kernel key block   loc_idx                = (error)                        # Localization index for firmware screens (writable)   mainfw_act             = A                              # Active main firmware   mainfw_type            = developer                      # Active main firmware type   nvram_cleared          = (error)                        # Have NV settings been lost?  Write 0 to clear   oprom_needed           = (error)                        # Should we load the VGA Option ROM at boot?   platform_family        = Broadwell                      # Platform family type   recovery_reason        = 0                              # Recovery mode reason for current boot   recovery_request       = (error)                        # Recovery mode request (writable)   recovery_subcode       = (error)                        # Recovery reason subcode (writable)   recoverysw_boot        = 0                              # Recovery switch position at boot   recoverysw_cur         = (error)                        # Recovery switch current position   recoverysw_ec_boot     = 0                              # Recovery switch position at EC boot   ro_fwid                = Google_Auron_yuna.6301.59.5    # Read-only firmware ID   savedmem_base          = 0x00f00000                     # RAM debug data area physical address   savedmem_size          = 1048576                        # RAM debug data area size in bytes   sw_wpsw_boot           = 1                              # Firmware write protect software setting enabled at boot (Baytrail only)   tpm_attack             = (error)                        # TPM was interrupted since this flag was cleared   tpm_fwver              = 0x00190001                     # Firmware version stored in TPM   tpm_kernver            = 0x00010001                     # Kernel version stored in TPM   tried_fwb              = 0                              # Tried firmware B before A this boot   vdat_flags             = 0x00006c56                     # Flags from VbSharedData   vdat_timers            = LFS=599227391,637700974 LF=638093681,975230041 LK=0,30505610 # Timer values from VbSharedData   wipeout_request        = (error)                        # Firmware requested factory reset (wipeout)   wpsw_boot              = 1                              # Firmware write protect hardware switch position at boot   wpsw_cur               = 1                              # Firmware write protect hardware switch current position</code></p> </blockquote>  <p>Any help on how to fix these errors would be appreciated. I am not able to boot into legacy mode.</p>  <p>Thanks, Matt</p>