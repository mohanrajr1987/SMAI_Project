<p>Given a consumer which uses a service, how can this consumer select a specific provider dynamically using declarative service ?</p>  <h2>Example</h2>  <p>Service.java</p>  <pre class="lang-java prettyprint-override"><code>public interface Service {     public void do(); } </code></pre>  <p>Provider1.java</p>  <pre class="lang-java prettyprint-override"><code>public class Provider1 implements Service {         @Override     public void do(){         //a way      }    } </code></pre>  <p>Provider2.java</p>  <pre class="lang-java prettyprint-override"><code>public class Provider2 implements Service {         @Override     public void do(){         //another way      }    } </code></pre>  <p>Consumer.java</p>  <pre class="lang-java prettyprint-override"><code>public class Consumer {     private Service myService;      protected void bindService(Service s){ // Actually it's Provider1         myService = s;     }      protected void unbindService(Service s){         myService = null;     }      public void useThisKindOfService(String s){         // Do something crazy     } } </code></pre>  <p>So, what I would like it's instead of "Do something crazy", to find a way to reconfigure the consumer in order to release Provider1 and ask for Provider2.</p>  <p>Is it possible ? </p>  <h1>Update related to "Duplicate Question"</h1>  <p><a href="http://stackoverflow.com/questions/308813/osgi-felix-declarative-services-how-to-filter-the-services-to-be-bound">OSGI/Felix Declarative services: How to filter the services to be bound</a></p>  <p>In my context I cannot use the declarative target because the value of the target has to be know at build time, in my case the target could be defined by a user at runtime. </p>