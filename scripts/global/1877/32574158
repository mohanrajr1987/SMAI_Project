<p>I have got the standard <a href="http://bndtools.org" rel="nofollow">bndtools</a> plugin for eclipse installed, up and also running the apache felix osgi runtime. I am trying to learn about declarative services (DS) components. Apparently, before there were annotations (for which an example is given in the tutorial for bndtools), components were written using xml data. That is what I am trying to do. </p>  <p>Here is the simple class (which will be published as a DS component): "HelloComponent.java"</p>  <pre><code>package org.osgi.book.ds.minimal;  public class HelloComponent {     public HelloComponent(){         System.out.println("HelloComponent created.");     } } </code></pre>  <p>Here is the xml file that makes a component declaration: "minimal.xml"</p>  <pre><code>&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;!-- minimal.xml --&gt;  &lt;scr:component xmlns:scr="http://www.osgi.org/xlmns/scr/v1.1.0" immediate="true"&gt;     &lt;implementation class="org.osgi.book.ds.minimal.HelloComponent"/&gt; &lt;/scr:component&gt; </code></pre>  <p>And here is the .bnd file that's supposed to be used by the bndtools to generate the jar files which will eventually be published to the OSGi runtime: "minimal_ds.bnd"</p>  <pre><code>Private-Package: org.osgi.book.ds.minimal  Include-Resource: minimal.xml Service-Component: minimal.xml </code></pre>  <p>Note that I have the following bundles up and running in the host runtime OSGi container:</p>  <pre><code>   ID|State      |Level|Name     0|Active     |    0|System Bundle (4.4.1)     2|Active     |    1|Apache Felix Gogo Command (0.14.0)     3|Active     |    1|Apache Felix Gogo Runtime (0.12.1)     4|Active     |    1|Apache Felix Gogo Shell (0.10.0)    15|Active     |    1|Apache Felix Configuration Admin Service (1.8.0)    16|Active     |    1|Apache Felix Declarative Services (1.8.2)    17|Active     |    1|osgi.enterprise (4.2.0.201003190513)    18|Active     |    1|osgi.residential (4.3.0.201111022239) </code></pre>  <p>Finally, here is the project directory structure:</p>  <pre><code>BookReaderInPractice | |- src |   |- org.osgi.book.ds.minimal |           |_ HelloComponent.java | |- minimal_ds.bnd | |- minimal.xml </code></pre>  <p>The problem is that when I try to install the bundle for 'mimimal', I get a missing requirements error. The exact error I get is:</p>  <pre><code> missing requirement Require[osgi.extender]{}{filter=(&amp;(osgi.extender=osgi.ds)(version&gt;=1.1.0)(!(version&gt;=2.0.0))), effective=active}] </code></pre>  <p>Some resources on the web say that it is a bug from earlier versions of bndtools. Granted, I was still able to compile and run this package for a couple of days without any issues. Then, at some point, it just stopped right there! Nothing seems to work 're-building', 'regenerating' the jar files, as well as completely copying the project into a new eclipse workspace. </p>  <p>Here's what I'm using:</p>  <p>OS-X 10.9 Maverics, Eclipse Luna Service Release 1 (4.4.1) BndTools: 2.4.1 (The most updated)</p>  <p>Does anyone seem to have a clue?</p>