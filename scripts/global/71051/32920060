<p>A have the following Model </p>  <pre><code>using System; using System.Collections.Generic; using System.ComponentModel.DataAnnotations; using System.Linq; using System.Web;  namespace GoOnWork.Models {     public class Skill     {         [Key]         public int Id { get; set; }          public DateTime AddedOn { get; set; }          public DateTime ModifiedOn { get; set; }          public int? DescriptionId { get; set; }          public virtual Description Descriptions { get; set; }          public int? LevelId { get; set; }          public virtual Level Levels { get; set; }          public string UserId { get; set; }          public virtual ApplicationUser User { get; set; }      } } </code></pre>  <p>And I want to create chart with Level (xFields) and Description (yFields) from the Skill Model. The fields Description and Level are connected with other tables. I have a chart view model</p>  <pre><code>using System; using System.Collections.Generic; using System.Linq; using System.Web; using System.Web.Helpers;  namespace GoOnWork.Models {     public class ChartViewModel     {         public Chart Chart { get; set; }     } }  </code></pre>  <p>I write a controller based on that view model.</p>  <pre><code>public class ChartController : Controller     {         ApplicationDbContext db = new ApplicationDbContext();         // GET: Chart         public ActionResult Index()         {             var model = new ChartViewModel             {                 Chart = GetChart()             };             return View(model);         }         private Chart GetChart()         {             var user = User.Identity.GetUserName();             var data = db.Skills.Where(x =&gt; x.User.UserName == user);             return new Chart(600, 400, ChartTheme.Blue)                 .AddTitle("Skills")                 .AddLegend()                 .DataBindTable(data, "LevelName")                 .AddSeries(                     "Default",                     chartType: "bar",                     xValue: data, xField: "LevelName",                     yValues: data, yFields: "DescriptionName"                     );         }     } </code></pre>  <p>And the view of Index()</p>  <pre><code>@model GoOnWork.Models.ChartViewModel @{     Layout = null; } &lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt;     &lt;meta name="viewport" content="width=device-width" /&gt;     &lt;title&gt;Index&lt;/title&gt; &lt;/head&gt; &lt;body&gt;     &lt;h2&gt;Our Awesome Chart!&lt;/h2&gt;     @Model.Chart.Write(format: "png") &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>The problem is that I don't know how to create chart with that fields. Or how to modify the GetChart() function to work properly. If somebody can help me, it would be better. </p>