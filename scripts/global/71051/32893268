<p>In an ASP.NET MVC project, I have a controller method that accepts POST requests, like so (with the "User" class for completeness):</p>  <pre><code>[HttpPost] public ActionResult TestMethod(User user) {     return Content("It worked"); }  public class User {     public string Name { get; set; }     public string Email { get; set; } } </code></pre>  <p>I call this method with jQuery Ajax:</p>  <pre><code>$.ajax({     url: '/test/TestMethod/',     data: JSON.stringify({ user: { name: 'NewUserName', email: 'username@email.com' } }),     type: 'POST',     success: function (data) {         alert(data);     },     error: function (xhr) {         alert('error');     } }); </code></pre>  <p>When I create a fresh ASP.NET MVC project, and include this code in a new Test controller, everything works fine. Viewed through Fiddler, a single POST request is made, and I get the controller method return value back. </p>  <p>However, when I run this code in the current MVC project that I'm developing, it doesn't work. From Fiddler I see that the ajax call first initiates a POST method, that gets a 301 http status error ("moved permanently"?). Immeditely afterwards a GET request is made, which generates a 404 not found error (which makes sense as there is no GET action method with this name available).</p>  <p>So I use the exact same code, in a fresh projects and in the existing project, but the code only works in the fresh project. So clearly there's something about my existing project that somehow prevents this from running properly (and causes the odd behaviour of generating both a POST and a GET request). But I have no idea what it could be, so any suggestions welcome...!</p>  <p>Update - routing information:</p>  <pre><code>public static void RegisterRoutes(RouteCollection routes) {   routes.AppendTrailingSlash = true;   routes.MapMvcAttributeRoutes();   routes.MapRoute(   name: "Default",       url: "{controller}/{action}/{id}",       defaults: new { controller = "Home", action = "Index", id = UrlParameter.Optional }); } </code></pre>  <p>Update 2:  Looks like this issue is caused by Content Security Policy settings that were switched on for this project. </p>