<p>I have a ViewModel that wraps two lists of different objects: <code>List&lt;Review&gt;</code> and <code>List&lt;DayCommentary&gt;</code> into <code>ReviewViewModel</code>. <code>List&lt;DayCommentary&gt;</code> will always be a collection of either 0, 1 or max 2 elements, all with different <code>DayCommentary.CommentaryFor</code> (string parameter) values.</p>  <p>In my view, I need to display a textarea for one of the elements in <code>List&lt;DayCommentary&gt;</code> in one section of the page and another textarea for another element in another section of the same page.</p>  <p>I tried to achieve this with the code below which throws an error during runtime:</p>  <pre><code>@Html.TextAreaFor(model =&gt; model.DayCommentary.Select(c =&gt; c.CommentaryFor == "Day"),  new {@class = "form-control commentary", @style = "max-width: none"}) </code></pre>  <p>Error: </p>  <pre><code>Templates can be used only with field access, property access,  single-dimension array index, or single-parameter custom indexer expressions. </code></pre>  <p>I assume it's not happy with my LINQ select statement. </p>  <p>What is the best way to achieve what I'm trying to do, while still binding to the model for posting back to the controller during <code>FormMethod.Post</code>?</p>