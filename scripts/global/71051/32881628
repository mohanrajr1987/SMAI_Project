<pre><code>public Task&lt;HttpResponseMessage&gt; NewTeamLogo(int teamId, string qqfile, HttpRequestMessage request, string root, string urlString) {     var provider = new MultipartFormDataStreamProvider(root);     var task = request.Content.ReadAsMultipartAsync(provider);     Team team = this._teamRepository.Find(a =&gt; a.TeamId == teamId).FirstOrDefault();     var resultTask = task.ContinueWith&lt;HttpResponseMessage&gt;(readTask =&gt;     {         try         {             string newfilename = string.Empty;              var inputFileName =  provider.FileData.First().Headers.ContentDisposition.FileName;              if (inputFileName.Contains("\""))                 inputFileName = inputFileName.Substring(1, inputFileName.Length - 2);             var tempfile = Path.GetFileNameWithoutExtension(inputFileName);              var fileName = string.Format("t{0}.Gif", teamId, tempfile);              var localFileName = provider.FileData.First().LocalFileName;              var file = new FileInfo(localFileName);              newfilename = string.Format("t{0}.Gif", teamId);              var newpath = Path.Combine(file.DirectoryName, fileName);              var existingFileName = team.Logo != null ? team.Logo : "";              var existingPath = Path.Combine(file.DirectoryName, existingFileName);              if (File.Exists(existingPath))             {                 File.Delete(existingPath);             }              File.Move(file.FullName, newpath);              using (Image image = Image.FromFile(Path.Combine(root, fileName)))             {                 Size thumbnailSize = GetThumbnailSize(image);                 Image thumbnail = image.GetThumbnailImage(thumbnailSize.Width, thumbnailSize.Height, null, IntPtr.Zero);                 var tFileName = string.Format("{0}.Gif", teamId);                  var tPath = Path.Combine(root, tFileName);                  using (var tScope = new TransactionScope())                 {                     thumbnail.Save(tPath);                     team.Logo = tFileName;                     this._teamRepository.Update(team);                     this.DbContext.SaveChanges();                     tScope.Complete();                 }             }             File.Delete(newpath);              return this.Response("true", "success");         }         catch (Exception ex)         {             return Response("false", ex.ToString());         }     });      return resultTask;  } </code></pre>  <p>On My local system its working fine but on Live server getting failed some time due to not found bodypart file.</p>  <p>Printed error on console as follows:</p>  <blockquote>   <p>{"success": false, "error": "System.IO.FileNotFoundException: Could not find file '\Upload\App_Team\BodyPart_3bab8f56-f69d-49f4-bb75-1524bd83639f'.   File name: 'Upload\App_Team\BodyPart_3bab8f56-f69d-49f4-bb75-1524bd83639f'      at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath)      at System.IO.File.InternalMove(String sourceFileName, String destFileName, Boolean checkHost)      at Brightspot.Opband.Uow.TeamUow.&lt;>c__DisplayClass4.b__3(Task`1 readTask)"}</p> </blockquote>