<p>So I'm working on a project in Android Studio which uses some 3rd party libraries. One of these is the WeekView (<a href="https://github.com/alamkanak/Android-Week-View" rel="nofollow">https://github.com/alamkanak/Android-Week-View</a>). As I'm european, I decided to change the date/time format to a more european one (24h-format, dd.MM instead of MM/dd) in the source of the lib. But these changes seem to not affect the project at all. Everything I changed did not have any effect. I tried rebuilding, restarting Android Studio, rebuilding with the gradle references removed, nothing helped.</p>  <p>What do I need to do to let the changes take effect?</p>  <p>I edited the following in file "/src/main/java/com/alamkanak/weekview/WeekView.java" (the original parts are commented out):</p>  <pre><code>public DateTimeInterpreter getDateTimeInterpreter() {     if (mDateTimeInterpreter == null) {         mDateTimeInterpreter = new DateTimeInterpreter() {             @Override             public String interpretDate(Calendar date) {                 SimpleDateFormat sdf;                 sdf = mDayNameLength == LENGTH_SHORT ? new SimpleDateFormat("EEEEE") : new SimpleDateFormat("EEE");                 try{                     String dayName = sdf.format(date.getTime()).toUpperCase();                     return String.format("%s %d.%02d", dayName, date.get(Calendar.DAY_OF_MONTH), date.get(Calendar.MONTH) + 1); //return String.format("%s %d/%02d", dayName, date.get(Calendar.MONTH) + 1, date.get(Calendar.DAY_OF_MONTH));                 }catch (Exception e){                     e.printStackTrace();                     return "";                 }             }              @Override             public String interpretTime(int hour) {                 //String amPm;                 //if (hour &gt;= 0 &amp;&amp; hour &lt; 12) amPm = "AM";                 //else amPm = "PM";                 //if (hour == 0) hour = 12;                 //if (hour &gt; 12) hour -= 12;                 //return String.format("%02d %s", hour, amPm);                 return hour + ":00";             }         };     }     return mDateTimeInterpreter; } </code></pre>