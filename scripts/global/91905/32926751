<p>I already created an activity which displays navigation drawer and i want to add an icon beside the textview. But when I run, the icon still doesn't show up.I'll post my codes and please help me for the mistakes. Thanks in advance.</p>  <p>STRINGS</p>  <pre><code>&lt;string-array name="nav_drawer_labels"&gt;     &lt;item&gt;@string/nav_item_doctor&lt;/item&gt;     &lt;item&gt;@string/nav_item_hospital&lt;/item&gt;     &lt;item&gt;@string/nav_item_pharmacy&lt;/item&gt;     &lt;item&gt;@string/nav_item_clinic&lt;/item&gt; &lt;/string-array&gt;  &lt;string name="title_pharmacy"&gt;Pharmacy&lt;/string&gt; &lt;string name="title_hospital"&gt;Hospital&lt;/string&gt; &lt;string name="title_doctor"&gt;Doctor&lt;/string&gt; &lt;string name ="title_clinic"&gt;Specialty Clinic&lt;/string&gt;  &lt;array name="nav_drawer_icons"&gt;     &lt;item&gt;@drawable/ic_doctor&lt;/item&gt;     &lt;item&gt;@drawable/ic_hospital&lt;/item&gt;     &lt;item&gt;@drawable/ic_pharmacy&lt;/item&gt;     &lt;item&gt;@drawable/ic_clinic&lt;/item&gt; &lt;/array&gt; </code></pre>  <p>MAIN ACTIVITY</p>  <pre><code>public class MainActivity extends AppCompatActivity implements FragmentDrawer.FragmentDrawerListener {  private static String TAG = MainActivity.class.getSimpleName();  private Toolbar mToolbar; private FragmentDrawer drawerFragment;  @Override protected void onCreate(Bundle savedInstanceState) {     super.onCreate(savedInstanceState);     setContentView(R.layout.activity_main);      mToolbar = (Toolbar) findViewById(R.id.toolbar);      setSupportActionBar(mToolbar);     getSupportActionBar().setDisplayShowHomeEnabled(true);      drawerFragment = (FragmentDrawer)             getSupportFragmentManager().findFragmentById(R.id.fragment_navigation_drawer);     drawerFragment.setUp(R.id.fragment_navigation_drawer, (DrawerLayout) findViewById(R.id.drawer_layout), mToolbar);     drawerFragment.setDrawerListener(this);      // display the first navigation drawer view on app launch     displayView(0); }   @Override public boolean onCreateOptionsMenu(Menu menu) {     // Inflate the menu; this adds items to the action bar if it is present.     getMenuInflater().inflate(R.menu.menu_main, menu);     return true; }  @Override public boolean onOptionsItemSelected(MenuItem item) {     // Handle action bar item clicks here. The action bar will     // automatically handle clicks on the Home/Up button, so long     // as you specify a parent activity in AndroidManifest.xml.     int id = item.getItemId();      //noinspection SimplifiableIfStatement     if (id == R.id.action_settings) {         return true;     }      return super.onOptionsItemSelected(item); }  @Override public void onDrawerItemSelected(View view, int position) {     displayView(position); }  private void displayView(int position) {     Fragment fragment = null;     String title = getString(R.string.app_name);     switch (position) {         case 0:             fragment = new FragmentDoctor();             title = getString(R.string.title_doctor);             break;         case 1:             fragment = new FragmentHospital();             title = getString(R.string.title_hospital);             break;         case 2:             fragment = new FragmentPharmacy();             title = getString(R.string.title_pharmacy);             break;         default:             break;     }      if (fragment != null) {         FragmentManager fragmentManager = getSupportFragmentManager();         FragmentTransaction fragmentTransaction = fragmentManager.beginTransaction();         fragmentTransaction.replace(R.id.container_body, fragment);         fragmentTransaction.commit();          // set the toolbar title         getSupportActionBar().setTitle(title);     } } </code></pre>  <p>NAVIGATION DRAWER ADAPTER</p>  <pre><code>public class NavigationDrawerAdapter extends RecyclerView.Adapter&lt;NavigationDrawerAdapter.MyViewHolder&gt; { List&lt;NavDrawerItem&gt; data = Collections.emptyList(); private LayoutInflater inflater; private Context context;  public NavigationDrawerAdapter(Context context, List&lt;NavDrawerItem&gt; data) {     this.context = context;     inflater = LayoutInflater.from(context);     this.data = data; }  public void delete(int position) {     data.remove(position);     notifyItemRemoved(position); }  @Override public MyViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {     View view = inflater.inflate(R.layout.nav_drawer_row, parent, false);     MyViewHolder holder = new MyViewHolder(view);     return holder; }  @Override public void onBindViewHolder(MyViewHolder holder, int position) {     NavDrawerItem current = data.get(position);     holder.title.setText(current.getTitle());     holder.icon.setImageResource(current.getIcon()); }  @Override public int getItemCount() {     return data.size(); }  class MyViewHolder extends RecyclerView.ViewHolder {     TextView title;     ImageView icon;      public MyViewHolder(View itemView) {         super(itemView);         title = (TextView) itemView.findViewById(R.id.title);         icon = (ImageView) itemView.findViewById(R.id.imageView);     } } </code></pre>  <p>NAVDRAWERITEM</p>  <pre><code>public class NavDrawerItem { private String title; private int icon;   public NavDrawerItem() {  }  public NavDrawerItem( String title, int icon) {     this.title = title;     this.icon = icon; } public String getTitle() {     return title; }  public void setTitle(String title) {     this.title = title; }  public int getIcon(){return  icon;}  public void setIcon(int icon){     this.icon = icon; } </code></pre>