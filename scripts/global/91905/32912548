<p>I am using Google places API on Android Studio to display places of interest based on location. I am using the PlacePicker Inentbuilder to accomplish this.</p>  <p>When the app is run, the place picker launches and then closes immediately (about 1-2 seconds).</p>  <ul> <li>I already generated the public API key for android applications and am including this in the meta-data tag in the app manifest.</li> <li>I have enabled the "Google Places API for android" API on the developers console.</li> <li>I have included the latest play services version in dependencies in build.gradle.</li> </ul>  <p>I have included my code and the Logcat below. Do let me know if I need to include anything else.</p>  <p>Manifest.xml:</p>  <pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt; </code></pre>  <p></p>  <pre><code>&lt;uses-permission android:name="android.permission.INTERNET" /&gt; &lt;uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" /&gt; &lt;uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" /&gt; &lt;uses-permission android:name="com.google.android.providers.gsf.permission.READ_GSERVICES" /&gt;  &lt;uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" /&gt; &lt;uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" /&gt;  &lt;uses-feature     android:glEsVersion="0x00020000"     android:required="true" /&gt;  &lt;application     android:allowBackup="true"     android:icon="@mipmap/ic_launcher"     android:label="@string/app_name"     android:theme="@style/AppTheme" &gt;      &lt;meta-data         android:name="com.google.android.gms.version"         android:value="@integer/google_play_services_version" /&gt;     &lt;meta-data         android:name="com.google.android.geo.API_KEY"         android:value="@string/google_maps_key" /&gt;      &lt;meta-data         android:name="com.google.android.maps.v2.API_KEY"         android:value="@string/google_maps_key" /&gt;      &lt;activity         android:name=".MainActivity"         android:label="@string/app_name" &gt;         &lt;intent-filter&gt;             &lt;action android:name="android.intent.action.MAIN" /&gt;              &lt;category android:name="android.intent.category.LAUNCHER" /&gt;         &lt;/intent-filter&gt;     &lt;/activity&gt;     &lt;activity         android:name=".CoresActivity"         android:label="@string/title_activity_cores" &gt;     &lt;/activity&gt;     &lt;activity         android:name=".MicrofoneActivity"         android:label="@string/title_activity_microfone" &gt;     &lt;/activity&gt;     &lt;activity         android:name=".ConfirmaCoresActivity"         android:label="@string/title_activity_confirma_cores" &gt;     &lt;/activity&gt;     &lt;activity         android:name=".BolaLocaActivity"         android:label="@string/title_activity_bola_loca" &gt;     &lt;/activity&gt;     &lt;activity         android:name=".MapsActivity"         android:label="@string/title_activity_maps" &gt;     &lt;/activity&gt;     &lt;activity         android:name=".PlacesAPIActivity"         android:label="@string/title_activity_place_api" &gt;     &lt;/activity&gt; &lt;/application&gt; </code></pre>  <p></p>  <p>PlacesAPIActivity - Activity that is using google places API:</p>  <pre><code>package com.fastcoding.appbebado;  import android.content.Context; import android.content.Intent; import android.os.Bundle; import android.support.v7.app.AppCompatActivity; import android.view.Menu; import android.view.MenuItem; import android.view.View; import android.widget.TextView; import android.widget.Toast;  import com.google.android.gms.common.GooglePlayServicesNotAvailableException; import com.google.android.gms.common.GooglePlayServicesRepairableException; import com.google.android.gms.location.places.Place; import com.google.android.gms.location.places.ui.PlacePicker;   public class PlacesAPIActivity extends AppCompatActivity {     TextView getLocation;     int PLACE_PICKER_REQUEST = 1;     @Override     protected void onCreate(Bundle savedInstanceState) {         super.onCreate(savedInstanceState);         setContentView(R.layout.activity_places_api);         getLocation = (TextView)findViewById(R.id.getLocTV);         getLocation.setClickable(true);         getLocation.setOnClickListener(new View.OnClickListener() {             @Override             public void onClick(View v) {                 PlacePicker.IntentBuilder builder = new PlacePicker.IntentBuilder();                 Intent intent;                 try {                     intent = builder.build(getApplicationContext());                     startActivityForResult(intent, PLACE_PICKER_REQUEST);                     Toast.makeText(PlacesAPIActivity.this,"start activity for result",Toast.LENGTH_LONG).show();                 } catch (GooglePlayServicesRepairableException e) {                     e.printStackTrace();                 } catch (GooglePlayServicesNotAvailableException e) {                     e.printStackTrace();                 }              }         });     }      @Override     public boolean onCreateOptionsMenu(Menu menu) {         getMenuInflater().inflate(R.menu.menu_place_api, menu);         return true;     }      @Override     public boolean onOptionsItemSelected(MenuItem item) {         // Handle action bar item clicks here. The action bar will         // automatically handle clicks on the Home/Up button, so long         // as you specify a parent activity in AndroidManifest.xml.         int id = item.getItemId();          //noinspection SimplifiableIfStatement         if (id == R.id.action_settings) {             return true;         }          return super.onOptionsItemSelected(item);     }      protected void onActivityResult(int requestCode, int resultCode, Intent data) {         System.out.println("onActivityResult");         if (requestCode == PLACE_PICKER_REQUEST) {             if (resultCode == RESULT_OK) {                 Place place = PlacePicker.getPlace(data, this);                 String toastMsg = String.format("Place: %s", place.getName());                 Toast.makeText(this, toastMsg, Toast.LENGTH_LONG).show();             }         }     } } </code></pre>  <p>Build.gradle (app module - This is the only module)</p>  <pre><code>    apply plugin: 'com.android.application'  android {     compileSdkVersion 22     buildToolsVersion '22.0.1'      defaultConfig {         applicationId "com.fastcoding.appbebado"         minSdkVersion 15         targetSdkVersion 22         versionCode 1         versionName "1.0"     }     buildTypes {         release {             minifyEnabled false             proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'         }     } }  dependencies {     compile fileTree(include: ['*.jar'], dir: 'libs')     compile 'com.android.support:appcompat-v7:22.2.1'     compile 'com.google.android.gms:play-services:7.5.0' } </code></pre>