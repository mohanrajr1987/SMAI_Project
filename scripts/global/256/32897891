<p>I am trying to get a sum per month response in a DJango ORM query call:</p>  <pre><code>models.Subscription.objects.all().extra(select={'Month': "EXTRACT(Month FROM Modified)"}).annotate(count_items=Count('Modified')) </code></pre>  <p>my model is like this:</p>  <pre><code>class Subscription(models.Model):     SType = (         ('C', 'Civilian'),         ('E', 'Enlisted'),         ('O', 'Officer'),     )     Subscription_Type = models.CharField(max_length=1, choices=SType)     Lifetime = models.BooleanField(default=False)     Member = models.ForeignKey(Member)     Modified = models.DateField()      objects = SubscriptionManager()      def __str__(self):         return self.Member.first_name + " " + self.Member.last_name + ": " + self.Subscription_Type + "; last modified: " + self.Modified.strftime('%Y-%m-%d') </code></pre>  <p>I am running a Postgres db background, and confirmed the column "Modified".</p>  <p>However, when I run the query I get this error:</p>  <pre><code>File "/home/arcee123/.local/lib/python3.4/site-packages/django/db/backends/utils.py", line 64, in execute return self.cursor.execute(sql, params) django.db.utils.ProgrammingError: column "modified" does not exist LINE 1: SELECT (EXTRACT(Month FROM Modified)) AS "Month", "ifthq_sub... </code></pre>  <p>Am I forgetting something?  I'm trying to get the count of records for each month.  Thanks.</p>