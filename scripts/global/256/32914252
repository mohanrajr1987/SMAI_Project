<p>I am planning to use postgres LISTEN/NOTIFY aproach to get insert time(actual transaction commit time) of records in a table. To achieve this, I plan to do the following. I issue a notification during insert time as shown below.</p>  <pre><code>BEGIN;   INSERT INTO table_name(id, ...) values (id,....);   select pg_notify('test_channel', 'id - ' || id || ' trans start time - ' || now() || ' notify start time - ' || clock_timestamp());  END; </code></pre>  <p>And then I plan to use <a href="https://pythonhosted.org/psycopg2/advanced.html#asynchronous-notifications" rel="nofollow">https://pythonhosted.org/psycopg2/advanced.html#asynchronous-notifications</a> to receive those notifications.</p>  <p>What I would like to find out is the exact time the transaction commit happens(the record is available to read) down to micro secods</p>  <p>I understand that NOTIFY(pg_notify) actually sends notification right after the commit of the transaction but I couldnt figure out how to find out the exact time when it happens. The clock timestamp value I have in NOTIFY, is not the acutal transaction commit time. </p>  <p>I guess the time I listen to notification will be close to transaction commit time but I am not sure how close it is. First, there is some time between polls in my code while listening(however small it is) and second, I am not sure if there is any lag between NOTIFY/LISTEN communication itself. </p>  <p>Any ideas?</p>