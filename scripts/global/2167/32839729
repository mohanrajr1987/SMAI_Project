<p>Before you mark this thread as a duplicate, please consider that I have been attempting to debug the following code for a few days already, and still cannot seem to find a solution.</p>  <p>I'm working on a camera class that has one public method: to return the current frame. In the background, it keeps updating the current frame every time a new frame event occurs (please see code below).</p>  <p>Through commenting code out, I have come to the conclusion that a leak is happening here: <code>this.currentFrame = (Bitmap)eventArgs.Frame.Clone();</code>. Moreover, I have conducted a few memory performance diagnostics in Visual Studio, and it seems the the <code>this.currentFrame</code> object keeps growing in size (seems to behave similarly to a linked list).</p>  <p>I guess my question is why is <code>this.currentFrame</code> growing? I am using the <code>Image.Clone()</code> method so nothing else should be referring to the memory space that it is referring to. In addition, before I update it and I make it refer to <code>null</code> just in case. So why is it not being garbage collected when the <code>this.currentFrame</code> pointer points to a new memory location?</p>  <p>I doubt there is a bug in the AForge code... I know it's probably something small in my code, but I can't see it...</p>  <pre><code>public WebCamClass(VideoCaptureDevice camera) {     this.cam = camera;     this.currentFrame = new Bitmap(Project.Properties.Resources.defaultImage);     this.cam.NewFrame += new NewFrameEventHandler(cam_NewFrame);     this.cam.Start(); }  private VideoCaptureDevice cam; private Bitmap currentFrame;  private void cam_NewFrame(object sender, NewFrameEventArgs eventArgs) {     this.currentFrame = null;     this.currentFrame = (Bitmap)eventArgs.Frame.Clone(); }  public Image saveFrame() {     return this.currentFrame; } </code></pre>  <p>I have also tried this with no success:</p>  <pre><code>public Image saveFrame() {     return (Bitmap)this.currentFrame.Clone(); } </code></pre>