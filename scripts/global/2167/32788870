<p>I am currently looking for a way around an apparent memory leak in the Mac implementation of the REST client. The code to generate the memory leak is the following (running XE8, update 1):</p>  <pre><code>program mac_REST_leak_test; {$APPTYPE CONSOLE} {$R *.res}  uses   System.SysUtils, REST.Client, REST.Types, IPPeerClient;  var    request : TRestRequest;    ii, iMax : integer; begin    iMax := 1;     for ii := 0 to iMax do    begin       request := TRestRequest.Create(nil);       // Fake Online REST API for Testing and Prototyping        request.Client := TRestClient.Create('http://jsonplaceholder.typicode.com/');       request.Method := rmPOST;       request.Execute();        request.Client.Free();       request.Free();    end; end. </code></pre>  <p>This is the smallest block of code that demonstrates the leak. Essentially, I have a synching service that makes REST requests every so often.</p>  <p>When I run this on Windows, using MadExcept, no leaks are found. Examining the running process in ProcessMonitor shows no increase in the amount of memory being used.</p>  <p>When run on a Mac, however, the Activity Monitor shows the memory allocated to the app continue to rise. Further, when run using Instruments, there appear to be leaks dealing with several URL and HTTP classes on mac.</p>  <p>Does anybody know how to resolve this leak? </p>  <p>(As an aside, it would be really helpful to know exactly where the leak is coming from on Mac, but the only Delphi classes listed are the TMethodImplementationIntercept. I'm to believe that this is due to the fact that Delphi doesn't generate a dSYM file for Mac. If anybody knows a way around that, that would be awesome too!)</p>  <p><strong>UPDATE</strong> By varying <code>iMax</code> from 1 to 10 and comparing the FastMM4 output, it appears that the leak is in the class <code>Macapi.ObjectiveC.TConvObjID.XForm</code>. The 10 iteration output contains 9 more leaks with this as a stack trace compared to the 1 iteration. I have reported this to Embarcadero as RSP-12242.</p>