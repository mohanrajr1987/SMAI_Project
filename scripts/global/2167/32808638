<p>I have problems freeing my linked list correctly. I don't really know, how to make it with head and current... </p>  <pre><code>typedef struct list{    int info;    struct list *link; } Node;  Node *_getnode (){     return((Node *) malloc (sizeof (Node))); }  int main() {      Node *s = _getnode();     s -&gt; link = NULL;     Node *t = s;     int c;      while (1) {         printf("\n\t Enter number : ");         scanf ("%d", &amp;s -&gt; info);             printf ("\n\t Continue? ");         __fpurge (stdin);         c = getchar ();          if (c == 'N' || c == 'n'){             s -&gt; link = NULL;             break;         }          s -&gt; link = _getnode ();         s = s -&gt; link;     }      s = t;      free(s);     free(t);      putchar('\n');     return (0); } </code></pre>  <p>When I enter just one number, than valgrind says, there's no memory leak. But otherwise there is. I understand, that I have to free more than just the fist node, but I don't know how.</p>