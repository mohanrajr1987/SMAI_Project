<p>I have a presentation that pulls data from an Excel spreadsheet. I'm using this create a new instance of Excel:</p>  <pre><code> Public Sub InitExcel()     If xlApp Is Nothing Then Set xlApp = New Excel.Application     xlApp.DisplayAlerts = False     Set wbWorkbook = xlApp.Workbooks.Open(ActivePresentation.Path &amp; "\Data.xlsx", ReadOnly:="True", Notify:="false")     xlApp.DisplayAlerts = True     Set wsTechnologies = wbWorkbook.Worksheets("Technologies") End Sub </code></pre>  <p>Then once I've retrieved the data, I close Excel with</p>  <pre><code>xlApp.Quit xlApp = Nothing </code></pre>  <p>Unfortunately this makes two problems. One is that it doesn't always close Excel and I always seem to be left with at least one instance in the Task Manager. The other one is that I want to display different data every time the user clicks on a different shape, so the way I'm doing it at the moment, every time a click happens Excel has to initialise, get the data, and quit... pretty slow.</p>  <p>So is there a better way to interface with Excel? Can I initialise it once, leave it open, and tell it to quit once the user exits the presentation? Or is there another way?</p>  <p><strong>Update:</strong> I have discovered that <a href="https://msdn.microsoft.com/en-us/library/aa211599(v=office.11).aspx" rel="nofollow">there is a way to trigger events on close</a>. Still left with a loose Excel instance after calling</p>  <pre><code>xlApp.quit </code></pre>  <p>and</p>  <pre><code>set xlApp = nothing </code></pre>  <p>though. It closes when PowerPoint is though, so maybe it's not such an issue.</p>