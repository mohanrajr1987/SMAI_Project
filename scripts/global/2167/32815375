<p>I noticed my program was using an absurd (and ever-increasing) amount of memory, and managed to narrow it down to this piece of code:</p>  <pre><code>        Dim elements As HtmlElementCollection = wb.Document.GetElementsByTagName("div")     For Each ce As HtmlElement In elements         If ce.GetAttribute("hidden") = "false" Then ce.Style = "Display:none"         Marshal.ReleaseComObject(ce.DomElement)     Next </code></pre>  <p>I'm using it to hide some specific elements on a webpage loaded by a WebBrowser control. I'm accessing a lot of webpages sequentially using a new WebBrowser instance each time (making sure to dispose of it afterwards), which means the above code gets run pretty frequently.</p>  <p>After commenting it out, memory usage stays relatively low and constant. But as soon as I add the code back in, memory usage increases dramatically, and keeps growing without ever going back down again.</p>  <p>I added the "Marshal.ReleaseComObject(ce.DomElement)" line after doing some research about the issue, and it's helped, albeit slightly-- memory usage still increases until the program crashes. </p>  <p>Again, everything works fine when I comment this section of code out, so I can verify the problem isn't being caused by some other oversight elsewhere.</p>  <p>Does anyone know what I could do to fix this, or know of some alternative method I can use to accomplish the same thing without the memory issue?</p>  <p><strong>Edit:</strong> Also, I just want to point out that using a WebClient is out of the question-- I need the webpage to be rendered so I can take a screenshot.</p>  <p><strong>Edit #2:</strong> In case anyone else is having a similar problem, I ended up using JavaScript instead, to the same effect:</p>  <pre><code>wb.Navigate("document.getElementsByClassName('item')[0].setAttribute('style','display:none');") </code></pre>  <p>That fixed the memory issue. However, I'm still interested in knowing why the original method used up so much memory, and how I could avoid that in the future...</p>