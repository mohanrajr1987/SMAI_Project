<p>I'm reading this article (<a href="http://javascript.info/tutorial/memory-leaks#memory-leak-size">http://javascript.info/tutorial/memory-leaks#memory-leak-size</a>) about memory leaks which mentions this as a memory leak:</p>  <pre><code>function f() {     var data = "Large piece of data";      function inner() {         return "Foo";     }      return inner; } </code></pre>  <blockquote>   <p>JavaScript interpreter has no idea which variables may be required by   the inner function, so it keeps everything. In every outer   LexicalEnvironment. I hope, newer interpreters try to optimize it, but   not sure about their success.</p> </blockquote>  <p>The article suggests we need to manually set <code>data = null</code> before we return the inner function.  </p>  <p>Does this hold true today? Or is this article outdated? (If it's outdated, can someone point me to a resource about current pitfalls)</p>