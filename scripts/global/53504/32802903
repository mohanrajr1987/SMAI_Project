<p>I wan't to login in my app, through another domain. I have setup the headers on the server side like this:</p>  <p>application.rb:</p>  <pre><code>    config.action_dispatch.default_headers = {       'Access-Control-Allow-Origin' =&gt; '*',       'Access-Control-Request-Method' =&gt; 'GET,POST,OPTIONS',       'Access-Control-Request-Method' =&gt; '*',       'Access-Control-Allow-Headers' =&gt; '*',       'Access-Control-Max-Age' =&gt; '1728000' } </code></pre>  <p>These doesn't seem to do anything.</p>  <p>In the application controller: </p>  <pre><code>before_filter :expire_hsts    # Prevent CSRF attacks by raising an exception.   # For APIs, you may want to use :null_session instead.   #protect_from_forgery with: :exception   protect_from_forgery   before_filter :current_user, :cors_preflight_check   after_filter :cors_set_access_control_headers  # For all responses in this controller, return the CORS access control   headers.  def cors_set_access_control_headers   headers['Access-Control-Allow-Origin'] = '*'   headers['Access-Control-Allow-Methods'] = 'POST, GET, OPTIONS'   headers['Access-Control-Request-Method'] = '*'   headers['Access-Control-Allow-Headers'] = '*'   headers['Access-Control-Max-Age'] = "1728000" end  # If this is a preflight OPTIONS request, then short-circuit the # request, return only the necessary headers and return an empty # text/plain.  def cors_preflight_check   if request.method == :options     headers['Access-Control-Allow-Origin'] = '*'     headers['Access-Control-Allow-Methods'] = 'POST, GET, OPTIONS'     headers['Access-Control-Request-Method'] = '*'     headers['Access-Control-Allow-Headers'] = '*'     headers['Access-Control-Max-Age'] = '*'     render :text =&gt; '', :content_type =&gt; 'text/plain'   end end </code></pre>  <p>This is the request I send with jquery:</p>  <pre><code>$.ajax({                 url: "http://localhost:3000/login",                 type: "POST",                 crossDomain: true,                  data: {                     "email": "admin@example.com",                     "password" : "foobar",                     "remember_me": "0"                 }                 /*xhrFields: {                     withCredentials: true                 }*/             }).done(function(result) {                 $('html').html(result);             }); </code></pre>  <p>A GET request to this page would work and would show the page on the screen. Nevertheless I need to post, to login. What am I doing wrong?</p>