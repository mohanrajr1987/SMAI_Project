<p>My web app, served at <code>localhost:3000</code> is sending cross-domain GET requests with an "Authorization" header, to my backend app served at <code>localhost:8000</code>. Querying it with curl without the header works: </p>  <pre><code>curl GET http://localhost:8000/app </code></pre>  <p>Querying it with curl, with the header, also works:</p>  <pre><code>curl GET http://localhost:8000/app -H 'Authorization: Basic xxxx' </code></pre>  <p>But my jQuery GET does not:</p>  <pre><code>$.ajax({     url: http://localhost:8000/app,     type: 'GET',     headers: {'Autorization': 'BASIC xxxx'},   // if I remove this it works     ... )}; </code></pre>  <p>It logs out</p>  <pre><code>XMLHttpRequest cannot load http://localhost:8000/app.  Request header field Autorization is not allowed by Access-Control-Allow-Headers. </code></pre>  <p>Response headers include </p>  <pre><code>Access-Control-Allow-Headers:x-requested-with, content-type, accept, origin, authorization, x-csrftoken Access-Control-Allow-Methods:GET, POST, PUT, PATCH, DELETE, OPTIONS Access-Control-Allow-Origin:* </code></pre>  <p>So it looks like Authorization is allowed...</p>  <p>If it helps, my backend is a Django app using mod_wsgi(-express) and Apache, and the django-cors-headers module. Settings have the default <code>CORS_ALLOW_HEADERS</code> (which include 'authorization').</p>  <p>I am very new to this kind of problem, so redirecting me to the CORS specification does not help much. I have seen a couple of other posts with a similar error, but no answer that is either provided, applicable, or understandable by me. Thanks in advance.</p>