<p>I'd like to create a client for last.fm. My music "station" feed is here, in JSON format: <a href="http://www.last.fm/player/station/user/skeftomai/mix" rel="nofollow">http://www.last.fm/player/station/user/skeftomai/mix</a>.</p>  <p>However, when I try to access this via <code>$.getJSON()</code>, I get</p>  <blockquote>   <p>No 'Access-Control-Allow-Origin' header is present on the requested resource. Origin '<a href="http://my.exampledomain.com" rel="nofollow">http://my.exampledomain.com</a>' is therefore not allowed access.</p> </blockquote>  <p>So unfortunately we have a CORS issue on last.fm's end. I'd like to work around this. Here are some things I've tried:</p>  <ol> <li><strong>AJAX</strong>. This fails with the Access-Control-Allow-Origin error.</li> <li>An <strong>iframe</strong> with document.domain set to "www.last.fm" or "last.fm". This fails with SAMEORIGIN iframe error.</li> <li><strong>JSONP</strong>. Unfortunately JSONP doesn't seem to be supported with this feed.</li> <li>A <strong><code>&lt;script&gt;</code> tag</strong> with src pointing to the feed <a href="http://stackoverflow.com/a/13576588/83897">link</a>. Unfortunately <code>$('#scriptTagId').html()</code> is empty.</li> <li>Flash. But unfortunately suffers from the same cross-origin issue.</li> <li>Java applet. Too heavy, everyone might not have the JVM installed, and it might suffer from the same cross-origin issue.</li> </ol>  <p>I'm fairly sure I could get away with a web proxy whereby the client utilizes a server-size proxy to retrieve the feed...but I really, really want this to be a pure client-side app with no server-side. I'd like to host this on a CDN (S3 + Cloudfront).</p>  <p>Is there ANY way around this?</p>