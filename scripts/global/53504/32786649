<p>There are two domains: client.com and cookies.com. Client.com serves a file:</p>  <pre><code>&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt;     &lt;title&gt;Requester&lt;/title&gt; &lt;/head&gt; &lt;body&gt;     &lt;script&gt;         var request = new XMLHttpRequest();         request.withCredentials = true;         request.open("POST", 'http://cookies.com');         request.send();     &lt;/script&gt; &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>And the cookies.com serves a file</p>  <pre><code>&lt;?php     header('Access-Control-Allow-Origin: http://client.com');     header('Access-Control-Allow-Credentials: true');     $i = 0;     setcookie('A' . $i++, 'B', time() + 24 * 60 * 60, '/', '', false, false);     setcookie('A' . $i++, 'B', time() + 24 * 60 * 60, '/', '.client.com', false, false); </code></pre>  <p>The cookies are set, everyone is happy. But now, the client.com has to serve from client.com:3000, so cookies.com code changes into</p>  <pre><code>&lt;?php     header('Access-Control-Allow-Origin: http://client.com:3000');     header('Access-Control-Allow-Credentials: true');     $i = 0;     setcookie('A' . $i++, 'B', time() + 24 * 60 * 60, '/', '', false, false);     setcookie('A' . $i++, 'B', time() + 24 * 60 * 60, '/', '.client.com', false, false);     //Just for test, but cookies don't accept ports... don't they?     setcookie('A' . $i++, 'B', time() + 24 * 60 * 60, '/', '.client.com:3000', false, false); </code></pre>  <p>It seems firefox accepts the domain specific cookie, however chrome doesn't.</p>  <p>Why is that?</p>