<p>I have an OpenCV program that is supposed to use a webcam (in this case the built in laptop camera). The program compiles fine without error but when I run it the program seems to hang on the line:</p>  <pre><code>img_scene = cvCaptureFromCAM(0); </code></pre>  <p>I have a different program that access the camera in the same fashion so I don't understand as to why this program seems to be having trouble.</p>  <p>Full capture code from non-working program:</p>  <pre><code>Mat captureThread() {   if(captureOpen == false){     img_scene = cvCaptureFromCAM(0);     cvSetCaptureProperty(img_scene, CV_CAP_PROP_FRAME_WIDTH, 640);     cvSetCaptureProperty(img_scene, CV_CAP_PROP_FRAME_HEIGHT, 480);   }   while(1) {     image = cvQueryFrame(img_scene);     if(image.empty()) {       continue;     }     cvtColor(image, gray, CV_BGR2GRAY);     return gray;   } } </code></pre>  <p>This is the code that is being used in a different program that is working as expected:</p>  <pre><code>  img_scene = cvCaptureFromCAM(0);   cvSetCaptureProperty(img_scene, CV_CAP_PROP_FRAME_WIDTH, 640);   cvSetCaptureProperty(img_scene, CV_CAP_PROP_FRAME_HEIGHT, 480);   while(1) {     imageFrame = cvQueryFrame(img_scene);     if(imageFrame.empty()) {       continue;       cout &lt;&lt; "image frame is empty" &lt;&lt; endl;     }     cvtColor(imageFrame, gray, CV_BGR2GRAY); </code></pre>  <p>What is causing the non-working program to have trouble access the camera? I have also tried plugging in a USB camera and setting <code>cvCaptureFromCam(-1)</code> but it does not work either.</p>  <p>EDIT:  The non-working program uses multiple threads whereas the working program does not.</p>