<p>I'm trying to populate a SQLite database using Django with data from a file that consists of 6 million records. However the code that I've written is giving me a lot of time issues even with 50000 records.</p>  <p>This is the code with which I'm trying to populate the database:</p>  <pre><code>import os  def populate():        with open("filename") as f:         for line in f:             col = line.strip().split("|")             duns=col[1]             name=col[8]             job=col[12]                      dun_add = add_c_duns(duns)                add_contact(c_duns = dun_add, fn=name, job=job)  def add_contact(c_duns, fn, job):     c = Contact.objects.get_or_create(duns=c_duns, fullName=fn, title=job)     return c  def add_c_duns(duns):     cd = Contact_DUNS.objects.get_or_create(duns=duns)[0]     return cd    if __name__ == '__main__':     print "Populating Contact db...."     os.environ.setdefault("DJANGO_SETTINGS_MODULE", "settings")     from web.models import Contact, Contact_DUNS     populate()     print "Done!!" </code></pre>  <p>The code works fine since I have tested this with dummy records, and it gives the desired results. I would like to know if there is a way using which I can lower the execution time of this code. Thanks.     </p>