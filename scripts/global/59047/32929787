<p>I was working on a little game i am creating and something started to cause my image that i use for my ship to stay facing one way.</p>  <p>I am using this method of rotating the image</p>  <pre><code>shipImg, newRect = rot_center(shipImg,oldRect,90)      #instead of 90 i would use -90 for the other direction of rotation. gameDisplay.blit(shipImg, newRect)  oldRect = shipImg.get_rect(center=(x + (shipW/ 2), y + (shipH / 2)))  gameDisplay.blit(shipImg, oldRect) </code></pre>  <p>I can't see anything wrong with this so here is all my code.</p>  <pre><code>import pygame import time import random  pygame.init()  white = (255,255,255) black = (0,0,0) red = (255,0,0) green = (0,255,0) blue = (0,0,255)  display_width = 800 display_height = 600  gameDisplay = pygame.display.set_mode((display_width,display_height)) pygame.display.set_caption('Destroyer')  clock = pygame.time.Clock() FPS = 60  font = pygame.font.SysFont(None, 25)  #~~~~~~~~~~~~~~~~~~~Other Functions~~~~~~~~~~~~~~~~~#  def devMode(x, y, shipW, shipH, xcross, ycross):     devText = font.render("X: "+str(x) + "      Y: "+str(y) + "     shipW: "+str(shipW) + "     shipH: "+str(shipH) + "     xcross: "+str(xcross) + "       ycross: "+str(ycross), True, white)     gameDisplay.blit(devText,(0,display_height-17))  def money(count):     text = font.render("Asteroids: "+str(count),True ,white)     gameDisplay.blit(text,(0,0))  def rot_center(image, rect, angle):     rot_image = pygame.transform.rotate(image, angle)     rot_rect = rot_image.get_rect(center=rect.center)     return rot_image,rot_rect   #~~~~~~~~~~~~~~~~~~~~~~The Game~~~~~~~~~~~~~~~~~~~~~#  def game_loop():      face = 1      asteroids = 0      fthrust = False      xcross = False     ycross = False      loot_spawnx = random.randrange(0,display_width)     loot_spawny = random.randrange(0,display_height)     loot_width = 20     loot_height = 20      x = (display_width * 0.45)     y = (display_height * 0.45)      x_change = 0     y_change = 0      shipspeed = 5      bulSpeed = 10      cooltime = 10000     duration = 5000      newGame = True      lastTime = 0     boost = True     cooldown = False     power = True      #Start of bullets      #1      lGun1 = -999     rGun1 = -999      yBul1 = 0     xBul1 = 0      fire1 = 0      b1 = False      ybul1_change = 0     xbul1_change = 0      #End of bullets      shipW = 69     shipH = 88      gameExit = False      while not gameExit:          shipImg = pygame.image.load('ship1.png')         forwardthrust = pygame.image.load('ship1_forwardthrust.png')         reversethrust = pygame.image.load('ship1_reversethrust.png')         strafe = pygame.image.load('ship1_strafe.png')          for event in pygame.event.get():             if event.type == pygame.QUIT:                 pygame.quit()                 quit()              if event.type == pygame.KEYDOWN:                 if event.key == pygame.K_LEFT:                     shipImg, newRect = rot_center(shipImg,oldRect,90)                     gameDisplay.blit(shipImg, newRect)                      #shipImg = pygame.transform.rotate(shipImg,90)                     face -= 1                     face = (face - 1) % 4                     face += 1                      if face == 2 or face == 4:                         shipW = 88                         shipH = 69                     else:                         shipW = 69                         shipH = 88                  elif event.key == pygame.K_RIGHT:                     shipImg, newRect = rot_center(shipImg,oldRect,-90)                     gameDisplay.blit(shipImg, newRect)                      #shipImg = pygame.transform.rotate(shipImg,-90)                     face -= 1                     face = (face + 1) % 4                     face += 1                      if face == 2 or face == 4:                         shipW = 88                         shipH = 69                     else:                         shipW = 69                         shipH = 88                  elif event.key == pygame.K_UP:                     if face == 1:                         y_change = -shipspeed                         x_change = 0                     elif face == 2:                         x_change = shipspeed                         y_change = 0                     elif face == 3:                         y_change = shipspeed                         x_change = 0                     elif face == 4:                         x_change = -shipspeed                         y_change = 0                 elif event.key == pygame.K_DOWN:                     if face == 1:                         y_change = shipspeed                         x_change = 0                     elif face == 2:                         x_change = -shipspeed                         y_change = 0                     elif face == 3:                         y_change = -shipspeed                         x_change = 0                     elif face == 4:                         x_change = shipspeed                         y_change = 0                 elif event.key == pygame.K_s:                     y_change = 0                     x_change = 0                 elif event.key == pygame.K_PAGEUP:                     if face == 1:                         x_change = -shipspeed                         y_change = 0                     elif face == 2:                         y_change = -shipspeed                         x_change = 0                     elif face == 3:                         x_change = shipspeed                         y_change = 0                     elif face == 4:                         y_change = shipspeed                         x_change = 0                 elif event.key == pygame.K_PAGEDOWN:                     if face == 1:                         x_change = shipspeed                         y_change = 0                     elif face == 2:                         y_change = shipspeed                         x_change = 0                     elif face == 3:                         x_change = -shipspeed                         y_change = 0                     elif face == 4:                         y_change = -shipspeed                         x_change = 0                  elif event.key == pygame.K_d:                     if power == True:                         power = False                         if boost == True:                             shipspeed = 10                             start = pygame.time.get_ticks()                             if now - start &gt;= duration:                                 boost = False                                 shipspeed = 5                                 cooldown = True                                 lastTime = pygame.time.get_ticks()                  elif event.key == pygame.K_f:                     #1                     if b1 == False:                         fire1 = face                         if fire1 == 1 or fire1 == 3:                             xbul1_change = 0                             xBul1 = 0                             lGun1 = x + 9                             rGun1 = x + 59                             if fire1 == 1:                                 ybul1_change = -bulSpeed                                 yBul1 = y - 10                             else:                                 ybul1_change = bulSpeed                                 yBul1 = y + 88                         else:                             ybul1_change = 0                             yBul1 = 0                             lGun1 = y + 9                             rGun1 = y + 59                             if fire1 == 2:                                 xbul1_change = bulSpeed                                 xBul1 = x + 88                             else:                                 xbul1_change = -bulSpeed                                 xBul1 = x - 10                         b1 = False  #if x &lt; loot_spawnx+loot_width and x &gt; loot_spawnx: #if y &lt; loot_spawny+loot_height and y &gt; loot_spawny:          if y &lt; loot_spawny+loot_height and y &gt; loot_spawny or y + shipH &lt; loot_spawny+loot_height and y + shipH &gt; loot_spawny:             ycross = True              if x &lt; loot_spawnx +loot_width and x &gt; loot_spawnx or x + shipW &gt; loot_spawnx and x + shipW &lt; loot_spawnx + loot_width:                 loot_spawnx = random.randrange(0,display_width)                 loot_spawny = random.randrange(0,display_height)                 asteroids += 10                 xcross = True             elif x + shipW &gt; loot_spawnx + loot_width and x &lt; loot_spawnx:                 loot_spawnx = random.randrange(0,display_width)                 loot_spawny = random.randrange(0,display_height)                 asteroids += 10                 xcross = True             else:                 xcross = False         else:             ycross = False          if x &gt; loot_spawnx and x &lt; loot_spawnx + loot_width or x + shipW &gt; loot_spawnx and x + shipW &lt; loot_spawnx + loot_width:             xcross = True              if y &lt; loot_spawny+loot_height and y &gt; loot_spawny or y + shipH &lt; loot_spawny+loot_height and y + shipH &gt; loot_spawny:                 loot_spawnx = random.randrange(0,display_width)                 loot_spawny = random.randrange(0,display_height)                 asteroids += 10                 ycross = True             elif y + shipH &gt; loot_spawny + loot_height and y &lt; loot_spawny:                 loot_spawnx = random.randrange(0,display_width)                 loot_spawny = random.randrange(0,display_height)                 asteroids += 10                 ycross = True             else:                 ycross = False         else:             xcross = False          if y + shipH &gt; loot_spawny + loot_height and y &lt; loot_spawny:             ycross = True             if x + shipW &gt; loot_spawnx + loot_width and x &lt; loot_spawnx:                 xcross = True                 loot_spawnx = random.randrange(0,display_width)                 loot_spawny = random.randrange(0,display_height)                 asteroids += 10             else:                 xcross = False         else:             ycorss = False          now = pygame.time.get_ticks()         if cooldown == True:             nowTime = pygame.time.get_ticks()             if nowTime - lastTime &gt;= cooltime:                 lastTime = nowTime                 cooldown = False                 boost = True                 power = True                 pygame.display.update()            gameDisplay.fill(green)          y += y_change         x += x_change          if x &lt;= -5:             x += 5         elif x + shipW &gt;= display_width:             x -= 5         elif y &lt;= -5:             y += 5         elif y + shipH &gt;= display_height:             y -= 5          oldRect = shipImg.get_rect(center=(x + (shipW/ 2), y + (shipH / 2)))          gameDisplay.blit(shipImg, oldRect)          #1         if fire1 == 1 or fire1 == 3:             pygame.draw.rect(gameDisplay, red, [lGun1, yBul1, 2, 10])             pygame.draw.rect(gameDisplay, red, [rGun1, yBul1, 2, 10])         elif fire1 == 2 or fire1 == 4:             pygame.draw.rect(gameDisplay, red, [xBul1, lGun1, 10, 2])             pygame.draw.rect(gameDisplay, red, [xBul1, rGun1, 10, 2])           #1         yBul1 += ybul1_change         xBul1 += xbul1_change          pygame.draw.rect(gameDisplay, blue, [loot_spawnx, loot_spawny, loot_width, loot_height])         money(asteroids)         devMode(x, y, shipW, shipH, xcross, ycross)         pygame.display.update()         clock.tick(FPS)  game_loop() pygame.quit() quit() </code></pre>  <p>If anyone can see something that i have missed or something that i have done wrong then please reply.</p>  <p>Thanks in advance.</p>