<p>I try to retrieve Cucumber annotations to make a content assist plugin. But i don't know why my code does not work. The reflexion api return me  null for the method.getDeclaredAnnotations().</p>  <pre><code>public List&lt;String&gt; getStepDefinition() throws ClassNotFoundException, IOException {         String location = Platform.getPreferencesService().                   getString("myPref", "jarLocation", null, null);         if(location != null) {             File f = new File(location);             URL url = f.toURI().toURL();               URL[] urls = new URL[]{url};             URLClassLoader cl = new URLClassLoader(urls);              Class&lt;?&gt; clazz = cl.loadClass("myStepDefinitionFile");             Method[] methods = clazz.getDeclaredMethods();             for (Method method : methods) {                 if(method.isAnnotationPresent(Soit.class)) {                     Soit annotation = method.getAnnotation(Soit.class);                     annotation.value();                 }             }             cl.close();         }         return null;     } </code></pre>  <p>In debug mode, i see that the class was found and i can list all methods. But i can't list the method annotations. The reflexion api don't find them. </p>  <p>This is the Soit.class </p>  <pre><code>@Retention(RetentionPolicy.RUNTIME) @Target(ElementType.METHOD) @StepDefAnnotation @Documented public @interface Soit {     /**      * @return a regular expression      */     String value();      /**      * @return max amount of milliseconds this is allowed to run for. 0 (default) means no restriction.      */     long timeout() default 0; } </code></pre>  <p>And this is the method annoted with it : </p>  <pre><code>@Override     @Soit("^ok$")     public void ok() {         this.driver.ok();     } </code></pre>