<p>I need to write a function goToNthMethod(int n) to let the user jump to the nth method in the file being edited.</p>  <p>Ideas so far:</p>  <ol> <li><p>I imagine the ContentOutline reads its tree from some sort of IContentSource (made up) or something, if I can read from the same source, that would probably be cleaner. Does something like this exist?</p></li> <li><p>Read the contents of the outline view, and maybe simulate a double click on one of the Outline view's entries. This is as far as I got before I realized I was in over my head:</p>  <pre><code>IWorkbenchPage page = PlatformUI.getWorkbench().getActiveWorkbenchWindow().getActivePage(); IViewPart part = page.findView("org.eclipse.ui.views.ContentOutline"); ContentOutline outline = (ContentOutline)part; PageBook pageBook = outline.book; // Doesn't work, book is private Tree root = pageBook.currentPage; // Doesn't work, currentPage is private String label = root.getLabel(); // Nothing like getLabel exists </code></pre></li> <li><p>Read the entire IDocument's contents, parse the java source code within, get the offsets in the file, and feed that to the editor.selectAndReveal method. However, parsing the java source code within is a massive task, so this approach probably won't work.</p></li> <li><p>Use outline.getCurrentPage(), which is a JavaOutlinePage, but I can't seem to import that class. I'm guessing I need to pull in the entire JDT project to do that. This approach also means I'm tied to a specific language, when I want my goToNthMethod to be language agnostic.</p></li> </ol>  <p>Any ideas on how I can jump to the nth method? Thanks!</p>  <p>Some context: I'm integrating Dragon NaturallySpeaking with eclipse to be able to program with my voice. It's working well so far, but one tedious part is navigating around the file, which would be made easier if I could say "go to 8th method". In fact, just "go to 8th entry" to just go to the 8th row in the outline view would be sufficient. Any other ideas appreciated!</p>