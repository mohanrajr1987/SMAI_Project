<p>What I currently got for the style, I got 2 more styles like this, but then different. The <code>x:Key</code> is different for every one of them:</p>  <pre><code>&lt;Window.Resources&gt;     &lt;Style x:Key="BtnResumeStyle" TargetType="{x:Type Button}"&gt;         &lt;Setter Property="Background" Value="#009afd" /&gt;         &lt;Setter Property="Foreground" Value="White" /&gt;         &lt;Setter Property="FontSize" Value="15" /&gt;         &lt;Setter Property="SnapsToDevicePixels" Value="True" /&gt;         &lt;Setter Property="Cursor" Value="Hand" /&gt;          &lt;Setter Property="Template"&gt;             &lt;Setter.Value&gt;                 &lt;ControlTemplate TargetType="{x:Type Button}"&gt;                     &lt;Border CornerRadius="7" Background="{TemplateBinding Background}"&gt;                         &lt;Grid&gt;                             &lt;Path x:Name="PathIconLeft" Width="21.5" Height="Auto" Stretch="Fill" Fill="White" HorizontalAlignment="Left" Margin="40,19.637,0,17.637" Data="F1M30,0L30,38.6043 0.6665,38.7918 0.0833,38.8333 0.0833,0.1667z" RenderTransformOrigin="0.5,0.5"/&gt;                             &lt;Path x:Name="PathIcon" Width="55.5" Height="Auto" Stretch="Fill" Fill="White" HorizontalAlignment="Left" Margin="70,19.637,0,17.637" Data="F1 M 30,22.1667L 50.6665,37.6043L 50.6665,38.7918L 30.0833,53.8333L 30.0833,22.1667 Z " RenderTransformOrigin="0.5,0.5"/&gt;                             &lt;ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" SnapsToDevicePixels="True" /&gt;                         &lt;/Grid&gt;                     &lt;/Border&gt;                 &lt;/ControlTemplate&gt;             &lt;/Setter.Value&gt;         &lt;/Setter&gt;     &lt;/Style&gt; &lt;/Window.Resources&gt; </code></pre>  <p>The button itself:</p>  <pre><code>&lt;Button x:Name="btnPauseResume" Style="{Binding Path=ButtonImage}" Margin="530,73,99,72" Click="btnPauseResume_Click"/&gt; </code></pre>  <p>And the timer:</p>  <pre><code>private static System.Timers.Timer UpdateTimer;  public MainWindow() {     InitializeComponent();      UpdateTimer = new System.Timers.Timer();     UpdateTimer.Interval = 2500;     UpdateTimer.Elapsed += OnUpdateRecStatus;     UpdateTimer.AutoReset = true;     UpdateTimer.Start(); } </code></pre>  <p>Now inside the <code>OnUpdateRecStatus</code> function, I want to change the style of my button to something else. Since the timer is on a different thread, it is not so easy, I already know that, and I already tried a couple of thing. I can see that when I make the timer inside an button press event, it can change the style of the button this way:</p>  <pre><code>private object buttonimage;     public object ButtonImage     {         get { return buttonimage; }         set         {             buttonimage = value;             RaisePropertyChanged("ButtonImage");         }     }     private void RaisePropertyChanged(string propName)     {         if (PropertyChanged != null)         {             PropertyChanged(this, new PropertyChangedEventArgs(propName));         }     }     public event PropertyChangedEventHandler PropertyChanged; </code></pre>  <p>This will change the value inside the class. And it will trigger an PropertyChanged event. As I said, when doing it this way, inside an buttonpress event, the style does actually change -_-.  But when I initialize the timer inside the <code>MainWindow()</code> function. It will give a lot of errors.</p>  <p>I actually have another Timer which gets initialized inside an button press event, and this timer is able to change the style.</p>  <p>So, the timer can't change the style when it's inside the Initializer of the window. But it can change the style when the timer is initialized inside a button press event. </p>  <p>Anyone a solution on how to change the style.</p>