<p>Having a problem with the <code>Timer</code> where it shows this error. I have a <code>Timer</code> that schedules a <code>TimerTask</code> (close). Then, inside the <code>TimerTask</code> I schedule the next <code>TimerTask</code> and so on. To my understanding this should work, but when I run it the app has the "Stopped Working" error.</p>  <p><code>levelCreationTimer.schedule(close, 1000);</code> &lt;= This is called in the OnCreate.</p>  <pre><code>Timer levelCreationTimer = new Timer(); TimerTask close = new TimerTask() {     @Override     public void run() {         if (points &lt; 10) {             switch (randNum.nextInt(2)) {                 case 0:                     locationBlimps[0][0] = 0;                     locationBlimps[0][1] = 0;                     locationBlimps[1][0] = -1;                     break;                 case 1:                     locationBlimps[0][0] = 4;                     locationBlimps[0][1] = 4;                     locationBlimps[1][0] = -1;                     break;             }         }         int i = 0;         while (locationBlimps[i][0] != -1) {             final int final_i = i;             runOnUiThread(new Runnable() {                 public void run() {                     sky[locationBlimps[final_i][1]][locationBlimps[final_i][0]].setBackgroundResource(R.drawable.scissors);                 }             });             i++;         }         levelCreationTimer.schedule(far, 1000);     } }; TimerTask far = new TimerTask() {     @Override     public void run() {         int j = 0;         while (locationBlimps[j][0] != -1) {             final int final_j = j;             runOnUiThread(new Runnable() {                 public void run() {                     sky[locationBlimps[final_j][1]][locationBlimps[final_j][0]].setBackgroundResource(R.drawable.scissors);                     obstacles[locationBlimps[final_j][1]][locationBlimps[final_j][0]] = true;                 }             });             j++;         }         levelCreationTimer.schedule(last, 1000);     } }; TimerTask last = new TimerTask() {     @Override     public void run() {         int k = 0;         while (locationBlimps[k][0] != -1) {             final int final_k = k;             runOnUiThread(new Runnable() {                 public void run() {                     sky[locationBlimps[final_k][1]][locationBlimps[final_k][0]].setBackgroundResource(R.drawable.sky);                     obstacles[locationBlimps[final_k][1]][locationBlimps[final_k][0]] = false;                 }             });             k++;         }         levelCreationTimer.schedule(close, 10000);     } }; </code></pre>  <p>I also tried adding</p>  <pre><code>        levelCreationTimer.cancel();         levelCreationTimer = new Timer(); </code></pre>  <p>before each <code>schedule</code> in-order to delete the schedule, but it did not solve the issue. </p>