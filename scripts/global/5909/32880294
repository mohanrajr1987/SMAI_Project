<p><strong>THIS IS SAMPLE CONSOLE APPLICATION NOT THE ORIGINAL WINDOWS SERVICE</strong></p>  <p>I have below code (sample code only). I want that my timer should execute only once and after that it should stop.</p>  <p>Currently I am using <code>count</code> field to check if the code is already hit or not. It is working fine but I want to optimize the things.</p>  <p><strong>NOTE :</strong> Reason behind using the timer is that during installation of windows service <code>OnStart</code> event shouldn't delay service installation process.</p>  <pre><code>using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks;  namespace ConsoleApplication1 {     static class Program     {         static int count = 0;          static void Main()         {             System.Timers.Timer timer = new System.Timers.Timer();             timer.Elapsed += OnElapseTime;             timer.Interval = TimeSpan.FromSeconds(5).TotalMilliseconds;             timer.Start();             System.Threading.Thread.Sleep(30000);             timer.Stop();         }          static void OnElapseTime(object sender,                                           System.Timers.ElapsedEventArgs e)         {             if (count &lt; 1)             {                 count++;                 Console.WriteLine("Timer ticked...");                 Console.ReadLine();             }          }     } } </code></pre>