<p>While trying to solve my problem with <code>hitTestObject</code> that only respond to collision with the object boundary and not with the object itself, I attempted to try using BitmapData.hitTest instead. So I downloaded a sample code from the internet and started playing with it to see if it would work for me. It did until the point that I embedded motion tween inside <code>blueClip</code>. In this scenario A ball is dropped on rectangle and creates a glow around it. My goal is to add other commands on the impact such as stop the motion and other, but as soon as I embedded the motion inside the ball, there is no glow and no motion stop. it works only if I have the motion on the top level on the timeline, (the glow anyway). I tried changing <code>blueClip</code> with <code>blueClip.Symbol2</code>where the motion resides but nothing worked with any combination of the two. any Idea?</p>  <pre><code> var blueClip: objct2 = new objct2();     addChild(blueClip);     blueClip.x = 196;     blueClip.y = 73;      var redRect: Rectangle = redClip.getBounds(this);     var redClipBmpData = new BitmapData(redRect.width, redRect.height, true, 1);     redClipBmpData.draw(redClip);  var blueRect: Rectangle = blueClip.Symbol2.getBounds(this); var blueClipBmpData = new BitmapData(blueRect.width, blueRect.height, true, 1); blueClipBmpData.draw(blueClip.Symbol2);  addEventListener(Event.ENTER_FRAME, enterFrame);  function enterFrame(e: Event): void {     //blueClip.x = mouseX;     //blueClip.y = mouseY;      if (redClipBmpData.hitTest(new Point(redClip.x, redClip.y),         255,         blueClipBmpData,         new Point(blueClip.Symbol2.x, blueClip.Symbol2.y),         255      )) {         trace("hit");         redClip.filters = [new GlowFilter()];         blueClip.Symbol2.stop();     } else {         redClip.filters = [];         //trace("miss");     } } </code></pre>