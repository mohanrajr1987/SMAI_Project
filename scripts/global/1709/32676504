<p>I want to catch the uncaught error in worker swf. I make a small example:</p>  <p><strong>Main.as:</strong></p>  <pre><code>package {     import flash.display.Sprite;     import flash.events.Event;     import flash.system.Worker;     import flash.system.WorkerDomain;      /**      * ...      * @author 彩月葵☆彡      */     public class Main extends Sprite      {         [Embed(source="/../libs/BackgroundWorker.swf", mimeType="application/octet-stream")]         private static const WORKER:Class;          private var bWorker:Worker;          public function Main()          {             if (stage) init();             else addEventListener(Event.ADDED_TO_STAGE, init);         }          private function init(e:Event = null):void          {             removeEventListener(Event.ADDED_TO_STAGE, init);             // entry point              bWorker = WorkerDomain.current.createWorker(new WORKER());             bWorker.start();         }     } } </code></pre>  <p><strong>BackgroundWorker.as:</strong></p>  <pre><code>package  {     import flash.display.Sprite;     import flash.events.UncaughtErrorEvent;      /**      * @mxmlc -debug -noplay -output libs/BackgroundWorker.swf      * @author 彩月葵☆彡      */     public class BackgroundWorker extends Sprite      {         public function BackgroundWorker()          {             loaderInfo.uncaughtErrorEvents.addEventListener(UncaughtErrorEvent.UNCAUGHT_ERROR, onUncaughtError);              throw new Error('an uncaught error');         }          private function onUncaughtError(e:UncaughtErrorEvent):void          {             trace(e.error.getStackTrace());         }     } } </code></pre>  <p>The handler won't dispatch. I wonder whether there is something wrong in my code or worker doesn't support UncaughtErrorEvent. If it doesn't, is there a walkaround?</p>