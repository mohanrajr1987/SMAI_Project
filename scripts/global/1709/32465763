<p>I'm trying to allow the user to set the Brightness, Contrast, Hue, and Saturation for the remote users Camera (this will just affect the local user that is adjusting the preferences) with a Slider. I don't see a class for this here: <a href="http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/flash/media/Camera.html#" rel="nofollow">http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/flash/media/Camera.html#</a> so I used the libraries below to set the element "remoteVideo" (the remote camera) to whatever the user desires for Brightness, Contrast, Hue, and Saturation. I'm getting a syntax error for                  color.brightness.remoteVideo(0, BrightnessSlider.value); (and for Contrast, Hue, and Saturation) that says (Multiple Markers at this Line. 1119: Access of Undefined property brightess through a reference with fl.motion.adjustcolor &amp; -  Access of undefined property remoteVideo, which is clearly defined since the RTMFP Video Chat works\compiles fine without the code below:</p>  <p>( Original Sourcecode without my changes below if it helps: <a href="https://github.com/MonaSolutions/MonaClients/blob/master/VideoPhone/src/VideoPhone.mxml" rel="nofollow">https://github.com/MonaSolutions/MonaClients/blob/master/VideoPhone/src/VideoPhone.mxml</a> )</p>  <p>// Libraries for Brightness Contrast Hue Saturation</p>  <pre><code>import flash.display.Sprite; import fl.motion.AdjustColor; import flash.filters.ColorMatrixFilter; import fl.events.SliderEvent;    import flash.external.ExternalInterface; </code></pre>  <p>// variables for Brightness Contrast Hue Saturation</p>  <pre><code>        private var color:AdjustColor = new AdjustColor(); //This object will hold the color properties         private var filter:ColorMatrixFilter; //Will store the modified color filter to change the video </code></pre>  <p>// <strong>FIXED</strong> functions</p>  <pre><code>        private function BrightnessLevel(e:Event = null):void         {             color.brightness = BrightnessSlider.value;             var mMatrix:Array = color.CalculateFinalFlatArray();             filter = new ColorMatrixFilter(mMatrix);             remoteVideo.filters = [filter];             status("Setting brightness to: " + BrightnessSlider.value + "\n");         }          private function ContrastLevel(e:Event = null):void         {              color.contrast = ContrastSlider.value;             var mMatrix:Array = color.CalculateFinalFlatArray();             filter = new ColorMatrixFilter(mMatrix);             remoteVideo.filters = [filter];             status("Setting contrast to: " + ContrastSlider.value + "\n");          }          private function HueLevel(e:Event = null):void         {               color.hue = HueSlider.value;             var mMatrix:Array = color.CalculateFinalFlatArray();             filter = new ColorMatrixFilter(mMatrix);             remoteVideo.filters = [filter];             status("Setting hue to: " + HueSlider.value + "\n");          }          private function SaturationLevel(e:Event = null):void         {               color.saturation = SaturationSlider.value;             var mMatrix:Array = color.CalculateFinalFlatArray();             filter = new ColorMatrixFilter(mMatrix);             remoteVideo.filters = [filter];             status("Setting saturation to: " + SaturationSlider.value + "\n");          } </code></pre>  <p>// sliders for Brightness Contrast Hue Saturation</p>  <pre><code>        &lt;s:NavigatorContent label="ADJUST COLORS" enabled="{currentState != LoginNotConnected}"&gt;             &lt;s:layout&gt;                 &lt;s:HorizontalLayout/&gt;             &lt;/s:layout&gt;              &lt;s:VGroup&gt;                 &lt;s:HGroup&gt;                     &lt;s:Panel width="247" height="67.5" backgroundColor="0xA0A0A0"                              title="Brightness"&gt;                         &lt;s:layout&gt;                             &lt;s:VerticalLayout paddingLeft="8"/&gt;                         &lt;/s:layout&gt;                         &lt;s:HSlider id="BrightnessSlider" width="220"                                    change="BrightnessLevel(event)" maximum="100" minimum="-100"                                    showDataTip="false" value="0"/&gt;                     &lt;/s:Panel&gt;                      &lt;s:Panel width="247" height="67.5" backgroundColor="0xA0A0A0"                              title="Contrast"&gt;                         &lt;s:layout&gt;                             &lt;s:VerticalLayout paddingLeft="8"/&gt;                         &lt;/s:layout&gt;                         &lt;s:HSlider id="ContrastSlider" width="220" change="ContrastLevel(event)"                                    maximum="100" minimum="-100" showDataTip="false" value="0"/&gt;                     &lt;/s:Panel&gt;                 &lt;/s:HGroup&gt;                  &lt;s:HGroup&gt;                      &lt;s:Panel width="247" height="67.5" backgroundColor="0xA0A0A0" title="Hue"&gt;                         &lt;s:layout&gt;                             &lt;s:VerticalLayout paddingLeft="8"/&gt;                         &lt;/s:layout&gt;                         &lt;s:HSlider id="HueSlider" width="220" change="HueLevel(event)"                                    maximum="180" minimum="-180" showDataTip="false" value="0"/&gt;                     &lt;/s:Panel&gt;                     &lt;s:Panel width="247" height="67.5" backgroundColor="0xA0A0A0"                              title="Saturation"&gt;                         &lt;s:layout&gt;                             &lt;s:VerticalLayout paddingLeft="8"/&gt;                         &lt;/s:layout&gt;                         &lt;s:HSlider id="SaturationSlider" width="220"                                    change="SaturationLevel(event)" maximum="100" minimum="-100"                                    showDataTip="false" value="0"/&gt;                     &lt;/s:Panel&gt;                 &lt;/s:HGroup&gt;             &lt;/s:VGroup&gt;             &lt;/s:NavigatorContent&gt; </code></pre>