<p>I tried to write a vector in c using memory operations.Compiler shows no errors but if I try to print an element from the vector it simply crashes. And whenever I try to print destination variable (printf(<em>(int</em>) destination)) the program crashes again.</p>  <pre><code>#include &lt;stdio.h&gt; #include &lt;stdlib.h&gt; #include &lt;string.h&gt; #include &lt;stdbool.h&gt;  typedef struct{     void* elemList;     int elemSize;     int maxSize;     int curSize; }myvector;  void initVec(myvector * vec, int typeSize){     vec-&gt;curSize = 0;     vec-&gt;maxSize = 10;     vec-&gt;elemSize =typeSize;     vec-&gt;elemList = malloc(10*sizeof(typeSize)); } void add(myvector * vec, void* elem){     if(vec-&gt;curSize &gt;= vec-&gt;maxSize){         vec-&gt;elemList = realloc(vec-&gt;elemList, vec-&gt;maxSize*2);     }      memcpy(&amp;vec-&gt;elemList[vec-&gt;curSize],elem,vec-&gt;elemSize); } void get(myvector * vec, int index, void* destination){     if(index &gt; vec-&gt;curSize || index &lt; 0){         printf("Invalid Index");         return;     }     destination = malloc(vec-&gt;elemSize);     memcpy(destination,&amp;vec-&gt;elemList[index], vec-&gt;elemSize); } int main() {     myvector newVec;     initVec(&amp;newVec,sizeof(int));     int a = 5;     add(&amp;newVec,&amp;a);     int* b;     get(&amp;newVec,0,b);     printf(*b);//this is where the program crashes     return 0; } </code></pre>