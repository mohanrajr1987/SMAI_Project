<p>I'm working on my first multilist and it has been nothing but a nightmare so far. Right now, I am allowing the user to place the x,y spots (class_number,student_number) in on their own. My node looks like this:</p>  <pre><code>    typedef struct node {         int student_number;         int class_number;         struct node* classpointer;         struct node* studentpointer;     }* nodePtr; </code></pre>  <p>Initialized with </p>  <pre><code>List::List() {     head = nullptr;     currClass = nullptr;     currStudent = nullptr; } </code></pre>  <p>To add in the data values and set up  pointers I have two functions.</p>  <pre><code>void List::addNodeToClass() {     nodePtr n = new node;     n-&gt;classpointer = NULL;      cout &lt;&lt; "What class number would you like to add?" &lt;&lt; endl;         int x;     cin &gt;&gt; x;     n-&gt;class_number = x;      if(head != NULL) {         currClass = head;         while (currClass-&gt;classpointer != NULL) {             currClass = currClass-&gt;classpointer;         }         currClass-&gt;classpointer = n;     }     else {         head = n;     } } </code></pre>  <p>And</p>  <pre><code>void List::addNodeToStudent() {     nodePtr n = new node;     n-&gt;studentpointer = NULL;      cout &lt;&lt; "What student number would you like to add?" &lt;&lt; endl;         int x;     cin &gt;&gt; x;     n-&gt;student_number = x;      if(head != NULL) {         currStudent = head;         while (currStudent-&gt;studentpointer != NULL) {             currStudent = currStudent-&gt;studentpointer;         }         currStudent-&gt;studentpointer = n;     }     else {         head = n;     } } </code></pre>  <p>I make function calls to both of these functions in my menu() function, and in main() I only call for menu()</p>  <pre><code>int menu() {     int input;     List List;     while (input != 3) {         cout &lt;&lt; " " &lt;&lt; endl;         cout &lt;&lt; "Press '1' to input a node" &lt;&lt; endl;         cout &lt;&lt; "Press '2' to view the list of nodes" &lt;&lt; endl;         cout &lt;&lt; "Press '3' to exit" &lt;&lt; endl;         cout &lt;&lt; " " &lt;&lt; endl;         cin &gt;&gt; input;         if (input == 1) {         List.addNodeToClass();         List.addNodeToStudent();         }         else if (input == 2) {         List.PrintList();         }         else if (input == 3) {             return 0;         }         else {         cout &lt;&lt;"That is an invalid key" &lt;&lt; endl;         }     } } </code></pre>  <p>When I run the program I am able to input the class node, then when I go to enter the student node, after hitting enter the program crashes. I know that there is a lot to look through, but I can't understand why it is. If someone would be able to tell me what I am doing wrong here I would greatly appreciate it. Thank you.</p>