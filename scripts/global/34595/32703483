<p>Let's say you only have the <em>artist</em> and <em>title</em> from a music file but you don't know the album name.</p>  <p>When you do a <a href="https://www.google.com/search?hl=en&amp;q=Golden%20Earring%20Radar%20Love%20Album" rel="nofollow">Google search in Chrome for i.e <code>Golden Earring Radar Love Album</code></a> you get:</p>  <p><a href="http://i.stack.imgur.com/1YD3L.png" rel="nofollow"><img src="http://i.stack.imgur.com/1YD3L.png" alt="enter image description here"></a></p>  <p>You see the album name (Moontan), release date (July 1973) and even the correct album cover. How is this page section called? Google Preview? Google Instant Page? I don't know</p>  <h3>My question is</h3>  <p>How do I programmatically get these information via PowerShell?</p>  <h3>What I have tried</h3>  <ol> <li><p><a href="https://technet.microsoft.com/en-us/library/hh849901.aspx" rel="nofollow">Invoke-Webrequest</a>: Not working, specific content not in response </p>  <pre><code>$Response = Invoke-WebRequest -URI "https://www.google.com/search?hl=en&amp;q=Golden+Earring+Radar+Love+Album" $Response.content | Set-Content D:\test.txt </code></pre></li> <li><p><a href="https://technet.microsoft.com/de-ch/library/ms535874.aspx" rel="nofollow">XmlHttpRequest</a>: Not working, specific content not in response </p>  <pre><code>$objXmlHttp = New-Object -ComObject MSXML2.ServerXMLHTTP $objXmlHttp.Open("GET", "https://www.google.com/search?hl=en&amp;q=Golden+Earring+Radar+Love+Album") $objXmlHttp.Send() $objXmlHttp.responseText | Set-Content D:\test.txt </code></pre></li> <li><p><a href="https://technet.microsoft.com/en-us/library/hh849971.aspx" rel="nofollow">Invoke-RestMethod</a>: Not working, retrieves only URLs and their snippets</p>  <pre><code>$Response = Invoke-RestMethod -Uri 'https://ajax.googleapis.com/ajax/services/search/web?v=1.0&amp;q=Golden%20Earring%20Radar%20Love%20Album' $Response.responseData.results </code></pre></li> <li><p>I looked for a <a href="https://developers.google.com/products/" rel="nofollow">Google Play or Google Music API</a> which can be used within PowerShell</p></li> </ol>  <p>I believe the problem is, that these information are loaded via Javascript which is not executed when using methods like <em>Invoke-WebRequest</em>. I could be wrong here.</p>  <p>I see two solutions: 1) Imitate a web browser within PowerShell and load the whole website into a form. Or 2) Use fiddler to see when and how these extra information are loaded. I would prefer the second solution but both are beyond my knowledge.</p>  <hr>  <h3>Background to avoid comments saying <em>There are other services like XYZ which better fit your needs</em></h3>  <p><sup> I already have working PowerShell scripts to get album name and additional info only by a given artist and track title for numerous services including <em>Amazon, Deezer, Discogs, EchoNest, iTunes, Last.fm, MusicBrainz, Napster, rdio and Spotify</em>. Because they all offer an easy to use API (except Amazon. Their implementation is pretty hard).</sup></p>  <p><sup> I ran some tests against ~3000 music files only given the artist and track title to retrieve the according album name. And when I compared the results with Google I noticed that none of the above services were so accurate as Google was.</sup></p>