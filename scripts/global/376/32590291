<p>We have an issue whereby when closing a shared control (within a child window) when a different tab, other than the first tab is selected, the contents of the tab are disabled are subsequently disabled when reloading the control. However, if you select a different tab and navigate back to the original tab, the contents are then enabled.</p>  <p><a href="http://i.stack.imgur.com/062jb.jpg" rel="nofollow"><img src="http://i.stack.imgur.com/062jb.jpg" alt="Disabled tab contents"></a></p>  <p>Does anybody have an insight to what is causing the original disabling effect &amp; a fix for this as I am struggling with this one?</p>  <p><strong>XAML</strong></p>  <pre><code> &lt;customTab:CustomTabControl x:Name="ctcNoteTabControl" Margin="10"&gt;      &lt;customTab:CustomTabItem Header="Details"&gt;         &lt;Border Background="White" CornerRadius="10"&gt;             ...         &lt;/Border&gt;     &lt;/customTab:CustomTabItem&gt;     &lt;customTab:CustomTabItem Header="Attachments / Email Alerts"&gt;         &lt;Border Background="White" CornerRadius="10"&gt;             ...         &lt;/Border&gt;     &lt;/customTab:CustomTabItem&gt;     &lt;customTab:CustomTabItem Header="Assets" x:Name="ctiAssets"&gt;         &lt;Border Background="{StaticResource CurveBlockBackground}" CornerRadius="10" Grid.Column="0" Grid.Row="3" Grid.ColumnSpan="2"&gt;             ...         &lt;/Border&gt;     &lt;/customTab:CustomTabItem&gt; &lt;/customTab:CustomTabControl&gt; </code></pre>  <p><strong>C# - Custom class inheriting from TabControl</strong></p>  <pre><code>using System; using System.Net; using System.Windows; using System.Windows.Controls; using System.Windows.Documents; using System.Windows.Ink; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Animation; using System.Windows.Shapes;  namespace ReACTSL.Control {     public class CustomTabControl : TabControl     {         protected override void OnKeyDown(KeyEventArgs e)         {             switch (e.Key)             {                 case Key.Home:                 case Key.End:                     e.Handled = true;                     break;                 default:                     break;             }              base.OnKeyDown(e);         }     } } </code></pre>  <p><strong>C# - Custom class inheriting from TabItem</strong></p>  <pre><code>using System; using System.Net; using System.Windows; using System.Windows.Controls; using System.Windows.Documents; using System.Windows.Ink; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Animation; using System.Windows.Shapes;  namespace ReACTSL.Control {     public class CustomTabItem : TabItem     {         protected override void OnKeyDown(KeyEventArgs e)         {             switch (e.Key)             {                 case Key.Home:                 case Key.End:                 case Key.Left:                 case Key.Right:                 case Key.Up:                 case Key.Down:                     e.Handled = true;                     break;                 default:                     break;             }              base.OnKeyDown(e);         }     } } </code></pre>