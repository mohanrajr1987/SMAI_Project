<p><strong>Goal</strong>: Have a silverlight control that can be temporarily hidden (container.style.display = 'none') and then "unhidden" (container.style.display = 'block') and still render correctly.</p>  <p><strong>Summary of the issue (Safari):</strong></p>  <ul> <li>There's a div - divContainer, whose content is an ASP.NET silverlight control. Its display style is 'block'.</li> <li>There's a button - btnToggle, which toggles divContainer's display style between block/none. </li> <li>When the page loads, the silverlight control renders as expected. </li> <li>When btnToggle is clicked, the silverlight control is hidden as you would expect. </li> <li>When btnToggle is clicked again, the silverlight control does NOT rerender. It just shows a black square.</li> <li>If you run my example below, you'll see that typeof (sl1.Content.myPage) is always undefined after hiding it once. So this seems to be the problem - I can't get the page to rerender! With FireFox I can avoid this by never truly "hiding" the silverlight control (as a workaround, I can reparent the control), but this doesn't work with Safari.</li> </ul>  <p><strong>Code</strong> </p>  <p>I've tried to create a minimal example by modifying a new Silverlight 5 project in Visual Studio 2012 named "StandaloneSilverlightTest".</p>  <p>On the page gets generated (MainPage.xaml), I just added a simple label.</p>  <p>On App.xaml.cs, I changed Application_Startup to:</p>  <p><div class="snippet" data-lang="js" data-hide="false"> <div class="snippet-code"> <pre class="snippet-code-js lang-js prettyprint-override"><code>MainPage page = new MainPage(); this.RootVisual = page; System.Windows.Browser.HtmlPage.RegisterScriptableObject("myPage", page);</code></pre> </div> </div> </p>  <p>I had to add a dummy property to MainPage.xaml.cs to get it to build:</p>  <p><div class="snippet" data-lang="js" data-hide="false"> <div class="snippet-code"> <pre class="snippet-code-js lang-js prettyprint-override"><code>[System.Windows.Browser.ScriptableMember()] public void Test() {}</code></pre> </div> </div> </p>  <p>On the "demo" page that hosts the control, I have:</p>  <p><div class="snippet" data-lang="js" data-hide="false"> <div class="snippet-code"> <pre class="snippet-code-js lang-js prettyprint-override"><code>function getContent(sl) {   var ret = 'content: ' + typeof(sl.Content);   if (ret != 'content: undefined')     ret += '\nmyPage: ' + typeof(sl.Content.myPage);    return '\n' + ret; }  // Does not work in Safari or FireFox. function toggleShowHide() {   var divContainer = document.getElementById('divContainer');   var sl1 = document.getElementById('&lt;%= sl1.ClientID %&gt;');   alert('before: ' + getContent(sl1));   divContainer.style.display = divContainer.style.display == 'block' ? 'none' : 'block';   alert('after: ' + getContent(sl1)); }  // This works in FireFox, not Safari. function reparentSL() {   var divContainer = document.getElementById('divContainer');   var sl1 = document.getElementById('&lt;%= sl1.ClientID %&gt;');   alert('before: ' + getContent(sl1));    var divReceiving = document.getElementById(divContainer.parentNode.id == 'div1' ? 'div2' : 'div1');   divReceiving.appendChild(divContainer);    alert('after: ' + getContent(sl1)); }</code></pre> <pre class="snippet-code-html lang-html prettyprint-override"><code>&lt;body&gt;   &lt;form id="form1" runat="server" style="height:100%"&gt;     &lt;asp:ScriptManager ID="ScriptManager1" runat="server"&gt;&lt;/asp:ScriptManager&gt;     &lt;div id="div1" style="border: solid 1px blue;"&gt;       &lt;div id="divContainer" style="display: block; left: 0px; position: relative;"&gt;         &lt;asp:Silverlight ID="sl1" runat="server" Source="ClientBin/StandaloneSilverlightTest.xap" MinimumVersion="2.0.31005.0" Width="200px" Height="200px" /&gt;       &lt;/div&gt;     &lt;/div&gt;     &lt;div id="div2" style="border: solid 1px red;"&gt;      &lt;/div&gt;      &lt;input type="button" id="btnToggle" value="Toggle Display" onclick="toggleShowHide()" /&gt;     &lt;input type="button" value="Move SL" onclick="reparentSL()" /&gt;   &lt;/form&gt; &lt;/body&gt;</code></pre> </div> </div> </p>  <p>How can I get around this?</p>