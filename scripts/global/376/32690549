<p>I have a <code>ComboBox</code> which is bound to a <code>DependencyProperty</code>  on my form. I can add items to this property through a <code>Button</code> click and it will add them to the <code>ComboBox</code>. However, as soon as I drop down the <code>ComboBox</code> the binding breaks. I can still add items to the property, but my <code>ComboBox</code> never updates to show them.</p>  <p>For example</p>  <ul> <li>Click the <code>Button</code> three times</li> <li>Drop the <code>ComboBox</code> down - It will have three items</li> <li>Click the <code>Button</code> another three times</li> <li>Drop the <code>ComboBox</code> down - It will still only have three items</li> </ul>  <p>Starting the application again and:</p>  <ul> <li>Click the <code>Button</code> six times</li> <li>Drop the <code>ComboBox</code> down - It will have six items</li> </ul>  <h2>XAML</h2>  <pre><code>&lt;Grid x:Name="LayoutRoot"       Background="White"&gt;     &lt;ComboBox Name="combTest"               ItemsSource="{Binding Users}"               Width="50"               Height="50"               HorizontalAlignment="Left" /&gt;     &lt;Button Click="ButtonBase_OnClick"             Width="50"             Height="50"             HorizontalAlignment="Right" /&gt; &lt;/Grid&gt; </code></pre>  <h2>Code Behind</h2>  <pre><code>public MainPage() {     InitializeComponent();     this.DataContext = this; }  public static readonly DependencyProperty UsersProperty = DependencyProperty.Register(  "Users", typeof (List&lt;string&gt;), typeof (MainPage), new PropertyMetadata(new List&lt;string&gt;()));  public List&lt;string&gt; Users {     get { return (List&lt;string&gt;) GetValue(UsersProperty); }     set { SetValue(UsersProperty, value); } }  private int i = 0;  private void ButtonBase_OnClick(object sender, RoutedEventArgs e) {    Users.Add("User " + i++); } </code></pre>