<p>There is a class, which has two methods. (Full source can be found <a href="https://github.com/dance2die/Project.MyAnimeList/blob/master/Project.MyAnimeList/Project.MyAnimeList/Facade/SearchMethods.cs" rel="nofollow">here</a>)</p>  <pre><code>public string SearchAnime(string searchTerm) {     // returns string }  public AnimeSearchResponse SearchAnimeDeserialized(string searchTerm) {     // returns an AnimeSearchResponse type object instance } </code></pre>  <p>I am trying to create Asynchronous versions of above two methods.  That would mean methods like <code>SearchAnimeAsync</code> and <code>SearchAnimeDeserializedAsync</code> need to be created.</p>  <p>There is a plan to add more <code>SearchAnime*</code> methods that return XML or JSON data.  As I add more <code>SearchAnime*</code> methods, the number of methods will increase two folds due to Async counterparts.  (SearchAnimeXml &amp; SearchAnimeXmlAsync and SearchAnimeJson &amp; SearchAnimeJsonAsync) </p>  <p>It gets worse because the class also contains <code>SearchManga</code> and <code>SearchMangaDeserialized</code>, for which I will create Async versions.</p>  <p>Are there any solutions or design patterns that'd ease the explosion of methods?</p>