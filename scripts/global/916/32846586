<p>How fonts are found on a system in java embedded 8 using X11 backend? Is the jre using fontconfig.properties file (like <a href="http://docs.oracle.com/javase/8/docs/technotes/guides/intl/fontconfig.html" rel="nofollow">http://docs.oracle.com/javase/8/docs/technotes/guides/intl/fontconfig.html</a>)? In this case what are the 'logical' fonts and how are they matched against the fonts installed in the system? Does the jre uses fontconfig if it's installed in the system? Basically I need to use logical fonts and change the mapping to the installed ttf fonts.</p>  <p>Update<br> running java app using strace shows jre is not reading any /opt/java8u33/jre/lib/fontconfig*.* as documentation states, instead it's reading /etc/fonts/fonts.conf and /etc/fonts/conf.d/*.conf files:</p>  <pre><code>[pid  1645] open("/opt/java8u33/jre/lib/arm/libfontmanager.so", O_RDONLY) = 27 [pid  1645] open("/opt/java8u33/jre/lib/arm/libfontmanager.so", O_RDONLY|O_CLOEXEC) = 27 [pid  1645] open("/opt/java8u33/jre/lib/fonts/fonts.dir", O_RDONLY|O_LARGEFILE) = 27 [pid  1645] open("/opt/java8u33/jre/lib/arm/libfontconfig.so.1", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory) [pid  1645] open("/opt/java8u33/jre/lib/arm/../libfontconfig.so.1", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory) [pid  1645] open("/opt/java8u33/jre/bin/../lib/arm/jli/libfontconfig.so.1", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory) [pid  1645] open("/opt/java8u33/jre/bin/../lib/arm/libfontconfig.so.1", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory) [pid  1645] open("/home/root/terminal/app/libs/arm/libfontconfig.so.1", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory) [pid  1645] open("/usr/lib/libfontconfig.so.1", O_RDONLY|O_CLOEXEC) = 27 [pid  1645] open("/etc/fonts/fonts.conf", O_RDONLY|O_LARGEFILE|O_CLOEXEC) = 27 [pid  1645] open("/etc/fonts/conf.d/10-scale-bitmap-fonts.conf", O_RDONLY|O_LARGEFILE|O_CLOEXEC) = 29 [pid  1645] open("/etc/fonts/conf.d/20-unhint-small-vera.conf", O_RDONLY|O_LARGEFILE|O_CLOEXEC) = 29 [pid  1645] open("/etc/fonts/conf.d/30-dejavu-aliases.conf", O_RDONLY|O_LARGEFILE|O_CLOEXEC) = 29 [pid  1645] open("/etc/fonts/conf.d/30-liberation-aliases.conf", O_RDONLY|O_LARGEFILE|O_CLOEXEC) = 29 [pid  1645] open("/etc/fonts/conf.d/30-metric-aliases.conf", O_RDONLY|O_LARGEFILE|O_CLOEXEC) = 29   </code></pre>  <p>After that creates the /home/root/.java/fonts/1.8.0_33/fcinfo-1-localhost-Linux-3.14.28-0508-005+-en.properties file with the mapping from physical fonts to installed fonts:  </p>  <pre><code>JDK Font Configuration Generated File: *Do Not Edit* Wed Sep 30 22:08:11 UTC 2015 monospaced.3.5.family=AR PL UMing CN serif.3.0.file=/usr/share/fonts/truetype/sazanami-mincho.ttf monospaced.0.6.family=AlbanyMT sansserif.1.0.family=AlbanyMT serif.3.1.family=AlbanyMT serif.2.5.file=/usr/share/fonts/truetype/uming.ttc sansserif.0.length=7 serif.0.2.family=Terafik serif.3.4.file=/usr/share/fonts/ttf/albany__5.ttf sansserif.2.3.family=Terafik monospaced.0.1.file=/usr/share/fonts/truetype/sazanami-mincho.ttf monospaced.2.2.family=AlbanyMT </code></pre>  <p>This file is not regenerated until system font cache is changed or timestamp is different, which happens when a new font is installed.</p>  <p>The missing piece is how to map logical fonts (Serif, SansSerif, Monospaced, Dialog, and DialogInput) to physical fonts (<a href="http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/8u40-b25/java/awt/Font.java#Font.%3Cinit%3E%28java.lang.String%2Cint%2Cint%29" rel="nofollow">http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/8u40-b25/java/awt/Font.java#Font.%3Cinit%3E%28java.lang.String%2Cint%2Cint%29</a>).</p>  <p>thanks</p>