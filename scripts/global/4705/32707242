<p>I have a subroutine <code>Map build(Map the_map)</code> being called to update my variable <code>new_map</code> and the map is being updated INSIDE THE SUBROUTINE but when it returns it returns the same map UN-UPDATED,  <br> note: <br> I tested with <code>cout</code> statements inside the method and also after the method is returned to the switch...</p>  <p>Here is a snippet of my code:  <br> 1 the struct details <br> 2 and the moment where the subroutine is being called <br> 3 and subroutine code <br> <br> Structs</p>  <pre><code>struct MapItem {         char type = 'E';     };  struct Map {     int size = 0;     MapItem *items; }; </code></pre>  <p>Subroutine called in switch (if user selects build option) build on map</p>  <pre><code>case BUILD:                 new_map = build(new_map);                 break; </code></pre>  <p>Subroutine</p>  <pre><code>Map build (Map the_map) {      char building_code;     int coordinate_x;     int coordinate_y;     int build_location;      cout &lt;&lt; "Enter x and y coordinate: ";     cin  &gt;&gt; coordinate_x;     cin  &gt;&gt; coordinate_y;      build_location = (coordinate_x+(coordinate_y*the_map.size));      cout &lt;&lt; "Enter a building code: ";     cin &gt;&gt; building_code;      the_map.items[build_location].type = building_code;      return the_map; } </code></pre>