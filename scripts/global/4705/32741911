<p>In the following snippet of code the int returns properly, but when I try doing the same thing with a double NetBeans 8.0.2 complains that "double Cannot be Dereferenced"</p>  <p>The non-commented out variables work. The commented out variables are double and do not work.</p>  <pre><code>@Override public String toString()  {     return "[" + getAccountNumber() + "], " +             super.toString() + ", " +             owner.toString()            // Error: "Double Cannot be Dereferenced" why?            //  + ", " + currentBalance.toString()           //  + ", " + interestRate.toString()             ; } </code></pre>  <p>When I rewrite it like this NetBeans doesn't give me an error, but is this effectively the same thing for a double?</p>  <pre><code>@Override public String toString()  {     return "[" + getAccountNumber() + "], " +             super.toString() + ", " +             owner.toString()            // Error: "Double Cannot be Dereferenced"            //  + ", " + currentBalance.toString()           //  + ", " + interestRate.toString()            // The following seems to work instead:              + ", " + Double.toString(currentBalance)             + ", " + Double.toString(interestRate)             ; } </code></pre>  <p>If so, great. No errors. If not, what can I do to make sure that the value of a double returns to the String just as an int would?</p>  <p><strong>UPDATE</strong>: From the answers I received, it looks like second approach I used works, but the following works just as well:</p>  <pre><code> @Override public String toString()  {     return "[" + getAccountNumber() + "], " +     super.toString() + ", " +     owner + ", " +     currentBalance + ", " +     interestRate; } </code></pre>