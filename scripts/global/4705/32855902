<p>I'm learning Javascript, and decided to try out a simple guessing game thing. The code I have at the moment: </p>  <p>The HTML:</p>  <pre><code>&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt;     &lt;title&gt;Guessing Game&lt;/title&gt;     &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;     &lt;meta charset="UTF-8"&gt;      &lt;link href='https://fonts.googleapis.com/css?family=Open+Sans:400italic' rel='stylesheet' type='text/css'&gt;     &lt;link href='https://fonts.googleapis.com/css?family=Roboto' rel='stylesheet' type='text/css'&gt;     &lt;link rel="stylesheet" type="text/css" href="guessing_game.css"&gt; &lt;/head&gt; &lt;body&gt; &lt;h1&gt;Welcome to the guessing game&lt;/h1&gt; &lt;p&gt;You have to guess the number within 5 attempts, so good luck!&lt;/p&gt;  &lt;p&gt;Enter a number:&lt;/p&gt; &lt;input type="text" id="number" placeholder="Enter number"&gt;&lt;/br&gt;  &lt;input type="submit" id="submit" value="Guess!"&gt;&lt;/br&gt; &lt;aside&gt;     &lt;div id="counter"&gt;      &lt;p&gt;Remaining Guesses&lt;/p&gt;     &lt;/div&gt;     &lt;p id="remaining"&gt;&lt;/p&gt;   &lt;/aside&gt; &lt;div id="result"&gt;&lt;/div&gt; &lt;script type="text/javascript" src="guessing_game.js"&gt;&lt;/script&gt; &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>The JS:</p>  <pre><code>var guesses = 5;  function guess() {     var elGuess = document.getElementById("remaining");     var elResult = document.getElementById("result"); /*  if(guesses === 0) {         elResult.innerHTML = "&lt;p&gt;Sorry, you ran out of guesses! Better          luck next time.&lt;/p&gt;";         return;     }*/      if(guesses &gt; 0) {          guesses--;         elGuess.textContent = guesses;          //random number         var secret = Math.floor(Math.random() * 10 + 1);          var elUserGuess = document.getElementById("number");         var userGuess = parseInt(elUserGuess.value);            if(userGuess == secret) {             elResult.textContent = "Congrats! You did it";         }          else {             elResult.textContent = "Sorry, please try again.";         }     }      else {         elResult.textContent = "Sorry, you ran out of guesses.";     }              }  var elSubmit = document.getElementById("submit"); elSubmit.addEventListener("click", guess, false); </code></pre>  <p>and the CSS:</p>  <pre><code>body {     font-family: 'Roboto', sans-serif; }  aside {     position: relative;     top: -150px;     width: 300px;     height: 600px;     float: right;     border-left: 2px solid gray; }  #counter p{     position: absolute;     top: 120px;     width: 140px;     left: 60px;     border-top: 2px solid brown;     text-align: center;     border-bottom: 2px solid brown;     padding: 5px; }  #remaining {     font-size: 220%;     text-align: center;     font-family: Arial, Verdana, serif;     position: absolute;     top: 170px;     border-bottom: 1px solid green;     padding: 2px;     left: 130px;     color: #ff2400;  }  #result {     font-family: 'Open Sans', sans-serif;     text-align: center;     font-size: 1.2em;     letter-spacing: 0.9em;     color: gray;  } </code></pre>  <p>What I was looking to do was - as soon as the number of guesses reach 0, the result should display that you're out of guesses. I've managed to validate the guesses counting down to 0 (not going to negative). I tried using an if statement which would check if the guesses were out, then set the result accordingly and <code>return</code>. But apparently, as soon as <code>return</code> is reached, the control exits the method. I didn't know this would happen even inside an if that's never reached.</p>  <p>Either way, how do I modify the code such that the result is set as soon as the guesses left hit zero? </p>