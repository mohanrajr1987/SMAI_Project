<pre><code>import subprocess as sp  plyr_x, plyr_y = (9,5) plyr_char = 'o'  def create_board():     ''' Creates a 10x10 grid of cells'''     board = []     for _ in range(10):         board.append(['-']*10)     board[plyr_x][plyr_y] = plyr_char     return board  def print_board(board):     '''Clears the screen prints or re-print all changes'''     tmp = sp.call('clear')     for row in board:         print ' '.join(row)  board = create_board() print_board(board)  while True:     '''Main loop'''     choice = raw_input('What do you want to do? ')     print_board(board)     if choice == 'move':         '''Moves the player. Empties the cell previously occupid,             adds/subtracts 1 from the player location,             and then reprints the board'''         direction = raw_input('Which way do you want to move? ')         if direction == 'up':             board[plyr_x][plyr_y] = ' '             plyr_x += -1             board[plyr_x][plyr_y] = 'o'             print_board(board)         elif direction == 'down':             board[plyr_x][plyr_y] = ' '             plyr_x += 1             board[plyr_x][plyr_y] = 'o'             print_board(board)         elif direction == 'right':             board[plyr_x][plyr_y] = ' '             plyr_y += 1             board[plyr_x][plyr_y] = 'o'             print_board(board)         elif direction == 'left':             board[plyr_x][plyr_y] = ' '             plyr_y += -1             board[plyr_x][plyr_y] = 'o'             print_board(board)     elif choice == 'attack':         print 'There is no one to attack right now.'     elif choice == 'die':         plyr_char = '%'         print_board(board)         quit() </code></pre>  <p>Everything works fine but I want to get rid of the global variables at the top, if that's possible, and write all of the movement code into it's own move() function so I can get rid of the huge if in the main loop. How could you do this?</p>