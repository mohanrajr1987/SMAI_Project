<p>I'm studying JavaScript, and the book I'm following suggests the easiest place to test code (for exercises and exploring the concepts) is on the browser console itself, so that's what I've been doing. </p>  <p>However, a professional friend of mine told me to instead make an html page, link it to a js file and put the code I want to test there, inside an immediately invoked function. This way I could load and reload the page on the browser to see the output on the console. </p>  <p>I was confused about why the same piece of simple code would run or output differently if typed directly on the console versus if loaded from a file. </p>  <p>Then I came across this piece of code (used to illustrate closure on loops) on my material :</p>  <pre><code>for (var i=1; i&lt;=5; i++) {     setTimeout(function timer(){          console.log(i);      }, i*1000 ); } </code></pre>  <p>The book says this code should output the number 6 five times, but when I typed it on the console (Google Chrome) the output was a <code>5</code>, then five <code>6</code>s (one per second). </p>  <p>Remembering what my friend said, I followed his suggestion and, indeed, <strong>the same code, when executed from a js file linked to an html, outputs differently</strong>, resulting in the number <code>6</code> five times. </p>  <p>Exactly why does this happen? Is it a difference on the engine? Does the compilation happen differently for some reason? </p>  <p>I have no idea what's at play here. My friend didn't have time or knowledge to explain, and the book never touches on this subject.</p>