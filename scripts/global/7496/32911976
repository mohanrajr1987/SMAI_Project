<p>I a noob with Google Charts. I have been playing with this for a while. I can't get the CategoryFilter to work properly.</p>  <p>I'm pulling in the correct column, but I can't seem to bind the data to the line chart.</p>  <p>Another problem is I'm not getting any console errors either. </p>  <p>The error is regarding the toggle feature not toggling properly.</p>  <pre><code>    &lt;!DOCTYPE html&gt; &lt;html&gt;  &lt;head&gt;     &lt;script type="text/javascript" src="https://www.google.com/jsapi"&gt;&lt;/script&gt; &lt;/head&gt;  &lt;body&gt;     &lt;div id="dashboard_div"&gt;         &lt;div id="colFilter_div"&gt;             &lt;!-- Toggle renders here --&gt;         &lt;/div&gt;         &lt;div id="line_div" style="height:15em"&gt;             &lt;!-- Line chart renders here --&gt;         &lt;/div&gt;         &lt;div id="control_div" style="height:5em"&gt;             &lt;!-- Controls renders here --&gt;         &lt;/div&gt;         &lt;div id="table_div"&gt;             &lt;!-- Table renders here --&gt;         &lt;/div&gt;     &lt;/div&gt;     &lt;/div&gt;     &lt;script type="text/javascript" src="https://www.google.com/jsapi"&gt;&lt;/script&gt;     &lt;script type="text/javascript"&gt;     google.load('visualization', '1', {         packages: ['controls']     });     google.setOnLoadCallback(createTable);      function createTable() {         // Create the dataset (DataTable)         var myData = new google.visualization.DataTable();         myData.addColumn('date', 'Date');         myData.addColumn('number', 'A’);         myData.addColumn('number', ‘B’);         myData.addColumn('number', ‘C’);         myData.addColumn('number', ‘D’);         myData.addColumn('number', ‘E’);         myData.addColumn('number', ‘F’);         myData.addColumn('number', ‘G’);         myData.addColumn('number', ‘H’);         myData.addColumn('number', ‘I’);         myData.addRows([             [new Date(2011, 8, 16), 0.00, 0.22, 0.87, 11.30, 0.43, 0.00, 0.00, 0.00, 0.00],             [new Date(2011, 9, 1), 1.09, 1.96, 1.96, 31.30, 1.96, 100, 0.00, 3.55, 0.00],             [new Date(2011, 9, 21), 0.00, 0.00, 0.00, 17.83, 0.22, 0.00, 0.00, 0.00, 0.00],             [new Date(2011, 10, 6), 0.00, 0.00, 0.22, 22.39, 0.00, 100, 0.00, 0.32, 0.00],             [new Date(2011, 10, 24), 1.74, 2.17, 1.30, 36.30, 3.91, 100, 0.00, 3.23, 0.00],             [new Date(2011, 11, 9), 2.61, 1.74, 0.87, 5.65, 3.26, 100, 0.00, 3.23, 0.00],             [new Date(2011, 11, 29), 0.22, 0.00, 0.43, 0.65, 0.22, 100, 0.00, 0.65, 0.00],                ]);           // Create a dashboard.         var dash_container = document.getElementById('dashboard_div'),             myDashboard = new google.visualization.Dashboard(dash_container);           //Create Toggle         var columnsTable = new google.visualization.DataTable();         columnsTable.addColumn('number', 'colIndex');         columnsTable.addColumn('string', 'colLabel');         var initState = {             selectedValues: []         };         // put the columns into this data table (skip column 0)         for (var i = 1; i &lt; myData.getNumberOfColumns(); i++) {             columnsTable.addRow([i, myData.getColumnLabel(i)]);             // you can comment out this next line if you want to have a default selection other than the whole list             initState.selectedValues.push(myData.getColumnLabel(i));         }         // you can set individual columns to be the default columns (instead of populating via the loop above) like this:         // initState.selectedValues.push(data.getColumnLabel(4));          var columnFilter = new google.visualization.ControlWrapper({             controlType: 'CategoryFilter',             containerId: 'colFilter_div',             dataTable: columnsTable,             options: {                 filterColumnLabel: 'colLabel',                 ui: {                     label: 'Columns',                     allowTyping: false,                     allowMultiple: true,                     allowNone: false,                     selectedValuesLayout: 'belowWrapping'                 }             },             state: initState         });          function setChartView() {             var state = columnFilter.getState();             var row;             var view = {                 columns: [0]             };             for (var i = 0; i &lt; state.selectedValues.length; i++) {                 row = columnsTable.getFilteredRows([{                     column: 1,                     value: state.selectedValues[i]                 }])[0];                 view.columns.push(columnsTable.getValue(row, 0));             }             // sort the indices into their original order             view.columns.sort(function(a, b) {                 return (a - b);             });           }         google.visualization.events.addListener(columnFilter, 'statechange', setChartView);          setChartView();         columnFilter.draw();              // Create a date range slider         var myDateSlider = new google.visualization.ControlWrapper({             'controlType': 'ChartRangeFilter',             'containerId': 'control_div',             'options': {                 'filterColumnLabel': 'Date'             }         });          // Table visualization         var myTable = new google.visualization.ChartWrapper({             'chartType': 'Table',             'containerId': 'table_div'         });          // Bind myTable to the dashboard, and to the controls         // this will make sure our table is update when our date changes         myDashboard.bind(myDateSlider, myTable);          // Line chart visualization         var myLine = new google.visualization.ChartWrapper({             'chartType': 'LineChart',             'containerId': 'line_div',          });          // Bind myLine to the dashboard, and to the controls         // this will make sure our line chart is update when our date changes         myDashboard.bind(myDateSlider, myLine);           myDashboard.draw(myData);     };     &lt;/script&gt; &lt;/body&gt;  &lt;/html&gt; </code></pre>