<p>I know ajax makes asynchronous calls but Im still unsure of why Im getting inconsistent results within my controller code. </p>  <p>My js and ajax take the current total on the page, the focus of a drop down and the new drop down and calculates a new total. With break points inside the controller function it works perfect, same goes for an alert inside the ajax success. Once I remove those there is no pattern to what is does. ANY break point inside the controller that is reached will have it work, no reached break point no idea. </p>  <pre><code> $("#BrandId").on('focus', function () {     previous1 = $("#BrandId").val()  }).change(function () {     previous = previous1     total = $("#ShockTotal").val()     sel = $("#BrandId").val()      var dataReq = { idp: previous, id: sel, total: total };     $.ajax({         cache: false,         type: "get",         url: '@Url.Action("GetBrandCost", "Shocks")',         data: dataReq,         aysnc: false,         success: function (data1) {                 //alert(data1);                $("#ShockTotal").val(data1);          }     }); </code></pre>  <p>.</p>  <pre><code>  public decimal GetBrandCost(string idp, string id, decimal total)     {         decimal costp = 0;         decimal cost = 0;         decimal totalCost = total;         if (idp != "")         {             ShockBrand brandp = db.ShockBrands.Find(idp);             costp = brandp.Cost;         }         if (id == "" || id == null)         {             return totalCost-costp;         }          ShockBrand brand = db.ShockBrands.Find(id);         cost = brand.Cost;          if (costp &gt; cost)         {             cost = cost - costp;         }else if (cost &gt; costp){             cost = cost - costp;         }         else         {             return totalCost;         }          return (totalCost +cost);     } </code></pre>