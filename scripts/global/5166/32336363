<p>I have successfully implemted the plugin, now I need functionality. There are no examples of mixed implementation, ie. delete all with selected checkbox, with csv/print. Just examples of single function implementation. Which is ok but I think there will be an application or 2 that need 2 to 3 of the plugin extentions to be a complete application.</p>  <p>my code, mvc 4 razor view:</p>  <pre><code>@{     ViewBag.Title = "Price Comparison"; }  &lt;html&gt; &lt;head&gt;     &lt;meta name="viewport" content="width=device-width, initial-scale=1" /&gt;     &lt;title&gt; Learning JQuery&lt;/title&gt;     &lt;!---CSS--&gt;     &lt;link href="~/Content/Site.css" rel="stylesheet" /&gt;     &lt;!---JQuery--&gt;     &lt;link href="~/Content/DataTables/css/dataTables.tableTools.css" rel="stylesheet" /&gt;      &lt;link href="~/Content/DataTables/css/dataTables.tableTools.min.css" rel="stylesheet" /&gt;     &lt;script src="~/Scripts/DataTables/dataTables.tableTools.js"&gt;&lt;/script&gt;     &lt;script src="~/Scripts/DataTables/dataTables.tableTools.min.js"&gt;&lt;/script&gt;     &lt;script type="text/javascript"&gt;         $(document).ready(function () {              $.ajax({                 url: 'PricingService.asmx/GetPricing',                 method: 'post',                 dataType: 'json',                 success: function (data) {                     var table = $('#example').dataTable({                         select: true,                         data: data,                         columns: [                             { 'data': 'Manufacturer' },                             { 'data': 'Product' },                             { 'data': 'SKU' },                             {                                 'data': 'BarcodePrice',                                 'render': function (barcodeprice) {                                     return "$" + barcodeprice;                                 }                             },                             {                                 'data': 'ScansourcePrice',                                 'render': function (scansourceprice) {                                     return "$" + scansourceprice;                                 }                             },                             {                                 'data': 'BluestarPrice',                                 'render': function (bluestarprice) {                                     return "$" + bluestarprice;                                 }                             },                          ]                      });                       var tableTools = new $.fn.dataTable.TableTools(table, {                         'sSwfPath': '//cdn.datatables.net/tabletools/2.2.0/swf/copy_csv_xls.swf',                         'aButtons': [{                             'sExtends': 'copy',                             'bShowAll': false                         },                         {                             'sExtends': 'print',                             'bShowAll': false                         },                         {                             'sExtends': 'csv',                             'bShowAll': false                         },                         {                             'sExtends': 'xls',                             'bShowAll': false                         },                         ]                     });                     $(tableTools.fnContainer()).insertBefore('#example_wrapper')                 }              });       });      &lt;/script&gt;  &lt;/head&gt; &lt;body&gt;     &lt;form id="frm-example" action="/nosuchpage" method="POST"&gt;         &lt;div style="border:1px solid black; padding:3px; width:1200px"&gt;             &lt;table id="example"&gt;                 &lt;thead&gt;                     &lt;tr&gt;                         &lt;th&gt;Manufacturer&lt;/th&gt;                         &lt;th&gt;Product&lt;/th&gt;                         &lt;th&gt;SKU&lt;/th&gt;                         &lt;th&gt;Our Price&lt;/th&gt;                         &lt;th&gt;Scansource Price&lt;/th&gt;                         &lt;th&gt;Bluestar Price&lt;/th&gt;                                             &lt;/tr&gt;                 &lt;/thead&gt;                 &lt;tfoot&gt;                     &lt;tr&gt;                         &lt;th&gt;Manufacturer&lt;/th&gt;                         &lt;th&gt;Product&lt;/th&gt;                         &lt;th&gt;SKU&lt;/th&gt;                         &lt;th&gt;Our Price&lt;/th&gt;                         &lt;th&gt;Scansource Price&lt;/th&gt;                         &lt;th&gt;Bluestar Price&lt;/th&gt;                      &lt;/tr&gt;                 &lt;/tfoot&gt;             &lt;/table&gt;             &lt;hr&gt;              &lt;p&gt;Press &lt;b&gt;Submit&lt;/b&gt; and check console for URL-encoded form data that would be submitted.&lt;/p&gt;              &lt;p&gt;&lt;button&gt;Submit&lt;/button&gt;&lt;/p&gt;              &lt;b&gt;Data submitted to the server:&lt;/b&gt;&lt;br&gt; &lt;pre id="example-console"&gt; &lt;/pre&gt;         &lt;/div&gt;     &lt;/form&gt; &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>1.I can not initialize ('#example') more than once, so how in the world can I combine the following into the ajax code in my view?</p>  <pre><code> // // Updates "Select all" control in a data table // function updateDataTableSelectAllCtrl(table){    var $table             = table.table().node();    var $chkbox_all        = $('tbody input[type="checkbox"]', $table);    var $chkbox_checked    = $('tbody input[type="checkbox"]:checked', $table);    var chkbox_select_all  = $('thead input[name="select_all"]', $table).get(0);     // If none of the checkboxes are checked    if($chkbox_checked.length === 0){       chkbox_select_all.checked = false;       if('indeterminate' in chkbox_select_all){          chkbox_select_all.indeterminate = false;       }     // If all of the checkboxes are checked    } else if ($chkbox_checked.length === $chkbox_all.length){       chkbox_select_all.checked = true;       if('indeterminate' in chkbox_select_all){          chkbox_select_all.indeterminate = false;       }     // If some of the checkboxes are checked    } else {       chkbox_select_all.checked = true;       if('indeterminate' in chkbox_select_all){          chkbox_select_all.indeterminate = true;       }    } }  $(document).ready(function (){    // Array holding selected row IDs    var rows_selected = [];    var table = $('#example').DataTable({       'ajax': {          'url': 'ids-arrays.txt'        },       'columnDefs': [{          'targets': 0,          'searchable':false,          'orderable':false,          'className': 'dt-body-center',          'render': function (data, type, full, meta){              return '&lt;input type="checkbox"&gt;';          }       }],       'order': [1, 'asc'],       'rowCallback': function(row, data, dataIndex){          // Get row ID          var rowId = data[0];           // If row ID is in the list of selected row IDs          if($.inArray(rowId, rows_selected) !== -1){             $(row).find('input[type="checkbox"]').prop('checked', true);             $(row).addClass('selected');          }       }    });     // Handle click on checkbox    $('#example tbody').on('click', 'input[type="checkbox"]', function(e){       var $row = $(this).closest('tr');        // Get row data       var data = table.row($row).data();        // Get row ID       var rowId = data[0];        // Determine whether row ID is in the list of selected row IDs        var index = $.inArray(rowId, rows_selected);        // If checkbox is checked and row ID is not in list of selected row IDs       if(this.checked &amp;&amp; index === -1){          rows_selected.push(rowId);        // Otherwise, if checkbox is not checked and row ID is in list of selected row IDs       } else if (!this.checked &amp;&amp; index !== -1){          rows_selected.splice(index, 1);       }        if(this.checked){          $row.addClass('selected');       } else {          $row.removeClass('selected');       }        // Update state of "Select all" control       updateDataTableSelectAllCtrl(table);        // Prevent click event from propagating to parent       e.stopPropagation();    });     // Handle click on table cells with checkboxes    $('#example').on('click', 'tbody td, thead th:first-child', function(e){       $(this).parent().find('input[type="checkbox"]').trigger('click');    });     // Handle click on "Select all" control    $('#example thead input[name="select_all"]').on('click', function(e){       if(this.checked){          $('#example tbody input[type="checkbox"]:not(:checked)').trigger('click');       } else {          $('#example tbody input[type="checkbox"]:checked').trigger('click');       }        // Prevent click event from propagating to parent       e.stopPropagation();    });     // Handle table draw event    table.on('draw', function(){       // Update state of "Select all" control       updateDataTableSelectAllCtrl(table);    });     // Handle form submission event     $('#frm-example').on('submit', function(e){       var form = this;        // Iterate over all selected checkboxes       $.each(rows_selected, function(index, rowId){          // Create a hidden element           $(form).append(              $('&lt;input&gt;')                 .attr('type', 'hidden')                 .attr('name', 'id[]')                 .val(rowId)          );       });        // FOR DEMONSTRATION ONLY             // Output form data to a console            $('#example-console').text($(form).serialize());       console.log("Form submission", $(form).serialize());        // Remove added elements       $('input[name="id\[\]"]', form).remove();        // Prevent actual form submission       e.preventDefault();    }); }); </code></pre>  <p>2.This successfully added the csv and other buttons along with the search and pagination. But the csv and copy still selects all the pages in the table instead of the one displayed.I followed the documentation and used the sExtends, but it still does not work. </p>  <p>Any help Please?</p>