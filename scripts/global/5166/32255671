<p>I have a dropdown that has a list of ID's in it. The customer will select one and it will reflect a price total on the page. Im creating an ajax call that will update the total when a different ID is pulled from the Dropdown. </p>  <pre><code>$("#BrandId").on('focus', function () {     // Store the current value on focus and on change     previous = this.value; }).change(function () {     alert("Previous: " +previous);     sel = this.value;     alert("Selected: " +sel);     $.ajax({         cache: false,         type: "get",         contentType: "application/json; charset=utf-8",         url: '@Url.Action("GetBrandCost", "Shocks")',         data: JSON.stringify({ idp: previous, id: sel }),         dataType: "json",         aysnc: false,         success: function (data1) {             alert(data1);                 //ShockTotal = $("#ShockTotal").html();                 //ShockTotal = ShockTotal / 1;                 ////ShockTotal = ShockTotal - data1;                 //$("#ShockTotal").html(data1);          }     }); }); </code></pre>  <p>The alerts are working perfectly but the ajax isnt passing those ID's into the controller, the controller is just receiving nulls.</p>  <pre><code> public decimal GetBrandCost(string idp, string id)     {         decimal costp = 0;         decimal cost = 0;         if (id == "" || id == null || idp == "" || idp == null)         {             return 0;         }         ShockBrand brandp = db.ShockBrands.Find(idp);         costp = brandp.Cost;         ShockBrand brand = db.ShockBrands.Find(id);         cost = brand.Cost;         cost = cost - costp;         return cost;     } </code></pre>  <p>Since they are null I am hitting my if statement and just returning zero inside the success. Most of the things I read were to add the content type but that didnt seem to help in my case, Im sure it is something little.</p>