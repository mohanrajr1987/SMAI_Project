<p>I am decoding a h264 video stream with the following code <a href="http://android.vladli.com/2015/06/05/mediacodec-virtual-display-and-streaming/" rel="nofollow">(original guide)</a>:</p>  <pre><code>public void configure(Surface surface, int width, int height, ByteBuffer csd0) {         String VIDEO_FORMAT = "video/avc";         if (mConfigured) {             throw new IllegalStateException("Decoder is already configured");         }         MediaFormat format = MediaFormat.createVideoFormat(VIDEO_FORMAT, width, height);         // little tricky here, csd-0 is required in order to configure the codec properly         // it is basically the first sample from encoder with flag: BUFFER_FLAG_CODEC_CONFIG         format.setByteBuffer("csd-0", csd0);         try {             mCodec = MediaCodec.createDecoderByType(VIDEO_FORMAT);         } catch (IOException e) {             throw new RuntimeException("Failed to create codec", e);         }         mCodec.configure(format, surface, null, 0);         mCodec.start();         mConfigured = true;     }      @SuppressWarnings("deprecation")     public void decodeSample(byte[] data, int offset, int size, long presentationTimeUs, int flags) {         if (mConfigured &amp;&amp; mRunning) {             int index = mCodec.dequeueInputBuffer(mTimeoutUs);             if (index &gt;= 0) {                 ByteBuffer buffer;                 // since API 21 we have new API to use                 if (Build.VERSION.SDK_INT &lt; Build.VERSION_CODES.LOLLIPOP) {                     buffer = mCodec.getInputBuffers()[index];                     buffer.clear();                 } else {                     buffer = mCodec.getInputBuffer(index);                 }                 if (buffer != null) {                     buffer.put(data, offset, size);                     mCodec.queueInputBuffer(index, 0, size, presentationTimeUs, flags);                 }             }         }     }      @Override     public void run() {         try {             MediaCodec.BufferInfo info = new MediaCodec.BufferInfo();             while (mRunning) {                 if (mConfigured) {                     int index = mCodec.dequeueOutputBuffer(info, mTimeoutUs);                     if (index &gt;= 0) {                         // setting true is telling system to render frame onto Surface                         mCodec.releaseOutputBuffer(index, true);                         if ((info.flags &amp; MediaCodec.BUFFER_FLAG_END_OF_STREAM) == MediaCodec.BUFFER_FLAG_END_OF_STREAM) {                             break;                         }                     }                 } else {                     // just waiting to be configured, then decode and render                     try {                         Thread.sleep(10);                     } catch (InterruptedException ignore) {                     }                 }             }         } finally {             if (mConfigured) {                 mCodec.stop();                 mCodec.release();             }         }     } </code></pre>  <p>I can run this on both my Nexus 6 (api 22) and Samsung galaxy core (api 16) on low and medium quality. However when I switch to high quality (720p) it crashes on the Samsung after about 30 frames (but nothing is rendered to the screen).</p>  <pre><code>E/ACodec﹕ [OMX.qcom.video.decoder.avc] ERROR(0x8000100a) E/MediaCodec﹕ Codec reported an error. (omx error 0x8000100a, internalError -2147483648) [...] W/System.err﹕ java.lang.IllegalStateException W/System.err﹕ at android.media.MediaCodec.dequeueInputBuffer(Native Method) W/System.err﹕ at com.test.stream.VideoDecoder$Worker.decodeSample(VideoDecoder.java:95) W/System.err﹕ at com.test.stream.VideoDecoder.decodeSample(VideoDecoder.java:24) W/System.err﹕ at com.test.stream.VideoThread.run(VideoThread.java:160) </code></pre>  <p>The error above is the first error that appears, the IllegalStateException is afterwards thrown on each frame.</p>  <p>My question is, is this a device specific problem (because of: older api/device, less powerful, etc.) or is something actually wrong? and how should I deal with this?</p>