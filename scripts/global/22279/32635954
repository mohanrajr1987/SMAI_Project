<p>I'm trying to use different layouts for video playback for portrait and for landscape but once I change the orientation of the device it takes the layout from the layout-land folder and set the values of the mediaplayer position from 'onSavedInstanceState()', but it starts the cache of the video again from the beginning and users are watching a black video screen on orientation change. How to avoid a black screen ?</p>  <p>My code for video playback : </p>  <pre><code>  public class VideoDetailActivity extends AppCompatActivity    {       private static final String TAG = "VideoDetailActivity";        @Override       public void onCreate(final Bundle savedInstanceState) {            super.onCreate(savedInstanceState);           setContentView(R.layout.activity_detailvideo);           context = this;           videoView = (VideoViewCustom) findViewById(R.id.videoplayer);           videoDurationTextView = (TextView)findViewById(R.id.textview_videoduration);            videoSeekBar = (SeekBar)findViewById(R.id.seekbar_video);           playPauseImageView = (ImageView)findViewById(R.id.imageview_playpause);           mediaPlayer = new MediaPlayer();           try {               mediaController = new MediaController(context);               mediaController.setAnchorView(videoView);               mediaController.setPadding(0,0,0,100);               videoView.setDimensions(1000, 200);               videoView.getHolder().setFixedSize(1000, 200);               videoView.setVideoPath(streamURL);               videoView.setMediaController(mediaController);         }         catch (Exception e) {               Log.e("Error", e.getMessage());               e.printStackTrace();         }          videoView.setOnPreparedListener(new MediaPlayer.OnPreparedListener() {             // Close the progress bar and play the video             public void onPrepared(MediaPlayer mp) {                 Log.d(TAG,"setOnPreparedListener");                 mediaPlayer = mp;                 int timeDuration = 0;                 boolean videoPlaying = false;                 if(savedInstanceState != null) {                     Log.d(TAG,"savedInstanceState != null");                     timeDuration = savedInstanceState.getInt("timeduration");                     videoPlaying = savedInstanceState.getBoolean("videoPlaying");                     Log.d(TAG, "timeDuration saved:" + timeDuration);                     Log.d(TAG, "videoPlaying saved:" + videoPlaying);                       if (videoPlaying) {                         mediaPlayer.seekTo(timeDuration);                         mediaPlayer.start();                     } else {                         mediaPlayer.seekTo(timeDuration);                     }                 }                 else                 {                     Log.d(TAG,"savedInstanceState == null");                     mediaPlayer.start();                 }                 videoView.start();                 //videoView.postDelayed(updateVideoDuration,250);                 finalTime = mediaPlayer.getDuration();                  Log.d(TAG, "mp.getCurrentPosition():" + mediaPlayer.getCurrentPosition());                 Date d = new Date(mediaPlayer.getCurrentPosition());                 SimpleDateFormat sdf = new SimpleDateFormat("HH:mm");                 String time = sdf.format(d).toString();                 Log.d(TAG, "time:" + time);                 videoSeekBar.setProgress(timeDuration);                 videoSeekBar.setMax(finalTime);                 durationHandler.postDelayed(updateSeekBarTime,1000);             }         });     Runnable updateSeekBarTime = new Runnable() {         public void run() {              //get current position             int timeElapsed = mediaPlayer.getCurrentPosition();             //set seekbar progress             videoSeekBar.setProgress((int) timeElapsed);             Log.d(TAG,"timeElapsed:"+timeElapsed);             //set time remaing             double timeRemaining = finalTime - timeElapsed;             //videoDurationTextView.setText(String.format("%2d:%2d ", TimeUnit.MILLISECONDS.toMinutes((long) timeRemaining), TimeUnit.MILLISECONDS.toSeconds((long) timeRemaining) - TimeUnit.MINUTES.toSeconds(TimeUnit.MILLISECONDS.toMinutes((long) timeRemaining))));             videoDurationTextView.setText(String.format("%2d:%2d ", TimeUnit.MILLISECONDS.toMinutes((long) timeElapsed), TimeUnit.MILLISECONDS.toSeconds((long) timeElapsed) - TimeUnit.MINUTES.toSeconds(TimeUnit.MILLISECONDS.toMinutes((long) timeElapsed))));             //repeat yourself that again in 100 miliseconds             durationHandler.postDelayed(this,1000);         }     };      @Override     public void onConfigurationChanged(Configuration newConfig)     {         super.onConfigurationChanged(newConfig);           if (newConfig.orientation == Configuration.ORIENTATION_LANDSCAPE) //To fullscreen         {              paramsNotFullscreen=(RelativeLayout.LayoutParams)videoView.getLayoutParams();             //RelativeLayout.LayoutParams params= paramsNotFullscreen;             RelativeLayout.LayoutParams params= paramsNotFullscreen;             params.setMargins(0, 0, 0, 0);             params.height= ViewGroup.LayoutParams.MATCH_PARENT;             params.width=ViewGroup.LayoutParams.MATCH_PARENT;             // params.addRule(RelativeLayout.CENTER_IN_PARENT);             videoView.setLayoutParams(params);             Log.d(TAG, "position:" + mediaPlayer.getCurrentPosition());             Toast.makeText(context,"onConfigurationChanged",Toast.LENGTH_SHORT).show();          }      /*else if (newConfig.orientation == Configuration.ORIENTATION_PORTRAIT)      {         // videoView.setLayoutParams(paramsNotFullscreen);      }*/     }      @Override     protected void onSaveInstanceState (Bundle outState) {         super.onSaveInstanceState(outState);         outState.putInt("timeduration", mediaPlayer.getCurrentPosition());         outState.putBoolean("videoPlaying",mediaPlayer.isPlaying());     } } </code></pre>  <p>I already have added a file in layout-land just because I'm facing the issue regarding streaming or buffering from the beginning. How to avoid this ? </p>