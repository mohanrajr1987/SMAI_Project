<p>I came across to a very weird thing.</p>  <p>In an <code>Oracle DB</code> I have three tables. <code>Tab1</code> and <code>Tab2</code> have same structure and indexes and around 20K rows. <code>Tab3</code> has around 15M rows and an <code>FK</code> to <code>Tab1</code>.</p>  <p>I have this query:</p>  <pre><code>SELECT t3.* FROM tab3 t3, tab1 t1 WHERE -- JOIN conditions and a few more </code></pre>  <p>Executed from my <code>.Net</code> app with both <code>Oracle.DataAccess.Client</code> and <code>System.Data.OleDb</code> it takes around <code>30 seconds</code>.</p>  <p>If I run the same query using <code>tab2</code> instead of <code>tab1</code>, <code>System.Data.OleDb</code> performs the same way, but <code>Oracle.DataAccess.Client</code> takes for about <code>1,5 minutes</code>.</p>  <ul> <li>Is there a reason for this?</li> <li>Is it a bug?</li> <li>Is there anything I can do to avoid without changing the DB's structure?</li> </ul>  <p><strong>Edit</strong></p>  <p>I've recently found the exact thing that makes the difference. One of the where clauses was with a date column.</p>  <p>For the parameters I was using: <code>DbType.DateTime</code> which created a parameter with <code>OracleDbType</code> and <code>OracleDbTypeEx</code> <code>TimeStamp</code>.</p>  <p>If I use <code>DbType.Date</code> instead, both <code>OracleDbType</code> and <code>OracleDbTypeEx</code> are <code>Date</code>. In this case, even using <code>Oracle.DataAccess.Client</code> provider, the performance is correct.</p>