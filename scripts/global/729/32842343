<p>Using Dapper to fetch the data, I have a procedure, which may return one out of multiple predefined types, based on the parameter supplied. Now at run time I need to know which <code>IEnumerable&lt;T&gt;</code> does it contain, tried using List and then typecasting but that's not working. To provide an example:</p>  <p>I have following pre-defined types, which can be returned from a SP:</p>  <p><code>AllSalesTerritory</code> , <code>MySalesPerson</code> , <code>PointOfSales</code></p>  <p>What I have tried till now is:</p>  <pre><code>var dynamicResult = _connection.Query&lt;dynamic&gt;(query).ToList(); </code></pre>  <p>Now when we try to typecast the dynamic list to any of the pre-defined type list mentioned above, nothing is working, as it seems internally Dynamic List contains contains a <code>DapperRow</code>, I am not sure how to utilize <code>DapperRow</code> to achieve the objective. I have tried all available C# operators <code>is</code>, <code>as</code>.</p>  <p>Any pointer, how to achieve it, since this is a business requirement, which I cannot work around</p>  <p>I tried a workaround using <code>SqlMapper.GridReader</code>, as follows, but its of little use in this case, as that would work, when I there are multiple result sets in a given order and I am not sure, whether a given Result set is available as part of query result:</p>  <pre><code>var multipleResultReader = _connection.QueryMultiple(query);  var result1 = !multipleResultReader.IsConsumed                 ? multipleResultReader.Read&lt;AllSalesTerritory&gt;() : null;  var result2 = !multipleResultReader.IsConsumed                 ? multipleResultReader.Read&lt;MySalesPerson&gt;() : null; </code></pre>  <p>Please let me know if your need any more information</p>