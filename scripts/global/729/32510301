<p>My EF Code First model for some reason is not in sync with the db. I'm getting this error: </p>  <pre><code>{"Invalid column name 'Type_Id1'."} </code></pre>  <p>The field is actually called 'Type_Id' so I'm not sure from where that 1 comes up.  I have the table column called as Type_Id and also I've added a Type_Id in my type entity model.</p>  <p>Do you guys have any idea why I'm getting that error message, plus why I'm getting 1 at the end of the name? </p>  <p>Thanks, Laziale</p>  <p>UPDATE:</p>  <p>My Task class: </p>  <pre><code>public class Task     {         public Task()         {             Language = 1;             Grades = new HashSet&lt;Grade&gt;();             Categories = new HashSet&lt;Category&gt;();             Subjects = new HashSet&lt;Subject&gt;();             Rooms = new Collection&lt;Room&gt;();             Tools = new Collection&lt;Tool&gt;();         }          [Key]         public int Id { get; set; }          public string Description { get; set; }          public virtual TaskType Type { get; set; }          public string Rules { get; set; }          [Required]         [StringLength(200), MinLength(1)]         public string Name { get; set; }          public int PreperationTime { get; set; }          public int InstructionTime { get; set; }          public int TaskTime { get; set; }          public int Type_Id { get; set; }          public string VideoLink { get; set; }          [Required]         public int Language { get; set; }          public int? MinimumParticipants { get; set; }          public int? MaximumParticipants { get; set; }          public int? Rating { get; set; }          [Required]         public string CreatedBy { get; set; }          public virtual ICollection&lt;Grade&gt; Grades { get; set; }          public virtual ICollection&lt;Category&gt; Categories { get; set; }          public virtual ICollection&lt;Subject&gt; Subjects { get; set; }          public virtual ICollection&lt;Room&gt; Rooms { get; set; }          public virtual ICollection&lt;Tool&gt; Tools { get; set; }     } </code></pre>  <p>DBContext class: </p>  <pre><code>public ApplicationDbContext() : base("DefaultConnection", false)         {         }          public DbSet&lt;Task&gt; Tasks { get; set; }         public DbSet&lt;TaskType&gt; TaskTypes { get; set; }           public static ApplicationDbContext Create()         {             return new ApplicationDbContext();         } </code></pre>