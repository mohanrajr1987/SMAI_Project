<p>I would like to create a method to convert a column of a datatable to a list having the same type as the column of the datatable without knowing the type in advance. Thus far I am only able to create a generic list. </p>  <p>I would prefer not to create a generic list but instead create a list with the same type as the datatable column and allow for nulls.</p>  <p>Ideally, this method would work with nulls or DBNull.Value in the datatable column.</p>  <pre><code>public static List&lt;dynamic&gt; ColumnToList(this DataTable dtWhole, string colToSlice) {     List&lt;dynamic&gt; retList = new List&lt;dynamic&gt;();     Type X = dtWhole.Columns[colToSlice].DataType;     for (int i = 0; i &lt; dtWhole.Rows.Count; i++)     {         if ((dtWhole.Rows[i][colToSlice] == DBNull.Value)              || (dtWhole.Rows[i][colToSlice] == null))         {             retList.Add(null);         }         else         {             retList.Add(Convert.ChangeType(dtWhole.Rows[i][colToSlice], X));         }      }        return retList; } </code></pre>