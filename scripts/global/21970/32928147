<p>I downloaded the bulkpress plugin and it is so convenient for me, but after I add the posts I still have to go one by one and add the video code so I can embed a video. I think I have to add some code in the ajax.php file, but I'm not entirely sure how to implement the code and I'm not familiar with some of the wordpress methods.</p>  <p>Here's the ajax.php file, and again I think this is where I would have to add code.</p>  <pre><code>&lt;?php </code></pre>  <p>/**  * @since 0.3  */ class JWBP_Ajax {</p>  <pre><code>/**  * Initialize  * Mainly used for registering action and filter hooks  *  * @since 0.3  */ public static function init() {     // Actions     add_action( 'wp_ajax_jwbp_ajax_get_posttype', array( 'JWBP_Ajax', 'get_posttype' ) );     add_action( 'wp_ajax_nopriv_jwbp_ajax_get_posttype', array( 'JWBP_Ajax', 'get_posttype' ) );     add_action( 'wp_ajax_jwbp_ajax_get_taxonomy', array( 'JWBP_Ajax', 'get_taxonomy' ) );     add_action( 'wp_ajax_nopriv_jwbp_ajax_get_taxonomy', array( 'JWBP_Ajax', 'get_taxonomy' ) ); }  /**  * Handle AJAX request for getting details for a taxonomy  *  * @since 0.3  */ public static function get_taxonomy() {     $result = array();      if ( !empty( $_POST['taxonomy'] ) ) {         $taxonomy = get_taxonomy( $_POST['taxonomy'] );          if ( $taxonomy ) {             if ( $taxonomy-&gt;hierarchical ) {                 $result['terms_select_html'] = wp_dropdown_categories( array(                      'show_option_none' =&gt; __( 'No parent', 'bulkpress' ),                     'orderby' =&gt; 'name',                     'order' =&gt; 'ASC',                     'hide_empty' =&gt; false,                     'taxonomy' =&gt; $taxonomy-&gt;name,                     'name' =&gt; 'jwbp-addterms-topparent',                     'id' =&gt; 'jwbp-addterms-topparent',                     'echo' =&gt; false,                     'hierarchical' =&gt; $taxonomy-&gt;hierarchical                  ) );             }             else {                 $result['terms_select_html'] = '&lt;div id="jwbp-addterms-topparent"&gt;&lt;/div&gt;';             }              // Add basic taxonomy details to the result             $result['taxonomy'] = ( object ) array(                  'name' =&gt; $taxonomy-&gt;name,                 'hierarchical' =&gt; $taxonomy-&gt;hierarchical              );         }         else {             $result = array( 'error' =&gt; 'unknown_taxonomy' );         }     }     else {         $result = array( 'error' =&gt; 'missing_parameters' );     }      echo json_encode( $result );      exit; }  /**  * Handle AJAX request for getting details for a post type  *  * @since 0.3  */ public static function get_posttype() {     $result = array();      if ( !empty( $_POST['posttype'] ) ) {         $posttype = get_post_type_object( $_POST['posttype'] );          $result['posts_select_html'] = '';          if ( is_object( $posttype ) &amp;&amp; $posttype-&gt;name ) {             if ( $posttype-&gt;hierarchical ) {                 $result['posts_select_html'] = wp_dropdown_pages( array(                      'show_option_none' =&gt; __( 'No parent', 'bulkpress' ),                     'post_type' =&gt; $posttype-&gt;name,                     'name' =&gt; 'jwbp-addposts-topparent',                     'id' =&gt; 'jwbp-addposts-topparent',                     'selected' =&gt; !empty( $_POST['jwbp-addposts-topparent'] ) ? $_POST['jwbp-addposts-topparent'] : '',                     'echo' =&gt; false,                     'post_status' =&gt; array( 'publish', 'draft' )                  ) );             }             else {                 $result['posts_select_html'] = '&lt;div id="jwbp-addposts-topparent"&gt;&lt;/div&gt;';             }              // Add basic post type details to the result             $result['posttype'] = (object) array(                  'name' =&gt; $posttype-&gt;name,                 'hierarchical' =&gt; $posttype-&gt;hierarchical              );         }         else {             $result = array( 'error' =&gt; 'unknown_posttype' );         }     }     else {         $result = array( 'error' =&gt; 'missing_parameters' );     }      echo json_encode( $result );      exit; } </code></pre>  <p>}</p>  <p>JWBP_Ajax::init(); ?></p>