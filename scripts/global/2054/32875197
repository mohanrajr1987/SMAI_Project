<p>I am writing a program to get the integer square root of a number. My Code:</p>  <pre><code>import java.util.Scanner; public class IntRoot{     public static void main(String[] args){     int num;     System.out.print("Enter a non-negative integer: ");     Scanner sc = new Scanner(System.in);     num = sc.nextInt();     int i;     int y=1;     for (i=1; num&gt;=i+(i+2); i +=2){         ++y;     }     System.out.print(y);     } } </code></pre>  <p>The program should add odd positive integers one at a time (1+3+5+7+...) until the next sum is less than or equal to num, then count the number of odd numbers used to give the integer square root (and print that number).</p>  <p>eg. integer square root of 12 would be 3, since 1+3+5 = 9, and there are 3 odd numbers in the sum</p>  <p>Currently my program doesn't print the correct number. "i" should start at 1 and increase by 2 each time. This for loop would repeat until the next sum of "i"'s would be greater than "num", and "y" would grow by 1 each time to give the number of times "i" has grown. So if input is 7, "i" should stop when y=2, similarly, if input is 4, i should stop when y=2, and if input is 49, i should stop when y=7.</p>  <p>Is there something wrong with my code? or my logic?</p>