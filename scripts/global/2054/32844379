<p>I like to learn efficient ways of creating lists in Python. I found myself in need of a list of lists of integers that looks like this:</p>  <pre><code>[[5904],  [5904, 5905],  [5904, 5905, 5906],  [5904, 5905, 5906, 5907],  [5904, 5905, 5906, 5907, 5908],  [5904, 5905, 5906, 5907, 5908, 5909]] </code></pre>  <p>I am neither an expert programmer or theoretical mathematician so I mashed together the following function in Python to produce that list of lists: </p>  <pre><code>def running_list_of_incremented_integer_lists(start, end):     single_integer_list = new_list = [start]     integer_lists = [single_integer_list]     for integer in range(start, end + 1):         new_list = copy(new_list)         for _integer in range(integer, integer + 1):             new_list.append(_integer + 1)         integer_lists.append(new_list)      return integer_lists </code></pre>  <p>So my questions are these: </p>  <ul> <li>Is there a more efficient and/or Pythonic way to write this bit of code?</li> <li>Are there any modules in Python that would help in writing this code?</li> <li>Is there a technical name for this type of list?</li> </ul>  <p>I perused <a href="https://docs.python.org/3.4/library/itertools.html" rel="nofollow">itertools documentation</a> in hopes that I could put something there to use.</p>  <p>Thank you for helping me learn.</p>