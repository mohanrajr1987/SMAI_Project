<p>I have a div that holds a list that I want to load with Objects, This view also has another list that loads before hand and you would pick one and based on you choice this list below will load. </p>  <pre><code>&lt;div id="vehicles-sidebar"&gt;                 &lt;h1&gt;Vehicles Registered:&lt;/h1&gt;                 &lt;ul&gt;                     &lt;c:forEach var="vehicle" items="${offendervehicles}"&gt;                         &lt;li&gt;&lt;span&gt;${vehicle.plate}&lt;/span&gt;                         &lt;span style="margin:10px;"&gt;&lt;c:out value="${vehicle.state}"/&gt;&lt;/span&gt;                         &lt;span style="margin:10px;"&gt;&lt;c:out value="${vehicle.color}"/&gt;&lt;/span&gt;                         &lt;span style="margin:10px;"&gt;&lt;c:out value="${vehicle.make}"/&gt;&lt;/span&gt;                         &lt;span style="margin:10px;"&gt;&lt;c:out value="${vehicle.model}"/&gt;&lt;/span&gt;                         &lt;span style="margin:10px;"&gt;&lt;c:out value="${vehicle.year}"/&gt;&lt;/span&gt;&lt;/li&gt;                     &lt;/c:forEach&gt;                 &lt;/ul&gt;             &lt;/div&gt; </code></pre>  <p>Here are the methods to load the list before and the list shown above.</p>  <pre><code>@RequestMapping(value = "/explorer", method = RequestMethod.POST)     public ModelAndView handleIntelSearchSumbit(@RequestParam("intelvalue") String valueOne) {         ApplicationContext context = new ClassPathXmlApplicationContext("Spring-Module.xml");         OffenderDAO offenderDAO = (OffenderDAO) context.getBean("offenderDAO");         Offender[] offenders = null;         try {             offenders = offenderDAO.requestOffenders(valueOne);         } catch (Exception e) {             // TODO Auto-generated catch block             e.printStackTrace();         }         ((ConfigurableApplicationContext)context).close();         ModelAndView model = new ModelAndView("explorer");         model.addObject("offenderlists", offenders);          return model;     }      @RequestMapping(value = "/select", method = RequestMethod.POST)     public ModelAndView goToView(@RequestParam("offenderid") String text) {         String offenderID = text.trim();         System.out.println("requested more info for: " + offenderID);         Offender offender = null;         ApplicationContext context = new ClassPathXmlApplicationContext("Spring-Module.xml");         OffenderDAO offenderDAO = (OffenderDAO) context.getBean("offenderDAO");         try {             offender = offenderDAO.findOffenderById(offenderID);         } catch (Exception e) {             e.printStackTrace();         }         ((ConfigurableApplicationContext)context).close();         ModelAndView model = new ModelAndView("explorer");         model.addObject("offendervehicles", offender.getCurrentVehicles());         if (offender.getCurrentVehicles() != null)             for (Vehicle v : offender.getCurrentVehicles()) {                 System.out.println("Vehicle: " + v.getPlate());             }         return model;     } </code></pre>  <p>The issue is that the method handleIntelSearch works completely fine and the page updates. Then after you choose an option from that is the next method will fire and the print function runs and vehicle plates are listed in system.out but the model/page doesn't load the new results from the goToView method. </p>