<p>I would like to create own class that will transform HTTP request and initializes object from this HTTP request in my Spring MVC application. I can create object by defining parameters in method but I need to do mapping in my own way and do it manually.</p>  <p>How can I do it with my own implementation that will pass to Spring and it will use it seamlessly?</p>  <p><strong>Update1</strong></p>  <p>Solution that kindly provided <code>Bohuslav Burghardt</code> doesn't work:</p>  <blockquote>   <p>HTTP Status 500 - Request processing failed; nested exception is   java.lang.IllegalStateException: An Errors/BindingResult argument is   expected to be declared immediately after the model attribute, the   @RequestBody or the @RequestPart arguments to which they apply: public   java.lang.String   cz.deriva.derivis.api.oauth2.provider.controllers.OAuthController.authorize(api.oauth2.provider.domain.AuthorizationRequest,org.springframework.ui.Model,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)</p> </blockquote>  <p>Maybe I should mention that I use own validator:</p>  <pre><code>public class RequestValidator {      public boolean supports(Class clazz) {         return AuthorizationRequest.class.equals(clazz);     }      public void validate(Object obj, Errors e) {         AuthorizationRequest request = (AuthorizationRequest) obj;         if ("foobar".equals(request.getClientId())) {             e.reject("clientId", "nomatch");         }     }  } </code></pre>  <p>and declaration of my method in controller (please not there is needed a validation - <code>@Valid</code>):</p>  <pre><code>@RequestMapping(value = "/authorize", method = {RequestMethod.GET, RequestMethod.POST})     public String authorize(             @Valid AuthorizationRequest authorizationRequest,             BindingResult result     ) {  } </code></pre>  <p>I have two configurations classes in my application.</p>  <pre><code>@Configuration @EnableAutoConfiguration @EnableWebMvc @PropertySource("classpath:/jdbc.properties") public class ApplicationConfig { } </code></pre>  <p>and</p>  <pre><code>@Configuration @EnableWebMvc public class WebappConfig extends WebMvcConfigurerAdapter {      @Override     public void addArgumentResolvers(List&lt;HandlerMethodArgumentResolver&gt; argumentResolvers) {         argumentResolvers.add(new AuthorizationRequestArgumentResolver());     }  } </code></pre>  <p><strong>What is wrong?</strong></p>  <p><strong>Update 2</strong></p>  <p>The problem is with param <code>BindingResult result</code>, when I remove it it works. But I need the result to process it when some errors occur. </p>