<p>I'm developing a REST API with Spring, and would like an API to handle POST requests with different media types, namely JSON form data in request body, or a JSON file sent through the request.</p>  <p>So when I have two separate methods with such signatures both work fine, </p>  <pre><code>@RequestMapping(value = "/configuration" , method = RequestMethod.POST, consumes = {MediaType.MULTIPART_FORM_DATA_VALUE}) public String setConfiguration(@RequestPart MultipartFile file) </code></pre>    <pre><code>@RequestMapping(value = "/configuration" , method = RequestMethod.POST, consumes = {MediaType.APPLICATION_JSON_VALUE} public String setConfiguration(@RequestBody Configuration configuration) </code></pre>  <p>The handling logic of both methods are almost the same, so I'm trying to use one method to absorb both kinds of data format with this code:</p>  <pre><code>@RequestMapping(value = "/configuration" , method = RequestMethod.POST, consumes = {MediaType.APPLICATION_JSON_VALUE, MediaType.MULTIPART_FORM_DATA_VALUE}) public String setConfiguration(@RequestPart MultipartFile file, @RequestBody Configuration configuration) </code></pre>  <p>However an error response will be returned as,</p>  <pre><code>{"timestamp": 1443744180124,   "status": 500,   "error": "Internal Server Error",   "exception": "org.springframework.web.multipart.MultipartException",   "message": "The current request is not a multipart request",   "path": "/v1/testconfiguration" } </code></pre>  <p>Wondering if I have some fundamental misunderstanding of media type of REST and if this is doable how can I achieve it with Spring?</p>