<p>I'm using Spring HATEOAS library for creating RESTful service and springfox Swagger for documenting it. This method:</p>  <pre><code>@RequestMapping(method = RequestMethod.GET) @Transactional @ApiOperation(value = "Get record list") public Resources&lt;RecordResource&gt; getAll() {     List&lt;ProductRecord&gt; records = service.getAll();     return assembler.toResources(records); } </code></pre>  <p>(class Resources are from Spring HATEOAS library) was documented by springfox Swagger as:</p>  <pre><code>Resources«RecordResource» {     content (Collection«RecordResource», optional),     links (Array[Link], optional) }  Collection«RecordResource» {  } </code></pre>  <p>There is no definition for custom DTO RecordResource. Further I created rule below in SwaggerConfig:</p>  <pre><code>        @Bean         public Docket customImplementation() {             AlternateTypeRule collectionOfRecordsToList                     = newRule(                     typeResolver.resolve(Collection.class, RecordResource.class),                     typeResolver.resolve(List.class, RecordResource.class));              return new Docket(DocumentationType.SWAGGER_2)                     .select()                     .build()                     .alternateTypeRules(collectionOfRecordsToList)                     .apiInfo(apiInfo());         } </code></pre>  <p>and get correct definition for RecordResoucre:</p>  <pre><code>Resources«RecordResource» {     content (Array[RecordResource], optional),     links (Array[Link], optional) }  RecordResource {     PK (object, optional),     attrInstList (Array[AttrInstResource], optional) } </code></pre>  <p>But how I can override type of "content" field of Resources class in Swagger so that this change was applied only for Resources DTO, but not for other classes that contains Collection of RecordResource? Solution above likely doesn't create any problems in application, but I think that must be solution for concrete Class.</p>