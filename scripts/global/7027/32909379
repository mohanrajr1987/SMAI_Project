<p>I am doing the following ajax request using jquery:</p>  <pre><code>var obj = {         'id': id,         'client' : client,         'amount' : amount,         'addressFrom' : addressFrom,         'addressTo' : addressTo,         'date': date     };      $.ajax({         headers: {             'Accept': 'application/json',             'Content-Type': 'application/json'         },         url: "/saveOrUpdateOrder",         type: 'post',         data: JSON.stringify(obj),         success : function(data, status) {             refreshPage(data);         },     }); </code></pre>  <p>I have the following method in my controller:</p>  <pre><code>@RequestMapping(value = "/saveOrUpdateOrder", method = {RequestMethod.POST})     public String saveOrUpdateOrder(Model model, @RequestBody Order order) {         log.info("/jquery order controller -&gt; saveOrUpdateOrder");         // some other actions } </code></pre>  <p>Here are classes Order an Client:</p>  <pre><code>public class Order {     private Long id;     private Date date;     private Client client;     private Integer amount;     private String addressFrom;     private String addressTo;      public Order() {         date = Calendar.getInstance().getTime();         amount = 0;     }      // setters and getters }  public class Client {      private Long id;     private String name;     private String familyName;     private String phone;     private String address;     private Integer amount;     private Date lastOrder;      public Client() {         amount = 0;     }      // setters and getters } </code></pre>  <p>I also have my own ClientEditor because I'm sendind 'id' as a 'client' in the object 'obj' in ajax request:</p>  <pre><code>@Component("clientEditor") public class ClientEditor extends PropertyEditorSupport {     @Autowired(required = true)     private ClientService clientService;      public ClientEditor() {     }      @Override     public void setAsText(String text) {         Client client = clientService.getClientById(Long.valueOf(text));         setValue(client);     }  } </code></pre>  <p>And in my controller I have this:</p>  <pre><code>@Autowired(required = true)     private ClientEditor clientEditor;      @InitBinder         public void initBinder(WebDataBinder binder) {             binder.registerCustomEditor(Client.class, clientEditor);             SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy hh:mm");             sdf.setLenient(true);             binder.registerCustomEditor(Date.class, new CustomDateEditor(sdf, true));             binder.registerCustomEditor(String.class, new StringTrimmerEditor(true));         } </code></pre>  <p>When I did the same without ajax, only using form with action = "/saveOrUpdateOrder" it worked fine. But when I'm trying to send json using ajax I always have 400 bad request as a result. I guess the problem is in getting an Order from JSON data. I tried to swich off ClientEditor and send an object like this</p>  <pre><code>var client = {         'id': clientId     }      var obj = {         'id': id,         'client' : client,         'amount' : amount,         'addressFrom' : addressFrom,         'addressTo' : addressTo,         'date': date     }; </code></pre>  <p>But it didn't work either. And I tried client variable with full parameters too. What's the problem? How to do it right?</p>