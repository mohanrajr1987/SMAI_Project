<p>Iâ€™m developing a DB application via MS Access 2010. I have added an unbound, binary checkbox to a <strong>report</strong> with the purpose that a user can choose one of two record sources (queries), for two variations of the report. The checkbox <code>Control Source</code> property is blank and the <code>Triple State</code> is set to <code>No</code>.</p>  <p>However, upon opening the report,  the checkbox is permanently greyed out, no matter haw many times it is clicked! Also, upon each <em>single</em> click on the checkbox, <code>my_checkbox_Click()</code> fires <em>twice</em> with its value toggling between <code>Null</code> and <code>True</code>! The Null value seems to be interpreted as <code>False</code> which might be OK if the event didn't double-fire on each single click.</p>  <p>How do I get my checkbox to both <em>appear</em> properly -- as a <em>binary</em> checkbox, toggling between yes and no -- and <em>function</em> correctly, firing <code>_Click()</code> only <em>once</em> per click? If it's a known issue with no solution, which is the best button type as a workaround?</p>  <p>My code:</p>  <pre><code>Private Sub Report_Load()     Debug.Print vbCrLf &amp; "Report_Load"     Me.my_chk.Value = False     set_data_source End Sub  Private Sub my_chk_Click()     Debug.Print vbCrLf &amp; "my_chk_Click"     set_data_source End Sub  Private Sub set_data_source()     Debug.Print vbCrLf &amp; "set_data_source"     Debug.Print "Me.my_chk.Value", Me.my_chk.Value     Debug.Print "Me.my_chk.ControlSource ", Me.my_chk.ControlSource     Debug.Print "Me.my_chk.TripleState ", Me.my_chk.TripleState     Me.RecordSource = IIf(Me.my_chk.Value, "my_yes_qry", "my_no_qry")     Me.Requery     Debug.Print "Me.RecordSource", Me.RecordSource End Sub </code></pre>  <p>Immediate window:</p>  <pre><code>Report_Load  set_data_source Me.my_chk.Value         False Me.my_chk.ControlSource          Me.my_chk.TripleState           False Me.RecordSource             my_no_qry  ' click once on checkbox  my_chk_Click  set_data_source Me.my_chk.Value         Null Me.my_chk.ControlSource          Me.my_chk.TripleState           False Me.RecordSource             my_no_qry  my_chk_Click  set_data_source Me.my_chk.Value         -1  Me.my_chk.ControlSource          Me.my_chk.TripleState           False Me.RecordSource             my_yes_qry  ' click once on checkbox  my_chk_Click  set_data_source Me.my_chk.Value         Null Me.my_chk.ControlSource          Me.my_chk.TripleState           False Me.RecordSource             my_no_qry  my_chk_Click  set_data_source Me.my_chk.Value         -1  Me.my_chk.ControlSource          Me.my_chk.TripleState           False Me.RecordSource             my_yes_qry </code></pre>  <p>The only good news is that the <code>Requery</code> after a <code>RecordSource</code> changes does correctly (if all-too-briefly) affect the data.</p>  <p>Another thing, even though my checkbox doesn't have an <code>AfterUpdate</code> listed under <code>Events</code>, if I replace the above <code>my_checkbox_Click()</code> handler with </p>  <pre><code>Private Sub my_chk_AfterUpdate()     Debug.Print vbCrLf &amp; "my_chk_AfterUpdate"     set_data_source End Sub </code></pre>  <p>I get</p>  <pre><code>Report_Load  set_data_source Me.my_chk.Value   False Me.my_chk.ControlSource          Me.my_chk.TripleState           False Me.RecordSource             my_no_qry  ' click once on checkbox  my_chk_AfterUpdate  set_data_source Me.my_chk.Value   -1  Me.my_chk.ControlSource          Me.my_chk.TripleState           False Me.RecordSource             my_yes_qry  ' click once on checkbox  my_chk_AfterUpdate  set_data_source Me.my_chk.Value   -1  Me.my_chk.ControlSource          Me.my_chk.TripleState           False Me.RecordSource             my_yes_qry </code></pre>  <p>which, as you can see, doesn't work either because now, even though <code>AfterUpdate</code> fires once per click, the checkbox value doesn't change!</p>  <p>Over at <a href="http://www.access-programmers.co.uk/forums/showthread.php?t=219087" rel="nofollow">access-programmers.co.uk/forums</a> there was a suggestion (regarding a form, not a report) to use fancy coding</p>  <pre><code>Nz(Me.my_chk = True, False) </code></pre>  <p>which I tried but it had no difference in outcome.</p>