<pre><code>typedef struct sample_s  {   int sampleint;   sample2 b; } sample;  typedef struct sample2_s {   int a;   int b;   int c;   int d; } sample2;  int main() {   sample t; } </code></pre>  <p>In this example, when I create the instance t of the sample structure, I will also load sample2 in memory.</p>  <p>The Question is, how is it possible to only load the sampleint in the memory ? Is there a way to only load a part of a structure in memory ?  If the answer is, like I think it is, the inheritance. How does it work exactly ? Will there be a waste of time during the execution due to hash table ? </p>  <p>I am asking those question because I want to develop a DOD (data oriented design) program and I want to understand better how structures are managed in the memory.</p>  <p>Thank you</p>