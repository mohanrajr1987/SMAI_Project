<p>I implemented a kernel function and I am having a problem of kernel panic showing page allocation failure or oom-manager is getting invoked sometimes killing the process when I try to run my function very huge number of times(otherwise it’s fine). To debug this I started writing a dummy program which minimally simulates my actual program. My dummy program opens and closes a file(thats it !) . But I am running this function huge number of times when my module gets loaded as below</p>  <pre><code>static int dummy(void) {  struct file *fd;  mm_segment_t fs;  fs = get_fs();  set_fs(KERNEL_DS);  fd = filp_open(“x/y/z/a.txt”,O_RDONLY,0);  if(!fd || IS_ERR(fd)){     return -1; }  //close file  filp_close(fd,0);  set_fs(fs);   return 0; } </code></pre>  <p>//init module function called when my kernel module gets loaded</p>  <pre><code>static int dummy_init(void) {  int i, ret;  for(i=0;i &lt; 10000000;++i) {     ret = dummy();     if(ret == -1)         return 0; }      return 0; } </code></pre>  <p>Now when i execute above code i have  “page allocation failure” or sometimes oom-manager is invoked and it kills the process. When I try to reduce the executions  from 10^7 to 10^6 there was no problem. So here is the question .. for every iteration just opening a file and closing it using filp_close() before function terminates . So I don’t understand what is the problem. Moreover I see VFS:file-max limit warnings , hence I increased the limit to very large number. It also doesn’t make sense to me why file-max limit is reached though I am closing the file every time. </p>  <p>Below is the stack trace.</p>  <pre><code>[  609.118491] vmtoolsd invoked oom-killer: gfp_mask=0x201da, order=0, oom_score_adj=0 [  609.120014] vmtoolsd cpuset=session-c2.scope mems_allowed=0 [  609.121145] CPU: 0 PID: 2194 Comm: vmtoolsd Tainted: GF          O 3.10.87 #2 [  609.122574] Hardware name: VMware, Inc. VMware Virtual Platform/440BX Desktop Reference Platform, BIOS 6.00 05/20/2014 [  609.124694]  0000000000000000 ffff88002f287978 ffffffff816b4c84 ffff88002f2879c0 [  609.126353]  ffffffff816b376a 0000000000000206 0000000000000001 ffff8800359e8000 [  609.127952]  0000000000000000 000000000007d336 0000000000000036 00000000000201da [  609.129549] Call Trace: [  609.130146]  [&lt;ffffffff816b4c84&gt;] dump_stack+0x19/0x1b [  609.131162]  [&lt;ffffffff816b376a&gt;] dump_header.isra.9+0x7b/0x1a2 [  609.132323]  [&lt;ffffffff8113884d&gt;] oom_kill_process+0x1dd/0x330 [  609.133471]  [&lt;ffffffff812a9105&gt;] ? security_capable_noaudit+0x15/0x20 [  609.134751]  [&lt;ffffffff81138fc4&gt;] out_of_memory+0x464/0x4b0 [  609.135847]  [&lt;ffffffff8113edf8&gt;] __alloc_pages_nodemask+0x9d8/0xa20 [  609.137097]  [&lt;ffffffff8117909e&gt;] alloc_pages_current+0xae/0x160 [  609.138257]  [&lt;ffffffff81135367&gt;] __page_cache_alloc+0x97/0xb0 [  609.139436]  [&lt;ffffffff81136dc4&gt;] filemap_fault+0x174/0x3c0 [  609.140528]  [&lt;ffffffff8115953c&gt;] __do_fault+0x6c/0x620 [  609.141552]  [&lt;ffffffff8115cd34&gt;] handle_pte_fault+0x444/0x940 [  609.142696]  [&lt;ffffffff8115e0fe&gt;] handle_mm_fault+0x2fe/0x690 [  609.144058]  [&lt;ffffffff811a8b00&gt;] ? poll_schedule_timeout+0x70/0x70 [  609.145878]  [&lt;ffffffff816be872&gt;] __do_page_fault+0x1a2/0x580 [  609.147099]  [&lt;ffffffff8108e955&gt;] ? task_sched_runtime+0x55/0xa0 [  609.148574]  [&lt;ffffffff81092185&gt;] ? cputime_adjust+0x25/0x110 [  609.149878]  [&lt;ffffffff81092841&gt;] ? thread_group_cputime_adjusted+0x41/0x50 [  609.151458]  [&lt;ffffffff81019ce9&gt;] ? read_tsc+0x9/0x20 [  609.152613]  [&lt;ffffffff816bec7c&gt;] do_page_fault+0x2c/0x50 [  609.153860]  [&lt;ffffffff816baef8&gt;] page_fault+0x28/0x30 [  609.155025] Mem-Info: [  609.155532] Node 0 DMA per-cpu: [  609.156268] CPU    0: hi:    0, btch:   1 usd:   0 [  609.157309] Node 0 DMA32 per-cpu: [  609.158063] CPU    0: hi:  186, btch:  31 usd:  54 [  609.159030] active_anon:0 inactive_anon:0 isolated_anon:0 [  609.159030]  active_file:19 inactive_file:81 isolated_file:0 [  609.159030]  unevictable:8 dirty:0 writeback:7 unstable:0 [  609.159030]  free:11595 slab_reclaimable:4672 slab_unreclaimable:216463 [  609.159030]  mapped:10 shmem:8 pagetables:7505 bounce:0 [  609.159030]  free_cma:0 [  609.165085] Node 0 DMA free:4108kB min:788kB low:984kB high:1180kB       active_anon:0kB inactive_anon:0kB active_file:0kB inactive_file:0kB   unevictable:0kB isolated(anon):0kB isolated(file):0kB present:15988kB managed:15904kB mlocked:0kB dirty:0kB writeback:0kB mapped:0kB shmem:0kB slab_reclaimable:72kB slab_unreclaimable:11668kB kernel_stack:0kB pagetables:12kB unstable:0kB bounce:0kB free_cma:0kB writeback_tmp:0kB pages_scanned:0 all_unreclaimable? yes [  609.173628] lowmem_reserve[]: 0 832 832 832 [  609.174687] Node 0 DMA32 free:42272kB min:42340kB low:52924kB high:63508kB active_anon:0kB inactive_anon:0kB active_file:76kB inactive_file:324kB unevictable:32kB isolated(anon):0kB isolated(file):0kB present:1032064kB managed:852376kB mlocked:32kB dirty:0kB writeback:28kB mapped:40kB shmem:32kB slab_reclaimable:18616kB slab_unreclaimable:854184kB kernel_stack:6048kB pagetables:30008kB unstable:0kB bounce:0kB free_cma:0kB writeback_tmp:0kB pages_scanned:120 all_unreclaimable? yes [  609.182737] lowmem_reserve[]: 0 0 0 0 [  609.183616] Node 0 DMA: 7*4kB (UM) 6*8kB (U) 12*16kB (UM) 6*32kB (UM) 9*64kB (M) 6*128kB (UM) 1*256kB (U) 0*512kB 0*1024kB 1*2048kB (R) 0*4096kB = 4108kB [  609.186932] Node 0 DMA32: 1988*4kB (UEM) 3018*8kB (UEM) 379*16kB (M) 0*32kB 0*64kB 0*128kB 0*256kB 0*512kB 0*1024kB 0*2048kB 1*4096kB (R) = 42256kB [  609.190003] Node 0 hugepages_total=0 hugepages_free=0 hugepages_surp=0 hugepages_size=2048kB [  609.191646] 128 total pagecache pages [  609.192376] 5 pages in swap cache [  609.193043] Swap cache stats: add 125434, delete 125429, find 2279/2765 [  609.194314] Free swap  = 565836kB [  609.194965] Total swap = 1046524kB [  609.197207] 262143 pages RAM [  609.197816] 11016 pages reserved [  609.198461] 263966 pages shared [  609.199090] 237462 pages non-shared </code></pre>