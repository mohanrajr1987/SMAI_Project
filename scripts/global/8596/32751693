<p><strong>Finally</strong> I found exactly the kind of scroll bars I wanted for my React App: the nice-scroll-bars, but after a day of wrestling this plugin, I cannot understand their example: The flow of creating a scroll able component goes like this:</p>  <p>jsx React Component + render method with extra CSS baked in to it ===gulp compiling=====> a new main.js component that is scroll-able.</p>  <p>I setup 3 similar React Scroll bars examples from Github today. The instructions seemed just as simple as the others.</p>  <p>Here is the repo:</p>  <p><a href="https://github.com/souhe/reactScrollbar" rel="nofollow">https://github.com/souhe/reactScrollbar</a></p>  <p><strong>Here's the very simple set up instructions</strong></p>  <p>1) Installing with npm: npm install react-scrollbar --save</p>  <p>2) Wrapping the content that you want to scroll like so:</p>  <pre><code>var React = require('react'); var ScrollArea = require('react-scrollbar');   var App = React.createClass({   render() {     return (       &lt;ScrollArea         speed={0.8}         className="area"         contentClassName="content"         horizontal={false}         &gt;         Some long content.       &lt;/ScrollArea&gt;     );   } });  React.render(&lt;App/&gt;, document.body); </code></pre>  <p>3) Adding a .CSS file(scrollbar.css) to the project:    (this file is in the example once you install it)</p>  <p><strong>The Problem For The Simple Minded Folk</strong></p>  <p><strong>What I see and think:</strong></p>  <p>"Oh I need a  component. I can just install it from npm and then require it to use like any other React component.Any extra CSS is linked in the index.html file."</p>  <p><strong>What the example makes the process look like:</strong> </p>  <p>It looks like I'm wrapping up an ES6 React component with another js file and also pouring in extra CSS in the JavaScript in order to make a pre-compiled scroll-able component. </p>  <p>I'm not sure if this plugin is confusing because:</p>  <ul> <li>These scroll bars are for the new ES6 wave of doing things and the addition of using classes in React.</li> <li>The author has bundle up the code his own way just for a quick example.</li> <li>There is just a lot of fancy ".jsx" and ".less" trans-compiling going  on that is confusing a simple plugin illustration.</li> </ul>  <p><strong>Here are the sticking Points for a Noob:</strong></p>  <p>1) Why does it seem we are pre-compiling the component?  gulpfile.js</p>  <pre><code>gulp.task("webpack", function() {     return gulp.src('./examples/**/js/main.js')         .pipe(webpack( webpackConf ))         .pipe(concat('main.js'))         .pipe(gulp.dest('../'))         .pipe(connect.reload()); }); </code></pre>  <p>2)Are we baking in extra CSS here? Why not just link it in the html? </p>  <p>main.js</p>  <pre><code>import React from 'react'; import App from './app.jsx';  var css = require("style!css!../../../dist/css/scrollbar.css");  React.render(React.createElement(App, null), document.getElementById("main")); </code></pre>  <p>3) Where did this ScrollArea.js file come from?? Is this just the scrolling module being added in manually so that we don't have to install it from npm?<br> app.jsx</p>  <pre><code>import ScrollArea from '../../../dist/scrollArea.js'; </code></pre>