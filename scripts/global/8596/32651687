<p><strong>The problem:</strong></p>  <p><a href="http://i.stack.imgur.com/p9gco.png" rel="nofollow"><img src="http://i.stack.imgur.com/p9gco.png" alt="enter image description here"></a></p>  <p>The <em>RecyclerView</em> is <strong>fully</strong> scrolled down yet the scrollbar will not touch the bottom of the screen</p>  <hr>  <p>This is specific to a <strong><em>RecyclerView</em></strong> it <strong>does not</strong> occur with a ListView</p>  <p>Following similar questions on Stack Overflow I've already tried:</p>  <ul> <li>Adding a small bottom padding/margin to the RecyclerView</li> <li>Adding a fake View at the end</li> <li>Removing margin/padding from every item</li> </ul>  <p>After spending enough time on this I have created a small verifiable example. I'm looking for how to make it act normally and touch the bottom when the view is fully scrolled down.</p>  <hr>  <p><strong>activity_main.xml</strong></p>  <pre><code>&lt;fragment xmlns:android="http://schemas.android.com/apk/res/android"           xmlns:tools="http://schemas.android.com/tools"           android:id="@+id/fragment"           android:name="com.package.scrollerexample.MainActivityFragment"           tools:layout="@layout/fragment_main"           android:layout_width="match_parent"           android:layout_height="match_parent"/&gt; </code></pre>  <p><strong>row.xml</strong></p>  <pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt; &lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"               android:orientation="vertical"               android:layout_width="match_parent"               android:layout_height="130dp"               android:background="#05EEFF"&gt;      &lt;TextView         android:layout_width="wrap_content"         android:layout_height="wrap_content"         android:text="txt"         android:id="@+id/txt1"         android:padding="10dp"/&gt;      &lt;TextView         android:layout_width="wrap_content"         android:layout_height="wrap_content"         android:text="New Text"         android:id="@+id/txt2"         android:padding="10dp"/&gt; &lt;/LinearLayout&gt; </code></pre>  <p><strong>fragment_main.xml</strong></p>  <pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt; &lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"               xmlns:fab="http://schemas.android.com/apk/res-auto"               android:orientation="vertical"               android:layout_width="match_parent"               android:layout_height="match_parent"&gt;               &lt;android.support.v7.widget.RecyclerView                 android:layout_width="match_parent"                 android:layout_height="match_parent"                 android:scrollbars="vertical"                 android:id="@+id/recyclerList"/&gt;  &lt;/LinearLayout&gt; </code></pre>  <hr>  <p><strong>RecyclerAdapterBasic</strong></p>  <pre><code>import android.support.v7.widget.RecyclerView; import android.view.LayoutInflater; import android.view.View; import android.view.ViewGroup; import android.widget.TextView;  import java.util.ArrayList; import java.util.List;  public class RecyclerAdapterBasic extends RecyclerView.Adapter&lt;RecyclerAdapterBasic.ViewHolder&gt; {     private List&lt;Dummy&gt; mDataSet = new ArrayList&lt;&gt;();      public void addAll(List&lt;Dummy&gt; data){         mDataSet.addAll(data);         notifyDataSetChanged();     }      @Override     public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {         View itemView = LayoutInflater.from(parent.getContext()).inflate(R.layout.row,parent,false);         return new ViewHolder(itemView);     }      @Override     public void onBindViewHolder(ViewHolder holder, int position) {         Dummy i = mDataSet.get(position);         holder.txt2.setText(i.getFieldA());         holder.txt1.setText(i.getFieldB());     }      @Override     public int getItemCount() {         return mDataSet.size();     }      public static class ViewHolder extends RecyclerView.ViewHolder {         public TextView txt1;         public TextView txt2;          public ViewHolder(View itemView) {             super(itemView);             txt1 = (TextView) itemView.findViewById(R.id.txt1);             txt2 = (TextView) itemView.findViewById(R.id.txt2);         }     } } </code></pre>  <p><strong>Dummy</strong></p>  <pre><code>public class Dummy {     public Dummy() {     }      public static String getFieldA(){         return "12";     }      public static String getFieldB(){         return "Field";     } } </code></pre>  <p><strong>MainActivity</strong></p>  <pre><code>import android.support.v7.app.AppCompatActivity; import android.os.Bundle; import android.view.Menu; import android.view.MenuItem;  public class MainActivity extends AppCompatActivity {      @Override     protected void onCreate(Bundle savedInstanceState) {         super.onCreate(savedInstanceState);         setContentView(R.layout.activity_main);     }  } </code></pre>  <p><strong>MainActivityFragment</strong></p>  <pre><code>import android.support.v4.app.Fragment; import android.os.Bundle; import android.support.v7.widget.LinearLayoutManager; import android.support.v7.widget.RecyclerView; import android.view.LayoutInflater; import android.view.View; import android.view.ViewGroup;  import java.util.ArrayList; import java.util.List;  /**  * A placeholder fragment containing a simple view.  */ public class MainActivityFragment extends Fragment {      public MainActivityFragment() {      }      @Override     public View onCreateView(LayoutInflater inflater, ViewGroup container,                              Bundle savedInstanceState) {         View v = inflater.inflate(R.layout.fragment_main, container, false);         RecyclerView recyclerView = (RecyclerView) v.findViewById(R.id.recyclerList);         LinearLayoutManager layoutManager = new LinearLayoutManager(getActivity());         RecyclerAdapterBasic adapterBasic = new RecyclerAdapterBasic();         List&lt;Dummy&gt; list = new ArrayList&lt;Dummy&gt;();         for(int i = 0; i &lt; 18; i++){             list.add(new Dummy());         }         adapterBasic.addAll(list);         layoutManager.setSmoothScrollbarEnabled(true);         recyclerView.setAdapter(adapterBasic);         recyclerView.setLayoutManager(layoutManager);         return v;     } } </code></pre>