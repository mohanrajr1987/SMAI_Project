<p>I'm trying to implement a pinterest-like UI and I've been experimenting with the FlowLayout example for PySide.</p>  <p>The problem is that I'm trying to use a QScrollArea and it won't let me scroll down enough. In other words, I can't get to the bottom of the widget I'm trying to scroll.</p>  <p>You can get the hole file <a href="https://drive.google.com/file/d/0B-vcARNmtIHna1pReHhsRUdCeDQ/view?usp=sharing" rel="nofollow">here</a>. If you download it and run it, the problem will become pretty obvious.</p>  <p>My code was taken from <a href="https://github.com/PySide/Examples/blob/master/examples/layouts/flowlayout.py" rel="nofollow">here</a>, with these modifications:</p>  <p>Added this class: (it just let's me generate colored and numerated rectangles)</p>  <pre><code>class ColoredRectangle(QLabel): count = 0  def __init__(self, height, color):     super(ColoredRectangle, self).__init__()      palette = QPalette()     palette.setColor(QPalette.Background, color)      self.setAutoFillBackground(True)     self.setPalette(palette)      self.setFixedSize(200, height)     self.setText(str(ColoredRectangle.count))     ColoredRectangle.count += 1 </code></pre>  <p>Now I'm adding rectangles instead of buttons...</p>  <pre><code>class Window(QtGui.QWidget): def __init__(self):     super(Window, self).__init__()      flowLayout = FlowLayout()     flowLayout.addWidget(ColoredRectangle(450, Qt.white))     flowLayout.addWidget(ColoredRectangle(200, Qt.green))self.setLayout(flowLayout)      self.setLayout(flowLayout)      self.setWindowTitle("Flow Layout") </code></pre>  <p>Changed the <code>doLayout</code> method like this:</p>  <pre><code>def doLayout(self, rect):      if not any(self.itemList):         return      firstItem = self.itemList[0]      x = rect.x()     y = rect.y()      wid = firstItem.widget()      spaceX = self.spacing() + wid.style().layoutSpacing(QtGui.QSizePolicy.PushButton,                                                             QtGui.QSizePolicy.PushButton, QtCore.Qt.Horizontal)     spaceY = self.spacing() + wid.style().layoutSpacing(QtGui.QSizePolicy.PushButton,                                                             QtGui.QSizePolicy.PushButton, QtCore.Qt.Vertical)      itemWidth = firstItem.sizeHint().width()      # calculate column count      columnCount = (rect.width() + spaceX) / (itemWidth + spaceX)     availablePositions = [None] * columnCount      for i in range(columnCount):         availablePositions[i] = QPoint(x + i * (itemWidth + spaceX), y)      for item in self.itemList:          currentPosition = availablePositions[0]         currentPositionColumn = 0          positionColumn = 0         for position in availablePositions:             if min(currentPosition.y(), position.y()) != currentPosition.y():                 currentPositionColumn = positionColumn                 currentPosition = position              positionColumn += 1          # update available position in column         itemSize = item.sizeHint()         availablePositions[currentPositionColumn] = QPoint(currentPosition.x(),                                                            currentPosition.y() + itemSize.height() + spaceY)          # place item         item.setGeometry(QtCore.QRect(currentPosition, itemSize)) </code></pre>  <p>And finally, I added the QScrollArea:</p>  <pre><code>if __name__ == '__main__': import sys  app = QtGui.QApplication(sys.argv) mainWin = Window() scrollArea = QScrollArea() scrollArea.setWidgetResizable(True) scrollArea.setWidget(mainWin) scrollArea.show() sys.exit(app.exec_()) </code></pre>  <p>Thanks in advance!</p>