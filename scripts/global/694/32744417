<p>The normal way to ensure a key's value isn't nil in an NSPredicate looks to be as simple as "%K != nil", but when trying to make this predicate to use in a CKQuery it is crashing. The predicate is:</p>  <blockquote>   <p>let predicate = NSPredicate(format: "%K = %@ AND %K != nil", VoteRecordKeys.submissionID, submissionID, VoteRecordKeys.voterID)</p> </blockquote>  <p>Where VoteRecordKeys.submissionID and VoteRecordKeys.voterID are just key string constants for my CloudKit record properties.</p>  <p>The app is crashing on the following line of code where I try to make my CKQuery:</p>  <blockquote>   <p>let query = CKQuery(recordType: Vote.recordType, predicate: predicate)</p> </blockquote>  <p>With this message in the console:</p>  <p><code>*** Terminating app due to uncaught exception 'CKException', reason: 'Invalid predicate: submissionID == "0903A5BA-4751-4B4B-B3A0-08D82859B66A" AND voterID != nil (Error Domain=CKErrorDomain Code=12 "Invalid right expression in &lt;voterID != nil&gt;: &lt;nil&gt; is not a function expression" UserInfo={ck_isComparisonError=true, NSUnderlyingError=0x191700e0 {Error Domain=CKErrorDomain Code=12 "&lt;nil&gt; is not a function expression" UserInfo={ck_isComparisonError=true, NSLocalizedDescription=&lt;nil&gt; is not a function expression}}, NSLocalizedDescription=Invalid right expression in &lt;voterID != nil&gt;: &lt;nil&gt; is not a function expression})'</code></p>  <p>I tried replacing nil with '' but this was still returning records with nil voterIDs (so I can't just compare to empty strings)</p>  <p>I've read through the CKQuery class reference and predicate forming rules and there is no mention of nil or null or exceptions that would prevent me from using what works for other NSPredicates. Is there a correct way to use NSPredicate and CKQuery to filter out records who have a particular nil value?</p>