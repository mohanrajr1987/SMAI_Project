<p>I have a class BankAccount </p>  <pre><code>public class BankAccount {     private double balance;      public BankAccount() {         balance = 0;     }      public BankAccount(double initialBalance) {         balance = initialBalance;     }      public void deposit(double amount) {         balance = balance + amount;     }      public void withdraw(double amount) {         balance = balance - amount;     }      public double getBalance() {         return balance;     } } </code></pre>  <p>I also have a an array of those classes within the class BankAccountGroup</p>  <pre><code>public class BankAccountGroup {     private BankAccount[] bankAccounts;      public BankAccountGroup(BankAccount[] bankAccounts) {         this.bankAccounts = bankAccounts;     }      public double getBalance(int i) throws NullPointerException {         return bankAccounts[i].getBalance();     }      public double removeAccount(int i) throws NullPointerException {         if(bankAccounts[i] != null) {             return bankAccounts[i].getBalance();             bankAccounts[i] = null;         }          else {             return 0;         }     } } </code></pre>  <p>Within the method <code>public double removeAccount(int i)</code> I want to return the balance in i-th account if that account is not null and then sets that index to null in the array element at index i to null. If that element was already null, return 0.</p>  <p>I then get the error</p>  <pre><code>D:\CS 140&gt;javac assignment03\BankAccountGroup.java assignment03\BankAccountGroup.java:17: error: unreachable statement                         bankAccounts[i] = null;                         ^ assignment03\BankAccountGroup.java:23: error: missing return statement         }         ^ </code></pre>  <p>I know that the unreachable statement error is basically pointless code to the compiler, but I can't see why. As for the no return statement, there's clearly return statements in both paths that the method could take. My only thought is that the two lines within the if in removeAccount should be switched, but then I can't set the i-th element to null.</p>