<p>Using <code>gcc</code> 5.2.0, I noticed that this code does not generate a warning:</p>  <pre><code>#include &lt;stddef.h&gt;  int function(void) {     return NULL; }  void procedure(void) {     return NULL; } </code></pre>  <p>I used the flags <code>-Wall -Wextra -std=c99 -pedantic</code> and I am running archlinux. I am not sure why this code works fine on <code>gcc</code>, especially since <code>clang</code> 3.7.0 does generate a warning.</p>  <p>I also tried with older versions of <code>gcc</code> like 4.9 or 4.7 and they both generate warnings.</p>  <p>The warnings are:</p>  <pre><code>warning: return makes integer from pointer without a cast </code></pre>  <p>and</p>  <pre><code>warning: ‘return’ with a value, in function returning void </code></pre>  <p>I should mention that I tried compiling gcc 5.2 on Debian and the result is the same. So archlinux does not seem to be the problem.</p>  <p>What is the rationale? I cannot seem to find anything related to this anywhere else.</p>  <p>Thank you!</p>