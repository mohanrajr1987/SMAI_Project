<p>I'm writting a custom module that allows to upload images during registration. It has to be an customer_address attribute, not a customer attribute. I'been trying to do it for last 3 days with no result. First I had some problems with structure of $_FILES array since it's different then the structure of $_FILES of customer attribute it has indexes of address. But I figured it out to create new Varien_File_Uploader passing array as an argument like in code below.</p>  <p>This is my mysql4-install-0.1.0.php file:</p>  <pre><code>$installer = $this; $installer-&gt;startSetup();  $installer-&gt;addAttribute("customer_address", "customer_file", array( "type" =&gt; "varchar", "backend" =&gt; "catalog/category_attribute_backend_image",     "label" =&gt; "Document label", "input" =&gt; "image", "source" =&gt; "", "visible" =&gt; true, "required" =&gt; false, "default" =&gt; "", "frontend" =&gt; "", "unique" =&gt; false, "note" =&gt; "document scann" ));  $attribute = Mage::getSingleton("eav/config")-&gt;getAttribute("customer_address", "customer_file");   $used_in_forms = array();  $used_in_forms[] = "adminhtml_customer_address"; $used_in_forms[] = "customer_register_address"; $used_in_forms[] = "customer_address_edit"; $attribute-&gt;setData("used_in_forms", $used_in_forms)     -&gt;setData("is_used_for_customer_segment", true)     -&gt;setData("is_system", 0)     -&gt;setData("is_user_defined", 1)     -&gt;setData("is_visible", 1)     -&gt;setData("sort_order", 510) ; $attribute-&gt;save();  $installer-&gt;endSetup(); </code></pre>  <p>I wrote my own controller in controllers/Adminhtml/CustomerController.php:</p>  <pre><code>require_once 'Mage/Adminhtml/controllers/CustomerController.php';  class XYZ_Mymodule_Adminhtml_CustomerController extends         Mage_Adminhtml_CustomerController {      public function saveAction() {               $data = $this-&gt;getRequest()-&gt;getPost();               if (!empty($data['address'])) {               $addressForm = Mage::getModel('customer/form');         $addressForm-&gt;setFormCode('adminhtml_customer_address')-&gt;ignoreInvisible(false);              $imageAttribute = 'customer_file';             foreach (array_keys($data['address']) as $index) {                                      try {                         if (isset($data['address'][$index][$imageAttribute]['value']) &amp;&amp; isset($data['address'][$index][$imageAttribute]['delete']) &amp;&amp; (bool) $data['address'][$index][$imageAttribute]['delete'] == 1) {                         $data['address'][$index][$imageAttribute] = '';                     } else {                          unset($data['address'][$index][$imageAttribute]);                         if (isset($_FILES)) {                             if (isset($_FILES['address']['name'][$index][$imageAttribute]) &amp;&amp; $_FILES['address']['name'][$index][$imageAttribute] != '') {                                     $io = new Varien_Io_File();                                     $io-&gt;rm(Mage::getBaseUrl(Mage_Core_Model_Store::URL_TYPE_MEDIA) . 'document/' . $_FILES['address']['name'][$index][$imageAttribute]);                                 $path = Mage::getBaseDir('media') . DS . 'document' . DS;                                 $uploader = new Varien_File_Uploader(                                         array(                                     'name' =&gt; $_FILES['address']['name'][$index][$imageAttribute],                                     'type' =&gt; $_FILES['address']['type'][$index][$imageAttribute],                                     'tmp_name' =&gt; $_FILES['address']['tmp_name'][$index][$imageAttribute],                                     'error' =&gt; $_FILES['address']['error'][$index][$imageAttribute],                                     'size' =&gt; $_FILES['address']['size'][$index][$imageAttribute],                                         )                                 );                                 $uploader-&gt;setAllowCreateFolders(true);                                 $uploader-&gt;setAllowedExtensions(array('jpg', 'jpeg', 'gif', 'png'));                                 $uploader-&gt;setAllowRenameFiles(false);                                 $uploader-&gt;setFilesDispersion(false);                                  $uploader-&gt;save($path, $_FILES['address']['name'][$index][$imageAttribute]);                                 $data['address'][$index][$imageAttribute]['value'] = Mage::getBaseUrl(Mage_Core_Model_Store::URL_TYPE_MEDIA) . 'document/' . $_FILES['address']['name'][$index][$imageAttribute];                             }                         }                      }                 } catch (Exception $e) {                     Mage::log($e, 7, 'saveImageError.log');                     Mage::getSingleton('adminhtml/session')-&gt;addError($e-&gt;getMessage());                     $this-&gt;_redirect('*/*/edit', array('id' =&gt; $this-&gt;getRequest()-&gt;getParam('id')));                     return;                 }          }                 }      $this-&gt;saveAfterImageAction($data); }      ... } </code></pre>  <p>function saveAfterImageAction($data) called at the end is just a copy of core controller saveAction but instead of $data = $this->getRequest()->getPost();, $data is taken from function argument.</p>  <p>Problem is that it's not working. I receive an Error notice "Document label" is not a valid file     I did some digging in core files and checked how the validation works. In my version of saveAction() that I call after preparing $data set there is an error check:</p>  <pre><code>$errors = $addressForm-&gt;validateData($formData); </code></pre>  <p>at this point $formData has something like this:</p>  <pre><code>    Array ( [prefix] =&gt;  [firstname] =&gt; CustomerName [middlename] =&gt;  [lastname] =&gt; CustomerLastName [suffix] =&gt;  [company] =&gt;  [street] =&gt; Array     (         [0] =&gt; StreetName 123         [1] =&gt;      )  [city] =&gt; CityName [country_id] =&gt; PL [region] =&gt; RegionName [region_id] =&gt;  [postcode] =&gt; 55-554 [telephone] =&gt; 00123456789 [fax] =&gt;  [vat_id] =&gt;      [customer_file] =&gt; Array     (         [name] =&gt; test1.png         [type] =&gt; image/png         [tmp_name] =&gt; C:\wamp\www\magentotest\var\tmp\php7917.tmp         [error] =&gt; 0         [size] =&gt; 1165871     )    ) </code></pre>  <p>*For those who will notice tmp_name path, I changed in php.ini upload tmp location to inside of my magento folder, it was in some suggestions about uploader problems, after wamp services restart - the same error</p>  <p>**I do know that windows might not be supported so I tested it on Ubuntu 14.04 lts and with default /tmp path it does not work too, same error</p>  <p>I found out that this validateData is a method in abstract class Mage_Eav_Model_Form, and inside function validateData is called:</p>  <pre><code>$result = $dataModel-&gt;validateValue($data[$attribute-&gt;getAttributeCode()]); </code></pre>  <p>which is a method of class Mage_Eav_Model_Attribute_Data_File extends Mage_Eav_Model_Attribute_Data_Abstract.</p>  <p>And here there is a call to method:</p>  <pre><code>$errors = array_merge($errors, $this-&gt;_validateByRules($value)); </code></pre>  <p>in _validateByRules($value) method there is that code which finds an error in my file:</p>  <pre><code>$imageProp = @getimagesize($value['tmp_name']); if (!is_uploaded_file($value['tmp_name']) || !$imageProp) {         return array(             Mage::helper('eav')-&gt;__('"%s" is not a valid file', $label)         ); } </code></pre>  <p>So at this point in $value['tmp_name'] I have tmp file path but I have no idea if it still exists at that point. When I create Varien_File_Uploader then in __construct this file is checked using file_exist:</p>  <pre><code>if(!file_exists($this-&gt;_file['tmp_name'])) {         $code = empty($this-&gt;_file['tmp_name']) ? self::TMP_NAME_EMPTY : 0;         throw new Exception('File was not uploaded.', $code); } else {         $this-&gt;_fileExists = true; } </code></pre>  <p>Since it's not throwing an Exception at that point I assume it existed then, and later on when is_uploaded_file() checks that file it fails. </p>  <p>I even tried to bypass that check, just commenting it for testing in core file, customer was saved with no validation error but still without the file, BUT the file was created in media/document. And in $data array I had this:</p>  <pre><code>[customer_file] =&gt; Array             (                 [value] =&gt; http://magentotest.com/media/document/test1.png             ) </code></pre>  <p>So if it's there, working link to my image, why I cant save that address even if tmp validation is commented... I have no idea what is the problem. </p>  <p>EDIT: An additional explanation, there are two problems: -why does the validation process fails, how to prevent this? -validates the tmp file not the image makes no sense for me, if the file is succesfuly placed on server in media/document catalog, but even when the tmp file validation commented it still does not save that file. After editing I see choose file label.</p>  <p>Of course I test it in backend, I haven't created the frontend form yet.</p>