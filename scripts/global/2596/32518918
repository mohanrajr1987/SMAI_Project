<p>How can i catch the exception that occurs when starting a windows service. I am unable to get the exception here in my below code even though i am throwing exception in the Onstart() method of the service.</p>  <pre><code>public class InterOpIntegrationWinService : ServiceBase {     protected override void OnStart(string[] args)     {         throw new InvalidOperationException(message);     }  } </code></pre>  <p>Calling thread code</p>  <pre><code>try {     using (ServiceController controller = new ServiceController())     {         controller.ServiceName = objServiceConfig.ServiceName;         controller.Start();         System.Windows.Forms.Application.DoEvents();         //controller.WaitForStatus(ServiceControllerStatus.Running, new TimeSpan(0, 0, 15));         //controller.WaitForStatus(ServiceControllerStatus.Running);         //if (!string.IsNullOrEmpty(LogUtilities.ServiceOnStartException))         //{         //    MessageBox.Show("Error with starting service : " + LogUtilities.ServiceOnStartException);         //    LogUtilities.ServiceOnStartException = string.Empty;         //}     } } catch (System.InvalidOperationException InvOpExcep) {     DisplayError(InvOpExcep.Message);     LogUtilities.DisplayMessage("Failed to start service. " + LogUtilities.ServiceOnStartException, InvOpExcep);     LogUtilities.ServiceOnStartException = string.Empty; } catch (Exception ex) {     DisplayError(ex.Message);     LogUtilities.DisplayMessage("Failed to start service. " + LogUtilities.ServiceOnStartException, ex);     LogUtilities.ServiceOnStartException = string.Empty; } </code></pre>  <p>i check for application license in the onstart() method and throws a licensing error if it fails. i want this to shared to my calling thread so i could show the message in a DialogBox. Any ideas of how to do this if i cannot handle the exceptions in my calling process.</p>