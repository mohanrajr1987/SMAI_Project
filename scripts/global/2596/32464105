<p>I'm writing a Windows service to monitor insertion of an USB signature pad. I detect if the device is plugged in with the code below:</p>  <pre><code>string query2 = "SELECT * FROM __InstanceCreationEvent " +                 "WITHIN 2 "               + "WHERE TargetInstance ISA 'Win32_PnPEntity'";             var watcher2 = new ManagementEventWatcher(query2);             watcher2.EventArrived += new EventArrivedEventHandler(watcher_EventArrived2);             watcher2.Start(); </code></pre>  <p>And the handler: </p>  <pre><code>private void watcher_EventArrived2(object sender, EventArrivedEventArgs e) {     //Notify that we entered the handler for testing purpose     //Detect the signature pad and do things } </code></pre>  <p>It works great, but if I quickly (about 1 second) unplug and plug the USB device into my computer, the <code>watcher_EventArrived2</code> is not triggered every time. Even with a larger delay, it sometimes ignore the event. How can I make it consistent? (always triggered when the device is plugged in)</p>  <p>I've found another way to check if the device is plugged in:</p>  <pre><code>protected override void OnStart(string[] args) {     displayLogo();     //Event that trigger when a device is plugged in the computer     String query = "SELECT * FROM Win32_DeviceChangeEvent WHERE EventType = 2";     watcher = new ManagementEventWatcher(query);     watcher.EventArrived += new EventArrivedEventHandler(watcher_EventArrived);     watcher.Start(); }  private void watcher_EventArrived(object sender, EventArrivedEventArgs e) {     bool padIsConnected = false;     //This will get all the hardware information of the computer in a list with the last device plugged at the end of it     using (var searcher = new ManagementObjectSearcher("root\\WMI", "SELECT * FROM MSWmi_PnPInstanceNames"))     {         String lastInstanceName = "";         foreach (var device in searcher.Get())             lastInstanceName = "" + device["InstanceName"];         if (lastInstanceName.ToUpper().Contains(SIGNATURE_VID))             padIsConnected = true;     }     if (padIsConnected)         displayLogo(); } </code></pre>  <p>It is working better than my first method, however, if you plug two devices at the same time, it gets confused and doesn't works as expected. So it would needs a way to tell exactly if the device <code>DEVICE_NAME_ID_WATHEVER</code> is plugged. But my first question remain.</p>