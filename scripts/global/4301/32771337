<p>I am upgrading our build solution from VS2008 to VS2015. I have 2013 at my disposal as well so i have tried some of the things on this version as well. </p>  <p>Our build runs from a batch file which prepares a command for <code>mingw</code>. It will call an <code>rtems</code> cross compiler which will build the project. The strange part comes here. As part of the <code>Makefile</code> we have these lines:</p>  <pre><code>OBJ_DIR = ./exe/obj/ # Check if the ../obj/ and ../share/ directories exist; if not create them.     @ (if [ ! -e $(OBJ_DIR) ] ; then echo 'creating $(OBJ_DIR) directory'; mkdir $(OBJ_DIR); fi) </code></pre>  <p>which will essentially create <code>./exe/obj</code> if it doesn't already exist. This is not working for VS2015 (evwen though it has nothing to do with Visual studio). The following things make me think VS is behaving funky:</p>  <ol> <li>This works in both VS2008 and VS2013.</li> <li>The program can create the <code>obj</code> and <code>share</code> directory if i manually create the <code>exe</code> folder.</li> </ol>  <p>I am calling an external program here. What could be happening such that this will fail in 2015 but not in 2013/08?</p>  <p>In case you are interested in the calling mechanism, we call it like this from a <code>.bat</code> file:</p>  <pre><code>SET cmd=export RTEMS_MAKEFILE_PATH=/c/rtems-4.9/powerpc-rtems4.9/a_5 SET cmd=%cmd% ; export PATH=$PATH:/c/rtems-msys/1.0/bin:/c/rtems-4.9/bin:/c/rtems-mingw/bin  REM Call make SET cmd=%cmd% ; make -f Makefile_main tftpboot  REM Launch shell with the right command C:\rtems-msys\1.0\bin\sh.exe -c "%cmd%" </code></pre>  <p><strong>The Workaround</strong></p>  <p>I have simply added these lines to get it working, but i am obviously still interested in why this would be happening:</p>  <pre><code>DEF_DIR = ./exe @ (if [ ! -e $(DEF_DIR) ] ; then echo 'creating $(DEF_DIR) directory'; mkdir $(); fi) </code></pre>