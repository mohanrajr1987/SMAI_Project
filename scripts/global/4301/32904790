<p>I am looking after a system with many hundreds of c files in many folders, there are multiple targets so not all the c files are required in each build.</p>  <p>Because not all files are required I cannot use a pure recursive build. And I don't want to do that, because I would rather not have a slow serial build with mystic dependencies anyway.</p>  <p>What I have come up with broadly is a top level makefile where I pull in a list of folders and include a makefile from each of these folders.</p>  <pre><code>SUB_MAKEFILES := $(foreach subdir,$(SUBDIRS), $(subdir)/subdir.mk) -include $(SUB_MAKEFILES) </code></pre>  <p>Some folders have specific files to compile so the included file is pretty simple;</p>  <pre><code>srcs += path/a.c path/b.c deps += path/a.d path/b.d objs += op/path/a.o op/path/b.o  op/path/%.o: path/%.c path/subdir.mk    compile ... </code></pre>  <p>I do not want to do this dozens of times so I have a generic pattern I use for folders where everything is to be compiled;</p>  <pre><code>PATH155 := src/f1/f2/f3/f4  srcs += $(shell $(FFshell) $(PATH155) -maxdepth 1 -name '*.c') deps += $(addprefix ${OUT_DIR}, $(patsubst %.c,%.d,$(shell $(FFshell) $(PATH155) -maxdepth 1 -name '*.c'))) objs   += $(addprefix ${OUT_DIR}, $(patsubst %.c,%.o,$(shell $(FFshell) $(PATH155) -maxdepth 1 -name '*.c')))  $(OUT_O_DIR)$(PATH155)/%.o: $(PATH155)/%.c $(PATH155)/subdir.mk     gcc -c $(CFLGS) -MF"$(@:%.o=%.d)" -MT"$(@:%.o=%.d)" -o"$@" "$&lt;" </code></pre>  <p>This works, however I would like to avoid having to make up a random unique name for the path where the subdir.mk file resides.</p>  <p>Is there anyway to replace "PATH155673423 := hand/entered/path" with something like "local SUBDIRPWD = $(some function...)".</p>  <p>Then I could just drop in a generic makefile and include it, no error prone typing of paths nor worries that I will get a unique name clash.</p>  <p>It would be nice to have a few less directory scans too, same issue really, need a local variable.</p>  <p>Even some sort of macro for the repeated variable names etc would be better</p>  <p>Maybe there is a way to include the makefiles in a loop instead and set a path variable just before each is included?</p>  <p>Ta</p>  <p>Chris</p>