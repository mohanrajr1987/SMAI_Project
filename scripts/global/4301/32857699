<p>I have set up a makefile that takes the sources main.c, word.c, and trim.c I also used a library which is called linkedList.a, however even after adding it it does not build as I keep getting undefined references to functions within linkedlist.</p>  <p>The following is my makefile code:</p>  <pre><code>SHELL = /bin/sh SRCDIR = . CC = gcc YACC = bison -y CDEBUG = -g COMPLIANCE_FLAGS = CFLAGS = $(COMPLIANCE_FLAGS) $(CDEBUG) -I. -I$(SRCDIR) LDFLAGS = -g  LIBRARY_FILES = linkedList.a  linkedList.a: $(LIBRARY_FILES).o     $(RM) -f $(output)     $(AR) cr $(output) $(inputs)     ranlib $(output)  ############################################################################################################ # List your sources here. SOURCES = main.c word.c trim.c ############################################################################################################  ############################################################################################################ # list the name of your output program here. EXECUTABLE = wordCounter ############################################################################################################ # Create the names of the object files (each .c file becomes a .o file) OBJS = $(patsubst %.c, %.o, $(SOURCES))  include $(SOURCES:.c=.d)  all : $(OBJS) $(EXECUTABLE)  $(EXECUTABLE) : $(OBJS)     $(CC) -o $(EXECUTABLE)  $(OBJS)  %.o : %.c #Defines how to translate a single c file into an object file.     echo compiling $&lt;     echo $(CC) $(CFLAGS) -c $&lt;     $(CC) $(CFLAGS) -E $&lt; &gt; $&lt;.preout     $(CC) $(CFLAGS) -S $&lt;     $(CC) $(CFLAGS) -c $&lt;     echo done compiling $&lt;  %.d : %.c #Defines how to generate the dependencies for the given files.  -M gcc option generates dependencies.     @set -e; rm -f $@; \     $(CC) $(COMPLIANCE_FLAGS ) -M $&lt; &gt; $@.$$$$; \     sed 's,\($*\)\.o[ :]*,\1.o $@ : ,g' &lt; $@.$$$$ &gt; $@; \      rm -f $@.$$$$  clean :   # Delete any and all artifacts from the build.  The only thing which is kept is the source code.     rm -f *.o     rm -f *.preout     rm -f *.s     rm -f *.S     rm -f *d     rm -f $(EXECUTABLE) </code></pre>  <p>I feel I added the proper items in the proper places. My best guess is that my library_files is somehow wrong?</p>