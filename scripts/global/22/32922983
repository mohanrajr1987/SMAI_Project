<p>i have this table (500,000 row)</p>  <pre><code>CREATE TABLE IF NOT EXISTS `listings` (   `id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `type` tinyint(1) NOT NULL DEFAULT '1',   `hash` char(32) NOT NULL,   `source_id` int(10) unsigned NOT NULL,   `link` varchar(255) NOT NULL,   `short_link` varchar(255) NOT NULL,   `cat_id` mediumint(5) NOT NULL,   `title` mediumtext NOT NULL,   `description` mediumtext,   `content` mediumtext,   `images` mediumtext,   `videos` mediumtext,   `views` int(10) unsigned NOT NULL,   `comments` int(11) DEFAULT '0',   `comments_update` int(11) NOT NULL DEFAULT '0',   `editor_id` int(11) NOT NULL DEFAULT '0',   `auther_name` varchar(255) DEFAULT NULL,   `createdby_id` int(10) NOT NULL,   `createdon` int(20) NOT NULL,   `editedby_id` int(10) NOT NULL,   `editedon` int(20) NOT NULL,   `deleted` tinyint(1) NOT NULL,   `deletedon` int(20) NOT NULL,   `deletedby_id` int(10) NOT NULL,   `deletedfor` varchar(255) NOT NULL,   `published` tinyint(1) NOT NULL DEFAULT '1',   `publishedon` int(11) unsigned NOT NULL,   `publishedby_id` int(10) NOT NULL,   PRIMARY KEY (`id`),   KEY `hash` (`hash`) ) ENGINE=MyISAM  DEFAULT CHARSET=utf8; </code></pre>  <p>i'm thinking to make each query by the <code>publishedon between x and y</code> (show in all the site just records of 1 month)</p>  <p>in the same time, i want to add with the <code>publishedon</code> in the where clause <code>published, cat_id , source_id</code></p>  <p>some thing like this:</p>  <pre><code>SELECT * FROM listings  WHERE (publishedon BETWEEN 1441105258 AND 1443614458)    AND (published = 1)    AND (cat_id in(1,2,3,4,5))    AND (source_id  in(1,2,3,4,5)) </code></pre>  <p>that query is ok and fast until now without indexing, but when trying to use <code>order by publishedon</code> its became too slow, so i used this index</p>  <pre><code>CREATE INDEX `listings_pcs` ON listings(     `publishedon` DESC,     `published` ,     `cat_id` ,     `source_id` ) </code></pre>  <p>it worked and the <code>order by publishedon</code> became fast, now i want to <code>order by views</code> like this</p>  <pre><code>SELECT * FROM listings  WHERE (publishedon BETWEEN 1441105258 AND 1443614458)    AND (published = 1)    AND (cat_id in(1,2,3,4,5))    AND (source_id  in(1,2,3,4,5))  ORDER BY views DESC </code></pre>  <p>this is the explanation  <a href="http://i.stack.imgur.com/MMmat.png" rel="nofollow"><img src="http://i.stack.imgur.com/MMmat.png" alt="enter image description here"></a> this query is too slow because of <code>ORDER BY views DESC</code></p>  <p>then i'm tried to drop the old index and add this</p>  <pre><code>CREATE INDEX `listings_pcs` ON listings(     `publishedon` DESC,     `published` ,     `cat_id` ,     `source_id`,     `views` DESC ) </code></pre>  <p>its too slow also</p>  <p>what about if i use just single index on <code>publishedon</code>? what about using single index on cat_id,source_id,views,publishedon?</p>  <p>i can change the query dependencies like publishedon in one month if i found other indexing method depend on any other columns</p>  <p>what about making index in (<code>cat_id</code>, <code>source_id</code>, <code>publishedon</code>, <code>published</code>) ? but in some cases i will use source_id only?</p>  <p>what is the best indexing schema for that table</p>