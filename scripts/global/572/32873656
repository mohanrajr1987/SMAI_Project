<p>I'm using Grails 3.0 to marshal a self-referencing tree made up of <code>Node</code> objects as follows:</p>  <pre><code>// Node.groovy package com.example  class Node {      // fields     String content     int someNumber     static hasOne = [parentNode: Node]     static hasMany = [childNodes: Node]      static constraints = {         content()         someNumber()         parentNode nullable: true  // root node         childNode nullable: true // leaf node     } } </code></pre>  <p>Here is my controller so far:</p>  <pre><code>// NodeController.groovy package com.example  import grails.converters.JSON  class NodeController {      def jsonNode() {         Node node1 = new Node(             content: "Node1 content",             someNumber: 5)          Node node2 = new Node(             content: "Node2",             someNumber: 7,             parentNode: node1)          Node node3 = new Node(             content: "Node3",             someNumber: 12345,             parentNode: node1)          node1.childNodes = [node2, node3]          render node1 as JSON     } } </code></pre>  <p>My intended output (approximate):</p>  <pre><code>[{     "content": "Node1 content",     "someNumber": "5",     "parentNode": null,     "childNodes": [{         "content": "Node2",         "someNumber": "7",         "parentNode": [{"_ref": "../../"}],         "childNodes": null     },{         "content": "Node3",         "someNumber": "12345",         "parentNode": [{"_ref": "../../"}],         "childNodes": null     }] }] </code></pre>  <p>I'd like to marshal these objects into JSON for use in a javascript-based visualiser (<a href="http://bl.ocks.org/robschmuecker/7880033" rel="nofollow">http://bl.ocks.org/robschmuecker/7880033</a>). I'm planning on doing a deep parse of the structure, as there should be no loops, and I'm planning on keeping the implementation simple for now (suggestions welcome!).</p>  <p><strong>I'd like to use a custom marshaller</strong> to strip out unnecessary bits (e.g. the class and id) and <strong>to restructure the JSON output</strong> to match the required structure of the visualiser. But I haven't been able to figure out how, and there's little documentation available on the 'net for this.</p>