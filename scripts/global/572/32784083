<p>I am trying to create a random tree from lists in Racket. </p>  <p>The tree is made from a list of operators and a list of terminals.</p>  <p>The output will look like this:</p>  <pre><code>'(* (+ 2 4) 2) </code></pre>  <p>So the list can be called with the eval function.</p>  <p>Further there should be a maximum level specified.</p>  <p>So my guess is the procedure will look like the following.</p>  <pre><code>(define (make-tree tree level) ... ) </code></pre>  <p>I thought about using the <code>map</code> function and expanding each level at depth, but I'm new to lisp-likes so I'm finding it hard to figure the algorithm I need.</p>  <p>At the moment each operator only takes two parameters (essentially the generated trees are binary trees), but it would be useful to include in any answer how to expand the function to enable three or more parameters.</p>