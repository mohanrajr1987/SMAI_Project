<p>I've been tasked with finding and returning a particular node from a general tree given by the string <code>targetName</code>. Take a look at my implementation below:</p>  <pre><code>public GeneralTreeNode findNode(String targetName) {               if (this.name.equals(targetName)) {         return this;     } else {         for (GeneralTreeNode child : this.children) {             return child.findNode(targetName);         }     }     // no node containing the string could be found     return null;     } </code></pre>  <p>The only problem is that this too often seems to incorrectly return null when in fact a node does exist. It's as if the last line, <code>return null</code>, is too greedy.</p>  <p>Chucking a few breakpoints on this and watching it shows it only seems to go down to the lowest depth until a node has no children, in which case it simply returns null.</p>  <p>Can anyone offer suggestions on how to improve this?</p>