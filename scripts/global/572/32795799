<p>My Tree/Node Class: </p>  <pre><code>import java.util.ArrayList; import java.util.List;  public class Node&lt;T&gt; {    private T data;    private List&lt;Node&lt;T&gt;&gt; children;    private Node&lt;T&gt; parent;     public Node(T data) {       this.data = data;       this.children = new ArrayList&lt;Node&lt;T&gt;&gt;();    }     public Node(Node&lt;T&gt; node) {       this.data = (T) node.getData();       children = new ArrayList&lt;Node&lt;T&gt;&gt;();    }     public void addChild(Node&lt;T&gt; child) {       child.setParent(this);       children.add(child);    }     public T getData() {       return this.data;    }     public void setData(T data) {       this.data = data;    }     public Node&lt;T&gt; getParent() {       return this.parent;    }     public void setParent(Node&lt;T&gt; parent) {       this.parent = parent;    }     public List&lt;Node&lt;T&gt;&gt; getChildren() {       return this.children;    } } </code></pre>  <p>I know how to traverse a Binary Tree, but traversing a N-Ary seems much more tricky.</p>  <p>How would I go about traversing through this tree. I want a counter whilst I traverse the tree as to number/count each node in the tree.</p>  <p>Then at a specific count, I can stop and return the node at that count (perhaps remove that subtree or add a subtree at that position).</p>