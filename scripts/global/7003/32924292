<p>I am trying to show items in <code>UITableView</code> using <code>NSFetchedResultsController</code> but when I add items from background thread then tableview does not show changes until I go back to other screen and come again. </p>  <p>I also found that if I call <code>[_fetchedResultsController performFetch:&amp;error];</code> in <code>contextChanged:</code> method then it shows updated thing in the table.</p>  <p>Now the issue is why it is not showing new added items by itself.</p>  <pre><code>- (void)contextChanged:(NSNotification*)notification {     if ([notification object] == [self managedObjectContext])         return;      if (![NSThread isMainThread])     {         [self performSelectorOnMainThread:@selector(contextChanged:) withObject:notification waitUntilDone:YES];         return;     }      if (self.managedObjectContext!=nil)     {         [[self managedObjectContext] mergeChangesFromContextDidSaveNotification:notification];     } }  ----------   - (NSFetchedResultsController *)fetchedResultsController {     if (_fetchedResultsController != nil)     {         return _fetchedResultsController;     }      NSString *userId=[Shared getLoginUserId];     if (userId==nil || [userId isEqualToString:@""])     {         userId=@"0";     }      NSFetchRequest *fetchRequest = [[NSFetchRequest alloc] init];     NSEntityDescription *entity = [NSEntityDescription                                    entityForName:@"WhatNext" inManagedObjectContext:_managedObjectContext];     [fetchRequest setEntity:entity];       NSPredicate *predicate=[NSPredicate predicateWithFormat:@"SUBQUERY(selectedByUser,$x,$x.user_id == %@).@count &gt; 0", [[Shared getLoginUserIdElseZero] toNSNumber]];      NSLog(@"todo Predicate -- %@",predicate);     [fetchRequest setPredicate:predicate];      //    NSSortDescriptor *sort = [[NSSortDescriptor alloc] initWithKey:@"localOrderNo" ascending:YES];     NSSortDescriptor *sort2 = [[NSSortDescriptor alloc] initWithKey:@"todoFavoritesOrderNo" ascending:YES];      [fetchRequest setSortDescriptors:@[sort2]];     [fetchRequest setFetchBatchSize:20];      [NSFetchedResultsController deleteCacheWithName:kToDoCacheName];     NSFetchedResultsController *theFetchedResultsController =     [[NSFetchedResultsController alloc] initWithFetchRequest:fetchRequest                                         managedObjectContext:_managedObjectContext sectionNameKeyPath:nil                                                    cacheName:nil];      self.fetchedResultsController = theFetchedResultsController;     _fetchedResultsController.delegate = self;      return _fetchedResultsController; } </code></pre>  <p><a href="http://i.stack.imgur.com/iZHx7.png" rel="nofollow"><img src="http://i.stack.imgur.com/iZHx7.png" alt="enter image description here"></a></p>