<p>I am trying to develop an application that would detect litter on the beach and I seem to have a hard time detecting certain objects even after thresholding exposed the objects well ( some of the white blobs in "After Contours" window is not being detected by cv2.findContour ). </p>  <p>Original image: <a href="http://i.stack.imgur.com/hItFQ.jpg" rel="nofollow"><img src="http://i.stack.imgur.com/hItFQ.jpg" alt="enter image description here"></a></p>  <p>Results: <a href="http://i.stack.imgur.com/glMdk.jpg" rel="nofollow"><img src="http://i.stack.imgur.com/glMdk.jpg" alt="enter image description here"></a></p>  <p>For example, in the image, the blue cup on the left, the white cup on the right, the small white ruubbish in the center, and paper/bottle in the center left has all been detected by thresholding and are indicated as white blobs in a black background. </p>  <p>However, cv2.findContour and cv2.drawContour fails to recognize those particular white blobs and fail to draw a contour around them. I have been trying to find a way that could be the cause of this, but I could not come up with a reason it is happening, therefore unable to solve the issue.</p>  <p>Does anyone know why cv2.findContour is failing to detect those white blobs despite effective thresholding and how one would fix this issue?</p>  <p>Code:</p>  <pre><code>import cv2 import numpy as np from pyimagesearch import imutils from PIL import Image from time import time  def invert_img(img):     img = (255-img)     return img  time_1 = time()  roi = cv2.imread('images/beach_trash_3.jpg')  hsv = cv2.cvtColor(roi,cv2.COLOR_BGR2HSV)  target = cv2.imread('images/beach_trash_3.jpg') target = imutils.resize(target, height = 400)  hsvt = cv2.cvtColor(target,cv2.COLOR_BGR2HSV)  img_height = target.shape[0] img_width = target.shape[1]  # calculating object histogram roihist = cv2.calcHist([hsv],[0, 1], None, [180, 256], [0, 180, 0, 256] )  # normalize histogram and apply backprojection cv2.normalize(roihist,roihist,0,255,cv2.NORM_MINMAX) dst = cv2.calcBackProject([hsvt],[0,1],roihist,[0,180,0,256],1)  # Now convolute with circular disc disc = cv2.getStructuringElement(cv2.MORPH_ELLIPSE,(5,5)) cv2.filter2D(dst,-1,disc,dst)  # threshold and binary AND ret,thresh = cv2.threshold(dst,50,255,0) thresh_one = thresh.copy() thresh = cv2.merge((thresh,thresh,thresh)) res = cv2.bitwise_and(target,thresh)   # Implementing morphological erosion &amp; dilation kernel = np.ones((9,9),np.uint8) thresh_one = cv2.erode(thresh_one, kernel, iterations = 1) thresh_one = cv2.dilate(thresh_one, kernel, iterations=1)   # Invert the image thresh_one = invert_img(thresh_one)  # To show prev img  #res = np.vstack((target,thresh,res)) #cv2.imwrite('res.jpg',res)  #cv2.waitKey(0)   cv2.imshow('Before contours', thresh_one)  # Code to draw the contours contours, hierarchy = cv2.findContours(thresh_one,cv2.RETR_TREE,cv2.CHAIN_APPROX_SIMPLE) cnts = sorted(contours, key = cv2.contourArea, reverse = True)[:5]  cv2.drawContours(target, cnts, -1,(0,255,0),2) print time() - time_1  res = imutils.resize(thresh_one, height = 700)  cv2.imshow('After contours', thresh_one) cv2.imshow('All contours', target)  cv2.waitKey(0) </code></pre>