<p>I am trying to write a program that takes a binary image and uses the sequential labeling algorithm to label each object and then color them a shade a gray different from each other.  </p>  <p>I believe my program is differentiating alright, but it does not color them different colors.  I am using the union/find algorithm to combine labels.</p>  <p>Any help would be great:</p>  <pre><code>#include "Image.h" #include "Image.cpp" #include "Pgm.cpp" #include "DisjSets.h" #include "DisjSets.cpp" #include &lt;stdlib.h&gt; #include &lt;stdio.h&gt; #include &lt;iostream&gt; using namespace std;  int main(int argc, char **argv){   if(argc != 3){     std::cout &lt;&lt; "Use as p2 &lt;input image&gt; &lt;output image name&gt;" &lt;&lt; std::endl;     return 0;   }    Image *im;   im = new Image;    if(readImage(im, argv[1]) != 0){     cout &lt;&lt; "File " &lt;&lt; argv[1] &lt;&lt; " could not be opened." &lt;&lt; endl;     return 0;   }    int labels[im-&gt;getNRows()][im-&gt;getNCols()];   int linked[im-&gt;getNRows()];    for(int x = 0; x &lt; im-&gt;getNRows(); x++){     for(int y = 0; y &lt; im-&gt;getNCols(); y++){       labels[x][y] = 0; //fill the labels array       linked[x] = 0;     }   }    int current_label = 1;    DisjSets *disj;   disj = new DisjSets(im-&gt;getNRows());    int rows = im-&gt;getNRows();   int cols = im-&gt;getNCols();    for(int r = 0; r &lt; rows; r++)     for(int c = 0; c &lt; cols; c++){       if(r-1&lt;0 || c-1&lt;0){         r++;         c++;         continue;       }       if(im-&gt;getPixel(r,c) == 1){         if(im-&gt;getPixel(r-1, c) == 0 &amp;&amp; im-&gt;getPixel(r, c-1) == 0) {           if(labels[r][c] == 0 &amp;&amp; labels[r-1][c] == 0 &amp;&amp; labels[r][c-1] == 0){           linked[current_label] = current_label;           labels[r][c] = current_label;           current_label += 1;         }         }else{         if((im-&gt;getPixel(r-1, c) == 1) &amp;&amp; im-&gt;getPixel(r, c-1) == 0){           labels[r][c] = labels[r-1][c];         }         else if((im-&gt;getPixel(r-1, c) == 0) &amp;&amp; im-&gt;getPixel(r, c-1) == 1){           labels[r][c] = labels[r][c-1];         }         else if((im-&gt;getPixel(r-1, c) == 1) &amp;&amp; im-&gt;getPixel(r, c-1) == 1){           if(labels[r-1][c] == labels[r][c-1] &amp;&amp; labels[r-1][c] != 0 &amp;&amp; labels[r][c-1] != 0){             labels[r][c] = labels[r-1][c];           } else {               if(labels[r][c-1] &lt; labels[r-1][c] &amp;&amp; labels[r-1][c] != 0 &amp;&amp; labels[r][c-1] != 0){                 labels[r][c] = labels[r][c-1];                 linked[labels[r][c]] = disj-&gt;unionSets(linked[labels[r][c]], labels[r-1][c]);             } else if(labels[r][c-1] &gt; labels[r-1][c] &amp;&amp; labels[r-1][c] != 0 &amp;&amp; labels[r][c-1] != 0){               labels[r][c] = labels[r-1][c];               linked[labels[r][c]] = disj-&gt;unionSets(linked[labels[r][c]], labels[r][c-1]);           }         }       }     }   } }         for(int r = 0; r &lt; im-&gt;getNRows(); r++){         for(int c = 0; c &lt; im-&gt;getNCols(); c++){           if(labels[r][c] != labels[r+1][c+1] &amp;&amp; labels[r][c] != labels[r+1][c] &amp;&amp; labels[r][c+1])             cout &lt;&lt; labels[r][c] &lt;&lt; " ";           if(im-&gt;getPixel(r,c) == 1){             labels[r][c] = disj-&gt;find(linked[labels[r][c]]);             if(labels[r][c] &lt; 30){               im-&gt;setPixel(r,c,1);             } else if(labels[r][c] &gt; 30)               im-&gt;setPixel(r,c,2);           }          }       }      if(writeImage(im, argv[2]) != 0){     cout &lt;&lt; "Cannot write to file: " &lt;&lt; argv[2] &lt;&lt; endl;     return 0;   }    return 0; } </code></pre>  <p>EDIT: Ok so it turns out, if I print my labels array, all of my labels are 0.  Can someone explain why this is happening?</p>  <p>EDIT2: I fixed it so that I fill the labels array, but I am not sure how to go about doing the pixel color changing. Also updated the code</p>