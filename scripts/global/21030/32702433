<p>I'm trying to use the ORB keypoint detector and it seems to be returning much fewer points than the SIFT detector and the FAST detector. </p>  <p>This image shows the keypoints found by the ORB detector:</p>  <p><a href="http://i.stack.imgur.com/dYd3d.jpg" rel="nofollow"><img src="http://i.stack.imgur.com/dYd3d.jpg" alt="enter image description here"></a></p>  <p>and this image shows the keypoints found by the SIFT detection stage (FAST returns a similar number of points). </p>  <p><a href="http://i.stack.imgur.com/e6eih.jpg" rel="nofollow"><img src="http://i.stack.imgur.com/e6eih.jpg" alt="enter image description here"></a></p>  <p>Having such few points is resulting in very poor feature matching results across images. I'm just curious about the detection stage of ORB right now though because this seems like I'm getting incorrect results. I've tried using the ORB detector with default parameters and also custom parameters detailed below as well. </p>  <p>Why such a big difference?</p>  <p>Code:</p>  <pre><code>orb = cv2.ORB_create(edgeThreshold=15, patchSize=31, nlevels=8, fastThreshold=20, scaleFactor=1.2, WTA_K=2,scoreType=cv2.ORB_HARRIS_SCORE, firstLevel=0, nfeatures=500) #orb = cv2.ORB_create() kp2 = orb.detect(img2) img2_kp = cv2.drawKeypoints(img2, kp2, None, color=(0,255,0), \         flags=cv2.DrawMatchesFlags_DEFAULT)  plt.figure() plt.imshow(img2_kp) plt.show() </code></pre>