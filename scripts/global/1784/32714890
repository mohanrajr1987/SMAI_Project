<p><strong>I am trying to append a angular directive inside HTML so that PhantomJS creates the HTML and PDF output.</strong></p>  <p>The snippet is below:</p>  <p><strong>Code where I am trying to append Angular directive is below:</strong></p>  <pre><code>function drawWidget(widgets) {  for(var i = 0; i &lt; widgets.length; i++) {     var iDiv = document.createElement('div');     var att = document.createAttribute("data-ss-colspan");     iDiv.className = "widget_box";     iDiv.id = "graphId" + i;     iDiv.innerHTML = '&lt;div class="col-md-12 col-sm-12 head_categories"&gt;\                         &lt;span&gt;' + widgets[i]["widgetTitle"] + '&lt;/span&gt;\                         &lt;span class="pull-right menu_categori"&gt;&lt;/span&gt;\                      &lt;/div&gt;\                      &lt;div style="clear:both;"&gt;&lt;/div&gt;';     att.value = widgets[i]["widgetSize"].toString();                                        // Set the value of the class attribute     iDiv.setAttributeNode(att);      document.getElementById('widget_container').appendChild(iDiv);     //var chartDiv = document.createElement('editor');        document.getElementById(iDiv.id).append(angular.element('#widget_container').                     scope().getChartElement(widgets, i));  } } </code></pre>  <p><strong>My Angular directive seems to be as shown below:</strong></p>  <pre><code>angular.module('app',[]).directive("editor", function(){   return {     require: "?ngModel",     scope: true,     controller: 'ChartController',     template: "&lt;input ng-model='value' ng-change='onChange()'&gt;",     link: function(scope, element, attrs, ngModel) {         if (!ngModel) return;         scope.onChange = function(){             ngModel.$setViewValue(scope.value);         };          ngModel.$render = function(){             scope.value = ngModel.$modelValue;         };     } }; }); </code></pre>  <p><strong>The get ChartElement code is below:</strong></p>  <pre><code>(function(){  'use strict'  angular.module('app').controller('ChartController', chartController);  chartController.$inject = ['$scope', '$compile'];  function chartController($scope, $compile) {      $scope.getChartElement = function(widgets, i) {         $scope.id = "graphId" + i;         $scope.data = widgets[i]["chart_data"]["data"];          /*var elementString ='&lt;line-graph graph-id="id" graph-data="data" ' + ' width="' + widgets[i]["chart_data"]["divWidth"] + '" height="' + widgets[i]["chart_height"] +              '" colors="' + widgets[i]["chart_data"]["colors"] +               '" interval="' + widgets[i]["chart_data"]["interval"] + '"&gt;&lt;/line-graph&gt;';*/         var elementString ='&lt;editor ng-model="abc" minlength="3"&gt;&lt;/editor&gt;';         console.log("Element String : " + elementString);         return elementString;     }; };   })(); </code></pre>