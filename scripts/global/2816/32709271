<p>We are developing an application that will store approximatly 5TB of data.</p>  <p>Following criteria are important</p>  <ul> <li>Flexible scheme</li> <li>Read performance</li> <li>Data scalability</li> <li>Maturity</li> </ul>  <p>There will not be a huge user load on the db, total userbase of approx 1000 user and 50 concurrent.</p>  <p>Raw data from scanning consoles will be added and used for analyzation. This data structure may vary in time as new measurement metrics can be added.</p>  <p>The main table that will be queried and will contain the bulk of the data will consist of following columns</p>  <ul> <li>CustomerId</li> <li>ConsoleId</li> <li>RunId</li> <li>ConsoleTypeId</li> <li>Timestamp</li> <li>multiple measurement columns</li> </ul>  <p>Queries will not be very complex and required retrieved by CustomerId, ConsoleId, RunId, ConsoleTypeId.</p>  <p>The retieved data will then be passed and analyzed by <code>TIBCO SpotFire</code></p>  <p>We are considering following databases</p>  <ul> <li>RavenDb</li> <li>MongoDb</li> <li>CouchDb</li> <li>Cassandra</li> </ul>  <p>They all seem to fit the requirement. Perhaps Cassandra is not as flexible since the columns have to be defined and you cannot store entities with different columns/properties in the same table.</p>  <p>What would be the best option in this scenario?</p>