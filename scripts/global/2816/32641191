<p>I am trying something similar to <a href="http://stackoverflow.com/questions/6084741/merge-view-collation-into-useful-output-in-couchdb">“merge” view collation into useful output in CouchDB</a> but in Cloudant. A <em>vehicle</em> document can have many <em>bookings</em>. What I would like to do is be able to retrieve a single vehicle document with all the bookings in it as some structure so I can query all the vehicles with their bookings in one go. My data is as follows,</p>  <pre><code> {"total_rows":4,"offset":0,"rows":[ {"id":"vehicle:5cfefcc8108dcaaa65f4296b8549b41e","key":["vehicle:5cfefcc8108dcaaa65f4296b8549b41e",0],"value":"vehicle"}, {"id":"booking:0a4555d03043d4e9ded5a8660c3cda20","key":["vehicle:5cfefcc8108dcaaa65f4296b8549b41e",1],"value":"booking"}, {"id":"booking:7a853d9b-db46-4f21-aa42-64b9f2b92f84","key":["vehicle:5cfefcc8108dcaaa65f4296b8549b41e",1],"value":"booking"}, {"id":"vehicle:6637","key":["vehicle:6637",0],"value":"vehicle"} ]} </code></pre>  <p>which is from the map function,</p>  <pre><code>function (doc) {      if (doc.doctype == 'vehicle') {         emit([doc._id,0], 'vehicle' );      } else if (doc.doctype == 'booking') {         emit([doc.vehicleId,1], 'booking');      } } </code></pre>  <p>Is this even possible? I need a reduce function? It looks like it is possible with CouchDB but not in Cloudant? I've been trying to use CouchDB documentation to fill in the blanks but I'm having no luck.</p>  <p>The only other way I can think of would be for every <em>booking</em> , emit the <em>vehicle</em> document _id which would retrieve the document and search like that.</p>  <p>Advice welcome, thanks.</p>  <p><strong>Edit:</strong></p>  <p>Moving in the right direction I think, changed the map function to,</p>  <pre><code>function (doc) {  if (doc.doctype == 'vehicle') {     emit(doc._id, 'vehicle');  } else if (doc.doctype == 'booking') {    emit(doc.vehicleId, doc);  } </code></pre>  <p>}</p>  <p>and the reduce function to,</p>  <pre><code>function (keys, values, rereduce) {   var myKeys = [];   if (!rereduce)   {     for (var i = 0; i &lt; keys.length; i++)     {       myKeys.push(keys[i]);     }     values.myKeys = myKeys;     return values;   }   else   {     return values;   } } </code></pre>  <p>Still confused by the nested depth of the output :/</p>  <p><strong>Edit - Sample Data</strong></p>  <pre><code>    {   "_id": "vehicle:5cfefcc8108dcaaa65f4296b8549b41e",   "name": "vehicleNamehere",   "userId": "usr_0vDoLOPoalZVtWdAsv1GHk",   "doctype": "vehicle",   "location": {     "geometry": {       "coordinates": [         -71.05987446,         42.28339928       ],       "type": "Point"     }   } }  {   "_id": "booking:0a4555d03043d4e9ded5a8660c3cda20",   "state": "provisional",   "vehicleId": "vehicle:5cfefcc8108dcaaa65f4296b8549b41e",   "userId": "usr_0vDoLOPoalZVtWdAsv1GHk",   "hirerId": "usr_xxxxxxxxx",   "startDate": "2015-07-18T20:59:33.550Z",   "endDate": "2015-07-21T20:59:33.550Z",    "doctype": "booking" } </code></pre>