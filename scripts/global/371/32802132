<p>I'm doing a <a href="http://emacs-doctor.com/learn-emacs-lisp-in-15-minutes.html" rel="nofollow">tutorial</a> on emacs lisp, and it's talking about the <code>let</code> function.</p>  <pre><code>;; You can bind a value to a local variable with `let': (let ((local-name "you"))   (switch-to-buffer-other-window "*test*")   (erase-buffer)   (hello local-name)   (other-window 1)) </code></pre>  <p>I don't understand the role of the double parentheses after <code>let</code> in the first line. What are they doing that a single set wouldn't do? Running that section without them, I get an error: <code>Wrong type argument: listp, "you"</code>. </p>