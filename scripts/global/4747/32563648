<p>Consider the following initialization:</p>  <pre><code>std::string falseString = false; std::string trueString = true; </code></pre>  <p>With <code>g++ 5.2.0</code>, compiler throws a warning for <code>falseString</code>, while an error for <code>trueString</code>.</p>  <p>With <code>clang++ 3.6 -std=c++11</code>, compiler throws error for both <code>falseString</code> as well as <code>trueString</code>.</p>  <p>Q1) Why the different behavior with <code>gcc</code> even though both initialization values are of the same type (<code>bool</code>)?</p>  <p>Q2) Which compiler is correct and why? What does the standard say?</p>  <p>EDIT:</p>  <blockquote>   <p>error: no viable conversion from 'bool' to 'std::string' (aka   'basic_string')</p>      <p>warning: converting 'false' to pointer type for argument 1 of   'std::__cxx11::basic_string&lt;_CharT, _Traits,   _Alloc>::basic_string(const _CharT*, const _Alloc&amp;) [with _CharT = char; _Traits = std::char_traits; _Alloc = std::allocator]'   [-Wconversion-null]</p> </blockquote>