<p>Suppose I have the following files which I compiled with <code>g++ -c *.cpp &amp;&amp; g++ *.o -o main</code></p>  <p><strong>main.cpp</strong></p>  <pre><code>#include &lt;iostream&gt; #include "MemoryCell.h"  int main() {     MemoryCell&lt;int&gt; x;     return 0; } </code></pre>  <p><strong>MemoryCell.h</strong></p>  <pre><code>#pragma once  template&lt;class T&gt; class MemoryCell {     public:         explicit MemoryCell();      private:         T storedValue; } </code></pre>  <p><strong>MemoryCell.cpp</strong></p>  <pre><code>#include "MemoryCell.h"  template &lt;class T&gt; MemoryCell&lt;T&gt;::MemoryCell() { } </code></pre>  <p>The compiler gives the error ''undefined reference to MemoryCell::MemoryCell()'' but if I change <strong>main.cpp</strong> to <code>#include "MemoryCell.cpp"</code>, the program compiles properly. I'm wondering why this is, and how I could get my program to work by using <code>#include "MemoryCell.h"</code>.</p>