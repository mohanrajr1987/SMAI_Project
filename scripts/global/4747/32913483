<p>After reading <a href="http://embeddedgurus.com/state-space/2014/02/are-we-shooting-ourselves-in-the-foot-with-stack-overflow/" rel="nofollow">this Embedded Gurus article</a> about stack overflow, I'm interested in reversing the order of static RAM and the stack in an embedded (bare-metal ARM) project.  See the following diagram:</p>  <p><img src="http://i.stack.imgur.com/l0FHE.png" alt="stack ordering diagram"></p>  <p><strong>Current:</strong> All static RAM data is placed into the overall RAM section.  The "Start of Stack" address is fixed at the highest RAM address and provided as a linker-defined symbol.</p>  <p><strong>Reversed:</strong> This would be simple if the "Static Variables" section were of fixed size but the size changes as variables are added/removed.  What I would like to do is place all the static RAM data into the end of RAM and then determine where the stack should start based on the size of the static RAM data.  That "Start of Stack" address would then be provided as a linker-defined symbol.</p>  <p>Is there a way to have a section of variable size to hold static RAM data at the end of the overall RAM section?  If not, how could this reversal be implemented without requiring a fixed-size section for static RAM data?</p>