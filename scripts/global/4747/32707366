<p>New to C++ and working on a personal project, but having issues passing by reference with a vector list. </p>  <p>I need a function I can call to add a user to a running vector list of users. Where the first parameter is the list I'm adding to (by reference) and the second being the name of the new user. </p>  <p>Maybe my understanding of lvalues and rvalues are wrong... but how is user_list not an lvalue? It's explicitly defined above?</p>  <p>Error I'm getting is: </p>  <pre><code>error: invalid initialization of non-const reference of type 'std::vector&lt;User*&gt;&amp;' from an rvalue of type 'std::vector&lt;User*&gt;*'      User *current_user = add_user(&amp;user_list, "Default User");                                                              ^ ..\src\main.cpp:8:7: error: in passing argument 1 of 'User* add_user(std::vector&lt;User*&gt;&amp;, std::string)'  User *add_user(vector&lt;User *&gt; &amp;user_list, string name); </code></pre>  <p>Code in Question:</p>    <pre class="lang-c++ prettyprint-override"><code>#include &lt;iostream&gt; #include &lt;vector&gt;  #include "User.h"  using namespace std;  User *add_user(vector&lt;User *&gt; &amp;user_list, string name);  int main() {     vector&lt;User *&gt; user_list;     User *current_user = add_user(&amp;user_list, "Default User");      cout &lt;&lt; current_user-&gt;name;     current_user-&gt;add_friend(new User("Second"));     return 0; }   User *add_user(vector&lt;User *&gt; &amp;user_list, string name) {     user_list.push_back(new User(name));     return user_list.at(user_list.end()); } </code></pre>