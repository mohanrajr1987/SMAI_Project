<p>I'm trying to use <a href="http://glm.g-truc.net/0.9.7/index.html" rel="nofollow">GLM</a> for a game project, but when compiling with g++ and -std=c++11, I'm getting a lot of compile errors.</p>  <p>This is the code I'm trying to compile: (taken from <a href="http://www.cis.gvsu.edu/~dulimarh/Okto/cis367/" rel="nofollow">here</a>)</p>  <pre><code>#include "glm/vec3.hpp" #include "glm/gtx/io.hpp" #include &lt;iostream&gt;  using namespace std; using glm::vec3;  int main () {     vec3 i_am_zero;      cout &lt;&lt; i_am_zero &lt;&lt; endl;     return 0; } </code></pre>  <p>My command line:</p>  <pre><code>g++ -std=c++11 test.cpp -o test.exe </code></pre>  <p>The compiler output:</p>  <pre><code>In file included from glm/gtx/../detail/func_trigonometric.hpp:205:0,                  from glm/gtx/../trigonometric.hpp:35,                  from glm/gtx/../glm.hpp:110,                  from glm/gtx/io.hpp:50,                  from glmtest.cpp:2: glm/gtx/../detail/func_trigonometric.inl:166:14: error: 'std::asinh' has not been declared    using std::asinh;               ^ In file included from glm/gtx/../detail/func_trigonometric.hpp:205:0,                  from glm/gtx/../trigonometric.hpp:35,                  from glm/gtx/../glm.hpp:110,                  from glm/gtx/io.hpp:50,                  from glmtest.cpp:2: glm/gtx/../detail/func_trigonometric.inl:185:14: error: 'std::acosh' has not been declared    using std::acosh;               ^ glm/gtx/../detail/func_trigonometric.inl:206:14: error: 'std::atanh' has not been declared    using std::atanh;               ^ In file included from glm/gtx/../detail/func_exponential.hpp:132:0,                  from glm/gtx/../exponential.hpp:35,                  from glm/gtx/../glm.hpp:111,                  from glm/gtx/io.hpp:50,                  from glmtest.cpp:2: glm/gtx/../detail/func_exponential.inl:43:14: error: 'std::log2' has not been declared    using std::log2;               ^ In file included from glm/gtx/../detail/func_common.hpp:455:0,                  from glm/gtx/../common.hpp:35,                  from glm/gtx/../glm.hpp:112,                  from glm/gtx/io.hpp:50,                  from glmtest.cpp:2: glm/gtx/../detail/func_common.inl:229:16: error: 'std::trunc' has not been declared    using ::std::trunc;                 ^ glm/gtx/../detail/func_common.inl:248:16: error: 'std::round' has not been declared    using ::std::round;                 ^ glm/gtx/../detail/func_common.inl: In instantiation of 'vecType&lt;T, P&gt; glm::round(const vecType&lt;T, P&gt;&amp;) [with T = float; glm::precision P = (glm::precision)0u; vecType = glm::tvec2]': glm/gtx/../detail/func_packing.inl:47:55:   required from here glm/gtx/../detail/func_common.inl:262:59: error: no matching function for call to 'glm::detail::functor1&lt;float, float, (glm::precision)0u, glm::tvec2&gt;::call(&lt;unresolved overloaded function type&gt;, const glm::tvec2&lt;float, (glm::precision)0u&gt;&amp;)'    return detail::functor1&lt;T, T, P, vecType&gt;::call(round, x);                                                            ^ glm/gtx/../detail/func_common.inl:262:59: note: candidate is: In file included from glm/gtx/../detail/func_trigonometric.inl:33:0,                  from glm/gtx/../detail/func_trigonometric.hpp:205,                  from glm/gtx/../trigonometric.hpp:35,                  from glm/gtx/../glm.hpp:110,                  from glm/gtx/io.hpp:50,                  from glmtest.cpp:2: glm/gtx/../detail/_vectorize.hpp:58:41: note: static glm::tvec2&lt;R, P&gt; glm::detail::functor1&lt;R, T, P, glm::tvec2&gt;::call(R (*)(T), const glm::tvec2&lt;T, P&gt;&amp;) [with R = float; T = float; glm::precision P = (glm::precision)0u]    GLM_FUNC_QUALIFIER static tvec2&lt;R, P&gt; call(R (*Func) (T x), tvec2&lt;T, P&gt; const &amp; v)                                          ^ glm/gtx/../detail/_vectorize.hpp:58:41: note:   no known conversion for argument 1 from '&lt;unresolved overloaded function type&gt;' to 'float (*)(float)' In file included from glm/gtx/../detail/func_common.hpp:455:0,                  from glm/gtx/../common.hpp:35,                  from glm/gtx/../glm.hpp:112,                  from glm/gtx/io.hpp:50,                  from glmtest.cpp:2: glm/gtx/../detail/func_common.inl: In instantiation of 'vecType&lt;T, P&gt; glm::round(const vecType&lt;T, P&gt;&amp;) [with T = float; glm::precision P = (glm::precision)0u; vecType = glm::tvec4]': glm/gtx/../detail/func_packing.inl:105:52:   required from here glm/gtx/../detail/func_common.inl:262:59: error: no matching function for call to 'glm::detail::functor1&lt;float, float, (glm::precision)0u, glm::tvec4&gt;::call(&lt;unresolved overloaded function type&gt;, const glm::tvec4&lt;float, (glm::precision)0u&gt;&amp;)'    return detail::functor1&lt;T, T, P, vecType&gt;::call(round, x);                                                            ^ glm/gtx/../detail/func_common.inl:262:59: note: candidate is: In file included from glm/gtx/../detail/func_trigonometric.inl:33:0,                  from glm/gtx/../detail/func_trigonometric.hpp:205,                  from glm/gtx/../trigonometric.hpp:35,                  from glm/gtx/../glm.hpp:110,                  from glm/gtx/io.hpp:50,                  from glmtest.cpp:2: glm/gtx/../detail/_vectorize.hpp:76:41: note: static glm::tvec4&lt;R, P&gt; glm::detail::functor1&lt;R, T, P, glm::tvec4&gt;::call(R (*)(T), const glm::tvec4&lt;T, P&gt;&amp;) [with R = float; T = float; glm::precision P = (glm::precision)0u]    GLM_FUNC_QUALIFIER static tvec4&lt;R, P&gt; call(R (*Func) (T x), tvec4&lt;T, P&gt; const &amp; v)                                          ^ glm/gtx/../detail/_vectorize.hpp:76:41: note:   no known conversion for argument 1 from '&lt;unresolved overloaded function type&gt;' to 'float (*)(float)' </code></pre>  <p>It appears that it can't find some functions from cmath - but these errors still remain if I include cmath before I include glm.</p>  <p>Any advice?</p>