<p>I have a problem with 2NF and I have been unable to solve it by using Google. It is making me crazy because I am a teacher and I don't want to teach wrong stuff to my students. </p>  <p>Let's have a table with 5 fields.</p>  <p><em>Gradings = {StudentName, SubjectCode, SubjectName, #Exam, Grade}</em></p>  <p>Dependencies are this way:</p>  <p><em>StudentName, SubjectCode, #Exam -> Grade</em></p>  <p><em>SubjectCode -> SubjectName</em></p>  <p><em>SubjectName -> SubjectCode</em></p>  <p>Therefore, candidate key 1 is <em>{StudentName, SubjectCode, #Exam}</em> and candidate key 2 is <em>{StudentName, SubjectName, #Exam}</em>. </p>  <p>Prime attributes are <em>{StudentName, SubjectCode, SubjectName, #Exam}</em> and non-prime attributes is <em>Grade</em></p>  <p>According to the definition of second normal form, a non-prime attribute cannot depend on a part of a candidate key. The only non-prime attribute (Grade) does not depend on a part of a candidate key so this table seems in 2NF .</p>  <p>The problem is that I think something is amiss (and I could be wrong). I think subjects should have their own table. </p>  <p><em>Gradings = {StudentName, Subject Code, #Exam, Grade}</em></p>  <p><em>Subjects = {Subject Code, SubjectName}</em></p>  <p>But 2NF does not produce this. 3NF is about dependencies between non-prime attributes so it does not produce this either. But it seems to me that this is the right outcome, because it has no redundancy.</p>  <p>I guess if non-prime attribute was defined as "attribute that is not a candidate key", 2NF would produce the desired result. But I have checked this again and again and non-prime attribute is defined as "attribute that does not BELONG to a candidate key".</p>  <p>What am I doing wrong? I feel like I am beating my head against a wall.</p>  <p>Thank you in advance.</p>