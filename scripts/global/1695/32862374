<p><em>I'm using a very stripped down example here so please ask if you need more context.</em></p>  <p>I'm in the process of restructuring/normalising a database where the ID fields in the majority of the tables have primary key fields which are auto-incremented numerical ID's (1,2,3 etc.) and I'm thinking I need to change the ID field from a numerical value to a string value generated from data in the row.</p>  <p>My reasoning for this is as follows:</p>  <p>I have 5 tables; Staff, Members, Volunteers, Interns and Students; all of these have numeric ID's.</p>  <p>I have another table called <code>BuildingAttendance</code> which logs when people visited the premises and for what reason which has the following relevant fields:</p>  <pre><code>ID    Type    Premises    Attended </code></pre>  <p>To differentiate between staff and members. I use the type field, using MEM for member and STA for staff, etc. So as an example:</p>  <pre><code>ID    Type    Premises      Attended 1     MEM     Building A    27/6/15 1     STA     Building A    27/6/15 2     STU     Building B    27/6/15 </code></pre>  <p>I'm thinking it might be a better design design to use an ID similar to the following:</p>  <pre><code>ID       Premises      Attended MEM1     Building A    27/6/15 STA1     Building A    27/6/15 STU2     Building B    27/6/15 </code></pre>  <p>What would be the best way to deal with this? I know that if my primary key is a string my query performance may take a hit, but is this easier than having 2 columns?</p>  <p>tl;dr - How should I deal a table that references records from other tables with the same ID system?</p>