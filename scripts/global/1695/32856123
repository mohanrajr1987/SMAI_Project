<p>We have a table with three columns, <code>StudentId</code> and <code>SubjectId</code> and <code>Active</code> (and a few other columns but not related to this question). </p>  <p><code>Active</code> column indicates whether the record is active or not(we set this <code>Active</code> column to zero if someone deletes the records from UI)</p>  <p>Definition of the index on columns <code>StudentId</code> and <code>SubjectId</code> is as below:</p>  <pre><code>CREATE UNIQUE NONCLUSTERED INDEX [UQ_StudentSubject_SubjectId_StudentId]   ON [dbo].[StudentSubject] (     [StudentId] ASC,     [SubjectId] ASC  )WITH(     PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB =  OFF,          IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS =  ON,           ALLOW_PAGE_LOCKS = ON ) ON [PRIMARY]  GO </code></pre>  <p>From our application, if we try to insert another record with the combination of this <code>SubjectId</code> and <code>studentId</code> the insert is failing and Java is throwing below error:</p>  <blockquote>   <p>Caused by: com.microsoft.sqlserver.jdbc.SQLServerException: Cannot   insert duplicate key row in object 'dbo.StudentSubject' with unique   index 'UQ_StudentSubject_SubjectId_StudentId'. The duplicate key value   is (113460, 182).</p> </blockquote>  <p>The record with combination 113460, 182 is having Active as zero so, we are trying to insert new record instead of setting Active flag to 1.</p>  <p>Is there any way we can ignore this index while inserting if we insert a new record with the existing combination of subjectId and studentId have <code>Active</code> column as zero?</p>  <p><strong>EDIT</strong> Sorry for the confusion, It is an index NOT a constraint. </p>