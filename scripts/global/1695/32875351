<p>I'm working on a web app and I have to design it's database. There's a part that didn't come very straightforward to me, so after some thinking and research I came with multiple ideas. Still neither seems completely suitable, so I'm not sure which one to implement and why.</p>  <p>The simplified problem looks as follows: I have a table Teacher. There are 2 types of teachers, according to the relations with their Fields and Subjects:</p>  <ol> <li>A Teacher that's related to a Field, the Field is obligatory related to a Category </li> <li>A Teacher that's not related to a Field, but directly to a Category</li> </ol>  <p>My initial idea was to have two nullable foreign keys, one to the table Field, and the other to the table Category. But in this case, how can I make sure that exactly one is null, and the other one is not?</p>  <p>The other idea is to create a hierarchy, with two types of Teacher tables derived from the table Teacher (is-a relation), but I couldn't find any useful tutorial on this.</p>  <p>I'm developing the app using Django with SQLite db</p>