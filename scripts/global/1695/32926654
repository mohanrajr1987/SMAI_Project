<p>I’m building a hobby site about cars. If a user clicks on a car I want to display a list of similar cars for the chosen car.</p>  <p>I have a main table witch stores the basic information about each car, CarDataMain, two of the columns in the table are CarID (Pk) and SimilarCarsID (Fk). </p>  <p>I have another table called “SimilarCars”, it has three columns; SimilarCarsID (Pk), CarGroupID and CarID. </p>  <p>So the SimilarCarsID-column in the SimilarCars-table has a relationship with the column SimilarCarsID in the CarDataMain-table.</p>  <p>Is this the correct approach, or “best practice”? </p>  <p>Each car can only belong to one CarGroup (CarGroupID). </p>  <p>Another solution would be to create a third table witch holds the relationship between CarDataMain and SimilarCars-data, but as there is a one-to-many relationship I guess this is over kill? That way I could however put the same foreign key-value in CarDataMain for all cars witch belong to the same CarGroup, witch somehow feels appealing…</p>  <p>A third solution would be to skip the SimilarCarsID column in CarDataMain and make the CarID a foreign key in the SimilarCars table, if you understand what I mean. But I guess there are some drawbacks with that solution…</p>  <p>Sorry for newbie questions (and if this question has been up before), but I want to get it right before I start :)</p>  <p>Ludde</p>