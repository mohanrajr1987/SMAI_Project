<p>First i have to fetch the posts from database and then loop through it to get its comments and again i have to loop through every comments to get it likes!here now i am facing problem as i am fetching likes from database which goes asynchronous ! is there a way so that i can wait until every database records has been fetched and then i can response the data?</p>  <p>here is my code</p>  <pre><code>  attachCommentsLikes: function(req, res, next) {             if(req.cdata.success === 0) return next();              var cmnt = _.pluck(req.cdata.message.data, 'comments');             var postsComment = [];             _.forEach(cmnt, function(item, index) {                 postsComment[index] = _.pluck(item, 'id');             });              async.forEachOf(postsComment, function(item, index, cb) {                 anydb(req.user.database, 'discussion_comments_likes').inn({                     data: item,                     where: "comment_id"                 }, function(error, result) {                      item.forEach(function(commentId, indexOfCommentId) {                          var likes = _.where(result, {                             comment_id: commentId,                             status: 1                         }).length;                         req.cdata.message.data.forEach(function(current, indexOfPosts) {                             var indexOfComment = _.findIndex(current.comments, function(chr) {                                 return chr.id === commentId;                             });                             if (indexOfComment != -1) {                                 req.cdata.message.data[indexOfPosts].comments[indexOfComment].likes = likes;                                 if (_.where(result, {                                     comment_id: commentId,                                     status: 1,                                     liked_by: req.user.id                                 }).length) {                                     req.cdata.message.data[indexOfPosts].comments[indexOfComment].liked = 1;                                 }                             }                         });                       });                      if ((postsComment.length - 1) === index) {                         console.log(req.cdata.message.data)                         next();                     }                 });              }, function(item) {              });             // next();         }, </code></pre>  <p><strong>Update:</strong> i solved this problem by concating all comments id's in one array and fetched it one query instead of looping for every id's using sql's in function </p>  <pre><code>var allIds = [];             _.forEach(postsComment, function(item, index) {                 _.forEach(item, function(current) {                     allIds.push(current);                 });             }); </code></pre>