<p>I am trying to improve the performance of my table view which contains cells that load images from the web. I have so far changed the library that I'm using to one that caches the images, and this helps quite a bit, however it isn't quite perfect yet.</p>  <p>I was reading about moving the process onto a different thread, so I've been trying to implement this to improve performance further, however I haven't figured out how to write it in code.</p>  <p>At the moment (before the change), I have this:</p>  <pre><code>    cell.rideImageView.sd_setImageWithURL(NSURL(string: ride.rideImageSmall!), placeholderImage: UIImage(named: "Unloaded")) </code></pre>  <p>I tried changing it to something like this:</p>  <pre><code>    let priority = DISPATCH_QUEUE_PRIORITY_DEFAULT     dispatch_async(dispatch_get_global_queue(priority, 0)) {         SDWebImageManager.sharedManager().imageDownloader.downloadImageWithURL(NSURL(string: self.ride.rideImageSmall!), options: SDWebImageDownloaderOptions.HighPriority, progress: nil, completed: nil)         dispatch_async(dispatch_get_main_queue()) {             //         }     } </code></pre>  <p>but that's as far as I got, and I'm not sure it's right. If that is the correct way to do it, how do I actually set the image that's been downloaded? And if it's not, can someone show a better way of doing it?</p>  <p>Thanks.</p>