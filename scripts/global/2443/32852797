<p>Languages: Reactjs and vanilla JavaScript</p>  <p>The question is more of just a <strong>general JavaScript callback question</strong> but I'll add my React code to show how I ended up in this predicament. </p>  <p>Lets look,Tarantino style, at my confusing blunder:</p>  <p><strong>I'm trying to send a callback as a parameter of a success callback</strong></p>  <pre><code>navigator.geolocation.getCurrentPosition(success(dataLoaded), error, options);  </code></pre>  <p>but it didn't like because "pos" is suppose to be the "sole input parameter " for the success callback according to the <a href="https://developer.mozilla.org/en-US/docs/Web/API/Geolocation/getCurrentPosition" rel="nofollow">docs</a>.</p>  <p>Now lets rewind and figure out what got me into this mess:</p>  <p>I'm using a callback as a way of giving my React app the thumbs up that the asynchronous fetching is done and to render itself.</p>  <pre><code>onDataLoaded: function() {     this.setState({         postsLoaded: true,     });   },   componentDidMount: function(){     WebAPIUtils.fetchComponentData(this.onDataLoaded);   }, render: function() {     if(!this.state.postsLoaded){         return (&lt;div className="Loading"&gt;Loading...&lt;/div&gt;);     }     return (       &lt;div&gt;         //Components can be rendered now since their data is loaded.        &lt;/div&gt;     );   } </code></pre>  <p>Once the code below is successful I need to execute that callback:</p>  <pre><code>var options = {   enableHighAccuracy: true,   timeout: 5000,   maximumAge: 0 };  function success(pos) {   var crd = pos.coords;    console.log('Your current position is:');   console.log('Latitude : ' + crd.latitude);   console.log('Longitude: ' + crd.longitude);   console.log('More or less ' + crd.accuracy + ' meters.');   //Here I want to execute my callback to render. };  function error(err) {   console.warn('ERROR(' + err.code + '): ' + err.message); };  navigator.geolocation.getCurrentPosition(success, error, options); </code></pre>  <p>But geolocation.getCurrentPosition has <a href="https://developer.mozilla.org/en-US/docs/Web/API/Geolocation/getCurrentPosition" rel="nofollow">prescribed callbacks</a> and so it seems <strong>there is  no way of passing that callback as a parameter of the success callback</strong></p>  <p>Is there a way to pass that callback as an extra parameter of the success callback? A callback being sent as a parameter of a callback seems weird but forming my original callback to also handle the location logic outside of the location module feels tacky too. </p>