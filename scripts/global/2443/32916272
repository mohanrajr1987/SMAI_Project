<p>I am currently doing an API in Node.JS with the framework Sails.js. I am using promises for the first time and I have some troubles to sync my promises like I want.</p>  <p>My main function is the following : </p>  <pre><code>createCard: function(req, res) {     checkIfUserHasStripeAccount(req.user)         .then(addCreditCardToStripeAccount())         .then(function cardCreated() {             res.send(200, {                 msg: 'Card created'             });         })         .catch(function handleError(err) {             res.send(err.httpCode, err.msg);         }) }, </code></pre>  <p>Obviously I can't add a credit card to a stripe account if the user doesn't have one. </p>  <p>The function checkIfUserHasStripeAccount() checks if the account exists and if not, create it.</p>  <p>Here is the code for this part : </p>  <pre><code>function checkIfUserHasStripeAccount(user) {     var deferred = q.defer();      if (!user.idStripe) {         createStripeAccountToUser(user)             .then(function(savedUser) {                 deferred.resolve(savedUser);             })             .catch(function(err) {                 deferred.reject(err);             })     } else {         deferred.resolve(user);     }     return deferred.promise; }  function createStripeAccountToUser(user) {     var deferred = q.defer();      var jsonUserToCreate = {         description: user.firstname + ' ' + user.surname,         email: user.email     };      stripe.customers.create(jsonUserToCreate, function(err, customer) {         if (err) {             deferred.reject({                 httpCode: 500,                 msg: 'some error'             });         } else {             user.idStripe = customer.id;             user.save(function(err, savedUser) {                 if (err) {                     deferred.reject({                         httpCode: 500,                         msg: 'some error'                     });                 }                 deferred.resolve(savedUser);             });         }     });      return deferred.promise; } </code></pre>  <p>The problem is that the <code>.then(addCreditCardToStripeAccount())</code> is executed before <code>checkIfUserHasStripeAccount()</code> is finished. </p>  <p>I can't figure out why. I thought the <code>.then(addCreditCardToStripeAccount())</code> would only be executed if it received a reject or resolve.</p>