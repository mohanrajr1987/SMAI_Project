<p>I have two datasets; 1. a list containing about 4200 string elements and 2. a list containing about 119,000 string elements. I'm taking each element from list 1 and looping through each element in list 2 using the jaro-winkler algorithm to find a "good" match based on a desired confidence threshold. I know that this process will work, but it will take way too long. Does anyone have any suggestions on a better way to do this to speed the process up? </p>  <pre><code>def get_jw_match(data, target):     """Uses the jaro-winkler algorithm to match strings(names) from the   target(the set from which you want to find matches) to the data(the set for which you are trying to find matches."""     temp_list = []     for i, item_data in enumerate(target):         max = 0         temp_list.append(0)         for j, item_target in enumerate(data):             jw = jellyfish.jaro_winkler(item_data, item_target)             if (jw &gt; confidence):                 temp_list[i] = jw     return temp_list </code></pre>