<p>This is the issue I am having, Haven't been able to get around it. Now this happens while logging into the account. I haven't had this issue before til last night. <a href="http://i.stack.imgur.com/49xne.png" rel="nofollow"><img src="http://i.stack.imgur.com/49xne.png" alt="enter image description here"></a></p>  <p>Here is my users_controller.rb,</p>  <pre><code>class UsersController &lt; ApplicationController   before_action :set_user, only: [:edit, :update, :destroy]   before_action :correct_user,   only: [:edit ]    after_action :signed_in_after_register, only: :create     def index     @users = User.all     @user = User.find(session[:user_id])     if params[:search]         @users = User.search(params[:search]).order("created_at DESC")       else         @users = User.all.order('created_at DESC')       end   end    def dashboard      @user = User.find(session[:user_id]) unless session[:user_id] == ""     redirect_to login_path, notice: "You're not logged in" unless @user      @posts = @user.posts.order("created_at DESC").limit(3)     @comment = Comment.new      @post = Post.new    end     def newsfeed     @user = User.find(session[:user_id]) unless session[:user_id] == nil     redirect_to login_path, notice: "You're not logged in" unless @user      @posts = @user.posts.order("created_at DESC").limit(3)   end    def nav     @user = User.find(session[:user_id])   end   def posts     @user = User.find(session[:user_id])     @posts = @user.posts   end    def destroy     @user = User.find(session[:user_id]) unless session[:user_id] == ""     redirect_to login_path, notice: "You're not logged in" unless @user    end    def welcome     @user = User.find(params[:user_id]) unless session[:user_id] == ""     redirect_to login_path, notice: "You're not logged in" unless @user      @user = User.find(session[:user_id])   end   def show      @user = User.find(params[:user_id]) unless session[:user_id] == ""     redirect_to login_path, notice: "You're not logged in" unless @user      @posts = @user.posts.order("created_at DESC").limit(3)     @comment = Comment.new      @post = Post.new     end    def new     @user = User.new     @post = Post.new(params[:post_id])   end    def edit     @user = User.find(params[:user_id]) if params[:user_id]     redirect_to @dashboard_path unless @user   end    def create     @user = User.new(user_params)      respond_to do |format|       if @user.save         format.html { redirect_to dashboard_path, notice: 'User was successfully created!' }         format.json { render :profile, status: :created, location: @user }       else         format.html { render :new }         format.json { render json: @user.errors, status: :unprocessable_entity }       end     end   end    def update     if @user == current_user       respond_to do |format|         if @user.update(user_params)           format.html { redirect_to dashboard_path, notice: 'User was successfully updated.' }           format.json { render :profile, status: :ok, location: @user }         else           format.html { render :edit }           format.json { render json: @user.errors, status: :unprocessable_entity }         end       end     else       redirect_to dashboard_path, notice: 'You do not have permission to edit the profile of another user.'     end   end    def destroy     @user.destroy     respond_to do |format|       format.html { redirect_to users_url, notice: 'User was successfully destroyed.' }       format.json { head :no_content }     end   end    private     def set_user       @user = User.find(params[:id])     end     def correct_user       @user = User.find(params[:id]) unless session[:user_id] == ""      end     def signed_in_after_register        session[:user_id] = @user.id      end      def user_params       params.require(:user).permit(:first_name, :last_name, :bio, :comments, :password, :password_confirmation, :email, :age, :profile_picture, :post, :body)     end end </code></pre>  <p>Heres my comments _form.html.erb, </p>  <pre><code>&lt;%= form_for([@post, @comment]) do |f| %&gt;     &lt;p&gt;         &lt;%= f.text_area :body, placeholder: "Write a comment!" %&gt;     &lt;/p&gt;     &lt;br&gt;     &lt;p&gt; &lt;%= f.submit %&gt; &lt;/p&gt;  &lt;% end %&gt; </code></pre>  <p>And here is my routes.rb,</p>  <pre><code>Rails.application.routes.draw do    root 'welcome#welcome'    get 'login' =&gt; 'sessions#login', :as =&gt; :login     get 'dashboard' =&gt; 'users#dashboard', :as =&gt; :dashboard    post 'logging/user' =&gt; 'sessions#create'      get 'logout' =&gt; 'sessions#destroy', :as =&gt; :logout     get 'about' =&gt; 'about'    get 'newsfeed' =&gt; 'users#newsfeed'    resources :users, except: :show   get 'profile/:user_id' =&gt; 'users#show', as: :profile    get 'location' =&gt; 'location#location'     resources  :posts do     resources :comments   end    get 'index' =&gt; 'posts#index'    get 'register' =&gt; 'users#new', :as =&gt; :register  end </code></pre>  <p>If you guys do need to see anymore code then just let me know, I will post it! Thank you so much in advance!</p>