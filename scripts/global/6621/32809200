<p>I have a login/logout module in my django app (using DRF).</p>  <p>it works in token authentication - when user logs in he passes a username and a password and gets a token, that can be used forever. </p>  <p>(I save the token in my client app). when he logs out - I delete the token from the client app.</p>  <p>The problem I noticed is that when one client <strong>(android app)</strong> in logged in with <strong>user1</strong> for example (currently has the token that was achieved from the server), other clients <strong>can</strong> login as the same user (provide same username and password and get the token) - and now I have both clients logged in as <strong>user1</strong>.</p>  <p><strong>Here is the django code for getting the token:</strong></p>  <pre><code>class ObtainAuthTokenAndUser(APIView):     throttle_classes = ()     permission_classes = ()     parser_classes = (parsers.FormParser, parsers.MultiPartParser, parsers.JSONParser,)     renderer_classes = (renderers.JSONRenderer,)     serializer_class = AuthTokenSerializer      def post(self, request):         serializer = self.serializer_class(data=request.data)         serializer.is_valid(raise_exception=True)         user = serializer.validated_data['user']         token, created = Token.objects.get_or_create(user=user)         user_serializer = UserSerializer(user)         return Response({'token': token.key, 'user': user_serializer.data})  obtain_auth_token_and_user = ObtainAuthTokenAndUser.as_view() </code></pre>  <p><strong>What can I do in order to prevent this situation??</strong></p>  <p>In the case of another client tries to log in with a already logged in user - I want to send a "already logged in from another device" message and a 401 HTTP.</p>  <p>Any ideas about how to approach this?</p>