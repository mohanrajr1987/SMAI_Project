<p>Here is my form for my comments _form.html.erb:</p>  <pre><code>&lt;%= form_for([post, @comment]) do |f| %&gt;     &lt;p&gt;         &lt;%= f.text_area :body, placeholder: "Write a comment!" %&gt;     &lt;/p&gt;     &lt;br&gt;     &lt;p&gt; &lt;%= f.submit %&gt; &lt;/p&gt;  &lt;% end %&gt; </code></pre>  <p>and here is my posts form _form.html.erb:</p>  <pre><code>&lt;%= form_for @post, url: post_path(@post), method: :patch do |f| %&gt;         &lt;% if @post.errors.any? %&gt;           &lt;div id="errors"&gt;             &lt;h2&gt;&lt;%= pluralize(@post.errors.count, "Error") %&gt; Prevent this post from posting&lt;/h2&gt;             &lt;ul&gt;                 &lt;% @post.errors.full_messages.each do |msg| %&gt;                     &lt;li&gt;&lt;%= msg %&gt;&lt;/li&gt;                  &lt;% end %&gt;             &lt;/ul&gt;           &lt;/div&gt;         &lt;% end %&gt;         &lt;p&gt;              &lt;%= f.label :Edit_Post %&gt;&lt;br&gt;              &lt;%= f.text_area :body %&gt;         &lt;/p&gt;         &lt;p&gt;             &lt;%= f.submit  %&gt;         &lt;/p&gt;  &lt;% end %&gt; </code></pre>  <p>Here is my comments_controller.rb:</p>  <pre><code>class CommentsController &lt; ApplicationController     def create         @post = Post.find(params[:post_id])        @comment = @post.comments.build(params[:comment])        @comment.save        redirect_to @posts     end     def destroy         @user = User.find(session[:user_id])         @posts = Post.find(params[:post_id])         @comment = @post.comments.find(params[:id])         @comment.destroy         redirect_to post_path(@post)     end end </code></pre>  <p>And here is my posts_controller.rb:</p>  <pre><code>class PostsController &lt; ApplicationController     before_action :load_post, only: [:show, :edit, :update, :destroy]      def index         @user = User.find(session[:user_id])         @posts = Post.all     end     def welcome         @user = User.find(session[:user_id])         @posts = Post.order("created_at desc").limit(4).offset(1)         @signed_in_user = session[:user_id]     end     def posts         @user = User.find(session[:user_id]) unless session[:user_id] == nil         redirect_to login_path, notice: "You're not logged in" unless @user          @signed_in_user = session[:user_id]      end     def new          @post = Post.new         @user = User.find(session[:user_id])     end     def create          @user = User.find(session[:user_id])                 @post = Post.new(post_params)          @post.user_id = @signed_in_user          if  @post.save              redirect_to dashboard_path          else             render 'new'         end     end     def show         @user = User.find(session[:user_id])          @signed_in_user = session[:user_id]     end     def edit         @user = User.find(session[:user_id])     end       def update         if @post.update(post_params)             redirect_to @post, notice: "Your post has been updated!"         end     end     def destroy         @user = User.find(session[:user_id])         @post.user_id = @signed_in_user          @post.destroy          redirect_to posts_path     end      private      def load_post         @post = Post.find(params[:id])     end     def post_params         params.require(:post).permit(:body)     end end </code></pre>  <p>Having this issue. Any help will be appreciated. Here is the picture of the error I am having:</p>  <p><a href="http://i.stack.imgur.com/Yh1xL.png" rel="nofollow"><img src="http://i.stack.imgur.com/Yh1xL.png" alt="enter image description here"></a></p>  <p>EDIT: Here is my log</p>  <pre><code>Started GET "/posts/24" for 127.0.0.1 at 2015-09-28 18:46:44 -0700 Processing by PostsController#show as HTML   Parameters: {"id"=&gt;"24"}   [1m[36mPost Load (0.0ms)[0m  [1mSELECT  "posts".* FROM "posts" WHERE "posts"."id" = ? LIMIT 1[0m  [["id", 24]]   [1m[35mUser Load (0.0ms)[0m  SELECT  "users".* FROM "users" WHERE "users"."id" = ? LIMIT 1  [["id", 1]]   [1m[36mCACHE (0.0ms)[0m  [1mSELECT  "posts".* FROM "posts" WHERE "posts"."id" = ? LIMIT 1[0m  [["id", "24"]]   [1m[35m (0.0ms)[0m  SELECT COUNT(*) FROM "comments" WHERE "comments"."post_id" = ?  [["post_id", 24]]   Rendered comments/_form.html.erb (1.0ms)   Rendered posts/show.html.erb within layouts/application (7.0ms)   Rendered layouts/_nav.html.erb (1.0ms) Completed 200 OK in 451ms (Views: 412.0ms | ActiveRecord: 1.0ms) </code></pre>