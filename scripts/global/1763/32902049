<p>My web app is handling large data-sets that have to be returned to the user. So to speed up this process, when the data is new, the first user to access the data, triggers a caching script.  So the next user to access the data, will have the data be returned to the user in a 1/10th of the time.</p>  <p>The issue is, the first user has to wait 30 odd seconds to generate the data, which during that time, the script runs and starts the caching process, the issue is, the browsers checks back keeping the connection alive by triggering a GET request again.</p>  <p>Which triggers another cache event due to the fact the first one hasn't completed so the timestamp isnt there to say there is a cached version, so I can get multiple caching happening at the same time, due to the fact the first one hasn't finished.   </p>  <p>Is there a way to keep the connection open and not timeout, or not allow the browser to trigger multiple GET requests when one connection is taking a bit longer to respond? </p>