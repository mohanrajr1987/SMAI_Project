<p>i'm using spring-data-jpa 1.9.0.RELEASE and want to use the spring caching mechanism inside my repositories, e.g.</p>  <pre><code>public interface LandDao extends CrudRepository&lt;Land, Long&gt; {      @Cacheable("laender")     Land findByName(String land) } </code></pre>  <p>Here is my cache configuration:</p>  <pre><code>@Configuration @EnableCaching(mode=AdviceMode.ASPECTJ) public class EhCacheConfiguration extends CachingConfigurerSupport { ... </code></pre>  <p>Note that i'm using AdviceMode.ASPECTJ (compile time weaving). Unfortunately caching is not working when calling the repo method 'findByName'.  Changing the caching mode to AdviceMode.PROXY all works fine. </p>  <p>To ensure that caching works in principle with aspectJ, i wrote the following service:</p>  <pre><code>@Service public class LandService {    @Autowired   LandDao landDao;    @Cacheable("landCache")   public Land getLand(String bez) {     return landDao.findByName(bez);   } } </code></pre>  <p>In this case the cache works like a charm. So i think that all parts of my application are correctly configured and the problem is the combination of spring-data-jpa and AspectJ caching mode. Does anyone have an idea what's going wrong here?</p>