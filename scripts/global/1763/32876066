<p>I have two Laravel APIs that are serving an AngularJS app all on my local development machine.  I'm getting a weird issue when the Angular page calls POSTs to both APIs where it seems to be using the wrong database name (it's using the other Laravel's instance's database).  Laravel throws an exception that says <code>Table database.table</code> not found, where database is the incorrect database.  I've tried calling each of the APIs using Postman and that works fine, and I'm sure there is no mention of the other database in either project.</p>  <p>To me this seems like a caching issue, where the .env file might be cached and shared between the two Laravel servers for some reason.  Both of the Laravel apps are hosted on Apache.  I've tried calling <code>php artisan config:clear</code> and have set the appropriate headers in the .htaccess files to try to prevent any caching but neither of those worked.  I have also tried on multiple browsers, cleared the cache, and still the same error.</p>  <p>I want to be able to use the .env file so that I can have a unique configuration for my development server so I'd rather not hardcode the database credentials in <code>config/database.php</code>.  Any ideas what could be the issue?</p>  <p>Both database.php files look like: </p>  <pre><code>'mysql' =&gt; [ 'driver'    =&gt; 'mysql', 'host'      =&gt; env('DB_HOST'), 'database'  =&gt; env('DB_DATABASE'), 'username'  =&gt; env('DB_USERNAME'), 'password'  =&gt; env('DB_PASSWORD'), 'charset'   =&gt; 'utf8', 'collation' =&gt; 'utf8_unicode_ci', 'prefix'    =&gt; '', 'strict'    =&gt; false,  ], </code></pre>  <p>Where the unique settings are stored in <code>.env</code></p>