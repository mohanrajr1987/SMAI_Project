<p>So usually use would use <code>*</code> to indicate that you want all columns or <code>M.*</code> if you wanted all columns from a table with an alias <code>M</code>, but this doesn't seem to work inside of an <code>XMLATTRIBUTES</code> function of <code>DB2</code>. However, listing the required columns by name works (I'm working with the <code>RODBC</code> driver in <code>R</code>):</p>  <pre><code>qry &lt;- " SELECT XML2CLOB(     XMLELEMENT(NAME \"my_object\",         XMLATTRIBUTES(M.COLUMN1 AS \"column_1\", M.COLUMN2)     )) as xml     FROM MYTABLE M fetch first 100 rows only " </code></pre>  <p>Result:</p>  <pre><code>                                            XML 1: &lt;my_object column_1="1000002" COLUMN2="1"/&gt; 2: &lt;my_object column_1="1000003" COLUMN2="2"/&gt; 3: &lt;my_object column_1="1000004" COLUMN2="1"/&gt; 4: &lt;my_object column_1="1000005" COLUMN2="2"/&gt; 5: &lt;my_object column_1="1000006" COLUMN2="2"/&gt; ... </code></pre>  <p>I am having trouble generalizing to all columns as in the following query:</p>  <pre><code>qry &lt;- " SELECT XML2CLOB(     XMLELEMENT(NAME \"my_object\",         XMLATTRIBUTES(M.*)     )) as xml     FROM MYTABLE M fetch first 100 rows only " </code></pre>  <p>Result: </p>  <pre><code>       V1 1:                                                                                     42601 -104 [IBM][CLI Driver][DB2] SQL0104N  An unexpected token "*" was found following "*".  Expected tokens may include:  "NEXTVAL CURRVAL".  SQLSTATE=42601\r\n 2: [RODBC] ERROR: Could not SQLExecDirect '\nSELECT XML2CLOB(\n    XMLELEMENT(NAME "claim",\n        XMLATTRIBUTES(F.*)\n    )) as xml\n    FROM LRD.FEA F\n    where F.CPU_STMP_DT_CEN = 20\n    and F.CPU_STMP_DT_YR = 13\nfetch first 100 rows only\n' </code></pre>  <p>I am not sure if the <code>*</code> shortcut is simply unsupported inside of <code>XMLATTRIBUTES</code> or I should construct some kind of alias of my own that pastes the column names into <code>XMLATTRIBUTES</code> but I am not sure how to do that. </p>  <p>Additionally, I would accept if each column name value was its own <code>XMLELEMENT</code> nested inside <code>my_object</code>. </p>