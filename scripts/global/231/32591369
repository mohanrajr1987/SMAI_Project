<p>I need to write a query that will be as efficient as possible returning rows that have <strong>mycol</strong> (<em>timestamp</em> value) equal to today's date minus 100 or 200 days. (exactly 100 or 200 days ago - not a range)</p>  <p>Note that <strong>mycol</strong> always has <strong>00.00.000000</strong> time. (Ignore why that is)</p>  <p>Here is one example of how this can be written:</p>  <pre><code>select * from mytable mt where  date(mycol) in (current date - 100 days, current date - 200 days) </code></pre>  <p>I'm thinking this may be more efficient:</p>  <pre><code>select * from mytable mt where mycol in (timestampadd(16,-100,timestamp(current date,'00:00:00')),           timestampadd(16,-200,timestamp(current date,'00:00:00'))) </code></pre>  <p>The reason I believe it is more efficient is because I'm not calling a function on <code>mycol</code> (as I did in the first example) and the calculations on <code>current date</code> happen only once per execution of this query and not for every row.</p>  <p>Am I correct in my assumption?</p>