<p>For a detail view I would like to let the user leave notes for each item.  The app is for a data-driven website.  In the web version, the web app stores notes in a separate table with a field for the itemid.</p>  <p>In Core Data I have an entity of items and another entity of notes.  The notes entity has an attribute called <code>itemid</code>.  When user creates a note the first time, it stores the <code>itemid</code> in the note record.  </p>  <p>My question is when you pull up the item for editing how can you simultaneously pull up the right note based on the note having a certain <code>itemid</code>?</p>  <p>In a database situation you could do a join, or from a web page you could make two separate requests to the two tables but I am somewhat flummoxed by how to do this with Core Data.</p>  <p>Do you have to put a relationship to the note and therefore have the <code>noteid</code> in the item row?</p>  <p>If so would you be able to access the note attribute using the item object?</p>  <p>Thanks in advance for any suggestions.</p>  <p>This is what I am using to save information.  I just don't know how to make sure I'm saving it for right note.</p>  <pre><code>self.managedObjectContext = [IDModel sharedInstance].managedObjectContext; NSString *noteText = _notesView.text; NSNumber *itemId = self.item.itemid; // Populate Record [self.note setValue:noteText forKey:@"note"]; [self.note setValue:itemId forKey:@"itemid"];  Model (simplified):  Item: name NSString itemid: Integer 64  Note: note NSString noteid: Integer 64 itemid: Integer 64    Edit: </code></pre>  <p>Code to try to link note and item while creating both...</p>  <pre><code>//in save method         // Create Entity         NSEntityDescription *entity = [NSEntityDescription entityForName:@"Notes" inManagedObjectContext:self.managedObjectContext];          // Initialize New Record ie newNote         NSManagedObject *record = [[NSManagedObject alloc] initWithEntity:entity insertIntoManagedObjectContext:self.managedObjectContext];          // Populate Record         [record setValue:note forKey:@"note"];         [record setValue:localid forKey:@"localnid"];          // Save Record         NSError *error = nil;          if ([self.managedObjectContext save:&amp;error]) { //   If note saved, save new item…              if (itemlength&gt;1) {             Items *newItem = [NSEntityDescription insertNewObjectForEntityForName:@“Item” inManagedObjectContext:self.managedObjectContext];             newItem.item = item;               newItem.note = self.note //This is null as note does not seem to pick up newly created note.             if (![self.managedObjectContext save:&amp;error]) {                 NSLog(@"Error: %@", [error localizedDescription]);              }              } </code></pre>