<p><a href="http://i.stack.imgur.com/W3M4C.png" rel="nofollow"><img src="http://i.stack.imgur.com/W3M4C.png" alt="enter image description here"></a></p>  <p>i have two objects GroupExercise &lt;---->> Exercise, And Need do fetch request for tableView with sections (header GroupExercise.name) and rows (Exercise.name) how i can fetch two entities with Magical Record Or Core Data </p>  <p>Exercise object</p>  <pre><code>    @interface Exercise : NSManagedObject     @property (nonatomic, retain) NSString * name;     @property (nonatomic, retain) NSNumber * timeRelax;     @property (nonatomic, retain) NSNumber * type;     @property (nonatomic, retain) NSNumber * uid;     @property (nonatomic, retain) NSNumber * uidGroup;     @property (nonatomic, retain) GroupExercise *groupEdge; </code></pre>  <p>GroupExerciseObject</p>  <pre><code>@property (nonatomic, retain) NSString * name; @property (nonatomic, retain) NSString * tagColor; @property (nonatomic, retain) NSNumber * uid; @property (nonatomic, retain) NSOrderedSet *exerciseEdge; </code></pre>  <p>save objects with code </p>  <pre><code>- (void)parseAndSaveJson:(id)json withCompleteBlock:(void (^)())completeBlock {  NSMutableArray *groupsArray = (NSMutableArray *) json;  NSLog(@"%@", json);  if (groupsArray != nil) {      NSArray *allEntities = [NSManagedObjectModel MR_defaultManagedObjectModel].entities;      [allEntities enumerateObjectsUsingBlock:^(NSEntityDescription *entityDescription, NSUInteger idx, BOOL *stop) {         [NSClassFromString([entityDescription managedObjectClassName]) MR_truncateAll];     }];      [MagicalRecord saveWithBlock:^(NSManagedObjectContext *localContext) {           for (int groupIndex = 0; groupIndex &lt; [groupsArray count]; groupIndex++) {               GroupExercise *localGroup = [GroupExercise MR_createEntityInContext:localContext];              localGroup.name = groupsArray[groupIndex][LOCAL_GROUPS_NAME];              localGroup.tagColor = groupsArray[groupIndex][LOCAL_GROUPS_TAG_COLOR];              localGroup.uid = @([groupsArray[groupIndex][LOCAL_GROUPS_ID_GROUP] intValue]);               NSMutableArray *exerciseArray = (NSMutableArray *) groupsArray[groupIndex][LOCAL_GROUPS_EXERCISES];              NSMutableSet *set = [[NSMutableSet alloc] init];              for (int exerciseIndex = 0; exerciseIndex &lt; [exerciseArray count]; exerciseIndex++) {                  Exercise *exercise = [Exercise MR_createEntityInContext:localContext];                  exercise.name = exerciseArray[exerciseIndex][EXERCISE_NAME];                 exercise.uid = @([exerciseArray[exerciseIndex][LOCAL_EXERCISE_ID_EXERCISE] intValue]);                 exercise.uidGroup = @([groupsArray[groupIndex][LOCAL_GROUPS_ID_GROUP] intValue]);                 exercise.groupEdge = localGroup;                  [set addObject:exercise];             }              [localGroup addExerciseEdge:set];         }      }                 completion:^(BOOL contextDidSave, NSError *error) {          completeBlock();      }]; } } </code></pre>  <p>and use FRC</p>  <pre><code>- (NSFetchedResultsController *)fetchedResultsController { if (_fetchedResultsController != nil) {     return _fetchedResultsController; }  _fetchedResultsController = [Exercise MR_fetchAllGroupedBy:@"groupEdge" withPredicate:nil sortedBy:@"uid" ascending:true];   _fetchedResultsController.delegate = self; return _fetchedResultsController; } </code></pre>  <p>how i can sort sections with groupEdge.name ?</p>