<p>What is the proper way to link two entities by an attribute so that you get the right values in the linked attribute?</p>  <p>I'm trying to follow a tutorial that has persons and addresses. In a conventional database you would have a field for personid in addresses and join on <code>person.id==address.personid</code>.  In this tutorial, it says after you have created a person and an address that you can connect the two via the following:</p>  <pre><code>// Add Address to Person [newPerson setValue:[NSSet setWithObject:newAddress] forKey:@"addresses"]; </code></pre>  <p>The tutorial on Tutsplus says: "Creating a Relationship To link the newAddress to the newPerson, we invoke <code>setValue:forKey:</code>, passing in addresses as the key. The value that we pass in is a <code>NSSet</code> that contains newAddress. Take a look at the following code block for clarification.</p>  <pre><code>// Add Address to Person [newPerson setValue:[NSSet setWithObject:newAddress] forKey:@"addresses"];  // Save Managed Object Context ... </code></pre>  <p>We call save: on the managed object context of the newPerson object to propagate the changes to the persistent store. Remember that calling save: on a managed object context saves the state of the managed object context. This means that newAddress is also written to the backing store as well as the relationships we just defined."</p>  <p>Can anyone explain this to me?</p>  <p>Here is <a href="http://code.tutsplus.com/tutorials/core-data-from-scratch-relationships-and-more-fetching--cms-21505" rel="nofollow">link</a> to tutorial.</p>  <p>Many thanks in advance.</p>