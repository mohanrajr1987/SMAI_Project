<p>This my code to filter data from my CoreData and it provides the corrected data but if I go to details of the record it gives me the wrong data. </p>  <p>Meaning I have detailed VC that shows a larger image of the camera. So if the index is lets say 1 with the filter data but the real index of the camera in index one is really 20 in CoreData.  How can I correct for this issue? </p>  <pre><code>func fetch() {     let appDel: AppDelegate = UIApplication.sharedApplication().delegate as! AppDelegate     // Ref data     let context: NSManagedObjectContext = appDel.managedObjectContext!     let freq = NSFetchRequest(entityName: "Cameras")     let predicate = NSPredicate(format: "locationname == %@", "lobby")     freq.predicate = predicate     let fetchResults = try! context.executeFetchRequest(freq) as? [NSManagedObject]     filteredData.removeAll(keepCapacity: false)     filteredData = fetchResults!     searchActive = true; } </code></pre>  <p><b>UPDATE</b><br> Request updated information.</p>  <pre><code>    override func tableView(tableView: UITableView, numberOfRowsInSection section: Int) -&gt; Int {     if searchActive {         return filteredData.count     } else {     return myData.count     } } </code></pre>  <p>Next item.</p>  <pre><code>    override func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -&gt; UITableViewCell {     let cell = tableView.dequeueReusableCellWithIdentifier("cameraCell", forIndexPath: indexPath) as! camerasTableViewCell     if searchActive {     let data = filteredData[indexPath.row]     cell.nameLabel.text =  data.valueForKey("name") as? String     cell.roadName.text = data.valueForKey("locationname") as? String     let CamImage =  data.valueForKey("dImage") as! NSData     let CameraImage: UIImage = UIImage(data: CamImage)!     cell.imageUrl?.image = CameraImage     } else {         let data = myData[indexPath.row]         cell.nameLabel.text =  data.valueForKey("name") as? String         cell.roadName.text = data.valueForKey("locationname") as? String         let CamImage =  data.valueForKey("dImage") as! NSData         let CameraImage: UIImage = UIImage(data: CamImage)!         cell.imageUrl?.image = CameraImage     }     return cell } </code></pre>  <p>Next item</p>  <pre><code>    override func prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject?) {     let selectedIndexPath:NSIndexPath = self.tableView.indexPathForSelectedRow!      let vc = segue.destinationViewController as! largeCameraViewController     vc.row = selectedIndexPath.row  } </code></pre>