<p>I'm building a journal app where you create a FocusArea object, which then contains 30 journal Entry objects.</p>  <p>So I created a one-to-many relationship in my data model. </p>  <p>Then I implemented two NSManagedObject Classes: </p>  <p>@objc(FocusArea) class FocusArea: NSManagedObject {</p>  <pre><code>@NSManaged var focusName: String @NSManaged var focusStart: NSDate @NSManaged var focusEnd: NSDate @NSManaged var completeFlag: Bool //@NSManaged var entries: NSSet  var entries: NSMutableOrderedSet {     return self.mutableOrderedSetValueForKey("entries") }   </code></pre>  <p>}</p>  <p>@objc(Entry) class Entry: NSManagedObject {</p>  <pre><code> @NSManaged var entryJournal: String  @NSManaged var entryDate: NSDate  @NSManaged var completeFlag: Bool  @NSManaged var entryStatus: Bool  @NSManaged var focus: FocusArea </code></pre>  <p>}</p>  <p>I'm able to add a FocusArea with no problems, but when I try to create 30 Entry objects and store in FocusArea.entries, everything keeps crashing. </p>  <p><strong>What's the correct way to add multiple Entry objects to the FocusArea object?</strong></p>  <p>Am I way off here?</p>  <pre><code>@IBAction func saveFocusArea(sender: AnyObject) {      if txtFocusName.text != nil {          let appDel: AppDelegate = UIApplication.sharedApplication().delegate as! AppDelegate         let context: NSManagedObjectContext = appDel.managedObjectContext!          //create new focus area         let entFocus = NSEntityDescription.entityForName("FocusArea", inManagedObjectContext: context)         let newFocus = FocusArea(entity:entFocus!, insertIntoManagedObjectContext: context)          newFocus.focusName = txtFocusName.text!         newFocus.focusStart = NSDate()         newFocus.focusEnd = NSDate().dateByAddingTimeInterval(60*60*24*30)         newFocus.completeFlag = false          //initialize 30 new entries into core data         let entEntry = NSEntityDescription.entityForName("Entry", inManagedObjectContext: context)          for var i = 0; i &lt; 30; i++ {              let newEntry = Entry(entity:entEntry!, insertIntoManagedObjectContext: context)              let c = Double(i)             newEntry.entryDate = NSDate().dateByAddingTimeInterval(60*60*24*c)             newEntry.entryJournal = ""             newEntry.entryStatus = false             newEntry.completeFlag = false              //THIS IS THE PROBLEM AREA             newFocus.entries.append(newEntry)         }         do {             try context.save()         } catch {             print("There's a problem!")         }     } }  </code></pre>