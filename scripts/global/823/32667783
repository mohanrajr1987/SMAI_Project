<p>Greeting everyone.  Due to some special reason, we have to re-implement the AVX2 intrics like the following way:</p>  <pre><code>static __inline __m256i __attribute__((__always_inline__, __nodebug__))     _xmm256_and_si256(__m256i s1, __m256i s2){      __m256i result;      __asm__ ("vpand %2, %1, %0": "=r"(result): "rm" "s1", "rm" "s2" ) ;     // sorry, this statement does not work      return result;  } </code></pre>  <p>Corresponding function is <code>_mm256_and_si256(__m256i s1, __m256i s2)</code>, which is an AVX2 intrincs. After some search through google, I found some simililar such as connect some base type like <code>int</code>, <code>float</code> and <code>long</code> to input registers.  However, I still didn't find the way to connect the input parameters <code>s1</code> and <code>s2</code> to the input registers <code>ymm1</code> and <code>ymm2</code> which are used for the asm <code>vpand</code> code. </p>  <p>So anyone here is willing to help me to make the above example work? Thank you so much in advance!!</p>