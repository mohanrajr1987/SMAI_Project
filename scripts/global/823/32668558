<p>In general, without using OS-specific methods, how can an x86 application detect that it's running in AMD64 compatibility mode instead of legacy mode?</p>  <p>I know I can get <code>cr0</code> in user space by just doing <code>smsw eax</code> or similar non-privileged instruction (useful to check whether e.g. paging/cache/... is enabled), but after reading Intel's System Programming Guide section 9.8.5 <em>Initializing IA-32e Mode</em>, I learned that this is hardly useful, because IA-32e mode is enabled via <code>IA32_EFER</code> MSR, which is inaccessible to ring 3 code. So is there still any way to reliably discriminate between legacy and compatibility modes?</p>