<p>I'm currently writing a part of a 16-bit real mode assembly program to calculate random numbers. To do this, I'm using the <a href="http://wiki.osdev.org/CMOS" rel="nofollow">CMOS Real-Time Clock</a> to extract seconds, and then I divide the seconds value by 10 storing the quotient in one register (I'm not sure which) and the remainder in the first 8 bits of ax (ah) I think. </p>  <p>I then need to mod the remainder by 9 to generate a pseudo random number between 0 and 9, but I can't figure out how to use mod in NASM. I've looked around on the web even having looked at SO posts like <a href="http://stackoverflow.com/questions/19837688/nasm-where-is-my-div-remainder">this one</a>, but I haven't seen an explicit definition anywhere of the syntax for mod in NASM. How can I use the operation? The code so far for generating random numbers is below:</p>  <pre><code>mov al, 0x00 out 0x70,al in al,0x71  mov ah, 0x00 div al, 10 [mod al, 9 ] ;not sure what to do here </code></pre>