<p>I have a procedure I'm calling in x86 assembly (MASM) in Visual studio 2010. All it's doing is taking a base 10 number that's stored in the ax register and converting it to a binary string (e.g 10100b). The problem I'm having is that whenever ax is suppose to equal 1, it instead wraps over and equals some large number.</p>  <pre><code>.code main proc     xor eax, eax    xor ebx, ebx    xor ecx, ecx    xor edx, edx     lea esi, binResult                           ; convert result to string (binary notation)    mov ax, [result]    mov bx, 2    call Convert2Bin      lea esi, binResult                           ; test    call PrintString       EndofProgram:     invoke ExitProcess, 0             main endp   Convert2Bin proc                       ; Define procedure         pushad                     ; save registers         pushfd                     ; save flags          divide_Convert2Bin:          cmp eax, 1         je addOne_ThenExit          cmp eax, 0         je addZero_ThenExit          div ebx          cmp edx, 1         je addOne_ThenLoop          cmp edx, 0         je addZero_ThenLoop          addOne_ThenLoop:         mov byte ptr [esi], '1'         inc esi         jmp divide_Convert2Bin          addZero_ThenLoop:         mov byte ptr [esi], '0'         inc esi         jmp divide_Convert2Bin          addOne_ThenExit:         mov byte ptr [esi], '1'         inc esi         jmp done_Convert2Bin          addZero_ThenExit:         mov byte ptr [esi], '0'         inc esi         jmp done_Convert2Bin          done_Convert2Bin:         mov byte ptr [esi], 'b'          popfd                      ; restore flags         popad                      ; restore registers         ret                        ; return to caller </code></pre>