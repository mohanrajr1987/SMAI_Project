<p>In my application I had defined a few lists of different types and at each <code>dds.Load()</code> I'm getting the data from the context, attach it to the required lists and then bind each list to a <code>DataGrid</code>.</p>  <p>I also have a timer which calls a <code>dds.Load()</code> at the interval of 1 minute.</p>  <p>I'm wondering is the following code a good approach to update the context?</p>  <p>I just want the users to not feel like the context is being update so I don't want to add some kind of busy indicator.</p>  <p>Also, when it does the Load..the context is not instantly updated and I don't know why.</p>  <pre><code>List&lt;Data1&gt; employees = new List&lt;Data1&gt; List&lt;Data1&gt; EMPLOYEES {    get { return employees; }    set { employees = value; NotifyPropertyChanged("employees"); } }  List&lt;Data2&gt; AnotherList List&lt;Data3&gt; AnotherList2  //and so on..  private void DomainDataSource_LoadedData(object sender, LoadedDataEventArgs e) {     timer.Stop(); // This timer is called every 1 minute and it only does a DDS.LOAD();      if(!e.Cancelled)     {         ctx.MyDataEntity.Where( t =&gt; !e.Entities.Contains(t))                          .ToList()                          .ForEach(t =&gt; ctx.MyDataEntity.Detach(t));         timer.Start();     }      EMPLOYEES = ctx.MyDataEntity.Where(emp =&gt; e.somefield == somevalue);     AnotherList  = ctx.MyDataEntity.Where(emp =&gt; e.somefield == somevalue);     AnotherList2  = ctx.MyDataEntity.Where(emp =&gt; e.somefield == somevalue);      datagrid1.itemsource = employees;     datagrid2.itemsource = anotherlist;     //etc.. } </code></pre>