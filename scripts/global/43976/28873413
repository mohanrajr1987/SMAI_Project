<p>I am working on a simple demo project in which I have a Add info page which have (2 textbox  and checkbox) and a page in which I have datagird page and a button (TestButton).</p>  <p>When I select any item and click on test button then then I want to pass this object to Add info page and bind data to controls to edit. And when with out selecting a datagrid item click on a button then it open Add info page to insert new info.</p>  <p>Below are code to insert and delete item but I don't know how to pass selected item and bind it to edit.</p>  <p>In page which have datagrid , I have button add/edit , can you please guide how to change view and pass data and bind to edit if grid item is selected.</p>  <p>I have </p>  <pre><code>public class ViewModelBase : INotifyPropertyChanged {     public event PropertyChangedEventHandler PropertyChanged;     protected void NotifyPropertyChanged(string propertyName)     {         if (PropertyChanged != null)         {             PropertyChanged(this, new PropertyChangedEventArgs(propertyName));         }     } }  public class TestViewModel : ViewModelBase {     private tblEmp _student;     public tblEmp Student     {         get         {             return _student;         }         set         {             _student = value;             NotifyPropertyChanged("Student");         }     }      private ObservableCollection&lt;tblEmp&gt; _liststudents;     public ObservableCollection&lt;tblEmp&gt; ListStudents     {         get         {             return _liststudents;         }         set         {             _liststudents = value;             NotifyPropertyChanged("ListStudents");         }     }      private ICommand _SubmitCommand;     public ICommand SubmitCommand     {         get         {             if (_SubmitCommand == null)             {                 _SubmitCommand = new RelayCommand(param =&gt; this.Submit(),                     null);             }             return _SubmitCommand;         }     }     private void Submit()     {         Service1Client obj = new Service1Client();         obj.SaveWorkCompleted += obj_DoWorkCompleted;         obj.SaveWorkAsync(Student);     }      private ICommand _DeleteCommand;     public ICommand DeleteCommand     {         get         {             if (_DeleteCommand == null)             {                 _DeleteCommand = new RelayCommand(param =&gt; this.Delete(),                     null);             }             return _DeleteCommand;         }     }     private void Delete()     {         if (Student != null)         {             Service1Client obj = new Service1Client();             obj.DeleteCompleted += obj_DeleteCompleted;             obj.DeleteAsync(Student.Id);         }         else             MessageBox.Show("Please select any record.");     }      void obj_DeleteCompleted(object sender, DeleteCompletedEventArgs e)     {         ListStudents.Remove(Student);     }      private ICommand _ClearCommand;     public ICommand ClearCommand     {         get         {             if (_ClearCommand == null)             {                 _ClearCommand = new RelayCommand(param =&gt; this.Clear(),                     null);             }             return _ClearCommand;         }     }     private void Clear()     {         tblEmpBind obj = new tblEmpBind();         Student = null;     }      void obj_DoWorkCompleted(object sender, System.ComponentModel.AsyncCompletedEventArgs e)     {          Service1Client obj = new Service1Client();         obj.SearchCompleted += obj_SearchCompleted;         obj.SearchAsync();     }      public TestViewModel()     {         Student = new tblEmp();         Service1Client objClient = General.ServiceProxy;         objClient.SearchCompleted += obj_SearchCompleted;         objClient.SearchAsync();                 }      void obj_SearchCompleted(object sender, SearchCompletedEventArgs e)     {         ListStudents = e.Result;     }      void obj_SearchCompleted1(object sender, SearchCompletedEventArgs e)     {         ListStudents = e.Result;     } } </code></pre>  <p>}</p>  <p>Main Page with datagrid : </p>  <p>                                  </p>  <pre><code>            &lt;sdk:DataGridCheckBoxColumn  Header="Active" Binding="{Binding IsActive}" Width="60"/&gt;                       &lt;/sdk:DataGrid.Columns&gt;     &lt;/sdk:DataGrid&gt; </code></pre>  <p>Page for insert/Edit:</p>  <p>                               </p>