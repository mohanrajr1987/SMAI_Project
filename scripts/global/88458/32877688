<p>I have very similar code that is functioning without a hitch elsewhere in my Laravel app, but for some reason the below code is creating two $paypal_object database entries that are identical except for the payment_id field:</p>  <p><strong>DonateController.php</strong></p>  <pre><code>public function mimic() {     try {         //This block is the addOrder function from the pizza tutorial         $paypal_object = new Paypal();         //The user who is making the payment         $paypal_object-&gt;user()-&gt;associate(Auth::user());         $paypal_object-&gt;amount = 50.00;         $paypal_object-&gt;description = "new subscription";         $paypal_object-&gt;state = $payment-&gt;getState();         $paypal_object-&gt;payment_id = $payment-&gt;getId();         $paypal_object-&gt;save();     } catch (Exception $ex) {         $message = $ex-&gt;getMessage();         $messageType = "error";     }     exit; } </code></pre>  <p><strong>Database Results (with test data)</strong> <a href="http://i.stack.imgur.com/PZwVV.png" rel="nofollow"><img src="http://i.stack.imgur.com/PZwVV.png" alt="enter image description here"></a></p>  <p>I've condensed the above code from my controller a little.  If you'd like to see more of my code, let me know and I'd be happy to provide it.  My theory right now is that for some reason my mimic() method is getting run twice, but I'm not sure how to test to see if that's true beyond including this in the above code, but it's not giving me any results this time:</p>  <pre><code>    echo '&lt;script&gt;console.log(' . json_encode("Testing to see how many times this message appears.") . ');&lt;/script&gt;'; </code></pre>  <p>Even if it is running twice, I'm not sure how that's happening or where to check.  I'm guessing it could well be another problem entirely, but I don't know what.  </p>  <p>Right now, I'm accessing this method by pinging its route:</p>  <pre><code>Route::get('/paypal/mimic', 'DonateController@mimic'); </code></pre>  <p>but for every 1 ping I make, I get 2 database entries as shown in the above image.</p>  <p><strong>Paypal model:</strong></p>  <pre><code>class Paypal extends Eloquent {     /**      * Get the user that made the paypal payment.      */     public function user()     {         # Defines an inverse one-to-many relationship         return $this-&gt;belongsTo('User');     } } </code></pre>  <p><strong>User model:</strong></p>  <pre><code>public function paypal(){         # User has many paypal payments - although just one subscription         # Defines a one-to-many relationship         return $this-&gt;hasMany('Paypal');     } </code></pre>  <p>Thanks in advance for any help.</p>