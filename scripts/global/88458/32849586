<p>In my registration/ticket program, I have two messes of code being all handled in 1 controller function.<br> <strong>1. Validation code</strong><br> <strong>2. Paypal payments</strong>    </p>  <p>My 'payment button' routes to a controller that needs to validate that programs have space available, age requirements are met, etc. A list of valid "purchases" then get processed by Paypal API calls.    </p>  <p>I would like to separate the code so that the route</p>  <ol> <li>calls a function that validates and returns the list of programs that can actually be "purchased" and marks them as <code>pending</code>.</li> <li>From there, I want to give that list to another function that will open the paypal connection and get payment and return success/fail</li> <li>And from there, I want to go to another function that will mark programs as <code>registered</code> and remove the <code>pending</code></li> </ol>  <p>I am confused by where to put these functions. I'm pretty sure I don't need more routes except maybe between 1 and 2 to show the updated list. I could create a PaypalController but what do I do if I want to create a payment without going through a route? Controllers should not call other controllers, right? For the validation, I think it would suffice to create functions in the model so I can <code>$program-&gt;isFull(), $program-&gt;ageCheck(int)</code> right?<br> So my  question about libraries, is this the right place to put this code into a library? Like this post does? <a href="http://stackoverflow.com/questions/17088917/what-are-the-best-practices-and-best-places-for-laravel-4-helpers-or-basic-funct/">What are the best practices and best places for laravel 4 helpers or basic functions?</a></p>