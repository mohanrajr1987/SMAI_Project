<p>I am working on a MicroBlog spring mvc hibernate application. I need to implement a publish subscribe functionality like twitter. </p>  <p>I am using RabbitMQ for messaging with Spring AMQP abstraction.</p>  <p>Everywhere I see on web the <a href="https://dzone.com/articles/pubsub-vfabric-rabbitmq-and" rel="nofollow">pubsub</a> <a href="http://krishnasblog.com/2012/10/10/publish-subscribe-with-vfabric-rabbitmq-and-spring-integration-using-spring-amqp/" rel="nofollow">examples</a> are given involving </p>  <blockquote>   <p>Spring Integration</p>      <p>Spring AMQP &amp;  RabbitMQ</p> </blockquote>  <p>I researched a little more on Spring-Integration &amp; found that a publish subscribe can be implemented with it even without using RabbitMQ.</p>  <p>Now my question is </p>  <p><strong>Why do I need to use Spring Integration with [Spring AMQP &amp; RabbitMQ] to implement a pubsub functionality. Why can't I just use Spring AMQP with Rabbit to do that?</strong></p>  <p><strong>Does Spring integration provide any additional features?</strong></p>  <p>My Spring AMQP &amp; RabbitMQ configuration </p>  <pre><code>&lt;rabbit:connection-factory id="connectionFactory" virtual-host="/" host="localhost"  username="guest" password="guest"/&gt;  &lt;rabbit:admin connection-factory="connectionFactory" /&gt;  &lt;rabbit:queue name="UserPostpublishQueue" /&gt;  &lt;fanout-exchange name="broadcastUserPosts" xmlns="http://www.springframework.org/schema/rabbit"&gt;     &lt;bindings&gt;         &lt;binding queue="UserPostpublishQueue"/&gt;     &lt;/bindings&gt; &lt;/fanout-exchange&gt;  &lt;rabbit:template id="amqpTemplate" connection-factory="connectionFactory" exchange="broadcastUserPosts"  queue="UserPostpublishQueue"/&gt;  &lt;/beans&gt; </code></pre>  <p>Test code in my controller</p>  <pre><code>@Autowire private AmqpTemplate amqpTemplate;  try{         amqpTemplate.convertAndSend(post);         Post receivedPost = (Post)amqpTemplate.receiveAndConvert();         System.out.println("received Post "+receivedPost);         }catch(AmqpException e){             //deal with exception         } </code></pre>