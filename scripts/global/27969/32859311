<p>I am facing an issue while using RabbitMQ in the fanout exchange which due to some unknown reason is behaving like a direct exchange. </p>  <p>I am using a following binding and queue configuration</p>  <pre><code>&lt;bean id="testfanout"         class="com.test"&gt;         &lt;constructor-arg name="exchange" ref="test" /&gt;         &lt;constructor-arg name="routingKey" value="test" /&gt;         &lt;constructor-arg name="queue" value="testQ" /&gt;         &lt;constructor-arg name="template"&gt;             &lt;bean class="org.springframework.amqp.rabbit.core.RabbitTemplate"&gt;                 &lt;constructor-arg ref="connectionFactory" /&gt;             &lt;/bean&gt;         &lt;/constructor-arg&gt;         &lt;constructor-arg value="true"/&gt;     &lt;/bean&gt;  &lt;rabbit:fanout-exchange name="test" id="test"&gt;         &lt;rabbit:bindings&gt;             &lt;rabbit:binding queue="test"/&gt;         &lt;/rabbit:bindings&gt; &lt;/rabbit:fanout-exchange&gt; </code></pre>  <p>Now we have a same code listening to same testQ on two different VM's but somehow message is send to one VM listener using the round robin algorithm</p>  <p><strong>Sender code</strong></p>  <pre><code>channel = ...   RabbitTemplate template = null;             if(channel != null){                 template = channel.getTemplate();                 if(template != null){                     template.setQueue(channel.getQueue());                     template.setExchange(channel.getExchange().getName());                     template.convertAndSend(channel.getRoutingKey(), txtMsg); </code></pre>