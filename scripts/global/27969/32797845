<p>I'm really stuck with cast Rabbit response to POJO. How to do it properly? On sprin.io just no practical example.  So I'm trying to do it with this </p>  <pre><code>@Bean public DefaultClassMapper typeMapper() {     DefaultClassMapper typeMapper = new DefaultClassMapper();     Map&lt;String, Class&gt; idClassMapping = new HashMap&lt;String, Class&gt;();     idClassMapping.put("range", Loan.class);     typeMapper.setIdClassMapping(idClassMapping);     //typeMapper.setDefaultType(Loan.class);     return typeMapper; }  @Bean     public MessageConverter messageConverter(DefaultClassMapper defaultClassMapper){         JsonMessageConverter jsonMessageConverter = new JsonMessageConverter();         jsonMessageConverter.setClassMapper(defaultClassMapper);         return jsonMessageConverter;     } </code></pre>  <p>"range" actually fake value from example. Also this really doesn't work type problemn on .setIdClassMapping() . Also I can't use default mapper because serve send header without type hinting field. And I have no control on this remote server. Data format always JSON.</p>  <pre><code>  Caused by: org.springframework.amqp.support.converter.MessageConversionException: failed to convert Message content. Could not resolve __TypeId__ in header </code></pre>  <p>Any suggestions working example for marshalling/demarshalling Java objects. I have completely different class for send back value from my code. I'm using java 8.</p>