<p>I have a Celery server with a RabbitMQ broker. I use it to run background tasks in my Django project.</p>  <p>In one of my views a signal is triggered which then calls a celery task like this:</p>  <pre><code>create_something.delay(pk) </code></pre>  <p>The task is defined like this:</p>  <pre><code>@task def create_something(donation_pk):     # do something </code></pre>  <p>Everything works great, but:</p>  <p>If RabbitMQ is down when I am calling the task no error is thrown during the create_something.delay(pk) call. But the view throws this error:</p>  <pre><code>[Errno 111] Connection refused </code></pre>  <p>(The stack trace is kind of useless, I think this is because of the signals used)</p>  <p>The question now is: How can I prevent this error? Is there a possibility to perform retries of the create_something.delay(pk) when the broker is down?</p>  <p>Thanks in advance for any hints!</p>