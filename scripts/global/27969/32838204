<p>I am using @RabbitListner annotation to recieve messages from a RabbitMq queue.</p>  <p>Although I have done all steps required to do this (i.e. Add @EnableRabbit annotation in my config class) and declare SimpleRabbitListenerContainerFactory as a bean , still my method is not recieving messages from the queue . Can anybody suggest what I am missing :</p>  <p>I am using Spring Boot to launch my application </p>  <p>My launch class</p>  <pre><code>@Configuration @EnableAutoConfiguration @EnableRabbit @EnableConfigurationProperties @EntityScan("persistence.mysql.domain") @EnableJpaRepositories("persistence.mysql.dao") @ComponentScan(excludeFilters = { @ComponentScan.Filter(type = FilterType.ASSIGNABLE_TYPE, value = ApiAuthenticationFilter.class),@ComponentScan.Filter(type = FilterType.ASSIGNABLE_TYPE, value = ApiVersionValidationFilter.class)},basePackages = {"common", "mqclient","apache", "dispatcher" }) public class Application {  public static void main(final String[] args) {     final SpringApplicationBuilder appBuilder = new SpringApplicationBuilder(             Application.class);     appBuilder.application().setWebEnvironment(false);     appBuilder.profiles("common", "common_mysql_db", "common_rabbitmq")             .run(args); }  @Bean @Primary @ConfigurationProperties(prefix = "spring.datasource") public DataSource primaryDataSource() {     return DataSourceBuilder.create().build(); }   } </code></pre>  <p>Here is my Bean to define  SimpleRabbitListenerContainerFactory inside a component class</p>  <pre><code>@Component(value = "inputQueueManager") public class InputQueueManagerImpl extends AbstractQueueManagerImpl { </code></pre>  <p>..///..</p>  <pre><code> @Bean(name = "inputListenerContainerFactory")  public SimpleRabbitListenerContainerFactory rabbitListenerContainerFactory()        {  SimpleRabbitListenerContainerFactory factory = new      SimpleRabbitListenerContainerFactory();  factory.setConnectionFactory(this.rabbitConnectionFactory);  factory.setConcurrentConsumers(Integer.parseInt(this.concurrentConsumers));   factory.setMaxConcurrentConsumers(Integer.parseInt(this.maxConcurrentConsumers)); factory.setMessageConverter(new Jackson2JsonMessageConverter()); return factory; </code></pre>  <p>} }</p>  <p>And finally my Listener  inside another Controller component</p>  <pre><code>@Controller public class RabbitListner{  @RabbitListener(queues = "Storm1", containerFactory = "inputListenerContainerFactory")  @Override  public void processMessage(QueueMessage message) {     String topic = message.getTopic();     String payload = message.getPayload();     dispatcher.bean.EventBean eventBean = new dispatcher.bean.EventBean();     System.out.println("Data read from the queue"); </code></pre>  <p>Unfortunately , I am sending the messages to the queue but the code inside processMessage is not getting executed ever.</p>  <p>I am not sure what is the problem here . Can anybody help ??</p>