<p>I have two simple test cases. In the first one I'm reusing both connection and channel. In the second one I'm reusing only the connection. Reason for having the second one is just to simulate channel per thread scenario in multi-threaded environment(this is not exactly same, but we can get an idea about the performance)</p>  <p>So from the first one I can publish 70000 msg/sec and from the second I can publish only 1500 msg/sec. </p>  <ol> <li>Does this mean channel creation is costly in RabbitMQ?</li> <li>Can we use channel pooling to resolve this?</li> </ol>  <p>1st Sample</p>  <pre><code>public class Send {  public static void main(String[] args) throws Exception {      ConnectionFactory factory = new ConnectionFactory();     factory.setHost("localhost");     Connection connection = factory.newConnection();     Channel channel = connection.createChannel();     channel.exchangeDeclare("myExchange", "direct", true);     channel.queueDeclare("myQueue", true, false, false, null);      for (int i = 0; i &lt; 1000000; i++) {         String message = "{\"id\" : \"56664f85-62e0-11e5-a74b-59530fbb6d8d\"" + i + "}";         channel.basicPublish("", "myQueue", null, message.getBytes("UTF-8"));     }      channel.close();     connection.close(); } </code></pre>  <p>2nd Sample</p>  <pre><code>public class Send {  public static void main(String[] args) throws Exception {      ConnectionFactory factory = new ConnectionFactory();     factory.setHost("localhost");     Connection connection = factory.newConnection();      for (int i = 0; i &lt; 1000000; i++) {         Channel channel = connection.createChannel();         channel.exchangeDeclare("myExchange", "direct", true);         channel.queueDeclare("myQueue", true, false, false, null);         String message = "{\"id\" : \"56664f85-62e0-11e5-a74b-59530fbb6d8d\"" + i + "}";         channel.basicPublish("", "myQueue", null, message.getBytes("UTF-8"));         channel.close();     }      connection.close(); } </code></pre>