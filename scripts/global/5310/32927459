<p>I have defined the following structures.</p>  <pre><code>struct Name {     string ln, fn; }; struct StudentRecord{     Name name;     int idNum, *testArrayPtr;     double average;     char grade; }; </code></pre>  <p>I have a method which would ask how many Student records they want to create and how many test scores. I want to write *sr into a binary file at the end of this method how would I do this?</p>  <p>NOTE: getIntInput() and getStringInput() will return the input entered by the user.</p>  <pre><code>void store() { cout &lt;&lt; "How many Student Records are you going to store? Currently Stored: " &lt;&lt; getNumRecords() &lt;&lt; " records."&lt;&lt; endl; int xC = getIntInput("Amount", 1, 256); cout &lt;&lt; "How many test scores per record?" &lt;&lt; endl; int xT = getIntInput("Amount", 0);  StudentRecord *sr = new StudentRecord[xC]; //Runs loop for each record for (int x = 0; x &lt; xC; x++) {     cout &lt;&lt; "--Record #" &lt;&lt; (getNumRecords() + (x + 1)) &lt;&lt; "--" &lt;&lt; endl;     (*(sr + x)).testArrayPtr = new int[xT];      //sets info     (*(sr + x)).name.fn = getStringInput("First Name", 1, 256);     (*(sr + x)).name.ln = getStringInput("Last Name", 1, 256);     (*(sr + x)).idNum = getIntInput("ID Number", 0);      int sum = 0;     for (int y = 0; y &lt; xT; y++) {         int n = y + 1;         //nifty little trick to avoid text error         int temp = getIntInput("Test " + to_string(n), 0, 100);          //Not sure if this would work!         *((*(sr + x)).testArrayPtr + y) = temp;          sum += temp;     }     (*(sr + x)).average = sum / xT;      int a = (*(sr + x)).average;      if (a &gt;= 91) {         (*(sr + x)).grade = 'A';     }     else if (a &gt;= 81) {         (*(sr + x)).grade = 'B';     }     else if (a &gt;= 71) {         (*(sr + x)).grade = 'C';     }     else if (a &gt;= 61) {         (*(sr + x)).grade = 'D';     }     else {         (*(sr + x)).grade = 'F';     }      if (debug) {         cout &lt;&lt; "Record" &lt;&lt; endl;         cout &lt;&lt; "Name: " &lt;&lt; (*(sr + x)).name.fn &lt;&lt; " " &lt;&lt; (*sr).name.ln &lt;&lt; endl;         cout &lt;&lt; "ID #: " &lt;&lt; (*(sr + x)).idNum &lt;&lt; endl;         cout &lt;&lt; "Test Scores: [";         for (int z = 0; z &lt; xT; z++) {             cout &lt;&lt; *((*(sr + x)).testArrayPtr + z) &lt;&lt; ", ";         }         cout &lt;&lt; "]" &lt;&lt; endl;         cout &lt;&lt; "Average: " &lt;&lt; (*(sr + x)).average &lt;&lt; endl;         cout &lt;&lt; "Grade: " &lt;&lt; (*(sr + x)).grade &lt;&lt; endl;     } } </code></pre>  <p>}</p>