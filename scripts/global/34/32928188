<p>This is the assignment: </p>  <blockquote>   <p>Write a script that will generate a single sorted list of three- to five-letter words. Input text will be generated from the on-line ls manual pages (output from ’man ls’ command).</p> </blockquote>  <p>This is my code so far:</p>  <pre><code>man ls | sed '!s/ //g' | tr 'A-Z' 'a-z' | tr -s '\040' '\012' | sort | uniq -u </code></pre>  <p>Here is where I get stuck. We are provided with steps to get the desired result however I am having trouble figuring out the proper grep command. These are the directions:</p>  <blockquote>   <ol start="5">   <li>Using a single grep command, extract the 3 to 5-letter words. Keep in mind that each “word” is now on its own line. You will need to use a regular expression that specifies the whole line (not just a pattern found somewhere in the line). We know that the asterisk represents “zero or more of the previous pattern.” What regular expression is used to represent “from three to five instances of the previous pattern on a line by itself?”. [ Whole line match? You have regurar expression “anchor points” that specify the beginning and end of the line. Use them!</li>   </ol> </blockquote>  <p>I <em>think</em> it should look something like this, but it doesn't work.</p>  <pre><code>grep '{3,5}' </code></pre>  <blockquote>   <p>EXTRA INFORMATION</p>      <ol>   <li>Filter out all characters except spaces and alpha characters (A-Za-z). You can do this by using the stream editor (sed) to remove (substitute with nothing) all characters not in that set. Hint: How do you specify the regular expression to match a single character that is not an alpha or space character?</li>   <li>To avoid duplicates, convert all the letters to the same case. The translate command (tr) should be used to do this (see page 83 of the textbook). For example, ‘The’ and ‘the’ need to be treated as the same word. By making all the text the same case (either upper or lower), you will avoid listing the same mixed-case word more than once.</li>   <li>Modify the remaining text such that each “word” is placed on its own line. Use the tr command to convert all spaces to newlines. Every single “word” is now on a line by itself. Don’t worry about the empty lines. They’ll get filtered out later.</li>   <li>Use the sort command to sort the lines (“words”). Is there an option we can use with sort to remove duplicate lines? Use that option.</li>   <li>Using a single grep command, extract the 3 to 5-letter words. Keep in mind that each “word” is now on its own line. You will need to use a regular expression that specifies the whole line (not just a pattern found somewhere in the line). We know that the asterisk represents “zero or more of the previous pattern.” What regular expression is used to represent “from three to five instances of the previous pattern on a line by itself?”. [ Whole line match? You have regurar expression “anchor points” that specify the beginning and end of the line. Use them! ]</li>   </ol> </blockquote>  <p>I'm very new to this, and haven't been able to find the right way to do it anywhere, probably because I'm not searching for the right thing. If you are familiar with how to do it, I would appreciate if you could also explain how it works instead of just giving the answer. Thank you so much for the help!</p>