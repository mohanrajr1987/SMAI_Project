<p>I am trying to understand the basics of Qt. After going through some posts, I came to know that <code>ui_mainwindow.h</code> gets created by <code>UIC tool</code> and that <code>ui_mainwindow.h</code> contains the information about my form/ui that I created.</p>  <p>In my <code>GUI</code>, I have taken a pushbutton and a graphics view. I want a simple image (which I am creating inside the program itself) gets displayed in the <code>graphicsView</code>. I am trying to do it with two ways (for learning purpose):</p>  <ul> <li>I can write the code inside <code>on_pushButton_clicked()</code>(i.e. the slot of my push_button).</li> <li>I am trying to put the image from the <code>main()</code></li> </ul>  <p><strong>Problem:</strong> I am done with the first method. I used the following lines of code inside <code>on_pushButton_clicked()</code> and it worked.</p>  <pre><code>void MainWindow::on_pushButton_clicked() {         //Display image in the graphics viewer     Mat img(200,200, CV_8UC3, Scalar(255,0,0));     QImage image( img.data, img.cols, img.rows, img.step, QImage::Format_RGB888 );      QGraphicsScene* scene = new QGraphicsScene();     QGraphicsPixmapItem* item = new QGraphicsPixmapItem(QPixmap::fromImage(image));     scene-&gt;addItem(item);     ui-&gt;graphicsView-&gt;setScene(scene); } </code></pre>  <p>Now, I want to do the similar thing from the <code>main()</code>. To do that, now my <code>main()</code> looks like following:</p>  <pre><code>#include "mainwindow.h" #include &lt;QApplication&gt;  //For image #include &lt;QImage&gt; #include &lt;QPixmap&gt; #include &lt;QGraphicsPixmapItem&gt; //#include "ui_mainwindow.h"  //OPENCV Headers #include &lt;opencv2/opencv.hpp&gt;  #include &lt;opencv2/core.hpp&gt; #include &lt;opencv2/imgcodecs/imgcodecs.hpp&gt;  using namespace cv;  int main(int argc, char *argv[]) {     QApplication a(argc, argv);     MainWindow w;      //Display image in the graphics viewer     Mat img(200,200, CV_8UC3, Scalar(255,0,0));     QImage image( img.data, img.cols, img.rows, img.step, QImage::Format_RGB888 );      QGraphicsScene* scene = new QGraphicsScene();     QGraphicsPixmapItem* item = new QGraphicsPixmapItem(QPixmap::fromImage(image));     scene-&gt;addItem(item);     w.ui-&gt;graphicsView-&gt;setScene(scene);      w.show();     return a.exec(); } </code></pre>  <p>The above code written inside the <code>main()</code> works if I put  <code>#include "ui_mainwindow.h"</code> in <code>main.cpp</code>. But if I comment <code>#include "ui_mainwindow.h"</code> and  <code>w.ui-&gt;graphicsView-&gt;setScene(scene);</code> then, it throws error for the <code>QGraphicsScene* scene = new QGraphicsScene();</code>. </p>  <p>Error is <code>main.cpp:32: error: allocation of incomplete type 'QGraphicsScene' QGraphicsScene* scene = new QGraphicsScene();</code></p>  <p><strong>QUESTIONS:</strong> Why is the connection between <code>QGraphicsScene</code> and <code>"ui_mainwindow.h"</code>. I understand that I need <code>"ui_mainwindow.h"</code> for the line <code>w.ui-&gt;graphicsView-&gt;setScene(scene);</code> becasue there I am using my <code>ui</code> but I don't understand the need for <code>QGraphicsScene</code>.</p>