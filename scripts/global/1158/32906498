<p>I have this simple code in class method (using std::map &lt; std::string, std::string> as container for various data):</p>  <pre><code> try {     commonHeader-&gt;version = options.at("M3UA version").at(0);   } catch (const std::out_of_range&amp; err) {     commonHeader-&gt;version = 1;   } </code></pre>  <p>And I'm using QtTest to run some tests, one particular slot having </p>  <pre><code>Q_ASSERT(isupPage-&gt;ui-&gt;cicLineEdit == isupResultPage-&gt;ui-&gt;cicLineEdit); </code></pre>  <p>in the end.</p>  <p>When this test is active, all exceptions become uncatchable, resulting in broken code and std::terminate() for thread. However, changing Q_ASSERT to QVERIFY seems to solve the problem. </p>  <p>Is this intended behavior for Q_ASSERT, or should I look in my code more thoroughly?</p>