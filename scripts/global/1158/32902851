<p>What is the best way to create a circular buffer in Qt? I would just do something like this:</p>  <p>vidoudpsocket.h</p>  <pre><code>typedef struct {     CircularBuffer *before     quint16 *data;     CircularBuffer *next; }CircularBuffer; </code></pre>  <p>videoudpsocket.cpp</p>  <pre><code>VideoUDPSocket::VideoUDPSocket(QObject *parent)     : QObject(parent) {     CircularBuffer buffer0, buffer1, buffer2, buffer3, buffer4, buffer5, buffer6, buffer7;     buffer0.before = buffer7;     buffer0.data = (quint16 *) malloc(16384*16384);     buffer0.next = buffer1;     //... } </code></pre>  <p>Is this a good way to implement it in Qt or is there a better?</p>  <p>Thank you!</p>  <h2>Edit:</h2>  <p>My first try do not even seems to work, the compiler does not know what to do with <code>CircularBuffer</code> inside the structure.</p>  <p>I now try to use QVector but i alwas get the <code>Error allocating memory for data[i]</code>-Debug-Message (at i > 7809).</p>  <pre><code>#define MAXNUMBERRANGEBINS 8192 QVector&lt;quint8**&gt; ringBuffer; ringBuffer.resize(8); foreach(quint8** data, ringBuffer) {     data = (quint8**) malloc(MAXNUMBERRANGEBINS*2*sizeof( quint8* ));     if(data == NULL)         qDebug() &lt;&lt; "Error allocating memory for data";     for(int i = 0; i &lt; MAXNUMBERRANGEBINS*2; i++)     {         data[i] = (quint8*) malloc(MAXNUMBERRANGEBINS*2);         if(data[i] == NULL)             qDebug() &lt;&lt; "Error allocating memory for data[" &lt;&lt; i &lt;&lt; "]";     } } </code></pre>  <p><strong>Edit2</strong> If I calculated right, my array is about 270MB big per buffer, that should explain the memory allocation error, am I right?</p>