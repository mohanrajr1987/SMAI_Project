<p>I would like to create a custom <code>Button</code> by defining my own QML type. This <code>Button</code> type should contain two text fields, one with a single character of a symbol font and the other one the actual button text. </p>  <p>That's simple, but how could I use the native colors, gradients, fonts and borders defined for the target system? </p>  <p>Is it possible to extend <code>Button</code> itself? And how would I disable the possibility to set an image when extending Button?</p>  <pre><code>import QtQuick 2.5  Rectangle {     id:anyButton      property string image:"\ue43f"     property string text:"Button"      border.color : "black"     border.width: 1     radius: 5      Gradient {         id: lightGradient         GradientStop { position: 0.0; color: anyButton.color }         GradientStop { position: 1.0; color: Qt.darker(anyButton.color,1.5) }     }      Gradient {         id: darkGradient         GradientStop { position: 0.0; color: Qt.darker(anyButton.color,1.7) }         GradientStop { position: 1.0; color: Qt.darker(anyButton.color,1.7) }     }      Rectangle{         anchors.horizontalCenter: parent.horizontalCenter         anchors.verticalCenter: parent.verticalCenter          Text{             id:buttonImage         }         Text{             id: buttonLabel             font.pixelSize:20             text: anyButton.text         }     }      signal buttonClick()      MouseArea{         id: buttonMouseArea         anchors.fill: parent         onClicked: parent.buttonClick()         hoverEnabled: true          onEntered:{             parent.border.width= 2         }          onCanceled:{             parent.border.width= 1         }          onExited: {             parent.border.width= 1         }     }     gradient: buttonMouseArea.pressed ? darkGradient : lightGradient } </code></pre>