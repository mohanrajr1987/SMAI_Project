<p>UPDATE: I totally oversimplified the question and led everyone astray with the wrong problem. Here is the <em>actual</em> problem: I'm trying to grab elements whose value matches a regex. I rewrote the question...</p>  <p>Given an XDocument where I don't know the structure, how do I select all elements that have a value matching a regex?</p>  <p>For example:</p>  <pre><code>&lt;html&gt;     &lt;head&gt;&lt;/head&gt;     &lt;body&gt;         &lt;table&gt;             &lt;tr&gt;                 &lt;td&gt;{{ var1 }}&lt;/td&gt;                 &lt;td&gt;{{ var2 }}&lt;/td&gt;             &lt;/tr&gt;             &lt;tr&gt;                 &lt;td&gt;{{ var3 }}&lt;/td&gt;                 &lt;td&gt;{{ var4 }}&lt;/td&gt;             &lt;/tr&gt;         &lt;/table&gt;     &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>I would get a result for html, body, table, tr, and four td elements. How can I select all elements that have a value that matches this regex and only return the td elements</p>  <pre><code>private Regex _placeholderRegex = new Regex("({{.+?}})");  public string GetParsedDocument(...) {     var placeHolders = _template         .Descendants()         .Where(d =&gt; _placeholderRegex.IsMatch(d.Value));      // more stuff     return null; } </code></pre>  <p>I end up getting a result for every element that is an ancestor of the element(s) that I'm looking for...</p>  <p>So now that I think about it, I see that it's just looking at the entire contents of each element and selecting it if it contains a match anywhere in there. So I guess just need to find a way to narrow it.</p>