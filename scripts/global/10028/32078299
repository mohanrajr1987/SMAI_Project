<p>Ok I'm at lost on this simple thing. I want to transform this xml to a dictionary, basically like that:</p>  <pre><code>var xml = "&lt;root&gt;&lt;Hello&gt;World&lt;/Hello&gt;&lt;Foo&gt;Bar&lt;/Foo&gt;&lt;/root&gt;"; var doc = XDocument.Parse(xml); var dic = new Dictionary&lt;string, string&gt;(); foreach (var elem in doc.Root.Elements()) {     dic[elem.Name.LocalName] = elem.Value; } </code></pre>  <p>But I wanted to use ToDictionary, so I wrote this:</p>  <pre><code>var dic = doc.Root.Elements().ToDictionary&lt;string, string&gt;(e =&gt; e.Name.LocalName, e =&gt; e.Value); </code></pre>  <p>But it does not compile ! I get these errors</p>  <blockquote>   <p>Error 1   Instance argument: cannot convert from   'System.Collections.Generic.IEnumerable' to   'System.Collections.Generic.IEnumerable'  Program.cs  65  22<br>   Error 2   'System.Collections.Generic.IEnumerable'   does not contain a definition for 'ToDictionary' and the best   extension method overload   'System.Linq.Enumerable.ToDictionary(System.Collections.Generic.IEnumerable,   System.Func,   System.Collections.Generic.IEqualityComparer)' has some invalid   arguments Program.cs  65  22   Error  3   Argument 2: cannot convert from   'lambda expression' to 'System.Func'   Program.cs  65  71<br>   Error 4   Argument 3: cannot convert from 'lambda expression' to   'System.Collections.Generic.IEqualityComparer'    Program.cs  65  94</p> </blockquote>