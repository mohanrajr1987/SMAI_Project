<p>Ok so I have referenced a namespace so I don't need to provide that context when working with linq to xml</p>  <pre><code>Imports &lt;xmlns:w="http://schemas.openxmlformats.org/wordprocessingml/2006/main"&gt; </code></pre>  <p>so I can get to a list of nodes in my document by, for example the following query</p>  <pre><code>For Each nd In Me.CurrentDocument...&lt;w:pPr&gt;.&lt;w:spacing&gt; Next </code></pre>  <p>But now I have quite a complicated xpath that I want to execute with an or, e.g.</p>  <pre><code>"//w:rPr/w:sz|w:szCs[@w:val]" </code></pre>  <p>I can reference system.xml.xpath to expose the XPPathSelectElements option but then I have to pass a namespace each time.</p>  <pre><code>    For Each nd In Me.CurrentDocument.XPathSelectElements(      "//w:rPr/w:sz|w:szCs[@w:val]", NameSpaceManager)         nd.@w:val = "16"     Next </code></pre>  <p>Can't I get this to default? or do I have to set up a namespace manager and use that every time I want to query on an xpath?</p>  <p>Or, should I be able to execute the same query with the xpath or (|) using linq to xml and the vb shorthand notation?</p>  <p><strong>UPDATE:</strong></p>  <p>Well the more I work on this, the more I see I can get everything done without using XPath queries.</p>  <p>There's a good article here that goes over a lot of the differences: <a href="https://msdn.microsoft.com/en-us/library/bb675156.aspx" rel="nofollow">https://msdn.microsoft.com/en-us/library/bb675156.aspx</a></p>  <h2>Xpath OR</h2>  <pre><code>"//w:rPr/w:sz|w:szCs" </code></pre>  <p>becomes</p>  <pre><code>Me...&lt;w:rPr&gt;.&lt;w:sz&gt;.Concat(Me...&lt;w:rPr&gt;.&lt;w:szCs&gt;) </code></pre>  <h2>XPath Position</h2>  <p>Xpath to get all cells in the first row of all tables:</p>  <pre><code>"//w:tbl/w:tr[1]/w:tc" </code></pre>  <p>becomes</p>  <pre><code>Me...&lt;w:tbl&gt;.SelectMany(Function(a) a.&lt;w:tr&gt;.Take(1).&lt;w:tc&gt;) </code></pre>  <p>Without SelectMany, you just get the first cell in the first row of the first table:</p>  <pre><code>Me...&lt;w:tbl&gt;.&lt;w:tr&gt;.Take(1).&lt;w:tc&gt; </code></pre>  <p>So, as it turns out you can do just about everything that XPath can do, you do get some intellisense but I personally think it's not necessarily easier to write than xpath queries, but it may well be easier to maintain and debug.</p>