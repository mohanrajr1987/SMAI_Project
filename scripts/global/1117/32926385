<p>Here's what I'm trying to do:  I'm doing the book "Pro C# 5.0" by Andrew Troelson and basically in chapter 29 you're supposed to write some C# code that starts out with:</p>  <pre><code>class CustomVisualFrameworkElement : FrameworkElement { ... } </code></pre>  <p>The content of the class isn't real important, because the problem for me lies in "putting stuff in the right place".  By that I mean... Can this class stand alone?  I have to turn it into a DLL, and then try to access the class through some XAML.  How do I do that?  What template must I use?  A DLL template?  </p>  <p>The writer says, "Update the XAML description of the Window to add one of your CustomVisualFrameworkElement objects to the existing StackPanel.  Doing so will require you to build a custom XML namespace that maps to your .NET namespace.</p>  <p>Below that statement in the book there is some XAML (only the important stuff):</p>  <pre><code>xmls:custom="clr-namespace:RenderingWithVisuals" &lt;custom:CustomVisualFrameworkElement/&gt; </code></pre>  <p>So, basically I'm supposed to take some C# code and then turn it into a DLL and then that is accessible by XAML code.  What's the procedure?  I need some nitty-gritty kind of help.</p>  <p>Do I start a fresh C# solution, and only have the CustomVisualFrameworkElement there?  Where in "Solution Explorer" do I put the DLL?  Why can't I just compile the C# code and have XAML reference it?  Where can I find the created DLL?  Is it in the bin or debug folder?  </p>