<p>So I have an items.py with the following:</p>  <pre><code>class ScrapyItem(scrapy.Item):     source = scrapy.Field()     link = scrapy.Field() </code></pre>  <p>and the json output is:</p>  <pre><code>[{"source": "Some source", "link":"www.somelink.com"},  {"source": "Some source again", "link":"www.somelink.org"}] </code></pre>  <p>is there a way change the output to:</p>  <pre><code>[{"source1": "Some source", "link1":"www.somelink.com"},  {"source2": "Some source again", "link2":"www.somelink.org"}] </code></pre>  <p>From the docs, I saw you can manipulate the item values, can you do the same to the items themselves?</p>  <p><strong>EDIT</strong></p>  <p>Here's the new code I'm using for the output with an article_id item_field</p>  <pre><code>article_id = [1] def parse_common(self, response):     feed = feedparser.parse(response.body)     for entry_n, entry in enumerate(feed.entries, start=article_id[-1]):         try:             item = NewsbyteItem()             item['source'] = response.url             item['title'] = lxml.html.fromstring(entry.title).text             item['link'] = entry.link             item['description'] = entry.description             item['article_id'] = '%d' % entry_n             article_id.append(entry_n)             request = Request(                 entry.link,                 callback=getattr(self, response.meta['method']),                 dont_filter=response.meta.get('dont_filter', False)             )              request.meta['item'] = item             request.meta['entry'] = entry              yield request         except Exception as e:             print '%s: %s' % (type(e), e)             print entry </code></pre>  <p>The problem is the entry_n restarts whenever it changes to another url. That's why the list was used.</p>