<p>I have a table in Parse.com. </p>  <p>The Group_members table consist of ==><br> objectId(String, primary key),  groupPointer(Pointer to a Group object),  memberPointer(Pointer to a User object),  hasJoined(boolean) and  declinedInvite(boolean).</p>  <p>I want to query the Group_members table to find users that have joined groups in which the  current user is a member of. "hasJoined" equal to "true" indicates the the user has joined a particular group. Im not sure if using an inner query is the best way to go about it. The code bellow  is returning 0 results given any test data.</p>  <pre><code>    //      Search for new people who have join a group that the User is a member of     ParseQuery&lt;ParseObject&gt; parseQueryNewMembers = ParseQuery.getQuery(TABLE_GROUP_MEMBERS);     parseQueryNewMembers.whereEqualTo(GROUP_MEMBER_JOINED,true);      //        inner query to find to Groups that the User is a member of     ParseQuery&lt;ParseObject&gt; queryUserGroups = ParseQuery.getQuery(TABLE_GROUP_MEMBERS);     queryUserGroups.whereEqualTo(GROUP_MEMBER_MEMBER_POINTER, ParseUser.getCurrentUser());     queryUserGroups.include(GROUP_MEMBER_GROUP_POINTER);      parseQueryNewMembers.whereMatchesQuery(GROUP_MEMBER_GROUP_POINTER, queryUserGroups);      try {          List&lt;ParseObject&gt; queryResults  = parseQueryNewMembers.find();         notificationsParseObjects.addAll(queryResults);     } catch (ParseException e) {         e.printStackTrace();     } </code></pre>