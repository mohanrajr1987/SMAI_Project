<p>I am getting the following error:</p>  <pre><code>events.js:72         throw er; // Unhandled 'error' event               ^ SyntaxError: /vagrant/resources/assets/js/react/react_app.js: Unexpected token (366:10)   364 | var InvestorsTable = React.createClass({   365 |  &gt; 366 |     mixins: [Polling, StateHandler, ComponentBase],       |           ^   367 |    368 |     render: function() {   369 |         return(     at Parser.pp.raise (/vagrant/node_modules/gulp-babel/node_modules/babel-core/node_modules/babylon/lib/parser/location.js:24:13)     at Parser.pp.unexpected (/vagrant/node_modules/gulp-babel/node_modules/babel-core/node_modules/babylon/lib/parser/util.js:82:8)     at Parser.pp.expect (/vagrant/node_modules/gulp-babel/node_modules/babel-core/node_modules/babylon/lib/parser/util.js:76:33)     at Parser.pp.jsxParseExpressionContainer (/vagrant/node_modules/gulp-babel/node_modules/babel-core/node_modules/babylon/lib/plugins/jsx/index.js:301:8)     at Parser.pp.jsxParseElementAt (/vagrant/node_modules/gulp-babel/node_modules/babel-core/node_modules/babylon/lib/plugins/jsx/index.js:370:30)     at Parser.pp.jsxParseElementAt (/vagrant/node_modules/gulp-babel/node_modules/babel-core/node_modules/babylon/lib/plugins/jsx/index.js:362:30)     at Parser.pp.jsxParseElement (/vagrant/node_modules/gulp-babel/node_modules/babel-core/node_modules/babylon/lib/plugins/jsx/index.js:398:15)     at Parser.parseExprAtom (/vagrant/node_modules/gulp-babel/node_modules/babel-core/node_modules/babylon/lib/plugins/jsx/index.js:410:21)     at Parser.pp.parseExprSubscripts (/vagrant/node_modules/gulp-babel/node_modules/babel-core/node_modules/babylon/lib/parser/expression.js:236:19)     at Parser.pp.parseMaybeUnary (/vagrant/node_modules/gulp-babel/node_modules/babel-core/node_modules/babylon/lib/parser/expression.js:217:19) </code></pre>  <p>This error is caused by the following code:</p>  <pre><code>var InvestorsTable = React.createClass({      mixins: [Polling, StateHandler, ComponentBase],      render: function() {         return(             &lt;Table data={this.state.data} /&gt;         );     } }); </code></pre>  <p>How is this invalid syntax? Where is my "unexpected token"? I have another class:</p>  <pre><code>var CapitalRaised = React.createClass({      mixins: [Polling, StateHandler, ComponentBase],      ...  }); </code></pre>  <p>This class doesn't throw an error when its compiled and its compiled <strong>BEFORE</strong> the above class. Like I <strong>can't see</strong> what the issue is .... </p>