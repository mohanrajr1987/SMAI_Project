<p>I want to make a few subclasses of JavaFX's AnchorPane component but in each case inherit AnchorPane's layout features. I am able to define a subclass:</p>  <pre><code>package tuto;  import javafx.scene.Node; import javafx.scene.layout.AnchorPane;  public class TutoPane extends javafx.scene.layout.AnchorPane {      protected void layoutChildren() {         super.layoutChildren();     }  } </code></pre>  <p>... and interestingly I am also able to import this into Scene Builder. However, Scene Builder is not recognizing the inheritance relationship. If I place a normal AnchorPane next to one of my custom TutoPanes in Scene Builder I get this:</p>  <p><a href="http://i.stack.imgur.com/v3pxV.png" rel="nofollow"><img src="http://i.stack.imgur.com/v3pxV.png" alt="showing component in AchorPane"></a></p>  <p>As you can see, the control placed inside of the AnchorPane (green) has positioning defined by the four Anchor Pane constraints. </p>  <p>However when I try with the TutoPane I get this:</p>  <p><a href="http://i.stack.imgur.com/lPJU0.png" rel="nofollow"><img src="http://i.stack.imgur.com/lPJU0.png" alt="showing component in custom pane"></a></p>  <p>The control placed inside the TutoPane (dark slate blue) is stuck in the top left corner and the "layout" properties do not give me the four AnchorPane constraints, which I'd expect to find available due to inheritance. What do I need to do to get Scene Builder to recognize my custom pane as an AnchorPane? Is there an equivalent of the JavaBeans Specification that applies to JavaFX?</p>