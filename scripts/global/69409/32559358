<p>I want to know if you can use TableColoum like Map?</p>  <p>I want to take a file > read the file > scan all characters > map the characters to the FIRST column > map the number of characters to the SECOND column.</p>  <p>Is it possible to do with TableColoum?</p>  <p>Best regards</p>  <p>Alex</p>  <p>EDIT!: Codes here:</p>  <pre><code>        package sample;          import javafx.application.Application;         import javafx.beans.property.SimpleStringProperty;         import javafx.beans.value.ObservableValue;         import javafx.collections.FXCollections;         import javafx.collections.ObservableList;         import javafx.scene.Scene;         import javafx.scene.control.TableColumn;         import javafx.scene.control.TableView;         import javafx.stage.Stage;         import javafx.util.Callback;          import java.io.File;         import java.io.FileNotFoundException;         import java.util.Map;         import java.util.Scanner;         import java.util.TreeMap;          public class Main extends Application {              Map&lt;Character, Integer&gt; countCharacters = new TreeMap&lt;Character, Integer&gt;();             Scanner scanner = null;              @Override             public void start(Stage primaryStage) throws Exception {                  // sample data                   int total = 0;                  try {                  scanner = new Scanner(new File("MY_FILE_PATH_HERE"), "utf-8");                      while (scanner.hasNext()) {                         char[] chars = scanner.nextLine().toLowerCase().toCharArray();                          for (char character : chars) {                             if (Character.isLetter(character)) {                                 if (countCharacters.containsKey(character)) {                                     countCharacters.put(character, countCharacters.get(character) + 1);                                 } else {                                     countCharacters.put(character, 1);                                 }                              }                          }                     }                   } catch (FileNotFoundException e) {                     e.printStackTrace();                 } finally {                     if (scanner != null) {                         scanner.close();                     }                 }                  if (!countCharacters.isEmpty()) {                     for (Map.Entry&lt;Character, Integer&gt; entry : countCharacters.entrySet()) {                         total += entry.getValue();                     }                      for (Map.Entry&lt;Character, Integer&gt; entry : countCharacters.entrySet()) {                         System.out.println(entry.getKey() + ":\t" + entry.getValue() + "  \t: \t " + percentCount(entry.getValue(), total) + "%");                     }   if (!countCharacters.isEmpty()) {             for (Map.Entry&lt;Character, Integer&gt; entry : countCharacters.entrySet()) {                 total += entry.getValue();             }              for (Map.Entry&lt;Character, Integer&gt; entry : countCharacters.entrySet()) {                 System.out.println(entry.getKey() + ":\t" + entry.getValue() + "  \t: \t " + percentCount(entry.getValue(), total) + "%");             }              TableColumn&lt;Map.Entry&lt;Character, Integer&gt;, Character&gt; column1 = new TableColumn&lt;&gt;("Key");              for (Map.Entry&lt;Character, Integer&gt; entry : countCharacters.entrySet())             {                 column1.setCellValueFactory(new PropertyValueFactory&lt;Map.Entry&lt;Character, Integer&gt;, Character&gt;("Test"));             }              TableColumn&lt;Map.Entry&lt;Character, Integer&gt;, Character&gt; column2 = new TableColumn&lt;&gt;("Value");              for (Map.Entry&lt;Character, Integer&gt; entry : countCharacters.entrySet())             {                 column2.setCellValueFactory(new PropertyValueFactory&lt;Map.Entry&lt;Character, Integer&gt;, Character&gt;(""));             }                       ObservableList&lt;Map.Entry&lt;Character, Integer&gt;&gt; items = FXCollections.observableArrayList(map.entrySet());                     final TableView&lt;Map.Entry&lt;Character, Integer&gt;&gt; table = new TableView&lt;&gt;(items);                      table.getColumns().setAll(column1, column2);                      primaryStage.setTitle("Alice");                     primaryStage.setScene(new Scene(table, 300, 275));                     primaryStage.show();                 }             }             public static float percentCount(float number, int total)             {                 return (number / total) * 100;             }               public static void main(String[] args) {                 launch(args);             }         } </code></pre>