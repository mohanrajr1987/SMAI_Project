<p>So, I'm working on a page that requires the display of 2 Kendo grids. The grids are based on the same model, have the same schema, etc. The only difference being the value of one of the model properties (and the associated grid name and CRUD calls). For example:</p>  <pre><code>&lt;div&gt; @(Html.Kendo().Grid&lt;Person&gt;()             .Name("Sales")             .Columns(columns =&gt;             {                 columns.Bound(c =&gt; c.FullName);                 columns.Bound(c =&gt; c.Department);                 columns.Command(command =&gt;                 {                     command.Edit();                     command.Destroy();                 });             })             .ToolBar(toolbar =&gt; toolbar.Create())             .Editable(editable =&gt; editable.Mode(GridEditMode.InLine))             .Sortable()             .DataSource(datasource =&gt; datasource                 .Ajax()                 .ServerOperation(false)                 .Model(model =&gt; model.Id(u =&gt; u.PersonID))                 .Create(update =&gt; update.Action("Person_Create", "Admin", new { positionTypeId = 1 }))                 .Read(read =&gt; read.Action("Person_Read", "Admin"))                 .Update(update =&gt; update.Action("Person_Update", "Admin"))                 .Destroy(update =&gt; update.Action("Person_Destroy", "Admin"))             )) &lt;/div&gt; &lt;div&gt;             @(Html.Kendo().Grid&lt;Person&gt;()             .Name("IT")             .Columns(columns =&gt;             {                 columns.Bound(c =&gt; c.FullName);                 columns.Bound(c =&gt; c.Department);                 columns.Command(command =&gt;                 {                     command.Edit();                     command.Destroy();                 });             })             .ToolBar(toolbar =&gt; toolbar.Create())             .Editable(editable =&gt; editable.Mode(GridEditMode.InLine))             .Sortable()             .DataSource(datasource =&gt; datasource                 .Ajax()                 .ServerOperation(false)                 .Model(model =&gt; model.Id(u =&gt; u.PersonID))                 .Create(update =&gt; update.Action("Person_Create", "Admin", new { positionTypeId = 2 }))                 .Read(read =&gt; read.Action("Person_Read", "Admin"))                 .Update(update =&gt; update.Action("Person_Update", "Admin"))                 .Destroy(update =&gt; update.Action("Person_Destroy", "Admin"))             )) &lt;/div&gt; </code></pre>  <p>Where the model would be</p>  <pre><code>public class Person {     public int PersonID { get; set; }     public string Department{ get; set; }     public int PositionTypeId { get; set; }     public string FullName { get; set; } } </code></pre>  <p>So, each of the grids has a unique Id, but many of the elements inside the grids will have identical Ids. Obviously, this is not ideal. If, for example (what I'm dealing with now) I want to attach a dropdownlist editor for Department,</p>  <pre><code>@(Html.Kendo().DropDownList()     .Name("Department")     .BindTo((System.Collections.IEnumerable)ViewData["Department"]) ) </code></pre>  <p>kendo will look at the .Name() in the DropDownList, and attach the template to the first element it comes to with the proper id. So, the first grid gets its editor created (twice), while the second remains a standard textbox input.</p>  <p>So I'm wondering if there is a way to avoid this issue (preferably without re-coding the grids in js).</p>