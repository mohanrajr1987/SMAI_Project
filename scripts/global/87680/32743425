<p>I have nested grids. Inner grid allows inline editing. In special cases after creating new element (row in table) in inner grid, other row of inner grid should be changed. I change that row in database but I dont know how to refresh inner grid. If user press "refresh button" of the grid the data will be shown. How to make inner grid refreshing after adding/editing elements? </p>  <p><br> Outer grid</p>  <pre><code>@(Html.Kendo().Grid&lt;Portal2.Areas.ResourceGrouping.Models.TruckTrailerDriverViewModel&gt;()   .Name("TruckGrid")   .DataSource(dataSource =&gt; dataSource       .Ajax()       .Events(events =&gt; events.Error("error_handler"))       .Model(model =&gt; model.Id(m =&gt; m.Id))         .Read(read =&gt; read.Action("JsonTruckTrailerDriverRead", "TrucksGrouping"))    )   .Columns(columns =&gt;   {       columns.Bound(x =&gt; x.TruckRegNum);       columns.Bound(x =&gt; x.TrailerStartDate);       columns.Bound(x =&gt; x.TrailerEndDate);       columns.Bound(x =&gt; x.TrailerRegNum);       columns.Bound(x =&gt; x.DriverStartDate);       columns.Bound(x =&gt; x.DriverEndDate);       columns.Bound(x =&gt; x.DriverName);   })   .Pageable(p =&gt; p       .Refresh(true)       .PageSizes(true)       .ButtonCount(5)       .PageSizes(new[] { 20, 30, 40, 50, 100 }))   .Filterable(ftb =&gt; ftb.Mode(GridFilterMode.Row))   .Reorderable(reorder =&gt; reorder.Columns(true))   .Events(events =&gt; events       .DetailExpand("detailExpand")       )   .ClientDetailTemplateId("template") ) </code></pre>  <p>Template </p>  <pre><code>&lt;script id="template" type="text/kendo-tmpl"&gt; @(Html.Kendo().TabStrip()       .Name("tabStrip_#=Id#")       .SelectedIndex(0)       .Animation(animation =&gt; animation.Open(open =&gt; open.Expand(ExpandDirection.Vertical)))       .Items(items =&gt;       {           items.Add().Text("Прицепы").Content(@&lt;text&gt; @TruckTrailer() &lt;/text&gt;);           items.Add().Text("Экипажи").Content(@&lt;text&gt; @TruckDriver() &lt;/text&gt;);       })                         .ToClientTemplate() ) </code></pre>  <p></p>  <p>Inner grid</p>  <pre><code>    @helper  TruckTrailer() {     @(Html.Kendo().Grid&lt;Portal2.Areas.ResourceGrouping.Models.CouplerViewModel&gt;()             .Name("grid_trailers_#=Id#")             .Columns(columns =&gt;             {                 columns.Bound(col =&gt; col.TruckRegNum);                 columns.Bound(col =&gt; col.TrailerRegNum).EditorTemplateName("TrailerTemplateEditor").Width(100);                 columns.Bound(col =&gt; col.StartDate).EditorTemplateName("DateTimeEditor").Width(200);                 columns.Bound(col =&gt; col.EndDate).EditorTemplateName("DateTimeEditor").Width(200);                 columns.Command(c =&gt; c.Edit());                 columns.Command(c =&gt; c.Destroy());              })             .Sortable()             .Editable(editable =&gt; editable.Mode(GridEditMode.InLine))             .ToolBar(toolbar =&gt; { toolbar.Create(); })             .DataSource(data =&gt; data                 .Ajax()                 .Sort(sort =&gt; sort.Add("StartDate").Descending())                 .Events(events =&gt;                 {                     events.Error("error_handler");                 })                 .Model(model =&gt;                 {                     model.Id(m =&gt; m.Id);                 })                 //required: назвать поле именем, отличным от TruckId (например OwnerTruckId), иначе кендо отказываетсая работать                 .Create(update =&gt; update.Action("JsonCouplerCreate", "TrucksGrouping", new { OwnerTruckId = "#= Id #" }))                 .Read(read =&gt; read.Action("JsonCouplerRead", "TrucksGrouping", new { TruckId = "#= Id #" }))                 .Update(update =&gt; update.Action("JsonCouplerUpdate", "TrucksGrouping"))                 .Destroy(update =&gt; update.Action("JsonCouplerDestroy", "TrucksGrouping"))             )             .Pageable(pager =&gt; pager.Refresh(true))             .Filterable(ftb =&gt; ftb.Mode(GridFilterMode.Menu))             .Reorderable(reorder =&gt; reorder.Columns(true))             .ToClientTemplate()     ) } </code></pre>  <p>Controller</p>  <pre><code>[AcceptVerbs(HttpVerbs.Post)]     public ActionResult JsonCouplerCreate([DataSourceRequest]DataSourceRequest request, CouplerNewViewModel model)     {         Guid newItemId = Guid.Empty;         if (model != null &amp;&amp; ModelState.IsValid)         {             newItemId = TrucksGroupingUtility.Create(model, User.Identity.Name);              var jsonContactsCreate = Json(GetSingleCouplerViewModel(newItemId).ToDataSourceResult(request, ModelState));             return jsonContactsCreate;         }          return Json(new[] { model }.ToDataSourceResult(request, ModelState));      } </code></pre>  <p>If i missed some nessesary code to understand my problem pls write here in comments - i will add</p>