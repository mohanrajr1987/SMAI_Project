<p>I have some (usually &lt; 300 symbols length) string like 'aabbccdcabcbbacdaaa'.</p>  <p>There is python dictionary where keys are strings in similar format, e.g. 'bcccd', key length varies from 10 to 100 symbols. The dictionary has <strong>half a million</strong> items.</p>  <p>I need to match my initial string with dictionary's value or find out that there are no proper values in dictionary. Matching condition: dictionary key should be somewhere within string (strict matching).</p>  <p>What is the best way, in terms of computational speed, to do it? I feel there should be some tricky way to hash my initial string and dictionary keys as to apply some clever ways of substring search (like Rabin-Karp or Knuth-Morris-Pratt). Or suffix tree-like structure could be a good solution?</p>