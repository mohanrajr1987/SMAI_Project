<p>Okay first here is the code:</p>  <pre><code>int recvMast_sock; struct sockaddr_in serv_addr, cli_addr; socklen_t cli_len; if ((recvMast_sock = socket(AF_INET, SOCK_DGRAM, 0)) == -1)   {     critErr("listen:socket=");   }  fillSockaddrAny(&amp;serv_addr, UDP_NODE_LISTEN_PORT);// fills the sockaddr_in works fine elsewhere  if ((bind(recvMast_sock, (struct sockaddr*) &amp;serv_addr, sizeof serv_addr)) &lt; 0)   {     critErr("listen:bind recv_mast_sock:");   } recvReturn_i = recvfrom(recvMast_sock, &amp;recvBuff[0], (size_t)1, 0, (struct   sockaddr*) &amp;cli_addr, &amp;cli_len); if(recvReturn_i &lt;0)         printf("recv error%d\n",errno); </code></pre>  <p>critErr is a function to handle errors which also includes a print of the error and an <code>exit</code>.</p>  <p>This runs ins a thread, if this is of an relevance. If I compile and run this on a Zedboard (ZYNQ-7000 SoC) which has an ARM Cortex A9 and Linaro Linux which is based on precise Ubuntu. It prints error <code>22</code> but still has the received value in <code>recvBuff[0]</code>.</p>  <p>Running this in my VM with xubuntu it works fine.</p>  <p>Error <code>22</code> equals <code>EINVAL</code> which is described as Invalid argument.</p>  <p>In the manpage of <a href="http://www.manpagez.com/man/2/recvfrom/" rel="nofollow"><code>recvfrom(2)</code></a> it states <code>EINVAL</code> means that the <code>MSG_OOB</code> flag is set but I dont use any flags <code>0</code>. </p>  <p>Before leaving on friday I started an <code>apt-get</code> upgrade because I hope it is a faulty library or something like this.  I can check back at monday but maybe someone here has another idea what is wrong.</p>