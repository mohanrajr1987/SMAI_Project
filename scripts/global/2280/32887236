<p>For a power conversion application we need to do various floating point calculations as quickly as possible on an ARM Cortex-M4 platform.</p>  <p>We are developing with Keil uVision.</p>  <p>We would like to declare some variables as register variables but get nothing but errors from the compiler.</p>  <p>Seems like this is something that would be very useful, as the FPU has 32 registers, and we could save a lot of cycles by storing our data in these registers rather than reloading from RAM every time our ISR is called.</p>  <p>We tried using:</p>  <pre><code>register float a1 __asm__("s0"); </code></pre>  <p>but receive an error: unknown register name "s0"</p>  <p>It seems odd, because in the debugger interface I can see that the compiler is using the s0 register. If I declare the register as "r0" instead, there is no error, so it seems like there is some missing FPU support somewhere, but not sure where.</p>  <p>I look at the Assembler control string and seems like floating point is supported:</p>  <pre><code>--cpu Cortex-M4.fp --pd "__EVAL SETA 1" -g --apcs=interwork  -I D:\my_project -I D:\Keil_v5\ARM\PACK\ARM\CMSIS\4.4.0\CMSIS\Include  </code></pre>  <p>We also tried:</p>  <pre><code>__global_freg(1) float a1; </code></pre>  <p>This didn't work either.</p>  <p>Any ideas?</p>