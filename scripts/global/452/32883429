<p>I am setting up a deep neural network to play connect-4 that has to compete against other AI bots on a very limited machine (don't know the specific limitations yet, only that I will only have a couple cores and a small amount of memory). Thus, I am looking to optimize my training set in any way possible. It currently represents the states on the boards as such:</p>  <p><code>b</code> for blank (no piece present)</p>  <p><code>x</code> for "x" piece present</p>  <p><code>o</code> for "o" piece present</p>  <p><code>win</code> for a won setup</p>  <p><code>loss</code> for a lost setup</p>  <p><code>draw</code> for a drawn setup</p>  <p>Essentially I am trying to map it so that my 3 bit integer can take the place of these memory-heavy strings. I thought about using a <code>short</code>, but it comes in as worse than <code>char</code> at 16 bits. I want to map it like such:</p>  <p><code>000</code> -> <code>b</code></p>  <p><code>001</code> -> <code>x</code></p>  <p><code>010</code> -> <code>o</code></p>  <p><code>011</code> -> <code>win</code></p>  <p><code>100</code> -> <code>loss</code></p>  <p><code>101</code> -> <code>draw</code></p>  <p>Since I can represent these states in 3 bits of space instead of chars (8 bits per char, yikes!) I would like to attempt that. However I am not sure how to instantiate a variable like this in c.</p>  <p>The training set is 67557 rows long representing a 6x7 board in each row with an win/loss/draw clause following. So saving 5 bits per char would save <code>(5*6*7)+(5*1) = 215</code> bits per row and <code>215*67557 = 14524755</code> bits overall (1.81 MB of 2.90 MB total, a 62% decrease in overall space).</p>