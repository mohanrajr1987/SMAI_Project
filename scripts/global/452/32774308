<p>good folks! </p>  <p>I am building a version of a Minesweeper game and one thing that I am trying to do is have, in the message fram of the JFrame border layout, a counter for all of the mines that are currently on the board. that is, have the number start with all of them and then decrement or increment as the user places or removes a flag. </p>  <p>Below is the code I have thus far. </p>  <p>I have the code split up into 4 different classes. </p>  <p>The first houses the main method: </p>  <pre><code>import java.awt.*; import javax.swing.*;  public class Minesweeper extends JFrame  {      public Minesweeper()      {         setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);         setVisible(true);         setTitle("Minesweeper");          add(new MinePanel());         setSize(600,600);     }      public static void main(String[] args)      {         Minesweeper ex = new Minesweeper();      } } </code></pre>  <p>The second houses the class for the individual Mine Cell:</p>  <pre><code>public class MineCell      {         boolean isMine=false;         boolean isFlagged=false;         boolean isRev=false;         int SurMines=0;     } </code></pre>  <p>The third houses the game logic: </p>  <pre><code>import java.util.Random; public class MineGame {     MineCell[][] board;      public MineGame(int rows, int cols)     {         board = new MineCell[rows][cols];         Random rand = new Random(System.currentTimeMillis());         for (int i = 0; i &lt; rows; i++)         {             for (int j = 0; j &lt; cols; j++)             {                 board[i][j] = new MineCell();                 if (rand.nextDouble() &lt; .25)                 {                     board[i][j].isMine=true;                 }             }         }          for (int i = 0; i &lt; rows; i++)         {             for (int j = 0; j &lt; cols; j++)             {                 try {                     if (board[i-1][j-1].isMine == true)                     {                         board[i][j].SurMines++;                     }                 } catch (ArrayIndexOutOfBoundsException ex){}                 try {                     if (board[i-1][j].isMine == true)                     {                         board[i][j].SurMines++;                     }                 } catch (ArrayIndexOutOfBoundsException ex){}                 try {                     if (board[i-1][j+1].isMine == true)                     {                         board[i][j].SurMines++;                     }                 } catch (ArrayIndexOutOfBoundsException ex){}                 try {                     if (board[i][j-1].isMine == true)                     {                         board[i][j].SurMines++;                     }                 } catch (ArrayIndexOutOfBoundsException ex){}                 try {                     if (board[i][j+1].isMine == true)                     {                         board[i][j].SurMines++;                     }                 } catch (ArrayIndexOutOfBoundsException ex){}                 try {                     if (board[i+1][j-1].isMine == true)                     {                         board[i][j].SurMines++;                     }                 } catch (ArrayIndexOutOfBoundsException ex){}                 try {                     if (board[i+1][j].isMine == true)                     {                         board[i][j].SurMines++;                     }                 } catch (ArrayIndexOutOfBoundsException ex){}                 try {                     if (board[i+1][j+1].isMine == true)                     {                         board[i][j].SurMines++;                     }                 } catch (ArrayIndexOutOfBoundsException ex){}             }         }     }      public boolean revCell(int row, int column)     {         if (board[row][column].isFlagged == false)         {             if(board[row][column].isMine == true)             {                 for (int i = 0; i &lt; board.length; i++)                 {                     for (int j = 0; j &lt; board[i].length; j++)                     {                         if (board[i][j].isMine == true)                         {                         board[i][j].isRev = true;                         }                     }                 }                }             else             {                 board[row][column].isRev = true;             }             return true;                         }         return false;     }     public boolean flagCell(int row, int column)     {         if (board[row][column].isRev == false)         {             if (board[row][column].isFlagged == false)             {                 board[row][column].isFlagged = true;             }             else              {                 board[row][column].isFlagged = false;             }             return true;         }                    return false;     } } </code></pre>  <p>The fourth and final houses the view:</p>  <pre><code>import java.awt.*; import java.awt.event.*; import javax.swing.*;  public class MinePanel extends JPanel implements MouseListener {        int rows = 10;     int cols = 10;     MineGame game;     JButton[][] buttons;     public MinePanel()      {          setLayout(new GridLayout(rows,cols));         game = new MineGame(rows,cols);         buttons = new JButton[rows][cols];          for (int i = 0; i &lt; rows; i++)         {             for (int j = 0; j &lt; cols; j++)             {                 JButton cell = new JButton("?");                 cell.addMouseListener(this);                 buttons[i][j]=cell;                 add(cell);             }         }     }      public void mouseEntered(MouseEvent e)     {     }     public void mouseExited(MouseEvent e)     {     }     public void mousePressed(MouseEvent e)     {     }     public void mouseReleased(MouseEvent e)     {     }     public void mouseClicked(MouseEvent e)     {         int r=0;         int c=0;         for (int i = 0; i &lt; rows; i++)         {             for (int j = 0; j &lt; cols; j++)             {                 if(buttons[i][j]==e.getSource()) {                     r=i;                     c=j;                     break;                 }             }         }         if (SwingUtilities.isLeftMouseButton(e))         {             if(game.revCell(r,c)==true) //update view because cell revealed             {                 if (game.board[r][c].isMine == true)                 {                     ((JButton)e.getSource()).setText("*");                     JOptionPane.showMessageDialog(this, "Thanks for playing.","GAME OVER", JOptionPane.PLAIN_MESSAGE);                     System.exit(0);                                      for (int i =0; i &lt; buttons.length; i++)                     {                         for (int j = 0; j &lt; buttons[i].length; j++)                         {                             if (game.board[i][j].isMine == true)                             {                                 buttons[i][j].setText("*");                             }                         }                     }                 }                 else                  {                     ((JButton)e.getSource()).setText(""+ game.board[r][c].SurMines);                     /*if(game.board[r][c].SurMines==0) {                         ((JButton)e.getSource()).setIcon(new ImageIcon("zero.jpg"));                     }                      else if() {                     }*/                 }             }             //System.out.println("Left Button Test.");         }         else if (SwingUtilities.isRightMouseButton(e))         {             if (game.flagCell(r, c) == true)             {                 if (game.board[r][c].isFlagged == true)                 {                     ((JButton)e.getSource()).setText("F");                 }                 else                  {                     ((JButton)e.getSource()).setText("?");                 }             }             //System.out.println("Right Button Test.");         }         //refresh the view           repaint();     }   } </code></pre>  <p>I apologize if this is too much code for one question, but I wanted to include it all just to be sure you had all that you would need to best answer. </p>  <p>Like I said, I am trying to add a conter for total number of mines to the JFrame beside "Minesweeper". </p>  <p>Thank you in advance for all of your help.</p>