<p>I created special metaclass so I can have nice wrapper for programs/commands with first 'action' argument ( without dash(es) ). Especially svn, git etc. I don't want to use external tools for that purpose.</p>  <pre><code>  import subprocess    class CmdWrap(type):        def __new__(mcs, name, bases=(object,), dict={}):           dict['name'] = name           return type.__new__(mcs, name, bases, dict)        def __getattr__(self, name):           def run_cmd(*args, **kwds):               cmd = (self.name, name) + args               process = subprocess.Popen(cmd,                                          stdout=subprocess.PIPE,                                          stderr=subprocess.PIPE,                                          cwd=None)               out = process.communicate()                if process.returncode != 0:                   raise Exception(cmd, process.returncode, out)               else:                   return out            if name in self.__dict__:               return self.__dict__['name']           else:               return run_cmd </code></pre>  <p>What do you think ? Would prefer running you favourite command like that:</p>  <pre><code>svn = CmdWrap('svn') svn.ls('http://your_repository/') </code></pre>  <p>Could be done better ? Or do you think it is misuse of metaclasses ? Tell me.</p>