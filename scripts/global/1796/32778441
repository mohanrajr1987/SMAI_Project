<p>I am trying to execute a program from python2x.</p>  <p>In terminal, the job will run as:</p>  <pre><code>mpirun -np 8 ~/WORK/scf Fe_SCF.inp &gt; Fe_SCF.out </code></pre>  <p>Where <code>Fe_SCF.*</code>  are input and output in the <code>CWD</code>.</p>  <p>Now, I am trying to run this piece from  python script. Since, I have defined them as variable and tried to call as:</p>  <pre><code>call(["mpirun -np 8 ~/WORK/scf", scfin,  scfout]) </code></pre>  <p>Giving Error:</p>  <pre><code>  File "./triolith.py", line 38, in &lt;module&gt;         call(["mpirun -np 8 ~/WORK/scf", scfin,  scfout])       File "/usr/lib64/python2.7/subprocess.py", line 522, in call         return Popen(*popenargs, **kwargs).wait()       File "/usr/lib64/python2.7/subprocess.py", line 710, in __init__         errread, errwrite)       File "/usr/lib64/python2.7/subprocess.py", line 1335, in _execute_child         raise child_exception     OSError: [Errno 2] No such file or directory </code></pre>  <p>Using real filename does not solve the problem either:</p>  <pre><code> call(["mpirun -np 8 ~/WORK/scf", "Fe_SCF.inp",  "Fe_SCF.out"]) </code></pre>  <p>Which gives error:</p>  <pre><code>File "./triolith.py", line 38, in &lt;module&gt;     call(["mpirun -np 8 ~/WORK/scf", "Fe_SCF.inp",  "Fe_SCF.out"])   File "/usr/lib64/python2.7/subprocess.py", line 522, in call     return Popen(*popenargs, **kwargs).wait()   File "/usr/lib64/python2.7/subprocess.py", line 710, in __init__     errread, errwrite)   File "/usr/lib64/python2.7/subprocess.py", line 1335, in _execute_child     raise child_exception OSError: [Errno 2] No such file or directory </code></pre>  <p>I have checked and can confirm, using os.system is working with "Real" filename, but not with variable name as:</p>  <pre><code> os.system("mpirun -np 8 ~/WORK/scf scfin" ) </code></pre>  <p>So, using either of two method, how can I call the program with a variable name as input and output?</p>