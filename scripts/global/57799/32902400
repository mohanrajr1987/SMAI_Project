<p>I run first time into a problem with Symfony (2.7) authentication, where I really couldn't find a working solution. Although Symfony has a dedicated configuration option <em>logout</em> -> <em>target</em>, this gets never applied on logouts, I always get directed to /. I probably missed some constraint on implementing this correctly.</p>  <p>Ok, I'm using:</p>  <ul> <li>Form based login</li> <li>Hooked custom failure, success and logout handlers, which are working perfectly</li> </ul>  <p>My config.yml firewall</p>  <pre><code>secured_area:         pattern:    ^/         stateless:  false         form_login:             ...         logout:             path:   logout             target: /test             success_handler: logout_success_handler         anonymous: ~ </code></pre>  <p>For testing I even added</p>  <pre><code>access_control:     - { path: ^/test, roles: IS_AUTHENTICATED_ANONYMOUSLY }     - { path: ^/,     roles: IS_AUTHENTICATED_ANONYMOUSLY } </code></pre>  <p>I'm using route-names for the paths, the route exists and are working ok (I can <em>login</em>, <em>login_check</em> and <em>logout</em>).</p>  <p>My expectation by setting <em>logout</em> -> <em>target</em>, that on logout I get redirected to the page /test. But whatever I tried, until now I'm always on / after logout.</p>  <p>I would be very glad, if somebody can point me into the correct direction, how to logout to a custom route (I also tried already <em>target</em> with a route name). Many thanks!</p>  <p>BTW:</p>  <p>My logout_success_handler does currently nothing. By enabling the dump, I just also see, that the redirection is always going to / and not to /test.</p>  <pre><code>public function onLogoutSuccess(Request $request) {     $response = parent::onLogoutSuccess($request);      //var_dump($response); die;      return $response; } </code></pre>