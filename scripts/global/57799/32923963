<p>I have 2 entities:</p>  <pre><code>Brs\UserBundle\Entity\User: type: entity table: user repositoryClass: Brs\UserBundle\Entity\UserRepository id:     id:         type: integer         generator: { strategy: AUTO } fields:     username:         type: string         length: 50     fname:         type: string         length: 30     lname:         type: string         length: 30     email:         type: string         length: 75     mobile:         type: string         length: 20     active:         type: boolean     mentor:         type: boolean     roll:         type: string         length: 10     profitPercentage:         type: string         length: 10     initialized:         type: datetime     password:         type: string         length: 255 oneToMany:     requests:         targetEntity: Brs\FundingBundle\Entity\Request         mappedBy: requests </code></pre>  <p>and:</p>  <pre><code>Brs\FundingBundle\Entity\Request: type: entity table: null repositoryClass: Brs\FundingBundle\Entity\RequestRepository id:     id:         type: integer         id: true         generator:             strategy: AUTO fields:     amount:         type: integer     status:         type: integer     datetime:         type: datetime     note:         type: string         length: 255     approval:         type: boolean manyToOne:     user:         targetEntity: Brs\UserBundle\Entity\User         inversedBy: user lifecycleCallbacks: {  } </code></pre>  <p>in Brs\FundingBundle\Entity\Request:</p>  <p>I have the property declared:</p>  <pre><code>private $user; </code></pre>  <p>and in Brs\FundingBundle\Entity\User:</p>  <p>I have the property declared:</p>  <pre><code>private $requests; </code></pre>  <p>When I run:</p>  <pre><code>php app/console doctrine:schema:update --force </code></pre>  <p>I get the following result: </p>  <pre><code>Updating database schema... Database schema updated successfully! "3" queries were executed </code></pre>  <p>Which seems fine, This creates the requests table and adds the user_id foreign key to it which is what I want.</p>  <p>However I have mulled over the documentation over at <a href="http://doctrine-orm.readthedocs.org/en/latest/reference/association-mapping.html" rel="nofollow">Doctrine 2 association mapping</a> and I cannot seem to understand confidently the inverse, owning and mappedBy logic.</p>  <p>If someone could explain this with regards to my example above thoroughly It would be greatly appreciated.</p>  <p>So in this instance a user <strong>has many</strong> requests.</p>  <p>Thanks in advance.</p>