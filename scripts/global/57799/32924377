<p>How to custom SonataAdminBundle form. sonata many to many with extra fields. sonata with form event listener.</p>  <p>you have entities and the configureFormFields method in sonata admin class.</p>  <p><strong>Entities:</strong></p>  <p>Event:<br> id<br> title<br></p>  <p>Attribute:<br> id<br> name<br> title<br> type</p>  <p>EventAttributes:<br> event_id<br> attribute_id<br> value<br></p>  <p><strong>EventAttributeAdmin</strong></p>  <pre><code>     /**      * @param FormMapper $formMapper      */     protected function configureFormFields(FormMapper $formMapper)     {          $formMapper                 -&gt;add('event','sonata_type_model_hidden')                 -&gt;add('attribute')                 -&gt;add('value')                 -&gt;add('title')                 -&gt;add('webIndex')                 ;          $formMapper-&gt;getFormBuilder()-&gt;addEventListener(FormEvents::PRE_SET_DATA, function (FormEvent $event) use ($formMapper){             $entity = $event-&gt;getData();               if (!$entity) {                 return;             }              //no edit attribute             $attribute = $entity-&gt;getAttribute();             if(null != $attribute){                 $form = $event-&gt;getForm();                 $form-&gt;remove('attribute');                  $formMapper-&gt;add('attribute',null,array(                     'read_only' =&gt; true,                     'disabled' =&gt; true,                     ));                 $attrWidget = $formMapper-&gt;getFormBuilder()-&gt;getForm()-&gt;get('attribute');                 $form-&gt;add($attrWidget);             }           });      } </code></pre>