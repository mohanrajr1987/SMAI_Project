<p>I have an entities: Region and City (City is linked to Region with ManyToOne). Also I have another entity: Company. This entity is related to City with ManyToOne.</p>  <p>I want to create Custom Filed Type 'geo' to handle geographical fields in any entity. It should work like that: </p>  <ul> <li>When i render City form, this custom field should contains only Region selectbox (because City is linked to Region)</li> <li>If i want to render Company form this custom field should contains two selectboxes: Region and City (because Company is linked to City and City is linked to Region)</li> </ul>  <p>So, this custom field type depends on data passing to it.</p>  <p>But when i run my code i get an error:</p>  <blockquote>   <p>Neither the property "region" nor one of the methods "getRegion()",   "region()", "isRegion()", "hasRegion()", "_get()" exist and have   public access in class "Proxies__CG__\OQ\ReferenceBundle\Entity\Region".</p> </blockquote>  <p>And this erroris expectable, because i pass Region entity to custom field type where i try to get unexisted property 'region'. I dont know what to do...</p>  <p>Look at my GeoType class:</p>  <pre><code>class GeoType extends AbstractType {      public function buildForm(FormBuilderInterface $builder, array $options)     {          $builder-&gt;addEventListener(FormEvents::PRE_SET_DATA, function (FormEvent $event) {             $form = $event-&gt;getForm();             $data = $event-&gt;getData();              // If field was created from City form, ERROR IS HERE             if ($data instanceof Region) {                 $form-&gt;add('region', 'entity', array(                         'class' =&gt; 'OQReferenceBundle:Country',                     )                 );             }              // If field was created from Company form             if ($data instanceof City) {                 $form-&gt;add('region', 'entity', array(                     'class' =&gt; 'OQReferenceBundle:Region',                 ));             }         });           //No widget added by default because we need to check object passed to this form     }      public function configureOptions(OptionsResolver $resolver)     {         $resolver-&gt;setDefaults(array());     }      /**      * @return string      */     public function getName()     {         return 'geo';     }      /**      * @return string      */     public function getParent()     {         return 'form';     } } </code></pre>  <p>And that is how i render this custom field in Company and City forms:</p>  <pre><code>class CityType extends AbstractType {     ...     public function buildForm(FormBuilderInterface $builder, array $options)     {         ...         $builder             -&gt;add(                 'region',                 'geo',                 array(                     'required' =&gt; true,                     'data_class' =&gt; 'OQ\ReferenceBundle\Entity\Region',                 )             );         ...     }     ... }  class CompanyType extends AbstractType {     ...     public function buildForm(FormBuilderInterface $builder, array $options)     {         ...         $builder             -&gt;add(                 'city',                 'geo',                 array(                     'required' =&gt; true,                     'data_class' =&gt; 'OQ\ReferenceBundle\Entity\City',                 )             );         ...     }     ... }    </code></pre>