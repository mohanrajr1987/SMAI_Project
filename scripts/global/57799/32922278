<p>I have this scenario where I have to select specific columns of Entity and join entities.</p>  <pre><code>This statement works and fetches all columns of all Entities. $this-&gt;createQueryBuilder('e')         -&gt;select('e','bs','t')         -&gt;leftJoin('e.bits', 'bs')         -&gt;leftJoin('bs.tests', 't')         -&gt;getQuery()         -&gt;getResult(\Doctrine\ORM\Query::HYDRATE_ARRAY) </code></pre>  <p>Question 1</p>  <p>I want something like this</p>  <p>Try 1</p>  <pre><code>$this-&gt;createQueryBuilder('e')         -&gt;select('e.title','bs.name','bs.content','t.id','t.date')         -&gt;leftJoin('e.bits', 'bs')         -&gt;leftJoin('bs.tests', 't')         -&gt;getQuery()         -&gt;getResult(\Doctrine\ORM\Query::HYDRATE_ARRAY) </code></pre>  <p>But this throws errors like</p>  <pre><code>[Semantical Error] line 0, col -1 near 'SELECT e.title,': Error: Cannot select entity through identification variables without choosing at least one root entity alias. </code></pre>  <p>Try 2</p>  <pre><code>$this-&gt;createQueryBuilder()         -&gt;select('e.title','bs.name','bs.content','t.id','t.date')         -&gt;from($this-&gt;_entityName, "e")         -&gt;leftJoin('e.bits', 'bs')         -&gt;leftJoin('bs.tests', 't')         -&gt;getQuery()         -&gt;getResult(\Doctrine\ORM\Query::HYDRATE_ARRAY) </code></pre>  <p>This throws error      Warning: Missing argument 1 for Doctrine\ORM\EntityRepository::createQueryBuilder(),</p>  <p>Try 3</p>  <pre><code>This works but only if I select from just 1 Entity      $this-&gt;createQueryBuilder('e')         -&gt;select('e.title')         -&gt;leftJoin('e.bits', 'bs')         -&gt;leftJoin('bs.tests', 't')         -&gt;getQuery()         -&gt;getResult(\Doctrine\ORM\Query::HYDRATE_ARRAY) </code></pre>  <p>Question 2     Is there a smart way to remove specific columns from select query instead of writing all columns. I have around 30 columns in an Entity and its really messy to write 27 of them which I want in a query</p>  <p>Thanks</p>