<p><strong>TL;DR</strong> </p>  <p>I'm using a PHP form to output directly to a PHP file. I realized it's a big security risk. Please tell me how to <strong>filter out any tags</strong> from the user's input, and <strong>limit the actions of the PHP file</strong> to its own directory (so as to minimize the damage in case of a compromise).</p>  <p><strong>DETAILS</strong></p>  <p>I have a page where I can collect feedback from customers using a PHP form, then output the results onto another PHP page where members of my team can read them.</p>  <pre><code>&lt;?php  if($_POST['CUSTFEEDBACK']) { $addition = '&lt;div class="FDBKbox"&gt;' . $_POST['CUSTFEEDBACK'] . '&lt;/div&gt;'; $file_open = fopen("FDBKCOLLECTION.PHP", "a+");  fwrite($file_open, $addition); fclose($file_open); }  ?&gt;  &lt;form action="&lt;?=$PHP_SELF?&gt;" method="POST"&gt;  &lt;textarea name="CUSTFEEDBACK" style="width:100%;max-height:250px;"&gt; &lt;/textarea&gt;  &lt;br&gt; &lt;input type="submit" name="button" value="Submit Feedback"&gt;  &lt;/form&gt; </code></pre>  <p>Then it occurred to me that someone with access to both of these pages can also put in malicious code, open and rewrite other files from my server simply by adding PHP code, or execute XSS codes using my form. </p>  <p>Since then, I've changed the form action to <code>&lt;form action="&lt;?=$PHP_SELF?&gt;" method="POST"&gt;</code> to prevent XSS codes. However, other methods still pose a great risk for me.</p>  <p>At the moment, I'm using Javascript to replace any &lt; or > in the textarea with a space. I also put a full-page div on top of the page with a script that gives it a "display:none" property so that the page will be unusable if Javascript is disabled. However, I soon found out that using an old browser (IE 8 and below), the browser simply ignored the script to replace tags. Using Javascript for site security was probably a bad idea to begin with, but I'll have to make do with it for now.</p>  <pre><code>$(document).on('change',':text,textarea', function () {     if (this.value.match(/[&lt;&gt;]/g)) {         this.value = this.value.replace(/[&lt;&gt;]/g, '');     } }); </code></pre>  <p>I did some googling, and found some answers with methods like "escape" the tags, or using PHP to sanitize the form. However, I'm still relatively new to PHP and these all sound pretty intimidating at the moment (and I have no idea where to put those codes in).</p>  <p><strong>Please tell me how I can remove any kind of tags from the form input (I'm not interested in any kind of markup in the textarea).</strong></p>  <p><em>As a failsafe,</em> how can I limit the actions of a PHP file to its own directory. This is so that in case of an unfortunate event, the damage could be minimized and all my other files can be protected.</p>  <p>If anyone could give me some pointers, that'll be greatly appreciated!</p>  <hr>  <p>Side question, I'm currently studying PHP on codeacademy.com does anyone have suggestions for other good websites to learn PHP?</p>