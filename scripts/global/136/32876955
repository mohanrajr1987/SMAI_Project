<p>I recently played around with MD5 collisions and was able to create two script files using fastcoll that had the same MD5 hash but had different behavior when executed. Creating these scripts was simple - I only had to feed in a prefix to fastcoll, which created two binary blobs with the same MD5 value but different SHA256 values, which I could use later in the program to create different behavior.</p>  <p>I've since been trying to give each file 2 binary blobs, such that if I have blob1 and blob2 that collide and blob3 and blob4 that collide, the script can go down one of 4 different paths. I thought that:</p>  <pre><code>binary1=""" &lt;fastcoll blob1&gt; """ binary2=""" &lt;fastcoll blob3&gt; """ </code></pre>  <p>would collide with</p>  <pre><code>binary1=""" &lt;fastcoll blob1&gt; """ binary2=""" &lt;fastcoll blob4&gt; """ </code></pre>  <p>, but their MD5 hashes are distinct. I assume that this is because MD5 splits up the file into smaller blocks and performs calculations on each block separately, but I'm not sure how to combine multiple binary blobs into one file and still have their MD5s collide.</p>  <p>Is this possible? If it is, how would I go about doing it?</p>