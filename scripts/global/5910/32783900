<p>I've written the following code in order to check if two proccess, let's call them pid1 and pid2 share the same process with their respective file descriptors.</p>  <p>1) I open a file in my first process. 2) Store the file descriptor. 3) Fork 4) Open the same file in the child process 5) Use kcmp to check</p>  <pre><code>fd1 = open("test", O_RDWR | O_TRUNC | O_CREAT, 0600); pid1 = getpid(); pid2 = fork();  if (!pid2) {     pid2 = getpid();     fd2 = open("test", O_RDWR | O_TRUNC);     i = kcmp(pid1, pid2, 0, fd1, fd2);     printf("%d\n", i); } else {     int status;     int s;     while ((s = wait(&amp;status)) &gt; 0); } </code></pre>  <p>To check this, I use the syscall kcmp with the flag  KCMP_FILE (equivalent to 0). However the syscall always returns 1 or 2 instead of 0.</p>  <p>The expected result is 0 because the two proccess share the same resource with their file descriptors.</p>  <p>Did I misunderstand the man page or I am doing something wrong to check this?</p>