<p>I had an assignment for a class where I had to make 3 child processes that each had their own job.  The parent was to wait for each child to finish before creating the next, and then the parent was to wait for all of them to finish before printing its own PID.  What I want to know is if this kind of multiple child processes is possible without nested if statements.  Mostly if I can control the parent outside of a giant nested if statement if I were to need more than 3 child processes.  When I tried separating them out into separate if statements, the order got all screwed up.  </p>  <p>Basically instead of</p>  <pre><code>if      child1 else     if         child2     else        if            child3 </code></pre>  <p>I want</p>  <pre><code>if     child1 if     child2 if     child3 parent code here instead of nested </code></pre>  <p>Here was the original code for my assignment:</p>  <pre><code>#include &lt;stdio.h&gt; #include &lt;stdlib.h&gt; #include &lt;stddef.h&gt; #include &lt;unistd.h&gt; #include &lt;sys/types.h&gt; #include &lt;sys/wait.h&gt;  int main(int argc, char **argv) {  if (argc != 4) {     printf("Error:  Need 3 integer arguments\n");     exit(1); }  pid_t pid, pid1, pid2; int returnstatus, returnstatus1, returnstatus2;  pid = fork(); // Child 1: Sum if (pid == 0) {     printf("Child 1 PID = %d\n", getpid());      int a, b, c;     a = atoi(argv[1]);     b = atoi(argv[2]);     c = atoi(argv[3]);     printf("Sum of integers = %d\n", a+b+c); } else {     // wait(NULL);  works, but best practice is to get return code     waitpid(pid, &amp;returnstatus, 0);      pid1 = fork();      // Child 2: Product     if (pid1 == 0) {         printf("Child 2 PID = %d\n", getpid());          int a, b, c;         a = atoi(argv[1]);         b = atoi(argv[2]);         c = atoi(argv[3]);         printf("Product of integers = %d\n", a*b*c);     }     else {         waitpid(pid1, &amp;returnstatus1, 0);          pid2 = fork();          // Child 3: Sum of squares         if (pid2 == 0) {             printf("Child 3 PID = %d\n", getpid());              int a, b, c;             a = atoi(argv[1]);             b = atoi(argv[2]);             c = atoi(argv[3]);             printf("Sum of squares of integers = %d\n", (a*a)+(b*b)+(c*c));         }         else {             waitpid(pid2, &amp;returnstatus2, 0);              printf("Parent PID = %d\n", getpid());         }     }  }    return 0; } </code></pre>