<p>I have read this in books and also in some online forums that child process pid is assigned to its parent. But I have this code:</p>  <pre><code>#include&lt;stdio.h&gt; #include&lt;unistd.h&gt; #include&lt;sys/types.h&gt; int main() {     pid_t pid;     pid=fork();     if(pid==0)         {             printf("In Child Process\n");             printf("Child process PID : %d\n",getpid());             printf("Parent Process PID : %d\n",getppid());         }     else         {             printf("In Parent Process\n");             printf("Child PID : %d\n",getpid());             printf("Parent PID : %d\n",getppid());         } } </code></pre>  <p>It outputs:</p>  <pre> In Parent Process Child PID : 2061 Parent PID : 1830 In Child Process Child process PID : 2062 Parent Process PID : 1161 </pre>  <p>But if I write a wait() function in else block, i.e:</p>  <pre><code>#include&lt;stdio.h&gt; #include&lt;unistd.h&gt; #include&lt;sys/types.h&gt; int main() {     pid_t pid;     pid=fork();     if(pid==0)         {             printf("In Child Process\n");             printf("Child process PID : %d\n",getpid());             printf("Parent Process PID : %d\n",getppid());         }     else         {             wait();             printf("In Parent Process\n");             printf("Child PID : %d\n",getpid());             printf("Parent PID : %d\n",getppid());         } } </code></pre>  <p>It outputs-</p>  <pre> In Child Process Child process PID : 2044 Parent Process PID : 2043 In Parent Process Child PID : 2043 Parent PID : 1830 </pre>  <p>I'm not getting why the pid value returned by child process in first code is not the same as parent pid. While in the second code, it is the same. Can someone please explain the reason for the above problem?</p>