<p>I work with EDIFACT messages and have developed lots of tools to help me parse and extract the relevant information out of the raw file format.</p>  <p>Something I have always struggled with is presenting the raw EDIFACT. I typically just copy the message into Microsoft Word, do a find and replace for the segment separator and view the contents line by line.</p>  <p>I have always wanted to display the EDIFACT file in its hierarchy format but can not for the life of me work out a method to do this.</p>  <p>Below is a small extract of a raw EDIFACT message. The left side shows how I get the data (not including line numbers), the right side shows how I want it to be displayed based on a customers specification.</p>  <pre><code>01. UNA                                -UNA 02. UNB                                -UNB 03. UNH                                -UNH  04. BGM                                -BGM 05. DTM                                - | DTM  06. DTM                                - | DTM  07. DTM                                - | DTM 08. NAD                                - | NAD   09. NAD                                - | NAD 10. NAD                                - | NAD 11. GIS                                - | GIS 12. LIN                                - |  | LIN 13. LOC                                - |  |  | LOC 14. LOC                                - |  |  | LOC 15. LOC                                - |  |  | LOC 16. RFF                                - |  |  | RFF 17. QTY                                - |  |  | QTY   18. QTY                                - |  |  | QTY 19. RFF                                - |  |  |  | RFF  20. DTM                                - |  |  |  |  | DTM 21. SCC                                - |  |  | SCC 22. QTY                                - |  |  |  | QTY 23. DTM                                - |  |  |  |  | DTM 24. DTM                                - |  |  |  |  | DTM 25. SCC                                - |  |  | SCC 26. QTY                                - |  |  |  | QTY 27. DTM                                - |  |  |  |  | DTM 28. DTM                                - |  |  |  |  | DTM 29. SCC                                - |  |  | SCC   30. QTY                                - |  |  |  | QTY 31. DTM                                - |  |  |  |  | DTM 32. QTY                                - |  |  |  | QTY 33. DTM                                - |  |  |  |  | DTM  34. SCC                                - |  |  | SCC 35. QTY                                - |  |  |  | QTY   36. DTM                                - |  |  |  |  | DTM   37. NAD                                - |  |  | NAD 38. CTA                                - |  |  |  | CTA  39. COM                                - |  |  |  |  | COM 40. SCC                                - |  |  |  | SCC 41. QTY                                - |  |  |  |  | QTY 42. UNT                                -UNT 43. UNZ                                -UNZ </code></pre>  <p>You can see that the data is tree based, and it is described by a specification that is sent to me. One specification for the above EDIFACT message is as follow:</p>  <pre><code>        Tag    St Max   Lvl 0000 1  UNA    C  1     0 SERVICE STRING ADVICE 0000 2  UNB    M  1     0 INTERCHANGE HEADER 0010 3  UNH    M  1     0 MESSAGE HEADER 0020 4  BGM    M  1     0 BEGINNING OF MESSAGE 0030 5  DTM    M  10    1 DATE/TIME/PERIOD 0040 6  FTX    C  5     1 FREE TEXT 0080    SG2    C  99    1 NAD 0090 7  NAD    M  1     1 NAME AND ADDRESS 0190    SG6    C  9999  1 GIS-SG7-SG12 0200 8  GIS    M  1     1 GENERAL INDICATOR 0210    SG7    C  1     2 NAD 0220 9  NAD    M  1     2 NAME AND ADDRESS 0370    SG12   C  9999  2 LIN-LOC-FTX-SG13-SG15-SG17-SG22 0380 10 LIN    M  1     2 LINE ITEM 0450 11 LOC    C  999   3 PLACE/LOCATION IDENTIFICATION 0470 12 FTX    C  5     3 FREE TEXT 0480    SG13   C  10    3 RFF 0490 13 RFF    M  1     3 REFERENCE 0540    SG15   C  10    3 QTY-SG16 0550 14 QTY    M  1     3 QUANTITY 0570    SG16   C  10    4 RFF-DTM 0580 15 RFF    M  1     4 REFERENCE 0590 16 DTM    C  1     5 DATE/TIME/PERIOD 0600    SG17   C  999   3 SCC-SG18 0610 17 SCC    M  1     3 SCHEDULING CONDITIONS 0620    SG18   C  999   4 QTY-DTM 0630 18 QTY    M  1     4 QUANTITY 0640 19 DTM    C  2     5 DATE/TIME/PERIOD 0760    SG22   C  999   3 NAD-SG24-SG27 0770 20 NAD    M  1     3 NAME AND ADDRESS 0830    SG24   C  5     4 CTA-COM 0840 21 CTA    M  1     4 CONTACT INFORMATION 0850 22 COM    C  5     5 COMMUNICATION CONTACT 0920    SG27   M  999   4 SCC-SG28 0940    SG28   M  999   5 QTY 0950 24 QTY    M  1     5 QUANTITY 1030 25 UNT    M  1     0 MESSAGE TRAILER 0000 26 UNZ    M  1     0 INTERCHANGE TRAILER </code></pre>  <p>The important columns are Tag, St (M=Mandatory, C=Conditional), Max (Maximum times it can repeat), lvl (How deep in the tree it is). The Tags that start with SG denote that there is a loop</p>  <p>The problem I face is that the format is very flexible, where it can have conditional segments, conditional loops, repeated segments. Trying to think of a method that can handle all this has been my issue. </p>  <p>Starting from the top in the above specification, you can immeditely see that when you come to the DTM tag, it can be repeated upto a max of 10 times. In the sample EDIFACT message, it only appears 3 times on lines 5, 6, 7. Following the specification, FTX may appear but does not in my sample message, then there is a SG2 tag, which means the following NAD tag may repeat 99 times.</p>  <p>Moving slightly ahead inside the LIN tag (which is under the SG12 group, which can repeat upto 9999 times and in many cases does repeat a number of times), it comes to the first QTY tag. According to the specification, this segment can have conditional group (SG15) RFF and a DTM under it. Using my sample, you can see on line 17 and 18 that it has the QTY segment but line 18, has this conditional group too.</p>  <p>Similiar things start happening when you look into the SCC segments too.</p>  <p>What I have in my mind, is to be able to enter that specification into some sort of file format, then run the raw EDIFACT message against the rules of this specification so the output is hierarchy based so it's easy to see at a glance what data relates to what segment and a way to check to see if the EDIFACT message is valid.</p>  <p>What I have trouble with, is the actual algorithm or process to do that conversion.</p>  <p>I have tried naive approaches, like going line by line but then it gets messy when I am trying to work out if the current line is in a group, or a repeat or something else. I have tried a recursive approach, by splitting the entire EDIFACT by the largest group (The SG12-LIN group), then recursively process each of them splits and build an output. This has been my best approach yet but it's still far from working with many false readings due to my logic not being right. </p>  <p>I basically need to be able to pick a segment of the message, and determine where in the hierarchy it should be and display it.</p>  <p>I am at a loss on how I can solve this. I am sure there is a nice simple method at doing this but I just cannot work it out.</p>  <p>Any assistance would be most grateful. </p>