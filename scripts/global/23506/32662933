<p>I'm trying to use <code>UUIDField</code> as a primary key for a model. I'm using <code>CreateView</code> for creating objects for this model.</p>  <p>Anytime I browse to the url for creating one of the objects I get the error:</p>  <p><code>badly formed hexadecimal UUID string</code></p>  <p>The stack trace shows the error occurs here, where value is created:</p>  <pre><code>/home/conor/django/venv2/local/lib/python2.7/site-packages/django/db/models/fields/__init__.py in get_db_prep_value          return name, path, args, kwargs      def get_internal_type(self):         return "UUIDField"      def get_db_prep_value(self, value, connection, prepared=False):         if isinstance(value, six.string_types):                         value = uuid.UUID(value.replace('-', ''))  ...         if isinstance(value, uuid.UUID):             if connection.features.has_native_uuid_field:                 return value             return value.hex         return value </code></pre>  <p>Here is my model:</p>  <pre><code>class InvoicePayment(models.Model): invoice_payment_id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False) invoice = models.ForeignKey('Invoice') date_paid = models.DateField(auto_now=False, auto_now_add=False, blank=False, null=True) payment_type = models.CharField(max_length=100) amount = models.DecimalField(max_digits=9, decimal_places=3) balance = models.DecimalField(max_digits=9, decimal_places=3)  def __str__(self):     return '%s' % (self.invoice_payment_id)  class Meta:     verbose_name = _("Invoice Payment")     verbose_name_plural = _("Invoice Payments") </code></pre>  <p>My view:</p>  <pre><code>class InvoicePaymentCreateView(CreateView):     model = InvoicePayment     form_class = AddInvoicePaymentForm     template_name = 'payment_add.html' </code></pre>  <p>And my form (I'm using crispy forms):</p>  <pre><code>class AddInvoicePaymentForm(ModelForm): helper = FormHelper() helper.layout = Layout(     HTML("&lt;legend&gt;Invoice Payment&lt;/legend&gt;"),      Div(          Div('invoice_payment', 'payment_type',              'amount', 'balance',                                Field('date_paid', css_class='datepicker'),                                 css_class='col-md-6 col-md-offset-1'),                                           css_class='row'),                                           FormActions(          Submit('save', 'Save changes'),          Button('cancel', 'Cancel')      ),           )  class Meta:     model = InvoicePayment          fields = '__all__' </code></pre>  <p>What I've tried:</p>  <ul> <li>Figured it could have been an old schema issue: recreated database</li> <li>Python version. Initially used Python 3.4.0, but issue persists in Python 2.7</li> <li>Creating an object in the django shell, same uuid error</li> <li>updating my Django from 1.8.3 to 1.8.4</li> </ul>  <p>None of this worked. Help!</p>