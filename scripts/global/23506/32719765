<p>I'm relatively new to Django and currently using Django Oauth Toolkit for implicit Oauth. It handles generating tokens and redirecting users to the correct url without issues. I haven't even needed to touch my login page code except for passing the redirect correctly.</p>  <p>My urls.py of course has:</p>  <pre><code>url(r'^oauth2/', include('oauth2_provider.urls', namespace='oauth2_provider')), </code></pre>  <p>Up until now I haven't needed to do anything custom because it works so great out of the box. However now I need to store additional information on the OAuth AccessTokens, for example the OS the that the token comes from. I've created this model for that:</p>  <pre><code>class AccessTokenDetail(models.Model):     access_token = models.OneToOneField(AccessToken, primary_key=True)     os_name = models.CharField(max_length=100) </code></pre>  <p>So my plan is: after the library creates the token, capture a parameter in the request and create an <code>AccessTokenDetail</code> object. I see that I could use the <a href="https://django-oauth-toolkit.readthedocs.org/en/latest/views/details.html#mixins" rel="nofollow">mixins</a>, but since I'm not touching the third party library at all I'm a bit confused on which class to put them on.</p>  <p>How can I add this functionality?</p>