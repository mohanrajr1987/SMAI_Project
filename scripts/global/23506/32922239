<p>I have the following model skeletons:</p>  <pre><code>class A(models.Model):     post_id = models.ForeignKey('D')     user_id = models.ForeignKey('B')  class B(AbstractBaseUser):     email = models.EmailField(unique=True)     username = models.CharField(max_length=20, unique=True)         first_name = models.CharField(max_length=40)     last_name = models.CharField(max_length=40)     # `resource_id`     profile_photo = models.ForeignKey('C', null=True)  class C(models.Model):     user_id = models.ForeignKey('B')     name = models.CharField(max_length=60) </code></pre>  <p>I want to write a serializer for A which should return <code>name</code> from model C, which is related to B.</p>  <p>The relation here is like  A->B->C Now using A's serializer I want data to be fetched from C</p>  <p>I scrolled through RelatedFields as given here <a href="http://www.django-rest-framework.org/api-guide/relations/" rel="nofollow">Django Rest relations</a> but am not able to achieve what I want.</p>  <p>Is their any way I can achieve it.</p>  <p>Also there are a lot of fields other than mentioned in the model skeleton and I do not want to fetch those.</p>