<p>there is a part of my code:</p>  <pre><code>private void Wait(String expectedResponse) {     waitTimeout = 30;     Stopwatch sw = new Stopwatch();     sw.Start();     while (!inputBuffer.Contains(expectedResponse))     {         if (sw.Elapsed.Seconds &lt; waitTimeout)         {             Thread.Sleep(1);         }         else         {             sw.Stop();             throw new Exception("Timeout");         }     }     sw.Stop();     Console.WriteLine("SUCCESS"); } </code></pre>  <p>The Wait method runs in the main thread and sometimes in the thread that creates the main thread.</p>  <p>And sometimes the method of program infinitely loops, although the time (30 seconds) has passed, and the exception is not generated.</p>  <p>So, what's a problem? StopWatch class is not thread-safety? and if so, how to rewrite the code? </p>  <p>Any ideas? </p>  <p>Thank you!</p>