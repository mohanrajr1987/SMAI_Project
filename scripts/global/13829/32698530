<p>Array of integers is allocated on stack and is being written to from two different threads.</p>  <p>Is the access to the holder[] is thread safe in the following code?</p>  <pre><code>void some_function() {     NSUInteger holder[256] = {0};     NSUInteger *ptr_holder = holder;      void (^countBlock)(&lt;...&gt;)= ^(&lt;...&gt;) {         for (&lt;...&gt;) {             ++ptr_holder[counter];         }         dispatch_semaphore_signal(sema);     };      dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^{         countBlock(&lt;...&gt;);     });      dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^{         countBlock(&lt;...&gt;);     });      dispatch_semaphore_wait(sema, DISPATCH_TIME_FOREVER);     dispatch_semaphore_wait(sema, DISPATCH_TIME_FOREVER);      //Performing some work on holder[] from this point } </code></pre>  <p>If it's not thread safe design then why and how should it be improved?</p>