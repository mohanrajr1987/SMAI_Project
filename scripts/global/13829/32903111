<p>Will threads that call <code>IsItThreadsafe.getValue(...)</code> get an up-to-date value from the Map referenced by the variable <code>IsItThreadsafe.map</code> (assuming the exact usage scenario implemented in <code>IsItThreadSafe.main(...)</code>? </p>  <pre><code>public class IsItThreadSafe {      private Map&lt;String, String&gt; map;       public synchronized void setMap(Map&lt;String, String&gt; map) {         this.map = map;     }      public synchronized String getValue(String key) {         if (this.map == null) {             this.map = new HashMap&lt;&gt;();         }         return map.get(key);     }       public static void main(String[] args) throws Exception {         IsItThreadSafe sharedObject = new IsItThreadSafe();         Thread t1 = new Thread(() -&gt; {             while (true) {                 for (int i = 0; i &lt; 10; i++) {                     String key = String.valueOf(i);                     String value = sharedObject.getValue(key);                      if (value!=null) {                         System.out.println("key = " + key + " value = " + value);                     }                 }             }         });         t1.start();          Thread t2 = new Thread(() -&gt; {             while (true) {                 Map&lt;String, String&gt; mappedData = new HashMap&lt;&gt;();                  for (int i = 0; i &lt; 10; i++) {                     mappedData.put(String.valueOf(i), String.valueOf(i + 1));                 }                  sharedObject.setMap(mappedData);             }         });         t2.start();          t1.join();         t2.join();     } } </code></pre>