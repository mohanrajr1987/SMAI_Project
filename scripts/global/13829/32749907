<p>There is a part of my code:</p>  <pre><code>    public void Start()     {         Thread thread = new Thread(() =&gt; Wait());         try         {             thread.Start();             Thread.Sleep(5000);             thread.Abort();         }         catch (Exception ex)         {              Console.WriteLine(ex);             Console.ReadKey();         }     }     public void Wait()     {         try         {             Console.WriteLine(Thread.CurrentThread.Name + " started!");             Thread.Sleep(30000);             Console.WriteLine(Thread.CurrentThread.Name + " ended!");         }         catch (Exception ex)         {             Console.WriteLine(Thread.CurrentThread.Name + " error!");             Console.WriteLine(ex);             Console.ReadKey();         } </code></pre>  <p>I need to consider the case when one thread is interrupted by another, while it has not been executed (in my case, the Wait method is called on a new thread and waits 30 seconds and then interrupted by main thread in method Start after 5 second).</p>  <p>And the wait method generate exception: ThreadAbortException.</p>  <p>So my question: is that safe abort? and ThreadAbortException is just a notification that the thread is not executed until the end and finished by another thread?</p>  <p>And another question: After finishing the program all threads ends or not? For example, if my program run and some thread started and I force stop execution in visual studio all threads aborted or not? </p>  <p>I work with GSM modems. In my program the modem can send two replies "CONN" (callee picked up the phone) and "CEND" (call is completed). The main thread is waiting for "CEND" in the loop, another thread (created by a main thread similar to my example above) is waiting in the loop "CONN" and if the answer came, sends a command that hangs up, then the modem sends a response "CEND" and the main thread continues work. But although it may be a situation where from the modem does not answer came "CONN", and the call has been completed, ie, Modem immediately generates a response "CEND", in this case it is necessary to complete the thread that is waiting for "CONN" to send a reset command call. Actually, my question was how to make it more accurate?</p>