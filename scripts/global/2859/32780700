<p>I am using a generic class(<code>LoggerUtils.java</code>) for logging messages in my code. There is a constructor which accepts Class as argument and all the other classes call this to initialize a logger object. I am using slf4j. But my problem is when I view the log, the log displays class name as <code>LoggerUtils</code> in all the logs. I need to see the class from where I called the <code>LoggerUtils</code> class for displaying my log. Is there any way of doing it?</p>  <p>Log4j.properties:</p>  <pre><code>log4j.appender.SampleLog=org.apache.log4j.DailyRollingFileAppender log4j.appender.SampleLog.File=/sample.log  log4j.appender.SampleLog.layout=org.apache.log4j.PatternLayout  log4j.appender.SampleLog.layout.ConversionPattern=%d{ISO8601} (%c: %M %L) - %m%n  log4j.category.com.sample=DEBUG, SampleLog  </code></pre>  <p>LoggerUtils.java</p>  <pre><code>    package com.sample.utils;      import org.slf4j.Logger;     import org.slf4j.LoggerFactory;       public class LoggerUtils {          private Logger logger;          private  LoggerUtils(Class clazz) {             try {                 logger = LoggerFactory.getLogger(clazz);              } catch (Exception e) {                 System.out.println("Error in logger");             }         }          public static LoggerUtils getLogger(Class clazz) {             return new LoggerUtils(clazz);         }          public void info(Object message) {             logger.info(message.toString());         }     }   My Sample Class:      package test;      import com.sample.utils.LoggerUtils;      public class Sample{         LoggerUtils logger = LoggerUtils.getLogger(this.getClass());         public void print(){             logger.info("Hello");         }     } </code></pre>  <p>In the log, I am getting : </p>  <pre><code>2015-09-25 16:19:21,784 (test.Sample: info 27) - Hello </code></pre>  <p>I am expecting something like :</p>  <pre><code>2015-09-25 16:19:21,784 (test.Sample: print 8) - Hello </code></pre>