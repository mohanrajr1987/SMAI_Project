<p>The following method throws a <code>ConcurrentModificationException</code>:</p>  <p>Method 1 (With exception):</p>  <pre><code>public List getData(int n) {     List l = new ArrayList(statement.values());     Iterator i = l.iterator();       Calculation calculation = null;      while (i.hasNext())     {         calculation = (Calculation)i.next();         if (!calculation.total.hasScores())             i.remove();     }     Collections.sort(l);     int size = l.size();      return l.subList(0,size &gt; n? n : size); } </code></pre>  <p>And when I changed the above method to this:</p>  <p>Method 2 (Without exception):</p>  <pre><code>public List getData(int n) {     List l = new ArrayList(statement.values());     Iterator i = l.iterator();     Collections.sort(l);      Calculation calculation = null;      while (i.hasNext())     {         calculation = (Calculation)i.next();         if (!calculation.total.hasScores())             i.remove();     }      int size = l.size();      return l.subList(0,size &gt; n? n : size); } </code></pre>  <p>Then there's no exception! Cannot figure out why?</p>  <p>Exception trace:</p>  <pre><code>Exception: java.util.ConcurrentModificationException java.util.ConcurrentModificationException at java.util.ArrayList$Itr.checkForComodification(Unknown Source) at java.util.ArrayList$Itr.next(Unknown Source) </code></pre>  <p>Complete Class:</p>  <pre><code>public class MyData  {     private Map &lt;Integer, Calculation&gt; statements = new HashMap&lt;Integer, Calculation&gt;();      public List getListData()     {         List listData = this.getData(5);          return listData;     }      public List getData(int n)     {         List l = new ArrayList(statement.values());         Iterator i = l.iterator();          Calculation calculation = null;          while (i.hasNext())         {             calculation = (Calculation)i.next();             if (!calculation.total.hasScores())                 i.remove();         }          Collections.sort(l);         int size = l.size();          return l.subList(0,size &gt; n? n : size);     }  } </code></pre>  <p>Now when getListData is called exceptions occurs.</p>