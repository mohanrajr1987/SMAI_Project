<p>First let me say that using Struts2 + Freemarker is a real blast. Yet there's something is driving me crazy, because I cannot understand why it happens. I ask here as maybe someone else has an idea to share about it.</p>  <p>I've got an action, with a property. Say</p>  <pre><code>private String myText; </code></pre>  <p>Then I've got a setter and a getter:</p>  <pre><code>public void setMyText(String myText) {   this.myText = myText; }  public String getMyText() {   if (myText == null)     myText = "(empty)";    return this.myText; } </code></pre>  <p>The result (in struts.xml) is a <em>freemarker</em> result. So in my Freemarker template there's a line like the following:</p>  <pre><code>&lt;p&gt;The text is: ${myText}&lt;/p&gt; </code></pre>  <p>Now consider I'm calling the action without any text parameter: say the url is </p>  <pre><code>http:localhost:8080/myapp/myaction </code></pre>  <p>As the getter provides a default value, when the action is processed and the result passed to my template, the property is set to the default; so I get (html on the browser side)</p>  <pre><code>&lt;p&gt;The text is: (empty)&lt;/p&gt; </code></pre>  <p>If I call my action with the parameter set, instead (I mean with something like:</p>  <pre><code>http:localhost:8080/myapp/myaction?myText=hallo </code></pre>  <p>) things go wrong. Freemarker fires the following exception:</p>  <pre><code>Exception occurred during processing request: For "${...}" content: Expected a string or something automatically convertible to string (number, date or boolean), but this has evaluated to a sequence+extended_hash (String[] wrapped into f.e.b.ArrayModel) </code></pre>  <p>It seems that "myText" is found twice... What am I doing wrong? Or, at least, is there anyone that can explain to me why it happens?</p>  <p>P.S.: it's really found twice; the following is a way to workaround the problem:</p>  <pre><code>&lt;#if myText?is_sequence&gt;${myText[0]}&lt;#else&gt;${myText}&lt;/#if&gt; </code></pre>  <p>Yet it seems to me not viable to wrap every variable in that way. </p>  <p>P.P.S.: a further hint: in the freemarker template there's a call to another action some lines before. Something like:</p>  <pre><code>&lt;@s.action var="innerAction" name="getTable" namespace="/foo" /&gt; </code></pre>  <p>If I comment the line above, everything works fine.</p>