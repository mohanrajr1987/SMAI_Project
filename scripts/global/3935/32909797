<p>I'm seeking suggestions for high level architecture for the following web application.  I would prefer to use Struts and Tiles, as that is what I am most familiar with, but would consider other frameworks if it makes sense to do so. I'm not opposed to using published customization points for any of the frameworks used (e.g. Struts interceptors).  I'd even consider using an open source Content Management System if it had the customization points I need for the specific e-commerce and other back-end system integration needs. I really would like to stay in the Java realm.</p>  <ul> <li>Multi-customer e-commerce site, with all customers running in the same web application. This is not a standard e-commerce use case â€“ these customers have some very specific needs that don't fit the standard e-commerce model. </li> <li>Differentiate between customers using the host header field. </li> <li>Each customer will have a different look and feel (colors, images, text, css). </li> <li>Each customer will have a common set of general pages (home page, contact us, FAQ, about us,  general content pages).  </li> <li>Each customer will have an arbitrary number of product pages, one page per product. The address/name of the product page will be static for a given product, but each customer will have a completely disparate set of products.  (In my current Struts projects, I solve this by having a default/catch-all action that serves product content based on the request.getServletPath().) </li> <li>There will be a checkout sequence common to all customers: cart, login/create customer, etc. </li> <li>Ideally, I'd be able to add customers and change customers' look and feel without having to package and re-deploy the web application.</li> </ul>  <p>I envision a kind of template based system, where each customer has a set of templates, one for each type of content (home page, contact us, product).  Those templates would have special tags or markers that would pull in the generated content as necessary (product description block, product images block, add to cart block, contact us form, link to a product page, etc).  </p>  <p>Some approaches I've considered:</p>  <ul> <li>Use explicit Struts action definitions for the general pages (home, contact us, etc) and the default action for product pages, with Tiles results, using different Tiles definitions per customer. This seems to require updates to struts.xml and tiles.xml per customer, unless there is a way to dynamically configure these?</li> <li>Use static Struts and Tiles definitions for all page types, and pull in pieces of the customers' templates in the right places. E.g. put the customer's header here, content between header and product description block here, etc.  This forces all customers into a similar structure, which is not very good.</li> </ul>  <p>Thanks for any and all suggestions!</p>