<p>I have a windows service hosting a WCF service with the following configuration.</p>  <pre><code>  &lt;system.serviceModel&gt;     &lt;bindings&gt;       &lt;wsHttpBinding&gt;         &lt;binding name="wsHttpEndpointBinding"&gt;           &lt;security mode="Message"&gt;             &lt;message clientCredentialType="Certificate"/&gt;           &lt;/security&gt;         &lt;/binding&gt;       &lt;/wsHttpBinding&gt;     &lt;/bindings&gt;     &lt;services&gt;       &lt;service name="Carglass.Movil.Service.CarglassService" behaviorConfiguration="CarglassServiceBehavior"&gt;         &lt;host&gt;           &lt;baseAddresses&gt;             &lt;add baseAddress="http://localhost:9002/CarglassServiceAGI" /&gt;           &lt;/baseAddresses&gt;         &lt;/host&gt;         &lt;endpoint address="" binding="wsHttpBinding" bindingConfiguration="wsHttpEndpointBinding" contract="Carglass.Movil.Service.ICarglassService" /&gt;         &lt;endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" /&gt;       &lt;/service&gt;     &lt;/services&gt;     &lt;behaviors&gt;       &lt;serviceBehaviors&gt;         &lt;behavior name="CarglassServiceBehavior"&gt;           &lt;serviceDebug includeExceptionDetailInFaults="true" /&gt;           &lt;serviceMetadata httpGetEnabled="true" /&gt;           &lt;serviceCredentials&gt;             &lt;serviceCertificate findValue="CN=MWMWCF"/&gt;           &lt;/serviceCredentials&gt;         &lt;/behavior&gt;       &lt;/serviceBehaviors&gt;     &lt;/behaviors&gt;   &lt;/system.serviceModel&gt; </code></pre>  <p>The certificate is installed on the machine and the <strong>Network Service</strong> user is running the windows service as <strong>local administrator</strong>. Permissions has been granted by running the following <strong>command</strong></p>  <pre><code>netsh http add urlacl url=http://+:9002/CarglassServiceAGI user="NT AUTHORITY\NETWORK SERVICE" </code></pre>  <p>... and by managing <strong>private keys within mmc.exe giving "Full control"</strong> to that user.</p>  <p>But I got the following exception every time I try to run my service:</p>  <blockquote>   <p>System.ArgumentException: It is likely that certificate 'CN=MWMWCF' may not have a private key that is capable of key exchange or the process may not have access rights for the private key. Please see inner exception for detail.\r\n   at System.ServiceModel.Security.SecurityUtils.EnsureCertificateCanDoKeyExchange(X509Certificate2 certificate)\r\n   at System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateServerX509TokenProvider()\r\n   at System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateLocalSecurityTokenProvider(RecipientServiceModelSecurityTokenRequirement recipientRequirement)\r\n   at System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenProvider(SecurityTokenRequirement requirement)\r\n   at System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateTlsnegoServerX509TokenProvider(RecipientServiceModelSecurityTokenRequirement recipientRequirement)\r\n   at System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateTlsnegoSecurityTokenAuthenticator(RecipientServiceModelSecurityTokenRequirement recipientRequirement, Boolean requireClientCertificate, SecurityTokenResolver&amp; sctResolver)\r\n   at System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator(SecurityTokenRequirement tokenRequirement, SecurityTokenResolver&amp; outOfBandTokenResolver)\r\n   at System.ServiceModel.Security.SecuritySessionSecurityTokenAuthenticator.SessionRenewSecurityTokenManager.CreateSecurityTokenAuthenticator(SecurityTokenRequirement tokenRequirement, SecurityTokenResolver&amp; outOfBandTokenResolver)\r\n   at System.ServiceModel.Security.SymmetricSecurityProtocolFactory.OnOpen(TimeSpan timeout)\r\n   at System.ServiceModel.Security.WrapperSecurityCommunicationObject.OnOpen(TimeSpan timeout)\r\n   at System.ServiceModel.Channels.CommunicationObject.Open(TimeSpan timeout)\r\n   at System.ServiceModel.Security.SecurityProtocolFactory.Open(Boolean actAsInitiator, TimeSpan timeout)\r\n   at System.ServiceModel.Security.SecurityListenerSettingsLifetimeManager.Open(TimeSpan timeout)\r\n   at System.ServiceModel.Channels.SecurityChannelListener<code>1.OnOpen(TimeSpan timeout)\r\n   at System.ServiceModel.Channels.CommunicationObject.Open(TimeSpan timeout)\r\n   at System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpen(TimeSpan timeout)\r\n   at System.ServiceModel.Channels.CommunicationObject.Open(TimeSpan timeout)\r\n   at System.ServiceModel.ServiceHostBase.OnOpen(TimeSpan timeout)\r\n   at System.ServiceModel.Channels.CommunicationObject.Open(TimeSpan timeout)\r\n   at System.ServiceModel.Security.SecuritySessionSecurityTokenAuthenticator.OnOpen(TimeSpan timeout)\r\n   at System.ServiceModel.Security.WrapperSecurityCommunicationObject.OnOpen(TimeSpan timeout)\r\n   at System.ServiceModel.Channels.CommunicationObject.Open(TimeSpan timeout)\r\n   at System.ServiceModel.Security.CommunicationObjectSecurityTokenAuthenticator.Open(TimeSpan timeout)\r\n   at System.ServiceModel.Security.SecurityUtils.OpenCommunicationObject(ICommunicationObject obj, TimeSpan timeout)\r\n   at System.ServiceModel.Security.SecurityUtils.OpenTokenAuthenticatorIfRequired(SecurityTokenAuthenticator tokenAuthenticator, TimeSpan timeout)\r\n   at System.ServiceModel.Security.SecuritySessionServerSettings.OnOpen(TimeSpan timeout)\r\n   at System.ServiceModel.Security.WrapperSecurityCommunicationObject.OnOpen(TimeSpan timeout)\r\n   at System.ServiceModel.Channels.CommunicationObject.Open(TimeSpan timeout)\r\n   at System.ServiceModel.Security.SecuritySessionServerSettings.Open(TimeSpan timeout)\r\n   at System.ServiceModel.Security.SecurityListenerSettingsLifetimeManager.Open(TimeSpan timeout)\r\n   at System.ServiceModel.Channels.SecurityChannelListener</code>1.OnOpen(TimeSpan timeout)\r\n   at System.ServiceModel.Channels.CommunicationObject.Open(TimeSpan timeout)\r\n   at System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpen(TimeSpan timeout)\r\n   at System.ServiceModel.Channels.CommunicationObject.Open(TimeSpan timeout)\r\n   at System.ServiceModel.ServiceHostBase.OnOpen(TimeSpan timeout)\r\n   at System.ServiceModel.Channels.CommunicationObject.Open(TimeSpan timeout)\r\n   at System.ServiceModel.Channels.CommunicationObject.Open()\r\n   at MWM.Service.WindowsService.AGI.ServiceController.OnStart(String[] args) in c:\TeamCity\buildAgent\work\MWM-Refactor\MWM.Service\MWM.Service.WindowsService.AGI\ServiceController.cs:line 45</p> </blockquote>  <p>Works fine if I remove this from the configuration:</p>  <pre><code>&lt;message clientCredentialType="Certificate"/&gt; </code></pre>