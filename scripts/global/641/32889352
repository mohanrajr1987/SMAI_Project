<p>I am using IdentityServer3 in a project nearly identical to the SelfHost project available on github</p>  <p><a href="https://github.com/IdentityServer/IdentityServer3.Samples/tree/master/source/SelfHost%20(Minimal)" rel="nofollow">SelfHost (Minimal)</a></p>  <p>Everything works fine and client can happily connect and the Host issues a ticket with no problem. SelfHost Project uses the following code snippet inside Cert.cs file to Load the certificate:</p>  <pre><code>        public static X509Certificate2 Load()     {         var assembly = typeof(Certificate).Assembly;         using (var stream = assembly.GetManifestResourceStream("Thinktecture.IdentityServer.Host.Config.idsrv3test.pfx"))         {             return new X509Certificate2(ReadStream(stream), "idsrv3test");         }     }      private static byte[] ReadStream(Stream input)     {         var buffer = new byte[16 * 1024];         using (var ms = new MemoryStream())         {             int read;             while ((read = input.Read(buffer, 0, buffer.Length)) &gt; 0)             {                 ms.Write(buffer, 0, read);             }             return ms.ToArray();         }     } </code></pre>  <p>Above code works perfectly fine as well, however as soon as I load the certificate from certificate store using the following code :</p>  <pre><code>        public static X509Certificate2 LoadFromStore()     {         var s = "‎‎600bc077f3494b38277ab640038ae61fb6bdd968";          var thumbprint = Regex.Replace(s, @"[^\da-zA-z]", string.Empty).ToUpper();         var store = new X509Store(StoreName.Root, StoreLocation.LocalMachine);          try         {             store.Open(OpenFlags.ReadOnly);              var certCollection = store.Certificates;             var signingCert = certCollection.Find(X509FindType.FindByThumbprint, thumbprint, false);             if (signingCert.Count == 0)             {                 throw new FileNotFoundException(string.Format("Cert with thumbprint: '{0}' not found in local machine cert store.", thumbprint));             }              return signingCert[0];         }         finally         {             store.Close();         }     } </code></pre>  <p>SelfHost project still works and certificate gets loaded from the store with no problem but on the client side I get 'Internal Server Error' or to be more precise the following:</p>  <pre><code>{StatusCode: 500, ReasonPhrase: 'Internal Server Error', Version: 1.1, Content: System.Net.Http.StreamContent, Headers: {   X-SourceFiles: =?UTF-8?B?Rjpcc291cmNlXFJlZlwwNC0wNC0yMDE0XERpc3RyaWJ1dGVkUmVmZXJyYWxcSG9zdFxjb25uZWN0XHRva2Vu?=   Date: Thu, 01 Oct 2015 11:41:22 GMT   Server: Microsoft-IIS/10.0   X-Powered-By: ASP.NET   Content-Length: 8455   Content-Type: application/json; charset=utf-8 }} </code></pre>  <p>What could be the problem on the server or how can I figure out what is going wrong on the server?</p>  <p>Just wanted to clarify the following facts:</p>  <ul> <li>Certificate is valid and is located inside Trusted Root Certificate of the same machine which both client and server are running</li> <li>Both client and server are running with administrative privileges</li> <li><p>Host program which is responsible for issuing the ticket loads with no problem inside the browser and can happily locate and load the certificate:</p>  <pre><code>    var certificate = Certificate.LoadFromStore();      var options = new IdentityServerOptions     {         SiteName = "Thinktecture IdentityServer3 (EntityFramework)",         SigningCertificate = certificate,         //SecondarySigningCertificate = certificate,         Factory = Factory.Configure(connectionString)         ,RequireSsl = true      }; </code></pre></li> </ul>