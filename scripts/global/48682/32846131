<p>I would like to create a promise in R programmatically. I know that the language supports it. But for some reason, there does not seem a way to do this. </p>  <p>To give more detail: I would like to have components of a list lazily evaluated. E.g.</p>  <pre><code>x &lt;- list(node=i, children=promise(some_expensive_function(i)) </code></pre>  <p>I only want to access the second component of the list for very few values of the list. Pre-populating the list with lazy expressions results in very clear, compact and readable code. The background of this algorithm is a tree search. Essentially, I am trying to emulate coroutine behaviour here. Right now I am using closures for this, but the code lacks elegancy. </p>  <p>Is there a third-party package that exposes the hidden promise construction mechanism in R? Or is this mechanism explicitly tied to environment bindings rather than expressions?</p>  <p>P.S. Yes, I am aware of delayedAssign. It does not do what I want. Yes, I can juggle around with intermediate environments, but its also messy. </p>