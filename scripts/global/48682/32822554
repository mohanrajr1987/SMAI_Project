<p>I'm defining a factory using promises like:</p>  <pre><code>.factory('Test', ['$q', '$http', function ($q, $http){      var getData = function () {          var deferred = $q.defer();          $http.get('url')               .success(function (res) {                    deferred.resolve(res);               });           return deferred.promise;      }       return { getData: getData}; }]); </code></pre>  <p>Further in a controller I'm using that factory like:</p>  <pre><code>Test.getData().then(function (data) { console.log(data);}); </code></pre>  <p>All works fine, my question is: if I want to use the same promise in another controller to wait for that ajax before I do something else, I should use the same sintax? </p>  <pre><code>Test.getData().then(function (data) { console.log(data);}); </code></pre>  <p>My problem is that I'm using a node js socket to retreive some data and events. In my promise I'm connecting the socket</p>  <pre><code>$rootScope.socket = io_connection </code></pre>  <p>and in another controller, on anther page I want to emit an event on that socket but $rootScope.socket gets undefined. Since $rootScope.socket gets defined in that first promise, in my other controller I tried:</p>  <pre><code>$rootScope.socket.emit('custom_event', { id: 1 }); </code></pre>  <p>But is undefined... I hope my writing makes sense. Thanks</p>