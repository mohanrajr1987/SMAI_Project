<p>It seems generally that creating deferred objects is now commonly discouraged in favor of using the ES6-style Promise constructor. Does there exist a situation where it would be necessary (or just better somehow) to use a deferred?</p>  <p>For example, on <a href="https://github.com/petkaantonov/bluebird/wiki/Promise-anti-patterns" rel="nofollow" title="see here">this page</a>, the following example is given as justification for using a deferred:</p>  <pre><code>function delay(ms) {     var deferred = Promise.pending();     setTimeout(function(){         deferred.resolve();     }, ms);     return deferred.promise; } </code></pre>  <p>However, this could be done just as well with the Promise constructor:</p>  <pre><code>function delay(ms) {     return new Promise(function(resolve, reject){         setTimeout(function(){             resolve();         }, ms);     }); } </code></pre>