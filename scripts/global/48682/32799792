<pre><code>    StopsModel.findOne({stop_lat: stations[0]}).exec() .then(function(stop){     if (stop) res.json(stop);     else {         StopsModel.findOne({stop_lat: stations[1]}).exec()         .then(function(stop){             if (stop) res.json(stop);             else {                 StopsModel.findOne({stop_lat: stations[2]}).exec()                 .then(function(stop){                     if (stop) res.json(stop);                     else {                         StopsModel.findOne({stop_lat: stations[3]}).exec()                         .then(function(stop){                             if (stop) res.json(stop);                         })                     }                 })             }         })     } }) </code></pre>  <p>I'm using mongoose and bluebird, what I'm trying to do here is go through an array of latitudes in order and send a response back to the front end with the first one from the array that exists in the database, not the first query that returns successfully.</p>  <p>I know that bluebird has many promise resolution techniques, like .any .all .some .settle, but I can't figure out which one to use that will work identically to the code above.</p>