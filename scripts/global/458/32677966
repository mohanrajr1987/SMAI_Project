<p>I have below classes(only for example),</p>  <pre><code>class Background   def self.add_thread(&amp;blcok)     Thread.new do       yield       ActiveRecord::Base.connection.close     end   end end  class Email   def send_email_in_other_thread     Background.add_thread do       send_email     end   end   def send_email     UserMailer.greeting_email.deliver_now   end end </code></pre>  <p>And below codes are for tests,</p>  <pre><code>class EmailTest &lt; ActiveSupport::TestCase   class Background     def self.add_thread(&amp;block)       yield     end   end    test 'should send email' do     assert_difference 'ActionMailer::Base.deliveries.size', 1 do       send_email_in_other_thread     end   end end </code></pre>  <p>But this test fails, "ActionMailer::Base.deliveries.size" didn't change by 1. And 1 in about 20 times success.<br> I think it is because of the modified Background class. Maybe overriding in test doesn't work or yield proc is not executed instantly but in delayed.<br> I tried 'block.call' instead of yield, but the result is same.<br> How can I make this test always be success?</p>