<p>I am creating an application in ASP.NET web form with MVP pattern. I am getting some issues working with TDD. I have created two test, one is working fine but when a second test is executed it throws an error. </p>  <p>Below is my declared View </p>  <pre><code>public interface IAddUpdateView : IView {      string Type { get; set; }      string PageTitle { set; }      string Details { get; set; }      bool Active { get; set; } } </code></pre>  <p>Presenter</p>  <pre><code>// BasePresenter is an abstract class contains abstract method with name Initialize() public class MyPresenter: BasePresenter&lt;IAddUpdateView &gt; {      private readonly IDatabaseLayer _databaselayer;      public MyPresenter(IAddUpdateView view, IDatabaseLayer databaseLayer) : base(view)      {          _databaselayer = databaseLayer;      }      public override void Initialize()      {  }       public void Initialize(string str)      {           string[] str1=Misc.DecryptURL(str);           View.Type = str1[0].ToString();                   // ERROR LINE           if (View.Type.ToLower().Trim() == "add")           {               View.PageTitle = "Add New Task";                           }           else if (View.Type.ToLower().Trim() == "edit")           {           }       }    } </code></pre>  <p>Now I am working on creating unit test mocking the Presenter class to test the dependencies using Rhino mocks.  That's my test class with just two test methods. These test methods test when loading a View it calls appropriate Page Type.  When <strong>ADD</strong> type is called, it get the <code>View.Type</code> as "add" and when <strong>Edit</strong> type is called, it verifies for the specific object that is loaded.</p>  <pre><code>[TestFixture] public class MyPresenterTest {    private IAddUpdateView _view;    private MyPresernter _controller;     [SetUp]    public void SetUp()    {       _view = MockRepository.GenerateMock&lt;IAddUpdateView &gt;();       _controller = new MyPresernter (_view, MockDataLayer());    }     [TearDown]    public void TearDown() { _controller = null; _view = null; } </code></pre>  <blockquote>   <p><strong>// TEST 1</strong></p> </blockquote>  <pre><code>   [Test]     public void When_Loading_for_Add_View_Panel_Return_Type_Add()    {        // Arrange        _view.Stub(x =&gt; x.Type).PropertyBehavior();             //Act        _controller.Initialize(GetURLWithAddValue());          // GetURLWithAddValue: This method get the URL with querystring contains value as "add"            //Assert        Assert.AreEqual("add",_view.Type);     } </code></pre>  <blockquote>   <p><strong>TEST 2</strong></p>      <p>// When this test method is run, It has the <strong>Type="edit"</strong>, but in my   presenter <strong>View.Type</strong> (see LINE ERROR), my Type is null even I   assigned the values.</p> </blockquote>  <pre><code>   [Test]    public void When_Loading_for_Edit_View_Panel_Load_Correct_Object()    {         // Arrange         _view.Stub(x =&gt;x.TaskDetails).PropertyBehavior();                      //Act         Task o=new Task(){ TaskId=6, TASK_NAME="Task 6"};          _controller.Initialize(GetURLWithEditValue(o));             //Assert        Assert.AreEqual(o.TASK_NAME, _view.TaskDetails);     }       private static IDatabaseLayer MockDataLayer()    {       IDatabaseLayer obj = MockRepository.GenerateMock&lt;IDatabaseLayer&gt;();       MockTaskDataLayer a = new MockTaskDataLayer();       obj.Stub(x =&gt; x.GetList());                 return obj;    }   } </code></pre>  <p>Can someone guide me why Test 1 get passed and when Test 2 is executed, after assigning a value in View.Type (see LINE ERROR in MyPresenter class) it's still null??</p>  <p>Thanks,</p>