<p>I was wondering if anyone has experience of the correct way to use Jasmine's <code>done()</code> method of testing asynchronous calls, with respect to the <code>ipc.send</code> and <code>ipc.on</code> parts of main - renderer communication.</p>  <p>It's how to use the <code>done()</code> method in the <code>beforeEach()</code> of the test which is tripping me up</p>  <p>I can test <code>ipc.sendSync()</code> fine with the below</p>  <pre><code>// within main process ipc.on('marco', function(event, arg){     event.returnValue = 'polo'; }); // within specs describe("ipc synchronous message received", function(){    it('on receiving immediate send message', function(){     expect(ipc.sendSync('marco', 'ping')).toBe('polo');   }) }); </code></pre>  <p>when writing the test for asynchronous events the below consistently fails, the inclusion of done() doesn't change the order of execution in order that the assertion will pass</p>  <pre><code>// within main process ipc.on('marco', function(event, arg){     console.log(arg+": polo?");     event.sender.send('polo', true); });  // within specs     describe('asynchronous IPC test', function(){    var value = false;   //jasmine.getEnv().defaultTimeoutInterval = 10000;    beforeEach(function(done) {     // if you put the before each within the it() declaration then all the tests break     ipc.on('polo', function(arg){       console.log("\ninside beforeEach\nasync received so `value` should be true: "+arg);       value = arg;       done(); // done should locate within the callback     });     //done(); // place done here to see Jasmine test return 'NO SPEC ASSERTIONS ERROR'   });    it('on receiving async any given ipc send request', function(done){      console.log("\nbefore the ipc.send");     ipc.send('marco', 'marco'); // test that the main process is receiving args passed     done(); // it is unclear if assertions after done are detected, docs do not follow this flow     console.log("\nafter the ipc send, value = "+value);     expect(value).toBe(true);     console.log('after the assertion');Â // should not print as it's after the assertion   }); }); </code></pre>  <p>I have tried numerous variations on above but I have had no success, does anyone have suggestions for where I'm going wrong?</p>