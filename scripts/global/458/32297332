<p>I have a class which contains a list of objects in it, which then uses to return the user a calculated value using these objects' states. E.g:</p>  <pre><code>class MyContaier {     private List&lt;MyObject&gt; m_listOfObjects;      public MyContainer() {         ...     }      public void addObject(MyObject object) {          m_listOfObjects.add(object);     }      public int calculateTotal() {         int total = 0;          for (MyObject object : m_listOfObjects)             total += object.getValue();          return total;     } } </code></pre>  <p>I am trying to unit test <code>calculateTotal</code> method using junit and mockito, but in order to do that I need to add a few mocked MyObject instances to m_listOfObjects. However, this would mean calling another method in the <code>calculatedTotal</code> test, <code>addObject</code>.</p>  <p>Is this a valid unit test, or is it against the best practices as my test of <code>calculateTotal</code> also depends on <code>addObject</code> method? </p>