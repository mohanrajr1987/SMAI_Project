<p>A web application can not access the local computer resources as the same extent found on normal app, an this for security reason. Malicious code could do evil things! Interestingly to download an application that can do “evil things” you have to :</p>  <p>1) Go on a particular web site. 2) Press download. 3) Press install. The evil code is ready to work!!!</p>  <p>A web app, with malicious code, just requires this step: 1) Go on a particular web site. The evil code is ready to work!!!</p>  <p>Ok now the question:</p>  <p>Why do we keep the web applications in a sand box, limiting therefore what they can do on the local computer, while it is so easy to download an application that potentially can be very dangerous?</p>  <p>If we consider these 3 step:</p>  <p>1) Go on a particular web site. 2) Press download. 3) Press install.</p>  <p>enough to protect the user from malicious code, why don't we allow web applications to have full access to local computer resources, as a standard application, by requiring the user to press the following buttons:</p>  <p>1) This web page is a web application, do you want to install it? 2) Press install</p>  <p>in this way the user is protected from malicious code, inside a web application, as the same extent as it is for the same malicious code hosted inside a standard application.</p>  <p>Is it an utopia to think that one day, in the near future, we will have web applications that are full application in any sense?</p>  <p>Did I oversimplified the problem?</p>