<p>I need to generate a Javascript file from an MVC application containing some variables needed by the Javascript (Angular-based) framework.</p>  <p>The controller will produce output such as</p>  <pre><code>var currentUser = {userId: "jdoe", firstname: "John", lastname: "Doe"}; var somethingElse = []; </code></pre>  <p>Before you ask if it's possible to retrieve that information from an AJAX call, let me say that, for now, it's not possible.</p>  <p>I would like to ask if there is a simple, elegant and robust way to marshal a generic Java object to Javascript notation.</p>  <p>So far I have tried leveraging JSON, with ugly-to-read and not robust result</p>  <pre><code>printWriter.println(MessageFormat.format("var currentUser = JSON.parse(''{0}'');", objectMapper.writeValueAsString(user))); </code></pre>  <p>To note:</p>  <ol> <li>JSON syntax quotes attribute names, while Javascript doesn't. JSON and Javascript are similar but different. So I need to parse JSON and not write entire JSON</li> <li>JSON allows single quotes <code>'</code> but with such a syntax Javascript will cut the string, so I need to escape single quotes if any</li> <li>After I escaped quotes, I don't know other possible pitfalls</li> </ol>  <p>So I would like to ask if there is a simpler way to marshal such an object into Javascript in a more robust but smart way.</p>  <p>Not using AJAX is a requirement at the moment. When it will be possible to perform a "massive" AJAX call that retrieves all needed variables at once in a single call, that will be the permanent solution. </p>