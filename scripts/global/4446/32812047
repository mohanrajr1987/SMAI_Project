<p>Struts 1 had a <code>org.apache.struts.action.PlugIn</code> interface through which objects from Struts 1 framework were available in implementing java classes (see init() signature below). During startup of application, ActionServlet called init() method of each Plug-in configured in struts-config.xml file. </p>  <pre><code>public abstract void init(ActionServlet paramActionServlet, ModuleConfig paramModuleConfig) throws ServletException; </code></pre>  <p>}</p>  <p>This helped among other things with initialization of application resources at start up without having to subclass ActionServlet as well as keeping things modular (for eg. struts framework itself had Validator and Tiles plugins which did the same)</p>  <p>What would be the equivalent and correct way to implement the same in Struts2 specifically with below points in consideration?</p>  <ol> <li>Create a Struts2 plugin - How to pass Struts2 framework objects to a java class in plugin jar? As per <a href="https://struts.apache.org/docs/plugins.html" rel="nofollow">documentation</a>, it can be done declaratively via  struts-plugin.xml. Would really really appreciate if some one could point to an example would or may be to one of already implemented plugins (could not locate relevant code in sitemesh, tiles plugins).</li> </ol>  <p>Would the plugin essentially need to have a listener defined ? (like we have to define for struts2-tiles-plugin)</p>  <ol start="2"> <li><p>Just extend the strutsprepareandexecutefilter and override default (not preferable)</p></li> <li><p>custom listener with ServletContextListener - how to pass initialized Struts2 framework objects to such a class?</p></li> <li><p>do not use plugin for init - where should the init code go then in struts 2 lifecycle</p></li> </ol>  <p>As conclusion, would like to know thoughts from experts if possible (<a href="http://stackoverflow.com/users/438992/dave-newton">Dave</a>, <a href="http://stackoverflow.com/users/454470/steven-benitez">Steve</a> ) on if Struts 1 had it better than Struts 2 for above functionality</p>