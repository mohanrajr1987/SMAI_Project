<p>novice at web applications so trying to create a form based web application with REST capabilities. So basically I prompt the user to enter credentials and queries and make REST API requests on their behalf and based on success it should deliver the appropriate response to TextArea control on a html page. I am not sure how to do this based on the tutorial code I am using.</p>  <p>Here is the html page for the response:</p>  <pre><code>&lt;!DOCTYPE HTML&gt;  &lt;html xmlns:th="http://www.thymeleaf.org"&gt;  &lt;head&gt; &lt;title&gt;Getting Started: Handling Form Submission&lt;/title&gt; &lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /&gt; &lt;/head&gt; &lt;body&gt; &lt;h1&gt;RESULT&lt;/h1&gt; &lt;br/&gt; &lt;p&gt;&lt;label for="response"&gt;RESPONSE:&lt;/label&gt;&lt;/p&gt; &lt;textarea rows="4" cols="100" id="response" name="${result.response}  "&gt;   &lt;/textarea&gt; &lt;br/&gt; &lt;br/&gt; &lt;br/&gt;  &lt;a href="/greeting"&gt;SUBMIT A NEW REQUEST&lt;/a&gt; &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>Here is the code that I thought would handle the addition of the response to the object class created for the response;</p>  <pre><code>    StringBuilder sb = new StringBuilder(500);      sb.append(System.lineSeparator());     sb.append(uid + "   " + nameType + "    " + custKey +      "       " +  "SUCCESSFULLY ADDED!");     ResponseMsg = sb.toString();     result.setResult(ResponseMsg); </code></pre>  <p>the response class object:</p>  <pre><code>public class result implements Serializable { @Autowired @com.fasterxml.jackson.annotation.JsonProperty("response")    private String result; private String message; private String error; private String response;  public String getId() {     return message; }  public void setId(String response) {     this.message = response; }  public String getPayLoad() {     return error; }  public void setPayLoad(String error) {     this.error = error; }  public String getResult() {     return result; } public void setResult(String result) {     this.result = result;     }     } </code></pre>  <p>Hope this makes sense. I had other examples to try but had issues getting the server settings to work within Spring tool suite. Any advice appreciated.</p>  <p>Thanks</p>