<p>So to start, we have a Windows Server 2008 R2 running multiple websites under our main domain, so it will be domain.com/site.  The sites were created by someone else using mainly PHP, with a few ASP.Net pages, and only the ASP.Net pages broke after we installed SharePoint 2013 on our server (SharePoint was not installed on it before).</p>  <p>The main issue we first saw was a configuration error referencing a problem connecting to the SharePoint farm, which was the application pool in IIS was using user credentials that could not access a part of SharePoint.  This is most likely a configuration somewhere, but I could not find out where (wasn't in Global Web.Config, Machine.Config, or any Web.Config i could find).</p>  <p>Because the User Credentials fixed that error, we received another config error that said <code>PlatformNotSupportedException: Operation is not supported on this platform.</code>  This pointed to the application pool being set to classic instead of integrated, and here's where I'm at.  If I set the application pool (which is .Net v4.0 btw) to Integrated, the error goes away, but the entire site outside of SharePoint pulls up blank.  In the developer tools in Chrome, all i see is a 500 error (Internal Server Error) and nothing else.</p>  <p>If I set the application pool back to classic, the PHP pages will load up fine, but the ASPX pages will load up with the <code>PlatformNotSupportedException</code> error.</p>  <p>Exception information: </p>  <pre><code>Exception type: PlatformNotSupportedException  Exception message: Operation is not supported on this platform.  at System.Web.HttpServerVarsCollection.Set(String name, String value) at Microsoft.SharePoint.IdentityModel.SPTokenCache.ReadToken(Byte[] token) at Microsoft.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(Byte[] token, SecurityTokenResolver tokenResolver) at Microsoft.IdentityModel.Web.SessionAuthenticationModule.ReadSessionTokenFromCookie(Byte[] sessionCookie) at Microsoft.IdentityModel.Web.SessionAuthenticationModule.TryReadSessionTokenFromCookie(SessionSecurityToken&amp; sessionToken) at Microsoft.IdentityModel.Web.SessionAuthenticationModule.OnAuthenticateRequest(Object sender, EventArgs eventArgs) at Microsoft.SharePoint.IdentityModel.SPSessionAuthenticationModule.OnAuthenticateRequest(Object sender, EventArgs eventArgs) at System.Web.HttpApplication.SyncEventExecutionStep.System.Web.HttpApplication.IExecutionStep.Execute() at System.Web.HttpApplication.ExecuteStep(IExecutionStep step, Boolean&amp; completedSynchronously) </code></pre>  <p>In this exception message, it references SharePoint configurations the site is not using.  Now this could belong in the SharePoint StackExchange (except that SharePoint is working), but since this affects the configuration on a web site/application, I was hoping someone might have an idea where the site is pulling the configuration that shows up in the error.</p>  <p><strong>Site Setup in IIS</strong></p>  <pre><code>Application Pools Sites &gt;SharePoint URL (domain.com) &gt;&gt;WebApp (domain.com/WebApp) </code></pre>  <p>The <code>WebApp</code> page is on a separate application pool, and I assume it needs to run on <code>.Net v4.0</code> classic mode.  The PHP pages work fine with it set to classic, but part of the problem is the ASPX pages.  If I can find out where it's pulling those configurations, I'm hoping I can have some way to remove them from just the 1 site without affecting SharePoint.</p>  <p>I'm hoping i did not miss anything important, but if I missed anything I will edit my post later to include more information.  I also don't fully understand how the configuration files work with sites in IIS, because it appears those configurations are inherited from somewhere.</p>  <p><strong>Note: I did not design the WebApp page, and the person who did no longer works for us.</strong></p>