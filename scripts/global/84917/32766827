<p>Usually on unix systems you can suppress command output by redirecting STDIN and/or STDERR to a file or /dev/null. But what, if you need to pass content to a piped command via STDIN in a bash script?</p>  <p>The example below should make clear what is meant. It's just an example, though - I'm not searching for a solution to this command in specific but to that kind of situation in general. Sadly there are numerous situations where you would want to suppress output in a script, but need to pass content via STDIN, when a command has no switch to submit the information in an other way.</p>  <p>My "problem" is that I wrote a function to execute commands with proper error handling and in which I would like to redirect all output produced by the executed commands to a log file.</p>  <p>The function looks like <a href="http://pastebin.com/Pnwj5dqF" rel="nofollow">this</a>.`</p>  <p>Example problem:</p>  <pre><code>[18:25:35] [V] root@vbox:~# echo 'test' |read -p 'Test Output' TMP &amp;&gt;/dev/null  [18:25:36] [V] root@vbox:~# echo $TMP  [18:25:36] [V] root@vbox:~#  </code></pre>  <p>Any ideas on how to solve my problem?</p>