<p>Using the graph-toollibrary for python, how to get the weight of an edge connected to a vertex of degree 1 ?</p>  <p>The code  to generate the graph is:</p>  <pre><code>import graph_tool.all as gt import random from collections import defaultdict  g = gt.Graph(directed = False) g.add_vertex(n = 6)  e1 = g.add_edge(1,2) e2 = g.add_edge(2,1) e3 = g.add_edge(1,3) e4 = g.add_edge(2,4) e5 = g.add_edge(4,5) e6 = g.add_edge(0,1)  edge_weights = g.new_edge_property('double') for e in g.edges():     edge_weights[e] = random.randint(1, 20)  gt.graph_draw(g, vertex_text=g.vertex_index, edge_pen_width=edge_weights ,vertex_font_size=18, output_size=(200, 200))  for v in g.vertices():     print v.out_degree()  degrees = defaultdict(list) for v in g.vertices():     degrees[v.out_degree()].append(v)  print degrees[1] </code></pre>  <p>By the way is there a better way to get vertices of degree 1 ?</p>  <p>Now, it is possible to get edges connected to vertices of degree 1. But I don't succeed in reading their weight:</p>  <pre><code>for v1 in degrees[1]:     e = v1.out_edges     print e </code></pre>  <p>The following code fails to do it:</p>  <pre><code>for v1 in degrees[1]:     e = v1.out_edges     print edge_weights[e] </code></pre>  <p>Thanks</p>