<p>I am facing some strange issues here. It was working very fine but since we added a new field in asp.net identity users table we are having this issue generated randomly. </p>  <p>1 )  when we try to login using user name and password the login page just refreshes and user is not logged into the system. </p>  <p>2 ) When user tries to login using Google it works for some users and for others it throws this exception.</p>  <pre><code> System.ArgumentNullException: Value cannot be null. Parameter name: identity  Generated: Tue, 29 Sep 2015 15:39:51 GMT   System.ArgumentNullException: Value cannot be null.  Parameter name: identity     at Microsoft.AspNet.Identity.IdentityExtensions.GetUserId(IIdentity identity)     at UnitedCentralAdminWebApp.Startup.&lt;ConfigureAuth&gt;b__6(GoogleOAuth2ReturnEndpointContext ctx)     at Microsoft.Owin.Security.Google.GoogleOAuth2AuthenticationProvider.ReturnEndpoint(GoogleOAuth2ReturnEndpointContext context)     at Microsoft.Owin.Security.Google.GoogleOAuth2AuthenticationHandler.&lt;InvokeReplyPathAsync&gt;d__19.MoveNext()  --- End of stack trace from previous location where exception was thrown ---     at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)     at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)     at Microsoft.Owin.Security.Google.GoogleOAuth2AuthenticationHandler.&lt;InvokeAsync&gt;d__16.MoveNext()  --- End of stack trace from previous location where exception was thrown ---     at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)     at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)     at Microsoft.Owin.Security.Infrastructure.AuthenticationMiddleware`1.&lt;Invoke&gt;d__0.MoveNext()  --- End of stack trace from previous location where exception was thrown ---     at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)     at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)     at Microsoft.Owin.Security.Infrastructure.AuthenticationMiddleware`1.&lt;Invoke&gt;d__0.MoveNext()  --- End of stack trace from previous location where exception was thrown ---     at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)     at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)     at Microsoft.Owin.Security.Infrastructure.AuthenticationMiddleware`1.&lt;Invoke&gt;d__0.MoveNext()  --- End of stack trace from previous location where exception was thrown ---     at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)     at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)     at Microsoft.AspNet.Identity.Owin.IdentityFactoryMiddleware`2.&lt;Invoke&gt;d__0.MoveNext()  --- End of stack trace from previous location where exception was thrown ---     at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)     at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)     at Microsoft.AspNet.Identity.Owin.IdentityFactoryMiddleware`2.&lt;Invoke&gt;d__0.MoveNext()  --- End of stack trace from previous location where exception was thrown ---     at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()     at Microsoft.Owin.Host.SystemWeb.IntegratedPipeline.IntegratedPipelineContext.EndFinalWork(IAsyncResult ar)     at System.Web.HttpApplication.AsyncEventExecutionStep.System.Web.HttpApplication.IExecutionStep.Execute()     at System.Web.HttpApplication.ExecuteStep(IExecutionStep step, Boolean&amp; completedSynchronously) </code></pre>  <p>I tried to reproduce this but when i run the code from visual studio it just works fine but when i publish and run it on live it produces these issues randomly.</p>  <p>This is the configuration in web.config.</p>  <pre><code>&lt;location path="Administration"&gt;     &lt;system.web&gt;       &lt;authorization&gt;         &lt;allow users="?" /&gt;         &lt;deny users="*"/&gt;               &lt;/authorization&gt;     &lt;/system.web&gt;   &lt;/location&gt; </code></pre>  <p>and This is my google Oauth Code.</p>  <pre><code>app.UseGoogleAuthentication(new GoogleOAuth2AuthenticationOptions()             {                 ClientId = "client id",                 ClientSecret = "secret",                 Provider = new GoogleOAuth2AuthenticationProvider()                 {                      OnAuthenticated = ctx =&gt;                     {                         return Task.FromResult(0);                     },                     OnReturnEndpoint = ctx =&gt;                     {                         ctx.Identity.GetUserId();                         return Task.FromResult(0);                     }                 }             }); </code></pre>  <p>Its really frustrating not be able to produce error locally. Can any one find out what is going wrong here.</p>