<p>I'm using the code below (JQuery) to delay the loading of a div until after the <strong>entire</strong> page has loaded (code, images, etc and rendered). It is working in Safari and Firefox, but not in Chrome. On Safari and Firefox, the web page loads and renders everything, and then it loads the div (the Facebook embed) after the browser says everything is loaded (loader stops spinning, page content is shown, browsers developer tools say everything is loaded -- not just DOM). In Chrome, though, it just loads at the end (after DOM content) but before everything is loaded and shown (like it does in Safari and Firefox, which is how it is supposed to and how I want it to work). I would greatly appreciate any help on making this work in Chrome like it does in the other browsers! (I asked yesterday, but the answer I was provided didn't fix the issue for me, and I perhaps wasn't clear about what I wanted (perhaps mistaken for only after DOM was loaded) so I decided to put it up again so it was more clear.)</p>  <pre><code>&lt;script type="text/javascript"&gt;    function insertFB(){ var html='&lt;div class="fb-page" data-href="https://www.facebook.com/bobcaputolivingwell" data-small-header="false" data-adapt-container-width="true" data-hide-cover="false" data-show-facepile="true" data-show-posts="true"&gt;&lt;div class="fb-xfbml-parse-ignore"&gt;&lt;blockquote cite="https://www.facebook.com/bobcaputolivingwell"&gt;&lt;a href="https://www.facebook.com/bobcaputolivingwell"&gt;Bob Caputo Living Well&lt;/a&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;/div&gt;'; $("#FB_PAGE").html(html); }  if (document.addEventListener){ document.addEventListener("DOMContentLoaded", insertFB, false); }     if (/WebKit/i.test(navigator.userAgent)){ var _timer = setInterval(function(){ if(/loaded|complete/.test(document.readyState)){ insertFB; } },10); }    window.onload = insertFB();    &lt;/script&gt; </code></pre>