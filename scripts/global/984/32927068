<p>I'm having contention problems in Google App Engine, and try to understand what's going on.</p>  <p>I have a request handler annotated with:</p>  <pre><code>@ndb.transactional(xg=True, retries=5)  </code></pre>  <p>..and in that code I fetch some stuff, update some others etc. But sometimes an error like this one comes in the log during a request:</p>  <pre><code>16:06:20.930 suspended generator _get_tasklet(context.py:329) raised TransactionFailedError(too much contention on these datastore entities. please try again. entity group key: app: "s~my-appname" path &lt;   Element {     type: "PlayerGameStates"     name: "hannes2"   } &gt; ) 16:06:20.930 suspended generator get(context.py:744) raised TransactionFailedError(too much contention on these datastore entities. please try again. entity group key: app: "s~my-appname"   path &lt;     Element {       type: "PlayerGameStates"       name: "hannes2"     }   &gt;   ) 16:06:20.930 suspended generator get(context.py:744) raised TransactionFailedError(too much contention on these datastore entities. please try again. entity group key: app: "s~my-appname"   path &lt;     Element {       type: "PlayerGameStates"       name: "hannes2"     }   &gt;   ) 16:06:20.936 suspended generator transaction(context.py:1004) raised TransactionFailedError(too much contention on these datastore entities. please try again. entity group key: app: "s~my-appname"   path &lt;     Element {       type: "PlayerGameStates"       name: "hannes2"     }   &gt;   ) </code></pre>  <p>..followed by a stack trace. I can update with the whole stack trace if needed, but it's kind of long.</p>  <p>I don't understand why this happens. Looking at the line in my code there the exception comes, I run <code>get_by_id</code> on a totally different entity (Round). The "PlayerGameStates", name "hannes2" that is mentioned in the error messages is the parent of another entity GameState, which have been <code>get_async</code>:ed from the database a few lines earlier;</p>  <pre><code># GameState is read by get_async gamestate_future = GameState.get_by_id_async(id, ndb.Key('PlayerGameStates', player_key)) ... gamestate = gamestate_future.get_result() ... </code></pre>  <p>Weird(?) thing is, there are no writes to the datastore occurring for that entity. My understanding is that contention errors can come if the same entity is updated at the same time, in parallell.. Or maybe if too many writes occur, in a short period of time..</p>  <p>But can it happen when reading entities also? ("suspended generator get.."??) And, is this happening after the 5 ndb.transaction retries..? I can't see anything in the log that indicates that any retries have been made.</p>  <p>Any help is greatly appreciated.</p>