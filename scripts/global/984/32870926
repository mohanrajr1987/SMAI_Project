<p>I'm trying to set up a test module for a multi-module Google App Engine project.  I ran into the following error though:</p>  <blockquote>   <p>[INFO] WARNING: failed _ah_ServeBlobFilter:   java.lang.ClassCastException:   com.google.appengine.tools.development.ApiProxyLocalImpl cannot be   cast to com.google.appengine.tools.development.ApiProxyLocal [INFO]   Sep 30, 2015 8:55:04 AM com.google.apphosting.utils.jetty.JettyLogger   warn [INFO] WARNING: Failed startup of context   com.google.appengine.tools.development.DevAppEngineWebAppContext@4b2d19f2{/,/Users/mosofsky/Developer/SocialMetrics/nbsocialmetrics-ear/target/nbsocialmetrics-ear-1.0/nbsocialmetrics-frontend-1.0.war}   [INFO] java.lang.ClassCastException:   com.google.appengine.tools.development.ApiProxyLocalImpl cannot be   cast to com.google.appengine.tools.development.ApiProxyLocal [INFO]     at   com.google.appengine.api.blobstore.dev.ServeBlobFilter.init(ServeBlobFilter.java:55)   [INFO]    at   org.mortbay.jetty.servlet.FilterHolder.doStart(FilterHolder.java:97)   [INFO]    at   org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)   [INFO]    at   org.mortbay.jetty.servlet.ServletHandler.initialize(ServletHandler.java:662)   [INFO]    at   org.mortbay.jetty.servlet.Context.startContext(Context.java:140)   [INFO]    at   org.mortbay.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1250)   [INFO]    at   org.mortbay.jetty.handler.ContextHandler.doStart(ContextHandler.java:517)   [INFO]    at   org.mortbay.jetty.webapp.WebAppContext.doStart(WebAppContext.java:467)   [INFO]    at   org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)   [INFO]    at   org.mortbay.jetty.handler.HandlerWrapper.doStart(HandlerWrapper.java:130)   [INFO]    at   org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)   [INFO]    at   org.mortbay.jetty.handler.HandlerWrapper.doStart(HandlerWrapper.java:130)   [INFO]    at org.mortbay.jetty.Server.doStart(Server.java:224) [INFO]     at   org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)   [INFO]    at   com.google.appengine.tools.development.JettyContainerService.startContainer(JettyContainerService.java:255)   [INFO]    at   com.google.appengine.tools.development.AbstractContainerService.startup(AbstractContainerService.java:288)   [INFO]    at   com.google.appengine.tools.development.AutomaticInstanceHolder.startUp(AutomaticInstanceHolder.java:26)   [INFO]    at   com.google.appengine.tools.development.AbstractModule.startup(AbstractModule.java:87)   [INFO]    at   com.google.appengine.tools.development.Modules.startup(Modules.java:105)   [INFO]    at   com.google.appengine.tools.development.DevAppServerImpl.doStart(DevAppServerImpl.java:258)   [INFO]    at   com.google.appengine.tools.development.DevAppServerImpl.access$000(DevAppServerImpl.java:47)   [INFO]    at   com.google.appengine.tools.development.DevAppServerImpl$1.run(DevAppServerImpl.java:213)   [INFO]    at   com.google.appengine.tools.development.DevAppServerImpl$1.run(DevAppServerImpl.java:211)   [INFO]    at java.security.AccessController.doPrivileged(Native Method)   [INFO]    at   com.google.appengine.tools.development.DevAppServerImpl.start(DevAppServerImpl.java:211)   [INFO]    at   com.google.appengine.tools.development.DevAppServerMain$StartAction.apply(DevAppServerMain.java:277)   [INFO]    at   com.google.appengine.tools.util.Parser$ParseResult.applyArgs(Parser.java:48)   [INFO]    at   com.google.appengine.tools.development.DevAppServerMain.run(DevAppServerMain.java:219)   [INFO]    at   com.google.appengine.tools.development.DevAppServerMain.main(DevAppServerMain.java:210)   [INFO]</p> </blockquote>  <p>I think these are coming from adding the Google App Engine test libraries (<a href="https://cloud.google.com/appengine/docs/java/tools/localunittesting" rel="nofollow">https://cloud.google.com/appengine/docs/java/tools/localunittesting</a>) as described at <a href="http://stackoverflow.com/questions/22522426/classcastexceptioncom-google-appengine-tools-development-apiproxylocalimpl-cann">ClassCastException:com.google.appengine.tools.development.ApiProxyLocalImpl cannot be cast to com.google.appengine.tools.development.ApiProxyLocal</a>.  But since I can't figure out how to set up a test module, I had set up my POM without specifying <code>&lt;scope&gt;test&lt;/scope&gt;</code> (see <a href="http://stackoverflow.com/questions/27629791/adding-runwith-for-jbehave-junit-runner-breaks-jbehave-build-using-maven/27629792#27629792">Adding @RunWith for jbehave-junit-runner breaks JBehave build using Maven</a>).  </p>  <p>So my question is how do I properly set up my Google App Engine multi-module project with a module devoted just to test (which I can put Jbehave in along with the Google App Engine test libraries)?  One thing in particular I'm curious about is how to share code across my test module and my application modules?  Is there a way better than symbolic links as described at <a href="http://stackoverflow.com/questions/27388111/can-google-app-engine-modules-share-source-code-just-like-maven-modules">Can Google App Engine Modules share source code just like Maven Modules?</a>?</p>