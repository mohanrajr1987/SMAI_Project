<p>I have a piece of test code:</p>  <pre><code>def asdf(id: nil, field: nil, state: nil)   puts "id: #{id}, field: #{field}" end  def test(a, b, *args)   # a, b are needed only inside #test   yield(state: :created, *args) end  test('a', 'b', id: 'xyz', field: :asd) { |*args| asdf(*args) } </code></pre>  <p>It generates a syntax error:</p>  <pre><code>syntax error, unexpected * yield(state: :created, *args) </code></pre>  <p>What is the correct way to call a block with a named parameter and an argument list? What is the idiomatic way to do this?</p>  <p>I also tried passing <code>&amp;block</code> to <code>test</code> and doing <code>block.call(state: :created, *args)</code> with no luck.</p>