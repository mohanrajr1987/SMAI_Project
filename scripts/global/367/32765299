<p>I know that PEP8 dictates to not assign lambda to an expression because it misses the entire point of a lambda function. </p>  <p>But what about a <strong>recursive lambda function</strong>? I've found that in many cases, it's really simple, clean and efficient to make a recursion with lambda assigning it to an expression instead of defining a function. And pep8 doesn't mention recursive lambda.</p>  <p>For example, let's compare a function that returns the greatest common divisor between two numbers:</p>  <pre><code>def gcd(a,b):     if b == 0:         return a     return gcd(b, a % b) </code></pre>  <p>vs</p>  <pre><code>gcd = lambda a, b: a if b == 0 else gcd(b, a % b) </code></pre>  <p>So, what should I do? </p>