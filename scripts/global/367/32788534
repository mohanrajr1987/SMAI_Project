<p>I am a python programmer and as the Python API is too slow for my Spark application and decided to port my code to Spark Scala API, to compare the computation time. </p>  <p>I am trying to filter out the lines that start with numeric characters from a huge file using Scala API in Spark. In my file, some lines have numbers and some have words and I want the lines that only have numbers.</p>  <p>So, in my Python application, I have these lines.</p>  <pre><code>l = sc.textFile("my_file_path") l_filtered = l.filter(lambda s: s[0].isdigit()) </code></pre>  <p>which works exactly as I want.</p>  <p>This is what I have tried so far.</p>  <pre><code>val l = sc.textFile("my_file_path") val l_filtered = l.filter(x =&gt; x.forall(_.isDigit)) </code></pre>  <p>This throws out an error saying that char does not have forall() function.</p>  <p>I also tried taking the first character of the lines using s.take(1) and apply isDigit() function on that in the following way.</p>  <pre><code>val l = sc.textFile("my_file_path") val l_filtered = l.filter(x =&gt; x.take(1).isDigit) </code></pre>  <p>and this too...</p>  <pre><code>val l = sc.textFile("my_file_path") val l_filtered = l.filter(x =&gt; x.take(1).Character.isDigit) </code></pre>  <p>This also throws an error.</p>  <p>This is basically a small error and as I am not accustomed to Scala syntax, I am having hard time figuring it out. Any help would be appreciated.</p>  <p>Edit: As answered for this <a href="http://stackoverflow.com/questions/9938098/how-to-check-to-see-if-a-string-is-a-decimal-number-in-scala">question</a>, I tried writing the function, but I am unable to use that in filter() function in my application. <strong>To apply the function for all the lines in the file.</strong></p>