<p>I am writing an application that works with hexs of file but not with all of them at ones but only with this with specified offset. To this moment i am using a function taken from here but it doesn't work good in my case.</p>  <pre><code>public static string HexStr(byte[] p) {     char[] c = new char[p.Length * 2 + 2];     byte b;     c[0] = '0'; c[1] = 'x';     for (int y = 0, x = 2; y &lt; p.Length; ++y, ++x)     {         b = ((byte)(p[y] &gt;&gt; 4));         c[x] = (char)(b &gt; 9 ? b + 0x37 : b + 0x30);         b = ((byte)(p[y] &amp; 0xF));         c[++x] = (char)(b &gt; 9 ? b + 0x37 : b + 0x30);     }     return new string(c); }  byte[] byVal; using (Stream fileStream = new FileStream(path, FileMode.Open, FileAccess.Read, FileShare.ReadWrite)) {     BinaryReader brFile = new BinaryReader(fileStream);     fileStream.Position = key;     byte[] offsetByte = brFile.ReadBytes(0);     string offsetString = HexStr(offsetByte);     byVal = brFile.ReadBytes(16); } </code></pre>  <p>Can someone suggest any other solutions of this problem ?</p>  <p>P.S. This code takes the hex of file on the specified offset (<code>fileStream.Position=key</code> "key" is the offset) and this is my weak spot</p>