<p>I try to redo this <a href="https://en.bitcoin.it/wiki/Block_hashing_algorithm" rel="nofollow">Pyhton example</a> in R :</p>  <pre><code>  &gt;&gt;&gt; import hashlib   &gt;&gt;&gt; header_hex = ("01000000" +     "81cd02ab7e569e8bcd9317e2fe99f2de44d49ab2b8851ba4a308000000000000" +     "e320b6c2fffc8d750423db8b1eb942ae710e951ed797f7affc8892b0f1fc122b" +     "c7f5d74d" +     "f2b9441a" +     "42a14695")   &gt;&gt;&gt; header_bin = header_hex.decode('hex')   &gt;&gt;&gt; hash = hashlib.sha256(hashlib.sha256(header_bin).digest()).digest()   &gt;&gt;&gt; hash.encode('hex_codec')   '1dbd981fe6985776b644b173a4d0385ddc1aa2a829688d1e0000000000000000'   &gt;&gt;&gt; hash[::-1].encode('hex_codec')   '00000000000000001e8d6829a8a21adc5d38d0a473b144b6765798e61f98bd1d' </code></pre>  <p>which uses Python function <code>str.encode</code> to encode and decode an hexadecimal encoded binary string. First I thought it was transforming a number in hexadecimal representation to binary representation, and I though using <code>BMS::hex2bin</code> but it's not. The other part of the code can be handled with <code>digest(hash, algo = 'sha256')</code>.</p>  <p>I don't know much about encoding indeed. Thanks !</p>