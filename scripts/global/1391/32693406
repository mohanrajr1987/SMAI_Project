<p>I have the following hex string:</p>  <blockquote>   <p>00000000000008a3a41b85b8b29ad444def299fee21793cd8b9e567eab02cd81</p> </blockquote>  <p>but I want it to look like this:</p>  <blockquote>   <p>81cd02ab7e569e8bcd9317e2fe99f2de44d49ab2b8851ba4a308000000000000 (Big   endian)</p> </blockquote>  <p>I think I have to reverse and swap the string, but something like this doesn't give me right result:</p>  <pre><code>  String hex = "00000000000008a3a41b85b8b29ad444def299fee21793cd8b9e567eab02cd81";     hex = new StringBuilder(hex).reverse().toString(); </code></pre>  <blockquote>   <p>Result:   81dc20bae765e9b8dc39712eef992fed444da92b8b58b14a3a80000000000000   (wrong)   81cd02ab7e569e8bcd9317e2fe99f2de44d49ab2b8851ba4a308000000000000   (should be)</p> </blockquote>  <p>The swapping:</p>  <pre><code>    public static String hexSwap(String origHex) {         // make a number from the hex         BigInteger orig = new BigInteger(origHex,16);         // get the bytes to swap         byte[] origBytes = orig.toByteArray();         int i = 0;         while(origBytes[i] == 0) i++;         // swap the bytes         byte[] swapBytes = new byte[origBytes.length];         for(/**/; i &lt; origBytes.length; i++) {             swapBytes[i] = origBytes[origBytes.length - i - 1];         }         BigInteger swap = new BigInteger(swapBytes);         return swap.toString(10);     }  hex = hexSwap(hex); </code></pre>  <blockquote>   <p>Result:    026053973026883595670517176393898043396144045912271014791797784   (wrong)   81cd02ab7e569e8bcd9317e2fe99f2de44d49ab2b8851ba4a308000000000000   (should be)</p> </blockquote>  <p>Can anyone give me a example of how to accomplish this? Thank you a lot :)</p>