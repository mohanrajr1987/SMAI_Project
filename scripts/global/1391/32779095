<p>I'm using the <a href="http://www.juce.com/" rel="nofollow">Juce Framework</a> that has a <code>setColour</code> method like so:</p>  <p><code>g.setColour (Colour (0xff2a2620));</code></p>  <p>I instead would like to write something like more readable like:</p>  <p><code>g.setColour (Colour (lovelyBrown));</code>, 'mapping' <code>0xff2a2620</code> to 'lovelyBrown'.</p>  <p>The method's prototype is:</p>  <p><code>explicit Colour (uint32 argb) noexcept;</code> where <code>uint32</code> is:</p>  <p><code>/** A platform-independent 32-bit unsigned integer type. */ typedef unsigned int                uint32;</code></p>  <p>Juce has nice readable colour names already such as:</p>  <p><code>const Colour Colours::tomato (0xffff6347);</code>, using a method to find the colour given a name:</p>  <p><code>static JUCE_API Colour findColourForName (const String&amp; colourName,                                               const Colour&amp; defaultColour);</code></p>  <p>However, I don't want to modify or subclass their Colours class.  I am wondering if there is a simpler way of 'mapping' <code>0xff2a2620</code> to 'lovelyBrown'?</p>