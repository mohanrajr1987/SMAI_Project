<p>I have a column like:</p>  <pre><code>CREATE TABLE `comments` (   `id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `thread_id` int(10) unsigned NOT NULL DEFAULT '0',   `content` mediumtext NOT NULL,   `parent_id` int(10) unsigned NOT NULL DEFAULT '0',   PRIMARY KEY (`id`) </code></pre>  <ul> <li>id - uniq comment identifier</li> <li>thread_id - thread of that comment</li> <li>parent_id - comment that is parent to this comment</li> </ul>  <p>Now, there can be two types of comments in that table. One that is the comment to the main thread (thread_id is not null in that case), and comment to comment (thread_id is null and parent_id is not null in that case). I would like to create an INDEX for thread_id and parent_id for optimization, and foreign keys and references so that if:</p>  <ol> <li>moderator deletes main thread, all comments to that thread and possible comments to comments will be deleted as well, recursively</li> <li>moderator deletes some comment within main thread, that comment and its childs will be also deleted, recursively</li> </ol>  <p>If child will be deleted, no action, as nothing "below".</p>  <p>I tried smth like this:</p>  <pre><code> INDEX (parent_id, thread_id),   FOREIGN KEY (parent_id, thread_id)     REFERENCES (id) </code></pre>  <p>But not sure if it's ok, as working on the same table confuses me a bit.</p>