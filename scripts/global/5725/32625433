<p>I have two classes  with one to many relationship. I want to count the number of records in the child class based on the primary key of the parent class.</p>  <p>Parent table class</p>  <pre><code>  public class SystemFamily {     public SystemFamily()     {         DateCreated = DateTime.Now;         deleteFlag = false;      }      public int SystemFamilyID { get; set;}     public string FamilyName { get; set; }     public DateTime DateCreated { get; set; }      public string CreatedBy { get; set; }     public bool deleteFlag { get; set; }     public int SystemsCount {get;set;}     public virtual ICollection&lt;Systems&gt; Systems { get; set; }     public string SFamilyName     {         get         {             return FamilyName;         }      }   } </code></pre>  <p>Child table class</p>  <pre><code>  public class Systems {      public int SystemsID { get; set; }     public string SystemName { get; set; }     public DateTime CreatedOn { get; set;}     public string CreatedBy { get; set; }     public int SystemFamilyID { get; set; }      public virtual SystemFamily SystemFamily { get; set; } } </code></pre>  <p>I am not sure where the count should be performed. In the view or the controller? So i will post the required code after suggestions.</p>  <p>Thanks in advance! Vini</p>  <p><strong>EDIT 1</strong></p>  <pre><code>    public ActionResult Index()      {         //List&lt;Systems&gt; systems;         //var query = db.SystemFamily.Select(c =&gt; c.SystemFamilyID).ToList();         //foreach (var sid in query)         //{         //    systems = db.Systems.Select(c =&gt; c.SystemFamilyID == sid).ToList();         //}         //int count = systems.Count();//Here you will  get count          //ViewBag.Counts = count;          var viewmodel = new Sys_SysFam();         foreach (var item in db.SystemFamily)         {             int id = item.SystemFamilyID;              //SystemsCount              int count = db.Systems.Where(x =&gt; x.SystemFamilyID == id).Count();             item.SystemsCount = count;         }         ViewBag.Count = db.SystemFamily.Where(x=&gt;x.deleteFlag==false).Count();         int count1 =db.Systems.Count();         ViewBag.SCount = count1;         return View(db.SystemFamily.Where(x=&gt;x.deleteFlag==false).ToList());     } </code></pre>  <p>This is  the action method where the logic should go I suppose! I am trying with a foreach loop. but it doesnt work it throws exception : <em>'System.Data.Entity.Core.EntityCommandExecutionException'</em></p>  <p>But I also have a ViewSystem which returns the systems in a particular family. </p>  <p>ViewSystem</p>  <pre><code>    public ActionResult ViewSystem(int? id)     {             var viewmodel = new Sys_SysFam();             ViewBag.SystemFamilyID = id;             if (id != null)             {                 ViewBag.SystemFamilyID = id.Value;                 var sysFamily = db.SystemFamily.Include(x =&gt; x.Systems).FirstOrDefault(x =&gt; x.SystemFamilyID == id.Value);                 if (sysFamily != null)                 {                     viewmodel.Systems = sysFamily.Systems;                 }             }              return View(viewmodel);      } </code></pre>