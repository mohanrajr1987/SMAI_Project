<p>There are two entities -- <code>Asset</code> and <code>Attachment</code>, mapped bidirectionally <code>OneToOne</code>. Each <code>Asset</code> <em>can have</em> <code>0..1</code> <code>Asset</code>:</p>  <p><strong><code>Asset</code></strong></p>  <pre><code>class Asset {     /**      * @var string @ORM\Column(name="asset_uuid", type="string", length=36, nullable=false)      *      @ORM\Id      */     private $uuid;     /**      * @var \MyLib\Model\Entity\Attachment      * @ORM\OneToOne(targetEntity="MyLib\Model\Entity\Attachment", mappedBy="asset", cascade={"remove", "persist"}, orphanRemoval=true)      **/     private $attachment;     ... } </code></pre>  <p><strong><code>Attachment</code></strong></p>  <pre><code>class Attachment {     /**      * @var string @ORM\Column(name="attachment_uuid", type="string", length=36, nullable=false)      *      @ORM\Id      */     private $uuid;     /**      * @var \MyLib\Model\Entity\Asset      * @ORM\OneToOne(targetEntity="\MyLib\Model\Entity\Asset", inversedBy="attachment", cascade={"persist"})      * @ORM\JoinColumn(name="attachment_linkassetuuid", referencedColumnName="asset_uuid")      */     private $asset;     ... } </code></pre>  <p>Now I want to <code>find()</code> an <code>Attachment</code> by <code>Asset.uuid</code>:</p>  <pre><code>class AssetService ... {     ...     private function finAttachmentByAssetUuid($assetUuid)     {         $entityManager = $this-&gt;getEntityManager();         $attachmentRepository = $entityManager-&gt;getRepository('MyLib\Model\Entity\Attachment');          $attachment = $attachmentRepository-&gt;findBy([             'attachment_linkassetuuid' =&gt; $assetUuid         ]);          return $attachment;     }     ... } </code></pre>  <p>But it doesn't and cannot work, since Doctrine expects an entity attribute name, rather than a table column name. Well, but here the entity doesn't have an attriute for the foreign key column.</p>  <p><strong>How to use <code>Doctrine\Common\Persistence#findBy(...)</code> in this case?</strong> Or, if it's not possible: How to retrieve the <code>Attachment</code> by <code>Asset.uuid</code> in this concrete case another way?</p>