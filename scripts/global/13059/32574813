<p>So, I have a domain name, let's say: <code>www.domain.com</code></p>  <p>The goal of this domain is to host a Rails 4 app.</p>  <p>So, initially, I just wanted to place the app at the root of the domain.</p>  <p>However, I am now thinking about other parts of the website, that are not directly parts of the app, but that would need to belong to the domain, and would be hosted on distinct hosts (so that we can take one down without affecting the others when necessary):</p>  <ul> <li>A launch page, built with WordPress or Rails</li> <li>A marketing website, built with WordPress or Rails</li> <li>A blog, built with WordPress</li> <li>A shop, built with Shopify or WordPress + WooCommerce</li> <li>A forum, built with WordPress</li> </ul>  <p>Because of this, I am considering the following structure:</p>  <ul> <li>Launch page / marketing website: <code>www.domain.com</code></li> <li>App: <code>app.domain.com</code></li> <li>Blog: <code>blog.domain.com</code></li> <li>Shop: <code>shop.domain.com</code></li> <li>Forum: <code>forum.domain.com</code></li> </ul>  <p>I would like to automatically redirect logged in users to <code>app.domain.com</code> upon signup / login (with Devise).</p>  <p>Does that make sense or is there a Rails — or not Rails, as a matter of act — convention there that I may be missing / bending?</p>  <p><strong>UPDATE</strong>: after reading <a href="https://medium.com/@parterburn/wordpress-inside-a-ruby-on-rails-app-c324fbf39ad8" rel="nofollow">this very interesting post</a>, another option would be to use subdirectories instead of subdomains:</p>  <ul> <li>Launch page / marketing website: <code>domain.com/home</code></li> <li>App: <code>domain.com/user/user_id</code></li> <li>Blog: <code>domain.com/blog</code></li> <li>Shop: <code>domain.com/shop</code> (only working with WordPress + WooCommerce, not with Shopify though)</li> <li>Forum: <code>domain.com/forum</code></li> </ul>