<p>we are creating several web apps with asp.net mvc 5.2 and wif authentification. one of the web apps is the login-app, which authenticate all users for the other apps by creating a cross domain cookie. The Login itself is working great with the cross-domain cookie, the problem is when i want to reissue a cookie on the other web-apps (not the login app) to enable sliding expiration</p>  <p>I enabled sliding expiration on the other services (not the login service) like this:</p>  <pre><code>        protected void SessionAuthenticationModule_SessionSecurityTokenReceived(object sender, SessionSecurityTokenReceivedEventArgs e)     {         DateTime now = DateTime.UtcNow;         DateTime validFrom = e.SessionToken.ValidFrom;         DateTime validTo = e.SessionToken.ValidTo;          var isNotExpired = now &lt; validTo;         var half = validFrom.AddMinutes(Constants.COOKIE_LIFETIME_MINUTES / 2);         var isOverHalftime = now &gt; half;          if (isNotExpired &amp;&amp; isOverHalftime)         {             SessionAuthenticationModule sam = sender as SessionAuthenticationModule;             e.SessionToken = sam.CreateSessionSecurityToken(e.SessionToken.ClaimsPrincipal, e.SessionToken.Context,             now, now.AddMinutes(Constants.COOKIE_LIFETIME_MINUTES), e.SessionToken.IsPersistent);             e.ReissueCookie = true;         }     } </code></pre>  <p>The cookie is not reissued after this code. </p>  <p>When i run this code on the login-service itself, the cookie is reissued.</p>  <p>What am i missing? Can cookies only be reissued by the server which created them? Unfortunatly i didnt find any informations on the web</p>