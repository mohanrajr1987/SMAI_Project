<p>Here is what I have so far. It's rudimentary and probably a backwards way to do this.  </p>  <p>The basic objective is to see which dates are most popular for customers using the service, which lasts as long as they buy it for (serviceduration). Keep in mind I am referring to the dates that the service is bought <em>for</em> -- the first day of which is the column <code>servicedate</code> -- rather than the date the service was purchased.  </p>  <p>This <code>@d</code> is my variable date, and I check how many transactions include that date in the range of their service duration. Right now, this outputs a bunch of different select tables. I'd really like it to just add a row to the output of the previous iteration in the While loop to make one table with 2 columns and a row per date.</p>  <p>See below:</p>  <pre><code>Declare @d date = '2015-11-01'  While @d &lt; '2016-3-31' Begin    Select        date = @d,        SUM(qty * CASE WHEN @d between servicedate and   dateadd(day, serviceduration, servicedate) THEN 1 END)    From RI    Where confdate &gt; '2015-08-31'      Set @d = dateadd(day, 1, @d) End </code></pre>  <p>EDIT: I think this did it --></p>  <pre><code>Create Table #TblD(Dt date, Num int) Declare @d date = '2015-11-01' While @d &lt; '2016-3-31' Begin    Insert into #TblD(Dt,Num)    Values(@d, (Select SUM( qty * CASE WHEN @d between servicedate and dateadd(day,serviceduration,servicedate) THEN 1 END) from RI where confdate&gt;'2015-08-31')) Set @d=dateadd(day,1,@d) End Select * from #TblD </code></pre>