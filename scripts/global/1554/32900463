<p>Sure I am missing something obvious, but trying to make a curl get request and return the response to a variable. </p>  <pre><code>size_t write_to_string(void *ptr, size_t size, size_t nmemb, std::string stream){     size_t realsize = size * nmemb;     std::string temp(static_cast&lt;const char*&gt;(ptr), realsize);      cout &lt;&lt; temp &lt;&lt; endl;      return realsize; }      CURLcode curl_get(const std::string&amp; url, std::ostream&amp; os, long timeout = 30){     CURLcode code(CURLE_FAILED_INIT);     CURL* curl = curl_easy_init();      string *response;      if (curl){          if (CURLE_OK == (code = curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, &amp;write_to_string))             &amp;&amp; CURLE_OK == (code = curl_easy_setopt(curl, CURLOPT_NOPROGRESS, 1L))             &amp;&amp; CURLE_OK == (code = curl_easy_setopt(curl, CURLOPT_FOLLOWLOCATION, 1L))             &amp;&amp; CURLE_OK == (code = curl_easy_setopt(curl, CURLOPT_FILE, &amp;os))             &amp;&amp; CURLE_OK == (code = curl_easy_setopt(curl, CURLOPT_WRITEDATA, response))             &amp;&amp; CURLE_OK == (code = curl_easy_setopt(curl, CURLOPT_TIMEOUT, timeout))             &amp;&amp; CURLE_OK == (code = curl_easy_setopt(curl, CURLOPT_URL, url.c_str())))         {             code = curl_easy_perform(curl);         }         curl_easy_cleanup(curl);     }      std::string a = *response;      return code; </code></pre>  <p>}</p>  <p>response is always either null or an out of bounds pointer from the dozen ways I have tried. The cout does show the correct response.  All I am trying to do is create a generic function for all curl get calls and have it return the get data. New to c, so sorry if I am overlooking something simple. </p>