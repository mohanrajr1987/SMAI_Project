<p>I have a class with properties for an employee</p>  <pre><code>using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.ComponentModel; using System.Collections.ObjectModel;  namespace SimpleDatabinding03 {    public class Employee:INotifyPropertyChanged     {      int _employeenumber;       string _firstname;       string _lastname;       string _dept;       string _title;          //constructor         public Employee()        {         }          //properties         public int EmployeeNum        {            get { return _employeenumber; }            set { _employeenumber = value; NotifyPropertyChanged("EmployeeNum"); }        }         public string FirstName        {            get { return _firstname; }            set { _firstname = value; NotifyPropertyChanged("FirstName"); }        }         public string LastName        {            get { return _lastname; }            set { _lastname = value; NotifyPropertyChanged("LastName"); }         }         public string Dept        {            get { return _dept; }            set { _dept = value; NotifyPropertyChanged("Dept"); }        }         public string Title        {            get { return _title; }            set { _title = value; NotifyPropertyChanged("Title"); }        }          public event PropertyChangedEventHandler PropertyChanged;         private void NotifyPropertyChanged(string propertyname)        {             if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyname));        }          //internal object GetBindingExpression(System.Windows.DependencyProperty dependencyProperty)        //{        //    throw new NotImplementedException();        //}     } } </code></pre>  <p>and in the XAML I have bound them to a textbox:</p>  <pre><code>&lt;Grid&gt;         &lt;Grid.DataContext&gt;             &lt;m:Employee x:Name="employee"/&gt;         &lt;/Grid.DataContext&gt;           &lt;Label Grid.Row="0"&gt;Employee Number&lt;/Label&gt;         &lt;TextBox Name="EmpNum" Grid.Row="0" Grid.Column="1" Text="{Binding EmployeeNum}" &gt;&lt;/TextBox&gt;          &lt;Label Grid.Row="2" &gt;first name&lt;/Label&gt;         &lt;TextBox Name="Fname" Grid.Row="2" Grid.Column="1" Text="{Binding FirstName}"&gt;&lt;/TextBox&gt;          &lt;Label Grid.Row="3" &gt;Last name&lt;/Label&gt;         &lt;TextBox Name="Lname" Grid.Row="3" Grid.Column="1" Text="{Binding LastName}"&gt;&lt;/TextBox&gt;          &lt;Label Grid.Row="4" &gt;Dept&lt;/Label&gt;         &lt;TextBox Name="Dept" Grid.Row="4" Grid.Column="1" Text="{Binding Dept}"&gt;&lt;/TextBox&gt;     &lt;/Grid&gt; </code></pre>  <p>the code behind is:</p>  <pre><code>private void button1_Click(object sender, RoutedEventArgs e)     {          employee.EmployeeNum = 123;         System.Threading.Thread.Sleep(3000);         employee.FirstName = "John";         System.Threading.Thread.Sleep(3000);        employee.LastName = "kepler"; });      } </code></pre>  <p>Requirement: When the property changes the UI textbox which is bound to the employee instance is not updated. it waits for the button click event to complete and then the UI is updated.  I'm looking for a solution where the UI is updated on the fly.</p>