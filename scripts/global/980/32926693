<p>Im making a homepage in which i want to have a form that ppl can fill in and then when clicking submit have it sent to a gmail account. I more or less want it to show up as an email without them having to fill in their own email address. I was thinking it would work out fine just sending it from the same email that is receiving it.</p>  <p>Problem is that it wont really get trough.</p>  <p>The procedure is fine since i can see all the information i fill in correctly but it wont send the mail.</p>  <p>This is the controller:</p>  <pre><code>public ActionResult InvitationResponseForm()         {                         return View();         }           [HttpPost]         public ViewResult InvitationResponseForm(InvitationResponse model)         {                         if (ModelState.IsValid)             {                 MailMessage response = new MailMessage();                 response.From = new MailAddress("sixtofjun@gmail.com");                 response.To.Add("sixtofjun@gmail.com");                 response.Subject = model.Name + " " + model.Surname;                 string Special = model.SpecialConditions;                 string PlusOne = model.PlusOneComment;                 bool OneOrTwo = model.PlusOne;                 response.Body = model.Name + " " + model.Surname + " " + OneOrTwo + "&lt;br&gt;&lt;br&gt;" + Special + "&lt;br&gt;" + PlusOne;                 response.IsBodyHtml = true;                 SmtpClient smtp = new SmtpClient("smtp.gmail.com", 465);                 NetworkCredential basicAuthInfo = new NetworkCredential("sixtofjun@gmail.com", "My password");                               smtp.UseDefaultCredentials = false;                 smtp.Credentials = basicAuthInfo;                 smtp.DeliveryMethod = SmtpDeliveryMethod.Network;                 smtp.EnableSsl = true;                 return View("InvitationResponseForm", model);             }             else             {                 var errors = ModelState.Values.SelectMany(v =&gt; v.Errors);                 return View();             }          } </code></pre>  <p>And some of the view:</p>  <pre><code>&lt;div class="form-group"&gt;         @Html.LabelFor(model =&gt; model.PlusOneComment, htmlAttributes: new { @class = "control-label col-md-2" })         &lt;div class="col-md-10"&gt;             @Html.EditorFor(model =&gt; model.PlusOneComment)             @Html.ValidationMessageFor(model =&gt; model.PlusOneComment)         &lt;/div&gt;     &lt;/div&gt;      &lt;div class="form-group"&gt;         @Html.LabelFor(model =&gt; model.SpecialConditions, htmlAttributes: new { @class = "control-label col-md-2" })         &lt;div class="col-md-10"&gt;             @Html.EditorFor(model =&gt; model.SpecialConditions)             @Html.ValidationMessageFor(model =&gt; model.SpecialConditions)         &lt;/div&gt;     &lt;/div&gt;             &lt;div class="form-group"&gt;         &lt;div class="col-md-offset-2 col-md-10"&gt;             &lt;input type="submit" value="Save" class="btn btn-default" /&gt;         &lt;/div&gt;     &lt;/div&gt; &lt;/div&gt; </code></pre>  <p>Doing this for my pending wedding so really would like some help with it! Feel free to ask for more info!</p>