<p>I have a form which has fields that can be added dynamicly. Everything works fine, but when I add some fields and submit and I make some mistake on purpose and validation fails, the dynamicly created fields disappear.</p>  <p>Let's say that I have 3 static fields and one dinamicly added. so it looks like that</p>  <p><strong>static fields:</strong> keyword1, keyword2, keyword3</p>  <p><strong>dynamic fields:</strong> keyword4</p>  <p>The validation error message that I get is like this:</p>  <pre><code>The keyword0 field is required. The keyword1 field is required. The keyword2 field is required. The keyword3 field is required. </code></pre>  <p>fields 0,1,2 are in the the form with the values that I filled for them, but field 3 is not that.</p>  <p>How can I access this field so I can print it in my form?</p>  <p><strong>my form</strong></p>  <pre><code>{!! Form::model($keywordsPlan, ['route' =&gt; ['keywordsplans.store', 'company' =&gt; $company], 'method' =&gt; 'POST', 'class' =&gt; 'form-horizontal keywords-plan-form']) !!}   &lt;div class="row"&gt;                    &lt;div class="col-md-4 col-md-offset-4" style="margin-bottom: 20px;"&gt;         {!! Form::label('Date') !!}         {!! Form::date('date', null, ['class' =&gt; 'form-control']) !!}     &lt;/div&gt;       &lt;table class="table table-stripped"&gt;         &lt;thead&gt;             &lt;tr&gt;                 &lt;th&gt;Add Keyword&lt;/th&gt;                 &lt;th&gt;Action&lt;/th&gt;             &lt;/tr&gt;         &lt;/thead&gt;         &lt;tbody&gt;             &lt;tr&gt;                 &lt;td scope="row"&gt;{!! Form::text(null, null, ['class' =&gt; 'form-control keyword-input']) !!}&lt;/td&gt;                 &lt;td scope="row"&gt;&lt;a href="#" class="btn btn-primary add-keyword"&gt;Add keyword&lt;/a&gt;&lt;/td&gt;             &lt;/tr&gt;         &lt;/tbody&gt;     &lt;/table&gt;      &lt;table class="table table-striped keywords-table"&gt;         &lt;thead&gt;             &lt;tr&gt;                 &lt;th&gt;Keyword&lt;/th&gt;                 &lt;th&gt;Action&lt;/th&gt;             &lt;/tr&gt;         &lt;/thead&gt;         &lt;tbody&gt;             @foreach ($keywords as $i =&gt; $keyword)             &lt;tr class="keyword-row"&gt;                 &lt;td scope="row"&gt;{!! Form::text('keyword['.$i.']', $keyword-&gt;text, ['class' =&gt; 'form-control']) !!}&lt;/td&gt;                 &lt;td class="action"&gt;&lt;input type="button" class="btn btn-danger remove-keyword" value="Remove"&gt;&lt;/td&gt;             &lt;/tr&gt;             @endforeach             &lt;tr class="keyword-copy-row hidden"&gt;                 &lt;td&gt;{!! Form::text(null, null, ['class' =&gt; 'form-control']) !!}&lt;/td&gt;                 &lt;td class="action"&gt;&lt;input type="button" class="btn btn-danger remove-keyword" value="Remove"&gt;&lt;/td&gt;             &lt;/tr&gt;         &lt;/tbody&gt;     &lt;/table&gt;      &lt;div class="col-md-4 col-md-offset-4 text-center"&gt;         {!! Form::submit('Create Plan', ['class' =&gt; 'btn btn-success btn-lg save-plan']); !!}     &lt;/div&gt; &lt;/div&gt;   {!! Form::close() !!} </code></pre>  <p>and this is my Request class for this model (form)</p>  <pre><code> /**  * Get the validation rules that apply to the request.  *  * @return array  */ public function rules() {       $rules = [         'date' =&gt; 'required|date|unique:keywords_plans,date',         'approved' =&gt; 'boolean'     ];      for ($i = 0; $i &lt; count($this-&gt;keyword); $i++) {          $rules['keyword'.$i] = 'required';      }      return $rules;  } </code></pre>  <p><strong>My controller</strong></p>  <pre><code>&lt;?php  namespace App\Http\Controllers;  use Illuminate\Http\Request;  use App\Http\Requests; use App\Keyword; use App\Company; use App\Http\Controllers\Controller;  use App\KeywordsPlan; use App\Http\Requests\CreateKeywordsPlan; use App\Http\Requests\UpdateKeywordsPlan;  class KeywordsPlanController extends Controller {       public function __construct()     {         $this-&gt;middleware('auth');     }      /**      * Display a listing of the resource.      *      * @return Response      */     public function index()     {         $keywordsPlans = KeywordsPlan::all();         return view('keywordsPlans/index', compact('keywordsPlans'));     }      /**      * Show the form for creating a new resource.      *      * @return Response      */     public function create($company)     {         $data['keywordsPlan'] = new KeywordsPlan;         $data['company'] = Company::find($company);         $data['keywords'] = $data['company']-&gt;keywords;          return view("keywordsPlans/create", $data);     } } </code></pre>