<p>I have implemented drag and drop using Native HTML5 drag and drop. It works fine in IE11.It works in chrome and Firefox too. But fails in IE7.I cant find what the problem is. Is there any solution for this???</p>  <p>here is my code:</p>  <pre><code>&lt;html&gt; &lt;head&gt; &lt;style&gt; [draggable] {   -moz-user-select: none;   -khtml-user-select: none;   -webkit-user-select: none;   user-select: none; } .box {   height: 125px;   width: 125px;   float: left;   border: 3px solid #0092BF;   background-color: #FFEBDD;   margin-right: 10px;   -webkit-border-radius: 10px;   -moz-border-radius: 10px;   border-radius: 10px;   text-align: center; } img:hover { cursor:move} &lt;/style&gt;  &lt;body&gt; &lt;div id="boxes-example"&gt;     &lt;div class="box" draggable="true"&gt;     &lt;img src="drag icon.png" draggable="false" width="16" height="16"/&gt;         &lt;header&gt;A&lt;/header&gt;         &lt;p&gt;         order!         &lt;/p&gt;     &lt;/div&gt;      &lt;div class="box" draggable="true"&gt;     &lt;img src="drag icon.png" width="16" height="16"/&gt;         &lt;header&gt;B&lt;/header&gt;         &lt;p&gt;         Put me         &lt;/p&gt;     &lt;/div&gt;     &lt;div class="box" draggable="true"&gt;     &lt;img src="drag icon.png" width="16" height="16"/&gt;         &lt;header&gt;C&lt;/header&gt;         &lt;p&gt;         right         &lt;/p&gt;     &lt;/div&gt;     &lt;div class="box" draggable="true"&gt;     &lt;img src="drag icon.png" width="16" height="16"/&gt;         &lt;header&gt;D&lt;/header&gt;         &lt;p&gt;         into         &lt;/p&gt;     &lt;/div&gt;     &lt;div class="box" draggable="true"&gt;     &lt;img src="drag icon.png" width="16" height="16"/&gt;         &lt;header&gt;E&lt;/header&gt;         &lt;p&gt;         the         &lt;/p&gt;     &lt;/div&gt; &lt;/div&gt;     &lt;script&gt;     (function () {         var id_ = 'boxes-example';         var boxes_ = document.querySelectorAll('#' + id_ + ' .box');         var dragSrcEl_ = null;          this.handleDragStart = function (e) {             e.dataTransfer.effectAllowed = 'move';             e.dataTransfer.setData('text/html', this.innerHTML);              dragSrcEl_ = this;              this.style.opacity = '0.5';              // this/e.target is the source node.             this.addClassName('moving');         };          this.handleDragOver = function (e) {             if (e.preventDefault) {                 e.preventDefault(); // Allows us to drop.             }              e.dataTransfer.dropEffect = 'move';              return false;         };          this.handleDragEnter = function (e) {             this.addClassName('over');         };          this.handleDragLeave = function (e) {             // this/e.target is previous target element.              this.removeClassName('over');         };          this.handleDrop = function (e) {             // this/e.target is current target element.              if (e.stopPropagation) {                 e.stopPropagation(); // stops the browser from redirecting.             }              // Don't do anything if we're dropping on the same box we're dragging.             if (dragSrcEl_ != this) {                 dragSrcEl_.innerHTML = this.innerHTML;                 this.innerHTML = e.dataTransfer.getData('text/html');             }              return false;         };          this.handleDragEnd = function (e) {             // this/e.target is the source node.             this.style.opacity = '1';              [ ].forEach.call(boxes_, function (box) {                 box.removeClassName('over');                 box.removeClassName('moving');             });         };          [ ].forEach.call(boxes_, function (box) {             box.setAttribute('draggable', 'true');  // Enable boxes to be draggable.             box.addEventListener('dragstart', this.handleDragStart, false);             box.addEventListener('dragenter', this.handleDragEnter, false);             box.addEventListener('dragover', this.handleDragOver, false);             box.addEventListener('dragleave', this.handleDragLeave, false);             box.addEventListener('drop', this.handleDrop, false);             box.addEventListener('dragend', this.handleDragEnd, false);         });     })(); &lt;/script&gt; </code></pre>  <p> </p>