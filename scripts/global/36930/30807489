<p>I have a strange bug in IE7. The script works fine when it's called for the first time, but breaks when called for the second time. The console shows that the script was stopped on unhandled exception but doesn't tell what the exception is. If I set debugger not to break on unhandled exceptions the script works fine and as expected.</p>  <p>My code is:</p>  <pre><code>// polyfill for IE7 to getElementsByClassName                 if (!parent.document.getElementsByClassName) {                         parent.document.getElementsByClassName = function(cl) {                         var retnode = [];                         var elem = this.getElementsByTagName('*');                         for (var i = 0; i &lt; elem.length; i++) {                             if((' ' + elem[i].className + ' ').indexOf(' ' + cl + ' ') &gt; -1) retnode.push(elem[i]);                         }                         return retnode;                     };                  } var muxBtns = parent.document.getElementsByClassName('mux-button');                     if (muxBtns != null &amp;&amp; muxBtns != 'undefined') {                         if (muxBtns.length == 0) {                             window.onbeforeunload = promptOnChanges;                         }                     } </code></pre>  <p>The code breaks right after when it tries to retrieve muxBtns for the second time. Strangely enough, it points to an empty line between <pre>var muxBtns = parent.document.getElementsByClassName('mux-button')</pre> and <pre>if (muxBtns != null ...)</pre> that actually doesn't exist in my code.<img src="http://i.stack.imgur.com/H2dCA.png" alt="screenshot from debugger console"></p>  <p>EDIT: Ok, issue was with getElementsByClassName function, IE7 didn't want to access it from its parent window. I had to resort to the natively supported document.getElementById(), after that IE7 had no problem calling it from its parent window. </p>