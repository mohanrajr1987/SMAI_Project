<p>I have the following XML data structure:</p>  <pre><code>&lt;root&gt;     &lt;info&gt;       &lt;creationDate&gt;2015-03-11 11:45:49&lt;/creationDate&gt;     &lt;/info&gt;     &lt;promotions&gt;       &lt;promotion&gt;         &lt;header&gt;           &lt;id&gt;1&lt;/id&gt;           &lt;name&gt;Name 1&lt;/name&gt;         &lt;/header&gt;         &lt;positions&gt;               &lt;position&gt;                 &lt;id&gt;1&lt;/id&gt;                 &lt;name&gt;Some position name 1&lt;/name&gt;               &lt;/position&gt;               &lt;position&gt;                 &lt;id&gt;2&lt;/id&gt;                 &lt;name&gt;Some position name 2&lt;/name&gt;               &lt;/position&gt;           &lt;/position&gt;         &lt;/positions&gt;       &lt;/promotion&gt;       &lt;promotion&gt;         &lt;header&gt;           &lt;id&gt;2&lt;/id&gt;           &lt;name&gt;Name 2&lt;/name&gt;         &lt;/header&gt;         &lt;positions&gt;           &lt;position&gt;             &lt;id&gt;3&lt;/id&gt;             &lt;name&gt;Some position name 3&lt;/name&gt;           &lt;/position&gt;         &lt;/positions&gt;       &lt;/promotion&gt;     &lt;/promotions&gt;   &lt;/root&gt; </code></pre>  <p>Which is used as primary data source for my template like this:</p>  <pre><code>&lt;xsl:template match="root"&gt; ... </code></pre>  <p>I need to filter the above by <strong>"filter.xml" file</strong>, containing promotion Id's to filter out, and it needs to work on <strong>IE7</strong> . Is something like this possible? </p>  <p>For starters I tried to find a way to add filter in <strong>xsl:apply-templates select</strong> statement, so that <strong>only promotion with Id=2 will be processed by template</strong> but failed - is it possible to write Xpath that will say:</p>  <p>"Give me everything from root node but promotions only with Id = 2" ?</p>  <p>Thanks.</p>  <p>EDIT1:</p>  <p>Sorry about the namespace - it shouldn't be there in the first place. As for the filter.xml - it is not clearly defined yet - for now, I'm using the following:</p>  <pre><code>&lt;usedUpPromotions&gt;   &lt;header&gt;     &lt;promotionId&gt;       1     &lt;/promotionId&gt;   &lt;/header&gt;   &lt;header&gt;     &lt;promotionId&gt;       2     &lt;/promotionId&gt;   &lt;/header&gt;   &lt;header&gt;     &lt;promotionId&gt;       3     &lt;/promotionId&gt;   &lt;/header&gt; &lt;/usedUpPromotions&gt; </code></pre>  <p>I think of using something like:</p>  <pre><code>&lt;xsl:apply-templates select="root[hereIsMyWhereId != (document('Load externalXmlHere')/select/IdtoFilterOut)"/&gt; </code></pre>  <p>But I can't seem to find a way to filter out data that way...</p>  <p>EDIT2:</p>  <p>I'll try to explain using code as example - let's assume for a moment that we have the following:</p>  <p><code>XmlData initialXmlData;</code> &lt;- this is  our XML data before filtering</p>  <p><code>XmlData filter;</code> -&lt; this contains the filter.xml data</p>  <pre><code>Html GenerateHtmlFromTemplate(XmlData initialXmlData) - this is my Xslt template { ...some precessing here } </code></pre>  <p>I would like to modify my template to achieve the following:</p>  <pre><code>Html GenerateHtmlFromTemplate(XmlData initialXmlData, XmlData filter)  { XmlData filteredData = data.FilterBy(filter); ...same processing here as above, but use 'filteredData', instead of 'initialXmlData' } </code></pre>  <p>I hope it's more clear now :) - the main problem, it would seem is that the Id element, I want to filter by, is inside array variable, so I cannot simply use:</p>  <p></p>  <p>in my primary template - instead I bypassed the problem, by filtering on for-each loop later on but I would still like to know if it is possible to simply tell the template "from now on use filtered data, instead of original".</p>  <p>Edit3:</p>  <p>@michael.hor257k - to answer your question, I have modified templates you provided:</p>  <p>Template.xml:</p>  <pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt; &lt;?xml-stylesheet type="text/xsl" href="#"?&gt; &lt;xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ksx="http://www.test.com/test" xmlns:ds="http://www.w3.org/2000/09/xmldsig#"&gt; &lt;xsl:output encoding="utf-8" indent="no" method="html"/&gt;  &lt;root xmlns="http://www.test.com/test"&gt;   &lt;info&gt;     &lt;creationDate&gt;2015-03-11 11:45:49&lt;/creationDate&gt;   &lt;/info&gt;   &lt;promotions&gt;     &lt;promotion&gt;       &lt;header&gt;         &lt;id atr="tre"&gt;1&lt;/id&gt;         &lt;name&gt;Promotion 1&lt;/name&gt;       &lt;/header&gt;       &lt;positions&gt;         &lt;position&gt;           &lt;id&gt;1&lt;/id&gt;           &lt;name&gt;Position 1a&lt;/name&gt;         &lt;/position&gt;         &lt;position&gt;           &lt;id&gt;2&lt;/id&gt;           &lt;name&gt;Position 1b&lt;/name&gt;         &lt;/position&gt;       &lt;/positions&gt;     &lt;/promotion&gt;     &lt;promotion&gt;       &lt;header&gt;         &lt;id&gt;2&lt;/id&gt;         &lt;name&gt;Promotion 2&lt;/name&gt;       &lt;/header&gt;       &lt;positions&gt;         &lt;position&gt;           &lt;id&gt;3&lt;/id&gt;           &lt;name&gt;Position 2a&lt;/name&gt;         &lt;/position&gt;       &lt;/positions&gt;     &lt;/promotion&gt;   &lt;/promotions&gt; &lt;/root&gt;  &lt;xsl:param name="new-path" select="'new.xml'"/&gt; &lt;xsl:variable name="new-promotions" select="document($new-path)/newPromotions/promotion" /&gt;    &lt;!-- identity transform --&gt; &lt;xsl:template match="@*|node()"&gt;     &lt;xsl:copy&gt;         &lt;xsl:apply-templates select="@*|node()"/&gt;     &lt;/xsl:copy&gt; &lt;/xsl:template&gt;  &lt;xsl:template match="ksx:root"&gt;     &lt;xsl:copy&gt;         &lt;xsl:apply-templates select="ksx:promotions/ksx:promotion[not(ksx:header/ksx:id=$new-promotions/header/id)]"/&gt;         &lt;xsl:apply-templates select="$new-promotions"/&gt;     &lt;/xsl:copy&gt; &lt;/xsl:template&gt;  &lt;/xsl:stylesheet&gt; </code></pre>  <p>new.xml:</p>  <pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt; &lt;newPromotions&gt;     &lt;promotion&gt;       &lt;header&gt;         &lt;id&gt;2&lt;/id&gt;         &lt;name&gt;New Promotion 2&lt;/name&gt;       &lt;/header&gt;       &lt;positions&gt;         &lt;position&gt;           &lt;id&gt;4&lt;/id&gt;           &lt;name&gt;New Position 2A&lt;/name&gt;         &lt;/position&gt;       &lt;/positions&gt;     &lt;/promotion&gt;     &lt;promotion&gt;       &lt;header&gt;         &lt;id&gt;3&lt;/id&gt;         &lt;name&gt;New Promotion 3&lt;/name&gt;       &lt;/header&gt;       &lt;positions&gt;         &lt;position&gt;           &lt;id&gt;5&lt;/id&gt;           &lt;name&gt;New Position 3A&lt;/name&gt;         &lt;/position&gt;       &lt;/positions&gt;     &lt;/promotion&gt; &lt;/newPromotions&gt; </code></pre>  <p>If you save those, and open template.xml in Chrome it will work nicely - what I wanted however was to filter out data <strong>outside</strong> template node:</p>  <pre><code>&lt;xsl:template match="ksx:root"&gt; </code></pre>  <p>So, I tried this:</p>  <pre><code>&lt;xsl:template match="ksx:root[ksx:promotion/ksx:header/ksx:id=1]"&gt; </code></pre>  <p>And I expected to get all data from <strong>root</strong> but with promotions filtered to those with Id = 1 - but it gave all data and no errors, now I noticed that this:</p>  <pre><code>&lt;xsl:template match="ksx:root[ksx:promotions/ksx:promotion/ksx:header/ksx:id=$new-promotions/header/id]"&gt; </code></pre>  <p>causes an error "Variables cannot be used within this expression" - so I guess, what I want to do is probably impossible from outside the template node...?</p>  <p>Sorry for the confusion - I hope now it is more clear. I simply wanted to treat template node as a method and "pass" filtered data to it, instead of filtering the data inside of it.</p>  <p>Edit4:</p>  <p>In my specific case, I have large "root" dataset of promotions, and small, external XML file that contains promotion Id's to hide during processing. So in my case filtering would mean: "Take everything from root element, but filter promotions so only those which Ids are NOT in the external file, will be processed". So if I have:</p>  <pre><code>&lt;root xmlns="http://www.test.com/test"&gt;   &lt;info&gt;     &lt;creationDate&gt;2015-03-11 11:45:49&lt;/creationDate&gt;   &lt;/info&gt;   &lt;someData1&gt;Some data 1&lt;/someData1&gt;   &lt;someData2&gt;Some data 2&lt;/someData2&gt;   &lt;someData3&gt;Some data 3&lt;/someData3&gt;   &lt;promotions&gt;     &lt;promotion&gt;       &lt;header&gt;         &lt;id&gt;1&lt;/id&gt;         &lt;name&gt;Promotion 1&lt;/name&gt;       &lt;/header&gt;       &lt;positions&gt;         &lt;position&gt;           &lt;id&gt;1&lt;/id&gt;           &lt;name&gt;Position 1a&lt;/name&gt;         &lt;/position&gt;         &lt;position&gt;           &lt;id&gt;2&lt;/id&gt;           &lt;name&gt;Position 1b&lt;/name&gt;         &lt;/position&gt;       &lt;/positions&gt;     &lt;/promotion&gt;     &lt;promotion&gt;       &lt;header&gt;         &lt;id&gt;2&lt;/id&gt;         &lt;name&gt;Promotion 2&lt;/name&gt;       &lt;/header&gt;       &lt;positions&gt;         &lt;position&gt;           &lt;id&gt;3&lt;/id&gt;           &lt;name&gt;Position 2a&lt;/name&gt;         &lt;/position&gt;       &lt;/positions&gt;     &lt;/promotion&gt;     &lt;promotion&gt;       &lt;header&gt;         &lt;id&gt;3&lt;/id&gt;         &lt;name&gt;Promotion 3&lt;/name&gt;       &lt;/header&gt;       &lt;positions&gt;         &lt;position&gt;           &lt;id&gt;4&lt;/id&gt;           &lt;name&gt;Position 3a&lt;/name&gt;         &lt;/position&gt;       &lt;/positions&gt;     &lt;/promotion&gt;   &lt;/promotions&gt; &lt;/root&gt; </code></pre>  <p>And filter by:</p>  <pre><code>&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;usedUpPromotions&gt;     &lt;id&gt;1&lt;/id&gt;     &lt;id&gt;2&lt;/id&gt; &lt;/usedUpPromotions&gt; </code></pre>  <p>Then I would expect to get:</p>  <pre><code>&lt;root xmlns="http://www.test.com/test"&gt;   &lt;info&gt;     &lt;creationDate&gt;2015-03-11 11:45:49&lt;/creationDate&gt;   &lt;/info&gt;   &lt;someData1&gt;Some data 1&lt;/someData1&gt;   &lt;someData2&gt;Some data 2&lt;/someData2&gt;   &lt;someData3&gt;Some data 3&lt;/someData3&gt;   &lt;promotions&gt;     &lt;promotion&gt;       &lt;header&gt;         &lt;id&gt;3&lt;/id&gt;         &lt;name&gt;Promotion 3&lt;/name&gt;       &lt;/header&gt;       &lt;positions&gt;         &lt;position&gt;           &lt;id&gt;4&lt;/id&gt;           &lt;name&gt;Position 3a&lt;/name&gt;         &lt;/position&gt;       &lt;/positions&gt;     &lt;/promotion&gt;   &lt;/promotions&gt; &lt;/root&gt; </code></pre>