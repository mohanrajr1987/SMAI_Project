<p>I want to write an UNIX program that creates <code>N</code> child processes, so that the first process creates one child process, then this child creates only one process that is its child, then the child of the child creates another child etc. Here's my code:</p>  <pre><code>#include &lt;unistd.h&gt; #include &lt;stdio.h&gt; #include &lt;stdlib.h&gt; int main() {     int N=3;     int i=0;      printf("Creating %d children\n", N);     printf("PARENT PROCESS\nMy pid is:%d \n",getpid() );     for(i=0;i&lt;N;i++)     {         pid_t pid=fork();         if(pid &lt; 0)         {              perror("Fork error\n");              return 1;           }         else if (pid==0) /* child */         {             printf("CHILD My pid is:%d  my parent pid is %d\n",getpid(), getppid() );         }         else /* parrent */         {              exit(0);         }      }     return 0; } </code></pre>  <p>The output that I expect is in the form:</p>  <pre><code>Creating 3 children PARENT PROCESS My pid is 1234 CHILD My pid is 4567 my parent pid is 1234 CHILD My pid is 3528 my parent pid is 4567 CHILD My pid is 5735 my parent pid is 3528 </code></pre>  <p>The output I get in the terminal is </p>  <pre><code>Creating 3 children PARENT PROCESS My pid is:564 CHILD My pid is:5036  my parent pid is 564  User@User-PC ~ $ CHILD My pid is:4804  my parent pid is 1 CHILD My pid is:6412  my parent pid is 4804 </code></pre>  <p>The problem is that the program doesn't seem to terminate. I should use <code>Ctrl+C</code> to get out of the terminal, which is not normal. Can you help me to fix this issue?</p>