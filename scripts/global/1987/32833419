<h1>Background</h1>  <p>I am trying to list out what happens when i run a linux executable ( in ELF ). </p>  <ol> <li>I run the command <code>./myelf</code> in my shell ( Bash )</li> <li>The bash process parses my input, realizes i am trying to execute the program <code>myelf</code> in the current directory. Calls a <code>fork</code> and <code>execve</code> with the file as an argument. This creates a new process, and replaces the forked process's text segments( and a few other segments ) with <code>myelf</code>'s relevant sections.</li> </ol>  <p>The kernel keeps a book keeping structure for each process which contains relevant fields for that process. The page table is one such field. There would also be a mapping between certain memory areas and files mapped to it. eg: The <code>myelf</code> code segment mapped to memory 0x1000.  These memory areas/pages are not immediately loaded into the memory, but only when they are accessed first and a page fault for that page occurs.</p>  <h1>Questions</h1>  <ol> <li>Where/How is the page table populated?</li> <li>Where/How is the VMA file map for the process populated?</li> <li>What exactly happens when the page fault occurs? </li> </ol>