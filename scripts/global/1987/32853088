<p><strong>Priority inversion</strong> is a problem which can occur during scheduling of threads/processes, due to priories associated with them.</p>  <blockquote>   <p>Priority inversion is a problematic scenario in scheduling in which a   high priority task is indirectly preempted by a medium priority task   effectively "inverting" the relative priorities of the two tasks - <a href="https://en.wikipedia.org/wiki/Priority_inversion" rel="nofollow">Wikipedia</a></p> </blockquote>  <p>I wonder, can priority inversion happen in Android, as we know Android provide different <strong>processes</strong> with different priorities, <a href="http://stackoverflow.com/questions/7931032/android-process-scheduling">see this post</a>. Also we can create multiple <strong>threads</strong> (in activities and services) with different priorities, how they fit in this scenario? I saw an article which talks about <a href="http://www.androiddesignpatterns.com/2014/01/thread-scheduling-in-android.html" rel="nofollow">Thread Scheduling in Android</a>. If priority inversion has happened, how can we detect and avoid it?</p>  <p>When I was looking for answers to this question, I found <a href="https://source.android.com/devices/audio/avoiding_pi.html" rel="nofollow">this</a> page by Android, which tells us how to avoid priority inversion in context of Android's audio system.</p>