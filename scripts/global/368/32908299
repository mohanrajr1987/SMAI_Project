<p>I'm currently writing a small program in C++ (on a Mac, and with some C code in it) and need to retrieve binary data from a socket (which works well), but I also need to cut off the HTTP header.</p>  <p>So basically, I connect to a server, send a HTTP GET request, and get a HTTP 200 standard header followed by the binary data. I do only need the binary data and the Content-Length: field of the header.</p>  <p>My function so far:</p>  <pre><code>void read_binary_data(ssize_t len,long long remain_data, FILE *fd, int sock){      char buffer[BUFSIZ];      int checker = 0;     int curr_position = 0;      while (((len = recv(sock, buffer, BUFSIZ, 0)) &gt; 0) &amp;&amp; (remain_data &gt; 0)){          // if(checker == 4) =&gt; http header until curr_position+1, data starts at curr_position+2         for(char *pointer = buffer; curr_position &lt;= len ; pointer++){              if(*pointer == '\r' || *pointer == '\n'){                 checker++;             }             else{                 checker = 0;             }              if(checker == 4){                 break;             }             curr_position++;         }         fwrite(buffer, sizeof(char), len, fd);         remain_data -= len;     } } </code></pre>  <p>I would initially pass remain_data = 999 just to get into the while loop (and yes I need some error handling there but that's not the problem at the moment).</p>  <p>Now the <code>for()</code> loop should check for the '\r\n\r\n' at the end of a HTTP header; would I get it like that?</p>  <p>And then, how could I copy the binary data from buffer to another buffer to write it with fwrite() to a file? (without the HTTP header)</p>  <p>That would be sufficient for me, but I thought I could also try to "rerun" this function with the extracted 'Content-Length:' information to fill remain_data.. guess that's not needed anymore after the while() loop is completed.</p>  <p>But then again, can the <code>recv()</code> function return &lt;= 0 even if there's still data left to read?</p>  <p><strong>So to conclude:</strong></p>  <ul> <li>is my <code>for()</code> loop correct?</li> <li>how can I cut the HTTP header from buffer?</li> <li>can I safely delete the '&amp;&amp; (remain_data > 0)'?</li> </ul>