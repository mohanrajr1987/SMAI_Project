<p>I need to embed a Flash .swf on the page and am unable use the normal way of setting the src or data attribute to the swf url - don't ask :s. So, I'm doing an ajax request for the swf, converting to a blob and then generating a blob url which I set as the swf src. Then I realised that as I'm building with Grunt, there may be a way to just write the swf file into the code as a blob in a var, and avoid the ajax request completely. Here's the code with the ajax request:</p>  <pre><code>function createFlashMovie(blobUrl){      var obj = document.createElement("object");      obj.setAttribute("width", "800");      obj.setAttribute("height", "600");      obj.setAttribute("type", "application/x-shockwave-flash");      obj.setAttribute("data", blobUrl);      document.body.appendChild(obj); }  function onAjaxLoad(oResponse){     blobUrl = window.URL.createObjectURL(oResponse);     createFlashMovie(blobUrl); };  //do the xhr request for a.swf var xhr = new XMLHttpRequest(); xhr.onreadystatechange = function(){     if (this.readyState == 4 &amp;&amp; this.status == 200){         onAjaxLoad(this.response);     } } xhr.open('GET', '//theserver.com/a.swf'); xhr.responseType = 'blob'; xhr.send();  </code></pre>  <p>...but I'm sure it must be possible to have something like this which is replaced by grunt to have the blob already available when it runs, and go straight to creating the blob url without the xhr request:</p>  <pre><code>var theBlob = new Blob(["GRUNT_WRITES_THIS_IN_FROM_FILE"], {type: "application/x-shockwave-flash"}); </code></pre>