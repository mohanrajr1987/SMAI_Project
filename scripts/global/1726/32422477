<p>I am in the progress of making a game which uses SDL_TTF and SDL_Image. I have one function called browseinventory which allows you to check out the stats of an item once you hover over it. That's where the memory leak occurs. Baically once you've hovered over an item slot the program check if there's anything in said slot and if there is, Text class objects are set with the item's parameters and then rendered.<br> I am pretty sure that the fault lies within the Text class, as memory usage rapidly increases once I've hovered over an item.</p>  <p>Text class:   </p>  <pre><code>class Text { public:     Text() {w = 0; h = 0; saying = ""; Textthing = NULL;}     ~Text(){destroy();}     void destroy(){SDL_DestroyTexture(Textthing); Textthing = 0; saying = "", w = 0, h = 0;}     void render(int, int, int, SDL_Renderer*); void settext(string, SDL_Color); void rendertest(int, int, SDL_Renderer*); int rows;  private:     string saying;     SDL_Texture *Textthing;     int w, h;     unsigned int flag1 = 0, flag2, loops = 0;     string saying1;     unsigned int counter;     bool spaceflag = 0; };   </code></pre>  <p>render():  </p>  <pre><code>void Text::render(int x, int y, int maxchars = 100, SDL_Renderer *Temp = Saviour) {     rows = 0;     flag1 = 0, flag2 = maxchars, loops = 0;     int increment = maxchars;     if (resolution == "800x600")         {             flag2 = maxchars*0.8;             increment = maxchars*0.8;         }     spaceflag = 0;     do {     spaceflag = 0;     for (counter = flag1; counter &lt; flag2 &amp;&amp; counter &lt; saying.length(); counter++)         {             if (counter &gt; flag2-10 &amp;&amp; saying[counter] == ' ')                 {                     spaceflag = 1;                     break;                 }             saying1 += saying[counter];         }      asdfgfa1.settext(saying1);     asdfgfa1.rendertest(x, y + loops*(SCREEN_HEIGHT/19), Temp);     saying1 = "";     loops++;     rows++;     if (flag2 &gt; saying.length())         break;     if (spaceflag == 0)     {         flag1 = flag2;         flag2 += increment;     }     else     {         flag1 = counter;         flag2 = counter + increment;     } }while (1); asdfgfa1.destroy(); SDL_DestroyTexture(Textthing); Textthing = 0; </code></pre>  <p>}  </p>  <p>setText():  </p>  <pre><code>void Text::settext(string stuff, SDL_Color Colour = {255, 255, 255}) {     saying = stuff;     SDL_Surface *Surf = TTF_RenderText_Solid(Arial, stuff.c_str(), Colour);     w = Surf-&gt;w;     h = Surf-&gt;h;     Textthing = SDL_CreateTextureFromSurface(Saviour, Surf);     SDL_FreeSurface(Surf);     Surf = 0; } </code></pre>