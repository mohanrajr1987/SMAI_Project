<p>I have a simple <a href="https://en.wikipedia.org/wiki/ROT13" rel="nofollow">ROT13</a> method that encodes or decodes a string.</p>  <pre><code>+ (NSString *)ROT13encodeString:(NSString *)aString {      if (!aString) {         return nil;     }      // Find text between brackets     NSCharacterSet *delimiters = [NSCharacterSet characterSetWithCharactersInString:@"[]"];     NSArray *splitString = [aString componentsSeparatedByCharactersInSet:delimiters];     // ???      NSString *newString;     unsigned length;     unichar *buf;     unsigned i;      length = [aString length];     buf = malloc( (length + 1) * sizeof(unichar) );     [aString getCharacters:buf];     buf[length] = (unichar)0; // not really needed....     for (i = 0; i &lt; length; i++) {         if (buf[i] &gt;= (unichar)'a' &amp;&amp; buf[i] &lt;= (unichar) 'z') {             buf[i] += 13;             if (buf[i] &gt; 'z') buf[i] -= 26;         } else if (buf[i] &gt;= (unichar)'A' &amp;&amp; buf[i] &lt;= (unichar) 'Z') {             buf[i] += 13;             if (buf[i] &gt; 'Z') buf[i] -= 26;         }     }     newString = [NSString stringWithCharacters:buf length:length];     free(buf);     return newString;  } </code></pre>  <p>However, within the text to encode, there are "safe" words that are placed within brackets []. The words, including the brackets should never be encoded, they always need to be in their non-encoded state.</p>  <p>I figured I could pull out all occururances of the bracketed text, but not sure how it would help:</p>  <pre><code>NSCharacterSet *delimiters = [NSCharacterSet characterSetWithCharactersInString:@"[]"]; NSArray *splitString = [aString componentsSeparatedByCharactersInSet:delimiters]; </code></pre>  <p><strong>How could I modify my current method to include this?</strong></p>