<p>Well, to get phones property with <code>ABAddressBook</code>, I use a loop.</p>  <p><strong>EDIT : code I've tried :</strong></p>  <pre><code>    ABMultiValueRef phones = ABRecordCopyValue(contactPerson, kABPersonPhoneProperty);                          for (NSUInteger j = 0; j &lt; ABMultiValueGetCount(phones); j++) {              NSMutableString *phone = [CFBridgingRelease(ABMultiValueCopyValueAtIndex(phones, j)) mutableCopy]; if ([phone hasPrefix:@"06"] || [phone hasPrefix:@"07"]){     person.number = phone;     } </code></pre>  <p>But I don't think this is the best option..?</p>  <p>Maybe something like : </p>  <pre><code>if (ABMultiValueRef hasprefix...06 ||  07){ person.number = phones } </code></pre>  <p>When the contact has multiple value of phone numbers, I can count it with <code>ABMultiValueGetCount(phones)</code>.</p>  <p>Well, now take an example :</p>  <p>The contact « Peter » has got 5 phone numbers in <code>ABAddressBook</code> (<code>NSLog</code> phones): </p>  <p>02 35 00 00 00</p>  <p>07 00 00 00 00</p>  <p>+1(919)949-8234</p>  <p>06 00 00 00 00</p>  <p>9009498923</p>  <p>I would like to sort these numbers, and store only ONE in <code>NSString</code> :</p>  <p>if number begins by 07 —> TAKE IT. (assign to <code>NSString</code>)</p>  <p>if number begins by 06 —> TAKE IT. (assign to <code>NSString</code>)</p>  <p>if other number —> Don’t assign.</p>  <p>if they are two phone number : one with 06, one with 07, take the last registered in <code>ABAddressBook</code> (or if this not possible/too complicated, take the number beginning by 07).</p>  <p>I would like to make this loop for every contact in <code>ABAddressBook</code>. and every contact has only ONE number (or 0 if numbers don't begin by 06 or 07).</p>  <p>In my example :</p>  <p>Peter has got this number : 07 00 00 00 00</p>