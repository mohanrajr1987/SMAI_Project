<pre><code>import java.util.Scanner; public class fibThread { @SuppressWarnings("resource")  public static void main(String[] args) {     // TODO Auto-generated method stub      Scanner fib = new Scanner(System.in);      System.out.print("Enter the Length of the Fibonacci Series :");      int num = fib.nextInt();      Runnable r = new Fib("Result", num);     new Thread(r).start();      try{         Thread.sleep(10000);     }      catch (InterruptedException e) {          System.out.println("Thread interrupted.");      }      int[] result =((Fib) r).getResult();     System.out.print("The Fibonacci Series is :" + result);  } } class Fib implements Runnable{ private int num; int f0=0, f1=1,fn=0;  int arr[] = new int[num];  public Fib(String string, int num) {     // TODO Auto-generated constructor stub     this.num = num; }  @Override public void run() {     for(int i=0; i&lt;num; i++){         fn = f0 + f1;         f0 = f1;         f1 = fn;         arr[i] = fn;     } }  public int[] getResult(){      return arr; } } </code></pre>  <p>i was given with a Question and I wrote the above code</p>  <p>write a multithreaded program that generates the fibonacci sequence . This program should work as follows: On the command line, the user will enter the number of fibonacci numbersthat the program is to generate. The program will then create a seperate thread that will generate the fibonacci numbers, placing the sequence in data that can be shared by the threads(an array is probably the most convenient data structure). When the thread finishes execution, the parent thread will output the sequence generated by the child thread.</p>  <p>please help me to solve it....</p>