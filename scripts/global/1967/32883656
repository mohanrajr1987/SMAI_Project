<p>I have created a small jQuery plugin in order to detect when all images of a query selector are loaded. This plugin will take into account for  DOM element with src attribute and also will take into account background-image css property.</p>  <p>However, it seems that sometimes, images are not loaded and the script never finish. I don't know if it's a cache issue or something else but I can't figure out how to make it work correctly.</p>  <p>Any suggestion we be very helpful</p>  <p>Here the jQuery plugin</p>  <pre><code>(function($) {      "use strict";      var img_arr = [];      $.fn.images_loaded = function() {          // current element to search in         var el = $(this);          // extend the options to complete:         var options = $.extend({             complete: function() {}         }, arguments[0] || {});          // init global var         var count = 0,             preload = [],             img_url;          // search all images inside current selector (for src attr or background-image css)         el.find('*').filter(function() {             img_url = $(this).css('background-image');             img_url = /^url\((['"]?)(.*)\1\)$/.exec(img_url);             img_url = img_url ? img_url[2] : null;             img_url = (!img_url &amp;&amp; $(this).is('img')) ? $(this).attr('src') : img_url;             img_url = (img_url &amp;&amp; img_url.match(/\.(jpg|jpeg|png|bmp|gif|tif|tiff|jif|jfif)/g)) ? img_url : null;             if (img_url &amp;&amp; $.inArray(img_url, img_arr) == -1) {                 preload.push(img_url);                 img_arr.push(img_url);                       }         });          // load images         var images = [];         for (var i = 0; i &lt; preload.length; i++) {             images[i] = new Image();             images[i].onload = imgLoaded;             images[i].onerror = imgLoaded;             images[i].src = preload[i];         }         if (!preload.length) {             options.complete.call(el);             return false;         }          // on load count and compare to array         function imgLoaded() {             count++;             if(count &gt;= preload.length){                 options.complete.call(el);                 return false;             }         }      };  })(jQuery); </code></pre>  <p>And here the call to plugin</p>  <pre><code>$imageSelector.the_grid_images_loaded({     complete: function() {} }); </code></pre>