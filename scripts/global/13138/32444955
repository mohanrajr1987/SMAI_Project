<p>I have a very strange and rare bug in my simple 2d game using Java Swing. The game is a sort of flappybird, the player can move up and down, that works fine. My collision didn't work so I printed out the player y coordinate. The problem is: Every time after the player y was printed(which was correct), Java printed the coordinate 357(which is not correct!). It says that the player coordinate was 357 but that wasn't because I could still move the player correctly. This is an example of the output when I tried to print the player y coordinate:</p>  <pre><code>245 357 248 357 251 357 254 357 257 357 260 357 263 357 266 357 269 357 272 357 275 357 278 357 </code></pre>  <p>I don't understand why 357 is printed every time(I never set a variable or something to the value of 357).</p>  <p>This is my code:</p>  <pre><code>import javax.swing.*; import java.awt.*; import java.awt.event.*; import java.util.Random;  public class GameClass extends JPanel implements ActionListener, KeyListener, MouseListener{      //OBJECTS     Text text = new Text();     openImages open_img = new openImages();     Random ran = new Random();      //VARIABLES     static final long serialVersionUID = 1L;     final int WIDTH = 800;     final int HEIGHT = 600;     int goatx = WIDTH/2;     int goaty = 150;     int goatspeed = 0;     int ex = 800;     int ey = 0;     int ey2 = 475;     int score = 0;     int tempy;     int mapSpeed = 5;     int ranHeight = ran.nextInt(100)+50;     int ranHeight2 = ran.nextInt(100)+50;     boolean up = false;     boolean flying = true;     boolean powerup = false;     int powx = 1000;     int powy = 250;     int powspeed = 0;     Color rancolor = new Color(ran.nextInt(256),ran.nextInt(256),ran.nextInt(256));      //FPS SETTER AND KEYLISTENERS     public GameClass(){         Timer time = new Timer(20, this);         time.start();         this.addKeyListener(this);         this.setFocusable(true);         open_img.openImage();     }      public void update(){         Collision();         powx -= powspeed;         ex-=mapSpeed;         score++;         goatx += goatspeed;          if(score % 100==0){             mapSpeed++;         }          if(up){             if(goaty &gt; (tempy-25)){                 goaty -= 5;              }else{                 up = false;             }         }else             if(goaty &lt; 355)                 goaty += 3;      }      public void print(String msg){         System.out.println(msg);     }      public void powerup(Graphics g ){         if(powerup){             g.setColor(rancolor);             g.fillOval(powx, powy, 50, 50);             powspeed = 5;         }     }      public void Collision(){         print(""+goaty);         //COLLISION WITH ENEMY         if(goaty &lt;= (ey+ranHeight) || (goaty+open_img.goat.getHeight(null) &gt;= (ey2-ranHeight2))){         }     }      public void Enemy(Graphics g){          for(int i=0;i&lt;300000;i+=300){              if(score % 100==0){                 powerup = true;                 rancolor = new Color(ran.nextInt(256),ran.nextInt(256),ran.nextInt(256));                 ranHeight = ran.nextInt(100)+50;                 ranHeight2 = ran.nextInt(100)+50;             }              g.setColor(rancolor);             g.fillRect(ex+i+50,ey,100,ranHeight);             g.fillRect(ex+i,ey2,100,-ranHeight2);         }     }      //ALL TEH DRAWING     public void paintComponent(Graphics g){         //MAP         g.setColor(Color.CYAN);         g.fillRect(0,0,WIDTH,HEIGHT);         g.setColor(Color.ORANGE);         g.fillRect(0, HEIGHT-100, WIDTH, 100);         g.setColor(Color.GREEN);         g.fillRect(0, HEIGHT-125, WIDTH, 25);         g.setColor(Color.BLACK);         g.drawLine(0, HEIGHT-125, 800, HEIGHT-125);         g.setColor(Color.RED);          //PLAYER &amp; POWERUPS &amp; ENEMIES         g.drawImage(open_img.goat, goatx, goaty,null);         powerup(g);         Enemy(g);         g.setColor(Color.YELLOW);         text.text(g,"Score: "+score,300,50,50);         g.dispose();     }      //THIS IS EXECUTED EVERYTIME     public void actionPerformed(ActionEvent e){         update();         repaint();     }      //KEY DETECTION     public void keyPressed(KeyEvent e){         if(e.getKeyCode() == KeyEvent.VK_LEFT){             goatspeed = -5;         }          if(e.getKeyCode() == KeyEvent.VK_RIGHT){             goatspeed = 5;         }          if(e.getKeyCode() == KeyEvent.VK_SPACE){             up = true;             tempy = goaty;         }     }      public void keyReleased(KeyEvent e){         if(e.getKeyCode() == KeyEvent.VK_LEFT){             goatspeed = 0;         }          if(e.getKeyCode() == KeyEvent.VK_RIGHT){             goatspeed = 0;         }     }      //SOME STUFF THAT YOU HAVE TO IGNORE LEL        public void keyTyped(KeyEvent e){}     public void mouseEntered(MouseEvent e) {}     public void mouseExited(MouseEvent e) {}     public void mousePressed(MouseEvent e) {}     public void mouseReleased(MouseEvent e) {}     public void mouseClicked(MouseEvent e) {} } </code></pre>  <p>I am sorry for bad English or unclear question, it is very hard to explain :( Please help me, I don't know where this bug came from.</p>  <p>PS. The reason why I need to fix this bug, is because of this the collision detection doesn't work. Thanks in advance!</p>