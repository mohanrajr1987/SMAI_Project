<p>I am trying to make a JFrame display a different JPanel when a specific tab is selected.  I have tried adding code to make it add the new panel based on which tab index is selected.  </p>  <p>Where am I going wrong with this?  What do I need to add to make it work?  Thanks.</p>  <p>EDIT</p>  <p>Here is my solved SSCCE:</p>  <pre><code>import javax.swing.*; import java.awt.*; import java.awt.geom.Ellipse2D; import java.awt.geom.Rectangle2D; import java.util.ArrayList;  public class MainPanel {      private static JTabbedPane tabbedPane = new JTabbedPane();     private static JFrame frame = new JFrame("Testing");      public static void main(String[] args) {          EventQueue.invokeLater(MainPanel::createAndShowGUI);     }      protected static void createAndShowGUI()     {         DrawGraphics drawGraphics = new DrawGraphics();         DrawDifferentGraphics drawDifferentGraphics = new DrawDifferentGraphics();         frame.setLayout(new BorderLayout());         frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);         frame.add(tabbedPane, BorderLayout.WEST);          tabbedPane.addTab("CFG", null);         tabbedPane.addTab("CNX", null);          frame.add(drawGraphics);          tabbedPane.addChangeListener(e -&gt; {              if (tabbedPane.getSelectedIndex() == 0) {                  frame.remove(drawDifferentGraphics);                 frame.add(drawGraphics);                 frame.validate();                 frame.repaint();              }              if (tabbedPane.getSelectedIndex() == 1) {                  frame.remove(drawGraphics);                 frame.add(drawDifferentGraphics);                 frame.validate();                 frame.repaint();              }});           frame.setLocationByPlatform(true);         frame.setSize(400, 400);         frame.setVisible(true);     } }  class DrawGraphics extends JPanel {      private ArrayList&lt;Shape&gt; shapes = new ArrayList&lt;Shape&gt;();      public DrawGraphics() {          setLayout(new BorderLayout());          shapes.add(new Ellipse2D.Double(10, 10, 20, 20));         shapes.add(new Ellipse2D.Double(10, 30, 20, 20));         shapes.add(new Ellipse2D.Double(10, 50, 20, 20));         shapes.add(new Ellipse2D.Double(10, 70, 20, 20));     }      @Override     protected void paintComponent(Graphics g)     {         super.paintComponent(g);          Graphics2D g2d = (Graphics2D)g.create();         g2d.setColor(Color.BLUE);          shapes.forEach(g2d::fill);          g2d.dispose();     } }  class DrawDifferentGraphics extends JPanel {      private ArrayList&lt;Shape&gt; shapes = new ArrayList&lt;Shape&gt;();      public DrawDifferentGraphics() {          setLayout(new BorderLayout());          shapes.add(new Rectangle2D.Double(10, 10, 10, 10));         shapes.add(new Rectangle2D.Double(10, 30, 10, 10));         shapes.add(new Rectangle2D.Double(10, 50, 10, 10));         shapes.add(new Rectangle2D.Double(10, 70, 10, 10));     }      @Override     protected void paintComponent(Graphics g) {         super.paintComponent(g);          Graphics2D g2d = (Graphics2D)g.create();         g2d.setColor(Color.RED);          shapes.forEach(g2d::fill);          g2d.dispose();     } } </code></pre>