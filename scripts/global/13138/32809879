<p>i am exercising some OOP with java.</p>  <p>I just want to write a game with some graphic objects but i want to structure it with some classes.</p>  <p>The overall layout should look like this:</p>  <p>MainClass -> new MainPanel(extends JPanel)->new StartWindow(extends abstract GameWindow which contains the gameloop)</p>  <p>This way i should be able to create StartWindow, Level1Window, Level2Window and so on. My StartWindow should now Draw the Layout for the first level. The StartWindow will create other objects(Player, Enemy and so on) which will later be responsible for drawing themself.</p>  <p>So i want to create something like "every object is responsible to draw itself"</p>  <p>I hope i could make clear how this should work. Problem is, i cant figure out how to delegate down this task.</p>  <p>My Code looks like this at the moment:</p>  <pre><code>public class MainClass extends JFrame implements ActionListener {     //..... other stuff     public MainClass () {         MainPanel mainPanel = new MainPanel();     }     //.... other stuff }   class MainPanel extends JPanel {      private GameWindow currentWindow;      public MainPanel () {         currentWindow = new StartWindow(this);     }      public void paintComponent(Graphics g) {         g.drawRect (10, 10, 200, 200);  // &lt;-- can see on the window     } }   abstract class GameWindow {     // contains game loop and update functions and so on }   public class StartWindow extends GameWindow {      GamePanel _parentWindow;      public StartWindow(GamePanel parentWindow) {         super();         _parentWindow = parentWindow;     }      public void paintComponent(Graphics g) {         //Does not work         g.drawRect (20, 20, 100, 100);       } } </code></pre>  <p>the "_parentWindow" contains the MainPanel, so i should have all the information that is needed to draw on its Panel, i just cant figure out how to do it.</p>  <p>Edit: Minimum example thats working:</p>  <pre><code>import javax.swing.*; import java.awt.*; import java.awt.event.*;  public class MainClass extends JFrame implements ActionListener {  public static void main(String[] args)    {        System.out.println("Program Window1");        MainClass glt = new MainClass();        glt.setVisible(true);    }  //..... other stuff public MainClass () {     super("Fixed Timestep Game Loop Test");     Container cp = getContentPane();     cp.setLayout(new BorderLayout());     JPanel p = new JPanel();     p.setLayout(new GridLayout(1,2));        System.out.println("Program Window2");     MainPanel gamePanel= new MainPanel();      cp.add(gamePanel, BorderLayout.CENTER);     cp.add(p, BorderLayout.SOUTH);     setSize(500, 500); } //.... other stuff  @Override public void actionPerformed(ActionEvent arg0) {     // TODO Auto-generated method stub  } }   class MainPanel extends JPanel {  private GameWindow currentWindow;  public MainPanel () {     currentWindow = new StartWindow(this); }  public void paintComponent(Graphics g) {     g.drawRect (0, 0, 200, 200);  // &lt;-- can see on the window } }   abstract class GameWindow { // contains game loop and update functions and so on }   class StartWindow extends GameWindow {  MainPanel _parentWindow;  public StartWindow(MainPanel parentWindow) {     super();     _parentWindow = parentWindow; }  public void paintComponent(Graphics g) {     //Does not work     g.drawRect (20, 20, 100, 100);   } } </code></pre>