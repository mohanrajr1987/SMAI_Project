<p>I'm working on the interface of my programe and I just recently was able to draw what I want. I have a certain number of rounded rectangle with a number in the middle of each one, but I can't figure out how I can just have those rectangle filled with a certain color and now border line. In addition to that, i would need to to stock each rectangle inside a var to be able to change the color of the rectangle. Here is my code so far:</p>  <pre><code>package game;  import java.awt.Color; import java.awt.Dimension; import java.awt.Font; import java.awt.Graphics; import java.util.LinkedHashMap; import java.util.Map;  import javax.swing.JButton; import javax.swing.JPanel;  public class GameNumView extends JPanel {     //Nombres affiché     String[] Numbers;      public GameNumView(int pWidth, int pHeight)     {         //Change ajuste la grosseur du panel         this.setPreferredSize(new Dimension(pWidth, pHeight));          //Crée le tableau des strings         Numbers = new String[]{};     }      @Override     public void paintComponent(Graphics g)     {         //Repain avec la super class         super.paintComponent(g);          //Calcule les dimensions qui seront utilisé         int rectSpace = 5;         int rectWidth = getWidth()/Numbers.length-rectSpace*2;         int rectHeight = getHeight()-rectSpace*2;         int arcRect = 15;          int fontSize = 60;         int textX = rectWidth/2 - fontSize/4 - rectSpace;         int textY = rectHeight/2 + fontSize/2 - rectSpace;          //Change al font         g.setFont(new Font("TimesRoman", Font.PLAIN, fontSize));          //Dessine un rounded rectangle avec le nombre pour chaque chiffre du tableau         for(int i =0; i &lt; Numbers.length; i++)         {             g.setColor(Color.red);             g.drawRoundRect(rectSpace + i*(rectWidth + rectSpace*2), rectSpace, rectWidth, rectHeight, arcRect, arcRect);             g.setColor(Color.black);              g.drawString(Numbers[i], rectSpace + textX + i*(rectWidth + rectSpace*2), textY + rectSpace);         }     }      public void setNumbers(String[] pNumbers)     {         //Stock les numbres choisis         Numbers = pNumbers;     }      public void changeColor(Color pColor)     {         //Change the background color     } } </code></pre>