<p>I want to add this a GridLayout JPanel to my window, so that I can have another JPanel with more components above it.  My code works if the JPanel was just made into the window, but I can't make it part of a JPanel and add it correctly to the JFrame. Any help would be appreciated.</p>  <pre><code>package com.scrabble.View;  import com.scrabble.Model.Board; import java.awt.Color; import java.util.ArrayList; import javax.swing.JPanel;   /**  *  * @author jeremy.williamson  */ public class BoardWindow extends javax.swing.JFrame {      private ArrayList&lt;javax.swing.JButton&gt; buttonList;     /**      * Creates new form BoardWindow      */     public BoardWindow() {         initComponents();     }      /**      * This method is called from within the constructor to initialize the form.      * WARNING: Do NOT modify this code. The content of this method is always      * regenerated by the Form Editor.      */     @SuppressWarnings("unchecked")     // &lt;editor-fold defaultstate="collapsed" desc="Generated Code"&gt;                               private void initComponents() {          setPreferredSize(new java.awt.Dimension(600, 1000));         setResizable(false);          javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());         getContentPane().setLayout(layout);         layout.setHorizontalGroup(             layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)             .addGap(0, 600, Short.MAX_VALUE)         );         layout.setVerticalGroup(             layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)             .addGap(0, 1000, Short.MAX_VALUE)         );     }// &lt;/editor-fold&gt;                              //create our own game board window based on our board model     public void initCustomComponents(Board board){         boardPanel = new JPanel();          boardPanel.setLayout(new java.awt.GridLayout(0, 15));         boardPanel.setPreferredSize(new java.awt.Dimension(600, 600));          setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);           buttonList = new ArrayList&lt;&gt;();          for(int i = 0; i &lt; board.spaces.size(); i++){             buttonList.add(new javax.swing.JButton());             buttonList.get(i).setText(board.spaces.get(i).getLabel());             if(board.spaces.get(i).getLabel().equalsIgnoreCase("TWS")){                 buttonList.get(i).setBackground(Color.RED);             }else if(board.spaces.get(i).getLabel().equalsIgnoreCase("TLS")){                 buttonList.get(i).setBackground(Color.BLUE);             }else if(board.spaces.get(i).getLabel().equalsIgnoreCase("DWS")){                 buttonList.get(i).setBackground(Color.PINK);             }else if(board.spaces.get(i).getLabel().equalsIgnoreCase("DLS")){                 buttonList.get(i).setBackground(Color.CYAN);             }//end if/else              boardPanel.add(buttonList.get(i));          }//end for         getContentPane().add(boardPanel);          pack();     }//end initCustomComponents        // Variables declaration - do not modify                          // End of variables declaration                        private javax.swing.JPanel boardPanel;  } </code></pre>