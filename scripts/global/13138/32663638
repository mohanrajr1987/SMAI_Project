<p>I'm building an interface for a little game/exercise. In this interface, I got a top section, witch is a JPanel, that takes the width of the window and a certain height. Right under it is an other section (JPanel again) that is suppose to align to the left and be wright under the first section. </p>  <p>I've been struggling to make the interface looks like what I want. I tried two things, and but failed:</p>  <p>The first one is that I have GameView Class that extends JFrame and I create a JPanel for both section and directly add them to the JFrame, but it seems like they just ends up over each other. The black section is the first one and the red is the second one:</p>  <p><a href="http://i.stack.imgur.com/EOb15.jpg" rel="nofollow"><img src="http://i.stack.imgur.com/EOb15.jpg" alt="The result of my first method"></a></p>  <p>The second thing I tried is putting both of those JPanel inside an other JPanel called container, but still don't get what I want. The first section is perfect, but the second should stick to the left and I would like to have no space between the two sections:</p>  <p><a href="http://i.stack.imgur.com/JudwE.jpg" rel="nofollow"><img src="http://i.stack.imgur.com/JudwE.jpg" alt="The result of my second method"></a></p>  <p>How can I stick the second section (the red one) to the left and have no space between the two sections? Here is the code of my class:</p>  <p>package game;</p>  <pre><code>import java.awt.Color;  import javax.swing.GroupLayout; import javax.swing.GroupLayout.Alignment; import javax.swing.JButton; import javax.swing.JCheckBox; import javax.swing.JComponent; import javax.swing.JFrame; import javax.swing.JLabel; import javax.swing.JPanel;      public class GameView extends JFrame //implements MouseListener     {            private GameNumView numberPanel;         private JLabel butLabel;         private JLabel progresLabel;         private JButton nextButton;         private JButton giveUpButton;         private JButton resetButton;         private JCheckBox findMeanCheckBox;         private JCheckBox noiseCheckBox;          public GameView()         {             initUI();         }          public void initUI()         {             setTitle("Sommurai");              setSize(800, 350);              setLocationRelativeTo(null);              butLabel = new JLabel("97");             progresLabel = new JLabel("Somme: 90 (2)");              nextButton = new JButton("NEXT");             giveUpButton = new JButton("GIVE UP");             resetButton = new JButton("RESET");              findMeanCheckBox = new JCheckBox("Find Mean");             noiseCheckBox = new JCheckBox("Noise");              createLayout(butLabel, progresLabel, nextButton, giveUpButton, resetButton, findMeanCheckBox, noiseCheckBox);              setDefaultCloseOperation(EXIT_ON_CLOSE);         }          private void createLayout(JComponent... arg)         {             JPanel container = new JPanel();              numberPanel = new GameNumView(800, 120);              JPanel buttonsPanel = new JPanel();             GroupLayout gl = new GroupLayout(buttonsPanel);             buttonsPanel.setLayout(gl);              gl.setAutoCreateContainerGaps(true);              GroupLayout.SequentialGroup hGroup = gl.createSequentialGroup();              GroupLayout.SequentialGroup vGroup = gl.createSequentialGroup();              hGroup.addGroup(gl.createParallelGroup()                     .addComponent(arg[0])                     .addComponent(arg[1])                     .addComponent(arg[2])                     .addComponent(arg[3])                     .addComponent(arg[4])                     .addComponent(arg[5])                     .addComponent(arg[6]));              gl.setHorizontalGroup(hGroup);              vGroup.addGroup(gl.createParallelGroup(Alignment.BASELINE)                      .addComponent(arg[0]));             vGroup.addGroup(gl.createParallelGroup(Alignment.BASELINE)                      .addComponent(arg[1]));             vGroup.addGroup(gl.createParallelGroup(Alignment.BASELINE)                      .addComponent(arg[2]));             vGroup.addGroup(gl.createParallelGroup(Alignment.BASELINE)                      .addComponent(arg[3]));             vGroup.addGroup(gl.createParallelGroup(Alignment.BASELINE)                      .addComponent(arg[4]));             vGroup.addGroup(gl.createParallelGroup(Alignment.BASELINE)                      .addComponent(arg[5]));             vGroup.addGroup(gl.createParallelGroup(Alignment.BASELINE)                      .addComponent(arg[6]));              gl.setVerticalGroup(vGroup);      buttonsPanel.setBackground(Color.RED);//              container.add(numberPanel);             container.add(buttonsPanel);             add(container);         }     } </code></pre>  <p>GameNumView is an other class that is a JPanel</p>