<p>This is my code which open an image from your folder and shows it in a label. I want to add few button and give various effect to an image when pressed in the different button. Can someone help me to write a program to give different effect(grayscale, sepai,chrome,transfer) to an image. It will be lot to me</p>  <pre><code>import java.awt.Color; import java.awt.Graphics; import java.awt.Graphics2D; import java.awt.Image; import java.awt.Toolkit; import java.awt.event.ActionEvent; import java.awt.event.ActionListener; import java.awt.image.BufferedImage; import java.awt.image.ConvolveOp; import java.awt.image.Kernel; import java.io.File; import javax.swing.ImageIcon; import javax.swing.JButton; import javax.swing.JFileChooser; import javax.swing.JFrame; import javax.swing.JLabel; import javax.swing.filechooser.FileNameExtensionFilter;  public class Work extends JFrame{     JButton button;   JLabel label;  public Work() {     super("select your pic");     button = new JButton("Browse");     button.setBounds(300, 500, 100, 40);     label = new JLabel();     label.setBounds(10,10,670,450);     add(button);     add(label);     seticon();     button.addActionListener(new ActionListener() {          public void actionPerformed(ActionEvent e) {               JFileChooser file = new JFileChooser();     file.setCurrentDirectory(new File(System.getProperty("user.home")));     //FileNameExtensionFilter filter = new FileNameExtensionFilter("*.Images","jpg","gif","png");     FileNameExtensionFilter filter = new FileNameExtensionFilter("*.image", "jpg","gif","png");     file.addChoosableFileFilter(filter);     int result = file.showOpenDialog(null);     if (result == JFileChooser.APPROVE_OPTION){         File selectedFile = file.getSelectedFile();         String path = selectedFile.getAbsolutePath();         label.setIcon(ResizeImage(path));     }     else if (result == JFileChooser.CANCEL_OPTION){         System.out.println("no file select");     }          }     });       setLayout(null);     setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);     setLocationRelativeTo(null);     setSize(700,600);     setLocation(600, 50);     setVisible(true);    } public ImageIcon ResizeImage(String ImagePath) {     ImageIcon MyImage = new ImageIcon(ImagePath);     Image img = MyImage.getImage();     Image newImg = img.getScaledInstance(label.getWidth(),label.getHeight(),Image.SCALE_SMOOTH);     ImageIcon image = new ImageIcon(newImg);     return image;  }      public static void main (String[] args){         new Work();       }      } </code></pre>