<p>(I really just need some MYSQL magic, but I will explain a bit more of what I am doing)</p>  <p>I am building a translation system. I know one way would be to create a translations table for each of my content types. For example if I had a table for Posts then I would have a separate table for Post translations:</p>  <pre><code>tbl posts ---------- id title content  tbl posts_translations --------- id title content locale </code></pre>  <p>And then if I did a LEFT join and get the results with PHP I would get all data I want as key=>value pairs, and I can use in my application as <code>$row['p_title']</code></p>  <p>Because I will have multiple content types to translate and rather than maintaining field names in this way, can I achieve the same result with one?</p>  <p>i.e.</p>  <pre><code>tbl translations -------------------- id type      i.e 'posts' type_id   i.e. posts.id key       i.e. 'content', 'title' value     i.e. 'this is a title' locale </code></pre>  <p>So to get all the translations keys for a single post, I would:</p>  <pre><code>SELECT key, value FROM translations  WHERE type = 'posts'  AND type_id = 3 </code></pre>  <p>This would give me a result set like:</p>  <pre><code>$row = array(   'key' =&gt; 'title',   'value' =&gt; 'This is a title' ) </code></pre>  <p>But what I want is:</p>  <pre><code>$row['title'] =&gt; 'This is the title' </code></pre>  <p>Of course I could do a PHP loop to format the data, but is there something in MYSQL that will present this data for me without the overhead of looping each result?</p>  <h2>NOTE</h2>  <p>I would like the resulting array keys to be generated from the column/field value, not the column/field name.</p>