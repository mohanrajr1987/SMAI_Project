<p>Given the message in a messages properties file:</p>  <p><code>message = Change relation &lt;strong&gt;{0}&lt;/strong&gt; -&gt; &lt;strong&gt;{1}&lt;/strong&gt; to &lt;strong&gt;{2}&lt;/strong&gt; -&gt; &lt;strong&gt;{3}&lt;/strong&gt;?</code></p>  <p>if the content of any of the placeholders is a user-influenced string, I need to html escape the message in order to prevent a potential XSS (I do that by using the <code>c:out</code> tag in my JSP templates, I guess I could use the htmlEscape-attribute of the <code>spring:message</code> tag as well, but I think there's no difference).</p>  <p>However by doing so, I corrupt the markup in the message, <code>&lt;strong&gt;</code> etc. which leads to the output:</p>  <p><code>Change relation &lt;strong&gt;Peter&lt;/strong&gt; -&gt; &lt;strong&gt;Car&lt;/strong&gt; to &lt;strong&gt;Carl&lt;/strong&gt; -&gt; &lt;strong&gt;Bus&lt;/strong&gt;?</code></p>  <p>I've already read the thread here <a href="http://stackoverflow.com/questions/13225/how-can-i-refactor-html-markup-out-of-my-property-files">on stackoverflow</a> but it does not address XSS.</p>  <p>I am thinking about these options:</p>  <p>1) Simply replace all <code>&lt;strong&gt;</code> tags from the messages properties files with single quotes. Then there's no problem html escaping the entire message, with the drawback of a little less highlighting of the specific parts of the message.</p>  <p>2) Split the message into parts which allow for separate markup in the (JSP) template. This feels like much work just to get the markup right.</p>  <p>Am I missing something here? Which is the better option, or is there another option?</p>  <p><strong>Edit:</strong> Without html-escaping the message is, like I want it to be, like this:</p>  <p>Change relation <strong>Peter</strong> -> <strong>Car</strong> to <strong>Carl</strong> -> <strong>Bus</strong>?</p>  <p>So the html-markup as in the messages.properties file is being rendered when displayed in the template.</p>  <p>When escaping, the message is like above, showing me the <code>&lt;strong&gt;</code> tags instead of rendering them.</p>