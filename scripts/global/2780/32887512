<p>I have a problem where I need a webpage to be localized at run-time via a dropdown list, my current code works fine for English as I'm using a case statement with hard-coded english values in them, I'm just wondering if there is a way to translate from other languages (e.g french to german), without having to have case statements for each language?</p>  <p>I have tried using a keyvaluepair to enumerate the selections, but the hard-coded values are still in English (and therefore not localizable because the case statement would fail!)</p>  <p>my code is below, any and all help would be greatly appreciated.</p>  <pre><code> [AllowAnonymous]         [HttpPost]         public ActionResult SelectLanguage(LoginViewModel model)         {             LanguageStrings.Culture = new CultureInfo("en-gb");                foreach (KeyValuePair&lt;int,string&gt; value in model.Languages)             {                    switch (model.SelectedLanguage)             {                 case "French":                     LanguageStrings.Culture = new CultureInfo("fr-fr");                     break;                 case "German":                     LanguageStrings.Culture = new CultureInfo("de-de");                     break;                 case "Czech":                     LanguageStrings.Culture = new CultureInfo("cs-cz");                     break;                 case "Greek":                     LanguageStrings.Culture = new CultureInfo("el-gr");                     break;                 case "Spanish":                     LanguageStrings.Culture = new CultureInfo("es-es");                     break;                 case "Hungarian":                     LanguageStrings.Culture = new CultureInfo("hu-hu");                     break;                 case "Italian":                     LanguageStrings.Culture = new CultureInfo("it-it");                     break;                 case "Korean":                     LanguageStrings.Culture = new CultureInfo("ko-kr");                     break;                 case "Dutch":                     LanguageStrings.Culture = new CultureInfo("nl-nl");                     break;                 case "Polish":                     LanguageStrings.Culture = new CultureInfo("pl-pl");                     break;                 case "Portuguese":                     LanguageStrings.Culture = new CultureInfo("pt-pt");                     break;                 case "Romanian":                     LanguageStrings.Culture = new CultureInfo("ro-ro");                     break;                 case "Slovak":                     LanguageStrings.Culture = new CultureInfo("sk-sk");                     break;                 case "Swedish":                     LanguageStrings.Culture = new CultureInfo("sv-se");                     break;              }               }                  return RedirectToAction("Index");          } </code></pre>