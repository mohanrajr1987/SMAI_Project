<p>I have a HTTP Handler that reads all resources files in the ASP.NET MVC assembly and converts them to a Javascript object. The code works well apart from 1 rather big detail as I need to be able to predefine the culture. I cannot use the useful web config's auto UI cultures, instead I want to use database configuration. As soon as this code runs, it still takes the local culture of my computer. Is there any way to set the culture? I was thinking of using the ResourceManager but I'm failing to do so.</p>  <pre><code>public void ProcessRequest(HttpContext context) {  // Check current assembly  Assembly currentAssembly = null;    Type appType = HttpContext.Current.ApplicationInstance.GetType();   if (appType.Namespace == "ASP")   {     currentAssembly = appType.BaseType.Assembly;   }   else   {     currentAssembly = appType.Assembly;    }     // Get resource files in this assembly, in this cased reference by Resources namespace                 IEnumerable&lt;Type&gt; resources = currentAssembly.GetTypes().Where(x =&gt; x.Namespace == "Resources");          // Generate Javascript namespace through which each resource file will be referenced         context.Response.ContentType = "text/javascript";         context.Response.Write("var Resources = {};\n");          foreach (Type resource in resources)         {             // For each type, add an object to the namespace             context.Response.Write(string.Format("Resources.{0} = {{}};\n", resource.Name));              // Get all resource keys and values for every resource file             IDictionary&lt;String, String&gt; resourceKeyValues =                 resource                 .GetProperties(BindingFlags.DeclaredOnly | BindingFlags.Static | BindingFlags.GetProperty)                 .Where(x =&gt; x.PropertyType == typeof(string))                 .ToDictionary(x =&gt; x.Name, x =&gt; x.GetValue(null, null).ToString());              // Include each key + value             foreach (String key in resourceKeyValues.Keys)             {                 context.Response.Write(string.Format("Resources.{0}.{1} = '{2}';\n", resource.Name, key, resourceKeyValues[key].Replace("'", "\'")));             }         }     } </code></pre>