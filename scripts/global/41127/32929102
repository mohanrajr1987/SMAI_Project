<p>Hi there I'm trying out JEE with a code base that is written under Eclipse and I'm now trying to use it in NetBeans with Maven.</p>  <p>I guess my problem is the persistence unit in the persistence.xml can't be found, because I tried to use the @PersistenceUnit with UnitName set, which couldn't be found neither.</p>  <p>Thank you for any hints :-)</p>  <p>RegisterController.java:</p>  <pre><code>package ch.uufstellend.onlineshop;  import ch.uufstellend.onlineshop.model.Customer; import java.io.Serializable;  import javax.annotation.Resource; import javax.enterprise.context.RequestScoped; import javax.faces.application.FacesMessage; import javax.faces.context.FacesContext; import javax.inject.Inject; import javax.inject.Named; import javax.persistence.EntityManagerFactory; import javax.persistence.PersistenceUnit; import javax.transaction.HeuristicMixedException; import javax.transaction.HeuristicRollbackException; import javax.transaction.NotSupportedException; import javax.transaction.RollbackException; import javax.transaction.SystemException; import javax.transaction.UserTransaction;  /**  *  * @author Alexander Salvanos  *  */ @Named @RequestScoped public class RegisterController implements Serializable {      private static final long serialVersionUID = 1L;      @PersistenceUnit//(unitName = "uuf-onlineshop-pu")     private EntityManagerFactory emf;      @Resource     private UserTransaction ut;      @Inject     private Customer customer;      public Customer getCustomer() {         return customer;     }      public void setCustomer(Customer customer) {         this.customer = customer;     }      public String persist() {         try {             ut.begin();             emf.createEntityManager().persist(customer);             ut.commit();             FacesMessage m = new FacesMessage("Succesfully registered!", "Your email was saved under id " + customer.getId());             FacesContext.getCurrentInstance().addMessage("registerForm", m);         } catch (NotSupportedException | SystemException | RollbackException | HeuristicMixedException | HeuristicRollbackException | SecurityException | IllegalStateException e) {             e.printStackTrace();             FacesMessage m = new FacesMessage(FacesMessage.SEVERITY_WARN, e.getMessage(), e.getCause().getMessage());             FacesContext.getCurrentInstance().addMessage("registerForm", m);         }         return "/register.jsf";     } } </code></pre>  <p>persistence.xml</p>  <pre><code>&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;persistence version="2.1" xmlns="http://xmlns.jcp.org/xml/ns/persistence" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd"&gt;   &lt;persistence-unit name="uuf-onlineshop-pu"&gt;     &lt;properties&gt;       &lt;property name="javax.persistence.schema-generation.database.action" value="drop-and-create"/&gt;     &lt;/properties&gt;   &lt;/persistence-unit&gt; &lt;/persistence&gt; </code></pre>  <p>Customer.java</p>  <pre><code>package ch.uufstellend.onlineshop.model;  import java.io.Serializable; import java.util.HashSet; import java.util.Set; import javax.ejb.Stateful;  import javax.persistence.Entity; import javax.persistence.GeneratedValue; import javax.persistence.GenerationType; import javax.persistence.Id; import javax.persistence.NamedQuery; import javax.persistence.OneToMany; import javax.persistence.SequenceGenerator; import javax.persistence.Table; import lombok.Data;  /**  * The persistent class for the CUSTOMER database table.  *  * @author Alexander Salvanos  */ @Entity @Stateful @Data @Table(schema = "ONLINESHOP", name = "CUSTOMER") @NamedQuery(         name = "Customer.findAll",         query = "SELECT c FROM Customer c") public class Customer implements Serializable {      private static final long serialVersionUID = 1L;      @Id     @SequenceGenerator(             name = "CUSTOMER_ID_GENERATOR",             sequenceName = "SEQ_CUSTOMER",             schema = "ONLINESHOP",             allocationSize = 1,             initialValue = 1)     @GeneratedValue(             strategy = GenerationType.SEQUENCE,             generator = "CUSTOMER_ID_GENERATOR")     private Long id;      private String email;      private String password;      //bi-directional many-to-one association to Item     @OneToMany(mappedBy = "seller")     private Set&lt;Item&gt; offers;      //bi-directional many-to-one association to Item     @OneToMany(mappedBy = "buyer")     private Set&lt;Item&gt; purchases;      public Customer() {     }  //    public Long getId() { //        return this.id; //    } // //    public void setId(Long id) { //        this.id = id; //    } // //    public String getEmail() { //        return this.email; //    } // //    public void setEmail(String email) { //        this.email = email; //    } // //    public String getPassword() { //        return this.password; //    } // //    public void setPassword(String password) { //        this.password = password; //    } // //    public Set&lt;Item&gt; getOffers() { //        return this.offers; //    } // //    public void setOffers(Set&lt;Item&gt; offers) { //        this.offers = offers; //    }     public Item addOffer(Item offer) {         Set&lt;Item&gt; offers = getOffers();         if (offers == null) {             offers = new HashSet&lt;Item&gt;();         }         offers.add(offer);         offer.setSeller(this);          return offer;     }      public Item removeOffer(Item offer) {         getOffers().remove(offer);         offer.setSeller(null);          return offer;     }  //    public Set&lt;Item&gt; getPurchases() { //        return this.purchases; //    } // //    public void setPurchases(Set&lt;Item&gt; purchases) { //        this.purchases = purchases; //    }     public Item addPurchase(Item purchase) {         Set&lt;Item&gt; purchases = getPurchases();         if (purchases == null) {             purchases = new HashSet&lt;Item&gt;();         }         purchases.add(purchase);         purchase.setBuyer(this);         return purchase;     }      public Item removePurchase(Item purchase) {         getPurchases().remove(purchase);         purchase.setBuyer(null);          return purchase;     }  //    @Override //    public int hashCode() { //        final int prime = 31; //        int result = 1; //        result = prime * result + ((id == null) ? 0 : id.hashCode()); //        return result; //    } // //    @Override //    public boolean equals(Object obj) { //        if (this == obj) { //            return true; //        } //        if (obj == null) { //            return false; //        } //        if (!(obj instanceof Customer)) { //            return false; //        } //        Customer other = (Customer) obj; //        if (id == null) { //            if (other.id != null) { //                return false; //            } //        } else if (!id.equals(other.id)) { //            return false; //        } //        return true; //    }     @Override     public String toString() {         return id + "-" + email + "-" + password;     } } </code></pre>  <p>StackTrace</p>  <pre><code>Warning:   #{registerController.persist()}: java.lang.NullPointerException javax.faces.FacesException: #{registerController.persist()}: java.lang.NullPointerException     at com.sun.faces.application.ActionListenerImpl.processAction(ActionListenerImpl.java:118)     at javax.faces.component.UICommand.broadcast(UICommand.java:315)     at javax.faces.component.UIViewRoot.broadcastEvents(UIViewRoot.java:790)     at javax.faces.component.UIViewRoot.processApplication(UIViewRoot.java:1282)     at com.sun.faces.lifecycle.InvokeApplicationPhase.execute(InvokeApplicationPhase.java:81)     at com.sun.faces.lifecycle.Phase.doPhase(Phase.java:101)     at com.sun.faces.lifecycle.LifecycleImpl.execute(LifecycleImpl.java:198)     at javax.faces.webapp.FacesServlet.service(FacesServlet.java:646)     at org.apache.catalina.core.StandardWrapper.service(StandardWrapper.java:1682)     at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:318)     at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:160)     at org.apache.catalina.core.StandardPipeline.doInvoke(StandardPipeline.java:734)     at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:673)     at com.sun.enterprise.web.WebPipeline.invoke(WebPipeline.java:99)     at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:174)     at org.apache.catalina.connector.CoyoteAdapter.doService(CoyoteAdapter.java:415)     at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:282)     at com.sun.enterprise.v3.services.impl.ContainerMapper$HttpHandlerCallable.call(ContainerMapper.java:459)     at com.sun.enterprise.v3.services.impl.ContainerMapper.service(ContainerMapper.java:167)     at org.glassfish.grizzly.http.server.HttpHandler.runService(HttpHandler.java:201)     at org.glassfish.grizzly.http.server.HttpHandler.doHandle(HttpHandler.java:175)     at org.glassfish.grizzly.http.server.HttpServerFilter.handleRead(HttpServerFilter.java:235)     at org.glassfish.grizzly.filterchain.ExecutorResolver$9.execute(ExecutorResolver.java:119)     at org.glassfish.grizzly.filterchain.DefaultFilterChain.executeFilter(DefaultFilterChain.java:284)     at org.glassfish.grizzly.filterchain.DefaultFilterChain.executeChainPart(DefaultFilterChain.java:201)     at org.glassfish.grizzly.filterchain.DefaultFilterChain.execute(DefaultFilterChain.java:133)     at org.glassfish.grizzly.filterchain.DefaultFilterChain.process(DefaultFilterChain.java:112)     at org.glassfish.grizzly.ProcessorExecutor.execute(ProcessorExecutor.java:77)     at org.glassfish.grizzly.nio.transport.TCPNIOTransport.fireIOEvent(TCPNIOTransport.java:561)     at org.glassfish.grizzly.strategies.AbstractIOStrategy.fireIOEvent(AbstractIOStrategy.java:112)     at org.glassfish.grizzly.strategies.WorkerThreadIOStrategy.run0(WorkerThreadIOStrategy.java:117)     at org.glassfish.grizzly.strategies.WorkerThreadIOStrategy.access$100(WorkerThreadIOStrategy.java:56)     at org.glassfish.grizzly.strategies.WorkerThreadIOStrategy$WorkerThreadRunnable.run(WorkerThreadIOStrategy.java:137)     at org.glassfish.grizzly.threadpool.AbstractThreadPool$Worker.doWork(AbstractThreadPool.java:565)     at org.glassfish.grizzly.threadpool.AbstractThreadPool$Worker.run(AbstractThreadPool.java:545)     at java.lang.Thread.run(Thread.java:745) Caused by: javax.faces.el.EvaluationException: java.lang.NullPointerException     at javax.faces.component.MethodBindingMethodExpressionAdapter.invoke(MethodBindingMethodExpressionAdapter.java:101)     at com.sun.faces.application.ActionListenerImpl.processAction(ActionListenerImpl.java:102)     ... 35 more Caused by: java.lang.NullPointerException     at ch.uufstellend.onlineshop.RegisterController.persist(RegisterController.java:61)     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke(Method.java:483)     at javax.el.ELUtil.invokeMethod(ELUtil.java:332)     at javax.el.BeanELResolver.invoke(BeanELResolver.java:537)     at javax.el.CompositeELResolver.invoke(CompositeELResolver.java:256)     at com.sun.el.parser.AstValue.invoke(AstValue.java:283)     at com.sun.el.MethodExpressionImpl.invoke(MethodExpressionImpl.java:304)     at org.jboss.weld.util.el.ForwardingMethodExpression.invoke(ForwardingMethodExpression.java:40)     at org.jboss.weld.el.WeldMethodExpression.invoke(WeldMethodExpression.java:50)     at com.sun.faces.facelets.el.TagMethodExpression.invoke(TagMethodExpression.java:105)     at javax.faces.component.MethodBindingMethodExpressionAdapter.invoke(MethodBindingMethodExpressionAdapter.java:87)     ... 36 more  Severe:   java.lang.IllegalStateException: Unable to retrieve EntityManagerFactory for unitName null     at com.sun.enterprise.container.common.impl.EntityManagerFactoryWrapper.getDelegate(EntityManagerFactoryWrapper.java:103)     at com.sun.enterprise.container.common.impl.EntityManagerFactoryWrapper.createEntityManager(EntityManagerFactoryWrapper.java:114)     at ch.uufstellend.onlineshop.RegisterController.persist(RegisterController.java:55)     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke(Method.java:483)     at javax.el.ELUtil.invokeMethod(ELUtil.java:332)     at javax.el.BeanELResolver.invoke(BeanELResolver.java:537)     at javax.el.CompositeELResolver.invoke(CompositeELResolver.java:256)     at com.sun.el.parser.AstValue.invoke(AstValue.java:283)     at com.sun.el.MethodExpressionImpl.invoke(MethodExpressionImpl.java:304)     at org.jboss.weld.util.el.ForwardingMethodExpression.invoke(ForwardingMethodExpression.java:40)     at org.jboss.weld.el.WeldMethodExpression.invoke(WeldMethodExpression.java:50)     at com.sun.faces.facelets.el.TagMethodExpression.invoke(TagMethodExpression.java:105)     at javax.faces.component.MethodBindingMethodExpressionAdapter.invoke(MethodBindingMethodExpressionAdapter.java:87)     at com.sun.faces.application.ActionListenerImpl.processAction(ActionListenerImpl.java:102)     at javax.faces.component.UICommand.broadcast(UICommand.java:315)     at javax.faces.component.UIViewRoot.broadcastEvents(UIViewRoot.java:790)     at javax.faces.component.UIViewRoot.processApplication(UIViewRoot.java:1282)     at com.sun.faces.lifecycle.InvokeApplicationPhase.execute(InvokeApplicationPhase.java:81)     at com.sun.faces.lifecycle.Phase.doPhase(Phase.java:101)     at com.sun.faces.lifecycle.LifecycleImpl.execute(LifecycleImpl.java:198)     at javax.faces.webapp.FacesServlet.service(FacesServlet.java:646)     at org.apache.catalina.core.StandardWrapper.service(StandardWrapper.java:1682)     at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:318)     at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:160)     at org.apache.catalina.core.StandardPipeline.doInvoke(StandardPipeline.java:734)     at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:673)     at com.sun.enterprise.web.WebPipeline.invoke(WebPipeline.java:99)     at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:174)     at org.apache.catalina.connector.CoyoteAdapter.doService(CoyoteAdapter.java:415)     at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:282)     at com.sun.enterprise.v3.services.impl.ContainerMapper$HttpHandlerCallable.call(ContainerMapper.java:459)     at com.sun.enterprise.v3.services.impl.ContainerMapper.service(ContainerMapper.java:167)     at org.glassfish.grizzly.http.server.HttpHandler.runService(HttpHandler.java:201)     at org.glassfish.grizzly.http.server.HttpHandler.doHandle(HttpHandler.java:175)     at org.glassfish.grizzly.http.server.HttpServerFilter.handleRead(HttpServerFilter.java:235)     at org.glassfish.grizzly.filterchain.ExecutorResolver$9.execute(ExecutorResolver.java:119)     at org.glassfish.grizzly.filterchain.DefaultFilterChain.executeFilter(DefaultFilterChain.java:284)     at org.glassfish.grizzly.filterchain.DefaultFilterChain.executeChainPart(DefaultFilterChain.java:201)     at org.glassfish.grizzly.filterchain.DefaultFilterChain.execute(DefaultFilterChain.java:133)     at org.glassfish.grizzly.filterchain.DefaultFilterChain.process(DefaultFilterChain.java:112)     at org.glassfish.grizzly.ProcessorExecutor.execute(ProcessorExecutor.java:77)     at org.glassfish.grizzly.nio.transport.TCPNIOTransport.fireIOEvent(TCPNIOTransport.java:561)     at org.glassfish.grizzly.strategies.AbstractIOStrategy.fireIOEvent(AbstractIOStrategy.java:112)     at org.glassfish.grizzly.strategies.WorkerThreadIOStrategy.run0(WorkerThreadIOStrategy.java:117)     at org.glassfish.grizzly.strategies.WorkerThreadIOStrategy.access$100(WorkerThreadIOStrategy.java:56)     at org.glassfish.grizzly.strategies.WorkerThreadIOStrategy$WorkerThreadRunnable.run(WorkerThreadIOStrategy.java:137)     at org.glassfish.grizzly.threadpool.AbstractThreadPool$Worker.doWork(AbstractThreadPool.java:565)     at org.glassfish.grizzly.threadpool.AbstractThreadPool$Worker.run(AbstractThreadPool.java:545)     at java.lang.Thread.run(Thread.java:745) </code></pre>  <p>The full repository is on <a href="https://github.com/5im5im/uuf-onlineshop/tree/fd210ac77f81945eb2446090fbacd346d3d4b6d1" rel="nofollow">GitHub</a>.</p>