<p>When put some share configuration files in services-common project, we exclude it from the jar.</p>  <pre><code>&lt;build&gt; &lt;resources&gt;     &lt;resource&gt;         &lt;directory&gt;src/main/resources&lt;/directory&gt;         &lt;excludes&gt;             &lt;exclude&gt;**&lt;/exclude&gt;         &lt;/excludes&gt;         &lt;filtering&gt;false&lt;/filtering&gt;     &lt;/resource&gt; &lt;/resources&gt; &lt;/build&gt; </code></pre>  <p>and in other projects(rest or ui) we use maven-war-plugin to include files from /services-commons/src/main/resources like below:</p>  <pre><code>&lt;plugin&gt; &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt; &lt;artifactId&gt;maven-war-plugin&lt;/artifactId&gt; &lt;version&gt;2.6&lt;/version&gt; &lt;configuration&gt;     &lt;webResources&gt;         &lt;resource&gt;             &lt;targetPath&gt;WEB-INF/classes&lt;/targetPath&gt;             &lt;directory&gt;../services-commons/src/main/resources&lt;/directory&gt;         &lt;/resource&gt;     &lt;/webResources&gt; &lt;/configuration&gt; &lt;/plugin&gt; </code></pre>  <p>This works when we use maven to build in command line.</p>  <p>But when we add a new file in /services-commons/src/main/resources, we will have to run maven clean install in command line, and run tomcat clean, otherwise tomcat will not pick up the newly added file.</p>  <p>This is cumbersome, so I am wondering whether there is better way: we can put share common file in one project, eclipse tomcat can automatically pick up new file added in common project.</p>