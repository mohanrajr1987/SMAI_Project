<p>We recently started converting a large webapp to Maven, and everything seemed to be working great, but no matter what we do, Maven doesn't recognize the tomcat-dbcp.jar file on the tomcat server.  In my dependencies, I have set the following:</p>  <pre><code>&lt;dependency&gt;     &lt;groupId&gt;org.apache.tomcat&lt;/groupId&gt;     &lt;artifactId&gt;tomcat-dbcp&lt;/artifactId&gt;     &lt;version&gt;8.0.26&lt;/version&gt;     &lt;scope&gt;provided&lt;/scope&gt; &lt;/dependency&gt; </code></pre>  <p>But I get the following stacktrace:</p>  <pre><code>Error:  javax.servlet.jsp.JspException: java.lang.AbstractMethodError: oracle.jdbc.driver.T4CConnection.isValid(I)Z URI:    /as/CheckReport Error Message:  oracle.jdbc.driver.T4CConnection.isValid(I)Z Status code:    500  org.apache.tomcat.dbcp.dbcp2.DelegatingConnection.isValid(DelegatingConnection.java:913)  org.apache.tomcat.dbcp.dbcp2.PoolableConnection.validate(PoolableConnection.java:226)  org.apache.tomcat.dbcp.dbcp2.PoolableConnectionFactory.validateConnection(PoolableConnectionFactory.java:302)  org.apache.tomcat.dbcp.dbcp2.BasicDataSource.validateConnectionFactory(BasicDataSource.java:2208)  org.apache.tomcat.dbcp.dbcp2.BasicDataSource.createPoolableConnectionFactory(BasicDataSource.java:2191)  org.apache.tomcat.dbcp.dbcp2.BasicDataSource.createDataSource(BasicDataSource.java:1945)  org.apache.tomcat.dbcp.dbcp2.BasicDataSource.getConnection(BasicDataSource.java:1412)  com.networkfleet.sre.common.db.Resource.getDBConnectionDEV(Resource.java:75)  com.networkfleet.sre.app.checkreport.CheckReportSrv.doGet(CheckReportSrv.java:63)  javax.servlet.http.HttpServlet.service(HttpServlet.java:622)  javax.servlet.http.HttpServlet.service(HttpServlet.java:729)  org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:291)  org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)  org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)  org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)  org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)  org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:219)  org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)  org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:614)  org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:142)  org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)  org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:617)  org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)  org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:518)  org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1091)  org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:668)  org.apache.tomcat.util.net.AprEndpoint$SocketProcessor.doRun(AprEndpoint.java:2463)  org.apache.tomcat.util.net.AprEndpoint$SocketProcessor.run(AprEndpoint.java:2452)  java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)  java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)  org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)  java.lang.Thread.run(Thread.java:745) </code></pre>  <p>I should point out that this was never a problem before Maven, and we haven't made server side changes that should cause this.  </p>  <p>I'm currently using a odjbc7.jar driver, which is up to date and has been installed through Maven, appears in my repository in the correct location, and is included in the app itself via a system scope.  This is the identical driver file that is being used in the non-maven build, where this error does not appear.</p>