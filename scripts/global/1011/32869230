<p>I have a Java server on my PC using the infamous Robot class to capture screenshots, encode them to Base64 strings and then send them to an Android client over a Socket using a PrintWriter</p>  <p>The Android client reads the Base64 encoded strings, converts them back to byte arrays and then into Bitmap images for display in an ImageView.</p>  <p>The problem is that while this sometimes works as expected, often the BitmapFactory.decodeByteArray method will return null and hence render nothing to the ImageView.<br> Giving me a message in Logcat <code>D/skiaï¹• --- decoder-&gt;decode returned false</code></p>  <p>I can reproduce successful/unsuccessful decodes by changing what is displayed on the PC, it can be as simple as highlighting a line of onscreen text that will cause the decode to starting failing and un-highlighting will return it to succeeding.</p>  <p>When the decode has failed I have tried both comparing it to the string that was sent by the server (is always 100% the same) and validating the Base64 encode with an external tool <a href="http://codebeautify.org/base64-to-image-converter" rel="nofollow">Base64 to Image Converter</a>, which always shows a perfect image.</p>  <p>This happens on both a real device running Android 4.1 and an emulated device on Android 5.1</p>  <p>Have spent 2 days so far poring over SO and the internet in general looking for an answer but haven't found anything that quite fits my situation.</p>  <p>Why would BitmapFactory method be failing so often? Or have I stuffed something up terribly in my client code?</p>  <p><strong>Android client code</strong> </p>  <pre><code>public class MainActivity extends Activity {      private Socket socket;     private static final int SERVERPORT = 6666;     private static final String SERVER_IP = "192.168.2.5";     private ImageView imgContainer;     private Bitmap bitmapObj;      @Override     public void onCreate(Bundle savedInstanceState) {         super.onCreate(savedInstanceState);         setContentView(R.layout.activity_main);         imgContainer = (ImageView) findViewById(R.id.imgContainer);         new Thread(new ConnectionThread()).start();     }      private class ConnectionThread implements Runnable {          @Override         public void run() {              try {                 InetAddress serverAddr = InetAddress.getByName(SERVER_IP);                  socket = new Socket(serverAddr, SERVERPORT);                 BufferedReader in = new BufferedReader(new InputStreamReader(socket.getInputStream()));                 // first line is garbage                 String inStr=in.readLine();                 //image receiver loop                 while((inStr = in.readLine()) != null){                     // log shows string is always same length as the one sent                     Log.d("IMGTHREAD", String.valueOf(inStr.length()));                      byte[] img64 = Base64.decode(inStr, Base64.DEFAULT);                      //Fails here, bitmapfactory decode often returns null? but not always                      bitmapObj = BitmapFactory.decodeByteArray(img64, 0, img64.length);                          // update the imgContainer ImageView                         MainActivity.this.runOnUiThread(new Runnable() {                             @Override                             public void run() {                                  imgContainer.setImageBitmap(bitmapObj);                             }                         });                  }              } catch (UnknownHostException e1) {                 e1.printStackTrace();             } catch (IOException e1) {                 e1.printStackTrace();             }          }      } } </code></pre>