<p>When converting "random bytes" to a string, is there any difference as to whether I should use <code>base64_encode</code> or <code>bin2hex</code>?</p>  <pre><code>$bytes = openssl_random_pseudo_bytes(32); // alternatively read from /dev/urandom  echo base64_encode($bytes); // some 44 character string echo bin2hex($bytes); // some 64 character string </code></pre>  <p>To use as a salt for <code>bcrypt</code>, obviously modified base64 is the correct choice because that is what's expected. But for contexts like account sign-up confirmation key or a unique non-sequential object identifier, which is the correct choice?</p>  <p>I am aware of the <a href="https://github.com/ircmaxell/random_compat" rel="nofollow"><code>random_compat</code> library</a> but this is for learning purposes as well.</p>