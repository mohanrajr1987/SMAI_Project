<p>I'm building a RESTful JSON API to serve as the backend for an iPhone app with some camera/photo functionality.</p>  <p>I'm trying to determine what are useful and reliable ways to handle the image uploads.</p>  <p>We are going to be base64 encoding the images within the app and POSTing with the rest of the payload to the API, and then on the server we want to resize the image to multiple different dimensions (thumbnail, etc.) and push all of the files to Amazon S3. Some of the resizing may be done asynchronously.</p>  <p>What useful ways to do this, taking into account any file format conversion (we want all images to be JPEG, but they may not come directly from the camera), and that we do not want to permanently store the files on the server?</p>  <p>I have done this much:</p>  <pre><code>$data = 'iVBORw0KGgoAAAANSUhEUgAAABwAAAASCAMAAAB/2U7WAAAABl'        . 'BMVEUAAAD///+l2Z/dAAAASUlEQVR4XqWQUQoAIAxC2/0vXZDr'        . 'EX4IJTRkb7lobNUStXsB0jIXIAMSsQnWlsV+wULF4Avk9fLq2r'        . '8a5HSE35Q3eO2XP1A1wQkZSgETvDtKdQAAAABJRU5ErkJggg=='; $data = base64_decode($data);  $im = imagecreatefromstring($data); $tmpfname = tempnam(sys_get_temp_dir(), "IMG");  $imageSave = imagejpeg($im,$tmpfname,100); </code></pre>  <p>But I am mostly unsure about how do I validate that the base64 string represents a JPEG, or do I need to? I create the image using <code>imagecreatefromstring()</code>, but what should be the next steps after that?</p>