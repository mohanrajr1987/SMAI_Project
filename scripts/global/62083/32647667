<p>I'm changing a project from using an EDMX file to Code First. The project is one of a few projects in a solution, and it only contains the entities and the DbContext class.</p>  <p>This is what I've done so far:</p>  <ol> <li>Removed the old project from the solution (but not deleted it just yet, just renamed the folder).</li> <li>Added a new class library project to the solution, and given it the same name as the old one.</li> <li>Used NuGet to add Entity Framework to the new project.</li> <li>Copied all the entity classes that were generated by the old EDMX file to the new project and included them all.</li> <li>Copied the DbContext class as well.</li> <li>Modified the app.config file to change the connection string to a standard connection string without the metadata stuff.</li> <li>Added a reference to all the other projects that uses to use the old project.</li> </ol>  <p>Everything looks good and it compiles with no errors, but when I try to <code>enable-migrations</code> it throws this error:</p>  <pre><code>PM&gt; enable-migrations Checking if the context targets an existing database... System.Data.Entity.Core.MetadataException: Unable to load the specified metadata resource.    at System.Data.Entity.Core.Metadata.Edm.MetadataArtifactLoaderCompositeResource.LoadResources(String assemblyName, String resourceName, ICollection`1 uriRegistry, MetadataArtifactAssemblyResolver resolver)    at System.Data.Entity.Core.Metadata.Edm.MetadataArtifactLoaderCompositeResource.CreateResourceLoader(String path, ExtensionCheck extensionCheck, String validExtension, ICollection`1 uriRegistry, MetadataArtifactAssemblyResolver resolver)    at System.Data.Entity.Core.Metadata.Edm.MetadataArtifactLoader.Create(String path, ExtensionCheck extensionCheck, String validExtension, ICollection`1 uriRegistry, MetadataArtifactAssemblyResolver resolver)    at System.Data.Entity.Core.Metadata.Edm.MetadataCache.SplitPaths(String paths)    at System.Data.Entity.Core.Common.Utils.Memoizer`2.&lt;&gt;c__DisplayClass2.&lt;Evaluate&gt;b__0()    at System.Data.Entity.Core.Common.Utils.Memoizer`2.Result.GetValue()    at System.Data.Entity.Core.Common.Utils.Memoizer`2.Evaluate(TArg arg)    at System.Data.Entity.Core.Metadata.Edm.MetadataCache.GetArtifactLoader(DbConnectionOptions effectiveConnectionOptions)    at System.Data.Entity.Core.Metadata.Edm.MetadataCache.GetMetadataWorkspace(DbConnectionOptions effectiveConnectionOptions)    at System.Data.Entity.Core.EntityClient.EntityConnection.GetMetadataWorkspace()    at System.Data.Entity.Core.Objects.ObjectContext.RetrieveMetadataWorkspaceFromConnection()    at System.Data.Entity.Core.Objects.ObjectContext..ctor(EntityConnection connection, Boolean isConnectionConstructor, ObjectQueryExecutionPlanFactory objectQueryExecutionPlanFactory, Translator translator, ColumnMapFactory columnMapFactory)    at System.Data.Entity.Internal.InternalConnection.CreateObjectContextFromConnectionModel()    at System.Data.Entity.Internal.LazyInternalConnection.CreateObjectContextFromConnectionModel()    at System.Data.Entity.Internal.LazyInternalContext.InitializeContext()    at System.Data.Entity.Internal.LazyInternalContext.get_ModelBeingInitialized()    at System.Data.Entity.Infrastructure.EdmxWriter.WriteEdmx(DbContext context, XmlWriter writer)    at System.Data.Entity.Utilities.DbContextExtensions.&lt;&gt;c__DisplayClass1.&lt;GetModel&gt;b__0(XmlWriter w)    at System.Data.Entity.Utilities.DbContextExtensions.GetModel(Action`1 writeXml)    at System.Data.Entity.Utilities.DbContextExtensions.GetModel(DbContext context)    at System.Data.Entity.Migrations.DbMigrator..ctor(DbMigrationsConfiguration configuration, DbContext usersContext, DatabaseExistenceState existenceState, Boolean calledByCreateDatabase)    at System.Data.Entity.Migrations.DbMigrator..ctor(DbMigrationsConfiguration configuration)    at System.Data.Entity.Migrations.Design.MigrationScaffolder..ctor(DbMigrationsConfiguration migrationsConfiguration)    at System.Data.Entity.Migrations.Design.ToolingFacade.ScaffoldRunner.Run()    at System.AppDomain.DoCallBack(CrossAppDomainDelegate callBackDelegate)    at System.AppDomain.DoCallBack(CrossAppDomainDelegate callBackDelegate)    at System.Data.Entity.Migrations.Design.ToolingFacade.Run(BaseRunner runner)    at System.Data.Entity.Migrations.Design.ToolingFacade.ScaffoldInitialCreate(String language, String rootNamespace)    at System.Data.Entity.Migrations.EnableMigrationsCommand.&lt;&gt;c__DisplayClass2.&lt;.ctor&gt;b__0()    at System.Data.Entity.Migrations.MigrationsDomainCommand.Execute(Action command) Unable to load the specified metadata resource. </code></pre>  <p>It looks like it still thinks I'm using an EDMX. I also get this error when I try to run the application.</p>  <p>What am I missing?</p>