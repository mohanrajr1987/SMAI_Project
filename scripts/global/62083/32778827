<p>I am using EF attribute values to map to the SQL table and column names that is enforced on me.</p>  <p>I am also required  to set some default column values in SQL. </p>  <p>In <strong>EF 6</strong> Code First OnModelCreating doesn't support setting the <strong>SQL Server</strong> column default value when creating the database.</p>  <p>However one can do it through code first migrations.</p>  <p>Here is an example where I set the SQL Server default value to true for a <strong>Boolean</strong> field.</p>  <p>My entity's class</p>  <pre><code>[Table("Given_TableName_1")] public class Vehicle {     [Key,Column("Given_TableColumn_1")]     public int Id { get; set; }      [Column("Given_TableColumn_4")]     public bool IsManual { get; set; } } </code></pre>  <p>DB Migration class</p>  <pre><code>public partial class DefaultValueMigrations : DbMigration {     public override void Up()     {            AlterColumn("Given_TableName_1", "Given_TableColumn_4", c =&gt; c.Boolean(nullable: false, defaultValue: true));      } } </code></pre>  <p>I don't want to refer to the SQL table names in code. The above is also not strongly typed and one can easily make a mistake typing using string fields.</p>  <p>Is there a way to reference the entity class name and the property name  instead. </p>  <p>something like</p>  <pre><code>  AlterColumn(GetClassAttribute(Vehicle,"Table"), GetClassPropertyAttribute(Vehicle.IsManual,"Column"), c =&gt; c.Boolean(nullable: false, defaultValue: true)); </code></pre>