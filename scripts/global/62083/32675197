<p>I have a Person table that I want to be mapped to multiple foreign keys in a Usage table. Something like this:</p>  <pre><code>public class Usage{     int Id;     int OwnerId;     int CreatedBy;      public virtual Person Owner;     public virtual Person Creator;  }  public class Person{     int Id;     string Name; } </code></pre>  <p>Now I would like to use Fluent API so I can reference the properties Owner and Creator within an instance of the Usage table. Everything I read says you have to create relationships between both classes (e.g. also map a virtual collection back to the Usage table in the Person table) but I don't want to do that. I don't need a two way relationship. I just want to say that OwnerId and CreatedBy maps to the Person table and load it in memory.</p>  <pre><code>modelBuilder.Entity&lt;Usage&gt;()     .WithOptional(x=&gt;x.Owner).ForeignKey(x=&gt;x.OwnerId)     .WithRequired(x=&gt;x.Creator).ForeignKey(x=&gt;x.CreatedBy) </code></pre>  <p>Is this possible to do? I have a ton of relationships to the Person table and I don't want clutter it up with a bunch of virtual collections that I'll never use.</p>  <p>Thanks!</p>