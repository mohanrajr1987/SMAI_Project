<p>I have data in a tidy ('long form') pandas.DataFrame looking like this (shortened) :</p>  <pre><code>    dataset  limit type_long type  distance  count  frequency 0       pos     -1      DR-3   DR        -3     17   0.005866 1       pos     -1      DR-2   DR        -2     70   0.024155 2       pos     -1      DR-1   DR        -1    124   0.04278 ...     ...     ...     ...    ...       ...   ...    ... 810     neg    -10       DR9   DR         9    435   0.033565 811     neg    -10      DR10   DR        10    432   0.033333 812     neg    -10      IR-3   IR        -3    260   0.02006 </code></pre>  <p>I almost managed to represent the data as I intended: </p>  <p>1 subplot per 'type' with x and y being 'distance' and 'frequency' respectively and separating the 'pos' and 'neg' datasets by using continuous and dashed lines. My code is here:</p>  <pre><code>grid = sns.FacetGrid(df, col = 'type', hue= 'limit', legend_out = True)  grid.map(sns.pointplot, 'distance', 'frequency', 'dataset', linestyles = ['-', ':'], markers=['','']).set_titles('{col_name}') grid.add_legend() plt.show() </code></pre>  <p>Which gives a fairly ugly output: the 'pos' dataset appears transparent and the legend disapeared (I cannot post an image, sorry)</p>  <p>I don't understand the strange behaviour of pointplot in this case. Is there a way correct the transparency? Or maybe a better approach to create this figure.</p>  <p>For the legend I guess this is a conflict between the two hue definitions. Is there a way to display a double legend with colors for the limits and linestyle for the dataset ?</p>  <p>I've made a minimal working example with seaborn datasets, the graphs are awfull but it shows the problem well:</p>  <pre><code>import seaborn as sns  titanic = sns.load_dataset('titanic') sns.set(style="ticks") grid = sns.FacetGrid(titanic, col = 'class', hue= 'embark_town', legend_out = True)  grid.map(sns.pointplot, 'fare', 'age', 'sex', linestyles = ['-', ':'], markers=['','']) grid.add_legend()  </code></pre>