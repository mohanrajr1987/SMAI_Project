<p>I have a contour plot application that I'd like to know the pixel location of the axes origin.  I've read through the <a href="http://matplotlib.org/users/transforms_tutorial.html" rel="nofollow" title="Transformation Tutorial">Transformation Tutorial</a>, but it doesn't seem to be working properly.</p>  <p>Here's the code, adapted from the <a href="http://matplotlib.org/examples/pylab_examples/contour_demo.html" rel="nofollow">Contour Demo</a> program:</p>  <pre><code>#!/usr/bin/env python """ Illustrate simple contour plotting, contours on an image with a colorbar for the contours, and labelled contours.  See also contour_image.py. """ import matplotlib  matplotlib.use('Agg')  import numpy as np import matplotlib.cm as cm import matplotlib.mlab as mlab import matplotlib.pyplot as plt  matplotlib.rcParams['xtick.direction'] = 'out' matplotlib.rcParams['ytick.direction'] = 'out'  delta = 0.025 x = np.arange(-3.0, 3.0, delta) y = np.arange(-2.0, 2.0, delta) X, Y = np.meshgrid(x, y) Z1 = mlab.bivariate_normal(X, Y, 1.0, 1.0, 0.0, 0.0) Z2 = mlab.bivariate_normal(X, Y, 1.5, 0.5, 1, 1) # difference of Gaussians Z = 10.0 * (Z2 - Z1)  # Create a simple contour plot with labels using default colors.  The # inline argument to clabel will control whether the labels are draw # over the line segments of the contour, removing the lines beneath # the label plt.figure() CS = plt.contour(X, Y, Z) plt.clabel(CS, inline=1, fontsize=10) plt.title('Simplest default with labels')  print "Origin:\t", plt.gca().transData.transform((-3.0, -2.0))  plt.savefig("cdemo.png") </code></pre>  <p>The output is: <strong>Origin:   [ 80.  48.]</strong></p>  <p>And the following image: <a href="http://i.stack.imgur.com/bnW4K.png" rel="nofollow"><img src="http://i.stack.imgur.com/bnW4K.png" alt="enter image description here"></a></p>  <p>However, when I look at this with an editor that shows the cursor position in pixels (GIMP) it shows the origin location as (100,540).  I understand that Matplotlib's origin is lower left, and GIMP counts from upper left, so adjusting for this with the image size of (800, 600) that gives me a translated location of (100,60).</p>  <p>Any ideas?  Here's the image with the approximate location of (80, 48) marked in red at the lower left. <a href="http://i.stack.imgur.com/kSZqT.png" rel="nofollow"><img src="http://i.stack.imgur.com/kSZqT.png" alt="enter image description here"></a></p>  <p>Using matplotlib 1.4.3 Thanks!</p>