<p>I have RESTful API and 2 different mobile clients which are interacting between each other (Agent and User apps). For black-box testing purposes (API testing + useful scripts for manual tests). I've created Ruby client for that API. </p>  <p>Client structure is quite simple: </p>  <ul> <li>Agent and User classes</li> <li>Auth module which used by Agent and User to auth etc.</li> <li>Some additional classes and modules together with <code>CustomError</code> class</li> <li>In these classes there defined REST methods which using <a href="https://github.com/rest-client/rest-client" rel="nofollow">RestClient</a> for interactions.</li> <li>API returning <code>json</code> in format  <code>{'result':'success','content':{'user':.....}}</code>, <code>{'result':'error','content':'DEVICE_NOT_ACTIVE'}</code></li> </ul>  <p>Now for error handling I use <code>validate_response(resp)</code> method like so:</p>  <pre><code>def user     resp = RestClient.get("#{base_url}/user", @headers)     validate_response(resp)     resp   end  def validate_response(resp)   content = JSON.parse(resp)['content']   case content     when 'DEVICE_NOT_ACTIVE' then raise DeviceNotActive     when 'SESSION_EXPIRED' then raise SessionExpired     else   end end </code></pre>  <p>That works well, but I don't feel that is convenient, and 'correct' way to do so. Here I looking for any suggestion how to improve my approach. Thanks in advance </p>