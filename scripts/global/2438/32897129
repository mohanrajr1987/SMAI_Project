<p>I am trying to implement a tagging feature into a small piece of software and for simplicity reasons I'd like to actually only use two tables, just like so:</p>  <pre><code>items (first table) - id (int) - title (string) - description (string)  item_tag (second "pivot" table) - item_id (int, foreign key to item.id) - tag_name (string (!)) (primary_key(item_id, tag_name)) </code></pre>  <p>With the models</p>  <pre><code>&lt;?php  class Item extends Eloquent {     protected $fillable = array('title', 'desription');      public function tags() {         return $this-&gt;belongsToMany('Tag', 'item_tag', 'item_id', 'tag_name');     } } </code></pre>  <p>and</p>  <pre><code>&lt;?php  class Tag extends Eloquent {     protected $fillable = array('tag_name');      public function items() {         return $this-&gt;belongsToMany('Item', 'item_tag', 'item_id', 'tag_name');     } } </code></pre>  <p>However, I can't seem to get this working as the <code>belongsToMany</code> function seems to expect three tables and anyway Laravel seems to want a <code>tags</code> table. I know, that my plan of using only two tables is not really elegant as it increases redundancy, but still it would be acceptable for my use case. So is there any quick solution for this?</p>