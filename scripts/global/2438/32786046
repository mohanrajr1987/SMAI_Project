<p>Suppose I have a ManyToMany relation between <code>Environment</code> and <code>Animal</code>, with the joining table looking like:</p>  <pre><code>environment_id  animal_id 1               1 1               2 1               3 2               1 2               3 3               2 3               4 3               5 4               2 4               3 5               2 5               4 </code></pre>  <p>Assuming I have a set of <code>Animal</code>s with IDs <code>(1,2,3)</code>, how can I query the database to return those environments with only a subset of these animals related to them? In this example, that would be <code>Environments</code> with ids <code>(1,2,4)</code> but not <code>3</code> or <code>5</code>. If I try:</p>  <pre><code>animals = Animal.objects.filter(id__in=(1,2,3)) animal_list = AnimalList.objects.filter(animal__in=animals) </code></pre>  <p>obviously this doesn't work because they all have at least one animal from my subset.</p>  <p>The model classes are essentially:</p>  <pre><code>class Environment(models.Model):     name = models.CharField(max_length=250)     animals = models.ManyToManyField(Animal, through='AnimalList')  class Animal(models.Model):     name = models.CharField(max_length=200)     safe_around_david_cameron = models.BooleanField()  class AnimalList(models.Model):     environment = models.ForeighKey(Environment)     animal = models.ForeignKey(Animal) </code></pre>