<p>I have this many-to-many relationship that works correctly. However, now I need to have another class with a relation to this many-to-many.</p>  <pre><code>currencies = db.Table('currencies_many',     db.Column('id', db.Integer, primary_key=True),     db.Column('currency_id', db.Integer, db.ForeignKey('currencies.id')),     db.Column('bank_id', db.Integer, db.ForeignKey('banks.id')) )  class Bank(db.Model):     __tablename__ = 'banks'     id = db.Column(db.Integer, primary_key=True)     bank_name = db.Column(db.String(300))     currencies = db.relationship('Currency', secondary=currencies,         backref=db.backref('banks', lazy='dynamic'))  class Currency(db.Model):     __tablename__ = 'currencies'     id = db.Column(db.Integer, primary_key=True)     currency_name = db.Column(db.String(300)) </code></pre>  <p>What I mean is, for example, an order, I need to have the association to many to many.</p>  <pre><code>class Order(db.Model):     __tablename__ = 'orders'     id = db.Column(db.Integer, primary_key=True)     bank_currency_identification = db.Column(db.Integer, db.ForeignKey('currencies_many.id')) </code></pre>  <p>How can I do that? In my example I don't have <code>db.relationship</code> for <code>bank_currency_identification</code>, it is correct?</p>