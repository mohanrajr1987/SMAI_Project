<p>I followed Jeffrey Way's ManyToMany tutorial <a href="https://laracasts.com/series/laravel-5-fundamentals/episodes/21" rel="nofollow">https://laracasts.com/series/laravel-5-fundamentals/episodes/21</a> and I got everything and everything is working great. However I would like to add another feature to my many to many relation and that is a 'comment' that gives some more info to the object relation.</p>  <p>I have two models:</p>  <p>Article [id, title, text] Category [id, title]</p>  <p>And this is a many to many relation so I create a pivot table as <code>article_category</code>. This table has two columns <code>article_id</code> and <code>category_id</code> and they are connected via functions in model as:</p>  <p>Article.php:</p>  <pre><code>public function categories() {     return $this-&gt;belongsTo('App\Category'); } </code></pre>  <p>&amp; Category.php</p>  <pre><code>public function articles() {     return $this-&gt;belongsTo('App\Article'); } </code></pre>  <p>However I would like to add another field called <code>comment</code> to the pivot table where I could describe why this Article was added to this specific Category. Adding a column is not a problem but I don't know how to retrieve this comment from, lets say, Article instance:</p>  <pre><code>$articleCategoryComment = Article::find(1)-&gt;commentFromPivotTable; </code></pre>  <p>I could always define another oneToMany relation, and create another table to save the comment with fields <code>[artice_id,category_id,comment]</code> but I am wondering is there a better/simpler way.</p>  <p>Also, any good resource on database structuring will be greatly appreciated. I would prefere bunch of examples on how to do stuff right way in MySQL but a book that explains things from scratch is also good recommendation. However, at the moment I won't have time to go too deep but it will be bookmarked for future reading.</p>  <p>Thanks!</p>