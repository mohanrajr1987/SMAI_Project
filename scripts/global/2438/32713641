<p>In my symfony 2.7 application, I have the user entity based on <a href="https://github.com/FriendsOfSymfony/FOSUserBundle" rel="nofollow">FOSUserBundle</a>. A user have to be connected in order to have access to an addAction() form.</p>  <p>My User entity is linked with another entity named parc. This is the code of my two entities.</p>  <p><strong>Users.php</strong></p>  <pre><code>class Users extends BaseUser {     /**      * @ORM\Id      * @ORM\Column(type="integer")      * @ORM\GeneratedValue(strategy="AUTO")      */     protected $id;      public function __construct()     {         parent::__construct();         $this-&gt;parcs = new \Doctrine\Common\Collections\ArrayCollection();     }      /**      * @var \Doctrine\Common\Collections\Collection      *      * @ORM\ManyToMany(targetEntity="Parcs", inversedBy="users")      * @ORM\JoinTable(name="users_parcs",      *   joinColumns={      *     @ORM\JoinColumn(name="user_id", referencedColumnName="id")      *   },      *   inverseJoinColumns={      *     @ORM\JoinColumn(name="parc_id", referencedColumnName="id")      *   }      * )      */     private $parcs;      /**      * Get parcs      *      * @return \Doctrine\Common\Collections\Collection      */     public function getParcs()     {         return $this-&gt;parcs;     }      /**      * Set parcs      *      * @return \Doctrine\Common\Collections\Collection      */     public function setParcs($parcs)     {         return $this-&gt;parcs;     } </code></pre>  <p><strong>Parcs.php</strong></p>  <pre><code>class Parcs {     /**      * @var integer      *      * @ORM\Column(name="id", type="integer", nullable=false)      * @ORM\Id      * @ORM\GeneratedValue(strategy="IDENTITY")      */     private $id;      /**      * @var \Doctrine\Common\Collections\Collection      *      * @ORM\ManyToMany(targetEntity="Users", mappedBy="parcs")      */     private $users;      public function __construct()     {       $this-&gt;users = new \Doctrine\Common\Collections\ArrayCollection();     }  //rest of my entity attributes, object, properties etc  // getters and setters      /**      * Get users      *      * @return \Doctrine\Common\Collections\Collection      */     public function getUsers()     {         return $this-&gt;users;     }      /**      * Set users      *      * @return \Doctrine\Common\Collections\Collection      */     public function setUsers($users)     {         return $this-&gt;users;     }     /**     * Add user      *      * @param \MySpace\MyBundle\Entity\Users $user      *      * @return Parcs      */     public function addUser(\MySpace\MyBundle\Entity\Users $user)     {         $this-&gt;users[] = $user;          return $this;     } </code></pre>  <p>Using the FOSUserBundle, in order to access to the connected user, in my twig view I make this: <code>{{ app.user.username }}</code>, which returms me the username of the current user.</p>  <p>Now, I would like to retrieve this value in my symfony form (for the field user) when I would like to add a parc. This my <code>parcsType.php</code> form:</p>  <pre><code>public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             -&gt;add('parcName')             -&gt;add('users')         ;     } </code></pre>  <p>This is my form in the twig view:</p>  <pre><code>&lt;form action="{{ path('addParcs_process') }}" method="POST" {{ form_enctype(form) }}&gt;   &lt;div&gt;     {{ form_label(form.parcName, "Enter the parc name: ", {'label_attr': {'class': 'control-label'}}) }}     {{ form_errors(form.parcName) }}     {{ form_widget(form.parcName) }}   &lt;/div&gt;   &lt;div&gt;     {{ form_label(form.users, "Vous ajoutez ce parc en tant que: ", {'label_attr': {'class': 'control-label'}}) }}     {{ form_errors(form.users) }}     {{ form_widget(form.users, {'attr': {'value': app.user.username }}) }}   &lt;/div&gt;   &lt;input type="submit" value="Ajouter" class="btn btn-success"/&gt; &lt;/form&gt; </code></pre>  <p>As you can see, I set the default value of my user field with <code>{{ app.user.username }}</code>, and it works, my user field returns me the current user. But when I submit the form, the user field and association (<strong>ManyToMany</strong>) between <code>Parcs.php</code> and <code>Users.php</code> are not persisted/flushed.</p>  <p>This is my controller code:</p>  <pre><code>public function addParcsAction() {      if (!$this-&gt;get('security.context')-&gt;isGranted('ROLE_EDIT')) {       throw new HttpException("403");     }      $em=$this-&gt;getDoctrine()-&gt;getManager();     $parc = new Parcs;      $form=$this-&gt;createForm(new ParcsType(), $parc);     $form-&gt;add('user');     $request = $this-&gt;getRequest();      if ($request-&gt;isMethod('POST') | ($form-&gt;isValid())) {              $form-&gt;bind($request);              $currentUser=$this-&gt;container-&gt;get('security.context')-&gt;getToken()-&gt;getUser();             $parc-&gt;setUsers($currentUser);              $parc = $form-&gt;getData();             $em-&gt;persist($parc);             $em-&gt;flush();              return $this-&gt;redirect($this-&gt;generateUrl('indexParc'));         }      else {             return $this-&gt;render('MySpaceMyBundle:Parcs:addParcs.html.twig', array('form' =&gt; $form-&gt;createView() ));          } } </code></pre>  <p>the submission works well, when I enter value for parc name the data is registered in my database, but not the users value and the ManyToMany association.</p>