<p>I defined a many-to-many relation between two entities with a composite key. The problem is that when I get the join object it is filtered with only one side of the relation and not both side. </p>  <p>The picture makes the problem clearer.  Here what im looking for is dtid=185 and prid=352 but what I get from many-to-many relation is two highlighted rows.</p>  <p><a href="http://i.stack.imgur.com/Y9oIJ.jpg" rel="nofollow"><img src="http://i.stack.imgur.com/Y9oIJ.jpg" alt="enter image description here"></a></p>  <p>Entiry D:</p>  <pre><code>@OneToMany(cascade=CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "d", orphanRemoval = true) private List&lt;DP&gt; dp = new ArrayList&lt;DP&gt;(); </code></pre>  <p>Entity P:</p>  <pre><code>@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "p") private List&lt;DP&gt; dp = new ArrayList&lt;DP&gt;(); </code></pre>  <p>PK class:</p>  <pre><code>public class DPPK implements Serializable{     private Integer d;     private Integer p; } </code></pre>  <p>Join:</p>  <pre><code>@IdClass(DPPK.class) @Entity @Table(name = "definition_property") @NamedQueries({     @NamedQuery(name = "DP.findAll", query = "SELECT d FROM DP d")}) public class DefinitionProperty extends AbstractEntity{      @Id     @JoinColumn(name = "dtid", referencedColumnName = "id")     @ManyToOne(optional = false)     private D d;     @Id     @JoinColumn(name = "prid", referencedColumnName = "id")     @ManyToOne(optional = false)     private P p;      @Column(name = "initial_value")     @Basic(optional = false)     private String initialValue; </code></pre>