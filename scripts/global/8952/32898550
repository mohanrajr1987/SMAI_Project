<p>Let's say that I have an Android library that has static class Foo in it. Foo will hold data (like a Map), and will have an Add function that will take a String key and an Object object (Example, Foo.Add("Test1",1)). You can also retrieve the item by calling Foo.Get("Test1") and it will return the item associated with Test1</p>  <p>I have 2 seperate apps that have this library included in their source code.</p>  <p>If in App 1 I call Foo.Add("Test1",1). In App 2 if I call Foo.Get("Test1") will I get a null pointer exception or will I get 1?</p>  <p>I am not sure exactly how static classes in included libraries work, scope wise.</p>  <p>I don't want to hear why this is good, or bad, or how this goes against whatever you think your religion is, or that Jazz. I am curious about the problem I have proposed.</p>