<p>I'm accessing a method of C# from C now. Below is some snippet of code in C#.</p>  <pre><code>IntPtr pFunc = Marshal.GetFunctionPointerForDelegate (     new DelegateForMyMethodInCsharp (         MyMethodInCsharp     ) );  setFuncPtr(pFunc); </code></pre>  <p>setFuncPtr() is a function of a C library to set the pointer of a C# method. After this code I can call the C# method in the C library whenever I want without any problems but I'm not sure if this is okay.</p>  <p>When using pointers for variables stored in heap in C#, the keyword 'fixed' must be used due to GC. Because the stack section of memory contains methods, it makes sense for me to write code like above. But because I haven't seen people write that way yet, I hope to hear your opinions.</p>  <p>This is a very simple question, but a very important question to me. I don't want to write unsafe code.</p>