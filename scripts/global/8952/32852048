<p>I'm writing code for a shared library on Android in unmanaged C++ and want to know the path of the <code>.so</code> file <strong>programatically</strong> when running because I have a plan to use it in some other projects too. I searched and tried everything I could find for hours but all failed.</p>  <p>Example 1.</p>  <pre><code>#include &lt;android/log.h&gt; #include &lt;unistd.h&gt;  void getCurrent() {     char result[PATH_MAX];     if( readlink("/proc/self/exe", result, PATH_MAX) &gt; 0)         __android_log_write(ANDROID_LOG_INFO, "MyLib", result); } </code></pre>  <p>Example 2.</p>  <pre><code>void getCurrent() {     char result[PATH_MAX];     getcwd(result, PATH_MAX);     __android_log_write(ANDROID_LOG_INFO, "MyLib", result); } </code></pre>  <p>First one didn't work at all. I don't know what it means but also tried with "/proc/self/maps" too.</p>  <p>Second one returns just "/", and I know <code>getcwd()</code> doesn't return the real file path but just the path where it is called.</p>  <p><strong>Are there functions for Android or any environment variables?</strong></p>  <p>FYI, the <code>.so</code> library file is used in a Unity3D project, but not in an Android Studio Project.</p>