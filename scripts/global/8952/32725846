<p>I've been looking into this for quite a long time and still havent found any satisfying solutions.  We have a few shared libraries (.csprojs) which also have dependencies on each other as well as 3rd party dlls.  I want to have these shared projects referenced in several .sln files.  </p>  <p>In the past we have tried to make this work with NuGet.  We made all our shared components packages and had a local feed.  However, when we wanted to update our shared components it would often mess up in the update process and wasn't reliable.  It is causing us more headaches than its worth and honestly makes us not want to add Shared code into our shared libraries.</p>  <p>So, now I'm believing its better to just have a reference to the shared project in each solution, thats easy enough but now theres a further issue:</p>  <p>We use feature branching and the shared code isn't part of the branch.  We have a structure similar to the following:</p>  <blockquote> <pre><code>/App1   /Development  (Folder that just contians Main branch)      /Main   /Features   (Folder that contains all Features)      /F1 /App2   /Development      /Main   /Features      /F1      /F2 /Shared    /Development      /Main </code></pre> </blockquote>  <p>However, If we make changes to the shared in any of the features - and it is pointing to the code in /Shared/Development/Main then it just updated for all of my features and we dont keep a record of shared changes.  </p>  <p>What is the right way to solve these issues?  Is there a better way to share components between solutions?  </p>