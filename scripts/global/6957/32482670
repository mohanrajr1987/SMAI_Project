<p>I'm in the process of optimizing my shader code for rendering large triangle strips. It has been suggested to me that I should try to use low precision datatypes for my vertex attributes where possible so I started experimenting. I reduced some components from highp to lowp, but didn't get any serious performance improvements. So I used glGetShaderPrecisionFormat to get the ranges and precisions of the formats, however I received the same values for highp, mediump and lowp, that means for example</p>  <pre><code>int rangehigh[2], precisionhigh; glGetShaderPrecisionFormat(GL_VERTEX_SHADER, GL_HIGH_FLOAT, rangehigh, &amp;precisionhigh);  int rangemedium[2], precisionmedium; glGetShaderPrecisionFormat(GL_VERTEX_SHADER, GL_MEDIUM_FLOAT, rangemedium, &amp;precisionmedium);  int rangelow[2], precisionlow; glGetShaderPrecisionFormat(GL_VERTEX_SHADER, GL_LOW_FLOAT, rangelow, &amp;precisionlow); </code></pre>  <p>that rangehigh/rangemedium/rangelow all have the same values as well as precisionhigh, precisionmedium and precisionlow.</p>  <p>Does this mean that using a mediump or a lowp in place of a highp will not be faster at all?</p>  <p>Regards</p>