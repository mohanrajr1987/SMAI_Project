<p>I am trying to implement a simple raycasting volume rendering in WebGL.</p>  <p>It is kind of working, but there are some artifacts when you rotate the volume around (i.e. the head appears deformed).</p>  <p><a href="http://i.stack.imgur.com/XZ5yd.png" rel="nofollow"><img src="http://i.stack.imgur.com/XZ5yd.png" alt="enter image description here"></a></p>  <p>Live demo: <a href="http://fnndsc.github.io/vjs/#shaders_raycasting_adibrain" rel="nofollow">http://fnndsc.github.io/vjs/#shaders_raycasting_adibrain</a></p>  <p>GLSL Code used for debugging: <a href="https://github.com/FNNDSC/vjs/blob/master/src/shaders/shaders.raycasting.secondPass.frag" rel="nofollow">https://github.com/FNNDSC/vjs/blob/master/src/shaders/shaders.raycasting.secondPass.frag</a></p>  <p>Simplified version of the code:</p>  <pre><code>for(int rayStep = 0; rayStep &lt; maxSteps; rayStep++){    // map world coordinates to data coordinates   vec4 dataCoordinatesRaw = uWorldToData * currentPosition;   ivec3 dataCoordinates = ivec3(int(floor(dataCoordinatesRaw.x)), int(floor(dataCoordinatesRaw.y)), int(floor(dataCoordinatesRaw.z)));    float intensity = getIntensity(dataCoordinates);    // we have the intensity now   vec3 colorSample = vec3(intensity);   float alphaSample = intensity;    accumulatedColor += (1.0 - accumulatedAlpha) * colorSample * alphaSample;   accumulatedAlpha += alphaSample;    //Advance the ray.   currentPosition += deltaDirection;   accumulatedLength += deltaDirectionLength;    if(accumulatedLength &gt;= rayLength || accumulatedAlpha &gt;= 1.0 ) break; } </code></pre>  <p>I do not understand what could explain those artifacts.</p>  <p>Could it be because I do not use gradients to modulate opacity/color?</p>  <p>Any hint would be very welcome.</p>