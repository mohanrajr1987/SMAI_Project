<p>I have a Mac running OS X Yosemite with GLFW 3 and OpenGL 4.1. I've got this program:</p>  <pre><code>#include &lt;glm/gtc/matrix_transform.hpp&gt; #include &lt;glm/gtx/string_cast.hpp&gt; #include &lt;stdio.h&gt;  #include "myglutils.hpp"  int main() {     if (!setupGLFW()) return 1;     setupApple();      GLFWwindow* window = glfwCreateWindow(640, 480, "Perspective", 0, NULL);     if (!window) {         fprintf(stderr, "Failed to create window.\n");         glfwTerminate();         return 0;     }      glfwMakeContextCurrent(window);      if (!setupGLEW()) return 1;      glClearColor(0.2, 0.0, 0.8, 1.0);      const GLfloat vertices[] = {         -1.0, -1.0,          1.0, -1.0,          0.0,  1.0     };      const GLchar* vert_shader =     "#version 410 core\n"     "in vec2 pos;"     "uniform mat4 MVP;"     "void main() {"     "    gl_Position = MVP * vec4(pos, 0.0, 1.0);"     "}";      const GLchar* frag_shader =     "#version 410 core\n"     "out vec4 color;"     "void main() {"     "    color = vec4(1.0, 0.0, 0.0, 1.0);"     "}";      GLuint shader = getShader(vert_shader, frag_shader);      GLuint vbo;     glGenBuffers(1, &amp;vbo);     glBindBuffer(GL_ARRAY_BUFFER, vbo);     glBufferData(GL_ARRAY_BUFFER, 6 * sizeof(GLfloat), vertices, GL_STATIC_DRAW);      GLuint vao;     glGenVertexArrays(1, &amp;vao);     glBindVertexArray(vao);     glVertexAttribPointer(0, 2, GL_FLOAT, GL_FALSE, 0, NULL);      GLuint MVPID = glGetUniformLocation(shader, "MVP");      glm::mat4 perspective = glm::perspective(45.0, 4.0 / 3.0, 0.1, 100.0);     glm::mat4 view = glm::lookAt(glm::vec3(4.0, 3.0, 3.0), glm::vec3(0.0, 0.0, 0.0), glm::vec3(0.0, 1.0, 0.0));     glm::mat4 MVP = perspective * view;      while (!glfwWindowShouldClose(window) &amp;&amp; glfwGetKey(window, GLFW_KEY_ESCAPE) != GLFW_PRESS) {         glClear(GL_COLOR_BUFFER_BIT);         glUseProgram(shader);         glUniformMatrix4fv(MVPID, 1, GL_FALSE, &amp;MVP[0][0]);         glBindVertexArray(vao);         glDrawArrays(GL_TRIANGLES, 0, 6);          glfwSwapBuffers(window);         glfwPollEvents();     }      glDeleteVertexArrays(1, &amp;vao);     glDeleteProgram(shader);     glfwTerminate();      return 0; } </code></pre>  <p>The functions <code>setupGLFW()</code>, <code>setupApple()</code>, and <code>setupGLEW()</code> aren't the problem. Neither is <code>getShader()</code>. I feel like my error is something silly like forgetting a simple OpenGL function call. What I'm trying to do is draw a triangle at a 3D angle.</p>  <p>Note: this program compiles perfectly, but only displays an empty blue screen. </p>