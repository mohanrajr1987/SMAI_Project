<p>I made a generic stack class based on a singly linked list and am trying to use it to check user input for balanced delimiters. I am just checking these delimiters: (){}[]</p>  <p>Stack Code</p>  <pre><code>public class SLStack&lt;T&gt; {  //initializes the first node private SLStackNode&lt;T&gt; head; //initializes the first node  //constructor initializes the first node as null to simulate an empty stack public SLStack(){     head = null; }  //inner node class public static class SLStackNode&lt;T&gt;{     public T data;     public SLStackNode&lt;T&gt; next; }  //adds an element to the top of the stack public void push(T value){     SLStackNode&lt;T&gt; newNode = new SLStackNode&lt;&gt;();     newNode.data = value;     newNode.next = head;     head = newNode; }  //removes an element from the top of the stack public T pop(){     if (head == null){         throw new IllegalStateException("The list is empty.");     }     T value = head.data;     head = head.next;     return value; }  //checks the element at the top of the stack public T top(){     if (head == null){         throw new IllegalStateException("The list is empty.");     }     T value = head.data;     return value; }  public boolean isEmpty(){     return head ==  null; }   public void printStack(SLStackNode&lt;T&gt; node, int depth) {     if (node.next != null) {         System.out.println(depth + " : " + node.data); //recurses through the stack         //printStack(node.next);     }     System.out.println(depth + " : " + node.data); //recursive base case } } </code></pre>  <p>Balance Tester Code</p>  <pre><code>public class Balanced { public static void main(String[] args) {     SLStack&lt;ExpressionScanner.Token&gt; delimStack = new SLStack&lt;&gt;();     System.out.println("Enter one expression per line.");     System.out.println("End the program with a period on a line by itself.");     ExpressionScanner escan = new ExpressionScanner(new Scanner(System.in));     while (escan.hasNext()) {         ExpressionScanner.Token token = escan.next();          if (token.getType() == ExpressionScanner.Token.Type.OP || token.getType() == ExpressionScanner.Token.Type.VAR){             //ignore these tokens             continue;         }          if (token.getType() == ExpressionScanner.Token.Type.DELIM_OPEN){             //push opening delimiter to the stack             delimStack.push(token);         }          if (token.getType() == ExpressionScanner.Token.Type.DELIM_CLOSE){             //look for matching opening delimiter in the stack and pop it from the stack             if (token == delimStack.top()){                 delimStack.pop();             }else{                 throw new IllegalStateException("Imbalanced delimiter detected.");             }         }          if (delimStack.isEmpty()){             System.out.println("Delimiters are balanced.");         }else{             System.out.println("Imbalanced delimiter detected.");         }          //System.out.println(token);     } } } </code></pre>  <p>When I run the tester it always says that the delimiter is imbalanced no matter what it is. Even doing a single opening delimiter causes it to say there is an imbalance but it doesn't throw the exception. It throws the exception on a single closing delimiter or if there is more than one closing delimiters. If I have two opening delimiters it doesn't terminate either.</p>  <p>I can post the code for the ExpressionScanner also if anyone needs it.</p>