<p>So, have an assignment where I need to solve the N-Queens* problem using the stack.</p>  <p>*N-Queens problem: you have a chessboard with N rows/columns/queens. You must place each queen so that it cannot attack any of the others on the board.</p>  <p>I created a Queen class just to store the row and column positions for each valid queen placed, and that is working fine. As far as I can tell, all of my sorting and checking logic is also fine. However, either in main or my solve function, I'm getting a Segmentation Fault, but only when I debug. When ran normally, it just exits. My debugger unfortunately doesn't let me go line by line, but I've manually done so and still can't figure this out.</p>  <pre><code>void solve(int k, int N) { stack&lt;Queen&gt; queenStack; if(k == N)     {     while(!queenStack.empty())         {         cout &lt;&lt; queenStack.top().rowPos &lt;&lt; ", " &lt;&lt; queenStack.top().colPos &lt;&lt; endl;         queenStack.pop();         }//end while      }//endif  else     {     for (int i = 0;i &lt; N; i++)         {         if (isSafe(k,i))             {             Queen queen(k,i);             queenStack.push(queen);             solve(k++,N);             }//end if         else             {             if(queenStack.empty())                 {                 break;                 }//end if             else                 {                 queenStack.pop();                 k--;                 }//end else             }//end else          }//end for     }//end else }//end void </code></pre>  <p>then my main:</p>  <pre><code>int main() { int N = 0; cout &lt;&lt; "Please pick an integer 3 or greater and less than whatever you think won't crash your computer." &lt;&lt; endl; cin &gt;&gt; N; while (N &lt; 3)     {     cout &lt;&lt; "Please pick an integer 3 or greater and less than whatever you think won't crash your computer." &lt;&lt;     endl;     cin &gt;&gt; N;     }//end while solve(0,N); return 0; }//end main </code></pre>  <p>my ifSafe is a bool function that just does checks based on row, which I pass in as an int, and then return the true/false for the loop.</p>