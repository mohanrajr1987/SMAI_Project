<p>I am trying to write a program that uses a stack. The base class <code>stack</code> has some basic functions of a stack. A child class <code>Extended_Stack</code> inherits <code>stack</code> and has additional functions. In my main class when I try to instantiate an object of type <code>Extended_Class</code> it says that the object <code>myStack</code> was not declared in this scope. I know that I am using inheritance wrong and have an error in my header file but I'm not sure what it is.</p>  <p>Base Class:</p>  <pre><code>class Extended_Stack : public Stack {  Stack::Stack() {   count = 0; } //constructor </code></pre>  <p>ect...</p>  <p>Child Class:</p>  <pre><code>#include "Extended_Stack.h" #include "stack.h" class Extended_Stack : public Stack {    void clear()    //Pre: None   //Post: Stack is cleared and cout is set to 0   {     count=0;    } </code></pre>  <p>ect...</p>  <p>Main:</p>  <pre><code>#include "Extended_Stack.h" #include "stack.h" typedef int Stack_entry;  int main(void) {   Extended_Stack myStack;//error on this line   int i = 0;    int temp = 0; </code></pre>  <p>Header File of Extended_Stack:</p>  <pre><code> #include &lt;iostream&gt;  using namespace std;  class Extended_Stack : public stack {  public:   void clear (void);   bool full(void) const;   int size(void) const;   int sum(void) const;   }; </code></pre>