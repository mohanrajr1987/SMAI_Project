<p>Here, <code>s[20][20]</code> is declared in function <code>pre_post</code>. But the <code>push</code> operation involves pushing a string into stack s. How is that done? Why cant we execute the program with a 1D array for s like <code>s[20]</code> for stack??</p>  <pre><code>#include&lt;stdio.h&gt; #include&lt;string.h&gt; #include&lt;ctype.h&gt; void push(char item[],int *top,char s[][20])    //Pushes the symbol item onto stack s {   *top=*top+1;                                  //Top is incremented   strcpy(s[*top],item);                         //Item is actually written onto stack }  char *pop(int *top,char s[][20])                //Pops out the topmost element of stack s {   char *item;   item=s[*top];   *top=*top-1;   return item; }  void pre_post(char prefix[],char postfix[])     //Function to convert prefix to postfix {   char s[20][20];   int top,i;   char symbol,ch[2];   char *op1,*op2;    top=-1;   for(i=strlen(prefix)-1;i&gt;=0;i--)              //Scans the expression in   reverse manner   {     symbol=prefix[i];                           //The last symbol is scanned first     ch[0]=symbol;     ch[1]='\0';     switch (symbol)                             //Checks whether the symbol is one among fiveoperators given.(next line)                                                 //If yes then execute the corresponding statements     {       case '+':       case '-':       case '*':       case '/':       case '^':         op1=pop(&amp;top,s);                        //The topmost operand of stack s is popped and stored as op1         op2=pop(&amp;top,s);                        //The next operand of stack s is popped and stored as op2          strcpy(postfix,op1);                    //Copies the op1 into postfix         strcat(postfix,op2);                    //Concatenates the op2 with postfix         strcat(postfix,ch);                     //Concatenates the ch with postfix         push(postfix,&amp;top,s);                   //Pushes the postfix onto stack s         break;       default:         if(isalnum(symbol))                     //It means that switch case is not satisfied i.e. symbol is a operand           push(ch,&amp;top,s);                      //Pushes the operand onto the stack s      }   }  }  int main() {   char prefix[20];   char postfix[20];   printf("\n\n Enter the prefix expression \n\n");   gets(prefix);   pre_post(prefix,postfix);   printf("\n\n The postfix expression is %s \n\n",postfix);   return 0; } </code></pre>