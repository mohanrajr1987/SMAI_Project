<p>I am having some trouble getting my balance parentheses checker to work. My error is in the following code</p>  <pre><code>//while the input is not EOF, take in values. while(input[i]!= '\0') {   //IF input  is an opener, push onto stack   if (input[i] == '{' ||       input[i] == '[' ||       input[i] == '(' ||       input[i] == '&lt;'){     push(&amp;st2, input[i]);   } else if (input[i] == '}' ||              input[i] == ']' ||              input[i] == ')' ||              input[i] == '&gt;'){     if (isEmpty(st2)){       balance = 0;       break;     }   }   //if input is a closer     if (!((input[i]=='}' &amp;&amp; top(st2) == '{') ||         (input[i]==']' &amp;&amp; top(st2) == '[') ||         (input[i]==')' &amp;&amp; top(st2) == '(') ||         (input[i]=='&gt;' &amp;&amp; top(st2) == '&lt;'))){     balance = 0;     break;   }    i++;   errorpos = i;   if (input[i] =='\0'){     if(!isEmpty(st2)){       balance= FALSE;     }   } } </code></pre>  <p>My stack implementation and getting user values works fine, but the conditionals do not. For example If I am to enter in { as input, the { is pushed ontop of the stack, however it does not check if the stack is empty at all after the while loop. I have tried moving the isEmpty evaluation outside the while loop to see if that was the problem, but it behaves the same. Basically, no matter what I enter, the expression is regarded as balanced, so it seems to me that my conditionals are wrong, however I can't figure out what to do from here.</p>