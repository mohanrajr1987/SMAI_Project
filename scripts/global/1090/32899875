<p>Yes this is for homework. I have to reverse a Singly Linked List. Tutor/Friend told me I should use a stack so first one in is the last one out. I have this which isn't much at all and I don't have a clue what to do now. The GameEntry list is already provided. Any pushes in the right direction?</p>  <pre><code>    package project;  import java.util.LinkedList; import dsaj.arrays.GameEntry; import net.datastructures.*;  public class reverse {  public static void main(String[] args)  {SinglyLinkedList&lt;GameEntry&gt;list = new SinglyLinkedList&lt;GameEntry&gt;();   list.addFirst(new GameEntry ("A", 0 )); list.addFirst(new GameEntry ("B", 1 )); list.addFirst(new GameEntry ("C", 2 )); list.addFirst(new GameEntry ("D", 3 )); list.addFirst(new GameEntry ("E", 4 )); list.addFirst(new GameEntry ("F", 5 )); list.addFirst(new GameEntry ("G", 6 )); list.addFirst(new GameEntry ("H", 7 )); list.addFirst(new GameEntry ("I", 8 )); list.addFirst(new GameEntry ("J", 9 )); System.out.printf("\nList before reverse\n %s", list);  SinglyLinkedList&lt;GameEntry&gt;list2 = new SinglyLinkedList&lt;GameEntry&gt;(); LinkedStack&lt;GameEntry&gt;stack =new LinkedStack&lt;GameEntry&gt;();                  }    } </code></pre>