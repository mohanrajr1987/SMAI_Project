<p>I try to create an FTP server with java to test an other aplication, but when i try to start the server, it's crashes. It's the code:</p>  <p>Imports:</p>  <pre><code>import java.io.File; import java.io.IOException; import java.util.ArrayList; import java.util.HashMap; import java.util.List; import java.util.Map;  import org.apache.ftpserver.FtpServer; import org.apache.ftpserver.FtpServerFactory; import org.apache.ftpserver.ftplet.Authority; import org.apache.ftpserver.ftplet.FtpException; import org.apache.ftpserver.ftplet.FtpReply; import org.apache.ftpserver.ftplet.FtpRequest; import org.apache.ftpserver.ftplet.FtpSession; import org.apache.ftpserver.ftplet.Ftplet; import org.apache.ftpserver.ftplet.FtpletContext; import org.apache.ftpserver.ftplet.FtpletResult; import org.apache.ftpserver.ftplet.UserManager; import org.apache.ftpserver.listener.ListenerFactory; import org.apache.ftpserver.usermanager.PasswordEncryptor; import org.apache.ftpserver.usermanager.PropertiesUserManagerFactory; import org.apache.ftpserver.usermanager.impl.BaseUser; import org.apache.ftpserver.usermanager.impl.WritePermission; </code></pre>  <p>Code:</p>  <pre><code>public class FTPServerTest {   public static void main(String[] args) {     // TODO Auto-generated method stub     FtpServerFactory serverFactory = new FtpServerFactory();     ListenerFactory factory = new ListenerFactory();     factory.setPort(36000);     serverFactory.addListener("default", factory.createListener());     PropertiesUserManagerFactory userManagerFactory = new PropertiesUserManagerFactory();     userManagerFactory.setFile(new File("Z:\\Winteco98\\FTPUssers\\myusers.properties"));     userManagerFactory.setPasswordEncryptor(new PasswordEncryptor()     {//We store clear-text passwords in this example              @Override             public String encrypt(String password) {                 return password;             }              @Override             public boolean matches(String passwordToCheck, String storedPassword) {                 return passwordToCheck.equals(storedPassword);             }         });         //Let's add a user, since our myusers.properties files is empty on our first test run         BaseUser user = new BaseUser();         user.setName("ProdeWin");         user.setPassword("ProdeWinW98");         user.setHomeDirectory("Z:\\Winteco98\\FTPUssers");         List&lt;Authority&gt; authorities = new ArrayList&lt;Authority&gt;();         authorities.add(new WritePermission());         user.setAuthorities(authorities);         UserManager um = userManagerFactory.createUserManager();         try         {             um.save(user);//Save the user to the user list on the filesystem         }         catch (FtpException e1)         {             //Deal with exception as you need         }         serverFactory.setUserManager(um);         Map&lt;String, Ftplet&gt; m = new HashMap&lt;String, Ftplet&gt;();         m.put("miaFtplet", new Ftplet()         {              @Override             public void init(FtpletContext ftpletContext) throws FtpException {                 //System.out.println("init");                 //System.out.println("Thread #" + Thread.currentThread().getId());             }              @Override             public void destroy() {                 //System.out.println("destroy");                 //System.out.println("Thread #" + Thread.currentThread().getId());             }              @Override             public FtpletResult beforeCommand(FtpSession session, FtpRequest request) throws FtpException, IOException             {                  //System.out.println("beforeCommand " + session.getUserArgument() + " : " + session.toString() + " | " + request.getArgument() + " : " + request.getCommand() + " : " + request.getRequestLine());                 //System.out.println("Thread #" + Thread.currentThread().getId());                  //do something                 return FtpletResult.DEFAULT;//...or return accordingly             }              @Override             public FtpletResult afterCommand(FtpSession session, FtpRequest request, FtpReply reply) throws FtpException, IOException             {                 //System.out.println("afterCommand " + session.getUserArgument() + " : " + session.toString() + " | " + request.getArgument() + " : " + request.getCommand() + " : " + request.getRequestLine() + " | " + reply.getMessage() + " : " + reply.toString());                 //System.out.println("Thread #" + Thread.currentThread().getId());                  //do something                 return FtpletResult.DEFAULT;//...or return accordingly             }              @Override             public FtpletResult onConnect(FtpSession session) throws FtpException, IOException             {                 //System.out.println("onConnect " + session.getUserArgument() + " : " + session.toString());                 //System.out.println("Thread #" + Thread.currentThread().getId());                  //do something                 return FtpletResult.DEFAULT;//...or return accordingly             }              @Override             public FtpletResult onDisconnect(FtpSession session) throws FtpException, IOException             {                 //System.out.println("onDisconnect " + session.getUserArgument() + " : " + session.toString());                 //System.out.println("Thread #" + Thread.currentThread().getId());                  //do something                 return FtpletResult.DEFAULT;//...or return accordingly             }         });         serverFactory.setFtplets(m);         //Map&lt;String, Ftplet&gt; mappa = serverFactory.getFtplets();         //System.out.println(mappa.size());         //System.out.println("Thread #" + Thread.currentThread().getId());         //System.out.println(mappa.toString());         FtpServer server = serverFactory.createServer();         try         {             server.start();//Your FTP server starts listening for incoming FTP-connections, using the configuration options previously set         }         catch (FtpException ex)         {             //Deal with exception as you need         }  } </code></pre>  <p>And, finaly, the error:</p>  <pre><code>Exception in thread "main" java.lang.NoClassDefFoundError: org/apache/mina/filter/executor/OrderedThreadPoolExecutor     at org.apache.ftpserver.FtpServerFactory.&lt;init&gt;(FtpServerFactory.java:51)     at mainPackage.FTPServerTest.main(FTPServerTest.java:32) Caused by: java.lang.ClassNotFoundException: org.apache.mina.filter.executor.OrderedThreadPoolExecutor     at java.net.URLClassLoader.findClass(Unknown Source)     at java.lang.ClassLoader.loadClass(Unknown Source)     at sun.misc.Launcher$AppClassLoader.loadClass(Unknown Source)     at java.lang.ClassLoader.loadClass(Unknown Source)     ... 2 more </code></pre>  <p>I haven't idea where does the error, please, help me.</p>