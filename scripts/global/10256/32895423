<p>I am trying to send a char array through the selector method in NSTimer. My targetMethod will take the first 36 values of the array and perform its function every interval, incrementing by 36 every time until it reaches the end of the char array. However, it appears as though NSTimer only allows you send NSObjects with userInfo when using the following format:</p>  <pre><code>[NSTimer scheduledTimerWithTimeInterval:2.0     target:self     selector:@selector(targetMethod:)     userInfo:nil     repeats:NO] </code></pre>  <p>I haven't found a way to use NSDictionary to do it either, and I would prefer to not have to perform a costly conversion to an NSArray. </p>  <p>The char array that I am sending contains anywhere from 36-9500 values. Is it possible to use a char array with NSTimer? If not, is there a way I could use a global pointer to refer to an array which could then be accessed by the pointer within the targetMethod?</p>