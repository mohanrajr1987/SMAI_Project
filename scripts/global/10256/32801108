<p>I want to learn how to copy the contents of one string into another, and I want to make sure my interpretation of my code is correct.  The point of this exercise is learning, so I don't want to use STL implementations -- I want to learn the algorithms myself.</p>  <p>I have a class called CStudent that contains a private member variable named szName.</p>  <p>In my Main.cpp, I have some code that reads in a line of data using getLine, and extracts a certain amount of characters using a custom substr function.</p>  <p>I want to set the contents of szName to the result of the substr function, but every implementation I've tried thus far just results in only a single character being copied.</p>  <p>Here are the pertinent parts of code:</p>  <pre><code>class CStudent { public:     void setName(char inName[]);     void setClass(char inClass[]);     void setGPA(float inFloat);     char getName();     char getClass();     float getGPA();  private:     char szName[20] = {};     char szClass[10] = {};     float fGPA{ -1.0f }; };  // Custom strcpy to enable use of setters in class void strcpy(char inString[], char outString[], size_t outSize) {     unsigned int i = 0;     for (; ((inString[i] != '\0') &amp;&amp; (i &lt; (outSize))); i++)     {         outString[i] = inString[i];     }     outString[i] = '\0';  }  void CStudent::setName(char inName[]) {     strcpy(inName, szName, 20); }  // Custom substr to enable use of setters in class void substr(char inString[], char outString[], size_t outSize, int startPos, int endPos) {     int inStringPos = 0, outStringPos = 0;      //for (inStringPos = startPos, outStringPos = 0; outStringPos &lt; outSize;)     for (inStringPos = startPos, outStringPos = 0; inStringPos &lt; endPos;)     {         outString[outStringPos++] = inString[inStringPos++];     }     outString[outStringPos] = '\0';  } </code></pre>  <p>Main excerpt:</p>  <pre><code>int main() {     CStudent students[25]{};     CStudent freshmen[25]{};     CStudent sophomores[25]{};     CStudent juniors[25]{};     CStudent seniors[25]{};      // Read in data     fstream inputFile;     inputFile.open("input.txt");      for (int i = 0; i &lt; 25; i++)     {         char readLine[80] {};         inputFile.getline(readLine, 80);          char sName[20] {};         substr(readLine, sName, 20, 0, 19);  // Only reading first character         students[i].setName(sName);          char sClass[10] {};         substr(readLine, sClass, 10, 20, 29);         students[i].setClass(sClass); </code></pre>  <p>Where am I going wrong here?</p>  <p>I read the implementation of strcpy I've found in several locations and I can't seem to figure out where I went wrong.</p>  <p>Edit:  In the code comments I mention that it's substr that's only returning 1 char, but it's actually the setter - setName.</p>