<p>I want to convert String puzzle to a 2D Char Array, like a wordpuzzle. This is a part of the testclass:</p>  <pre><code>public class WordPuzzleTest {  WordPuzzle myPuzzle = null;  /**  * This function will initialize the myPuzzle variable before you start a new test method  * @throws Exception  */ @Before public void setUp() {     try {         this.myPuzzle = new WordPuzzle("VNYBKGSRORANGEETRNXWPLAEALKAPMHNWMRPOCAXBGATNOMEL", 7);     } catch (IllegalArgumentException ex) {             System.out.println("An exception has occured");             System.out.println(ex.getMessage());     }  }  /**  * Test the constructor of the {@link WordPuzzle} class  */ @Test public void testWordPuzzle() {         assertNotNull("The object failed to initialize", this.myPuzzle);         char[][] expectedArray = {{'V','N','Y','B','K','G','S'},                                  {'R','O','R','A','N','G','E'},                                  {'E','T','R','N','X','W','P'},                                  {'L','A','E','A','L','K','A'},                                  {'P','M','H','N','W','M','R'},                                  {'P','O','C','A','X','B','G'},                                  {'A','T','N','O','M','E','L'}};         assertArrayEquals(expectedArray, this.myPuzzle.getLetterArray()); } </code></pre>  <p>The following is the code I wrote to do this, but I get this error: java.lang.ArrayIndexOutOfBoundsException: 0</p>  <p>I'm not sure why this wouldn't work, but chances are I made a stupid mistake. Anyone any idea?</p>  <pre><code>public class WordPuzzle {      private String puzzle;     private int numRows;     private char [][] puzzleArray = new char[numRows][numRows];      public WordPuzzle(String puzzle, int numRows) {         super();         this.puzzle = puzzle;         this.numRows = numRows;          char[] puzzleChar;         puzzleChar=puzzle.toCharArray();          int index=0;         int i=0;         int j=0;         while (i&lt;numRows) {             while (j&lt;numRows) {                 puzzleArray[i][j] = puzzleChar[index];                 j++;                 index++;             }             i++;             j=0;         }        } </code></pre>