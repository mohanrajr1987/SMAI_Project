<p>I am trying to implement a straightforward code which return the respective MD5 for a given password:</p>  <pre><code>#include &lt;stdio.h&gt;  //Returns the MD5 hash for a given password char hash_password(char password){      FILE *fp;     char command [1024];     sprintf(command, "md5 &lt;&lt;&lt; '%c'", password);      fp = popen(command, "r");     if (fp == NULL) {         printf("Failed to run command\n" );     }      char hashed[1024];     fgets(hashed , 1024 , fp);     pclose(fp);     return hashed; }  int main(int argc, const char * argv[]) {     char hashed = hash_password("password");     printf("%s\n", hashed);     return 0; } </code></pre>  <p>My issues are the following:</p>  <ol> <li>I get a warning at <code>return hashed;</code> saying: "Incompatible pointer to integer conversion returning char[1024] from a function with result type char"</li> <li>I get a warning at <code>char hashed = hash_password("password");</code> saying: "Incompatible pointer to integer passing char[9] to a parameter of type char"</li> <li>The program returns <code>\320</code> which is not the correct hash result.</li> </ol>  <p>My two days of experience with C says the function will never return what I need since <code>hashed</code> will die with the end of the function, right? How can I get it fixed?</p>