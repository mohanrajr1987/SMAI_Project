<p>I am going to use SingalR with angular; my requirement is that just only one time gets a connection id as a singleton pattern and used all over a single app because in my case browser will load first time so that clientid maintains for the remaining views in the controller.</p>  <p>So the first problem is that I created factory which is shown below, but when I am using this factory I am getting the error:</p>  <blockquote>   <p>undefined factory.Uncaught ReferenceError: signalRHubProxy is not defined(â€¦).</p> </blockquote>  <p>I have done every include js file on index every thing setup on server side.</p>  <p>In given code my questions that how can I do. Any sample code?</p>  <ol> <li>why not getting factory methods.</li> <li>How can I utilize addChatMessage listener on every controller when ever any message come its activate.</li> </ol>  <p>Hope all things cleared.</p>  <p>One more thing if I am using this code working fine but my scenario is that which I defined above.</p>  <p>If I am on index page simple like this.</p>  <pre><code>index.html  $(function () {             $.connection.hub.url = Config._HubConnectionUrl;             $.connection.hub.logging = true;              var chat = $.connection.communicationHub;                         chat.client.addChatMessage = function (userId, message) {                 debugger                 console.log("wajih");             };              $.connection.hub.start().done(function () {                debugger                $("#clientId").text($.connection.hub.id);                          });         }); </code></pre>  <p>When I am sending any message addmessage event trigger, but the above I want to utilize on following structure on multiple controllers. Here is my code.</p>  <pre><code>RealTimeFactory.js Factory:-  'use strict';  var singalR = angular.module('signalRHubProxy', []);  singalR.factory('signalRHubProxy', function ($rootScope) {     function signalRHubProxyFactory(serverUrl, hubName, startOptions, $rootScope) {         var connection = $.hubConnection();         var proxy = connection.createHubProxy(hubName);         connection.start(startOptions).done(function () {               debugger         });          return {             on: function (eventName, callback) {                 proxy.on(eventName, function (result) {                     $rootScope.$apply(function () {                         if (callback) {                             callback(result);                         }                     });                 });             },             off: function (eventName, callback) {                 proxy.off(eventName, function (result) {                     $rootScope.$apply(function () {                         if (callback) {                             callback(result);                         }                     });                 });             },             invoke: function (methodName, callback) {                 proxy.invoke(methodName)                     .done(function (result) {                         $rootScope.$apply(function () {                             if (callback) {                                 callback(result);                             }                         });                     });             },             connection: connection         };     };      return signalRHubProxyFactory; });  My Global controller:-  var app = angular.module('sgApp.controllers', ['signalRHubProxy']); </code></pre>  <p>Now I want use this factory in my controllers but given error as I mentioned above.</p>  <pre><code>ChatController.js  app.controller('ChatCtrl', function ($rootScope, $scope, signalRHubProxy) {      //var clientHubProxy = signalRHubProxy(     //   signalRHubProxy.defaultServer, 'communicationHub',     //       { logging: true });      //clientHubProxy.on('addChatMessage', function (data) {     //    debugger     //    var x = clientHubProxy.connection.id;     //});  });  HomeController.js  app.controller('HomeCtrl', function ($rootScope, $scope, signalRHubProxy) {      //var clientHubProxy = signalRHubProxy(     //   signalRHubProxy.defaultServer, 'communicationHub',     //       { logging: true });      //clientHubProxy.on('addChatMessage', function (data) {     //    debugger     //    var x = clientHubProxy.connection.id;     //});  }); </code></pre>  <p>Here is ServerSide Code HUB:-</p>  <pre><code>public class CommunicationHub : Hub     {         public void SendTo(string userId, string message)         {             Clients.Client(userId).addChatMessage(userId, message);         }     } </code></pre>