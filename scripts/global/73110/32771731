<p>We have a Web Application that wants to make use of SignalR/Websockets in Asp.NET MVC. I am having difficulty understanding where the SignalR and/or Websockets end up in the directory structure that most the make sense and keeps to the separation of concerns (since SignalR/Websocket functions are technically like controllers).</p>  <p>So, is this more correct?</p>  <ul> <li>Controllers</li> <li>Model</li> <li>Views</li> <li>Roles</li> </ul>  <p>Or is this more correct?</p>  <ul> <li>Controllers  <ul> <li>Roles (subfolder)</li> </ul></li> <li>Views</li> <li>Model</li> </ul>  <p>Second question: does it make sense to name it "Roles"?  Or is this a case of where we call the Folder SignalR?</p>  <p>The reason why I ask is that there has been a lot of emphasis on directory structure of MVC applications, (Models, Views, etc), but there does not seem to be much direction on where to put the Roles classes.</p>