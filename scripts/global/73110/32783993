<p>I have a SignalR server hosted and running in a Owin Web API application running in Azure (Company Service App). From a separate web application, let's say application A (non Azure) I'm connecting to SignalR using the javascript generated proxies:</p>  <p>Where CompanyServiceBaseUrl is set to my site url: (e.g. "http:// mysite/companyservice")</p>  <pre><code>    &lt;script src="@Url.Content(CompanyServiceBaseUrl + "/Scripts/jquery.signalR-2.2.0.js")"&gt;&lt;/script&gt;     &lt;script src="@Url.Content(CompanyServiceBaseUrl + "/signalr/hubs")" type="text/javascript"&gt;&lt;/script&gt;      &lt;script type="text/javascript"&gt;     var hub = $.connection.perform;      hub.client.onToast = function () {         $("#copyOrganizationSuccessAlert").show();     };      $(document).ready(function() {         var event = document.createEvent('Event');         event.initEvent('onOrganizationLock', true, true);          onOrganizationLockEvent = function() {             document.dispatchEvent(event);         };          hub.client.onOrganizationLock = onOrganizationLockEvent;     });      $.connection.hub.start().done(function () {         hub.server.joinGroup(perform.company.application.clientId);     }); &lt;/script&gt; </code></pre>  <p>Here is my generated folder structure in my client:</p>  <p><a href="http://i.stack.imgur.com/InxFL.png" rel="nofollow"><img src="http://i.stack.imgur.com/InxFL.png" alt="enter image description here"></a></p>  <p>When I test locally the SignalR connectivity works fine, but when I test in my environment hosted in Azure connectivity fails.</p>  <p><strong>SignalR negotiate request (between App A and CompanyService):</strong></p>  <p><code>http://&lt;mysiteurl&gt;/signalr/negotiate</code> (notice that companyservice is missing from URL:</p>  <p><strong>it should be:</strong></p>  <pre><code>http://&lt;mysiteurl&gt;/companyservice/signalr/negotiate </code></pre>  <p>Here the Reverse proxy rule:</p>  <pre><code>   &lt;rule name="companyservice" stopProcessing="true"&gt;        &lt;match url="^companyservice/(.*)" /&gt;        &lt;conditions&gt;          &lt;add input="{CACHE_URL}" pattern="^(https?)://" /&gt;        &lt;/conditions&gt;        &lt;action type="Rewrite" url="https://myazuresite.azurewebsites.net/{R:1}" /&gt;        &lt;serverVariables&gt;          &lt;set name="HTTP_ACCEPT_ENCODING" value="" /&gt;        &lt;/serverVariables&gt;      &lt;/rule&gt;    &lt;/rules&gt; </code></pre>  <p>Question:</p>  <p>Why is my client connection.Url coming as "/signalr" instead of "/companyservice/signalr" when testing with my Azure site using a reverse proxy?</p>  <p>Finally, looking at this reported SignalR issue, looks like he is experience a very similar thing:</p>  <p><a href="https://github.com/SignalR/SignalR/issues/3287" rel="nofollow">SignalR doesn't work behind a Reverse Proxy</a></p>  <p>But I'd like to understand what he means by:</p>  <p>"<strong>If I use a Reverse-Proxy rule (scan and replace) and set "Url":"/NorthboundWebApiClient/signalr" everything works fine.</strong></p>  <p>I have tried establishing a connection <a href="http://www.asp.net/signalr/overview/guide-to-the-api/hubs-api-guide-javascript-client#genproxy" rel="nofollow">with and without generated proxies</a> specifying my connection url manually <code>var connection = $.hubConnection('/companyservice/signalr', {useDefaultPath: false});</code>, configuring CORS in the client side and no luck.</p>  <p>Here is a related post having problems with cross-domains:</p>  <p><a href="http://stackoverflow.com/questions/16875228/how-do-i-get-a-signalr-hub-connection-to-work-cross-domain">How do I get a SignalR hub connection to work cross-domain?</a></p>