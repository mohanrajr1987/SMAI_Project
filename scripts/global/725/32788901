<p>Im seeing this pattern in many different Nuget-packages where you pass in a lambda expression, this is an example from <a href="http://docs.topshelf-project.com/en/latest/configuration/quickstart.html" rel="nofollow">TopShelf</a>, does this configuration pattern has a name? I really like it and want to read more about it.</p>  <pre><code>public class Program {     public static void Main()     {         HostFactory.Run(x =&gt;                                 //1         {             x.Service&lt;TownCrier&gt;(s =&gt;                        //2             {                s.ConstructUsing(name=&gt; new TownCrier());     //3                s.WhenStarted(tc =&gt; tc.Start());              //4                s.WhenStopped(tc =&gt; tc.Stop());               //5             });             x.RunAsLocalSystem();                            //6              x.SetDescription("Sample Topshelf Host");        //7             x.SetDisplayName("Stuff");                       //8             x.SetServiceName("Stuff");                       //9         });                                                  //10     } } </code></pre>  <p>This is how the HostFactory.Run method looks</p>  <pre><code>public static TopshelfExitCode Run(Action&lt;HostConfigurator&gt; configureCallback) {     try     {         return New(configureCallback)             .Run();     }     catch (Exception ex)     {         HostLogger.Get(typeof(HostFactory))                   .Error("The service terminated abnormally", ex);         HostLogger.Shutdown();          return TopshelfExitCode.AbnormalExit;     } } </code></pre>