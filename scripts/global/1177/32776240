<p>I am trying to create an Activity to give the user the option to add and remove certain tabs based on an option selected by the user using a toggle button. So if I have 4 tabs I need 4 toggle buttons that hide or add each of those tabs. The tabs are shown using ViewPager and I use FragmentPagerAdpater to show the different Fragments for each tab on the screen. What would I need to do in order to show and hide these same 4 tabs? From my research so far I see that calling destroyItem and instantiateItem but i'm not sure how to use these. I have posted code below. Any advice or helpful links will be appreciated.</p>  <pre><code>class TabPageAdapter extends FragmentPagerAdapter {      public TabPageAdapter(FragmentManager fm) {         super(fm);     }      @Override     public void destroyItem(ViewGroup container, int position, Object object) {       }      @Override     public Fragment getItem(int position) {         switch (position) {             case JudgeActivity.JUDGE_MAIN:                 if (mMainFragment == null) {                     mMainFragment = JudgeMainFragment.newInstance();                 }                 return mMainFragment;             case JudgeActivity.JUDGE_VERDICTS:                 if (mVerdictFragment == null) {                     mVerdictFragment = JudgeVerdictFragment.newInstance();                 }                 return mVerdictFragment;             case JudgeActivity.JUDGE_CLASSIFY:                 if (mClassifyFragment == null) {                     mClassifyFragment = JudgeClassifyFragment.newInstance();                 }                 return mClassifyFragment;             case JudgeActivity.JUDGE_SIDEBAR:                 if (mSidebarFragment == null) {                     mSidebarFragment = JudgeSidebarFragment.newInstance((SidebarCall) mActivity);                 }                 return mSidebarFragment;         }         return null;     }      @Override     public int getCount() {         return CONTENT.length;     }      @Override     public CharSequence getPageTitle(int position) {         return CONTENT[position % CONTENT.length].toUpperCase(Locale.US);     } }   public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {     super.onCreate(savedInstanceState);     mActivity = (JudgeActivity) getActivity();     Context context = new ContextThemeWrapper(mActivity, R.style.Theme_JudgePageIndicatorDefaults);     inflater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);     mView = inflater.inflate(R.layout.fragment_judge, container, false);      FragmentPagerAdapter adapter = new TabPageAdapter(getChildFragmentManager());      mViewPager = (ViewPager) mView.findViewById(R.id.pager);     mViewPager.setOffscreenPageLimit(3);     mViewPager.setAdapter(adapter);      return mView; } </code></pre>