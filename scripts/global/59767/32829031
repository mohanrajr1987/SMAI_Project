<p>Can someone find the error in this code. Here is link to the question. Any edits welcome <a href="https://www.hackerrank.com/challenges/self-balancing-tree" rel="nofollow">https://www.hackerrank.com/challenges/self-balancing-tree</a></p>  <p>Here ht denotes the height of the tree. I don't have any problem with the insertion code. Here is after the insertion code. And height of leaf is 0 and that of null is -1. You are given a pointer to the root of an AVL tree.</p>  <pre><code>Class node is defined as :     class Node         int val;   //Value        int ht;      //Height        Node left;   //Left child        Node right;   //Right child         q=root;    pre =null;    while(true){         if(q.left.ht-q.right.ht==-2){            if(q.right.left.ht-q.right.right.ht==-2){                pre =q;                q = q.right;            }          else if(q.right.left.ht-q.right.right.ht==-1){               if(pre.left==q){                  Node temp =q;                   pre.left = q.right;                   pre.left.left = temp;                   break;               }              else{                  Node temp =q;                  pre.right = q.right;                  pre.right.left = temp;                  break;              }           }             else{                if(pre.left ==q){                    Node temp =q;                    pre.left = q.right.left;                    pre.left.right= temp.right;                    pre.left.left = temp;                    break;                }                else{                    Node temp =q;                    pre.right = q.right.left;                    pre.right.right =temp.right;                    pre.right.left = temp;                    break;                }            }        }        else if(q.left.ht-q.right.ht==2){            if(q.left.left.ht-q.left.right.ht==2){                pre =q;                q = q.left;            }            else if(q.left.left.ht-q.left.right.ht==1){                if(pre.left ==q){                    Node temp =q;                    pre.left = q.left;                    pre.left.right = temp;                    break;                }                else{                    Node temp =q;                    pre.right = q.left;                    pre.right.right = temp;                    break;                }            }            else{                if(pre.left ==q){                    Node temp =q;                    pre.left = q.left.right;                    pre.left.left = temp.left;                    pre.left.right= temp;                    break;                }                else{                    Node temp =q;                    pre.right = q.left.right;                    pre.right.left = temp.left;                    pre.right.right= temp;                    break;                }             }        }         else{             if(value==q.val){                 break;//do nothing only return the head that is enough             }             else if(value&gt;q.val){                pre = q;                q=q.right;             }             else{                 pre =q;                 q=q.left;             }         }     }    return root; } </code></pre>