<p>I have to write a program which</p>  <ol> <li>uses a class ShopItem whereby an item the attributes of an item are: barCodeNumber, itemName, price and quantityInStock. Create 5 instances of ShopItems (item1, item2, item3, item4 and item5) with values of my own for their attributes.</li> <li><p>uses a comparator (barCodeComparator) for ShopItem which allows comparison of ShopItem objects based on their barCodeNumber(Assumption: no two items will never have the same barCode).</p></li> <li><p>ensures that two items with the same barCodeNumber cannot be added to the Set.</p></li> </ol>  <p>I am stucked at the 3rd part. I know I have to use a HashSet for that but I do not know how implement it in this program which uses sorting. I am sorry if anything is unclear as I am running out of time since I have a Data Structures test in a few hours. </p>  <p>This is the shopItem.java class</p>  <pre><code>public class ShopItem implements Comparable&lt;ShopItem&gt; {  private int barCodeNumber; private String itemName; private int price; private int quantityInStock;  public ShopItem(int barCodeNumber, String itemName, int price, int quantityInStock){      this.barCodeNumber= barCodeNumber;     this.itemName= itemName;     this.price= price;     this.quantityInStock= quantityInStock; }   public int getBarCodeNumber() {     return barCodeNumber; }   public void setBarCodeNumber(int barCodeNumber) {     this.barCodeNumber = barCodeNumber; }   public String getItemName() {     return itemName; }   public void setItemName(String itemName) {     this.itemName = itemName; }   public int getPrice() {     return price; }   public void setPrice(int price) {     this.price = price; }   public int getQuantityInStock() {     return quantityInStock; }   public void setQuantityInStock(int quantityInStock) {     this.quantityInStock = quantityInStock; }  @Override public String toString(){     return "Item: " + itemName+ ":"+ "Bar Code Reader: "+barCodeNumber;    }  } </code></pre>  <p>This is the ShopItem_Order.java class</p>  <pre><code>import java.util.*;  public class ShopItem_Order { final static Comparator&lt;ShopItem&gt; BarCodeComparator= new Comparator&lt;ShopItem&gt;(){      public int compare(ShopItem A, ShopItem B){          if(new Integer(A.getBarCodeNumber()).compareTo(new Integer(B.getBarCodeNumber()))&lt;0)              return -1;              else if(new Integer(A.getBarCodeNumber()).compareTo(new Integer(B.getBarCodeNumber()))&gt;0)                 return 1;              else                 return 0;     }  };        public static void main(String args[]){          SortedSet&lt;ShopItem&gt; item= new TreeSet&lt;ShopItem&gt;(new ShopItem_Comparator());          ShopItem a= new ShopItem(42842, "Iced Green Tea", 75, 20);         ShopItem b= new ShopItem(42278, "Sugar Free Lindt Choc", 175, 20);         ShopItem c= new ShopItem(42277, "Red Velvet Cake", 125, 15);         ShopItem d= new ShopItem(42857, "Financier Cake", 150, 11);         ShopItem e= new ShopItem(48423, "Tacos", 125, 10);           item.add(a);         item.add(b);         item.add(c);         item.add(d);         item.add(e);          for(ShopItem si: item){             System.out.println(si.toString());         }        } </code></pre>  <p>}</p>