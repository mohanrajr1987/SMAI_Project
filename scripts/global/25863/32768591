<p>I have a UICollectionViewController with a custom UICollectionViewCell with an image and a label outlet. The images only fill correctly AFTER I press reload to reload the data. I notice that the labels disappear too, though I feel they  are just behind the images.</p>  <p>What am I doing wrong?</p>  <p>ON LOAD</p>  <p><a href="http://i.stack.imgur.com/0nj8F.png" rel="nofollow"><img src="http://i.stack.imgur.com/0nj8F.png" alt="enter image description here"></a></p>  <p>AFTER RELOADING THE DATA</p>  <p>This is how big the images should be when the view is loaded.</p>  <p><a href="http://i.stack.imgur.com/WO9RN.png" rel="nofollow"><img src="http://i.stack.imgur.com/WO9RN.png" alt="enter image description here"></a></p>  <p>I set the cells to be a factor of how big the screen size is. NSLogging the Frames I can see that the Cell size and the image size are the same.</p>  <pre><code>Cell size: 124.85  PhotoView size: {{0, 0}, {124.85, 124.85}} </code></pre>  <p><strong>CollectionViewController.h</strong></p>  <pre><code>#import &lt;UIKit/UIKit.h&gt; #import "HomeModel.h" @interface CollectionViewController : UICollectionViewController &lt;UICollectionViewDelegateFlowLayout&gt; @end </code></pre>  <p><strong>CollectionViewController.m</strong></p>  <pre><code>#import "CollectionViewController.h" #import "CollectionViewCell.h"   #define SPACE_BETWEEN_CELLS 0.05  @interface CollectionViewController () {      NSArray * _feedItems; } - (IBAction)reloadUserData:(id)sender;  @end  @implementation CollectionViewController  static NSString * const reuseIdentifier = @"Cell";   - (IBAction)reloadUserData:(id)sender {      [self.collectionView reloadData]; }   - (void)viewDidLoad {     [super viewDidLoad];      // Uncomment the following line to preserve selection between presentations     self.clearsSelectionOnViewWillAppear = YES;     self.collectionView.allowsMultipleSelection = NO;      _feedItems = [NSArray arrayWithObjects:@"1.jpg", @"2.jpg", @"3.jpg", @"4.jpg", @"5.jpg", nil];   }  - (void)didReceiveMemoryWarning {     [super didReceiveMemoryWarning];     // Dispose of any resources that can be recreated. }   #pragma mark &lt;UICollectionViewDataSource&gt;  - (NSInteger)numberOfSectionsInCollectionView:(UICollectionView *)collectionView {     return 1; }   - (NSInteger)collectionView:(UICollectionView *)collectionView numberOfItemsInSection:(NSInteger)section {     return [_feedItems count]; }  - (UICollectionViewCell *)collectionView:(UICollectionView *)collectionView cellForItemAtIndexPath:(NSIndexPath *)indexPath {      CollectionViewCell *cell = [collectionView dequeueReusableCellWithReuseIdentifier:reuseIdentifier forIndexPath:indexPath];       //IMAGE     cell.photoView.frame    = CGRectMake(0, 0, cell.bounds.size.width, cell.bounds.size.height);     cell.photoView.backgroundColor = [UIColor colorWithRed:128 green:128 blue:128 alpha:0.5];      cell.photoView.image    = [UIImage imageNamed:[_feedItems objectAtIndex:indexPath.row]];      NSLog(@"PhotoView size: %@", NSStringFromCGRect(cell.photoView.frame) );         return cell; }    #pragma mark &lt;UICollectionViewDelegateFlowLayout&gt; - (CGSize)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout*)collectionViewLayout sizeForItemAtIndexPath:(NSIndexPath *)indexPath {      CGFloat size = ( [[UIScreen mainScreen] bounds].size.width / 3 ) - ( SPACE_BETWEEN_CELLS * 3);      NSLog(@"Cell size: %f ", size);      return CGSizeMake( size, size); }  - (CGFloat)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout*)collectionViewLayout minimumInteritemSpacingForSectionAtIndex:(NSInteger)section {      return SPACE_BETWEEN_CELLS; }    @end </code></pre>  <p>Here is my custom cell</p>  <p><strong>CollectionViewCell.h</strong></p>  <pre><code>#import &lt;UIKit/UIKit.h&gt; @interface CollectionViewCell : UICollectionViewCell @property (weak, nonatomic) IBOutlet UIImageView *photoView; @property (weak, nonatomic) IBOutlet UILabel *textLabel; @end </code></pre>  <p><strong>CollectionViewCell.m</strong></p>  <pre><code>#import "CollectionViewCell.h"  @implementation CollectionViewCell  - (void)awakeFromNib {}  @end </code></pre>