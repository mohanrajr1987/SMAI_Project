<p>I have a multiple view application and in <code>ViewController</code> I have added some code that I would like to be able to access from <code>ViewController2</code>. The purpose of the code being accessible in <code>ViewController2</code> is so I can have it run in there as well as in <code>ViewController</code>. I have already imported the <code>ViewController.h</code> file into <code>ViewController2</code> but I am unsure of how to share the data between controllers. The code is as follows:</p>  <p>ViewController2.h</p>  <pre><code>#import &lt;UIKit/UIKit.h&gt; #import &lt;AVFoundation/AVFoundation.h&gt; #import "ViewController.h"  @interface ViewController2 : UIViewController  @property(nonatomic, readonly) NSUInteger tapCount; @property NSInteger numberOfLoops; @property(readonly) NSTimeInterval deviceCurrentTime; @property (strong, nonatomic) AVAudioPlayer *alarmPlayer;  - (NSTimeInterval)timeIntervalSinceDate:dateTimePicker; - (BOOL)playAtTime:(NSTimeInterval)time;  - (IBAction)iconsBtn:(id)sender;  @end </code></pre>  <p>ViewController2.m</p>  <pre><code>#import "ViewController2.h" #import &lt;AVFoundation/AVFoundation.h&gt; #import "ViewController.h"  @interface ViewController2 () {     AVAudioPlayer *_alarmPlayer; } @end  @implementation ViewController2  - (void)viewDidLoad { //This is where I want to use the data     [super viewDidLoad];     self.view.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:@"wwv5.jpg"]];  } </code></pre>  <p>ViewController.h</p>  <pre><code>#import &lt;UIKit/UIKit.h&gt; #import &lt;AvFoundation/AVFoundation.h&gt;  @interface ViewController : UIViewController &lt;AVAudioPlayerDelegate&gt; {     IBOutlet UIDatePicker *dateTimePicker; }  @property NSInteger numberOfLoops; @property(readonly) NSTimeInterval deviceCurrentTime; @property (strong, nonatomic) AVAudioPlayer *alarmPlayer;  - (NSTimeInterval)timeIntervalSinceDate:dateTimePicker; - (BOOL)playAtTime:(NSTimeInterval)time; </code></pre>  <p>ViewController.m</p>  <pre><code>NSDateFormatter *dateFormatter = [[NSDateFormatter alloc] init];     dateFormatter.timeZone = [NSTimeZone defaultTimeZone];     [dateFormatter setDateFormat:@"dd:MM:YYYY:ss:mm:hh"];     NSString *dateTimeString = [dateFormatter stringFromDate: dateTimePicker.date ];     NSLog( @"Alarm Set : %@", dateTimeString );       NSDateFormatter *dateFormatter1 = [[NSDateFormatter alloc] init];     [dateFormatter setDateFormat:@"dd:MM:YYYY:ss:mm:hh"];     NSDate *dateTimeSeconds = [[NSDate alloc] init];     dateTimeSeconds = [dateFormatter1 dateFromString:dateTimeString];     NSTimeInterval seconds = [[NSDate date] timeIntervalSinceDate:dateTimePicker.date];     NSLog(@"seconds %.f", seconds);      NSString *path = [NSString stringWithFormat:@"%@/Alarm-Clock.m4a", [[NSBundle mainBundle] resourcePath]];     NSURL *soundUrl = [NSURL fileURLWithPath:path];     _alarmPlayer = [[AVAudioPlayer alloc] initWithContentsOfURL:soundUrl error:nil];     [_alarmPlayer playAtTime: _alarmPlayer.deviceCurrentTime + seconds]; </code></pre>  <p>How should I do so? It is most important that I can use the <code>dateTimeString</code> in <code>ViewController.m</code></p>  <p>Thanks</p>  <p><strong>EDIT</strong></p>  <p>This is different from the other one because I was asking specifically how to do something where as the answers for the other one were more general and I was asking <strong>specifically</strong> how to share <strong>one</strong> object not multiple objects.</p>