<p>SOLVED: Fixed by adding lambda: before the self.add_char("(") so it's now</p>  <pre><code>command = lambda: self.add_char("(") </code></pre>  <p>The entire code for the program is <a href="https://github.com/SovietKetchup/calc-gui/" rel="nofollow" title="GitHub">here</a></p>  <p>I have this issue in my calculator program. It doesn't like the add_char() method and I can't figure out how to solve it.</p>  <pre><code>import tkinter as tk class Application(tk.Frame): """ GUI Calculator application """    def __init__(self, master):      """ Initialize the frame """       super(Application, self).__init__(master)      self.grid()      self.create_widgets()      self.do_cont = True    def create_widgets(self):      """ Creates all of the gui elements """       # I have more buttons like this (0,1,2 etc)      # ( Button      self.back_bttn = tk.Button(self, text = "(", command = self.add_char("("), width = button_width)      self.back_bttn.grid(row = 1, column = 6, sticky = tk.W) </code></pre>  <p>This is the add_char function that it seems to have issues with. I get a TypeError "add_char() missing 1 required positional argument: 'char'" but I do pass it char. If I pass it ( self, "(" ) then I get "add_char() takes 2 positional arguments but 3 were given"</p>  <pre><code>  def add_char(self, char):      if char != "√":         self.out_box.insert(tk.END, char)       if char == "^2" or char == "√":         self.calculate()    def calculate(self):      calculation = self.out_box.get("1.0", tk.END)      try:         int(calculation)      except:         ans = "Error"      else:         ans = int(calculation)       self.clear()      self.out_box.insert(tk.END, ans) </code></pre>  <p>If anyone knows how to fix this I would be grateful!</p>