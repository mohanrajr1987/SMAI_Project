<p>I'm trying to create a GUI for a virtual board for the game Go. There should be an <code>n</code>x<code>n</code> grid of tiles where a player can place a stone, either black or white. Clicking on a tile will make it change from tan(the default) to black, click again to white, and click a third time to go back to tan. Player one can click once on a spot to place a stone there, and player two can click twice (you need to remove stones later, so three clicks resets it). I created a tile object and then used a nested for loop to instantiate 9 by 9 of them. Unfortunately, running the code only seems to produce 1 functional tile, not 81. This code should work on any python machine (I'm using Python 3.4), so you can try to run it and see for yourself. Can anyone point out the reason the loop is only running once? </p>  <pre><code>from tkinter import * window = Tk() n = 9  """ A tile is a point on a game board where black or white pieces can be placed. If there are no pieces, it remains tan. The basic feature is the "core" field which is a tkinter button. when the color is changed, the button is configured to represent this. """ class tile(object):     core = Button(window, height = 2, width = 3, bg = "#F4C364")      def __init__(self):         pass      """the cycle function makes the tile object actually change color, going between three options: black, white, or tan."""     def cycle(self):          color = self.core.cget("bg")          if(color == "#F4C364"): #tan, the inital value.             self.core.config(bg = "#111111")#white.         elif (color == "#111111"):             self.core.config(bg = "#DDDDDD")#black.         else:             self.core.config(bg = "#F4C364")#back to tan.  board = [] #create overall array for x in range(n):     board.append([])#add subarrays inside it     for y in range(n):         board[x].append(tile())#add a tile n times in each of the n subarrays         T = board[x][y] #for clarity, T means tile         T.core.config(command = lambda: T.cycle()) #I do this now because cycle hadn't been defined yet when I created the "core" field         T.core.grid(row = x, column = y) #put them into tkinter.  window.mainloop() </code></pre>