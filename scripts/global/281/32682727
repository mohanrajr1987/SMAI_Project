<p>Here is the scenario: A User attempt to Upload a file or files to server A</p>  <p>server A use nginx as a reverse proxy and pass request to proxy</p>  <p>I use tornado python as back-end to handle requests</p>  <p>in tornado At first before uploading begins I check if user have permission to upload a file, When a user <strong>does not have perm</strong> so I have to prevent uploading and close connection, so I do this :</p>  <pre><code>@stream_request_body class Upload(RequestHandler):  @gen.coroutine def prepare(self) -&gt; None:     headers = self.request.headers     try:         token = headers['X-Token']     except KeyError:         self.set_header('Connection', 'close')         self.request.connection.no_keep_alive = True         self.set_status(503)         self.write('Sorry !')         self.finish()         return None     #  if we are here, it means request is valid then we can continue process, rest of method... </code></pre>  <p>```</p>  <p><strong>The problem is that</strong> nginx won't inform client with response and won't give client the headers and the status and won't output anything so that client stop uploading files, although in tornado I will find out process is not valid before uploading begins, but client will keep uploading until upload is finished and get all the errors</p>  <p>here is my nginx config:</p>  <pre><code>worker_processes 2; # 1 per cpu core events {     worker_connections 1024;     use epoll; } http { sendfile on; access_log on;     gzip              on;     gzip_http_version 1.0;     gzip_proxied     expired no-cache no-store private auth;     gzip_min_length   1000;     gzip_disable      "MSIE [1-6]\.";     gzip_types       text/plain application/x-javascript text/xml text/css application/xml;     gzip_comp_level  2;     tcp_nopush on;     tcp_nodelay on;        #################################     # Start Tornado Upstream Servers     #################################     upstream tornado_servers {         server 127.0.0.1:9999;     }     #################################     # END Tornado Upstream Servers     #################################      proxy_next_upstream error;      proxy_request_buffering off;     proxy_buffering off;      server {         listen 8080 default;         root /usr/local/nginx/html;         server_name _;         client_max_body_size 6G;         client_header_timeout 5;          location / {try_files $uri $uri/ /index.html;}          ###########################         # Start of Upload File         ###########################         location /upload/ {             keepalive_timeout 0;             rewrite /upload/(.+) /$1 break;             try_files $uri @proxy_upload;         }         location @proxy_upload {              limit_except POST  { deny all; }             keepalive_timeout 0;             proxy_pass_header  Server;             proxy_set_header   Host $http_host;             proxy_http_version 1.1;             proxy_set_header   Upgrade $http_upgrade;             proxy_set_header   Connection "upgrade";             proxy_redirect     off;             proxy_set_header   X-Real-IP $remote_addr;             proxy_set_header   X-Scheme $scheme;             proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;             proxy_set_header   X-Forwarded-Host $server_name;             proxy_pass         http://tornado_servers;          }           ###########################         # End of Big Upload file         ###########################       }   } </code></pre>  <p>Any Idea what might be the problem ?</p>