<p>I am having trouble showing/hiding a set of events based on a checkbox checked or not.  I don't understand how to use the <code>eventRender</code> attribute of jquery plugin FullCalendar. I get data from the database and it displays on the calendar fine.  All checkboxes are checked.  If the user unchecks the checkbox, I want that set of events to be hidden.  If checked, show. This is my markup:</p>  <pre><code>&lt;div id="groups" style="float:left; width: 200px; height: 100px"&gt;     &lt;div style="border: 2px solid black; background-color: lightblue"&gt;         &lt;label&gt;&lt;input type="checkbox" checked="checked" name="e1" id="e1" value="1" /&gt;Warehouse Group&lt;/label&gt;          &lt;/div&gt;     &lt;div style ="border: 2px solid black; background-color: red"&gt;         &lt;label&gt;&lt;input type="checkbox" checked="checked" name="e2" id="e2" value="2" /&gt;Interface Group&lt;/label&gt;          &lt;/div&gt; &lt;/div&gt; </code></pre>     <p>This is my document ready function:</p>  <pre><code>$(document).ready(function () {  var date = new Date(); var d = date.getDate(); var m = date.getMonth(); var y = date.getFullYear();  $('#calendar').fullCalendar({      header:     {         left: 'prev,next today',         center: 'title',         right: 'month,agendaWeek,agendaDay'     },     titleFormat: {month: 'MMMM'},                   defaultView: 'month',                      editable: false,     events: function (start, end, timezone, callback) {         $.ajax({             type: "POST",             url: '@Url.Action("GetAllEvents", "Home")',             contentType: "application/json; charset=utf-8",             dataType: "json",             success: function (doc) {                 var events = [];                                      $(doc).each(function () {                      events.push({                         title: $(this).attr('title'),                           start: $(this).attr('start'),                          end: $(this).attr('end'),                         id: $(this).attr('id'),                         description: $(this).attr('description'),                         color: $(this).attr('color'),                          textColor: 'black'                     });                  });                 callback(events);                 } ,                                                                                error: function () {                 alert("There was an error fetching events!")             }         });     },     eventRender: function(event, element) {         //THIS IS WHERE I AM CONFUSED...         //Render the event if the 'value' attribute of a checked checkbox         //equals the description value of the event, show the event.         $('input[type="checkbox"]').each(function () {             if ($(this).checked) {                 if ($(this).val() == event.description)                 {                     show event                 }             }                   });              }      });  $('input[type="checkbox"]').on('change', function () {     $('#calendar').fullCalendar('rerenderEvents'); }); </code></pre>  <p><strong>UPDATE</strong> Changed the render function so the code executes.  But I don't understand what has to be returned in this function to show the event?</p>  <pre><code>eventRender: function(event, element) {                 $('input[type="checkbox"]').each(function () {                     if ( $( this ).is( ":checked" ) ) {                         if ($(this).val() == event.description)                         {                             alert('title: ' + event.title);                             return event.title;                         }                     }                           });        </code></pre>  <p><strong>UPDATE</strong> I am trying to pass in the group IDs of the groups that are to be displayed.  It works on initialization but when I uncheck one of the groups, the array still has 2 items in it instead of one. This is my code:</p>  <pre><code> $(document).ready(function () {  // page is now ready, initialize the calendar... var date = new Date(); var d = date.getDate(); var m = date.getMonth(); var y = date.getFullYear(); var groupSelectedArray = [];  $('input[type="checkbox"]').each(function () {     if ($(this).is(":checked")) {         groupSelectedArray.push($(this).val());      } }); var groupData = { selectedGroups: groupSelectedArray };  $('#calendar').fullCalendar({      header:     {         left: 'prev,next today',         center: 'title',         right: 'month,agendaWeek,agendaDay'     },     titleFormat: {month: 'MMMM'},                   defaultView: 'month',                      editable: false,      events: function (start, end, groupSelectedArray, callback) {         $.ajax({             type: "POST",             url: '@Url.Action("GetAllEvents", "Home")',             data: JSON.stringify(groupData),//{ selectedGroups: groupSelectedArray },             contentType: "application/json; charset=utf-8",             dataType: "json",             success: function (doc) {                 var events = [];                                      $(doc).each(function () {                      events.push({                         title: $(this).attr('title'),                           start: $(this).attr('start'),                          end: $(this).attr('end'),                         id: $(this).attr('id'),                         description: $(this).attr('description'),                         color: $(this).attr('color'),                          textColor: 'black'                     });                  });                 callback(events);                 } ,                                                                                error: function () {                 alert("There was an error fetching events!")             }         });     } </code></pre>  <p>This is when the box is unchecked:</p>  <pre><code>$('input[type="checkbox"]').on('change', function () {             var groupSelectedArray = [];              $('input[type="checkbox"]').each(function () {                 if ($(this).is(":checked")) {                     groupSelectedArray.push($(this).val());                  }             });             var groupData = { selectedGroups: groupSelectedArray };              $('#calendar').fullCalendar('removeEvents');             $('#calendar').fullCalendar('refetchEvents');             $('#calendar').fullCalendar('rerenderEvents');         }); </code></pre>  <p>Why is the groupSelectedArray not getting reset to 1 item when the checkbox is unchecked?</p>