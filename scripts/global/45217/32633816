<p>The drag and drop works fine on other browsers just firefox that has an issue.  </p>  <p>I have read enough to know that Firefox has a different mechanism for drag and drop but nothing I found has helped Tried implementing <code>jsEvent.preventDefault();</code> as the commentor suggest <a href="http://stackoverflow.com/a/19055244/530933">here</a> but that did not change the behavior and Im not sure how to implement the marked as answer portion which does <code>event.originalEvent.dataTransfer.setData('text/plain', 'anything');</code></p>  <p>Here is my drag and drop code:</p>  <p>setup draggable tr</p>  <pre><code>$('#workOrdersTable tbody tr').each(function() {     var tds = $(this).children('td');     if (tds.length &gt; 0) {         var workOrder = $.grep(workOrders, function(e) {             return e.woNumber == tds[0].innerText;         })[0];         if (typeof workOrder !== "undefined" || workOrder !== null) { // store the Event Object in the DOM element so we can get to it later             $(this).data('workOrder', workOrder);             // make the event draggable using jQuery UI             $(this).draggable({                 zIndex: 999,                 revert: true, // will cause the event to go back to its                 revertDuration: 0 //  original position after the drag             });         }      } }); </code></pre>  <p>How can I get this working in Firefox?</p>  <p>FullCalendar setup implementing drop</p>  <pre><code>$('#calendar').fullCalendar({     header: {         left: 'prev,next today',         center: 'title',         right: 'month,agendaWeek,agendaDay'     },     editable: false,     droppable: true,      //edit existing     eventClick: function(calEvent, jsEvent, view) {         populateEvent(calEvent, true);     },      //create new     drop: function(date, jsEvent, ui ) {         //alert('jsEvent '+jsEvent);         jsEvent.preventDefault();          var workOrder = $(this).data('workOrder');         workOrder.title = workOrder.woNumber + ' ' + workOrder.account         workOrder.description = workOrder.problemDescription;         workOrder.start = date;         workOrder.end = moment(date).add(1, 'hour'); //change default so the start and end dont match         populateEvent(workOrder, false);     }, </code></pre>