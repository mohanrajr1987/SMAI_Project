<p>I'm working on a fullcalendar module for my page.I could display Events on calendar without the recurring feature. But when I altered my table to include recurring features I could not display events from the table. This is my table structure. <a href="http://i.stack.imgur.com/OmW34.png" rel="nofollow"><img src="http://i.stack.imgur.com/OmW34.png" alt="Events Table"></a> </p>  <p>The Update function in controller is called while the form is submitted and i noticed that it is being updated in the table.This is my form. <a href="http://i.stack.imgur.com/odzou.png" rel="nofollow"><img src="http://i.stack.imgur.com/odzou.png" alt="enter image description here"></a></p>  <p>and this is my controller update function.</p>  <pre><code>public function update($id) {     //$type=Input::get('type');     $event_id= Input::get('eventid');             $title= Input::get('title');             $start_day=Input::get('start');             $end_day=Input::get('end');             $allday=Input::get('allday');             $repeat=Input::get('repeat');             $frequency=Input::get('frequency');             $start_time=Input::get('start_time');             $end_time=Input::get('end_time');                $dow=Input::get('dow');             $month=Input::get('month');             $weekly_json=json_encode($dow);             $monthly_json=json_encode($month);                       $newstrt=substr($start_day,0,10);             $newend=substr($end_day,0,10);             $start= date("Y-m-d H:i:s",$newstrt);             $end= date("Y-m-d H:i:s" , $newend);             $roles = DB::table('events')                         -&gt;where('event_id','=',$event_id)                         -&gt;update(array('title' =&gt; $title,'daily'=&gt;$allday,'repeat'=&gt;$repeat,'frequency'=&gt;$frequency,'start'=&gt;$start,'end'=&gt;$end,'time'=&gt;$time,'dow'=&gt;$weekly_json,'monthly_json'=&gt;$monthly_json));              if (Request::ajax())             {               return Response::json(array('id'=&gt;$event_id,'title'=&gt;$title,'newstrt'=&gt;$start,'newend'=&gt;$end,'start_time'=&gt;$start_time,'end_time'=&gt;$end_time));             }              else              {                 return  Redirect::route('calendar.index');             } } </code></pre>  <p>But I'm not being able to display these details on the full calendar.I was following this link to implement recurring events on fullcalendar. <a href="http://stackoverflow.com/questions/15161654/recurring-events-in-fullcalendar">Recurring Events in FullCalendar</a>.</p>  <p>This is my index function used for GETting details from the table.</p>  <pre><code>public function index() {     $event = DB::table('events')      -&gt;leftJoin('people','people.people_id','=','events.people_id')       -&gt;where('events.flag', '=', 1)               -&gt;get(array('events.event_id','events.title','events.start','events.end','events.start_time','events.end_time','events.repeat','events.frequency','events.dow'));        $id=array(array());     $temp = array(array());     $i=0;     foreach ($event as $events)         {             $j=0;             $id[$i]["event_id"]=$events-&gt;event_id;             $id[$i]["title"]=$events-&gt;title;             $temp[$j]['start']=$events-&gt;start;             $temp[$j]['end'] = $events-&gt;end;             $temp[$j]['start_time']=$events-&gt;start_time;             $temp[$j]['end_time'] = $events-&gt;end_time;             $start_json=json_encode($temp);             $id[$i]['range'] = $start_json;             $id[$i]["frequency"]=$events-&gt;frequency;             $id[$i]["repeat"]=$events-&gt;repeat;             $id[$i]["dow"]=$events-&gt;dow;              $i++;                    }       return Response::json($id); } </code></pre>  <p>This is my calendar eventrender function and events structure.</p>  <pre><code>var date = new Date();     var d = date.getDate();     var m = date.getMonth();     var y = date.getFullYear();      var repeatingEvents = [{                 url: '/v1/calendar/',                 type: 'GET',         ranges: [{ //repeating events are only displayed if they are within one of the following ranges.             start: moment().startOf('week'), //next two weeks             end: moment().endOf('week').add(7,'d'),         },{             start: moment('2015-02-01','YYYY-MM-DD'), //all of february             end: moment('2015-02-01','YYYY-MM-DD').endOf('month'),         }],     }];      console.log(repeatingEvents);      var getEvents = function( start, end ){         return repeatingEvents;     }      var calendar=$('#calendar');     $.ajax({                 url: '/v1/calendar/',                 type: 'GET',                 dataType:'json',                   success:function events(response)                  {                      console.log(response);         calendar.fullCalendar({         header: {             left: 'prev,next today',             center: 'title',             right: 'month,agendaWeek,agendaDay'         },          eventRender: function(event, element, view){                 console.log(event.start.format());                 return (event.range.filter(function(range){                     return (event.start.isBefore(range.end) &amp;&amp;                             event.end.isAfter(range.start));                 }).length)&gt;0;             },             events: function( start, end, timezone, callback ){                 var events = getEvents(start,end); //this should be a JSON request                  callback(events);             },         editable: true,         droppable: true, // this allows things to be dropped onto the calendar          drop: function() {             // is the "remove after drop" checkbox checked?             if ($('#drop-remove').is(':checked')) {                 // if so, remove the element from the "Draggable Events" list                 $(this).remove();             }         },            eventSources: [              {                  url: '/v1/calendar/',                 type: 'GET',                 dataType:'json',                },            calendar.fullCalendar( 'addEventSource', response )         ],          selectable: true,         selectHelper: true,         select: function(start, end, allDay)  </code></pre>  <p>and I am getting JSON response like this on the console.</p>  <pre><code>dow: "{[0,1,2]â†µ}" event_id: 1 frequency: "weekly" range: "[{"start":"2015-09-11","end":"2015-09-12","start_time":"11:00:00","end_time":"15:00:00"}]" repeat: 1 title: "Youth festival" </code></pre>  <p>I get no errors on the console....but the events aren't displayed too.. where did i go wrong? Helps guys?</p>