<p>Is there a way to get linq to entities to batch multiple counts in a single database call?</p>  <p><strong>Example results:</strong> (format fail..)<br> ╔══════╦═══════╗<br> ║ Type ║ Count ║<br> ╠══════╬═══════╣<br> ║    1 ║     4 ║<br> ║    2 ║     9 ║<br> ║    3 ║    24 ║<br> ╚══════╩═══════╝  </p>  <p>This is what I have to date but this still results in 3 calls to the database. Clearly <strong>Count</strong> executes the query immediately and returns.</p>  <pre><code>var aQuery = items         .Where(a =&gt; a.Type == 1);  var bQuery = items         .Where(a =&gt; a.Type == 2);  var cQuery = items         .Where(a =&gt; a.Type == 3);  var countQuery = aQuery.GroupBy(a =&gt; a.Type).Select(a =&gt; new { Type = 1, Count = a.Count(b =&gt; b.Type == 1) })     .Concat(bQuery.GroupBy(a =&gt; a.Type).Select(a =&gt; new { Type = 2, Count = a.Count(b =&gt; b.Type == 2) }))     .Concat(cQuery.GroupBy(a =&gt; a.Type).Select(a =&gt; new { Type = 3, Count = a.Count(b =&gt; b.Type == 3) }));  var aCount = countQuery.FirstOrDefault(a =&gt; a.Type == 1).Count; var bCount = countQuery.FirstOrDefault(a =&gt; a.Type == 2).Count; var cCount = countQuery.FirstOrDefault(a =&gt; a.Type == 3).Count; </code></pre>