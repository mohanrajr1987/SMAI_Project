<p>I think I'm misunderstanding something about EF Includes or lazy-loading or perhaps I haven't set my Entities up correctly.</p>  <p>If I have this query, it works as expected. I get a list of products with their associated productOptions</p>  <pre><code>var prodQuery = db.Products     .Include("ProductOptions")     .AsNoTracking()     .Where(p =&gt;        p.CategoryId == category.Id        &amp;&amp; p.Active &amp;&amp; !p.Deleted        &amp;&amp; p.ProductOptions.Any(po =&gt; po.Active &amp;&amp; !po.Deleted)     ).ToList(); </code></pre>  <p>However, when I try to select them to DTO's... The products contain no ProductOptions. Somehow they're not being included</p>  <pre><code> var products = db.Products     .Include("ProductOptions")     .AsNoTracking()     .Where(p =&gt;        p.CategoryId == category.Id        &amp;&amp; p.Active &amp;&amp; !p.Deleted        &amp;&amp; p.ProductOptions.Any(po =&gt; po.Active &amp;&amp; !po.Deleted))     .Select(p =&gt;        new ProductDTO        {            Id = p.Id,            Name = p.Name,            Description = p.Description,            ProductOptionDTOs = p.ProductOptions                .Where(po =&gt; po.Active &amp;&amp; !po.Deleted)                .Select(po =&gt;                    new ProductOptionDTO                    {                        Id = po.Id,                        Name = po.Name,                        Price = po.Price                    }                ).ToList()        }     ).ToList(); </code></pre>  <p>Here are my Entities... Removed non-relevant properties for brevity</p>  <pre><code>public class Product {     public int Id { get; set; }     public string Name { get; set; }      public ICollection&lt;ProductOption&gt; ProductOptions { get; set; } }  public class ProductOption {     public int Id { get; set; }     public string Name { get; set; }      public int ProductId { get; set; }     public Product Product { get; set; } } </code></pre>  <p>Can someone help me understand I'm missing ProductOptions in my second query?</p>  <p><strong>My mistake everyone, no longer a problem. Thanks for all your help</strong></p>  <p>After investigating everyone's suggestions and going through my code I found I had made a mistake in my ProductDTO (the declaration for the ProductOptionDTOs property) that was silently failing and causing ProductOptionDTOs to be null without errors.</p>  <p>I got suspicious of my DTO after I tested the sql being generated by EF, and found the sql was correctly returning the right data, therefore I presumed there must have been a problem mapping it back to the DTO.</p>  <p>So it turns out it would have been critical to show you guys my DTO's in the first place even though I dismissed that idea</p>  <p>Fixed :)</p>