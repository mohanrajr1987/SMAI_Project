<p>I don't think I have worded the title very well, but I am doing a simple group join and I don't want to return an anonymous type as most examples in EF show.</p>  <p>Models shown below</p>  <pre><code>public class Vehicle {     public Guid Id { get; set; }     public int SpecialId { get; set; }     public string Name { get; set; }     public List&lt;Rate&gt; Rates { get; set; } }  public class Rate {     public Guid Id { get; set; }     public int SpecialId { get; set; }     public decimal Amount { get; set; } } </code></pre>  <p>And this is the GroupJoin</p>  <pre><code>        var query = _context.Vehicle             .AsNoTracking()             .GroupJoin(_context.Rate,                 vehicle =&gt; vehicle.SpecialId,                 rate =&gt; rate.SpecialId,                 (v, r) =&gt; new                 {                     Vehicle = v,                      Rates = r,                 }); </code></pre>  <p>As you can see it returns <code>Vehicle</code> and <code>IEnumerable&lt;Rates&gt;</code>, I'm trying to find out how I takes those Rates, and populate the rates property on <code>Vehicle</code> and just return that vehicle. </p>  <p>I don't want to have to do a <code>Select new Vehicle</code> and then manually map across vehicle properties on to this new version. This is a really scaled down model, there are a lot of properties.</p>