<p>I want to create function based on Entity Framework which will update Table in SQL database.</p>  <p>This table have parent-child relationship, so I am updating the bunch of children based on <code>parentID</code>.</p>  <p>I want to have a generic function and I don't know how to get the ID out of the object whose definition is not known at compilation time.</p>  <p>I tried to use <code>Func</code> which could be pretty neat, but it can't be used in Linq-To-Entities.</p>  <p>Code: </p>  <pre><code>protected static void update&lt;TEntity&gt;(DbSet&lt;TEntity&gt; set, int parentID,   List&lt;TEntity&gt; entities, Func&lt;TEntity, bool&gt; isNew, Func&lt;TEntity, int&gt; getID = null,    Func&lt;TEntity, int&gt; getParentID, Action&lt;TEntity, TEntity&gt; updateSingleEntity)         where TEntity : class     {         var currentIDs = entities.Select(e =&gt; getID(e));          var newEntities = entities.Where(e =&gt; isNew(e));         var existingEntities = entities.Where(e =&gt; !isNew(e));          var deletedEntities            = set.Where(e =&gt; getParentID(e) == parentID &amp;&amp; !currentIDs.Contains(getID(e)));          foreach (var toAdd in newEntities)         {             set.Add(toAdd);         }          foreach (var toDelete in deletedEntities)         {             var entity = set.Find(getID(toDelete));             set.Remove(entity);         }          foreach (var toUpdate in existingEntities)         {             var entity = set.Find(getID(toUpdate));             updateSingleEntity(toUpdate, entity);         }     } </code></pre>  <p>I'd like to use this function like this:</p>  <pre><code>   update(set, parentID, someList, e =&gt; e.ID != 0, e =&gt; e.ID, e =&gt; ParentID, somefunc); </code></pre>  <p>It's pretty neat IMO. Is there any way to implement a function like this?</p>  <p>I cannot do ( I tried):</p>  <p>Interface which has ID property can be neat. But I am not able to define <code>parentID</code> then in this interface because the name of this property varies around entities in DB.</p>