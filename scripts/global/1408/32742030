<p>I need to compare an object with a parameter that I'm passing in. The logic being:</p>  <ul> <li>If <code>territory == null</code>. Return all <code>Orders</code></li> <li>If <code>territory != null</code> and the <code>Territory</code> entity from Orders is <code>!= null</code>. Return <code>Orders</code> matching on the <code>Id</code> property (PK) of both entities.</li> </ul>  <p>I have the following LINQ statement:</p>  <p>The cut down version of my method is (there are normally other filters in the <code>WHERE</code> clause):</p>  <pre><code>  public void Execute(Territory territory)   {     using (var context = DatabaseHelper.CreateContext())     {       var orders = context.Orders.Where(x =&gt;         (           (territory == null) ||           (x.Territory != null &amp;&amp; x.Territory.Id == territory.Id)           )         );        if (!orders.Any()) //Exception occurs here on materialising the query       {         //Do something       }     }   } </code></pre>  <p>I receive the exception <code>NotSupportedException</code> and the message:</p>  <blockquote>   <p>Unable to create a constant value of type 'ENTITY'. Only primitive types or   enumeration types are supported in this context.</p> </blockquote>  <p>Whilst I understand the error as I'm not passing in a primitive type. How can I change the LINQ query so it returns the expected results?</p>