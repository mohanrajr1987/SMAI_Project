<h2>TL;DR</h2>  <p>I'm writing a Xamarin.Android app and want to reference the NuGet package of a library of mine that is a <code>dotnet</code>-targeted DNX class library. When I do this, the compiler spits out the warning</p>  <pre><code>The type 'DateTime' is defined in an assembly that is not referenced.  You must add a reference to assembly 'System.Runtime, Version=4.0.0.0, ... </code></pre>  <p>and the IDE complains with messages like</p>  <pre><code>Argument type 'System.DateTime [mscorlib, Version=2.0.5.0, Culture ...]' is not assignable to parameter type 'System.DateTime [mscorlib, Version=4.0.0.0, ...]' </code></pre>  <p>although the builds succeed and the code works. How can I change that in the library / the <code>project.json</code>?</p>  <h2>Long story</h2>  <p>At work we're currently porting our projects to <code>project.json</code>-type ones (Package, DNX, whatever the name is). At the moment, we're running the beta 7 Visual Studio integration and, in general, everything works out just fine. I now want to reuse one of our model libraries within an ASP.NET 5 and a Xamarin.Android project (from a NuGet feed). </p>  <p>Since we had absolutely no luck with class libraries targeting .NET 4.5.1 in the Xamarin project I migrated the model library to a DNX project targeting <code>net45</code>, <code>dnx45</code> and <code>dotnet</code> (in favor of <code>dnxcore50</code>, as described <a href="https://blog.novotny.org/2015/07/29/targeting-net-core/" rel="nofollow">here</a>), the frameworks part in the <code>project.json</code> being </p>  <pre><code>"frameworks": {   "net45": {     "frameworkAssemblies": {       "mscorlib": "4.0.0.0",       "System.Xml": "4.0.0.0",       "System.Collections.Concurrent": "4.0.0.0"     }   },   "dnx45": {     "frameworkAssemblies": {       "mscorlib": "4.0.0.0",       "System.Xml": "4.0.0.0",       "System.Collections.Concurrent": "4.0.0.0"     }   },   "dotnet": {     "dependencies": {       "System.Collections": "4.0.0",       "System.Linq": "4.0.0",       "System.Runtime": "4.0.0",       "System.Reflection": "4.0.0",       "System.Runtime.Extensions": "4.0.0",       "System.Threading": "4.0.0",       "System.Text.RegularExpressions": "4.0.0",       "System.Text.Encoding": "4.0.0",       "System.Collections.Concurrent": "4.0.0"     }   } }, </code></pre>  <p>Although <a href="https://oren.codes/2015/06/09/pcls-net-core-dnx-and-uwp/" rel="nofollow">this article</a> suggests using <code>net45</code> as a target for <code>monoandroid51</code> projects, the <code>dotnet</code> library is instead referenced by the Android project whenever I add the NuGet package to it.</p>  <p>The <code>package.json</code> then contains</p>  <pre><code>&lt;package id="My.Awesome.Lib" version="1.2.3-foo9" targetFramework="monoandroid51" /&gt; </code></pre>  <p>and the <code>.csproj</code> there has</p>  <pre><code>&lt;Reference Include="My.Awesome.Lib, Version=1.2.3.0, Culture=neutral, processorArchitecture=MSIL"&gt;   &lt;HintPath&gt;..\packages\My.Awesome.Lib.1.2.3-foo9\lib\dotnet\My.Awesome.Lib.dll&lt;/HintPath&gt;   &lt;Private&gt;True&lt;/Private&gt; &lt;/Reference&gt; </code></pre>  <p>This works out so far unless I have version numbers higher than <code>4.0.0</code> in the <code>dependencies</code> part and basically combusts when I do, however the following </p>  <p><strong>However</strong> when I build the project, I'll get the compiler warning</p>  <pre><code>1&gt;C:\Program Files (x86)\MSBuild\Xamarin\Android\Xamarin.Android.Common.targets(1706,3):      warning MSB3277: Found conflicts between different versions of the      same dependent assembly that could not be resolved.  These reference     conflicts are listed in the build log when log verbosity is set to detailed. </code></pre>  <p>right after the library reference. Within Visual Studio, whenever I pass a value from the Android project to one of the library types, I'll get the red squiggly lines with a message stating</p>  <pre><code>The type 'DateTime' is defined in an assembly that is not referenced.  You must add a reference to assembly 'System.Runtime, Version=4.0.0.0, ... </code></pre>  <p>as well as</p>  <pre><code>Argument type 'System.DateTime [mscorlib, Version=2.0.5.0, Culture ...]' is not assignable to parameter type 'System.DateTime [mscorlib, Version=4.0.0.0, ...]' </code></pre>  <p>which makes perfect sense, since the Xamarin BCL is labeled as runtime version <code>v2.0.50727</code>, whereas my library is <code>v4.0.30319</code>.</p>  <p>I'm now wondering if I need to target some PCL something or if there is something else I'm missing.</p>