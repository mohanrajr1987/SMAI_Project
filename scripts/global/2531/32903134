<p>I'm trying to remove subviews and the view from its superview and also set them to nil. I  noticed that the method <code>removeFromSuperview</code> does not set them to nil, which is not what I want. The error I get is at the line         <code>loadingViewSubviews[i] = nil</code>. It says :  <strong>Cannot assign through subscript, loadingViewSubviews is immutable</strong>. How can I overcome this?</p>  <p>This is the code I am using in my <code>viewDidDisappear</code></p>  <pre><code>override func viewDidDisappear(animated: Bool) {     super.viewDidDisappear(animated)     var loadingViewSubviews = loadingView.subviews     if loadingView != nil{         for var i = 0; i &lt; loadingViewSubviews.count; ++i{             loadingViewSubviews[i].removeFromSuperview()             loadingViewSubviews[i] = nil         }         loadingView.removeFromSuperview()         loadingView = nil     } } </code></pre>  <p><strong>EDIT: this code creates loadingView and it's subviews</strong></p>  <pre><code>var activityIndicator: UIActivityIndicatorView! var activityLabel:UILabel! var loadingView: UIView!     func processingIAP() {         if loadingView == nil{             activityIndicator = UIActivityIndicatorView(activityIndicatorStyle: UIActivityIndicatorViewStyle.WhiteLarge)             activityIndicator.hidesWhenStopped = true             let labelRect = CGRectMake(activityIndicator.frame.width+6, 0, 200, activityIndicator.frame.height+12)             activityLabel = UILabel(frame: labelRect)             activityLabel.text = "Accessing store..."             activityLabel.textColor = UIColor.whiteColor()             activityLabel.adjustsFontSizeToFitWidth = true             activityLabel.textAlignment = NSTextAlignment.Center             let rect = CGRectMake(sceneView.frame.width/2.0-(activityIndicator.frame.width/2.0 + activityLabel.frame.width/2.0+12), sceneView.frame.height/2.0-(activityIndicator.frame.height/2.0), activityIndicator.frame.width + activityLabel.frame.width+24, activityIndicator.frame.height+12)             loadingView = UIView(frame: rect)             loadingView.backgroundColor = UIColor.blackColor()             self.sceneView.addSubview(loadingView)             loadingView.addSubview(activityIndicator)             loadingView.addSubview(activityLabel)             loadingView.layer.cornerRadius = 3             loadingView.layer.borderWidth = 3             loadingView.layer.borderColor = UIColor.whiteColor().CGColor             activityIndicator.frame.origin = CGPointMake(6, (loadingView.frame.height-activityIndicator.frame.height)/2.0)             activityIndicator.startAnimating()         }else{             activityLabel.text = "Accessing store..."             activityIndicator.startAnimating()             activityLabel.frame.origin.x += activityIndicator.frame.width             activityLabel.frame.size.width -= activityIndicator.frame.width         }      } </code></pre>