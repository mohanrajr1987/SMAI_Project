<p>I'll try to keep this as brief as possible</p>  <p>I've a df called <code>sed</code>. I've a list of outcomes: <code>leitot, leiwkday, leiwkend, occsit</code>. All numerical vars. I put them in a list called <code>outlist</code>. I've a list of categories: <code>smokna, incna, gluna...</code>, 12 in total. All categorical, binary 0-1. Put these in a list called <code>nalist</code>.</p>  <p>I want a way, for each categorical variable, to generate the means for all 4 outcomes. Then, to compare the means for each group, for each outcome, using a two-way t test.</p>  <p>I've tried toying around with aggregate into a double for loop, but there has to be a better way to do this. I'm not so much having trouble with the loop as I am getting aggregate. I'm thinking I have to avoid the tilda notation. Trying to avoid the 'for' function too. Haven't even gotten around to the t-test bit but I figure once solving this portion, the t-test computation shant be too difficult to sort.</p>  <pre><code>for (i in 1:length(outlist)) {   for (j in 1:length(nalist))     {        aggregate(outlist[[i]]~nalist[[j]],data=sed,mean)     } } aggregate( </code></pre>  <p>but it keeps throwing how the data is of the wrong type or summat. Anyway, it looks absolutely terrible -- help wanted.</p>