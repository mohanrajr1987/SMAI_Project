<pre><code>Client   Instrument     LimitType     LimitValue  abc      null           stock hold    2%  abc      Microsoft      stock hold    3%  null     Microsoft      stock hold    5% </code></pre>  <p>For example I have above table and I have written a UDF to get the <strong>min</strong> Limit Value for given client and Instrument. I have to include null rows as well when client or instrument is not available. This UDF is giving me perfect results but to improve performance I want to do this as inline/sub-query or using joins. I have tried group by but that also excludes null.</p>  <p><strong>UDF:</strong></p>  <pre><code>select @LimitValue = min(T.LimitValue) from TradeLimit T JOIN LimitType L    on L.LimitTypeId = T.LimitTypeId where L.Name = @LimitType and T.Status = 'LIVE'   and      (         (T.ClientId = @ClientId and T.InstrumentId = @InstrumentId)         or         (T.ClientId = @ClientId and T.InstrumentId is Null)         or          (T.InstrumentId = @InstrumentId and T.ClientId is Null)         or         (T.InstrumentId is Null and T.ClientId is Null)     ) </code></pre>  <p>For the given table example it will return 2% which is expected for ABC+Microsoft+SingleStock trade. Although I can write this udf as a sub-query in where clause in calling stored proc but can I use join to get min limit value for given client and instrument and null combinations in stored proc itself so that I don't have to call udf? I want to join table IncomingTrade(contains client, instrument and tradevalue) and TradeLimit(contains client, instrument, limittype and limitvalue)</p>  <p><strong>using Microsoft sql server 2012</strong></p>