<p>I have a simple SQL table containing some values, for example:</p>  <pre><code>id | value    (table 'values') ---------- 0  | 4 1  | 7 2  | 9 </code></pre>  <p>I want to iterate over these values, and use them in a query like so:</p>  <pre><code>SELECT value[0], x1 FROM (some subquery where value[0] is used)  UNION  SELECT value[1], x2 FROM (some subquery where value[1] is used)   ... etc </code></pre>  <p>In order to get a result set like this:</p>  <pre><code>4 | x1 7 | x2 9 | x3 </code></pre>  <p>It has to be in SQL as it will actually represent a database view. Of course the real query is a lot more complicated, but I tried to simplify the question while keeping the essence as much as possible.</p>  <p>I think I have to select from <em>values</em> and join the subquery, but as the value should be used in the subquery I'm lost on how to accomplish this.</p>  <p><strong>Edit:</strong> I oversimplified my question; in reality I want to have 2 rows from the subquery and not only one.</p>  <p><strong>Edit 2:</strong> As suggested I'm posting the real query. I simplified it a bit to make it clearer, but it's a working query and the problem is there. Note that I have hardcoded the value '2' in this query two times. I want to replace that with values from a different table, in the example table above I would want a result set of the combined results of this query with 4, 7 and 9 as values instead of the currently hardcoded 2.</p>  <pre><code>SELECT x.fantasycoach_id, SUM(round_points) FROM (     SELECT DISTINCT fc.id AS fantasycoach_id,         ffv.formation_id AS formation_id,         fpc.round_sequence AS round_sequence,         round_points,         fpc.fantasyplayer_id     FROM fantasyworld_FantasyCoach AS fc      LEFT JOIN fantasyworld_fantasyformation AS ff ON ff.id = (             SELECT MAX(fantasyworld_fantasyformationvalidity.formation_id)             FROM fantasyworld_fantasyformationvalidity             LEFT JOIN realworld_round AS _rr ON _rr.id = round_id             LEFT JOIN fantasyworld_fantasyformation AS _ff ON _ff.id = formation_id             WHERE is_valid = TRUE                 AND _ff.coach_id = fc.id                 AND _rr.sequence &lt;= 2 /* HARDCODED USE OF VALUE */             )     LEFT JOIN fantasyworld_FantasyFormationPlayer AS ffp      ON ffp.formation_id = ff.id      LEFT JOIN dbcache_fantasyplayercache AS fpc      ON ffp.player_id = fpc.fantasyplayer_id     AND fpc.round_sequence = 2 /* HARDCODED USE OF VALUE */      LEFT JOIN fantasyworld_fantasyformationvalidity AS ffv      ON ffv.formation_id = ff.id ) x GROUP BY fantasycoach_id </code></pre>  <p><strong>Edit 3:</strong> I'm using PostgreSQL.</p>