<p>So first i have to say i am quite new in SQLdata and storing data. So my SQLDatabase saves 2 strings and 1 Integer. 1 string which stores extra information the user can give from a TextField, 1 Integer which is a number the User can set. And a String which is basically an NSString from an NSDate (which is either the current date+time or the user can choose one)</p>  <p>So I have this tableView and another EditViewController to add these new measurements. I already got it to order them from highest indexPath (x) to lowest (0).</p>  <p>But now when we have e.g a measurment from 29.09.2015 and one from 31.09.2015 already, but the User wants to insert one from 30.09.2015, how can i put it in the right order according to the NSString, which represents my Date.</p>  <p>Is there a way to order NSStrings like 30.09.2015, 31.09.2015, 01.10.2015 etc...  eventhough it is not saved as NSDate?</p>  <p>So basically my question is where and what do I have to insert in my code to get this data in order, and how do i represent it in my TableView.</p>  <p>Here is my Code so far, with the "ordering" from highest to lowest. Just assume that "lastName" is the NSString which saves my Date.</p>  <pre><code>-(void)viewDidAppear:(BOOL)animated{ // Do any additional setup after loading the view, typically from a nib.  // Make self the delegate and datasource of the table view. self.tblPeople.delegate = self; self.tblPeople.dataSource = self;  // Initialize the dbManager property. self.dbManager = [[DBManager alloc] initWithDatabaseFilename:@"sampledb.sql"];  // Load the data. [self loadData];}  -(void)loadData{ // Form the query. NSString *query = @"select * from peopleInfo";  // Get the results. if (self.arrPeopleInfo != nil) {     self.arrPeopleInfo = nil; } self.arrPeopleInfo = [[NSArray alloc] initWithArray:[self.dbManager loadDataFromDB:query]];  // Reload the table view. [self.tblPeople reloadData];}    -(NSInteger)numberOfSectionsInTableView:(UITableView *)tableView{ return 1;}   -(NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{ return self.arrPeopleInfo.count;}  -(UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{  static NSString *CellIdentifier = @"idCellRecord";  PulseTableViewCell *Cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier];  NSUInteger row = [indexPath row]; NSUInteger count = [self.arrPeopleInfo count]; // here listData is your data source   NSInteger indexOfFirstname = [self.dbManager.arrColumnNames indexOfObject:@"firstname"]; NSInteger indexOfLastname = [self.dbManager.arrColumnNames indexOfObject:@"lastname"]; NSInteger indexOfAge = [self.dbManager.arrColumnNames indexOfObject:@"age"];  // Set the loaded data to the appropriate cell labels. Cell.mainLabel.text = [NSString stringWithFormat:@"%@", [[self.arrPeopleInfo objectAtIndex:(count-1-row)] objectAtIndex:indexOfAge]];   NSString *textViewString = [NSString stringWithFormat:@"Messung vom: %@", [[self.arrPeopleInfo objectAtIndex:(count-1-row)] objectAtIndex:indexOfLastname]];    Cell.dateLabel.text = textViewString;  Cell.activityLabel.text =  [NSString stringWithFormat:@"%@ mg/dl", [[self.arrPeopleInfo objectAtIndex:(count-1-row)] objectAtIndex:indexOfFirstname]];  return Cell;} </code></pre>  <p>For easyness i chose the firstname for the Info and the lastname as the String for the date.</p>