<p>My schema looks like this:</p>  <p>User has a foreign key to Admin (admin_id)</p>  <p>Admin is associated with League through admin_leagues table. So admin_leagues has a foreign_key to admin and a foreign key to league.</p>  <p>A Gadget has a foreign key to a User.</p>  <p>A Gadget has a foreign key to a GadgetStatus.</p>  <p>I would like to be able to sort Users by:</p>  <p>1 - The Users which Admin is associated with a League which ID=5</p>  <p>2 - The Users where the total amount of associated Gadgets which GadgetStatus.id = 4 sum of its quantity column is smaller than 100</p>  <p>3 - The rest of the users.</p>  <p>In order to solve this problem I have started writing what would be the query to just satisfy one (scoping it with admin, because I don't know how to do two joins), and I have come up with this:</p>  <p><code> SELECT Admin.* FROM Admin LEFT OUTER JOIN admin_leagues ON admin.id = admin_leagues.admin_id ORDER BY  CASE WHEN admin_leagues.league_id = 5 THEN 1       ELSE 0  END </code></p>  <p>This seems to work. But I am not sure how to associate this ordering with the second ordering condition.</p>