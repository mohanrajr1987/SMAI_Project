<p>I often use dictionaries in my code with non-struct objects as key. I find this very practical and the framework provides us a large number of methods.</p>  <p>However I wonder about the reproductibility of my code : is my program always giving the same result ? Indeed, I use foreach method or linq methods like this :</p>  <pre><code>Dictionary&lt;MyObject, double&gt; results = ...; ... var myKey = results.Keys.First(k =&gt; k.MyMethod() == 0); </code></pre>  <p>After searching on stack, I have the feeling that this code is wrong because if there are more than one key verifying k.MyMethod() == 0, I do not have the assurance to always obtain the same myKey. The order of results.Keys seems to be possibly different for two instances of my program.</p>  <p>Is there a mean to obtain the desired behaviour without defining an explicit comparison/order method for MyObject objects ? Can OrderedDictionary or SortedDictionary help me ? </p>