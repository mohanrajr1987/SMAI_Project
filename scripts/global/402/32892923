<p>This post sort of gets to my question :<a href="http://stackoverflow.com/questions/25036007/linear-regression-loop-for-each-independent-variable-individually-against-depend">Linear Regression loop for each independent variable individually against dependent</a></p>  <p>However, I am trying too add rolling periods for the regression. </p>  <p>Example:</p>  <pre><code>data &lt;-data.frame("col1"=runif(10,2,10),"col2"=runif(10,1,10),"col3"=runif(10,1,10),"col4"=runif(10,1,10))  sapply(data, function(x) rollapply(data,30, coef(lm(data$col1~x,data=data)))) </code></pre>  <p>EDIT: To give an deeper idea of what I am after, I should note that prior to using the Sapply method (after having read some SO posts that vectorized solutions were preferred), I had been trying for loops to loop over the columns I wanted to use as independent variables.</p>  <pre><code>betadf &lt;- data.frame() for (i in colnames(data2[,3:ncol(data2)])){ formula &lt;- formula(paste("variablename ~",i,sep="")) data3 &lt;- na.omit(merge(data2[,'variablename'],data2[,i])) model &lt;- na.omit(rollapply(data3,rollperiod,                           function(z) coef(lm(formula,data=as.data.frame(z))),                          by.column = FALSE, align = "right")) colnames(model) &lt;- c("intercept",i) betadf &lt;- cbind(betadf,model[,i]) } </code></pre>