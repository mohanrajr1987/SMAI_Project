<p>I am quite perplexed on why I should not be encoding unicode text with UTF-8  for comparison when other text(to compare) has been encoded with UTF-8?</p>  <p>I wanted to compare a text(= アクセス拒否 - means Access denied) stored in external file encoded as UTF-8 with a constant string stored in a .java file as </p>  <pre><code>public static final String ACCESS_DENIED_IN_JAPANESE = "\u30a2\u30af\u30bb\u30b9\u62d2\u5426"; // means Access denied  </code></pre>  <p>The java file was encoded as Cp1252.</p>  <p>I read the file as as input stream by using below code. Point to note that I am using UTF-8 for encoding.</p>  <pre><code> InputStream in = new FileInputStream("F:\\sample.txt");         int b1;          byte[] bytes = new byte[4096];         int i = 0;         while (true) {             b1 = in.read();             if (b1 == -1)                 break;             bytes[i++] = (byte) b1;         }          String japTextFromFile = new String(bytes, 0, i, Charset.forName("UTF-8")); </code></pre>  <p>Now when I compare as </p>  <pre><code>System.out.println(ACCESS_DENIED_IN_JAPANESE.equals(japTextFromFile));  // result is `true` , and works fine </code></pre>  <p>but when I encode <code>ACCESS_DENIED_IN_JAPANESE</code> with UTF-8 and try to compare it with <code>japTextFromFile</code>  result is <code>false</code>.  The code is </p>  <pre><code>String encodedAccessDenied = new String(ACCESS_DENIED_IN_JAPANESE.getBytes(),Charset.forName("UTF-8"));  System.out.println(encodedAccessDenied .equals(japTextFromFile));  // result is `false` </code></pre>  <p>So my doubt is why above comparison is failing, when both the strings are same and have been encoded with UTF-8? The result should be <code>true</code>.</p>  <p>However, in first case, when compared different encoded strings- one with UTF-16(Java default way of encoding string) and other with UTF-8 , result is <code>true</code>, which I think should be <code>false</code> as it is different encoding ,no matter text we read, is same.</p>  <p>Where I am wrong in my understanding? Any clarification is greatly appreciated.</p>