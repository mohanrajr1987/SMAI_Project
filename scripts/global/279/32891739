<p>I've run into a rather strange problem. </p>  <p>We have a MySql Database running behind our C#/Asp.Net web app.</p>  <p>We use parameters for each query in order to prevent SQL Injection attacks. </p>  <p>However we have recently being getting strange SQL Errors from a single customer. </p>  <p>On investigation we found that the customer had been pasting addresses containing the "Right single quotation mark" (â€™) character into fields on our site. </p>  <p>Surprisingly enough this seems to be getting through the parameterization section of our code, and getting inserted into the query, whereupon it was interpreted by our MySQL Server as an unescaped quotation mark. </p>  <p>This means that our customer is unknowingly performing an SQL injection attack on our server.</p>  <p>I have two questions regarding this:</p>  <p>1) Is this not incredibly insecure? If this worked against us are there other companies out there that may be subject to the same security vulnerability?</p>  <p>2) How do I fix this? Is there any way of sanitizing this input without running a regex or string replace before parameterizing user input? (With the size of the codebase and the amount of coders we have this could take up top a month of work).</p>  <p>We had always assumed that parameterization prevented anything less then concentrated malicious attack. Is this not the case?</p>  <p>Specs: MySQLServer 5.6<br> MySql .Net Connector 1.0.10.0<br> Asp.Net 4.5.1  </p>  <p>Any help or advice is appreciated...</p>