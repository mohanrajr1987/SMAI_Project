<p>this is my first question in stack overflow. </p>  <p>I'm not a expert java programmer but I have previous experience with the language and diffent IDEs.</p>  <p>I have a scenario where a customer requires that from a given WSDl I create a service that <strong>must</strong> be authenticated using a UsernameToken Profile 1.0 OASIS Standard 200401. It will be secured under ssl on production servers.</p>  <p>I've been doing some research and tried to implement different cases and I arrived at a point where nothing is working properly for me.</p>  <p>I'm using :</p>  <ul> <li>Eclipse as the base IDE</li> <li>Axis2 V1.6.3</li> <li>Rampart V1.6.2</li> <li>Rahas V1.6.2</li> </ul>  <p>To ilustrate the current situation, here I show you the structure that eclipse creates for me when generating the java bean service structure from the wsdl eclipse as the base IDE.</p>  <p><a href="https://dl.dropboxusercontent.com/u/71031985/schema.png" rel="nofollow">https://dl.dropboxusercontent.com/u/71031985/schema.png</a></p>  <p><br/></p>  <p>configuration applied:</p>  <p>in WebContent/WEB-INF/conf/axis2.xml I enable the rampart module and the passwordCallbackClass to be able to handle the username and password provided in the soap headers.</p>  <p></p>  <pre><code>&lt;module ref="rampart" /&gt;  &lt;parameter name="InflowSecurity"&gt;     &lt;action&gt;         &lt;items&gt;UsernameToken&lt;/items&gt;         &lt;passwordCallbackClass&gt;             serviceManager.ServiceAuthUserNameToken         &lt;/passwordCallbackClass&gt;         &lt;passwordType&gt;PasswordText&lt;/passwordType&gt;     &lt;/action&gt; &lt;/parameter&gt;  ... </code></pre>  <p>In the file located in /WebContent/WEB-INF/services/ProveedorCentroTFWS/META-INF/services.xml I place the rampart policy to be able to accomplish the usernametoken requirement:</p>  <pre><code>    &lt;wsp:Policy wsu:Id="UTOverTransport" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy"&gt; &lt;wsp:ExactlyOne&gt;   &lt;wsp:All&gt;     &lt;sp:TransportBinding xmlns:sp="http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"&gt;       &lt;wsp:Policy&gt;         &lt;sp:TransportToken&gt;           &lt;wsp:Policy&gt;             &lt;sp:HttpsToken RequireClientCertificate="false"/&gt;           &lt;/wsp:Policy&gt;         &lt;/sp:TransportToken&gt;         &lt;sp:AlgorithmSuite&gt;           &lt;wsp:Policy&gt;             &lt;sp:Basic128/&gt;           &lt;/wsp:Policy&gt;         &lt;/sp:AlgorithmSuite&gt;         &lt;sp:Layout&gt;           &lt;wsp:Policy&gt;             &lt;sp:Lax/&gt;           &lt;/wsp:Policy&gt;         &lt;/sp:Layout&gt;         &lt;sp:IncludeTimestamp/&gt;       &lt;/wsp:Policy&gt;     &lt;/sp:TransportBinding&gt;     &lt;sp:SignedSupportingTokens xmlns:sp="http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"&gt;         &lt;wsp:Policy&gt;             &lt;sp:UsernameToken sp:IncludeToken="http://schemas.xmlsoap.org/ws/2005/07/securitypolicy/IncludeToken/AlwaysToRecipient" /&gt;       &lt;/wsp:Policy&gt;     &lt;/sp:SignedSupportingTokens&gt;      &lt;ramp:RampartConfig xmlns:ramp="http://ws.apache.org/rampart/policy"&gt;          &lt;ramp:passwordCallbackClass&gt;serviceManager.ServiceAuthUserNameToken&lt;/ramp:passwordCallbackClass&gt;     &lt;/ramp:RampartConfig&gt;    &lt;/wsp:All&gt; &lt;/wsp:ExactlyOne&gt; </code></pre>  <p></p>  <p>When performing the call from a test client provided by the customer (and it cannot be modified) it sends the following soap message:</p>  <pre><code>    &lt;?xml version='1.0' encoding='UTF-8'?&gt;&lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"&gt; &lt;soapenv:Header xmlns:wsa="http://www.w3.org/2005/08/addressing"&gt;     &lt;wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" soapenv:mustUnderstand="1"&gt;         &lt;wsse:UsernameToken wsu:Id="UsernameToken-3"&gt;             &lt;wsse:Username&gt;username&lt;/wsse:Username&gt;             &lt;wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText"&gt;definedpwd&lt;/wsse:Password&gt;         &lt;/wsse:UsernameToken&gt;     &lt;/wsse:Security&gt;     &lt;wsa:To&gt;http://localhost:8080/ProveedorCentroTFWS&lt;/wsa:To&gt;     &lt;wsa:MessageID&gt;urn:uuid:f2fb54d9-8957-49a2-88a7-de6d209e6d35&lt;/wsa:MessageID&gt;     &lt;wsa:Action&gt;getActionList&lt;/wsa:Action&gt; &lt;/soapenv:Header&gt; &lt;soapenv:Body&gt;     &lt;ns3:getActionListxmlns:ns3="http://impl.ws.application.proveedorcentro.meyss.spee.es" /&gt; &lt;/soapenv:Body&gt; </code></pre>  <p></p>  <p>The error returned is the following one once the soap message is sent:</p>  <pre><code>    java.lang.RuntimeException: Malformed uri: UsernameTokenPolicy </code></pre>  <p>And the stack trace that it follows is:</p>  <pre><code>    org.apache.neethi.PolicyReference.getRemoteReferencedPolicy(PolicyReference.java:155) org.apache.neethi.PolicyReference.normalize(PolicyReference.java:110) org.apache.axis2.util.PolicyUtil.getMergedPolicy(PolicyUtil.java:267) org.apache.axis2.description.AxisBindingMessage.calculateEffectivePolicy(AxisBindingMessage.java:294) org.apache.axis2.description.AxisBindingMessage.getEffectivePolicy(AxisBindingMessage.java:225) org.apache.axis2.context.MessageContext.getEffectivePolicy(MessageContext.java:1617) org.apache.rampart.RampartMessageData.&amp;lt;init&amp;gt;(RampartMessageData.java:233) org.apache.rampart.MessageBuilder.build(MessageBuilder.java:61) org.apache.rampart.handler.RampartSender.invoke(RampartSender.java:65) org.apache.axis2.engine.Phase.invokeHandler(Phase.java:340) org.apache.axis2.engine.Phase.invoke(Phase.java:313) org.apache.axis2.engine.AxisEngine.invoke(AxisEngine.java:262) org.apache.axis2.engine.AxisEngine.sendFault(AxisEngine.java:516) org.apache.axis2.transport.http.AxisServlet.handleFault(AxisServlet.java:433) org.apache.axis2.transport.http.AxisServlet.doPost(AxisServlet.java:216) javax.servlet.http.HttpServlet.service(HttpServlet.java:648) javax.servlet.http.HttpServlet.service(HttpServlet.java:729) org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) </code></pre>  <p>I checked everything and every way to try to make it accept the soap messages, but I cannot make it work. </p>  <p>thanks for your support and attention</p>