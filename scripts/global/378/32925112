<p>I created an application with WPF and C# (no MVVM), I have multiple user controls  containing grids, forms and others things.  but finaly I wanted to add a login page, the way I started to build it, is to set by default all the user controls visibility in xaml to collapsed :</p>  <pre><code> Visibility="Collapsed" </code></pre>  <p>and for the login user control to visible, and after login and in the C# code behind I want to change the visibility of other usercontrols to visible and set the login page to collapsed.</p>  <p>I've tried something like this, but it didn't work :</p>  <pre><code>  Students studentsWin = new Students();    studentsWin.Visibility = Visibility.Visible;    Members MembersWin = new Members();   MembersWin.Visibility = Visibility.Visible; </code></pre>  <p>I have read in stackoverflow to use dependency proprety, and since I never used MVVM I don't know how to use it : I'm trying something like this :</p>  <pre><code>    public static DependencyProperty WindowVisibilityProperty = DependencyProperty.Register("WindowVisibility", typeof(Visibility), typeof(MemberStats), null);      public Visibility WindowVisibility     {         get         {             return (Visibility)GetValue(WindowVisibilityProperty);         }         set         {             SetValue(WindowVisibilityProperty, value);         }     } </code></pre>  <p>But I don't know how to use WindowVisibility in the xaml of the user controls, any help would be appreciated .</p>