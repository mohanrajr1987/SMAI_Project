<p>For years we've been manually writing large sql queries to satisfy business user requirements:  </p>  <blockquote>   <p>"Give me all the customers that live in Vermont, aren't corporate   clients (different table, exclusionary), don't have product x   (different table, exclusionary), have paid us money in the last x   months (different tables, inclusion), and drink tea on tuesdays and   thursdays (etc)."</p> </blockquote>  <p>We do this work every day, and often times with very similar criteria with slight tweaks, and unfortunately, it's both tedious and error prone.  I would really like to offload this work to a generic query/search interface to the business users who are the ones who need the data. </p>  <p>The trouble is that we have hundreds of tables that fk back to our customers tables in zero to 1 or zero to many relationships, so a single view would be really large and slow, even if we're talking about getting the top 50% of all probable criteria.  </p>  <p>My initial thought was to look at different reporting engines, but that hasn't seemed to help. The next thought was to create some kind of denormalized structure, loosely json based, that we could then setup essentially a faceted search on it, but this also seems unworkable. </p>  <p>Is there some sort of program that you can configure on top of your database that will do this based on fks and whatnot already? Or if not, is there a way to setup something like entity/nhibernate/whatever in such a way that it can issue the complex set of joins needed to get what the end user needs so that we can basically setup the mappings and let the interface build the queries based on checkmarks and dropdowns?  I would like to be able to easily add a new criteria via configuration rather than updating code.</p>  <hr>  <p>I've been searching for a solution to this for weeks off and on, and can't seem to find a suitable answer, and don't know where else to ask.</p>