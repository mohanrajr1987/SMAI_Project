<p>I have the following query:</p>  <pre><code>ObjectB objectBAlias = null; ObjectC objectCAlias = null; var query = session.QueryOver&lt;ObjectA&gt;(); var results = query     .JoinAlias(x =&gt; x.listOfBs, () =&gt; objectBAlias)     .JoinAlias(x =&gt; objectBAlias.ObjectC, () =&gt; objectCAlias)     .TransformUsing(new DistinctRootEntityResultTransformer())     .List&lt;ObjectA&gt;();  class ObjectA {     IList&lt;ObjectB&gt; listOfBs; }  class ObjectB {     ObjectA a;     ObjectC c; }  class ObjectC {     int x;         } </code></pre>  <p>ObjectA has a <code>many-to-many</code> relationship to ObjectC with ObjectB being the joining table. ObjectA has a list of ObjectB's, and ObjectB has a proporty of ObjectC. I'm trying to eager load ObjectC but have had no success.</p>  <p>The only way I've gotten all the ObjectCs to eager load was by doing this:</p>  <pre><code>foreach (ObjectA a in results) {     foreach (var b in a.listOfBs)     {         NHibernateUtil.Initialize(b.c);     } } </code></pre>  <p>But this doesn't seem like something that would scale very well.</p>