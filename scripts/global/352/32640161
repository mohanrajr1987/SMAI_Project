<p>We are having trouble with the way NHibernate (version 4.0.0.4000 AND 4.0.4.4000 tested) returns <strong>duplicate</strong> results.  In the sample below, I get 566 results (the correct <strong>number</strong> of results), but only 549 are unique, meaning there are 17 duplicates.  </p>  <pre><code>#region Get Record IDs public IList&lt;string&gt; GetRecordIds(string user, string agency, DateTime utcFrom, DateTime utcTo, SearchDateRangeType dateRangeType, IEnumerable&lt;string&gt; status, IEnumerable&lt;string&gt; billingStatus, IEnumerable&lt;string&gt; qaStatus, IEnumerable&lt;string&gt; transmissionStatus, IEnumerable&lt;string&gt; scheduledTransmissions, int pageSize = -1, int pageNumber = -1) {     using (ISession session = NHibernateHelper.OpenSession())     {         ICriteria crit = session.CreateCriteria&lt;Metadata&gt;();          var dateDisjunction = Restrictions.Disjunction();          dateDisjunction.Add(Restrictions.Between("IncidentDate", utcFrom, utcTo));          crit.Add(dateDisjunction);          if (string.IsNullOrEmpty(agency) == false)         {             crit.CreateAlias("Ownership._entities.AsIList", "entities");             crit.Add(Restrictions.Eq("entities._entityName._value", agency));             crit.Add(Restrictions.Eq("entities._isDeleted._value", false) || Restrictions.IsNull("entities._isDeleted._value"));         }          crit.AddOrder(Order.Asc(Projections.Property("RecordId")));          crit.SetProjection(Projections.Property("RecordId"));          if (pageSize &gt; 0 &amp;&amp; pageNumber &gt; 0)         {             crit.SetFirstResult(pageSize * (pageNumber - 1)).SetMaxResults(pageSize);         }          var ret = crit.List&lt;string&gt;();          return ret;     } } #endregion </code></pre>  <p>SQL Sample 1 is the generated <strong>first iteration</strong> code from NHibernate.  Subsequent pages (second page onward) use <code>ROW_NUMBER() OVER</code>.  SQL Sample 2 is a manually-created first page, which uses <code>ROW_NUMBER() OVER</code> as if it was a subsequent page.  NHibernate has apparently "optimized" away the  <code>ROW_NUMBER() OVER</code> for the first page and that seems(?) to be the cause of our issues.  </p>  <p>SQL Sample 1: Generated by NHibernate. Causes duplicates.</p>  <pre><code>SELECT     TOP (100) this_.RecordId as y0_  FROM     PcrMetadata this_  inner join     PcrEntities entities1_          on this_.Id=entities1_.ListKey  WHERE     (         this_.IncidentDate between '0001-01-01 00:00:00.0000000' and '9999-01-01 00:00:00.0000000'     )      and entities1_.Name = 'ClientIDNumber'      and (         entities1_.Entities_IsDeleted = 0          or entities1_.Entities_IsDeleted is null     ) </code></pre>  <p>SQL Sample 2: Manually created based on NHibernate second page on. Does not cause duplicates.</p>  <pre><code>SELECT     TOP (100) this_.RecordId as y0_   FROM     (SELECT         this_.Record as y0_,         ROW_NUMBER() OVER(     ORDER BY         CURRENT_TIMESTAMP) as __hibernate_sort_row      FROM         PcrMetadata this_      inner join         PcrEntities entities1_              on this_.Id=entities1_.ListKey      WHERE         (             this_.IncidentDate between '0001-01-01 00:00:00.0000000' and '9999-01-01 00:00:00.0000000'         )          and entities1_.Name = 'ClientIDNumber'          and (             entities1_.Entities_IsDeleted = 0              or entities1_.Entities_IsDeleted is null         )) as query  WHERE     query.__hibernate_sort_row &gt; 0 -- CHANGE THIS NUMBER </code></pre>  <p>Am I doing something wrong? Or there anything I can do to force NHibernate to use ROW_NUMBER? Thanks in advance for any help!</p>