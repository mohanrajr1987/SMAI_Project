<p>Basically, I have the following:</p>  <pre><code>using NHibernate.Mapping.Attributes; namespace GumiDAL.Domain {     [Class(Name="GumiDAL.Domain.App, GumiDAL", Table="App")]     public class App     {         [Id(Name="Id")]             [Generator(Class="identity")]         public virtual int Id { get; set; }          [Property]         public virtual string Name { get; set; }     } }  namespace GumiDAL.Repositories {      public class Repository&lt;T&gt;     {         public void Add(T t)         {             using (ISession session = NHibernateHelper.OpenSession())             using (ITransaction transaction = session.BeginTransaction())             {                 session.Save(t);                 transaction.Commit();             }             }     } } </code></pre>  <p>calling like so from an NUnit test:    </p>  <pre><code>[Test] public void Can_add_new_app() {     var app = new App { Name = "foo" };     Repository&lt;App&gt; repository = new Repository&lt;App&gt;();     repository.Add(app);      using (ISession session = _sessionFactory.OpenSession())     {         var fromDb = session.Get&lt;App&gt;(app.Id);          Assert.IsNotNull(fromDb);         Assert.AreNotSame(app, fromDb);         Assert.AreEqual(app.Name, fromDb.Name);          session.Delete(fromDb);     } }    </code></pre>  <p>but I'm getting a primary key violation (id = 0).</p>  <p>I'm setting up Schemas for testing like so:</p>  <pre><code>    [TestFixtureSetUp]     public void TestFixtureSetUp()     {         _configuration = new Configuration();         _configuration.Configure();          _configuration.AddInputStream(             HbmSerializer.Default.Serialize(                 typeof(App).Assembly             )         );          _sessionFactory = _configuration.BuildSessionFactory();      }      [SetUp]     public void SetupContext()     {         new SchemaExport(_configuration).Execute(true, true, false);     } </code></pre>  <p>and the SQL output to console does not specify the App table to have an identity column:     </p>  <pre><code>if exists (select * from dbo.sysobjects where id = object_id(N'App') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table App  create table App (     Id INT not null,    Name NVARCHAR(255) null,    primary key (Id) ) </code></pre>  <p>Goes without saying there's no insert / select session_id() going on either</p>  <p>What is going wrong here?</p>