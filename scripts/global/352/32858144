<p>I have upgraded our nHibernate library from version 4.0.0 to version 4.0.4.  Some automated tests instantly failed.</p>  <p>The tests broke because the framework is attempting to use the wrong column name for a foreign key on a many-to-many table.</p>  <p>Is this the fault of my code, or a bug in the latest version of nHibernate?</p>  <p>Now for the details. I have a many-to-many joining table:</p>  <pre><code>CREATE TABLE [cms_ManyToMany_PlayerGroupRetailAreas_PlayerGroup_RetailArea](     PlayerGroup_Id bigint          NOT NULL          FOREIGN KEY REFERENCES cms_PlayerGroup(Id),     [RetailArea_Id] [bigint]           NOT NULL          FOREIGN KEY REFERENCES cms_RetailArea(Id) )  </code></pre>  <p>And the corresponding mapping for this relationship is as follows:</p>  <pre><code> classMapper.Bag(                         playerGroup =&gt; playerGroup.RetailAreas,                         bagPropertiesMapper =&gt;                         {                             bagPropertiesMapper.Key(                                     keyMapper =&gt;                                         {                                             keyMapper.Column("PlayerGroup_Id");                                         }                                 );                             bagPropertiesMapper.Inverse(false);                             bagPropertiesMapper.Table("cms_ManyToMany_PlayerGroupRetailAreas_PlayerGroup_RetailArea");                             bagPropertiesMapper.Cascade(Cascade.All);                             bagPropertiesMapper.Lazy(CollectionLazy.Lazy);                          },                         collectionElementRelation =&gt;                         {                             collectionElementRelation.ManyToMany(                                 manyToManyMapper =&gt;                                 {                                     manyToManyMapper.Column("RetailArea_Id");                                 }                                 );                         }                         ); </code></pre>  <p>The following code fails:</p>  <pre><code>using (var transaction = this.Session.BeginTransaction()) {    foreach (var retailArea in pgb._retailAreas)    {       playerGroup.RetailAreas.Add(retailArea);    }    transaction.Commit();  // &lt;&lt;== Exception thrown here } </code></pre>  <p>Looking at the SQL Profiler I can see it's running the following query:</p>  <pre><code>INSERT INTO cms_ManyToMany_PlayerGroupRetailAreas_PlayerGroup_RetailArea             (                PlayerGroup_Id,                 id            )  VALUES (@p0, @p1) </code></pre>  <p>It should be using the column name <code>RetailArea_Id</code> rather than just <code>Id</code></p>  <p><hr /> <strong>Later Edit</strong></p>  <p>My <code>RetailArea</code> class was mapped via a configuration file (<code>RetailArea.hbm.xml</code>) while the PlayerGroup was mapped using mapping-by-code.</p>  <p>I changed the <code>RetailArea</code> mapping to mapping-by-code, and then the problem went away.</p>  <p>If there is a bug, it's only triggered by having mapping-by-code coexisting with configuration file mapping.</p>  <p><hr /> I should do the right thing now, and code up a specific test case and submit it to the nHibernate team as a reproducible defect.  </p>  <p>I probably won't. :-(</p>