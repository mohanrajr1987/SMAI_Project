<p>I use log4net in my project as well as NHibernate. Each logged piece of information is stored as an instance of <code>MyLog</code> object, which is already an NHibernate entity with its mapping, table etc. I also need to load the logs from the database and display it to a user, that is why NHibernate approach seems to be quite handy.</p>  <p>It is not difficult to setup logging into a database using the <code>AdoNetAppender</code> as described here:</p>  <p><a href="http://stackoverflow.com/questions/15516578/how-to-use-log4net-utility-for-logging-into-database-using-c-sharp">How to use Log4Net utility for logging into database using c#</a></p>  <p>However, I am wondering why would I have to explicitely configure all the column-property mapping in my config file:</p>  <pre><code>&lt;commandText value="INSERT INTO log ([Date],[Thread],[Level],[Logger],[Message],[Exception]) VALUES (@log_date, @thread, @log_level, @logger, @message, @exception)" /&gt; &lt;parameter&gt;                 &lt;parameterName value="@log_date"/&gt;                 &lt;dbType value="DateTime"/&gt;                 &lt;layout type="log4net.Layout.RawTimeStampLayout"/&gt; &lt;/parameter&gt; ... </code></pre>  <p>although I have already done it in my fluent API mapping!</p>  <pre><code>public LogRecordMap () {             Table("log");             Id(x =&gt; x.ID)                 .Column("id")                 .GeneratedBy.Native();             Map(x =&gt; x.ObjectID)                 .Column("objectid")                 .Not.Nullable() ... </code></pre>  <p>I find it duplicate, because I have to maintain both the fluent mapping and the <code>AdoNetAppender</code> configuration. Is there any "<code>NHibernateAppender</code>" I could provide with my mapping class instead of the direct SQL command with all its params as I have to provide the <code>AdoNetAppender</code>?</p>