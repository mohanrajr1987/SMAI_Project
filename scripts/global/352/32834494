<p>I am working with NHibernate right now, and am coming across a problem trying to improve the data bandwidth efficiency of what im working on.</p>  <p>The context is I am making a data event editor, which has a listview populated with events. These events have 3 types, each is stored in its own MSSQL Table.</p>  <p>There is a parent object, which contains lists of these 3 event types. Originally, I was just selecting all the parents and loading the events underneath it, but if you had say 20 parents, then it would run 60 querys or so to load the list.</p>  <p>I have changed it now to run just 3 querys, one to select all of each event type between date X and date Y. (This date is set with some DateTime pickers on the form).</p>  <p>Now, I am trying to print the name of the parent in the list too, but because I never visited the parent during the nHibernate, I only have a 'proxy' object and it causes a crash. The Parent object has potentially thousands of different objects under it, so I only want to load what I need.</p>  <p>What I have done in the meantime to get it to compile is to visit the object during my nHibernate.</p>  <p>My code to fetch the events is as follows:</p>  <pre><code>public IList&lt;MyEvent&gt; GetAllMyEventForAllParentsFromSpecificTimePeriod(     DateTime startTime, DateTime endTime) {     using (var session = SessionFactorySingleton.OpenSession())     {         var queryOver = session                .QueryOver&lt;MyEvent&gt;()                .Where(re =&gt; re.Time &lt;= endTime)                .And(re =&gt; startTime &lt;= re.Time)                .OrderBy(re =&gt; re.Time).Desc;          var list = queryOver.List();          if (list.Count &gt; 0)         {             foreach (var myEvent in list.Select(myEvent =&gt; myEvent.ParentItem.Name)) { }         }          return list;     } } </code></pre>  <p>What I have found so far is that the list loads much faster this way.</p>  <p>So I guess the real question here is what can I do to achieve the same thing as where I am visiting each and every ParentItem.Name just to force it to load them?</p>  <p><strong>Updated Answer:</strong> I have managed to improve the efficiency thanks to a co-worker.</p>  <pre><code>            return session                 .QueryOver&lt;MyEvent&gt;()                 .Where(re =&gt; re.Time &lt;= endTime)                 .And(re =&gt; startTime &lt;= re.Time)                 .JoinQueryOver(x =&gt; x.ParentItem)                 .List(); </code></pre>  <p><strong>The Answer:</strong></p>  <pre><code>foreach (var parent in list.Select(x =&gt; x.ParentItem)) { NHibernateUtil.Initialize(parent); } </code></pre>  <p>Which equates to:</p>  <pre><code>public IList&lt;MyEvent&gt; GetAllMyEventForAllParentsFromSpecificTimePeriod(     DateTime startTime, DateTime endTime) {     using (var session = SessionFactorySingleton.OpenSession())     {         var list = session                .QueryOver&lt;MyEvent&gt;()                .Where(re =&gt; re.Time &lt;= endTime)                .And(re =&gt; startTime &lt;= re.Time)                .List();          foreach (var parent in list.Select(x =&gt; x.ParentItem)) { NHibernateUtil.Initialize(parent); }                      return list;     } } </code></pre>