<p>-I have a Service running under Local System (no desktop interaction)</p>  <p>-I have a .js Script that makes a simple registry change in HKLM\software\ ...</p>  <p>Snipet:</p>  <pre><code>try{ var WshShell = new ActiveXObject("WScript.Shell"); regvalue = WshShell.ExpandEnvironmentStrings(regvalue); WshShell.RegWrite(regkey, regvalue, regtype); } </code></pre>  <p>-The script modifies the registry successfully when run through command prompt and double clicked</p>  <p>-The script also produces a text file upon completion. Either a "success.txt", or an "error.txt" in the case that WshShell.RegWrite() "catches" </p>  <p>This is how I am calling the script in the service (only hard coding for testing) </p>  <pre><code>STARTUPINFO si = { sizeof(STARTUPINFO) }; si.cb = sizeof(si); si.dwFlags = STARTF_USESHOWWINDOW; si.wShowWindow = SW_HIDE; PROCESS_INFORMATION pi; bool bRes = false; TCHAR appCmdLine[] = TEXT("C:\\Windows\\SysWOW64\\wscript.exe //NOLOGO C:/Test/testpatchHKLM.js"); bRes = CreateProcess(NULL, appCmdLine, NULL, NULL, TRUE, CREATE_NO_WINDOW, NULL, NULL, &amp;si, &amp;pi); </code></pre>  <p><strong>The CreateProcess returns true, the success text file is created by the script, but the registry remains unmodified.</strong> </p>  <p><em>Notes: 1) Sending the first parameter as NULL was mentioned in lots of other places, in fact that's the only way I got the script to successfully run.  2) the script has no UI or interaction with the user 3) shellexecute was producing the same behavior</em></p>  <p>I know there are a million easier ways to accomplish this, but my goal is to get THIS method working</p>  <p>I'm assuming it's something like wscript.exe not having permissions, but I shouldn't have to get the usertoken and runas since the service is creating the process...</p>