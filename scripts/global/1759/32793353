<p>My name's Arnaldo, I'm from Brazil and now I need study C#.</p>  <p>I wanna create a real model or real case to study.</p>  <p>I use the POO, polymorphism and heritage.</p>  <p>I've a "frmBase", that have all I need to a single form, like a DB connection, change size and more.</p>  <p>The next one, that instantiates the "frmBase" is "frmBaseConsulta", this second have a "TabControl" with two guides, one to GridView and other to register information.</p>  <p>And finally, the next one, that instantiates the "frmBaseConsulta" is "frmCadPesCity"; I put in this form a TextBox called "txbCityName" and a ComboBox called "cmbState".</p>  <p>The ComboBox is populated by the table that contains the record of states, as follows:</p>  <pre><code>    // This script is in the form "frmCadPesCity"     public void getStates()                                   //      {         BindingSource dbStates = new BindingSource();          dbStates = dal.openQuery("Select stateid, " +                                  "       stateAbbreviation || ' - ' ||statename as statename  "+                                  "  from country.tbstates  " +                                  " order by stateAbbreviation");          cmbState.ValueMember = "stateid";         cmbState.DisplayMember = "statename";                     cmbState.DataSource = dbStates;     }      // "ChildResources" is an abstract method , declared in "frmBaseConsulta"     // and override when necessary, like thi, in "frmCadPesCity"     public override void ChildResources()     {         //          getStates();     } </code></pre>  <p>In the DataGridView I select a record  ["Sam Diego", "CA"] to correct ("San Diego") and I click in Update button, the guide change to "Register", in the "txbCityName" object receive "Sam Diego", but the "cmbState" stay in te first record "AK".</p>  <p>Follows the script that change SelectedIndex value of the ComboBox :</p>  <pre><code>            // Method , declared in "frmBaseConsulta"             ...             else if (FocusedElement is ComboBox)             {                 // Get the value in the table based on the object name                 // getOldEditorValue =&gt; "CA - California"                 string sEditorValue = getOldEditorValue(((ComboBox)FocusedElement).Name);                 int iIndexValue = -1;                  // Find IndexValue                 iIndexValue = ((ComboBox)FocusedElement).FindStringExact(sEditorValue);                 ((ComboBox)FocusedElement).SelectedIndex = iIndexValue;             }             ... </code></pre>  <p>I tried all possible alternatives and does not work , can anyone help me with this?</p>  <blockquote>   <p>SelectedIndex   SelectedValue   SelectedText   SelectedItem</p> </blockquote>  <p>One more thing , when I create a TextBox programmatically to see if it is really picking up the data, the TextBox is created correctly. Follows the code:</p>  <pre><code>                TextBox txtComboBoxResult = new TextBox();                 txtComboBoxResult.Text = sEditorValue + " --&gt; " + iIndexValue.ToString();                 pnlCadastro.Controls.Add(txtComboBoxResult); </code></pre>  <p>Please, I need a help...</p>  <p>Sorry for my bad English...</p>