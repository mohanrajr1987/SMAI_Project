<p>This might sound a stupid question, but I'm trying to pix this past...I don't know how many hours. I have a <strong>jquery combobox</strong> here.</p>  <p>Combobox code :-</p>  <pre><code>&lt;script&gt;   (function( $ ) {     $.widget( "custom.combobox", {       _create: function() {         this.wrapper = $( "&lt;span&gt;" )           .addClass( "custom-combobox" )           .insertAfter( this.element );          this.element.hide();         this._createAutocomplete();         this._createShowAllButton();       },        _createAutocomplete: function() {         var selected = this.element.children( ":selected" ),           value = selected.val() ? selected.text() : "";          this.input = $( "&lt;input&gt;" )           .appendTo( this.wrapper )           .val( value )           .attr( "title", "" )           .addClass( "custom-combobox-input ui-widget ui-widget-content ui-state-default ui-corner-left" )           .autocomplete({             delay: 0,             minLength: 0,             source: $.proxy( this, "_source" )           })           .tooltip({             tooltipClass: "ui-state-highlight"           });          this._on( this.input, {           autocompleteselect: function( event, ui ) {             ui.item.option.selected = true;             this._trigger( "select", event, {               item: ui.item.option             });           },            autocompletechange: "_removeIfInvalid"         });       },        _createShowAllButton: function() {         var input = this.input,           wasOpen = false;          $( "&lt;a&gt;" )           .attr( "tabIndex", -1 )           .attr( "title", "Show All Items" )           .tooltip()           .appendTo( this.wrapper )           .button({             icons: {               primary: "ui-icon-triangle-1-s"             },             text: false           })           .removeClass( "ui-corner-all" )           .addClass( "custom-combobox-toggle ui-corner-right" )           .mousedown(function() {             wasOpen = input.autocomplete( "widget" ).is( ":visible" );           })           .click(function() {             input.focus();              // Close if already visible             if ( wasOpen ) {               return;             }              // Pass empty string as value to search for, displaying all results             input.autocomplete( "search", "" );           });       },        _source: function( request, response ) {         var matcher = new RegExp( $.ui.autocomplete.escapeRegex(request.term), "i" );         response( this.element.children( "option" ).map(function() {           var text = $( this ).text();           if ( this.value &amp;&amp; ( !request.term || matcher.test(text) ) )             return {               label: text,               value: text,               option: this             };         }) );       },        _removeIfInvalid: function( event, ui ) {          // Selected an item, nothing to do         if ( ui.item ) {           return;         }          // Search for a match (case-insensitive)         var value = this.input.val(),           valueLowerCase = value.toLowerCase(),           valid = false;         this.element.children( "option" ).each(function() {           if ( $( this ).text().toLowerCase() === valueLowerCase ) {             this.selected = valid = true;             return false;           }         });          // Found a match, nothing to do         if ( valid ) {           return;         }          // Remove invalid value         this.input           .val( "" )           .attr( "title", value + " didn't match any item" )           .tooltip( "open" );         this.element.val( "" );         this._delay(function() {           this.input.tooltip( "close" ).attr( "title", "" );         }, 2500 );         this.input.autocomplete( "instance" ).term = "";       },        _destroy: function() {         this.wrapper.remove();         this.element.show();       }     });   })( jQuery );    $(function() {     $( "#combobox" ).combobox();     $( "#toggle" ).click(function() {       $( "#combobox" ).toggle();     });   }); &lt;/script&gt; &lt;/head&gt;         &lt;select name="combobox" id="combobox" class="combobox"&gt;           &lt;option value=""&gt;&lt;/option&gt;              &lt;?php               try               {                 $s = $conn-&gt;query("SELECT * FROM testing2");               }               catch(PDOException $e)               {                 echo $e-&gt;getMessage();               }               while($test = $s-&gt;fetch(PDO::FETCH_OBJ))               {                 ?&gt;                   &lt;option value="&lt;?php echo $test-&gt;indexid; ?&gt;"&gt;&lt;?php echo $test-&gt;v1; ?&gt;&lt;/option&gt;                 &lt;?php               }               ?&gt;         &lt;/select&gt; </code></pre>  <p>I'm trying to get the value of the select value from the selected box, but I'm unable to get it :- Here's the code I've written for it :-</p>  <pre><code>&lt;script type="text/javascript"&gt; $('#combobox').change(function(){   var val = $("#combobox").val();   alert(val); }) &lt;/script&gt; </code></pre>  <p>But, this doesn't executes. What wrong am I doing here?</p>  <p>Here's the view-source of the combobox :-</p>  <pre><code>&lt;select name="combobox" id="combobox" class="combobox"&gt;   &lt;option value=""&gt;&lt;/option&gt;   &lt;option value="1"&gt;value1&lt;/option&gt;   &lt;option value="2"&gt;LoValue1&lt;/option&gt; &lt;/select&gt; </code></pre>