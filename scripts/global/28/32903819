<p>I think I have done a query very repetitive and I was wondering if you can help me to understand how to do it better. I am doing a <code>Join</code> and <code>GroupBy</code> depending on the <code>EnumDateFilter</code>. Can you help me please shorten the code as possible?</p>  <p>Thanks a lot!</p>  <pre><code>foreach (Client client in listClient){     var books = _servBook.GetBooks(BeginDate, EndDate, ClientId).ToList();      switch (enumDateFilter)     {         case EnumDateFilter.Today:         case EnumDateFilter.OneDay:             {                 books.Join(                     dates,                     bk =&gt; new { bk.Date.Hour, bk.Date.Day, bk.Date.Month, bk.Date.Year },                     cd =&gt; new { cd.Date.Hour, cd.Date.Day, cd.Date.Month, cd.Date.Year },                     (bk, chart) =&gt; new { bk, chart.Data }                 )                 .GroupBy(a =&gt; new                 {                     a.bk.Date.Hour,                     a.bk.Date.Day,                     a.bk.Date.Month,                     a.bk.Date.Year,                     a.Data                 })                 .Select(                     a =&gt;                     {                         a.Key.Data[client.Name] = a.Count().ToString();                         return a;                     }                 ).ToList();             }             break;          case EnumDateFilter.OneWeek:         case EnumDateFilter.OneMonth:         case EnumDateFilter.LastWeek:         case EnumDateFilter.LastMonth:             {                 books.Join(                     dates,                     bk =&gt; new { bk.Date.Day, bk.Date.Month, bk.Date.Year },                     cd =&gt; new { cd.Date.Day, cd.Date.Month, cd.Date.Year },                     (bk, chart) =&gt; new { bk, chart.Data }                 )                 .GroupBy(a =&gt; new                 {                     a.bk.Date.Day,                     a.bk.Date.Month,                     a.bk.Date.Year,                     a.Data                 })                 .Select(                     a =&gt;                     {                         a.Key.Data[client.Name] = a.Count().ToString();                         return a;                     }                 ).ToList();                  break;             }          case EnumDateFilter.ThreeMonths:         case EnumDateFilter.SixMonths:         case EnumDateFilter.OneYear:         case EnumDateFilter.LastThreeMonths:         case EnumDateFilter.LastSixMonths:         case EnumDateFilter.LastYear:             {                 books.Join(                     dates,                     bk =&gt; new { bk.Date.Month, bk.Date.Year },                     cd =&gt; new { cd.Date.Month, cd.Date.Year },                     (bk, chart) =&gt; new { bk, chart.Data }                 )                 .GroupBy(a =&gt; new                 {                     a.bk.Date.Month,                     a.bk.Date.Year,                     a.Data                 })                 .Select(                     a =&gt;                     {                         a.Key.Data[client.Name] = a.Count().ToString();                         return a;                     }                 ).ToList();                 break;             }          case EnumDateFilter.SinceBeginning:             {                 books.Join(                     dates,                     bk =&gt; new { bk.Date.Year },                     cd =&gt; new { cd.Date.Year },                     (bk, chart) =&gt; new { bk, chart.Data }                 )                 .GroupBy(a =&gt; new                 {                     a.bk.Date.Year,                     a.Data                 })                 .Select(                     a =&gt;                     {                         a.Key.Data[client.Name] = a.Count().ToString();                         return a;                     }                 ).ToList();                 break;             }     } </code></pre>