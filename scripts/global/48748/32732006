<p>I'm building multiple rails apps that shall be used by the same users. Therefore it would be nice to have a single sign on using OAuth.</p>  <p>At this point of time I got two different apps:</p>  <p>ID - which handles all the user stuff (name, avatar, email, authentication) TEAM - should be able to use ID's users via OAuth</p>  <p>ID runs with doorkeeper and TEAM uses devise for authentication.</p>  <hr>  <p>My problem is that if I want to login into team with my doorkeeper OAuth provider I do always get an invalid credentials error - and I just don't know what to do.</p>  <p>That's my setup:</p>  <p>ID</p>  <pre><code># config/routes.rb  # oauth2 sso use_doorkeeper  namespace :api do   namespace :v1 do     # another api routes     get '/me' =&gt; "credentials#me"   end end   # controllers/api/v1/api_controller.rb module Api::V1   class ApiController &lt; ::ApplicationController     def current_resource_owner       User.find(doorkeeper_token.resource_owner_id) if doorkeeper_token     end   end end   # controllers/api/v1/credentials_controller.rb module Api::V1   class CredentialsController &lt; ApiController     doorkeeper_for :all     respond_to :json      def me       respond_with current_resource_owner     end   end end </code></pre>  <p>I added an application with the callback <code>http://team.dev/users/auth/doorkeeper/callback</code>.</p>  <p>TEAM</p>  <pre><code># gemfile gem 'devise' gem 'omniauth' gem 'omniauth-oauth2'   # config/routes.rb devise_for :users, :controllers =&gt; { :omniauth_callbacks =&gt; "users/omniauth_callbacks" } do   get 'sign_out', :to =&gt; 'users/sessions#destroy', :as =&gt; :destroy_user_session end   # lib/omniauth/strategies/doorkeeper.rb require 'omniauth-oauth2'  module OmniAuth   module Strategies     class Doorkeeper &lt; OmniAuth::Strategies::OAuth2       # change the class name and the :name option to match your application name       option :name, :doorkeeper        option :client_options, {         :site =&gt; "http://aubrey-id.dev",         :authorize_url =&gt; "/oauth/authorize"       }        uid { raw_info["id"] }        info do         {           :email =&gt; raw_info["email"]           # and anything else you want to return to your API consumers         }       end        def raw_info         @raw_info ||= access_token.get('/api/v1/me.json').parsed       end     end   end end  # config/initializers/devise.rb require File.expand_path('lib/omniauth/strategies/doorkeeper', Rails.root)  Devise.setup do |config|   config.omniauth :doorkeeper, 'APP ID', 'APP SECRET' end   # controllers/users/omniauth_callbacks_controller.rb class Users::OmniauthCallbacksController &lt; Devise::OmniauthCallbacksController   def doorkeeper     oauth_data = request.env["omniauth.auth"]     @user = User.find_or_create_for_doorkeeper_oauth(oauth_data)     @user.update_doorkeeper_credentials(oauth_data)     @user.save      sign_in_and_redirect @user   end end   # controllers/users/sessions_controller.rb class Users::SessionsController &lt; Devise::SessionsController end   # models/user.rb class User &lt; ActiveRecord::Base   devise :omniauthable    def self.find_or_create_for_doorkeeper_oauth(oauth_data)     User.find_or_initialize_by_doorkeeper_uid(oauth_data.uid).tap do |user|       user.email = oauth_data.info.email     end   end    def update_doorkeeper_credentials(oauth_data)     self.doorkeeper_access_token = oauth_data.credentials.token   end end </code></pre>  <p>If I now try to authenticate using doorkeeper all I get is a invalid credentials error.</p>  <p>Hope somebody has a hint for me!</p>