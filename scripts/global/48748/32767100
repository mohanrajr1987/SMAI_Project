<p>I'm using RSpec for testing a SessionsController I am overriding from Devise in my Rails application:<br> <code>class Users::SessionsController &lt; Devise::SessionsController</code></p>  <p>The sign_in method renders a jbuilder view:<br> <code>render '/users/sign_in', status: :ok</code></p>  <p>I get the expected result when testing the view using <code>curl</code>. But I haven't been able to make this work with my specs. I get the following error:  </p>  <pre><code> Failure/Error: post '/users/sign_in', @data, format: 'json'  ActionView::MissingTemplate:    Missing template users/sign_in with {:locale=&gt;[:en], :formats=&gt;[:html], :variants=&gt;[], :handlers=&gt;[:erb, :builder, :raw, :ruby, :jbuilder, :haml]}. Searched in: </code></pre>  <p>The jbuilder views are working for other specs by using <code>render_views</code>. But when I add <code>render_views</code> to this spec, I get:  </p>  <pre><code>`method_missing': undefined local variable or method `render_views' for RSpec::ExampleGroups::UserEdit:Class (NameError) </code></pre>  <p>The difference between the specs where <code>render_views</code> works and this spec is the type. It's working here: <code>describe SomeController, type: :controller do</code></p>  <p>But not on this one:<br> <code>describe 'User edit', type: :request do</code></p>  <p>It's a request type since I'm testing the API response. As I said, I get the expected JSON view using <code>curl</code> from the command line, but it doesn't work in the tests. I must be missing some small detail or doing something completely wrong.</p>  <p>I also tried adding this to Rspec.configure but it didn't change anything:<br> <code>config.render_views</code>  </p>  <p><strong>Edit:</strong></p>  <p>I must add the test pass when using: <code>render json: { stuff }.to_json, status: :ok</code> in the controller's response. This started failing when I refactored this into a jbuilder view.</p>  <p>Regarding the format, I'm using the 'simple_token_authentication' gem and passing this info to each request in the spec:</p>  <pre><code>{   'X-User-Email' =&gt; user.email,   'X-User-Token' =&gt; user.authentication_token,   'Content-Type' =&gt; 'application/json',   'Accept'       =&gt; 'application/json' } </code></pre>  <p>I had <code>format: :json</code> in other tests and didn't make it work:</p>  <pre><code>  post '/users/sign_in', @data, format: :json </code></pre>  <p>So setting format: :json as a value in the second parameter made things work.</p>