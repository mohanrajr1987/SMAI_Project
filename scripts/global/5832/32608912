<p>I would like to know whether it is possible to shift part of a drawing by copying its pixels rather than redrawing it.</p>  <p>I work in an embedded environment, where performance is a key factor. We use Qt 4.8.</p>  <p>I have a set of real-time data points that I want to draw. I define the following class:</p>  <pre><code>class SetOfDataPoints : public QGraphicsItem { public:   &lt;constructor&gt;   QRectF boundingRect() const { ... }   void paint(QPainter* painter,              const QStyleOptionGraphicsItem* option,              QWidget* widget = NULL) { ... }   &lt;other methods&gt; }; </code></pre>  <p>At regular intervals, I read a new data point, add it to the instance of <code>SetOfDataPoints</code>, and shift the <code>SetOfDataPoints</code> to the left (by calling <code>QGraphicsItem::moveBy()</code> on the <code>SetOfDataPoints</code>), so the new data point becomes visible. As a result, <code>SetOfDataPoints::paint()</code> gets called, and in that method I have to draw the <strong>entire</strong> set of data points. The drawing currently consists only of line segments that connect the data points, but will become more elaborate in the future.</p>  <p>Now, it feels inefficient to redraw the whole set of data points, when most of the graph is actually just shifted to the left. I would like to shift the pixels of the unchanged part of the graph to the left, and draw only the one line segment that connects the last two points. At least I would like to try, and measure how much that improves performance.</p>  <p>Is there a way to do that in Qt 4.8?</p>