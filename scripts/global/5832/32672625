<p>To speed-up <code>QComboBox</code> work with very big data set want to try to use <code>QSqlQueryModel</code> instead of <code>QStandardItemModel</code>. However text data in <code>QComboBox</code> I need to map to an ID, which is stored and accessible currently by <code>itemData(rowIndex, Qt::UserRole)</code>. In <code>QSqlQueryModel</code> query there will be 2 columns: ID and Text; and <code>QComboBox setModelColumn(1)</code> is defined, i.e. Text.</p>  <p>How to correctly subclass or redefine <code>QSqlQueryModel</code>, if <code>combobox-&gt;itemData(rowIndex, Qt::UserRole)</code> have to contain ID? Who had implemented such things or know link to a source? If I define <code>QVariant QSqlQueryModel::data(const QModelIndex &amp; item, int role = Qt::DisplayRole)</code> in a such way:</p>  <pre><code>QVariant MySqlModel::data(const QModelIndex &amp;index, int role) const {     if(role == Qt::UserRole &amp;&amp; index.column() == 1)          return QSqlQueryModel::data(this-&gt;index(index.row(), 0), Qt::DisplayRole);      return QSqlQueryModel::data(index, role); } </code></pre>  <p>will it work, i.e. whether <code>combobox-&gt;itemData(rowIndex, Qt::UserRole)</code> will contain ID in this case? Or need to investigate Qt sources?</p>