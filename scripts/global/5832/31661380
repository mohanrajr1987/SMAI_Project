<p>There is a change between QT4 and QT5 when handling Menubar menus access keys and QActions shortcuts that have conflicting key combinations.</p>  <p>In Qt4 when a MenuBar contains a menu with an ampersand like &amp;File it can be opened by tapping on Alt and then tapping F.  If a QAction is created using the same hotkey combination like Alt+F then the QAction ‘s signal will be fired if Alt and F are pushed simultaneously or alt is held down and F is pushed.<br> This is similar functionality to Visual Studios and other MS programs.</p>  <p>In Qt5.4 and Qt5.5 when a MenuBar contains a menu with an ampersand like &amp;File it can be opened by tapping on Alt and then tapping F. If a QAction is created using the same hotkey combination like Alt+F then the QAction ‘s signal will be NOT fired.  Instead nothing happens and a warning message is sent to the application output.</p>  <p>QAction::eventFilter: Ambiguous shortcut overload: Alt+F</p>  <p>This issue can be duplicated using a QTcreator example like menus and changing the setshortcut for newAct to Alt+F or another shortkey that is the same as a menubar.</p>  <pre><code>fileMenu = menuBar()-&gt;addMenu(tr("&amp;File")); fileMenu-&gt;addAction(newAct);  void MainWindow::createActions() {     newAct = new QAction(tr("&amp;New"), this);     newAct-&gt;setShortcut(tr("Alt+F"));  // This will work in QT4 but not in QT5 and will send a message QAction::eventFilter: Ambiguous shortcut overload: Alt+F     newAct-&gt;setStatusTip(tr("Create a new file"));     connect(newAct, SIGNAL(triggered()), this, SLOT(newFile())); </code></pre>  <p>My question is what is the correct functionality for windows QT4 or Qt5.  If QT5 is correct is there a way to setup Qt so it acts like QT4 instead.</p>