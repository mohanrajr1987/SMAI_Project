<p>I am very new to c++.  I am taking a class and this is one of my assignments.  The program is supposed to resemble a very simple banking system using classes.  I have been pouring over my code for about 4 hours but have not been to solve some of the error codes that are coming up.  It seems like a lot of the errors could be related to the same problem?  </p>  <p>Errors:</p>  <p><strong>Error C2511</strong> 'Account::Account(const Person &amp;,int,double)': overloaded member function not found in 'Account' account.cpp 14</p>  <p><strong>Error C2597</strong> illegal reference to non-static member 'Account::accountNumber'     account.cpp 16</p>  <p><strong>Error C2597</strong> illegal reference to non-static member 'Account::accountBalance'    account.cpp 17</p>  <p><strong>Error C2039</strong> 'getPerson': is not a member of 'Account' account.cpp   20</p>  <p><strong>Error C2270</strong> 'getPerson': modifiers not allowed on nonmember functions account.cpp   21</p>  <p><strong>Error C2065</strong> 'accountPerson': undeclared identifier  account.cpp 22</p>  <p><strong>Error C3646</strong> 'accountPerson': unknown override specifier account.h   9</p>  <p><strong>Error C4430</strong> missing type specifier - int assumed. Note: C++ does not support default-int    account.h   9</p>  <p><strong>Error C3646</strong> 'accountPerson': unknown override specifier account.h   9</p>  <p>Account.h file</p>  <pre><code>#pragma once #include "Person.h"  #include &lt;iostream&gt;  using namespace std;  class Account { private:     Person accountPerson;     int accountNumber;     double accountBalance; public:     //Defualt Constructor     Account();     //Paramaterized Constructor     //Peramaters: a reference to a person object, an int for the account number, and a double for the balance     Account(const Person&amp;, int, double);     //Getter that returns a Person object associated with account     //no parameter     Person getPerson() const;     //Getter that returns the account number     //no parameter     int getAccountNumber() const;     //Getter that returns Account Balance     //no parameter     double getAccountBalance() const;     //Method that adds the input to the current account balance     //Parameter: a double that represents deposit amount     void deposit(double d);     //Method that subtracts input from account balance     //Parameter: a double that represents withdraw amount     void withdraw(double w); }; </code></pre>  <p>Account.cpp file</p>  <pre><code>#include "Account.h" #include "Person.h"  #include &lt;iostream&gt;  using namespace std;    Account::Account() {     accountNumber = 0;     accountBalance = 0.00; }  Account::Account(const Person &amp;person,int accNumber,double accBalance) {     Person accountPerson = person;     accountNumber = accNumber;     accountBalance = accBalance; }  Person Account::getPerson() const {     return accountPerson; }  int Account::getAccountNumber() const {     return accountNumber; }  double Account::getAccountBalance() const {     return accountBalance; }  void Account::deposit(double d) {     accountBalance += d; }  void Account::withdraw(double w) {     accountBalance -= w; } </code></pre>  <p>This is my Driver.cpp file just in case you need it.  It has a header file that includes all of the includes needed and defines my constants and declares the display accounts function.</p>  <pre><code>#include "Driver.h"  using namespace std;  int main() {     cout &lt;&lt; "Project 2 | 9.8.15 \n" &lt;&lt; endl;      cout &lt;&lt; "Jason's Bank" &lt;&lt; endl;     cout &lt;&lt; fixed &lt;&lt; setprecision(PRECISION);      vector&lt;Account&gt; a;      Person john("John Stockton", "1 Jazz lane");     Person karl("Karl Malone", "2 Jazz lane");     Person jerry("Jerry Sloan", "3 Jazz lane");      Account one(john, 1, 500.00);     Account two(karl, 2, 1000.00);     Account three(jerry, 3, 1200.00);      a.push_back(one);     a.push_back(two);     a.push_back(three);      for (int i = 0; i &lt; a.size(); i++)     {         a[i].deposit(25.00);     }     for (int i = 0; i &lt; a.size(); i++)     {         a[i].withdraw(100.00);     }      displayAccounts(a);      system("pause");     return 0; };  void displayAccounts(const vector&lt;Account&gt;&amp; v) {     for (int i = 0; i &lt; v.size(); i++)     {         Person p = v[i].getPerson();         cout &lt;&lt; setw(COLUMN_WIDTH_SHORT) &lt;&lt; v[i].getAccountNumber() &lt;&lt; setw(COLUMN_WIDTH_LONG)             &lt;&lt; p.getName() &lt;&lt; setw(COLUMN_WIDTH_LONG) &lt;&lt; p.getAddress()             &lt;&lt; setw(COLUMN_WIDTH_SHORT) &lt;&lt; v[i].getAccountBalance() &lt;&lt; endl;     } }; </code></pre>  <p>Thanks in advance for any help!</p>