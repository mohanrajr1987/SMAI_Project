<p>I have a C++ project with /src, /include and /bin folders and a Makefile which compiles everything fine.</p>  <p>I need to include another project which is in its own directory /dir which itself contains .o, .c, and .h files. I have tried a bunch of things to get the files from in there to link into my project but I keep getting "undefined references" (after '#include'-ing them in my cpp project of course).</p>  <p>I have tried using:</p>  <pre><code>LIB= dir/ </code></pre>  <p>and then adding <code>-I$(LIB)</code> to the compile flags but they are still not being found.</p>  <p>I have also tried adding all of the .o objects to the OBJECTS variable along with my other files but that doesn't work either.</p>  <p>I am still very new to Make files and find the syntax and structure confusing, even after going through a few tutorials.</p>  <p>I can provide more code from the makefile if that makes things easier.</p>  <p>EDIT: Here is the makefile, most of it has been copied from another project I have been working with which was not written by me.</p>  <pre><code>CC=g++ SRC= src/ OBJ= bin/ DIR= dir/ TARGET=exec  CFLAGS= `pkg-config --cflags opencv` -O2 -Wall -std=c++11 -D$(TARGET_SYS) LINKFLAGS = `pkg-config --libs opencv`  LIBS = -L/usr/local/cuda-7.5/lib64  OBJECTS=main.o \         miner.o \         training_model.o \         background_sub.o \         helpers.o \         ../dir/svm_common.o \         ../dir/svm_hideo.o \         ../dir/svm_classify.o \         ../dir/svm_learn.o \         ../dir/svm_learn_main.o   all:$(TARGET)  $(TARGET): $(addprefix $(OBJ),$(OBJECTS))     $(CC) -o $(OBJ)$(TARGET) $(addprefix $(OBJ),$(OBJECTS)) $(LINKFLAGS) $(LIBS)  $(OBJ)%.o: $(DIR)%.c $(SRC)%.cpp | MKDIR     $(CC) $&lt; -o $@ -c $(CFLAGS)  clean:     rm -rf $(OBJ)*.o   MKDIR:     mkdir -p $(OBJ) </code></pre>