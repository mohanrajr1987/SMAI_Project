<p>I have a bit of code ("core.h" below) that is used with a few different wrappers. Each of the wrappers require it to have a differently sized array. Currently I am using a <code>#define</code> in the wrapper header file to specify the size of that array, but that <code>#define</code> must be written in the file before the header is included. </p>  <pre><code>/*wrapper1.h*/ #define ARR_SIZE 42 // this must be written before- #include "core.h"   // this to ensure correct operation //...  /*wrapper2.h*/ #define ARR_SIZE 128 #include "core.h" //...  /*core.h*/ #ifndef ARR_SIZE #define ARR_SIZE 256 // default value #endif struct foo {    char arr[ARR_SIZE];    //... }; //... </code></pre>  <p>Is this bad practice? If so, is there a nicer option?</p>