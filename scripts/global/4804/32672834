<p>I have checked other similar questions on SO and they either propose to use WebUtility.HtmlDecode() or replace the encoded parts character-by-character or assumes some known regex pattern, etc. They do not answer this specific query.</p>  <p>I have a C# console application, which posts some data to a MVC application. Then the message returned by the service is written to a simple text file. When I write it to the file, the text is like</p>  <blockquote>   <p>"Something didn\u0027t work right while processing this request! \r\nSee detailed logs \u003e d:\\Sandboxes\\UGBNC\\Stage\\Logs\\ArgLog2087129002.log"</p> </blockquote>  <p>What I want is to remove these encoded texts like <code>\u0027</code>, <code>\r\n</code>, <code>\\</code> etc. and format it properly (like, with new line, tab etc.) in my text file. And I don't know what all characters might come, so <strong>I cannot replace them with <code>string replace</code> or <code>regex replace</code></strong>, I need a generic solution.</p>  <p>The MVC service returns the data as json with <code>Content-Type: application/json; charset=utf-8</code>, and my client code is this </p>  <pre><code>try {     using (var client = new HttpClient())     {         var request = WebRequest.Create(uri);         //configure request details         using (HttpWebResponse response = (HttpWebResponse)request.GetResponse())         using (StreamReader sr = new StreamReader(response.GetResponseStream()))         {             var message = sr.ReadToEnd();             //process message         }     } } catch (WebException wex) {     using (var stream = wex.Response.GetResponseStream())     using (var reader = new StreamReader(stream))     {         var message = reader.ReadToEnd(); //this is the encoded string         File.AppendAllText("SomeTextFile.txt", message);     } } </code></pre>  <p>What is the best/simplest way to do this?</p>  <p><strong>Note:</strong> I don't want to replace them character by character, I want a generic solution.</p>