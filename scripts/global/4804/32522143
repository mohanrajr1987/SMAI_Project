<p>I'd like to escape any special characters starting with <code>\</code> by matching them with regex and replacing them in the following way:</p>  <p><code>\n</code> â†’ <code>\\n</code></p>  <p>I could not match <code>\</code>. I assume this is because it is not a standalone character but a part of one. Is that correct?</p>  <p>My current solution is to match them one by one (<code>\n</code>, <code>\r</code>, etc), which is not desired.</p>  <p>Working way:</p>  <pre><code>str.gsub(/\n/, '\\\\n') </code></pre>  <p>Desired way:</p>  <pre><code>str.gsub(/[any special chars starting with '\']/, '\\[special char]') </code></pre>  <p>I understand I could do <code>/[[:space:]]/</code> or <code>/[[:cntrl:]]/</code>, but I don't know what the replacement should be (i.e. referring to each of the matched string and adding something before) and they'd also match other things.</p>  <p>Is this possible to solve in the described way (regex and replacing)?</p>