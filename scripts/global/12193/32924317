<p>Inconsistent? In the chapter about <a href="http://book.cakephp.org/3.0/en/orm/behaviors/translate.html#retrieve-all-translations-for-an-entity" rel="nofollow">translate behaviour in the CakePHP 3 book</a> there are three-letter codes used, derived from English names rather than native names of language like <a href="https://en.m.wikipedia.org/wiki/List_of_ISO_639-1_codes" rel="nofollow">ISO 639-2</a>:</p>  <pre><code>eng (english) spa (spanish) </code></pre>  <p>with this example to change the language:</p>  <pre><code>I18n::locale('spa'); </code></pre>  <p>But in the <a href="http://book.cakephp.org/3.0/en/core-libraries/internationalization-and-localization.html#setting-the-default-locale" rel="nofollow">chapter about Internationalization and Localization</a> it says</p>  <blockquote>   <p>Translation folders can either be the two letter ISO code of the language or the full locale name such as fr_FR, es_AR, da_DK which contains both the language and the country where it is spoken.</p> </blockquote>  <p>And the example to change the language looks like this:</p>  <pre><code>use Cake\I18n\I18n; I18n::locale('de_DE'); </code></pre>  <p>So is the chapter about the <code>translate behaviour</code> outdated or are all methods correct? I think it's probably better to be consistent and use the same language codes in both, <code>Translate behaviour</code> and <code>Internationalization and Localization</code>?</p>  <p>Also the i18n schema table example defines the field <code>locale</code> as <code>varchar(6)</code>... if 3-letter-code is required <code>varchar(3)</code> should be enough... But even if I use full local codes like <code>fr_FR</code> varchar(5) would be enough. Why is the example schema using <code>varchar(6)</code>?</p>