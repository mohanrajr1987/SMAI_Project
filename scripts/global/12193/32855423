<p>I've run into an issue with a dual language site that I can't find that answer to in any other questions.  So, I have wired up a form and display system that relies heavily on the verbose names given to each model.  The verbose name is translated, so the idea is that everything would work from that base.  So, for example, I have a model in my products/models.py:</p>  <pre><code>from django.utils.translation import ugettext_lazy as _  class ProductType(models.Model):     description = models.CharField(max_length=250)     ...      class Meta:         verbose_name = _('Ürün Tipi')         verbose_name_plural = _('Ürün Tipleri') </code></pre>  <p>From there, I create class-based forms and views.  Then, I create the urls by importing the views and looping through them in urls.py (I will just focus on one url for this example):</p>  <pre><code>from django.conf.urls import patterns, url from .views import editing_views  editing_patterns = [] for view in editing_views:     list_view = view['list']     slug = slugify(list_view.model._meta.verbose_name)     editing_patterns.append(         url(_(r'{0}/list/$').format(slug), list_view.as_view(), name='{0}-list'.format(slug))     )     ...  urlpatterns = patterns('products.views',     *editing_patterns ) </code></pre>  <p>As you can see, the url and url name are both coming from the slugified version of the model's verbose name, which is translated.  When the site is set to English, everything works fine.  But when it is set to Turkish, the system is not finding the translated urls:</p>  <pre><code>Reverse for 'urun-tipi-list' with arguments '()' and keyword arguments '{}' not found. 0 pattern(s) tried: [] </code></pre>  <p>Now the strange part is that when I import the url patterns from this file into the django shell, I always get the Turkish names, regardless of what language the site is set to:</p>  <pre><code>&lt;RegexURLPattern urun-tipi-list urun-tipi/list/$&gt; </code></pre>  <p>Now, perhaps this is just some wonkiness with the Django shell, but I also printed the patterns to the console at the end of the urls.py file, and the main problem seems to be that the urls in runtime are in English, regardless of what the site is set to:</p>  <pre><code>product-type/list/$ </code></pre>  <p>But obviously the verbose_name translation is working, because that is where we are getting the urun-tipi-list getting printed in the {% url %} tag of the template where its not being found.  </p>  <p>I'll throw in some more general information about the internationalization setup in case it is helpful.</p>  <p>in settings.py:</p>  <pre><code>TEMPLATE_CONTEXT_PROCESSORS = ( ... 'django.core.context_processors.i18n', ... )  MIDDLEWARE_CLASSES = ( ... 'django.middleware.locale.LocaleMiddleware', ... )  USE_I18N = True  LANGUAGES = [   ('tr', _('Turkish')),   ('en', _('English')), ]  LOCALE_PATHS = (     'locale', ) </code></pre>  <p>And after running the command line stuff, the resulting .po files have the following for this particular verbose name:</p>  <p>/en</p>  <pre><code>#: products/models.py:14 msgid "Ürün Tipi" msgstr "Product Type" </code></pre>  <p>/tr</p>  <pre><code>#: products/models.py:14 msgid "Ürün Tipi" msgstr "Ürün Tipi" </code></pre>  <p>Very mysterious if you ask me, but any help would be appreciated. </p>