<p>I am trying to use Jade to do some string interpolation + i18n</p>  <p>I wrote a custom tag</p>  <pre><code>mixin unsubscribe    a(title='unsubscribe_link', href='#{target_address}/',       target='_blank', style='color:#00b2e2;text-decoration:none;')    = __("Click here") </code></pre>  <p>Then I got the following to work</p>  <pre><code>p   | #[+unsubscribe] to unsubscribe </code></pre>  <p>However, in order to support i18n I would also like to wrap the the whole string in a translation block the function is called with <code>__()</code>.</p>  <p>But when I wrap the string in a code block it no longer renders the custom tag. </p>  <pre><code>p   | #{__("#[+unsubscribe] to unsubscribe")}  p   = __("#[+unsubscribe] to unsubscribe") </code></pre>  <p>will output literally <code>[+unsubscribe] to unsubscribe</code>. Is there a way to force the returned string from the function?</p>  <p><strong>Edit 1</strong></p>  <p>As has been pointed out, nesting the <code>"Click here"</code> doesn't really make sense, since it will be creating separate strings.</p>  <p>My goal with all this is really to create a simplified text string that can be passed off to a translation service:</p>  <p>So ideally it should be:</p>  <p><code>"#[+unsubscribe('Click here')] to unsubscribe"</code></p>  <p>and I would get back</p>  <p><code>"Klicken Sie #[+unsubscribe hier] um Ihr auszutragen"</code></p>  <p>My reasoning for this is that because using something like gettext will match by exact strings, I would like to abstract out all the logic behind the tag.</p>