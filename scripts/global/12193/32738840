<p>After solving this problem <a href="http://stackoverflow.com/questions/32705698/django-is-there-a-way-to-know-if-a-url-is-valid-in-the-application">here</a>, there's another one: if you use the translation url system here <a href="https://docs.djangoproject.com/en/1.8/topics/i18n/translation/" rel="nofollow">https://docs.djangoproject.com/en/1.8/topics/i18n/translation/</a> you will see you add patterns like <code>urlpatterns += i18n_patterns(...)</code>.</p>  <p>The problem is that the base url <strong>without</strong> the language is not taken in account ie:</p>  <ul> <li><code>resolve('/fr/produits/')</code> works,</li> <li>but <code>resolve('/produits/')</code> doesnt work and raises 404.</li> </ul>  <p>How to solve this?</p>  <p>Here are my urls:</p>  <pre><code>urlpatterns = [     url(r'^debug/?$', p_views.debug, name='debug'),     url(r'^i18n/', include('django.conf.urls.i18n')),     url(r'^login/(\w*)', p_views.login, name='login'),     url(r'^admin/', include(admin_site.urls)),     url(r'^public/(?P&lt;path&gt;.*)$',         'django.views.static.serve',         {'document_root': settings.MEDIA_ROOT},         name='url_public'         ), ] urlpatterns += i18n_patterns(     url(_(r'^produits/detail/(?P&lt;slug&gt;[a-zA-Z0-9-_]+)/$'),         p_views.ProduitDetailView.as_view(), name='produits_detail'),     url(_(r'^produits/'),         p_views.IndexView.as_view(), name='produits_index'), ) </code></pre>  <p>And here's the very simple URL-tester I've made (which corresponds to the <code>/debug</code> view):</p>  <pre><code>def debug(req):      def test(url):         try:             return u'&lt;pre&gt;{0} {1}&lt;/pre&gt;'.format(url, resolve(url))         except Resolver404:             return u'&lt;pre&gt;{0} {1}&lt;/pre&gt;'.format(url, 'None')      response = HttpResponse()     response.write(test('produits'))     response.write(test('produits/'))     response.write(test('/produits'))     response.write(test('/produits/'))     response.write(test('/fr/produits'))     response.write(test('/fr/produits/'))     response.write(test('/en/products/'))     response.write(test('/sv/produkter/'))     return response </code></pre>  <p>Here's the <code>http://localhost:8000/debug</code> page:</p>  <pre><code>produits None produits/ None /produits None /produits/ None /fr/produits None /fr/produits/ ResolverMatch(func=produits.views.IndexView, args=(), kwargs={}, url_name=produits_index, app_name=None, namespaces=[]) /en/products/ None /sv/produkter/ None </code></pre>  <p>The three lastest lines should all return <code>ResolverMatch(...)</code> because they are all valid URLs.</p>