<p>I found this very nice way to split strings:</p>  <pre><code>DECLARE @x VARCHAR(100)='a,b,c';  --This is the "normal" way WITH SplitXml(x) AS (SELECT CAST('&lt;root&gt;&lt;x&gt;' + REPLACE(@x,',','&lt;/x&gt;&lt;x&gt;') + '&lt;/x&gt;&lt;/root&gt;' AS XML)) SELECT SplitXml.x, a.b.value('.','varchar(1)') FROM SplitXml CROSS APPLY SplitXml.x.nodes('/root/x') AS a(b); </code></pre>  <p>Then I found the same approach without "root" and I thought this would not work, but it does...</p>  <pre><code>--Now the same without "root" --This leads to invalid XML, but works without problems WITH SplitXml(x) AS (SELECT CAST('&lt;x&gt;' + REPLACE(@x,',','&lt;/x&gt;&lt;x&gt;') + '&lt;/x&gt;' AS XML)) SELECT SplitXml.x, a.b.value('.','varchar(1)') FROM SplitXml CROSS APPLY SplitXml.x.nodes('/x') AS a(b) </code></pre>  <p>Is the XML in SplitXml.x valid or invalid? Does an XML always need a root-singleton?</p>