<p>I need to read a string with non-space separated values (0-9). Why can't I use Empty literal in <i>String.Split</i> method?</p>  <pre><code>// Reading Grid's row and col size gridInputValues = Console.ReadLine().Split(' '); gridRow = int.Parse(gridInputValues[0]); gridCol = int.Parse(gridInputValues[1]); gridMatrix2D = new int[gridRow, gridCol]; // Reading Grid's row * col matrix values for( int r = 0; r &lt; gridRow; r++ )  {     //string[] inputVal = Console.ReadLine().Split('');     //string[] inputVal = Console.ReadLine().Split(string.Empty));     string inputVal = Console.ReadLine();     for( int c = 0; c &lt; gridCol; c++ )      {         //gridMatrix2D[r, c] = int.Parse(inputVal[c]);         gridMatrix2D[r, c] = int.Parse(inputVal[c].ToString());     } </code></pre>  <p>Why not, </p>  <pre><code>string[] inputVal = Console.ReadLine().Split(''); </code></pre>  <p>or</p>  <pre><code>string[] inputVal = Console.ReadLine().Split(string.Empty)); </code></pre>  <p>works?</p>  <p>Alternatively, Is using <i>string.ToString</i> good practice in such case?</p>  <p>or</p>  <p>Will the <i>string.ToString</i> method on each iteration increase the running time?</p>  <h3>EDIT 1:</h3>  <p>Input:</p>  <pre><code> "12345" // type is string </code></pre>  <p>Expected Output:</p>  <pre><code> "1","2","3","4","5" // type is string[] </code></pre>