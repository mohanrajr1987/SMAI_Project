<p>I'm working with a dataframe, one column of which contains values that are mostly numeric but may contain non-numeric entries.  I would like to split this column into multiple columns. One of the new columns should contain the numeric portion of the original entry and another column should contain any non-numeric elements.</p>  <p>Here is a sample data frame:</p>  <pre><code>df &lt;- data.frame(ID=1:4,x=c('&lt; 0.1','100','A 2.5', '200'))  </code></pre>  <p>Here is what I would like the data frame to look like:</p>  <pre><code>ID   x1   x2 1    &lt;    0.1 2         100 3    A    2.5 4         200 </code></pre>  <p>On feature of the data I am currently taking advantage of is that the structure of the character strings is always as follows: the non-numeric elements (if they exist) always precede the numeric elements and the two elements are always separated with a space.  </p>  <p>I can use colsplit from the reshape package to split the column based on whitespace.  The problem with this is that it replicates any entry that can't be split into two elements,</p>  <pre><code>require(reshape) df &lt;- transform(df, x=colsplit(x,split=" ", names("x1","x2"))) df ID  x1   x2 1   &lt;    0.1 2   100  100 3   A    2.5 4   200  200 </code></pre>  <p>This is not terribly problematic as I can just do some post-processing to remove the numeric elements from column "x1."</p>  <p>I can also accomplish what I would like to do using strsplit inside a function:</p>  <pre><code>split.fn &lt;- function(id){  new.val &lt;- unlist(strsplit(as.character(df$x[df$ID==id])," "))    if(length(new.val)==1){      return(data.frame(ID=id,x1="NA",x2=new.val))    }else{      return(data.frame(ID=id,x1=new.val[1],x2=new.val[2]))    }    } data.frame(rbindlist(lapply(unique(df$ID),split.fn))) ID   x1   x2 1    &lt;    0.1 2    NA   100 3    A    2.5 4    NA   200       </code></pre>  <p>but this seems cumbersome.  </p>  <p>Basically both options I've outlined here will work.  But I suspect there is a more elegant or direct way to do get the desired data frame.</p>