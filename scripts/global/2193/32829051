<p>We have multiple records, each record has an asset list. The assest list consists of multiple client names and sites (name-site, name-site_2, name2-site_3, name3-site_4).</p>  <p>I'm trying to split the asset list to end up with two lists, one of all of the names and one of all of the sites (I only want to show what's unique in each list). I'm splitting at the comma and then split again at the hyphen</p>  <p>What I've created below works, but recently I've encountered some client-site combos that have an extra hyphen, which breaks my solution (I initially split the string by comma and then split the substrings by hyphen). To add another wrinkle, the extra hyphen is not always in the same spot, depending on the category it could be the first hyphen (in the client name) or second hyphen (in the site) that needs to be ignored, fortunately, this is consistent by category (if category == "animals").</p>  <p>For category animals if there are two hyphens I need to ignore the first.</p>  <p>For category fruit if there are two hyphens I need to ignore the second.</p>  <p>Any ideas?</p>  <p>Example asset lists: category == "animals" if there is two hyphens, I need to split at the second. assetList ="fish-mark, cat-jim, blue-dog-henry, red-bird-bill, green-snake-larry"</p>  <p>category == "fruit" if there is two hyphens, I need to split at the first. assetList = "lime-henry, lemon-susan, banana-bob-nelson, apple-rick-jones, pineapple-sam-smith"</p>  <p>Below is my code:</p>  <pre><code>var assetList = "fish-mark, cat-jim, blue-dog-henry, red-bird-bill, green-snake-larry";  var count = (assetList.match(/-/g) || []).length;//counts the hyphens (client-siteId combo)  var splitObj = {}; var comboObj = {}; var clientObj = {}; var siteObj = {}; var mainSplitObj = {}; var allClient = ''; var allSite = '';  mainSplitObj = assetList.split(', ');      for (var i = 0; i &lt; count; i++) {          splitObj["split"+i] = mainSplitObj[0+i]; //puts the client-siteID into a substring             comboObj["combo"+i] = splitObj["split"+i].split('-'); //splits the client-siteID at the dash                 clientObj["client"+i] = comboObj["combo"+i][0]; //puts the client name in a substring                 siteObj["site"+i] = comboObj["combo"+i][1]; //puts the siteid in a substring                      allClient += clientObj["client"+i] +";"+ ' '; //cumulatively adds client substrings to allClient variable                     allSite += siteObj["site"+i] +";" + ' '; //cumulatively adds site substrings to allSite variable      }          tempC = allClient.split(",")         uniqueClient = []             for (var i = 0; i &lt; tempC.length; i++) {                 isIn = 0                 for (var j = 0; j &lt; uniqueClient.length; j++) {                     if (tempC[i] == uniqueClient[j]) {                         isIn = 1                     }                 }                 if (isIn == 0) {                     uniqueClient.push(tempC[i])                 }             }         tempS = allSite.split(",")         uniqueSite = []             for (var i = 0; i &lt; tempS.length; i++) {                 isIn = 0                 for (var j = 0; j &lt; uniqueSite.length; j++) {                     if (tempS[i] == uniqueSite[j]) {                         isIn = 1                     }                 }                 if (isIn == 0) {                     uniqueSite.push(tempS[i])                 }             } </code></pre>