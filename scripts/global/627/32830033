<p>I'm developing an application. User can input his date and time (if he knows) of birth in first activity. It should start a service. Service should send him a notification when it's his birthday. 2nd activity shows him how old he is. In 2nd activity user can also press a button. It should stop service and send him to 1st activity. My problem is - when user inputs new date, values update in 2nd activity. But service sends me notification of previous birthday input. 1st activity code</p>  <pre><code>Button button8; EditText m1; EditText y1; EditText d1; EditText h1; EditText min1; int h12 = 0; int min12 = 0; SharedPreferences sp; int d11 = 0; int m11 = 0; int y11 = 0; int abc; protected void onCreate(Bundle savedInstanceState) {     super.onCreate(savedInstanceState);     setContentView(R.layout.activity_test);     h1 = (EditText) findViewById(R.id.h12);     min1 = (EditText) findViewById(R.id.min12);     d1 = (EditText) findViewById(R.id.d12);     m1 = (EditText) findViewById(R.id.m12);     y1 = (EditText) findViewById(R.id.y12);     button8 = (Button) findViewById(R.id.button8);     button8.setOnClickListener(this);     sp = getSharedPreferences("A", Context.MODE_PRIVATE);     abc = sp.getInt("d11",0);     if (abc != 0)     {         startActivity(new Intent("com.example.dc2.TEST3"));     } }   public void onClick(View v) {     sp = getSharedPreferences("A", Context.MODE_PRIVATE);     d11 = Integer.parseInt(d1.getText().toString());     m11 = Integer.parseInt(m1.getText().toString());     y11 = Integer.parseInt(y1.getText().toString());     if( h1.getText().toString().trim().length() == 0 )     {         h12 = 8;         min12 = 0;     }     else     {         h12 = Integer.parseInt(h1.getText().toString());         min12 = Integer.parseInt(min1.getText().toString());     }     final SharedPreferences.Editor editor = sp.edit();     editor.putInt("d11", d11);     editor.putInt("m11", m11);     editor.putInt("y11", y11);     editor.putInt("h12", h12);     editor.putInt("min12", min12);     editor.apply();     Intent intent = new Intent(this, TEST3.class);     startService(new Intent(this, MyService.class));     startActivity(intent); } </code></pre>  <p>2nd activity code</p>  <pre><code>Calendar x = Calendar.getInstance(); int y = x.get(Calendar.YEAR); int m = x.get(Calendar.MONTH)+1; int d = x.get(Calendar.DAY_OF_MONTH); int h = x.get(Calendar.HOUR_OF_DAY); int min = x.get(Calendar.MINUTE); int s = x.get(Calendar.SECOND); Button button10; TextView tv; TextView textView3; TextView month1; TextView days1; TextView hours1; TextView minutes1; TextView seconds1; int l,p,a,i,month,hours,minutes,seconds,m22,d22,v,g,t; int[] k = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31}; SharedPreferences sp;  public void onCreate(Bundle savedInstanceState) {      super.onCreate(savedInstanceState);     setContentView(R.layout.activity_test3);      tv = (TextView) findViewById(R.id.tv);     textView3 = (TextView) findViewById(R.id.textView3);     month1 = (TextView) findViewById(R.id.month1);     days1 = (TextView) findViewById(R.id.days1);     hours1 = (TextView) findViewById(R.id.hours1);     minutes1 = (TextView) findViewById(R.id.minutes1);     seconds1 = (TextView) findViewById(R.id.seconds1);     button10 = (Button) findViewById(R.id.button10);     button10.setOnClickListener(this);      SharedPreferences sp;     sp = getSharedPreferences("A", Context.MODE_PRIVATE);      int d110 = sp.getInt("d11", 0);     int m110 = sp.getInt("m11", 0);     int y110 = sp.getInt("y11", 0);     int h120 = sp.getInt("h12", 8);     int min120 = sp.getInt("min12", 0);     //some manipulations     }  public void onClick(View v){     sp = getSharedPreferences("A", Context.MODE_PRIVATE);     final SharedPreferences.Editor editor = sp.edit();     editor.clear();     editor.apply();     Intent service = new Intent(getBaseContext(),MyService.class);     stopService(service);     startActivity(new Intent("com.example.dc2.TEST")); } </code></pre>  <p>Service code</p>  <pre><code>NotificationManager nm; Handler handler;   final String LOG_TAG = "myLogs";  public void onCreate() {     super.onCreate();     Log.d(LOG_TAG, "onCreate");     nm = (NotificationManager) getSystemService(NOTIFICATION_SERVICE); }  public int onStartCommand(Intent intent, int flags, int startId) {     Log.d(LOG_TAG, "onStartCommand");     handler = new Handler();     handler.post(updateStatus);     return super.onStartCommand(intent, flags, startId); }  public void onDestroy() {     super.onDestroy();     handler.removeCallbacks(updateStatus);     handler = null;     Log.d(LOG_TAG, "onDestroy"); } public boolean onUnbind(Intent intent) {     handler.removeCallbacks(updateStatus);     handler = null;     return super.onUnbind(intent); } public IBinder onBind(Intent intent) {     Log.d(LOG_TAG, "onBind");     return null; }  private Runnable updateStatus = new Runnable() {     @Override     public void run() {         SharedPreferences sp;         sp = getSharedPreferences("A", Context.MODE_PRIVATE);         int d110 = sp.getInt("d11", 0);         int m110 = sp.getInt("m11", 0);         int h120 = sp.getInt("h12", 8);         int min120 = sp.getInt("min12", 0);         Calendar x = Calendar.getInstance();         int m = x.get(Calendar.MONTH)+1;         int d = x.get(Calendar.DAY_OF_MONTH);         int h = x.get(Calendar.HOUR_OF_DAY);         int min = x.get(Calendar.MINUTE);           if(m110 == m &amp;&amp; d110 == d &amp;&amp; h120 == h &amp;&amp; min120 == min){// &amp;&amp; v == 0 &amp;&amp; g == 0 &amp;&amp; t ==0) {             not();         } handler.postDelayed(updateStatus, 1000);     } };  public void not (){     Intent resultIntent = new Intent(this, TEST2.class);     NotificationCompat.Builder mBuilder =             new NotificationCompat.Builder(this)                     .setSmallIcon(R.mipmap.ic_launcher)                     .setContentTitle("My notification")                     .setContentText("Hello World!");     int mNotificationId = 001;     NotificationManager mNotifyMgr =             (NotificationManager) getSystemService(NOTIFICATION_SERVICE);     PendingIntent resultPendingIntent =             PendingIntent.getActivity(                     this,                     0,                     resultIntent,                     PendingIntent.FLAG_UPDATE_CURRENT             );     mBuilder.setContentIntent(resultPendingIntent);     mNotifyMgr.notify(mNotificationId, mBuilder.build()); } </code></pre>