<p>I came across the Android BluetoothChat example and found the service restarting mechanism not understandable. There is a service managing bluetooth connection and messaging between devices when the connection is lost the service is restarted. The code snippet is below (when connection lost):</p>  <pre><code>while (true) {     try {         // read, write &amp; messaging here         // ...     } catch (IOException e) {         connectionLost();          // Start the service over to restart listening mode         BluetoothChatService.this.start();         break;     } } </code></pre>  <p>This seems alright at the moment but the odd thing is in <code>connectionLost()</code>, it also restarts service.</p>  <pre><code>private void connectionLost() {     // messaging     // ...      // Start the service over to restart listening mode     BluetoothChatService.this.start(); } </code></pre>  <p>Is this a normal service restarting mechanism? The <code>start()</code> is below:</p>  <pre><code>public synchronized void start() {      // Cancel any thread attempting to make a connection     if (mConnectThread != null) {         mConnectThread.cancel();         mConnectThread = null;     }      // Cancel any thread currently running a connection     if (mConnectedThread != null) {         mConnectedThread.cancel();         mConnectedThread = null;     }      setState(STATE_LISTEN);      // Start the thread to listen on a BluetoothServerSocket     if (mSecureAcceptThread == null) {         mSecureAcceptThread = new AcceptThread(true);         mSecureAcceptThread.start();     }     if (mInsecureAcceptThread == null) {         mInsecureAcceptThread = new AcceptThread(false);         mInsecureAcceptThread.start();     } } </code></pre>