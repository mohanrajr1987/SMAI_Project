<p>i'm developing an app where i have an activity A when it's on pause state i'm calling a service class that creates a window when the window  pressed i want to recall the activity A from the back stack again in the last pause state , i tried a lot of things but it keeps recreate the activity , i tried singleTask lunchMode and a lot of things but nothing works</p>  <p>here is my service class:</p>  <pre><code>public class ChatHeadService extends Service {     public static WindowManager windowManager;    public static ImageView chatHead;    public static View myview;      @Override public IBinder onBind(Intent intent) {         // Not used         return null;     }      @Override public void onCreate() {         super.onCreate();         LayoutInflater li = (LayoutInflater) getSystemService(LAYOUT_INFLATER_SERVICE);         windowManager = (WindowManager) getSystemService(WINDOW_SERVICE);          WindowManager.LayoutParams params = new WindowManager.LayoutParams(                 //WindowManager.LayoutParams.TYPE_INPUT_METHOD |                 WindowManager.LayoutParams.TYPE_PHONE,// | WindowManager.LayoutParams.TYPE_SYSTEM_ALERT,                 WindowManager.LayoutParams.FLAG_WATCH_OUTSIDE_TOUCH | WindowManager.LayoutParams.FLAG_NOT_TOUCH_MODAL,                 PixelFormat.TRANSLUCENT);          params.gravity = Gravity.RIGHT | Gravity.TOP;         myview = li.inflate(R.layout.dial_actionbar, null);         chatHead=(ImageView)myview.findViewById(R.id.dialbar);         chatHead.setOnTouchListener(new View.OnTouchListener() {             @Override             public boolean onTouch(View v, MotionEvent event) {                 windowManager.removeView(myview);                 Intent goback = new Intent(ChatHeadService.this, IncomingCallScreen.class);                 goback.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_REORDER_TO_FRONT);                 ChatHeadService.this.startActivity(goback);                 return true;              }         });          windowManager.addView(myview, params);      }      @Override     public void onDestroy() {         super.onDestroy();         windowManager.removeView(myview);     }   } </code></pre>  <p>and here is the part where i call the service: @Override</p>  <pre><code> protected void onPause() {         super.onPause();         if(incomingCall==true)         {             Intent gotoBackService=new Intent(getApplicationContext(),ChatHeadService.class);             startService(gotoBackService);          }      } </code></pre>