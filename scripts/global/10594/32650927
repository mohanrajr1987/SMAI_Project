<p>I am trying to work out how to pop an optional group into a preg_replace_callback but I am having trouble matching the + character</p>  <p>Here is the code I have this far</p>  <pre><code>$pattern=preg_replace_callback('~:(?P&lt;_param&gt;[Aa-zZ0-9_\-]+)(?:(P&lt;_mod&gt;[^/]))?~',      function($matches)     {         print_r($matches);         $key=$matches[1];         return '(?&lt;'.$matches['_param'].'&gt;'.$matches['_mod'].')';     }     ,$subject); </code></pre>  <p>This generates the following pattern</p>  <pre><code>/category/(?&lt;foo&gt;)/(?&lt;baz&gt;.)+/(?&lt;bar&gt;.)+/(?&lt;harry&gt;.)+/foo </code></pre>  <p>For the following string</p>  <pre><code>/category/:foo/:baz.+/:bar.+/:harry.+/foo </code></pre>  <p>As you can see it's carrying over the . but not the plus, essentially I would like it to carry (into the named _mod capture group) any modifier that I append to a :variable.</p>  <p>I am not very good at regex so I'm amazed to have gotten this far and any help on my quest would be greatly appreciated</p>