<p>I'm currently trying to run a code using VisualStudio 2010 in a x64 machine but I'm getting LNK errors for glutInit,glutInitDisplayMode, glutInitWindowSize glutCreateWindow, glutReshapeFunc,glutDisplayFunc,glutKeyboardFunc,Init and glutMainLoop functions. For example:</p>  <p>Error   1   error LNK2019: unresolved external symbol _glutInit@8 referenced in function _main  c:\Users\Usu√°rio\documents\visual studio 2010\Projects\teste5\teste5\main.obj</p>  <p>I've already put glut.h, glut32.dll and glut32.lib in the right directories and  have already changed the properties of the project ("aditional include directories", "additional libraries directories" and "additional dependences").</p>  <p>Strangely enough, the error is not happening for glutSolidSphere and glutSwapBuffers functions.</p>  <p>Here is the full code that I'm trying to build:</p>  <pre><code>#ifdef _WIN32 #include &lt;windows.h&gt; #endif  #include &lt;GL/gl.h&gt; #include &lt;glut.h&gt; #include &lt;gl\GLU.h&gt; #include &lt;gl\GL.h&gt;  #include &lt;stdlib.h&gt;  // Initialization function static void Init () {   float white[4] = {1.0f,1.0f,1.0f,1.0f};    glClearColor(1.0f, 1.0f, 1.0f, 1.0f);    glEnable(GL_DEPTH_TEST);   glEnable(GL_LIGHTING);   glEnable(GL_LIGHT0);   glEnable(GL_COLOR_MATERIAL);   glEnable(GL_NORMALIZE);   glColorMaterial(GL_FRONT_AND_BACK,GL_AMBIENT_AND_DIFFUSE);    glMaterialfv(GL_FRONT_AND_BACK,GL_SPECULAR,white);    glMaterialf(GL_FRONT_AND_BACK,GL_SHININESS,50.0);    glLightModeli(GL_LIGHT_MODEL_LOCAL_VIEWER,1); }  // Draw scene  static void DrawScene () {   // position light   float lpos[4] = {0.0f,6.0f,4.0f,1.0f};    glLightfv(GL_LIGHT0,GL_POSITION,lpos);   // draw floor   glColor3f(0.4f,0.6f,0.0f);    glNormal3f(0.0f,1.0f,0.0f);    glBegin(GL_QUADS);   glVertex3f(-10.f,0.0f,-10.f);    glVertex3f(-10.f,0.0f, 10.f);    glVertex3f( 10.f,0.0f, 10.f);    glVertex3f( 10.f,0.0f,-10.f);   glEnd();    {     int i,j;     float d = 2*10.f/10;     float p0 = -10.f + d/2;      glColor3f(1.0f,0.0f,0.0f);      for (i=0; i&lt;10; i++) {       for (j=0; j&lt;10; j++) {          glPushMatrix();          glTranslatef(p0+i*d,0.5f,p0+j*d);          glutSolidSphere(0.5,32,32);          glPopMatrix();       }     }   } }  // Display callback static void Display (void) {   int vp[4];    glGetIntegerv(GL_VIEWPORT,vp);    glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);    glMatrixMode(GL_PROJECTION);   glLoadIdentity();    gluPerspective(50.0f,(float)vp[2]/vp[3],1.0,100.0);    glMatrixMode(GL_MODELVIEW);   glLoadIdentity();    // load manipulator matrix   gluLookAt(0,7,15,0,0,0,0,1,0);    // draw scene   DrawScene();   glutSwapBuffers(); }  // Reshape callback static void Reshape (int w, int h) {   glViewport(0,0,w,h); }  // Keyboard callback static void Keyboard (unsigned char key, int x, int y) {  switch (key)  {   case 27: exit(0); break;  } }  // Main function int main (int argc, char* argv[]) {   // open GLUT   glutInit(&amp;argc, argv);   glutInitDisplayMode(GLUT_DOUBLE | GLUT_DEPTH | GLUT_RGB);    glutInitWindowSize(800,600);    // create window   glutCreateWindow ("Spheres");   glutReshapeFunc(Reshape);   glutDisplayFunc(Display);   glutKeyboardFunc(Keyboard);    // initiate OpenGL context   Init();    // interact...    glutMainLoop();   return 0;  } </code></pre>  <p>Can anyone help me with this? </p>