<p>With the following code, I'm currently reading <code>&lt;ns&gt;CounterSales&lt;/ns&gt;</code> (the 3rd element) of every <code>&lt;nv&gt;</code>, which is great. I'm including the code and the XML.</p>  <p>Here's the code, works great if <code>ElementAt</code> is hardcoded :</p>  <pre><code>var xDoc = XDocument.Parse(xmlStr); var nvs = xDoc.Descendants("nv"); var nads = nvs.Select(nv =&gt; nv.Elements("nad").First().Value).ToList(); var thirdRs = nvs.Select(nv =&gt; nv.Elements("r").ElementAt(2).Value).ToList(); </code></pre>  <p>Here's the value of <code>xmlStr</code>:</p>  <pre><code>&lt;ni&gt;     &lt;nss&gt;20150927&lt;/nss&gt;     &lt;gp&gt;Addon&lt;/gp&gt;     &lt;ns&gt;CounterBlah1&lt;/ns&gt;     &lt;ns&gt;CounterBlah2&lt;/ns&gt;     &lt;ns&gt;CounterSales&lt;/ns&gt;     &lt;ns&gt;CounterBlah4&lt;/ns&gt;     &lt;ns&gt;CounterBlah5&lt;/ns&gt;     &lt;ns&gt;CounterBlah6&lt;/ns&gt;     &lt;nv&gt;         &lt;nad&gt;Style=1,Rfu=1,Id=132&lt;/nad&gt;         &lt;r&gt;0&lt;/r&gt;         &lt;r&gt;15&lt;/r&gt;         &lt;r&gt;8&lt;/r&gt;         &lt;r&gt;3&lt;/r&gt;         &lt;r&gt;2&lt;/r&gt;         &lt;r&gt;2&lt;/r&gt;     &lt;/nv&gt;     &lt;nv&gt;         &lt;nad&gt;Style=1,Rfu=1,Id=433&lt;/nad&gt;         &lt;r&gt;0&lt;/r&gt;         &lt;r&gt;15&lt;/r&gt;         &lt;r&gt;30&lt;/r&gt;         &lt;r&gt;3&lt;/r&gt;         &lt;r&gt;2&lt;/r&gt;         &lt;r&gt;2&lt;/r&gt;     &lt;/nv&gt;     &lt;nv&gt;         &lt;nad&gt;Style=1,Rfu=1,Id=665&lt;/nad&gt;         &lt;r&gt;0&lt;/r&gt;         &lt;r&gt;15&lt;/r&gt;         &lt;r&gt;90&lt;/r&gt;         &lt;r&gt;3&lt;/r&gt;         &lt;r&gt;2&lt;/r&gt;         &lt;r&gt;2&lt;/r&gt;     &lt;/nv&gt; &lt;/ni&gt; </code></pre>  <p>But let's say that I would like to read more than one counter. I have a datatable that currently has two rows: <code>[CounterSales]</code> &amp; <code>[CounterBlah5]</code>. I would like to process the other two counters the same way:</p>  <pre><code>int index = 0; DataTable results = GetCounters(); //results has two rows: [CounterSales] &amp; [CounterBlah5]  foreach (DataRow row in results.Rows) {     string counter = cellRow["counter"]; //counter equals "CounterSales"     /* Iterate through all &lt;ns&gt; to see where "CounterSales" is located.        In this case, index = 2. On next foreach, index equals 4  */      var xDoc = XDocument.Parse(xmlStr);     var nvs = xDoc.Descendants("nv");     var nads = nvs.Select(nv =&gt; nv.Elements("nad").First().Value).ToList();     var thirdRs = nvs.Select(nv =&gt; nv.Elements("r").ElementAt(index).Value).ToList(); } </code></pre>  <p>Any help is appreciated.</p>  <p>Thanks.</p>