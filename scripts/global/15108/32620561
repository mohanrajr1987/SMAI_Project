<p>I have a model like so...</p>  <pre><code>class Driver(SupremeModel):     name = models.TextField(null=False, blank=False)     car = models.ForeignKey('Cars.Car', null=False, blank=False) </code></pre>  <p>This model inherits from this abstract model...</p>  <pre><code>class SupremeModel(models.Model):     creator = models.ForeignKey(User, related_name="%(class)s_creator", null=True, blank=True)     created = models.DateTimeField(null=True, blank=True)     deleted = models.BooleanField(default=False)     modified = models.DateTimeField(null=True,blank=True)      class Meta:         abstract = True </code></pre>  <p>Then I have a ModelForm like so...</p>  <pre><code>class DriverForm(SupremeModelForm):     class Meta(SupremeModelForm.Meta):         model = Driver </code></pre>  <p>DriverForm inherits from this SupremeModelForm...</p>  <pre><code>class SupremeModelForm(ModelForm):     class Meta:         exclude = ['created', 'creator', 'deleted', 'modified'] </code></pre>  <p>I want to make it so anytime anything that inherits from SupremeModel is queried for data, it automatically excludes all the data where deleted=True... </p>  <p>In this case, so that when I render the DriverModelForm, deleted entries of car are not displayed...</p>  <p>Is there anyway I can do this?</p>