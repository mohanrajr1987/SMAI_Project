<p>I have a simple Django app, where users can associate with different institutes by signing contracts with them. A user may work for each institute (he has a contract with) and clock their work time.</p>  <p>Now I want to let the user define a 'default' contract, that will be selected when nothing else is specified (the clocked work time will be then assigned to this contract). This I can do with the following model:</p>  <pre><code>class Contract(models.Model):     user = models.ForeignKey(User, on_delete=models.CASCADE)     institute = models.ForeignKey(Institute, on_delete=models.CASCADE)     work_hours = models.DecimalField(max_digits=4, decimal_places=1)     default = models.BooleanField(default=False)      class Meta:         # We want each employee to only have one contract per institute.         unique_together = ('user', 'institute',) </code></pre>  <p>My question is: How can I limit the user to only have one default contract? If I have two different contracts, Contract A being the current default one, and then I change Contract B to being the default one, I want the value for Contract A to become False.</p>  <p>I'm not sure whether it's a problem I should handle inside the model or inside a ModelForm. If using the latter, I'm not sure how to create a form with all possible user contracts and a radio select, which changes the default-value of the two entries (setting the old-default to False and setting the new-default to True). Or should I change it to a totally different model logic?</p>