<p>I'm trying to write use Django <code>FormView</code> and a bit of ingenuity to create a view which will allow me to get inputs from a user that will be fed to a function.  I'd like the code to be reusable, so I'd like to make a view that will be able to take a target function as a parameter and automagically create a form appropriate to that function.  There is more plumbing to be done, but the general idea would be:</p>  <pre><code>class FormViewForFunction(FormView):     template_name = '...'     func = None      def get_form_class(self):         class _FunctionForm(forms.Form):             pass          a = inspect.getargspec(self.func)         for argname in a['args']:             setattr(_FunctionForm, argname, forms.CharField())         return _FunctionForm </code></pre>  <p>The idea would be that then you could set up something in your URLConf that used <code>FormViewForFunction.as_view(func=***insert any function you want***)</code> and you would wind up being presented with a form that was appropriate for specifying parameters for that function.  Let's not worry about what would happen on form submission.  For now I'm just stuck getting the form to generate properly.</p>  <p>With the code above, the form doesn't wind up having any fields!  What am I doing wrong?</p>