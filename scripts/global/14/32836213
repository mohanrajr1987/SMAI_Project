<pre><code>(defun queens (n &amp;optional (m n))    (if (zerop n)        (list nil)        (loop for solution in (queens (1- n) m) ;; &lt;=== what does the (1- n) mean?           nconc (loop for new-col from 1 to m                      when (loop for row from 1 to n                                  for col in solution                                  always (/= new-col col (+ col row) (- col row)))                      collect (cons new-col solution)))))  (defun print-solution (solution)    (loop for queen-col in solution       do (loop for col from 1 to (length solution)               do (write-char (if (= col queen-col) #\Q #\.)))          (terpri))    (terpri))  (defun print-queens (n)    (mapc #'print-solution (queens n))) </code></pre>  <p>hi, can anyone explain to me this N-Queen algo why is there a (1- n)? what does the "1-" part and &amp;optional syntax? </p>  <p>thank you,</p>