<p>This defines the Helm-source for <code>Emacs commands history</code>, for the Emacs package <code>Helm</code>.</p>  <pre><code>(defvar helm-source-emacs-commands-history     (helm-build-sync-source "Emacs commands history"     :candidates (lambda ()                     (let ((cmds))                     (dolist (elem extended-command-history)                         (push (intern elem) cmds))                     cmds))     :coerce #'intern-soft     :action #'command-execute)     "Emacs commands history") </code></pre>  <p>From this source you get the latest commands that you called with <code>M-x</code>. I would like to have a function, that calls the latest command that I called with <code>M-x</code> in Emacs earlier. I read the <a href="http://www.gnu.org/software/emacs/manual/html_node/elisp/List-Elements.html" rel="nofollow">documentation about list elements</a>.</p>  <pre><code>Function: car cons-cell This function returns the value referred to by the first slot of the cons cell cons-cell. In other words, it returns the CAR of cons-cell.  As a special case, if cons-cell is nil, this function returns nil. Therefore, any list is a valid argument. An error is signaled if the argument is not a cons cell or nil.  (car '(a b c))     ⇒ a (car '())     ⇒ nil </code></pre>  <p>So I assume I need to replace the <code>push</code> with <code>car</code>, and return the result.</p>  <pre><code>(dolist (elem extended-command-history) (car (intern elem)))  </code></pre>  <p>But I got the error message</p>  <pre><code>Debugger entered -- Lisp error (wrong-type-argument listp Info-next) (Info-Next) </code></pre>  <p>The <code>Info-Next</code> was indeed the latest command that I called with <code>M-x</code>.  However, I don't understand the error. Another way to get the latest called function. </p>  <pre><code>(defun foobar ()     (interactive)     (call-interactively (intern (car extended-command-history)))) </code></pre>  <p>After calling <code>foobar</code>, I get the following error:</p>  <pre><code>funcall-interactively: Lisp nesting exceeds `max-lisp-eval-depth' </code></pre>  <p>Any suggestion to get the latest command? </p>