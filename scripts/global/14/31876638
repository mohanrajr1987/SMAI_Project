<p>What options do I have if I want to develop complex GUI application or a game using LISP/Scheme? I know that Racket has a decent GUI toolkit, but is there anything else to try? Here is the list of features I'd like to have:</p>  <ul> <li>The LISP/Scheme implementation should be able to create standalone executables, so users could run the application as usual, without the need to install any additional frameworks. I'd like it to be compiled to native code, but JIT-compiled implementations that is able to create stanalone executables (like Racket for example) will do.</li> <li>The GUI toolkit or game development kit should be well integrated into the language, so I could be able to develop GUI interfaces using the language paradigms. To make it clear I don't want the one-to-one simple bindings to C based library, where I need to code in imperative only style, manage memory manually, struggle with callback to C and back and etc.</li> <li>I need to be to support Windows, Linux and Mac OSX operating systems, but it is good if the LISP/Scheme implementation would allow me to create Android and iOS applications as well.</li> </ul>  <p>Obviously Racket fits good here and if there is no good alternative to it I think I would use Racket. But I'd like to know if I am missing something in the functional programming realm (well I'd like it to be LISP/Scheme based system, but Haskell/OCaml/Prolog based stuff are acceptable too, and please no C/C++ and CLR/JVM stuff).</p>