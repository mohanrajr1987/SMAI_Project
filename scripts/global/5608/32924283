<p>I have created dynamic class using database with name <strong>mMember</strong> and that contains some proeprties . I want to use this property for assigning data to datagrid in wpf.</p>  <pre><code>      private void Button_Click(object sender, RoutedEventArgs e)     {          ICodeCompiler loCompiler = new CSharpCodeProvider().CreateCompiler();         CompilerParameters loParameters = new CompilerParameters();         // Start by adding any referenced assemblies         loParameters.ReferencedAssemblies.Add("System.dll");         // Must create a fully functional assembly as a string         lcCode = @"public class mMember         {             public  static int cid { get; set; }              public static  string cFname { get; set; }              public  static string cLname { get; set; }              public  static decimal? iAge { get; set; }              public  static string dpDept_Id { get; set; }              public static  bool? bEnabled { get; set; }         }";          // Load the resulting assembly into memory         loParameters.GenerateInMemory = false;         // Now compile the whole thing         CompilerResults loCompiled =           loCompiler.CompileAssemblyFromSource(loParameters, lcCode);         if (loCompiled.Errors.HasErrors)         {             string lcErrorMsg = "";             lcErrorMsg = loCompiled.Errors.Count.ToString() +                          " Errors:";             for (int x = 0; x &lt; loCompiled.Errors.Count; x++)                 lcErrorMsg = lcErrorMsg + "\r\nLine: " +                              loCompiled.Errors[x].Line.ToString() +                               " - " + loCompiled.Errors[x].ErrorText;             MessageBox.Show(lcErrorMsg + "\r\n\r\n" + lcCode,                             "Compiler Demo");             return;         }         Assembly loAssembly = loCompiled.CompiledAssembly;         Type calcType = loAssembly.GetType("mMember");          // Retrieve an obj ref - generic type only         object loObject =                loAssembly.CreateInstance("mMember");         PropertyInfo numberPropertyInfo = calcType.GetProperty("cLname");          numberPropertyInfo.SetValue(loObject, "Kadam", null);          string value = (string)numberPropertyInfo.GetValue(loObject, null);          var loResult1 = loObject.GetType().GetProperty("cLname").GetValue(this, null);         MessageBox.Show(loResult1.ToString());            if (loObject == null)         {             MessageBox.Show("Couldn't load class.");             return;         }    } </code></pre>  <p>Now i Want to create list of given properties mentioned in above <strong>dynamically created class</strong> <strong>mMember</strong> and bind this list to <strong>datagrid</strong> in <strong>wpf</strong> . I want to create List in Given format like <strong>Order</strong> is my class Name and it also contains properties like <strong>mMember</strong> class, but class in in Ready Format. Finally i m binding <strong>orders</strong> to datagrid .</p>  <pre><code>      List&lt;Order&gt; orders = new List&lt;Order&gt;();          for (int i = 0; i &lt; dt.Rows.Count; i++)         {             orders.Add(new Order() { MB_ID =Convert .ToInt64 ( dt.Rows[i]["MB_ID"]), Name = dt.Rows[i]["MEMBER_NAME"].ToString(), ItemCount = dt.Rows[i]["MB_ID"].ToString(), CompanyId = dt.Rows[i]["COMPANY_ID"].ToString() });         }   // Set the data context         this.DataContext = orders; </code></pre>  <p>now I want create similar list for <strong>mMember</strong> class. so I have created instance for same but it didnt work </p>  <pre><code>    IList list1 = (IList)Activator.CreateInstance(typeof(List&lt;&gt;).MakeGenericType(new Type[] { loObject.GetType() })); </code></pre>  <p>how to add <strong>list</strong> data into this and bind to datagrid </p>