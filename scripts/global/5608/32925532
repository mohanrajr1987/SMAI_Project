<p>I had already looked through this post: <a href="http://stackoverflow.com/questions/16406772/python-building-new-list-from-existing-by-dropping-every-n-th-element">Python: building new list from existing by dropping every n-th element</a></p>  <p>but for some reason it does not work for me:</p>  <p>Firstly I tried this way:</p>  <pre><code>def drop(mylist, n):     del mylist[0::n]     print(mylist) </code></pre>  <p>This function takes a list and n. Then it removes every n-th element by using n-step from list and prints result.</p>  <p>Here is my function call:</p>  <pre><code>drop([1,2,3,4],2) </code></pre>  <p>Wrong output: <br> [2, 4] instead of [1, 3]</p>  <p>Then I tried a variant from the link above:</p>  <pre><code>def drop(mylist, n):     new_list = [item for index, item in enumerate(mylist) if index % n != 0]     print(new_list) </code></pre>  <p>Again, function call:</p>  <pre><code>drop([1,2,3,4],2) </code></pre>  <p>Gives me the same wrong result: [2, 4] instead of [1, 3]</p>  <p>How to correctly remove n-th element from a list?</p>