<p>On this code I keep running into a segmentation fault when I try to insert into the front of the linked list. I assume it has to do with the head not being changed over properly. In this program baskets are nodes. The debugger I used pointed to the last line in the function as the issue but I am not exactly sure where it originates.</p>  <pre><code>include &lt;cstdlib&gt; #include &lt;iostream&gt; #include &lt;ctime&gt; #include "BasketList.h"  using namespace std;  Basket::Basket(int _datum, Basket * _next):    egg_num(_datum), nextBasket(_next) {}   int Basket::getEggs() const {    return egg_num; }   Basket const* Basket::getNextBasket() const {    return nextBasket; }   BasketList::BasketList() : head (NULL) {}  void BasketList::insertBasket(int eggs) {    Basket *currPtr = head;    Basket *prevPtr = NULL;    Basket *newBasketPtr;     if(eggs  &lt; head-&gt;egg_num)    {    currPtr-&gt;nextBasket = head;    head = currPtr;    }      while(currPtr != NULL &amp;&amp; eggs &gt; currPtr-&gt;egg_num)    {       prevPtr = currPtr;       currPtr = currPtr-&gt;nextBasket;    }     newBasketPtr = new Basket(eggs, currPtr);    prevPtr-&gt;nextBasket = newBasketPtr;  } </code></pre>