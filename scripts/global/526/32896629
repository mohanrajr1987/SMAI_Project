<p>I'm writing a function in PowerShell that I want to be called via other PowerShell functions as well as be used as a standalone function.  With that objective in mind, I want to send a message down the pipeline using <code>Write-Output</code> to these other functions.  However, I don't want <code>Write-Output</code> to write to the PowerShell console. The <a href="https://technet.microsoft.com/en-us/library/hh849921.aspx" rel="nofollow">TechNet page for Write-Output</a> states: </p>  <blockquote>   <p>Write-Output:</p>      <blockquote>     <p>Sends the specified objects to the next command in the pipeline. If the command is the last command in the pipeline, the objects are displayed in the console.</p>          <blockquote>       <p>-NoEnumerate:</p>              <blockquote>         <p>By default, the Write-Output cmdlet always enumerates its output. The NoEnumerate parameter suppresses the default behavior, and prevents Write-Output from enumerating output. The NoEnumerate parameter has no effect on collections that were created by wrapping commands in parentheses, because the parentheses force enumeration.</p>       </blockquote>     </blockquote>   </blockquote> </blockquote>  <p>For some reason, this -NoEnumerate switch will not work for me in either the PowerShell ISE or the PowerShell CLI. I always get output to my screen. </p>  <pre><code>$data = "Text to suppress" Write-Output -InputObject $data -NoEnumerate </code></pre>  <p>This will always return 'Text to suppress' (no quotes). </p>  <p>I've seen people suggest to pipe to <code>Out-Null</code> like this:</p>  <pre><code>$data = "Text to suppress" Write-Output -InputObject $data -NoEnumerate | Out-Null $_ </code></pre>  <p>This suppresses screen output, but when I use <code>$_</code> I have nothing in my pipeline afterwards which defeats the purpose of me using Write-Output in the first place.</p>  <p>System is Windows 2012 with PowerShell 4.0</p>  <p>Any help is appreciated.</p>