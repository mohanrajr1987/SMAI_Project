<p>I am developing simple  hook for git. It should cancel commit / push if Acrobat is opened on Windows Machine. Since Git hooks can not find windows process directly i am  running next Powershell script named <em>pre-commit.ps1</em></p>  <p><em>UPD No solution so far. Powershell exit 1 works fine with GitBash but ignored when called via TortoiseGit. It stated as fixes in Aug 2014 but does not look so for me</em></p>  <p>See <a href="https://gitlab.com/tortoisegit/tortoisegit/issues/2143" rel="nofollow">https://gitlab.com/tortoisegit/tortoisegit/issues/2143</a></p>  <p>I am using TortoiseGit 1.8.15.2 from Sep 2015</p>  <pre><code>$acrobat = Get-Process Acrobat -ErrorAction SilentlyContinue if ($acrobat) {  "Acrobat is Running"   exit 1 } else {  "Not running"   exit 0 } Remove-Variable acrobat </code></pre>  <hr>  <p>I placed file named <em>pre-commit</em> in .git\hooks folder of my project. It has next content    </p>  <pre><code>#!/bin/sh # An  hook script to verify that Acrobat is closed.    powershell.exe -ExecutionPolicy RemoteSigned -File   '.\.\.\common\external\hooks\pre-commit.ps1' ret=$?; #echo "Acrobat check: $ret" if [ $ret == 1 ] then     echo "Commit canceled: Acrobat is open"     exit 1 fi exit 0 </code></pre>  <p>The issues is: when i run <em>pre-commit.ps1</em> directly it gives correct return 1 once Acrobat is open and 0 if not open. But in hook it always gives me 0.</p>  <p>Could you please give me a hint what is problem here? Or may be there is easier solution to return 1 in git hook without Powershell?</p>