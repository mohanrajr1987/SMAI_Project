<p>I have a WinSCP PowerShell script that downloads the most recent file on the server. I'd like to adapt it to download the most recent file of every file type on the server.</p>  <p>Bonus points for naming each file with the extension of the file as the <code>filename.txt</code> (<code>example.al</code> -> <code>al.txt</code>). Here's my code:</p>  <pre><code>try {     # Connect     $session.Open($sessionOptions)      # Get list of files in the directory     $directoryInfo = $session.ListDirectory($remotePath)      # Select the most recent file     $latest =         $directoryInfo.Files |         Where-Object { -Not $_.IsDirectory } |         Sort-Object LastWriteTime -Descending |         Select-Object -First 1      $extension = [System.IO.Path]::GetExtension($latest.Name)     "GetExtension('{0}') returns '{1}'" -f $fileName, $extension      # Any file at all?     if ($latest -eq $Null)     {         Write-Host "No file found"         exit 1     }      # Download the selected file     $session.GetFiles($session.EscapeFileMask($remotePath + $latest.Name), $localPath + $extension).Check() </code></pre>  <p>Right now it saves the file as <code>.extension</code>, what I'd like is to save it as <code>extension.txt</code>.</p>  <p>Thanks!</p>  <p>EDIT:</p>  <p>Tried this code and it downloaded every file on the server:</p>  <pre><code>$session = New-Object WinSCP.Session  try {     # Connect     $session.Open($sessionOptions)      # Get list of files in the directory     $directoryInfo = $session.ListDirectory($remotePath)      # Select the most recent file     $latest = $directoryInfo.Files |         Where-Object { -Not $_.IsDirectory } |          Group-Object Extension |          ForEach-Object {              $_.Group | Sort-Object LastWriteTime -Descending | Select -First 1             $session.GetFiles($session.EscapeFileMask($remotePath + $_.Name), $localPath).Check()     }      $extension = [System.IO.Path]::GetExtension($latest.Name)     "GetExtension('{0}') returns '{1}'" -f $fileName, $extension      # Any file at all?     if ($latest -eq $Null)     {         Write-Host "No file found"         exit 1     }      # Download the selected file } finally {     # Disconnect, clean up     $session.Dispose() } </code></pre>