<p>I have another script that moved terminated users into the "Terminated" OU in Active Directory. It adds a note in the description, and the current day-of-year into the "Company" field.  Then this script looks in that OU for anything more than 60 days old and deletes the AD account, and also removes some of their associated folders on other servers.  </p>  <p>It tends to run verrrrry slow and max out the memory while it's running.  Can anyone see any reason this would be happening?  Maybe it's not the most efficient way to do this?</p>  <p>Thanks in advance for any help!</p>  <pre><code>Import-Module ActiveDirectory    $users = Get-ADUser -SearchBase "ou=Terminated,dc=domain,dc=com" -Properties "company", "description" -Filter * | where {$_.description -like "Terminated*" } $Date = Get-Date $Today = $Date.DayOfYear $CSVDate = Get-Date -Format yyyy-MM-dd $TermList = @()  foreach($user in $users) { $DN = $user.DistinguishedName $Homefolder = ("\\v12-dfs-home\homefolders$\" + $user.samaccountname) $Profile = ("\\v12-dfs-pro\XA65Profiles\" + $user.samaccountname) $Desktop = ("\\v12-dfs-home\desktops\" + $user.samaccountname) $Term = $user.company $Result = ($Today - $Term) $altResult = ($Today + 365) - $Term      If ($Result -gt 60)         {             $TermList += $user | %{Get-ADUser $_.DistinguishedName -properties displayName, employeeID, samaccountname, title, Description | select displayName, employeeID, samaccountname, title, Description}             Remove-ADUser -Identity $DN -Confirm:$false             Remove-Item $Homefolder -Force -Recurse -ErrorAction SilentlyContinue -Confirm:$false             Remove-Item $Profile -Force -Recurse -ErrorAction SilentlyContinue -Confirm:$false             Remove-Item $Desktop -Force -Recurse -ErrorAction SilentlyContinue -Confirm:$false         }     ElseIf ($Result -lt 0)         {             If ($altResult -gt 60)                 {                     $TermList += $user | %{Get-ADUser $_.DistinguishedName -properties displayName, employeeID, samaccountname, title, Description | select displayName, employeeID, samaccountname, title, Description}                     Remove-ADUser -Identity $DN -Confirm:$false                     Remove-Item $Homefolder -Force -Recurse -ErrorAction SilentlyContinue -Confirm:$false                     Remove-Item $Profile -Force -Recurse -ErrorAction SilentlyContinue -Confirm:$false                     Remove-Item $Desktop -Force -Recurse -ErrorAction SilentlyContinue -Confirm:$false                 }         }  }   # Output CSV of accounts being deleted $TermList | Export-Csv c:\Results\Deleted_$CSVDate.csv -NoType </code></pre>