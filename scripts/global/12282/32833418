<p>I'm a beginner to OCaml so I'm not sure if this is a right question. Anyway let's say I had a list of tuples [(1,2);(3,4);(5,6);(7,8);(9,10)]. I am pattern matching in a function so</p>  <pre><code>let rec func list = match list with      |(* base case here *)     |head1::head2::tail -&gt; func head1::tail;; (* error here *) </code></pre>  <p>Not real code, just to illustrate what I'm going to explain. When I use that pattern matching the first time, head1 is (1,2), head2 is (3,4), but tail seems to be only (5,6) instead of (5,6)(7,8)(9,10)...if I'm right. After all I'm getting "Error: This expression has type 'a * 'b but an expression was expected of type ('a * 'b) list" so I assume that must be what's happening. In the pattern matching how can I make tail be all of (5,6)(7,8)(9,10)?</p>