<p>What is the easiest way to accomplish the following in a Mathematica clone or in any version of Lisp(any language is probably okay actually even Haskell)?  It doesn't appear any lisps <a href="http://hyperpolyglot.org/lisp" rel="nofollow">have a similar replace function</a>.</p>  <pre><code>Replace[{   f[{x, "[", y, "]"}],   f@f[{x, "[", y, y2, "]"}]   }  , f[{x_, "[", y__, "]"}] :&gt; x[y],  Infinity] </code></pre>  <p>and a return value of  <code>{x[y], f[x[y, y2]]}</code></p>  <p>It replaces all instances of <code>f[{x_, "[", y__, "]"}]</code> in args where <code>x_</code> represents a single variable and <code>y__</code> represents one or more variables.</p>  <p>In lisp the function and replacement would probably be the equivalent(forgive me I am not the best with Lisp).  I'm looking for a function of the form <code>(replace list search replace)</code>.</p>  <pre><code>(replace   '(    (f (x "[" y "]"))    (f (f '(x "[" y y2 "]")))   )   '(f (x_ "[" y__ "]"))   '(x y) ) </code></pre>  <p>and get a return value of <code>((x y) (f (x y y2)))</code>.</p>