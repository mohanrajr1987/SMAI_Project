<h2>Scenario</h2>  <p>I'm using a 3rd party file renaming software which is written in Delphi and has pascal-script support: <a href="http://www.den4b.com/?x=products&amp;product=renamer" rel="nofollow">http://www.den4b.com/?x=products&amp;product=renamer</a></p>  <p>The application allows the usage of regular expressions to rename files. this means that if what I need to do with a filename cannot be accomplished only using one RegEx, then I could use simultaneous various expressions or also a pascal-script code to accommodate the filename until I can properly format the filename for the needs of this question or anything else...</p>  <h2>Problem</h2>  <p>I need to format song filenames like these below, in these filenames the "<strong>...featuring artist</strong>" part is at the right of the string, I need to match that and position it in the left part of the string.</p>  <ul> <li><strong>Carbin &amp; Sirmark - Sorry Feat. Sevener</strong> </li> <li><strong>Kristjan Cash Cash - Take Me Home Feat. Bebe Rexha (Revoke Remix)</strong></li> </ul>  <p>To make this simple to understand, we could imaginary <em>tokenize</em> the filename like this:</p>  <pre><code>[0]ARTIST   [1]DASH   [2]TRACK   [3]FEAT_ARTIST   [4]POSSIBLE_ADDITIONAL_INFO_INSIDE:()[]{} </code></pre>  <p>Then what I need to do with a RegEx, is format the filename to positionate the <em>tokens</em> in this order: </p>  <pre><code>[0]ARTIST   [3]FEAT_ARTIST   [1]DASH   [2]TRACK   [4]POSSIBLE_ADDITIONAL_INFO_INSIDE:()[]{} </code></pre>  <p>I actually do that using this RegEx:</p>  <blockquote>   <p>\A([^-]<em>?)\s</em>-\s*(.<em>?)\s</em>([([])?((ft[.\s]|feat[.\s]|featuring[.\s])[^(){}[]]*)([)]])?(.+)?\Z</p> </blockquote>  <p>Replacing with:</p>  <blockquote>   <p>$1 $4 - $2$7</p> </blockquote>  <p>The problem begins here, because the <code>[0]ARTIST</code> and <code>[2]TRACK</code> tokens could contains dashes like for example this filename:</p>  <ul> <li><strong>Dj E-nergy C-21 - My Super-hero track! feat Dj Ass-hole</strong></li> </ul>  <p>Then, correct me if I'm wrong, but I think its just impossible to solve this in any way, because a machine can't predict when to separate one token for the other, what is a name or what isn't, because I can't know the number of dashes that contains the filename.</p>  <blockquote>   <p>For that reason, instead of looking for ingenuos perfection that could cause bad   filenames because the amount of dashes inside, I prefer to look for a   filename exclusion solution, by limiting the dashes that the expression   should match in the filename.</p> </blockquote>  <h2>Question</h2>  <p>Taking as example the RegEx that I shown above to extend/improve it, how I could exclude filenames that contains an <code>[0]ARTIST</code> or an <code>[2]TRACK</code> tokens with dashes? </p>  <p>...Or in other words, how I can tell my RegEx to avoid modifying a filename when the filename contains more than 1 dash <strong>before</strong> the "<strong>...featuring artist</strong>" part? (not after)</p>  <p>Basically the Regex should determine whether <code>[1]DASH</code> is found more than once before <code>[3]FEAT_ARTIST</code>, if yes then exclude that filename (don't modify it)</p>  <p>I know how to limit the occurrence of a Regex group something more or less like this <code>([\-]){1}</code> to match only 1 dash occurrence, but I'm not sure how to implement it in the expression I'm using.</p>  <hr>  <h2>Expected Results</h2>  <p>Just some random examples...</p>  <p>One dash only before the <code>[3]FEAT_ARTIST</code> so we can know when to separate <code>[0]ARTIST</code> from <code>[2]TRACK</code> tokens.</p>  <ul> <li>From: '<strong>Carbin &amp; Sirmark - Sorry Feat. Sevener</strong>'</li> <li>To: '<strong>Carbin &amp; Sirmark Feat. Sevener - Sorry</strong>'</li> </ul>  <p>One dash only before the <code>[3]FEAT_ARTIST</code> so we can know when to separate <code>[0]ARTIST</code> from <code>[2]TRACK</code> tokens. With <code>[4]POSSIBLE_ADDITIONAL_INFO_INSIDE:()[]{}</code>.</p>  <ul> <li>From: '<strong>Flight Facilities - Heart Attack Feat. Owl Eyes (Snakehips Remix)</strong>'</li> <li>To: '<strong>Flight Facilities Feat. Owl Eyes - Heart Attack (Snakehips Remix)</strong>'</li> </ul>  <p>One dash only before the <code>[3]FEAT_ARTIST</code> so we can know when to separate <code>[0]ARTIST</code> from <code>[2]TRACK</code> tokens. With <code>[4]POSSIBLE_ADDITIONAL_INFO_INSIDE:()[]{}</code> which also contains dashes.</p>  <ul> <li>From: '<strong>Flight Facilities - Heart Attack Feat. Owl Eyes [Snake--hips Remix]</strong>'</li> <li>To: '<strong>Flight Facilities Feat. Owl Eyes - Heart Attack [Snake--hips Remix]</strong>'</li> </ul>  <p>One dash only between <code>[0]ARTIST</code> an <code>[2]TRACK</code> tokens, but the filename doesn't have a <code>[3]FEAT_ARTIST</code> so we don't touch it.</p>  <ul> <li>From: '<strong>Fedde Le Grand - Cinematic</strong>'</li> <li>To: '<strong>Fedde Le Grand - Cinematic</strong>'</li> </ul>  <p>One dash only between <code>[0]ARTIST</code> an <code>[2]TRACK</code> tokens, but the  <code>[3]FEAT_ARTIST</code> is before the <code>[1]DASH</code> so we don't touch it.</p>  <ul> <li>From: '<strong>Fedde Le Grand Feat. Denny White - Cinematic</strong>'</li> <li>To: '<strong>Fedde Le Grand Feat. Denny White - Cinematic</strong>'</li> </ul>  <p><code>[0]ARTIST</code> has dashes, so we can't know when to separate <code>[0]ARTIST</code> and <code>[2]TRACK</code> tokens, so the Regex should excludes this to don't modify this filename.</p>  <ul> <li>From: '<strong>Artist-Name - Track Name feat someone</strong>'</li> <li>To: '<strong>Artist-Name - Track Name feat someone</strong>'</li> </ul>  <p><code>[2]TRACK</code> has dashes, so we can't know when to separate <code>[0]ARTIST</code> and <code>[2]TRACK</code> tokens, so the Regex should excludes this to don't modify this filename.</p>  <ul> <li>From: '<strong>Artist Name - Track-Name feat someone</strong>'</li> <li>To: '<strong>Artist Name - Track-Name feat someone</strong>'</li> </ul>  <p><code>[0]ARTIST</code> and <code>[2]TRACK</code> tokens has dashes, so we can't know when to separate them, so the Regex should excludes this to don't modify this filename.</p>  <ul> <li>From: '<strong>Dj E-nergy C-21 - My Super-hero track! feat Dj Ass-hole</strong>'</li> <li>To: '<strong>Dj E-nergy C-21 - My Super-hero track! feat Dj Ass-hole</strong>'</li> </ul>  <p><code>[0]ARTIST</code> and <code>[2]TRACK</code> tokens has dashes and also <code>[3]FEAT_ARTIST</code> doesn't exists, again nothing to do here.</p>  <ul> <li>From: '<strong>Dj E-nergy C-21 - My Super-hero track!</strong>'</li> <li>To: '<strong>Dj E-nergy C-21 - My Super-hero track!</strong>'</li> </ul>  <p>I hope this helps to understand what I need.</p>