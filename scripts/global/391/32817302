<p>This is a python question, but also a linux/BSD question.</p>  <p>I have a python script with two threads, one downloading data from the web and the other sending data to a device over a serial port. Both of these threads print a lot of status information to stdout using python's <code>logging</code> module.</p>  <p>What I would like is to have two terminal windows open, side by side, and have each terminal window show the output from one thread, rather than have the messages from both interleaved in a single window.</p>  <p>Are there file descriptors other than stdin, stdout &amp; stderr to write to and connect to other terminal windows? Perhaps this wish is better fulfilled with a GUI? </p>  <p>I'm not sure how to get started with this.</p>  <p>edit: I've tried writing status messages to two different files instead of printing them to stdout, and then monitoring these two files with <code>tail -f</code> in other terminal windows, but this doesn't work for live monitoring because the files aren't written to until you call <code>close()</code> on them.</p>