<p>i'm using telerik RadSlider to change the value and this <a href="http://www.codeproject.com/Tips/201129/Change-Opacity-of-Image-in-C" rel="nofollow">code</a> from CodeProject to make my image have a transparency effect. so here's my code :</p>  <p>XAML</p>  <pre><code>&lt;Grid&gt;     &lt;Border BorderBrush="Silver" BorderThickness="1" Name="borderHeader" Margin="10,10,10,630" /&gt;     &lt;Border BorderBrush="Silver" BorderThickness="1" Name="borderEditor" Margin="10,70,850,19"&gt;         &lt;Canvas&gt;             &lt;Border BorderBrush="Silver" BorderThickness="1" Canvas.Left="24" Canvas.Top="20" Height="59" Name="border1" Width="355"&gt;&lt;/Border&gt;             &lt;Canvas Height="59" Canvas.Left="26" Canvas.Top="20"&gt;&lt;/Canvas&gt;             &lt;TextBlock Name="textBlock1" Text="Color Palette" Height="31" Width="197" FontSize="20" Canvas.Left="40" Canvas.Top="34" /&gt;             &lt;tk:ColorPicker x:Name="ColorPalette" ColorMode="ColorCanvas"                              SelectedColor="{Binding ElementName=Layout,                                              Path=Background,                                              Converter={StaticResource BrushColorConverter}}"                              Canvas.Left="243" Canvas.Top="34" Height="31" /&gt;             &lt;Button Grid.Row="1" Content="Add Image" Click="AddButtonClick" Canvas.Left="275" Canvas.Top="98" Height="32" Width="104" /&gt;             &lt;Border BorderBrush="Silver" BorderThickness="1" Canvas.Left="24" Canvas.Top="200" Height="350" Name="border3" Width="355"&gt;                 &lt;Canvas Canvas.Left="25" Canvas.Top="200"&gt;                     &lt;TextBlock Canvas.Left="15" Canvas.Top="27" Height="23" Name="textBlock2" Text="X-Pos " FontSize="16" Width="53" /&gt;                     &lt;TextBlock Canvas.Left="174" Canvas.Top="27" FontSize="16" Height="23" Name="textBlock3" Text="Y-Pos " Width="53" /&gt;                     &lt;Label Name="posX" Height="23" Width="83" Canvas.Left="74" Canvas.Top="27" /&gt;                     &lt;Label Name="posY" Canvas.Left="233" Canvas.Top="27" Height="23" Width="83" /&gt;                     &lt;TextBlock Canvas.Left="15" Canvas.Top="68" FontSize="16" Height="23" Name="textBlock4" Text="Width" Width="53" /&gt;                     &lt;TextBlock Canvas.Left="174" Canvas.Top="68" FontSize="16" Height="23" Name="textBlock5" Text="Height" Width="53" /&gt;                     &lt;Label Name="imgHeight" Canvas.Left="74" Canvas.Top="68" Height="23" Width="83" /&gt;                     &lt;Label Name="imgWidth" Canvas.Left="233" Canvas.Top="68" Height="23" Width="83" /&gt;                      &lt;TextBlock Canvas.Left="15" Canvas.Top="114" FontSize="16" Height="23" Name="textBlock6" Text="Transparency" Width="100" /&gt;                     &lt;telerik:RadSlider Name="opacitySlider" Value="100" Minimum="0" Maximum="100" SmallChange="1"                                         Canvas.Left="174" Canvas.Top="117"  Width="142" Height="21" /&gt;                                        &lt;!--ValueChanged="opacitySlider_ValueChanged" /&gt;--&gt;                 &lt;/Canvas&gt;             &lt;/Border&gt;             &lt;TextBox Name="directoryText" Height="32" Width="226" Canvas.Left="26" Canvas.Top="98" /&gt;         &lt;/Canvas&gt;     &lt;/Border&gt;     &lt;Border BorderBrush="Silver" BorderThickness="1" Name="borderLayout" Margin="462,70,10,19"&gt;         &lt;Canvas x:Name="Layout" Background="White" AllowDrop="True" ClipToBounds="True"                 MouseLeftButtonDown="MouseLeftButtonDown"                 MouseLeftButtonUp="MouseLeftButtonUp"                 MouseMove="MouseMove"&gt;&lt;/Canvas&gt;     &lt;/Border&gt; &lt;/Grid&gt; </code></pre>  <p>Main Class</p>  <pre><code>public partial class MainWindow : Window {     public MainWindow()     {         InitializeComponent();     }      public int imgX { get; set; }      public int imgY { get; set; }      private void AddButtonClick(object sender, RoutedEventArgs e)     {         var dialog = new Microsoft.Win32.OpenFileDialog();         dialog.Filter =             "Image Files (*.jpg; *.png; *.jpeg; *.gif; *.bmp)|*.jpg; *.png; *.jpeg; *.gif; *.bmp";          if ((bool)dialog.ShowDialog())         {             var bitmap = new BitmapImage(new Uri(dialog.FileName));             var image = new Image { Source = bitmap };             this.imgX = bitmap.PixelWidth;             this.imgY = bitmap.PixelHeight;              Canvas.SetLeft(image, 0);             Canvas.SetTop(image, 0);             Layout.Children.Add(image);             imgHeight.Content = bitmap.PixelHeight;             imgWidth.Content = bitmap.PixelWidth;         }          string filename = dialog.FileName;         directoryText.Text = filename;     }      private Image draggedImage;     private Point mousePosition;       private void MouseLeftButtonDown(object sender, MouseButtonEventArgs e)     {         var image = e.Source as Image;          if (image != null &amp;&amp; Layout.CaptureMouse())         {             mousePosition = e.GetPosition(Layout);             draggedImage = image;             Panel.SetZIndex(draggedImage, 1);         }     }      private void MouseLeftButtonUp(object sender, MouseButtonEventArgs e)     {         if (draggedImage != null)         {             Layout.ReleaseMouseCapture();             Panel.SetZIndex(draggedImage, 0);             draggedImage = null;         }     }      private void MouseMove(object sender, MouseEventArgs e)     {         if (draggedImage != null)         {             var position = e.GetPosition(Layout);             var offset = position - mousePosition;             mousePosition = position;              double canvasSizeX = 800;             double canvasSizeY = 600;              double newLeft = Canvas.GetLeft(draggedImage) + offset.X;             double newTop = Canvas.GetTop(draggedImage) + offset.Y;              if (newLeft &lt; 0)                 newLeft = 0;             else if (newLeft + draggedImage.ActualWidth &gt; canvasSizeX)                 newLeft = canvasSizeX - draggedImage.ActualWidth;              if (newTop &lt; 0)                 newTop = 0;             else if (newTop + draggedImage.ActualHeight &gt; canvasSizeY)                 newTop = canvasSizeY - draggedImage.ActualHeight;              Canvas.SetLeft(draggedImage, newLeft);             Canvas.SetTop(draggedImage, newTop);              posX.Content = Canvas.GetLeft(draggedImage);             posY.Content = Canvas.GetTop(draggedImage);          }     }      private void opacitySlider_ValueChanged(object sender, RoutedPropertyChangedEventArgs&lt;double&gt; e)     {             float opacityvalue = (float)opacitySlider.Value / 100;             draggedImage = ImageTransparency.ChangeOpacity(draggedImage, opacityvalue);     }  } </code></pre>  <p>Image Transparency Class</p>  <pre><code>class ImageTransparency {     public static Image ChangeOpacity(Image draggedImage, float opacityvalue)     {         try         {             Bitmap bmp = new Bitmap(draggedImage.Width, draggedImage.Height);              using (Graphics gfx = Graphics.FromImage(bmp))             {                 ColorMatrix matrix = new ColorMatrix();                 matrix.Matrix33 = opacityvalue;                 ImageAttributes attributes = new ImageAttributes();                 attributes.SetColorMatrix(matrix, ColorMatrixFlag.Default, ColorAdjustType.Bitmap);                 gfx.DrawImage(draggedImage, new Rectangle(0, 0, bmp.Width, bmp.Height), 0, 0, draggedImage.Width, draggedImage.Height, GraphicsUnit.Pixel, attributes);             }             return bmp;         }         catch (Exception)         {             return null;         }     }      internal static System.Windows.Controls.Image ChangeOpacity(System.Windows.Controls.Image draggedImage, float opacityvalue)     {         throw new Exception();     } } </code></pre>  <p>the code has no error but the transparency effect didn't work at all, its just like an empty slider without doing anything to the image.</p>