<p>I'm using this: <a href="http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/multiselect/overview" rel="nofollow">http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/multiselect/overview</a></p>  <p>The problem is that I am not able to "inject" data in the Telerik multiselect.</p>  <p>Here below you can see the code of multiselect</p>  <pre><code>@( Html.Kendo().MultiSelectFor(m =&gt; m)     .DataTextField("CompanyName")     .DataValueField("CompanyId")     .DataSource(source =&gt;     {         source.Read(read =&gt;         {             read.Action("GetAllSuppliers", "Products"); //Set the Action and Controller name         })         .ServerFiltering(true); //If true the DataSource will not filter the data on the client.     }) </code></pre>  <p>Where I use it</p>  <pre><code>&lt;dt&gt;Suppliers&lt;/dt&gt;                 &lt;dd&gt;                     @Html.EditorFor(elt =&gt; elt.Suppliers)                 &lt;/dd&gt; </code></pre>  <p>The view model</p>  <pre><code>public class ProductDetailsViewModel {     public Guid ProductId { get; set; }      public string ProductName { get; set; }      public string MainProductPictureBase64 { get; set; }      public IEnumerable&lt;string&gt; ProductPicturesBase64 { get; set; }      //[UIHint("_productCategoriesDropDownList")]     public ProductCategoryViewModel Category { get; set; }      [UIHint("_suppliers")]     public IEnumerable&lt;SupplierViewModel&gt; Suppliers { get; set; } } </code></pre>  <p>The controller</p>  <pre><code>public JsonResult GetAllSuppliers()     {         List&lt;IError&gt; errors = new List&lt;IError&gt;();         IEnumerable&lt;SupplierViewModel&gt; suppliers = ProductsCRUD.GetAllSuppliers(errors);          return Json(suppliers, JsonRequestBehavior.AllowGet);     } </code></pre>  <p>The multiselect control of Telerik is correctly rendered, but without any data.</p>  <p>The view which contains the multiselect is loaded asynchronously with AJAX. </p>  <p>I have a break point in the action method GetAllSuppliers: the controller is never called. Can you suggest why?</p>