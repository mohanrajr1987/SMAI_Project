<p>I am currently working on a dummy MVC project (to try out some new things), but I am having issue with Injecting my DatabaseContext into my service...</p>  <p>You can find my code below:</p>  <p>My DatabaseContext:</p>  <pre><code>public class DatabaseContext : DbContext {     protected DatabaseContext() : base("DatabaseContext")     {     }      public DbSet&lt;MacAddress&gt; MacAddresses { get; set; }      protected override void OnModelCreating(DbModelBuilder modelBuilder)     {         modelBuilder.Conventions.Remove&lt;PluralizingTableNameConvention&gt;();     } } </code></pre>  <p>My service &amp; interface into which I'd like to inject my context:</p>  <pre><code>public interface IMacAddressService {     List&lt;MacAddress&gt; GetAllMacAddresses(); }  public class MacAddressService : IMacAddressService {     private readonly DatabaseContext _context;      public MacAddressService(DatabaseContext context)     {         this._context = context;     }      public List&lt;MacAddress&gt; GetAllMacAddresses()     {         return _context.MacAddresses.ToList();     } } </code></pre>  <p>What binding can I apply on my IKernel to inject my DatabaseContext properly?</p>  <p>For your information:</p>  <ul> <li><p>I am already able to bind classes so there's nothing wrong with my Ninject setup, I just need to know how to bind this specific context</p></li> <li><p>I googled but all I could find was how to bind the DbContext to itself...</p></li> <li><p>I use a custom DbContext as seen in an EF tutorial so that I can use my DbSets in my services (I will later use repositories for this)</p></li> </ul>  <p>Thanks in advance!</p>