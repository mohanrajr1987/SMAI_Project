<p>I want to implement business logic in DbSet derived classes. I like the idea of not having services and DAL abstractions and think this could be a good way. For this to work I need to inject objects into my DbSet but I don't know how. Here some sample code which does not work, because the EF Framework can't create an object of the DbSet. Maybe someone can point me in the right direction?</p>  <pre><code>public class LongTermBookingDbSet : DbSet&lt;LongTermBooking&gt; {     DbContext _dbContext { get; set; }      public LongTermBookingDbSet(DbContext dbContext )     {         this._dbContext = _bContext ;     }      public override LongTermBooking Add(LongTermBooking entity)     {         return this.Add(entity, false);        }      public LongTermBooking Add(LongTermBooking entity, bool SendMails)     {         var dbSet = base.Add(entity);          //do something with the _dbContext          return dbSet;     } } </code></pre>