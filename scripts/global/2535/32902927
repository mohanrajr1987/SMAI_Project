<p><strong>The short question:</strong></p>  <p>How can I determine if a property/column on an entity is part of the key, and if it has the DatabaseGeneratedOption set to Identity, and change the DatabaseGeneratedOption to None using a convention?</p>  <p><strong>The background:</strong></p>  <p>I have a case where an Entity Framework model is used on both Oracle and MSSQL. The MSSQL database has primary keys defined as "Identity" and thus they are also defined as such in the EF model.</p>  <p>Today we have a manually maintained file that "fixes" the configuration when using Oracle such that we change the databasegenerated option. The downside is we have to maintain this file manually. I.e in the oracle specific context we have the following in the <em>OnModelCreatedMethod</em></p>  <pre><code>modelBuilder.Entity&lt;Mytable&gt;.Property(p =&gt; p.MyPrimaryKey_Id).HasDatabaseGeneratedOption(DatabaseGeneratedOption.None) </code></pre>  <p><strong>What I have tried so far:</strong> I am trying to write a code-first or model-based convention that does the same, however I can't seem to find a way to change the store generated option AND detect if the database generated option is already in place or not.</p>  <p>If i create a code-first convention class like so:</p>  <pre><code>public class RemoveIdentityConvention : Convention {    public RemoveIdentityConvention()    {       this.Properties().Configure(p =&gt; p.HasDatabaseGeneratedOption(RemoveIdentityConvention))    } } </code></pre>  <p>Then I can change the store generated option. However I would like to only do it on things that are primary key and that has the Identity generated option already defined. As far as I can determine I am unable to access those using the <em>Where()</em> or <em>Having()</em> extensions on the <em>PropertyConventionConfiguration</em> instance that <em>this.Properties()</em> returns.</p>  <p>If instead I implement the <em>Apply</em> method of the <em>IstoreModelConvention</em> interface, I can access the <em>KeyMembers</em> and the <em>IsStoreGeneratedIdentity</em> properties. But then I can't seem to figure out how to change the <em>DatabaseGeneratedOption</em></p>