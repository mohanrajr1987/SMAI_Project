<p>So I'm attempting to write a practice asp.net website for a bike store network.  If you look at my index view for my store object, As well as my mock db and controller, you can see that I intend for the view to print out the number and the names of the stores:</p>  <p><strong>BikeStoreEntities.cs</strong></p>  <pre><code>using System; using System.Collections.Generic; using System.Linq; using System.Web; using System.Data.Entity; using BikeStore.Models;  namespace BikeStore.Models {     public class BikeStoreEntities : DbContext     {         public DbSet&lt;Inventory&gt; StoreInventory { get; set; }         public DbSet&lt;Store&gt; Stores { get; set; }     } } </code></pre>  <p><strong>Controller</strong></p>  <pre><code>using System; using System.Collections.Generic; using System.Linq; using System.Web; using System.Web.Mvc; using BikeStore.Models;   namespace BikeStore.Controllers {     public class StoreController : Controller     {         BikeStoreEntities storeDB = new BikeStoreEntities();         // GET: Store         public ActionResult Index()         {             var stores = storeDB.Stores.ToList();             return View(stores);           }         public ActionResult Details(int id)         {             var bike = new Inventory {SerialNumber=id };             return View(bike);         }         public ActionResult Browse(string name)         {             var store = new Store { Name = name };             return View(store);         }     } } </code></pre>  <p><strong>Model</strong></p>  <pre><code>using System; using System.Collections.Generic; using System.Linq; using System.Web; using System.Data.Entity; using BikeStore.Models; using BikeStore.Models;  namespace BikeStore.Models {     public class SampleData : DropCreateDatabaseIfModelChanges&lt;BikeStoreEntities&gt;     {         protected override void Seed(BikeStoreEntities context)         {             var stores = new List&lt;Store&gt;             {                 new Store { Name = "Rocky Road" , City= " ", Address= " ", Phone= " ", Employees = new List&lt;Employee&gt;(), StoreInventory= new List&lt;Inventory&gt;()},                 new Store { Name = "Jazzy Drive" ,City= " ", Address= " ", Phone= " ", Employees = null, StoreInventory= null},                 new Store { Name = "Metal Foundry" ,City= " ", Address= " ", Phone= " ", Employees = null, StoreInventory= null}             };         }     } } </code></pre>  <p><strong>View</strong></p>  <pre><code> @model IEnumerable&lt;BikeStore.Models.Store&gt;  @{     ViewBag.Title = "Store"; } &lt;h3&gt;Browse Stores&lt;/h3&gt; &lt;p&gt;     Select from @Model.Count() Stores: &lt;/p&gt; &lt;ul&gt;     @foreach (var store in Model)     {         &lt;li&gt;@store.Name&lt;/li&gt;     } &lt;/ul&gt; </code></pre>  <p>However, It prints out "Select from 0 Stores" and then no stores after it.  Does anyone have any idea what might be going on here?  I would be happy to provide any other project files that you feel are relevant.</p>