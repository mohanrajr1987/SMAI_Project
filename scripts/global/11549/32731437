<pre><code>public class ExampleNullPointer {     public static void main(String[] args) {         try {             getEmployee().getDept().getLocation().getContactPerson();         } catch (NullPointerException e) {             e.printStackTrace();         }     } } </code></pre>  <p>Output </p>  <pre><code>java.lang.NullPointerException at com.india.test.ExampleNullPointer.main(ExampleNullPointer.java:7) </code></pre>  <p>Looking at above code and its output, when java throws <code>java.lang.NullPointerException</code>, is there anyway we can wrap this <code>NullPointerException</code> to show additional information, like which Object is null, or some info about its parent object, such as the parent object's name attributes?</p>  <p>I am mainly looking for parent object's attribute values, for example Dept is null so if I can log Employee's primary key or Employee's name by overriding <code>toString()</code> method.</p>  <p>Is there anyway I can generically make changes to get these information, so that whenever program throws <code>NullPointerException</code> I get these additional information which will help me easily identify the issue and the data which are causing the issue?</p>