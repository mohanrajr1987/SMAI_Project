<p>This my code so far. First method is a button method, second one is working on opening a port, and far below, you can see the variables I use for the port openning method.</p>  <p>My question is, why do I get NullPointerException? Rather than just a fix to code, I prefer some explanation at where I'm doing wrong. My personal idea is (I'm not sure though) that I mess up the Input/Output Stream.    </p>  <pre><code>private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                                  openPort("COM6");         try {             EmulatorOutput.setText(Integer.toString(input.read()));         } catch (IOException ex) {             System.out.println("Problem at input output - located at button!");         } }  private boolean openPort(String portName){     try {         System.out.println("Something is wrong here... (Trying to open a port.)");         Enumeration enumComm;         if (serialPortOpen) {             return false;         }         enumComm = CommPortIdentifier.getPortIdentifiers();         boolean foundPort = false;          while(enumComm.hasMoreElements()) {               portIdentifier = (CommPortIdentifier) enumComm.nextElement();             if (portName.contentEquals(portIdentifier.getName())) {                 foundPort = true;                 break;             }         }         if (foundPort == false)             return false;          port = (SerialPort) portIdentifier.open(portName, 500);         System.out.println("Guess not .-.");     } catch (PortInUseException ex) {         System.out.println("Port is in use!?");     }     try {         input = port.getInputStream();     } catch (IOException ex) {         System.out.println("Something is wrong with the InputStream.");         ex.printStackTrace();     }     try {         port.setSerialPortParams(9600, SerialPort.DATABITS_8, SerialPort.STOPBITS_1,                 SerialPort.PARITY_NONE);     } catch (UnsupportedCommOperationException ex) {         System.out.println("Port Parameter Operations are unsuccessful!");     }     serialPortOpen = true;     return true; }  private boolean serialPortOpen = false; private SerialPort port; private InputStream input = null; private CommPortIdentifier portIdentifier = null; </code></pre>  <p>Thanks for all help from now on! </p>  <pre><code>Exception in thread "AWT-EventQueue-0" java.lang.NullPointerException     at io.emulator.MainWindow.jButton1ActionPerformed(MainWindow.java:124)     at io.emulator.MainWindow.access$000(MainWindow.java:26)     at io.emulator.MainWindow$1.actionPerformed(MainWindow.java:68)     at javax.swing.AbstractButton.fireActionPerformed(AbstractButton.java:2022)     at javax.swing.AbstractButton$Handler.actionPerformed(AbstractButton.java:2346)     at javax.swing.DefaultButtonModel.fireActionPerformed(DefaultButtonModel.java:402)     at javax.swing.DefaultButtonModel.setPressed(DefaultButtonModel.java:259)     at javax.swing.plaf.basic.BasicButtonListener.mouseReleased(BasicButtonListener.java:252)     at java.awt.Component.processMouseEvent(Component.java:6527)     at javax.swing.JComponent.processMouseEvent(JComponent.java:3321)     at java.awt.Component.processEvent(Component.java:6292)     at java.awt.Container.processEvent(Container.java:2234)     at java.awt.Component.dispatchEventImpl(Component.java:4883)     at java.awt.Container.dispatchEventImpl(Container.java:2292)     at java.awt.Component.dispatchEvent(Component.java:4705)     at java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4898)     at java.awt.LightweightDispatcher.processMouseEvent(Container.java:4533)     at java.awt.LightweightDispatcher.dispatchEvent(Container.java:4462)     at java.awt.Container.dispatchEventImpl(Container.java:2278)     at java.awt.Window.dispatchEventImpl(Window.java:2739)     at java.awt.Component.dispatchEvent(Component.java:4705)     at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:746)     at java.awt.EventQueue.access$400(EventQueue.java:97)     at java.awt.EventQueue$3.run(EventQueue.java:697)     at java.awt.EventQueue$3.run(EventQueue.java:691)     at java.security.AccessController.doPrivileged(Native Method)     at java.security.ProtectionDomain$1.doIntersectionPrivilege(ProtectionDomain.java:75)     at java.security.ProtectionDomain$1.doIntersectionPrivilege(ProtectionDomain.java:86)     at java.awt.EventQueue$4.run(EventQueue.java:719)     at java.awt.EventQueue$4.run(EventQueue.java:717)     at java.security.AccessController.doPrivileged(Native Method)     at java.security.ProtectionDomain$1.doIntersectionPrivilege(ProtectionDomain.java:75)     at java.awt.EventQueue.dispatchEvent(EventQueue.java:716)     at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:201)     at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:116)     at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:105)     at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)     at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:93)     at java.awt.EventDispatchThread.run(EventDispatchThread.java:82) BUILD SUCCESSFUL (total time: 5 seconds) </code></pre>  <p>Edit 1: Indents fixed, PrintStackTrace added.</p>  <p>Edit 2: Solved the problem. It was the emulator I was using to emulate the COM port. Appearently, some drivers were unsigned, so it was getting errors here and there, missing some of the drivers. Now it takes the port correctly. Thanks for the help! :)</p>