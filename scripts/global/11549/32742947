<p>a NullPointerException is keep thrown whenever I run my program ! I did Debug it and it seems the problem to be from the private inner class Node inside the class linkedBag and the add method !  I did not get exactly why it's an NullPointerException ?</p>  <pre><code>Exception in thread "main" java.lang.NullPointerException at LinkedBag$Node.access$200(LinkedBag.java:13) at LinkedBag.difference(LinkedBag.java:133) at LinkedBagDemo1.main(LinkedBagDemo1.java:16) </code></pre>  <p>Here's the main :</p>  <pre><code>import java.util.*; public class LinkedBagDemo1{ public static void main(String[] args) { BagInterface&lt;String&gt;bag1 = new LinkedBag&lt;String&gt;(); BagInterface&lt;String&gt;bag2 = new LinkedBag&lt;String&gt;(); bag1.add("a"); bag1.add("b"); bag2.add("d"); BagInterface&lt;String&gt;leftOver1 = new LinkedBag&lt;String&gt;(); leftOver1 = bag1.difference(bag2);//the exception starts from here  } // end main } // end LinkedBagDemo1 </code></pre>  <p>And here is the class Linked bag:</p>  <pre><code>        public class LinkedBag&lt;T&gt; implements BagInterface&lt;T&gt;{         public LinkedBag(){           firstNode=null;           numberOfEntries=0;        }         private class Node{           private T data; // entry in bag           private Node next; // link to next node           private Node(T dataPortion)           {              this(dataPortion, null);           } // end constructor           private Node(T dataPortion, Node nextNode)           {              data = dataPortion;              next = nextNode;           } // end constructor        } // end Node  public boolean add(T newEntry){       Node newNode = new Node(newEntry);       newNode.next = firstNode;       firstNode = newNode;       numberOfEntries++;       return true;}  public BagInterface&lt;T&gt; difference (BagInterface&lt;T&gt; Bag2){        BagInterface&lt;T&gt; newBag = new LinkedBag&lt;T&gt;();//creating a new linked bag       int num1=0,num2=0,newNum=0;    //converting the two bag to an array to keep the original bags private       Object[]Arr2=Bag2.toArray();//the recieved bag       Node current = firstNode;       for(int i=0;i&lt;Arr2.length;i++){           if(!Bag2.contains(current.data)){             newBag.add(current.data);}//if1           else if(Bag2.contains(current.data)){//debug for the exception accrue here             num1=this.getFrequencyOf(current.data);             num2=Bag2.getFrequencyOf(current.data);             newNum = num1-num2;             int count =0;             while(count!=newNum&amp;&amp;count&gt;0){                newBag.add(current.data);             }//while          }//else          current = current.next;       }//for       return newBag;    }//difference </code></pre>