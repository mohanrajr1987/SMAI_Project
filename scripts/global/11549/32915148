<p>I have an app where the structure is as A->B->C. I have <code>up</code> navigation going from C->B->A where A is my <code>Main Activity</code> B is my <code>Series Activity</code>, and C is my <code>Places List Activity</code></p>  <p>Whenever I use the up navigation from B->A it works, but whenever I use the navigation from C->B it crashes with this error:</p>  <pre><code>Caused by: java.lang.NullPointerException: Attempt to invoke virtual method 'java.util.ArrayList android.os.Bundle.getStringArrayList(java.lang.String)' on a null object reference         at com.thevisitapp.visitapp.SeriesActivity.onCreate(SeriesActivity.java:37)         at android.app.Activity.performCreate(Activity.java:6500)         at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1120)         at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:3072) </code></pre>  <p>           </p>  <p>And the code in <code>Series Activity</code> which is getting referenced by the error is :</p>  <pre><code>public class SeriesActivity extends ActionBarActivity {     ListView mList;      @Override     protected void onCreate(Bundle savedInstanceState) {         requestWindowFeature(Window.FEATURE_INDETERMINATE_PROGRESS);         super.onCreate(savedInstanceState);         setContentView(R.layout.activity_after_destination);           ArrayList&lt;String&gt; seriesIds = new ArrayList&lt;&gt;();         ArrayList&lt;String&gt; placesIds = new ArrayList&lt;&gt;();         Bundle extras = getIntent().getExtras();          if(extras.getStringArrayList("nextSeries") != null){             seriesIds = extras.getStringArrayList("nextSeries");         }          else if(extras.getStringArrayList("nextPlaces") != null){             placesIds = extras.getStringArrayList("nextPlaces");         }          String name = extras.getString("name");         Log.d("ADACTIVITY NAME", name);          getSupportActionBar().setTitle(name);         getSupportActionBar().setDisplayHomeAsUpEnabled(true);          new Series().execute(seriesIds, placesIds);     }      public class Series extends AsyncTask&lt;ArrayList&lt;String&gt;, Void, JSONObject&gt;{         protected JSONObject doInBackground(ArrayList&lt;String&gt;...lists){              String myUrl = "http://thevisitapp.com/api/series/read?identifiers=";             ArrayList&lt;String&gt; seriesIds = lists[0];             Log.d("SERIES IDS IN AD", seriesIds.toString());              myUrl = formatUrl(myUrl, seriesIds);              Log.d("AD URL", myUrl);             HttpRequest request = new HttpRequest();              Log.d("GETTING JSON FROM URL", request.getJSONFromUrl(myUrl).toString());             return request.getJSONFromUrl(myUrl);         }          protected void onPreExecute(){             Toast.makeText(SeriesActivity.this, "loading", Toast.LENGTH_LONG);             setProgressBarIndeterminateVisibility(true);         }         protected void onPostExecute(JSONObject result){             ArrayList&lt;String&gt; modelNames = new ArrayList&lt;&gt;();              Log.d("JSON RESPONSE", result.toString());              final ArrayList&lt;JSONObject&gt; modelsObjectList = new ArrayList&lt;&gt;();              try {                 JSONObject info = result.getJSONObject("info");                 JSONArray models = info.getJSONArray("models");                  for(int i = 0; i &lt; models.length(); i++){                     modelsObjectList.add(models.getJSONObject(i));                 }                  for(int i = 0; i &lt; modelsObjectList.size(); i++){                     modelNames.add(modelsObjectList.get(i).getString("name"));                 }              } catch(JSONException e ){                 Log.d("JSONEXCEPTION", e.getMessage().toString());             }              //TODO found problem, model names for whatever reason is passing in the names from previous activity             Log.d("MODEL NAMES", modelNames.toString());             Toast.makeText(SeriesActivity.this, modelNames.toString(), Toast.LENGTH_LONG).show();              mList = (ListView) findViewById(android.R.id.list);             CustomMainAdapter mainAdapter = new CustomMainAdapter(SeriesActivity.this, modelNames,                     getResources().getDrawable(R.drawable.map_pin));             mList.setAdapter(mainAdapter);               setProgressBarIndeterminateVisibility(false);             mList.setOnItemClickListener(new AdapterView.OnItemClickListener() {                 String name;                 Long id;                  public void onItemClick(AdapterView&lt;?&gt; parent, View view, int position, long id) {                      JSONObject passingObject = modelsObjectList.get(position);                     ArrayList&lt;String&gt; nextPlacesList = new ArrayList&lt;&gt;();                      try {                         if(passingObject.optJSONArray("places") == null){                             Log.v("WE ARE IN THE LOOP", "in the loop");                             ArrayList&lt;String&gt; nextSeriesList = new ArrayList&lt;&gt;();                             name = passingObject.getString("name");                             id = passingObject.getLong("id");                             JSONArray series = passingObject.getJSONArray("series");                             for(int i = 0; i &lt; series.length(); i++){                                 nextSeriesList.add(series.getString(i));                             }                              Log.d("NEXT ACTIVITY NAME", name);                             System.out.println("NEXT ACTIVITY ID " + id);                             Log.d("NEXT SERIES LIST", nextSeriesList.toString());                              Intent intent = new Intent(SeriesActivity.this, SecondSeriesActivity.class);                             intent.putExtra("id", id);                             intent.putExtra("name", name);                             intent.putExtra("nextSeries", nextSeriesList);                             startActivity(intent);                             return;                         }                          Log.v("SHOULDN'T BE HERE", "this is bad");                         JSONArray places = passingObject.getJSONArray("places");                          for(int i = 0; i &lt; places.length(); i++){                             nextPlacesList.add(places.getString(i));                          }                          name = passingObject.getString("name");                         id = passingObject.getLong("id");                           Log.d("NEXT ACTIVITY NAME", name);                         System.out.println("NEXT ACTIVITY ID " + id);                         Log.d("NEXT SERIES LIST", nextPlacesList.toString());                      } catch(JSONException e){                         Log.d("JSONEXCEPTION", e.getMessage());                     }                      Intent intent = new Intent(SeriesActivity.this, PlacesListActivity.class);                     intent.putExtra("id", id);                     intent.putExtra("name", name);                     intent.putExtra("placesList", nextPlacesList);                      startActivity(intent);                 }             });         }     }      private String formatUrl(String myUrl, ArrayList&lt;String&gt; seriesIds) {         int count = 0;         //adds comma after every series but the last one         for(int i = 0; i &lt; seriesIds.size(); i++){             myUrl += seriesIds.get(i);             if(count != seriesIds.size() -1){                 myUrl += ",";             }             count++;         }         return myUrl;     } </code></pre>  <p>And here is the the <code>PlacesListActivity</code> I'm trying to go back from:</p>  <pre><code>public class PlacesListActivity extends ActionBarActivity {      ListView mList;     ProgressBar progress;      @Override     protected void onCreate(Bundle savedInstanceState) {         super.onCreate(savedInstanceState);         setContentView(R.layout.activity_places_list);          progress = (ProgressBar) findViewById(R.id.placesListProgress);          ArrayList&lt;String&gt; placesIds = new ArrayList&lt;&gt;();         Bundle extras = getIntent().getExtras();          Long id = extras.getLong("id");         String name = extras.getString("name");         placesIds = extras.getStringArrayList("placesList");          getSupportActionBar().setTitle(name);         getSupportActionBar().setDisplayHomeAsUpEnabled(true);          progress.setVisibility(View.VISIBLE);          Place place = new Place();         place.execute(placesIds);     }      private class Place extends AsyncTask&lt;ArrayList&lt;String&gt;, Void, JSONObject&gt;{         protected JSONObject doInBackground(ArrayList&lt;String&gt;...places){             String myUrl = "http://thevisitapp.com/api/places/read?identifiers=";              HttpRequest request = new HttpRequest();             ArrayList&lt;String&gt; placesList = places[0];              myUrl = formatUrl(myUrl, placesList);              return request.getJSONFromUrl(myUrl);         }          protected void onPostExecute(JSONObject result){              progress.setVisibility(View.GONE);              ArrayList&lt;String&gt; placesNames = new ArrayList&lt;&gt;();             ArrayList&lt;String&gt; summaries = new ArrayList&lt;&gt;();             final ArrayList&lt;JSONObject&gt; modelsObjectList = new ArrayList&lt;&gt;(); //snags "models" array objects in JSON response              JSONArray modelsArray;             JSONObject info;              try{                 info = result.getJSONObject("info");                 modelsArray = info.getJSONArray("models");                  for(int i = 0; i &lt; modelsArray.length(); i++){                     modelsObjectList.add(modelsArray.getJSONObject(i));                     placesNames.add(modelsObjectList.get(i).getString("name"));                     summaries.add(modelsObjectList.get(i).getString("summary"));                 }                } catch(JSONException e ){                 Log.d("JSONEXCEPTION", e.getMessage());             }               mList = (ListView) findViewById(android.R.id.list);             PlacesListAdapter mainAdapter = new PlacesListAdapter(PlacesListActivity.this, placesNames, summaries);             mList.setAdapter(mainAdapter);              mList.setOnItemClickListener(new AdapterView.OnItemClickListener() {                 String name;                 String zoom;                 String summary;                 String phone;                 String email;                 String facebook;                 String twitter;                   public void onItemClick(AdapterView&lt;?&gt; parent, View view, int position, long id) {                      Log.d("IN ON CLICK LISTENER", "IN ON CLICK LISTENER");                     JSONObject nextActivityObject = modelsObjectList.get(position);                     ArrayList&lt;String&gt; listOfLatLng = new ArrayList&lt;&gt;();                     Intent intent = new Intent(PlacesListActivity.this, PlacesActivity.class);                      try {                         JSONArray nextActivityMapLocations = nextActivityObject.getJSONArray("locations");                         Log.d("NEXT MAP COORDINATES", nextActivityMapLocations.toString());                          JSONObject contacts = new JSONObject();                         JSONObject media = new JSONObject();                          if(nextActivityObject.getJSONObject("contacts") != null){                             contacts = nextActivityObject.getJSONObject("contacts");                             if(contacts.getString("phone") != null){                                 phone = contacts.getString("phone");                                 intent.putExtra("phone",phone);                             } else if(contacts.getString("email") != null){                                 email = contacts.getString("email");                                 intent.putExtra("email", email);                             }                         }                         else if(nextActivityObject.getJSONObject("media") != null){                             media = nextActivityObject.getJSONObject("media");                             if(media.getString("twitter") != null){                                 twitter = media.getString("twitter");                                 intent.putExtra("twitter", twitter);                             }                             if(media.getString("facebook") != null){                                 facebook = media.getString("facebook");                                 intent.putExtra("facebook", facebook);                             }                         }                        Log.d("CONTACTS", contacts.toString());                          //TODO see what else I need to pass to the other activity  //                            Log.d("PLACES CONTACTS", contacts.toString());                         name = nextActivityObject.getString("name");                         summary = nextActivityObject.getString("summary");                         phone = contacts.getString("phone");                          Log.d("before coordinates", "before coordinates");                         for(int i = 0; i &lt; nextActivityMapLocations.length(); i++){                             listOfLatLng.add((nextActivityMapLocations.getJSONObject(i).getString("latitude")));                             listOfLatLng.add((nextActivityMapLocations.getJSONObject(i).getString("longitude")));                             Log.d("COORDINATES", "Latitude " + listOfLatLng.toString() + ", Longitude " + listOfLatLng.toString());                             zoom = nextActivityMapLocations.getJSONObject(i).getString("zoom");                         }                          //TODO figure out how to pass JSON Object with potential lat and longs                       } catch(JSONException e ){                         Log.d("PLACES LIST JSON EXCEPTION", e.getMessage());                     }                      intent.putExtra("id", id);                     intent.putExtra("name", name);                     intent.putExtra("zoom", zoom);                     intent.putExtra("summary", summary);                     intent.putExtra("locationList", listOfLatLng);                      startActivity(intent);                  }             });         }     }     private String formatUrl(String myUrl, ArrayList&lt;String&gt; urlSeries) {         int count = 0;          //adds comma after every series but the last one         if (!urlSeries.isEmpty()){             for (int i = 0; i &lt; urlSeries.size(); i++) {                 myUrl += urlSeries.get(i);                 if (count != urlSeries.size() - 1) {                     myUrl += ",";                 }                 count++;             }         } else{             Log.d("SERIES ERROR", "SERIES LIST IS EMPTY");         }         return myUrl;     } </code></pre>