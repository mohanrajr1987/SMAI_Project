<p>I'm new to Testing side.I'm using Spring Mvc in my application. I followed some tutorials to write for controller and service Test Case. I'm facing error in service test. Please help !</p>  <p>Service : </p>  <pre><code>@Autowired private PatientDao patientDao;  @Autowired private PrefixDao prefixDao;  public Patient createPatient(Patient patient) throws Exception {     patient.setAgeorDob();     return createPatientInSync(patient); }  private synchronized Patient createPatientInSync(Patient patient)             throws Exception {         try {             Prefix prefix = prefixDao.getPrefixForType(PrefixType.PATIENT);             patient.setPatientNo(prefix.getPrefixedNumber());             patientDao.createPatient(patient); //SAVE PATIENT             prefixDao.incrementPrefix(prefix);         } catch (ConstraintViolationException ex) {             throw new InternalErrorException("Please enter valid data", ex);         } catch (NullPointerException e) {             e.printStackTrace();             throw new InternalErrorException(                     "Please create Prefix for Patient", e);         }         return patient;     } </code></pre>  <p>Service Test case:</p>  <pre><code>@ContextConfiguration(locations = {         "classpath:/applicationContext-resources.xml",         "classpath:/applicationContext-service.xml",         "classpath:/applicationContext-dao.xml",         "classpath:/applicationContext.xml" }) @RunWith(SpringJUnit4ClassRunner.class) public class PatientServiceTest {      @Autowired     @Mock     private PatientDao patientDao;      @InjectMocks     private PatientServiceImpl patientService = new PatientServiceImpl();      private PrefixDao prefixDao;       @Before     public void doSetup() {         patientDao = mock(PatientDao.class);         prefixDao = mock(PrefixDao.class);         // Mockito.mock(PatientDao.class);     }      @Before     public void initMocks() {         MockitoAnnotations.initMocks(this);     }      @Test     public void testSaveUser() throws Exception {          Patient mockPatient = new Patient();         mockPatient.setFirstName("Aravinth");         mockPatient.setSex(Gender.Male);         mockPatient.setAgeOrDob("24");          Prefix prefix = new Prefix();         prefix.setPrefixType(PrefixType.PATIENT);         prefix.setPrefix("Pat-");         prefix.setSequenceNo(23);          when(prefixDao.getPrefixForType(PrefixType.PATIENT)).thenReturn(prefix);         System.out.println(prefix.getSequenceNo());          mockPatient = patientService.createPatient(mockPatient);          assertEquals("Aravinth", mockPatient.getFirstName());           verify(patientDao, times(1)).createPatient(mockPatient);     } } </code></pre>  <p>Verify times works fine.I got Nullpointer in assertEquals.</p>