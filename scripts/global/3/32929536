<p>while i realize that Symbol's cannot be automatically/silently converted to Strings (see "Symbol type conversions" on <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol" rel="nofollow">here</a>):</p>  <pre><code>s = Symbol('s'); typeof s;        // -&gt; 'symbol' s;               // -&gt; 'Symbol (s)' s.toString();    // -&gt; 'Symbol (s)' using Symbol.prototype.toString() String(s);       // -&gt; 'Symbol (s)' using safe String(s) conversion s +'';           // throws 'TypeError: Cannot convert a Symbol value to a string' as expected </code></pre>  <p>i am surprised/confused that trying to obtain a String representation of a <strong><em>Symbol's prototype</em></strong> throws an exception, whether using auto String conversion, explicitly calling <code>.toString</code> or using <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String#String_conversion" rel="nofollow">"safer" String(sym) conversion</a>:</p>  <pre><code>s = Symbol('s'); typeof s;                      // -&gt; 'symbol' p = Object.getPrototypeOf(s);  // -&gt; Symbol {} typeof p;                      // -&gt; 'object' p+'';          // -&gt; TypeError: Method Symbol.prototype.valueOf called on incompatible receiver [object Object] p.toString();  // -&gt; TypeError: Method Symbol.prototype.toString called on incompatible receiver [object Object] String(p);     // -&gt; TypeError: Method Symbol.prototype.toString called on incompatible receiver [object Object] </code></pre>  <p>since a Symbol's prototype seems to just be an Object, why would it not be possible to create a String representation of it?</p>  <p>i found something similar in this <a href="https://github.com/nodejs/node/pull/2012#discussion_r33101793" rel="nofollow">post</a> which references what seems to be the <a href="https://people.mozilla.org/%7Ejorendorff/es6-draft.html#sec-symbol.prototype.tostring" rel="nofollow">ES6/2015 spec regarding converting Symbols to Strings</a>, but again i am confused as to why this would prevent a Symbol's prototype, which seems to be Object, from being converted to a String.</p>  <p>also, Node.js's <a href="https://nodejs.org/api/util.html#util_util_inspect_object_options" rel="nofollow"><code>util.inspect</code></a> will output a String representation of a Symbol's prototype, though i have yet to figure out how/why from perusing the <a href="https://github.com/nodejs/node/blob/master/lib/util.js" rel="nofollow">source</a>.</p>  <p>finally, it just seems like i am missing something basic about a Symbol's prototype: while it seems like it is a normal Object, maybe it is not?</p>  <p>thanks.</p>