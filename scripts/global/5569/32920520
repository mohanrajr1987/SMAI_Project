<p>I have a list of items, coming from one object which are of type A, and a library that operates on object of type B.</p>  <p>I would like to convert A to B, and later call B's function in a pythonic way. What I have come up with so far:</p>  <pre><code>def convert_A_to_B(A):     return B(A.something, A.something_else)  def doStuff(a_list):     converted_to_b = list(map(convert_A_to_B, a_list)     return list(map(B.function, converted_to_b)) </code></pre>  <p>I could create a lambda to combine these functions, but I feel like there should be an easier way. Something like:</p>  <pre><code>return list(map(combine(convert_A_to_B, B.function))) </code></pre>