<p>I'm trying to write a function I can apply to a string vector or list instead of writing a loop. My goal is to run a regression for different endogenous variables and save the resulting tables. Since experienced R users tell us we should learn the apply functions, I want to give it a try. Here is my attempt:</p>  <p><strong>Broken Example:</strong></p>  <pre><code>library(ExtremeBounds) Data &lt;- data.frame(var1=rbinom(30,1,0.2),var2=rbinom(30,1,0.2),var3=rnorm(30),var4=rnorm(30),var5=rnorm(30),var6=rnorm(30))  spec1 &lt;- list(y=c("var1"),freevars=("var3"),doubtvars=c("var4","var5")) spec2 &lt;- list(y=c("var2"),freevars=("var4"),doubtvars=c("var3","var5","var6")) specs &lt;- c("spec1","spec2")  myfunction &lt;- function(x){ eba &lt;- eba(data=Data, y=x$y,         free=x$freevars,         doubtful=x$doubtvars,         reg.fun=glm, k=1, vif=7, draws=50, se.fun = se.robust, weights = "lri", family = binomial(logit))  output &lt;- eba$bounds output &lt;- output[,-(3:7)] }  lapply(specs,myfunction) </code></pre>  <p>Which gives me an error that makes me guess that R does not understand when <code>x</code> should be <code>"spec1"</code> or <code>"spec2"</code>. Also, I don't quite understand what lapply would try to collect here. Could you provide me with some best practice/hints how to communicate such things to R?</p>  <p>error: <code>Error in x$y : $ operator is invalid for atomic vectors</code></p>  <p><strong>Working example:</strong></p>  <p>Here is a working example for <code>spec1</code> without using apply that shows what I'm trying to do. I want to loop this example through 7 specs but I'm trying to get away from loops. The output does not have to be saved as a csv, a list of all outputs or any other collection would be great!</p>  <pre><code>eba &lt;- eba(data=Data, y=spec1$y,         free=spec1$freevars,         doubtful=spec1$doubtvars,         reg.fun=glm, k=1, vif=7, draws=50, se.fun = se.robust, weights = "lri", family = binomial(logit)) output &lt;- eba$bounds output &lt;- output[,-(3:7)] write.csv(output, "./Results/eba_pmr.csv") </code></pre>