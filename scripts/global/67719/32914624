<p>I've created a pandas dataframe from a 205MB csv (approx 1.1 million rows by 15 columns). It holds a column called <code>starttime</code> that is dtype <code>object</code> (it's more precisely a string). The format is as follows: <code>7/1/2015 00:00:03</code>. </p>  <p>I would like to create two new dataframes from this pandas dataframe. One should contain all rows corresponding with weekend dates, the other should contain all rows corresponding with weekday dates. </p>  <p>Weekend dates are:</p>  <pre><code>weekends = ['7/4/2015', '7/5/2015', '7/11/2015', '7/12/2015',              '7/18/2015', '7/19/2015', '7/25/2015', '7,26/2015'] </code></pre>  <p>I attempted to convert the string to datetime (<code>pd.to_datetime</code>) hoping that would make the values easier to parse, but when I do it hangs for so long that I ended up restarting the kernel several times.</p>  <p>Then I decided to use <code>df["date"], df["time"] = zip(*df['starttime'].str.split(' ').tolist())</code> to create two new columns in the original dataframe (one for date, one for time). Next I figured I'd use a boolean test to 'flag' weekend records (according to the new <code>date</code> field) as <code>True</code> and all others <code>False</code> and create another column holding those values, then I'd be able to group by <code>True</code> and <code>False</code>.</p>  <p>For example, <code>test1 = bikes['date'] == '7/1/2015'</code> returns <code>True</code> for all 7/1/2015 values, but I can't figure out how to iterate over all items in <code>weekends</code> so that I get <code>True</code> for all weekend dates. I tried this and broke Python (hung again):  </p>  <pre><code>for i in weekends:     for k in df['date']:         test2 = df['date'] == i </code></pre>  <p>I'd appreciate any help (with both my logic and my code).</p>