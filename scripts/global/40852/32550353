<p>I'm writing a little GPS tracking app on a WP8.1 and I hit a bit of a wall. I'm able to create at task and do whatever I need with it but I cannot cancel it. As a reference I was using this <a href="http://stackoverflow.com/questions/13482895/proper-way-of-cancel-execution-of-a-method/13483003#13483003">answer</a> </p>  <p>This is the task constructor that I user(also tried with TaskFactory):</p>  <pre><code>public async void run() {     IProgress&lt;object&gt; progress = new Progress&lt;object&gt;(_ =&gt; track());      //Above is needed to be able to update the UI component           Task.Run(async () =&gt;     //Need to run async because the task is a GPS position call that has a delay      {          while (true)          {              await Task.Delay(1000);              progress.Report(null);          }      }, tokenSource.Token); } </code></pre>  <p>I created the tokenSource object in the main class section as a public variable to be able to access it through a button_click stop method(otherwise I have no ability to use tokenSource.Cancel())</p>  <p>When I use the tokenSource.Cancel() inside the constructor method all is ok. But when I try to use it via the Button_click like this :</p>  <pre><code>private void Button_Stop(object sender, RoutedEventArgs e) {     tokenSource.Cancel(); } </code></pre>  <p>Nothing happens. Anyone has any solutions ?</p>  <p><em>Does this mean that if u use <strong>async()</strong> every time it creates a new thread with a new token and with a button click methond I'm cancelling the original one from which the thread is already closed ? If so any ideas how to go around this ?</em></p>