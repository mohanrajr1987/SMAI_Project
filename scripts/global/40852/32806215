<p><strong>Edit</strong>: This turned out to be an F# bug which can be worked-around by using a custom option type instead of Fsharp's "Option".</p>  <p>In F#, I am trying to call a .net Task with Async.AwaitTask. The task is throwing an exception, and I can't seem to catch it with either try-catch or Async.Catch. And I know of no other way to catch exceptions. What is the solution? And what is the cause of the problem? Thanks for any explanation.</p>  <p>Here is some test code that shows my failure to catch the exception thrown by DownloadStringTaskAsync:</p>  <pre><code>open System open System.Net  [&lt;EntryPoint&gt;] let main argv =       let test =         async{         let! exc = Async.Catch( async{             try                 let w = new Net.WebClient();                 let! str = Async.AwaitTask (w.DownloadStringTaskAsync "") // throws ArgumentException                 return Some str             with              | _ -&gt;                  return None // not caught             }             )         match exc with         | Choice1Of2 r -&gt; return r         | Choice2Of2 ext -&gt; return None  // not caught         }      let res = Async.RunSynchronously(test)     let str = Console.ReadLine();     0 // return an integer exit code </code></pre>  <p>I need some way to catch the exception inside the "test" async function, preventing it to "bubble up".</p>  <p>I found <a href="http://stackoverflow.com/questions/25166363/async-await-not-catching-task-exception">this</a> related question, but I can't seem to adapt the answer (which deals with Task, not with Task&lt;'a>) to my needs.</p>  <p><strong>Edit</strong>: Here is a screenshot showing the problem: <a href="https://i.gyazo.com/883f546c00255b210e53cd095b876cb0.png" rel="nofollow">https://i.gyazo.com/883f546c00255b210e53cd095b876cb0.png</a></p>  <p>"ArgumentException was unhandled by user code."</p>  <p>(Visual Studio 2013, .NET 4.5.1, Fsharp 3.1, Fsharp.core.dll 4.3.1.0.)</p>  <p>Could it be that the code is correct but some Fsharp or Visual Studio setting is preventing the exception from being caught?</p>