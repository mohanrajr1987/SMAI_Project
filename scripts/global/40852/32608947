<p>I have this async method:</p>  <pre><code>public async Task&lt;RES&gt; PostAsync&lt;RES&gt;(string url, string content) where RES : new() {     using (var client = new HttpClient())     {         HttpResponseMessage message = await client.PostAsync(url, new StringContent(content, Encoding.UTF8, "application/json"));         var readAsStringAsync = await message.Content.ReadAsStringAsync();         return await readAsStringAsync.FromJsonAsync&lt;RES&gt;(mySerializerSettings);     } } </code></pre>  <p>Where <code>FromJsonAsync</code> is implemented as an extension method:</p>  <pre><code>public async static Task&lt;T&gt; FromJsonAsync&lt;T&gt;(this string data, JsonSerializerSettings settings) where T : new() {     return (T)(await JsonConvert.DeserializeObjectAsync&lt;T&gt;(data, settings)); } </code></pre>  <p>Now I want to add a regular synchronous <code>Post</code> method and I thought the implementation would be:</p>  <pre><code>public RES Post&lt;RES&gt;(string url, string content) where RES : new() {     return PostAsync&lt;RES&gt;(url, content).Result; } </code></pre>  <p>But this <strong>doesn't</strong> really work. I see that the request is sent via a Http sniffer and I get a response back, but I get stuck when debugging and can't continue.</p>  <p>BTW, this <strong>does</strong> work (with <code>Result</code> instead of <code>await</code>):</p>  <pre><code>public RES Post&lt;RES&gt;(string url, string content) where RES : new() {     using (var client = new HttpClient())     {         HttpResponseMessage message = client.PostAsync(url, new StringContent(content, Encoding.UTF8, "application/json")).Result;         var readAsStringAsync = message.Content.ReadAsStringAsync().Result;         return readAsStringAsync.FromJson&lt;RES&gt;(mySerializerSettings);     } } </code></pre>  <p>Where <code>FromJson</code> is implemented as an extension method:</p>  <pre><code>public static T FromJson&lt;T&gt;(this string data, JsonSerializerSettings settings) where T : new() {     return (T)JsonConvert.DeserializeObject&lt;T&gt;(data, settings); } </code></pre>  <p>The application is a web backend (WebApi).</p>  <p>What am I doing wrong? </p>