<p>I am getting my hands dirty with TPL.I stumbled upon a topic in TPL called TaskCompletionSource which is one of the ways to create a Task and it give you more control over the task by allowing developers in setting result,exception etc etc. Here is an example using task completion source</p>  <pre><code>   public static Task&lt;int&gt; RunAsyncFunction(Func&lt;int&gt; sampleFunction)     {         if (sampleFunction == null)             throw new NullReferenceException("Method cannot be null");          var tcs = new TaskCompletionSource&lt;int&gt;();          ThreadPool.QueueUserWorkItem(_ =&gt;         {             try             {                 int result = sampleFunction();                 tcs.SetResult(result);             }             catch (Exception ex)             {                 tcs.SetException(ex);             }         });          return tcs.Task;     } </code></pre>  <p>However this is not truly asynchronus programming.It is asynchronus programming using multithreading .How can I convert this example to get it run on a single thread rather than multiple threads ? or is there any other example I can follow?</p>