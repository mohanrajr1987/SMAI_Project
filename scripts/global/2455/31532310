<p>"Separating Interface from Implementation" is a well known-best practice in software engineering.</p>  <p>I am looking for an as complete as possible overview of how this 'concept' was introduced into computer science. I can't seem to find any pointer in the literature. Concretely, I want to know which language feature can be used to separate interface from implementation and when it was introduced in various languages.</p>  <p>e.g.,</p>  <ul> <li>C-header files with function declarations, and plain C files with the implementation.</li> <li>Java Interface (language construct)</li> <li>...</li> </ul>