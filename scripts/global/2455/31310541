<p>Consider the following source code:</p>  <pre><code>public abstract class SomeBaseClass {      public abstract void Foo(object a);  }  public class SomeClass&lt;T&gt; : SomeBaseClass {      public override void Foo(object a) {         Console.WriteLine("Foo() from SomeBaseClass");     }      public void Foo(T a) {         Console.WriteLine("Foo() from SomeClass");     }  } </code></pre>  <p>The following is not ambiguous at all since there are two overloads of <code>Foo</code>:</p>  <pre><code>public class Bar : SomeClass&lt;int&gt; { }  var bar = new Bar(); bar.Foo(null); bar.Foo(24); </code></pre>  <p>Does the C# language specification state what the expected behaviour is in the following example which somehow compiles?</p>  <pre><code>public class Baz : SomeClass&lt;object&gt; { }  var baz = new Baz(); baz.Foo(null); // "Foo() from SomeClass" </code></pre>