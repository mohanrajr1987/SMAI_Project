<p>The time complexity of algorithms can differ from programming language to programming language in which it is implemented, because of certain things not possible to be done in one language as opposed to the other. Turing-completeness also doesn't say anything about the time complexity possibilities of said languages.</p>  <p>My question is, what are the requirements for a programming language to be able to solve every algorithm in the best time complexity possible by any language? Would being Turing-complete and added with that a possibility to inspect/edit datastructures in constant time be enough?</p>