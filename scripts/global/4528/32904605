<p>I have a section in Web.config file. Example:</p>  <pre><code>         &lt;defaultPageOutputConfig&gt;            &lt;parameters&gt;              &lt;parameter methodologyFrom="06.01.2013" methodologyTo="01.01.2016" outputNumber="001" /&gt;              &lt;parameter methodologyFrom="06.01.2013" methodologyTo="01.01.2016" outputNumber="001" /&gt;              ...            &lt;/parameters&gt;          &lt;/defaultPageOutputConfig&gt; </code></pre>  <p>And I have following Classes: Element:</p>  <pre><code>public class DefaultPageOutputElement : ConfigurationElement {         const string MethodologyFromPropertyName = "methodologyFrom";         const string MethodologyToPropertyName = "methodologyTo";         const string OutputNumberPropertyName = "outputNumber";          public DefaultPageOutputElement()         {         }          public DefaultPageOutputElement(DateTime methodologyFrom, DateTime methodologyTo, string outputNumber)         {             UniqueId = Guid.NewGuid();             MethodologyFrom = methodologyFrom;             MethodologyTo = methodologyTo;             OutputNumber = outputNumber;         }          internal Guid UniqueId { get; set; }          [ConfigurationProperty(MethodologyFromPropertyName, IsKey = true, IsRequired = true)]         public DateTime MethodologyFrom         {             get { return (DateTime)this[MethodologyFromPropertyName]; }             set { this[MethodologyFromPropertyName] = value; }         }          [ConfigurationProperty(MethodologyToPropertyName, IsKey = true, IsRequired = true)]         public DateTime MethodologyTo         {             get { return (DateTime)this[MethodologyToPropertyName]; }             set { this[MethodologyToPropertyName] = value; }         }           [ConfigurationProperty(OutputNumberPropertyName, IsKey = true, IsRequired = true)]         public string OutputNumber         {             get { return (string) this[OutputNumberPropertyName]; }             set { this[OutputNumberPropertyName] = value; }         }     } </code></pre>  <p>Collection:</p>  <pre><code>    public class DefaultPageOutputCollection : ConfigurationElementCollection, IEnumerable&lt;DefaultPageOutputElement&gt;     {         const string ElementPropertyName = "parameter";         public DefaultPageOutputCollection()         {         }          #region base overidet methods          protected override ConfigurationElement CreateNewElement()         {             return new DefaultPageOutputElement();         }          protected override object GetElementKey(ConfigurationElement element)         {             return ((DefaultPageOutputElement)element).GetHashCode();         } ... } </code></pre>  <p>Config:</p>  <pre><code>public class DefaultPageOutputConfig : ConfigurationSection {     public const string ConfigSectionName = "defaultPageOutputConfig";      public DefaultPageOutputConfig()     {     }      [ConfigurationProperty("parameters", IsDefaultCollection = true)]     public DefaultPageOutputCollection Parameters     {         get         {             DefaultPageOutputCollection parameters = (DefaultPageOutputCollection)base["parameters"];             return parameters;         }     }  } </code></pre>  <p>If I have not unique parameters in config section Parameters in DefaultPAgeOutputConfig return me only one. But I need all parameters. In example two. What can I do, to to return all parameter strings.</p>