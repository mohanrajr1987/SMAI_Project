<p>Concise code is prettier. So, I would go for </p>  <pre><code>str_ = "Hello World    " print str_.strip().replace(" ", "-").lower() </code></pre>  <p>Compared to :</p>  <pre><code>str_ = "Hello World    " str_ = str_.strip() str_ = str_.replace(" ", "-") str_ = str_.lower() print str_ </code></pre>  <p>However, in cases where the function returns incompatible objects (<code>None</code> for example), this won't work.</p>  <p>Case in point :</p>  <pre><code>set1 = set([1, 2, 3]) set2 = set([1, 3, 5]) set3 = set() set3.update(set1) #returns None set3.update(set2) set3.update(set1.union(set2)) print len(set3) </code></pre>  <p>I was wondering if there is any way to chain commands like these too, maybe some parenthesis trick ?</p>