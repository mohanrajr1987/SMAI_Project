<p>I have 5 lists:</p>  <p>list 1: ['a', 21, $17], ['b', 19, $14], ['c', 17, $13], ['d', 16, $13] </p>  <p>list 2: ['e', 19, $14], ['f', 16, $12], ['g', 14, $12], ['h', 11, $06]</p>  <p>list 3: ['i', 13, $09], ['j', 11, $07], ['k', 10, $06], ['l', 07, $06]</p>  <p>list 4: ['m', 16, $06], ['n', 13, $05], ['o', 10, $05], ['p', 06, $05]</p>  <p>list 5: ['q', 21, $13], ['r', 19, $14], ['s', 17, $12], ['t', 15, $11]</p>  <p>My task is to pick 1 array from each list for a total of 5 arrays. I need to pick the set of arrays with the highest value (sum of all :value) where the price is $50 or under (sum of all :price).</p>  <p>How do I approach this problem without having to iterate through every element?</p>  <p>I know I can reduce the list to: </p>  <p>list 1: ['a', 21, $17], ['b', 19, $14], ['c', 17, $13]</p>  <p>list 2: ['e', 19, $14], ['f', 16, $12], ['h', 11, $06]</p>  <p>list 3: ['i', 13, $09], ['j', 11, $07], ['k', 10, $06]</p>  <p>list 4: ['m', 16, $06], ['n', 13, $05]</p>  <p>list 5: ['q', 21, $13], ['s', 17, $12], ['t', 15, $11]</p>  <p>where the array with a lower value but higher or equal price is eliminated when compared to its left neighbor.</p>  <p>However this is still too slow.</p>