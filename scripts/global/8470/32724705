<p>I have this code:</p>  <pre><code> public static void main(String[] args) {     NavigableSet&lt;String&gt; myset = new TreeSet&lt;String&gt;();     myset.add("a");     myset.add("aa");     myset.add("b");     myset.add("bb");     myset.add("c");     myset.add("cc");      System.out.println(myset.ceiling("a"));     System.out.println(myset.floor("aaa"));     System.out.println(myset.higher("a"));     System.out.println(myset.lower("bb")); } </code></pre>  <p>I thought that it would print : <code>a,b,null,c</code>. Because for example <code>higher("a")</code> should give <code>null</code>, because a is the root of this tree, but instead it gives <code>aa</code>. The definition of <code>higher</code> is <code>Returns the least element in this set strictly greater than the given element, or null if there is no such element.</code> So strictly greater means greater than <code>a</code>, but since <code>a</code> is the root of the three , there is nothing greater than it. <code>aa</code> is after <code>a</code> in the alphabetical ordering.</p>  <p>Actually it returns the exact oposite of what I want. Why is that. This seems quite illogical to me. Any ideas ?</p>