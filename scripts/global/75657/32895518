<p>I'm building a relatively straight-foward <code>comment-list</code> component. I want to pass in the commentable model (say a <code>Post</code>) and have the component take care of creating, editing, deleting comments. Right now I pass around all the various actions and it's been extremely brittle. </p>  <p>How do I create a true instance of an Ember Data model in a component integration test?</p>  <p>My immediate thought was to import the model then <code>.create({})</code> it but that errors with <code>use this.store.createRecord() instead</code></p>  <pre><code>/* jshint expr:true */ import { assert } from 'chai'; import { describeComponent, it } from 'ember-mocha'; import hbs from 'htmlbars-inline-precompile'; import Post from 'ownersup-client/post/model';  describeComponent( 'comment-list', 'Integration: CommentListComponent', {     integration: true   },   function() {     it('renders all of the comments', function() {       const model = Post.create({ title: 'title' });       model.get('comments').createRecord({ body: 'One Comment' })        this.render(hbs`{{comment-list model=model}}`);        assert.lengthOf(this.$('.comment-list-item'), 1);     });   } ); </code></pre>  <p>Anyone have any thoughts?</p>