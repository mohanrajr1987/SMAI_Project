<p>I have an Ember CLI project, and one of my routes starts like:</p>  <pre><code>import Ember from 'ember'; import Activity from '../models/activity';  var ACCESS_KEY = gOptions.access_key;  export default Ember.Route.extend({ ... </code></pre>  <p>I have a file <code>vendor/local_config.js</code> that contains <strong>machine-specific</strong> information, and is in the <code>.gitignore</code> to be omitted from the repository. It contains:</p>  <pre><code>var gOptions = {     access_key: 'abcde' }; </code></pre>  <p>In my <code>ember-cli-build.js</code> file, I have imported this file like so:</p>  <pre><code>app.import('vendor/local_config.js'); </code></pre>  <p><em>Running</em> this application, everything works perfectly. The <code>gOptions</code> is universally available.</p>  <p>However, <strong>JSHint complains</strong>:</p>  <pre><code>routes/activities.js: line 4, col 25, 'gOptions' is not defined. </code></pre>  <p>I'm very new to Ember - what is the preferred method for updating my route to ensure that the vendor-provided classes are properly resolved/detected when JSHint is examining my routes/models?</p>  <p><strong>Or:</strong> Is there a superior/Ember-like way of providing locally-defined environment variables, that should <em>not</em> be shared to a team?</p>