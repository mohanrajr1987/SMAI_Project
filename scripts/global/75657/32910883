<p>I have a component:</p>  <pre><code>App.MyChildComponent = Ember.Component.extend({   addTooltips: Ember.on('didInsertElement', function() {     var me = this;     var metrics = this.get('option.metrics');     metrics.forEach(function(e, i) {        me.get('option.metrics').objectAt(i - 1).set('tooltipDisabled', true);     });   }); }) </code></pre>  <p>Which is generated inside an each loop by a different component:</p>  <pre><code>App.MyParentComponent = Ember.Component.extend({   ... }) </code></pre>  <p>And the template of MyParentComponent is:</p>  <pre><code>{{#each option in options}}     {{my-child option=option}} {{/each}} </code></pre>  <p>All this, is called by a view with a template like this:</p>  <pre><code>{{my-parent options=options}} </code></pre>  <p>options is defined in the model of the view with:</p>  <pre><code>App.MyViewModel = Ember.Object.extend({     options: Ember.A([         { metrics: Ember.A([             { name: 'a' },             { name: 'b' },             { name: 'c' }         ]) },         { metrics: Ember.A([             { name: 'd' },             { name: 'e' },             { name: 'f' }         ]) },         { metrics: Ember.A([             { name: 'g' },             { name: 'h' },             { name: 'i' }         ]) }     ]), }); </code></pre>  <p>When I run <code>me.get('option.metrics').objectAt(i - 1).set('tooltipDisabled', true);</code> I get:</p>  <pre><code>Uncaught TypeError: me.get(...).objectAt(...).set is not a function </code></pre>  <p>What am I doing wrong?</p>