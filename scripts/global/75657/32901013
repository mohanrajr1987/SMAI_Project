<p>I am trying to create several inputs that update my Ember Data model immediately, without a submit action.  E.g.</p>  <pre><code>Person First Name  [Placeholder: Enter first name ] Last Name   [Placeholder: Enter last name  ] City        [Placeholder: Enter city       ] </code></pre>  <p>I’ve approached this by creating a wrapper component around an Ember TextField subclass component, and have gotten it to work, kind of, but with two major problems:</p>  <ol> <li>Placeholders don't work as I tried to implement them (see below) — seems I could do this a lot more easily using the TextSupport mixin, but I don't know how to use it.</li> <li>I don't like the way I am sending change actions up to the route, which is basically like this:</li> </ol>  <p>Within a top-level component <code>{{person-view action="modifyPersonInternals"}}</code> I have my wrapper components as follows:</p>  <pre><code>{{editable-property property="firstName" action="updateFirstName"}} {{editable-property property="lastName" action="updateLastName"}} {{editable-property property="city" action="updateCity"}} </code></pre>  <p>When the user edits the <code>firstName</code>, the TextField component calls <code>updateFirstName</code> on the <code>editable-property</code> wrapper component with a parameter (the new value); the wrapper component in turn calls <code>modifyPersonInternals</code> on the route with two parameters (the property to modify, and the new value).  This works but seems clunky/hacky and can't be the right approach, can it?</p>  <p>Also, here's my unsuccessful attempt to implement a placeholder in <code>editable-property.js</code>,</p>  <pre><code>hasEmptyProperty: Ember.computed(function() {     return ((this.get('property') === "") || (this.get('property') === null)); }) </code></pre>  <p>and in editable-property.hbs:</p>  <pre><code>{{#if hasEmptyProperty}} &lt;div class="placeholder" {{action "editProperty"}}&gt;{{placeholder}}&lt;/div&gt; {{else}} &lt;div {{action "editProperty"}}&gt;{{bufferedProperty}}&lt;/div&gt; {{/if}} </code></pre>  <p>I get an error that <code>hasEmptyProperty</code> is not defined.</p>