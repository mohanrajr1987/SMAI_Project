<p>I'm testing out my In App Purchases in sandbox mode and I keep getting the message "This in-app purchaes has already been bought" when I try to purchase it, wherein the product is supposed to be consumable that can be bought unlimited times. I tried kiling my app and restarting it, but it continues to give me this message. Is this an Xcode Objective C bug, or is this an iOS bug? I'd be most grateful for any answers or guidance in resolving this matter, thanks in advance.</p>  <p>Update: Code for SKPayment</p>  <pre><code>- (void)paymentQueue:(SKPaymentQueue *)queue updatedTransactions:(NSArray *)transactions{ for(SKPaymentTransaction *transaction in transactions){     switch(transaction.transactionState){         case SKPaymentTransactionStatePurchasing: NSLog(@"Transaction state -&gt; Purchasing");             //called when the user is in the process of purchasing, do not add any of your own code here.             break;         case SKPaymentTransactionStatePurchased:             //this is called when the user has successfully purchased the package (Cha-Ching!)             [self doRemoveAds:validProduct];             //you can add your code for what you want to happen when the user buys the purchase here, for this tutorial we use removing ads             [[SKPaymentQueue defaultQueue] finishTransaction:transaction];             NSLog(@"Transaction state -&gt; Purchased");             break;         case SKPaymentTransactionStateRestored:             NSLog(@"Transaction state -&gt; Restored");             [self doRemoveAds:validProduct];              //add the same code as you did from SKPaymentTransactionStatePurchased here             break;         case SKPaymentTransactionStateFailed:             //called when the transaction does not finish             if(transaction.error.code == SKErrorPaymentCancelled){                 NSLog(@"Transaction state -&gt; Cancelled");                 //the user cancelled the payment ;             }             [[SKPaymentQueue defaultQueue] finishTransaction:transaction];              break;     } </code></pre>