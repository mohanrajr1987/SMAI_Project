<p>In the OS X app (10.9+) I'm writing, I'd like to determine the <strong>original purchase date</strong> of a <strong>non-consumable in-app purchase</strong>.  This sounds straight forward, but there are two relevant fields, and Apple's docs don't seem to clearly state how to combine them.</p>  <p>Apple's Receipt Validation Programming Guide <a href="https://developer.apple.com/library/mac/releasenotes/General/ValidateAppStoreReceipt/Chapters/ReceiptFields.html" rel="nofollow">describes</a> two relevant receipt fields:</p>  <blockquote>   <p><em>Purchase Date</em> ... The date and time that the item was purchased ...   For a transaction that restores a previous transaction, the purchase date is the date of the restoration. Use Original Purchase Date to get the date of the original transaction.</p>      <p><em>Original Purchase Date</em> ...   For a transaction that restores a previous transaction, the date of the original transaction.</p> </blockquote>  <p>My trouble here is with <em>"for a transaction that restores a previous transaction"</em>.  This implies that in order to combine the two fields, I need to know if the transaction is a purchase or a restore.</p>  <p>This is easy within my <code>&lt;SKPaymentTransactionObserver&gt; paymentQueue:updatedTransactions:</code> method, because there, I know if the transaction is <code>SKPaymentTransactionStatePurchased</code> or <code>SKPaymentTransactionStateRestored</code>.</p>  <p>But... <strong>when the app starts</strong>, it needs to know whether to enable features, based on the previous transactions.  I think this should be done by examining <strong>only the receipt</strong> (I seem to remember a WWDC presentation that talked about the receipt being the "single source of truth").</p>  <p>In the transaction-handling code, I could stuff information about the customer's in-app purchases into (eg) a plist for later use, but that seems like adding (yet) more complexity.</p>  <p>So, <strong>if I examine only the receipt</strong> (so I don't know if the most recent transaction was a purchase or restore), <strong>which field contains the original purchase date</strong>?</p>  <p>I'm using <a href="http://receigen.etiemble.com" rel="nofollow">Receigen</a> to validate the receipt.  This provides the macros <code>&lt;prefix&gt;INAPP_ATTRIBUTETYPE_PURCHASEDATE</code> and <code>&lt;prefix&gt;INAPP_ATTRIBUTETYPE_ORIGINALPURCHASEDATE</code>, and I believe these provide C strings.</p>  <p>I can think of a few methods (pseudo-code):</p>  <pre><code>// method one // assume that Original Purchase Date is always present return ORIGINALPURCHASEDATE  // method two // when present, Original Purchase Date overrides Purchase Date if (ORIGINALPURCHASEDATE == "") {   return PURCHASEDATE } else {   return ORIGINALPURCHASEDATE }  // method three // consider all possible combinations // of the two values being present / not present if (PURCHASEDATE != "" &amp;&amp; ORIGINALPURCHASEDATE == "") {     // have only PURCHASEDATE     return PURCHASEDATE } else if (PURCHASEDATE == "" &amp;&amp; ORIGINALPURCHASEDATE != "") {     // have only ORIGINALPURCHASEDATE     return ORIGINALPURCHASEDATE } else if (PURCHASEDATE != "" &amp;&amp; ORIGINALPURCHASEDATE != "") {     // have both: use the earlier value     return min(PURCHASEDATE, ORIGINALPURCHASEDATE) } else {     // have neither     return UNKNOWN } </code></pre>  <p>... but this kind of guesswork within code related to the customer's payment worries me :(</p>  <p>I will try some experiments in the sandbox to try and verify this, but I've seen comments that the sandbox behaviour doesn't always match the production environment.</p>  <p>Can anyone confirm the right thing to do here?</p>  <p><strong>Update</strong></p>  <p>To get more information, I've thrown together a tool which dumps the contents of all <code>_MASReceipt/receipt</code> files in <code>/Applications</code>, using some classes from <a href="https://github.com/steprescott/SCPStoreKitManager" rel="nofollow">SCPStoreKitManager</a> (which has some lovely clear code).  On my machine, the output includes:</p>  <pre><code>/Applications/Dash-2.2.6.app/Contents/_MASReceipt/receipt {     bundleIdentifier = "com.kapeli.dash";     bundleIdentifierData = &lt;0c0f636f 6d2e6b61 70656c69 2e646173 68&gt;;     hash = &lt;acec4273 8a9bf57a 1d3ed8ab f7a4c696 497f2ae1&gt;;     inAppPurchases =     (                 {             cancellationDate = "";             originalPurchaseDate = "2012-08-13 00:07:48 +0000";             originalTransactionIdentifier = 220000033036694;             productIdentifier = DPinky;             purchaseDate = "2012-08-13 00:07:48 +0000";             quantity = 1;             subscriptionExpiryDate = "";             transactionIdentifier = 220000033036694;             webItemId = "";         }     );     opaqueValue = &lt;f50b37c7 ac1e9a02 ddb579ca 5c5dad62&gt;;     originalVersion = "1.6.6";     version = "2.2.6"; } </code></pre>  <p>In this case, both <code>purchaseDate</code> and <code>originalPurchaseDate</code> are present, and have the same value.</p>  <p>That's the only example of an OS X receipt with an in-app purchase that I have.</p>  <p>Can anyone provide more examples?  I'd be particularly interested to see receipts where those values differ, or aren't present.</p>  <p>I've uploaded the binary and source for this tool: <a href="http://www.moderatelyawesome.com/DumpMASReceipt/DumpMASReceipt-v1.zip" rel="nofollow">DumpMASReceipt-v1.zip</a>.</p>