<p>I couldn't find a way to test <strong>InApp Subscription</strong> with the test product ID by google i.e. <code>private final String productID = "android.test.purchased"; // Test Product ID by Google</code>  </p>  <p>In the <a href="http://developer.android.com/google/play/billing/billing_testing.html" rel="nofollow">docs</a> it is not written anywhere that InAPP subscription couldn't be tested with test product nor it is mentioned anywhere,how to test InApp subscription.</p>  <p>I have implemented my code following <a href="http://developer.android.com/google/play/billing/billing_integrate.html#billing-download" rel="nofollow">docs</a>(InAppV3).</p>  <p>The doc says:</p>  <p><em>Implementing Subscriptions: Launching a purchase flow for a subscription is similar to launching the purchase flow for a product, with the exception that the product type must be set to "subs". The purchase result is delivered to your Activity's onActivityResult method, exactly as in the case of in-app products.</em></p>  <p>and I have also implemented that properly.</p>  <p>My app is working if I replace <strong>"inapp"</strong> with <strong>"subs"</strong>,i.e. it is working perfectly for products and not for subscriptions.</p>  <p>When I change <strong>"inapp"</strong> to <strong>"subs"</strong> then the purchase is returning:</p>  <pre><code>09-24 14:01:12.943: I/(16929): isBillingSupported() - success : return 0 09-24 14:01:12.943: D/Finsky(2598): [281] InAppBillingUtils.getPreferredAccount: com.kgandroid.inappsubscriptiondemo: Account from first account - [MOn42QuZgF98vxJi0p3wAN3rfzQ] 09-24 14:01:12.943: I/(16929): getPurchases() - success return Bundle 09-24 14:01:12.943: I/(16929): getPurchases() - "RESPONSE_CODE" return 0 09-24 14:01:12.943: I/(16929): getPurchases() - "INAPP_PURCHASE_ITEM_LIST" return [] 09-24 14:01:12.943: I/(16929): getPurchases() - "INAPP_PURCHASE_DATA_LIST" return [] 09-24 14:01:12.943: I/(16929): getPurchases() - "INAPP_DATA_SIGNATURE" return null 09-24 14:01:12.943: I/(16929): getPurchases() - "INAPP_CONTINUATION_TOKEN" return null </code></pre>  <p>As you can see no details for <code>android.test.purchased</code> is returning.The test inapp purchase dialog is also <strong>not opening</strong>.</p>  <p>The relevant purchase <strong>code</strong>(Though it is not related to the problem I guess):</p>  <pre><code>void purchase() {     if (!blnBind) return;     if (mService == null) return;      ArrayList&lt;String&gt; skuList = new ArrayList&lt;String&gt;();     skuList.add(productID);     Bundle querySkus = new Bundle();     querySkus.putStringArrayList("ITEM_ID_LIST", skuList);      Bundle skuDetails;     try {         skuDetails = mService.getSkuDetails(3, getPackageName(), "subs", querySkus);         System.out.println(skuDetails);         Toast.makeText(context, "getSkuDetails() - success return Bundle", Toast.LENGTH_SHORT).show();         Log.i(tag, "getSkuDetails() - success return Bundle");     } catch (RemoteException e) {         e.printStackTrace();          Toast.makeText(context, "getSkuDetails() - fail!", Toast.LENGTH_SHORT).show();         Log.w(tag, "getSkuDetails() - fail!");         return;     }      int response = skuDetails.getInt("RESPONSE_CODE");     Toast.makeText(context, "getSkuDetails() - \"RESPONSE_CODE\" return " + String.valueOf(response), Toast.LENGTH_SHORT).show();     Log.i(tag, "getSkuDetails() - \"RESPONSE_CODE\" return " + String.valueOf(response));      if (response != 0) return;      ArrayList&lt;String&gt; responseList = skuDetails.getStringArrayList("DETAILS_LIST");     Log.i(tag, "getSkuDetails() - \"DETAILS_LIST\" return " + responseList.toString());      if (responseList.size() == 0) return;      for (String thisResponse : responseList) {         try {             JSONObject object = new JSONObject(thisResponse);              String sku = object.getString("productId");             String title = object.getString("title");             String price = object.getString("price");              Log.i(tag, "getSkuDetails() - \"DETAILS_LIST\":\"productId\" return " + sku);             Log.i(tag, "getSkuDetails() - \"DETAILS_LIST\":\"title\" return " + title);             Log.i(tag, "getSkuDetails() - \"DETAILS_LIST\":\"price\" return " + price);              if (!sku.equals(productID)) continue;              Bundle buyIntentBundle = mService.getBuyIntent(3, getPackageName(), sku, "subs", "bGoa+V7g/yqDXvKRqq+JTFn4uQZbPiQJo4pf9RzJ");              Toast.makeText(context, "getBuyIntent() - success return Bundle", Toast.LENGTH_SHORT).show();             Log.i(tag, "getBuyIntent() - success return Bundle");              response = buyIntentBundle.getInt("RESPONSE_CODE");             //Toast.makeText(context, "getBuyIntent() - \"RESPONSE_CODE\" return " + String.valueOf(response), Toast.LENGTH_SHORT).show();             Log.i(tag, "getBuyIntent() - \"RESPONSE_CODE\" return " + String.valueOf(response));              if (response != 0) continue;              PendingIntent pendingIntent = buyIntentBundle.getParcelable("BUY_INTENT");             startIntentSenderForResult(pendingIntent.getIntentSender(), 1001, new Intent(), 0, 0, 0);         } catch (JSONException e) {             e.printStackTrace();         } catch (RemoteException e) {             e.printStackTrace();              //Toast.makeText(context, "getSkuDetails() - fail!", Toast.LENGTH_SHORT).show();             Log.w(tag, "getBuyIntent() - fail!");         } catch (SendIntentException e) {             e.printStackTrace();         }     }  } </code></pre>  <p><strong>Does subscription supports test purchases?? If not,how to test subscription?? If yes,why google is returning null??</strong></p>  <p>Any related docs or links will be also helpful.</p>