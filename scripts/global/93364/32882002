<p>If possible i would like some help a code.</p>  <p>In the Netherlands we use a BSN-number as personal identification. Which is based on a so called 11-proef validation. However, the system is allowed to add foreign Identifications as well.</p>  <p>It should validate the next examples:  BE12345678910 (belgian has 11 numbers but is not validated in same way) so should always return true. NL123456789 (has the correct format, and should be validated with the code. 123456789 (also correct format, so should be validated with same code)</p>  <p>Below the code: The one that only validates the 123456789:</p>  <pre><code>Public Function ValidateBSN(bsnNr As String, ByRef errResult As Integer, Optional MaxLength As Integer = 9) As Boolean          If String.IsNullOrEmpty(bsnNr) Then             Return True         End If          Dim Length = bsnNr.Length          If bsnNr.StartsWith("NL") Or Length = 9 Then              Dim BSN As String = bsnNr.Replace("NL", "")              Length = BSN.Length              If MaxLength = Length Then                  Try                     Dim _BSN As Int64 = Convert.ToInt64(BSN)                     Return True                 Catch ex As Exception                     Return False                 End Try              Else                 Return False             End If          Else             errResult = -1             Dim param(0) As ErrorParam             param(0) = New ErrorParam("BSN onjuist", "Voer een geldige BSN in.&lt;/br&gt; Huidige waarde :&lt;B&gt; " + bsnNr.ToString() + "&lt;/b&gt;")             RaiseError("BSN onjuist", param)             Return True         End If      End Function </code></pre>  <p>the 11 proef:</p>  <pre><code>Public Function CheckBSN(bsnNr As String) As Boolean          'In our case BSN may be empty...         If String.IsNullOrEmpty(bsnNr) Then             Return True         End If          ' A BSN consists of 9 characters ...         If cleanBsnNr.Length &lt;&gt; 9 Then             Return False         End If          ' ... all being numeric and not resulting in a 0 when converted to a number ...         Dim l As Long         If Not Long.TryParse(cleanBsnNr, l) Then             Return False         ElseIf l = 0 Then             Return False         End If          ' ... the number must be validatable to the so-called 11-proof ...         Dim total As Long = 0         For i As Integer = 1 To 9             ' 11-proof voor BSN's: (9*A + 8*B + 7*C + 6*D + 5*E + 4*F + 3*G + 2*H + (-1*I)) % 11 == 0             Dim number As Integer = Convert.ToInt32(cleanBsnNr(i - 1).ToString())             Dim multiplier As Integer = 10 - i             If i = 9 Then                 multiplier = -1 * multiplier             End If              total += number * multiplier         Next          ' ... not result in a 0 when dividing by 11 ...         If total = 0 Then             Return False         End If          ' ... and not have a modulo when dividing by 11.         Return total Mod 11 = 0      End Function </code></pre>  <p>I added this code just above the "in our case BSN may be empty" in the 11-proef.</p>  <pre><code>Dim cleanBsnNr As String = Mid(bsnNr, 3, 9) </code></pre>  <p>It does validate the NL123456789, but if active, validating 123456789 doesn't work anymore.</p>  <p>The reason for entering countrycode is so we can quickly recognize which country the personal identity number is from.</p>