<p>I'm doing a MVC 4 fundamentals course online.</p>  <p>I'm using visual studio 2013 community and the teacher uses visual studio 2012.</p>  <p>so like the course teacher, I've added a project which represents the class entities (department, employee and IDepartmentDataSource), and an ASP.Net MVC 4 Web Application project.</p>  <p><strong>IDepartmentDataSource.cs:</strong></p>  <pre><code> public interface IDepartmentDataSource     {         IQueryable&lt;Employee&gt; Employees { get; }         IQueryable&lt;Department&gt; Departments { get; }     } </code></pre>  <p>In the MVC web project I added a class DepartmentDB.cs derived from dbcontext and  IDepartmentDataSource: </p>  <pre><code>public class DepartmentDB : DbContext, IDepartmentDataSource     {         public DbSet&lt;Employee&gt; Employees { get; set; }         public DbSet&lt;Department&gt; Departments { get; set; }          IQueryable&lt;Employee&gt; IDepartmentDataSource.Employees         {             get { return Employees; }         }          IQueryable&lt;Department&gt; IDepartmentDataSource.Departments         {             get { return Departments; }         }     } </code></pre>  <p>Then I ran "enable-migrations" command through the package manager console, and in the Configuration.cs it created for me made some changes:</p>  <pre><code> internal sealed class Configuration : DbMigrationsConfiguration&lt;eManager.Web.Infrastracture.DepartmentDB&gt;     {         public Configuration()         {             AutomaticMigrationsEnabled = true;         }          protected override void Seed(eManager.Web.Infrastracture.DepartmentDB context)         {             context.Departments.AddOrUpdate(d =&gt; d.Name,                 new Department() { Name = "Engineering" },                 new Department() { Name = "Sales" },                 new Department() { Name = "Shipping" },                 new Department() { Name = "Human Resources" }                 );          }     } </code></pre>  <p>Then I ran the "update-database" command through package manager console, and it should created a mdf file in the App_Data folder, but I can't seem to find it, even after showing all files and refreshing.</p>  <p>This is my web.config relevant sections:</p>  <pre><code>    &lt;section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" /&gt;   &lt;/configSections&gt;   &lt;connectionStrings&gt;     &lt;add name="DefaultConnection" connectionString="Data Source=(LocalDb)\v11.0;Initial Catalog=aspnet-eManager.Web-20150930154129;Integrated Security=SSPI;AttachDBFilename=|DataDirectory|\aspnet-eManager.Web-20150930154129.mdf" providerName="System.Data.SqlClient" /&gt;   &lt;/connectionStrings&gt; </code></pre>  <p><strong>......</strong></p>  <pre><code>  &lt;entityFramework&gt;     &lt;defaultConnectionFactory type="System.Data.Entity.Infrastructure.SqlConnectionFactory, EntityFramework" /&gt;   &lt;/entityFramework&gt; </code></pre>  <p>I checked to see that localDB is installed, but saw lots of sql stuff there from previous installations:</p>  <p><a href="http://i.stack.imgur.com/lZgij.jpg" rel="nofollow"><img src="http://i.stack.imgur.com/lZgij.jpg" alt="enter image description here"></a></p>  <p>I just want that file to appear so I could continue with the course..</p>