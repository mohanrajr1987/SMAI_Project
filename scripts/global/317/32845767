<p>I am blocked on indexing documents into ElasticSearch. I am trying to index (only) ~3.7M docs into an ES index, &amp; after indexing ~3.4M docs (take around 3GB disk space), the indexing rate has come down to approximately 10 docs/min, which is very worrying.</p>  <p>The index (mistakenly) has a single shard only, which I think could be causing a bottleneck somewhere.</p>  <p>Elasticsearch version: 1.7.1</p>  <p>Node config:</p>  <blockquote>   <p>m3.large (7.5 GB RAM, 32 GB SSD storage)   <br/> ES_Heap_size: 1 GB (this is what I see on KOPF, which also shows Heap usage: ~400MB out of ~1008MB)   <br/> 50GB EBS volume attached with each node</p> </blockquote>  <p>We are using TransportClient for interacting with ES. The BulkProcessor has been configured for a bulk size of 5 MB, flush interval of 2 min(to avoid sending data&lt;5 MB, we are bulk indexing) &amp; 6 concurrent requests. There can be ~10 bulk requests in parallel to ES.</p>  <p>After seeing the indexing rate slowed down, I did the following:</p>  <blockquote>   <p><br/> > Changed the cluster setting to threadpool.bulk.size of 2 &amp; threadpool.bulk.queue_size: 80.    <br/> > Turned off index refreshes for my index.    <br/> > Set number_of_replicas to 0 (earlier it was 1).   <br/> > indices.store.throttle.type has also been set to "none" to avoid indexing throttling while segment merges.</p> </blockquote>  <p>None of the above helped.</p>  <p>The KOPF dashboard shows around &lt;14% CPU usage.</p>  <p>Please help. Thanks! </p>