<p>I want in this part of my code, to cut out any non alphabetical symbol in the words I get from a read file.</p>  <p>I get that there is probably an empty string being tested on, that the error is happening, </p>  <p>but I can't figure out why after numerous different codes I tried.</p>  <p>Here's what I have now for it:</p>  <pre><code>for i in given_file:      cut_it_out = True      while cut_it_out:         if len(i) == 0:             cut_it_out = False         else:             while (len(i) != 0) and cut_it_out:                 if i.lower()[0].isalpha() and i.lower()[len(i) - 1].isalpha():                     cut_it_out = False                  if (not i.lower()[len(i) - 1].isalpha()):                     i = i[:len(i) - 2]                 if (not i.lower()[0].isalpha()):                     i = i[1:] </code></pre>  <p>Can anyone help me figure this out? thanks.</p>  <p>Thanks for the interesting answers :), I want it to be even more precise, but there is an endless loop problem on I can't seem to get rid of.</p>  <p>Can anyone help me figure it out?</p>  <pre><code>all_words = {} # New empty dictionary for i in given_file:     if "--" in i:         split_point = i.index("--")         part_1 = i[:split_point]         part_2 = i[split_point + 2:]         combined_parts = [part_1, part_2]          given_file.insert(given_file.index(i)+2, str(part_1))         given_file.insert(given_file.index(part_1)+1, str(part_2))         #given_file.extend(combined_parts)         given_file.remove(i)         continue       elif len(i) &gt; 0:         if i.find('0') == -1 and i.find('1') == -1 and i.find('2') == -1 and i.find('3') == -1 and i.find('4') == -1\             and i.find('5') == -1 and i.find('6') == -1 and i.find('7') == -1 and i.find('8') == -1 and i.find('9') == -1:             while not i[:1].isalpha():                 i = i[1:]              while not i[-1:].isalpha():                 i = i[:-1]              if i.lower() not in all_words:                 all_words[i.lower()] = 1              elif i.lower() in all_words:                 all_words[i.lower()] += 1 </code></pre>