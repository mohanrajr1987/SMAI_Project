<p>In my case everything is working fine accept <strong>IsBusy</strong> property, while getting data from the web service in VM (View Model) i am explicitly update the IsBusy = true to show the progress-bar on UI but it is NOT working. And propertychanged is always null. So progress-bar Visibility always Visible which is bind with IsBusy property. please help what I am missing here.</p>  <p>Here is my code of XAML:                </p>  <pre><code>    &lt;local:StockVm x:Key="VM"/&gt;      &lt;CollectionViewSource x:Key="CVS" Source="{Binding RequestedItems, Source={StaticResource VM}}"                           IsSourceGrouped="True"                           ItemsPath="StockItems"/&gt;        &lt;/Page.Resources&gt; </code></pre>  <p>Page Design XAML code:</p>  <pre><code> &lt;Grid&gt;     &lt;Grid.RowDefinitions&gt;         &lt;RowDefinition Height="Auto"/&gt;         &lt;RowDefinition Height="*"/&gt;     &lt;/Grid.RowDefinitions&gt;      &lt;TextBlock Grid.Row="0"  Visibility="{Binding Path=IsBusy, Converter={StaticResource boolVis1}, ConverterParameter=true}"&gt;Loading...&lt;/TextBlock&gt;     &lt;ProgressBar x:Name="LoadingBar" Visibility="{Binding Path=IsBusy, Converter={StaticResource boolVis1}, ConverterParameter=true}" IsIndeterminate="true" Height="4"  /&gt;      &lt;local:DebugListView x:Name="TheListView" Grid.Row="1" ItemsSource="{Binding Source={StaticResource CVS}}" ItemTemplate="{StaticResource ItemTemplate}" &gt;         &lt;ListView.GroupStyle&gt;             &lt;GroupStyle HeaderTemplate="{StaticResource StockHeaderTemplate}" HeaderContainerStyle="{StaticResource ListViewHeaderItemStyle}" /&gt;         &lt;/ListView.GroupStyle&gt;     &lt;/local:DebugListView&gt;  &lt;/Grid&gt; </code></pre>  <p>.CS Code</p>  <pre><code> public TestPageDev()         {             this.InitializeComponent();             _view = this.Resources["VM"] as StockVm;             _view.LoadData();                 this.DataContext = this;          } </code></pre>  <p>public class StockVm : BindableObject     {         private ObservableCollection _requestedItems;</p>  <pre><code>    public ObservableCollection&lt;RequestedStock&gt; RequestedItems     {         get { return _requestedItems; }         set { SetProperty(ref _requestedItems, value); }     }      public StockVm()     {      }      public async Task LoadData()     {         IsBusy = true;         await Task.Delay(TimeSpan.FromSeconds(5));         IsBusy = false;     }       #region - Public Members -     private bool _IsBusy = false;     public bool IsBusy     {         get         {             return _IsBusy;         }         set         {             if (_IsBusy != value)             {                 _IsBusy = value;                 RaisePropertyEvent("IsBusy");             }         }     }      public event PropertyChangedEventHandler PropertyChanged;      #endregion      #region - INotifyPropertyChanged -      private void RaisePropertyEvent(string propName)     {         if (PropertyChanged != null)             PropertyChanged(this, new PropertyChangedEventArgs(propName));     }     #endregion  } </code></pre>