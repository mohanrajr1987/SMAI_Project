<p>Sorry the title isn't really describing the issue, but it's a very weird one.</p>  <p>To make sure I wasn't doing any idiotic mistakes, I use breakpoints to track everything that was happening..</p>  <p>Basically, I have this code in a class which inherits from <code>ObservableCollection&lt;T&gt;</code>:</p>  <pre><code>var n = new MyClass(); int startIndex = 0; // parameter int length = 2;  // parameter  for (int i = 0; i &lt; length; i++) {     n.Text += this[startIndex].Text;     this.RemoveAt(startIndex); }  this.Insert(n); </code></pre>  <p>When executing the code, my collection has 3 items ; the loop goes like this:</p>  <ol> <li><code>n.Text += "some string successfully gotten from this[startIndex]"</code></li> <li><code>this.RemoveAt(startIndex)</code></li> <li><code>n.Text += "some other string successfully gotten from this[startIndex]"</code>  </li> <li><strong>Exception: IndexOutOfRange.</strong></li> </ol>  <p>I'm successfully getting the item, and yet there is an error when I'm trying to delete it. I'm lost here.</p>  <p>Any help would be very appreciated!</p>  <p>Thank you in advance.</p>  <h2>EDIT 1</h2>  <p>I've tried this, and had the same result.</p>  <pre><code>var toRemove = this.Skip(startIndex).Take(length).ToList();  foreach (var b in toRemove) {     this.Remove(b);     n.Text += b.Text; } </code></pre>  <p>Once again, I have an <strong>IndexOutOfRange</strong> Exception when <code>Removing</code> an item.<br> Whilst debugging, my Collection has 2 items, and <code>RemoveAt(0)</code> still throws this Exception.</p>  <h2>EDIT 2</h2>  <p>I tried to manually call <code>OnCollectionChanged</code> when modifying <code>this.Items</code>. The <strong>IndexOutOfRange</strong> Exception is triggered when calling <code>OnCollectionChanged</code>, but not when removing the item from <code>this.Items</code>.  </p>  <pre><code>for (int i = 0; i &lt; length; i++) {     this.OnCollectionChanged(new NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Remove, Items[startIndex], startIndex));     Items.RemoveAt(startIndex); } </code></pre>  <p>After calling <code>this.OnCollectionChanged(new NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Reset))</code>, I also have a problem.<br> Looks like the whole problem comes from the ListBox. I'll try playing with the Bindings, and other things, and report.</p>