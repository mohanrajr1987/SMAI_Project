<p>Urgh sorry for the bad title, really didn't know what would be correct (please change if you see something more fitting).</p>  <p>I have a DLL file which I use for a project based on <code>WinRT</code> (or rather I use it when I build a <code>Universal Windows 10</code> app) and I also use it for a "normal" desktop application. But my problem is that I use <code>System.Activator.CreateInstance&lt;T&gt;(typeof(T), true)</code> to be able to create some classes with a private constructor. This works on the desktop application. But on WinRT the method <code>CreateInstance&lt;T&gt;(...)</code> doesn't take the same parameters. What's the best approach to solve this?</p>  <p>Can I check during runtime if I'm on WinRT or if it's a "normal" application? And based on that use appropriate signature?</p>  <p>(Sorry if I'm using the the word WinRT wrong etc, I'm having a hard to grasping what is what with all these universal app terms flying around)</p>