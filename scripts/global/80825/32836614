<p>I have a <code>CheckedListBox</code> in a Form Application, and I have a <code>checkBox1</code>. When the <code>checkBox1</code> is selected I want to select all Items from <code>CheckedListBox</code> and delete <code>#</code> before rows who are like <code>product=name checkbox</code>, and when <code>checkBox1</code> is not selected uncheck all Items from <code>CheckedListBox</code> and write # before rows who are like <code>product=name checkbox</code>. My code fore <code>CheckedListBox</code> is:</p>  <pre><code> private void checkedListBox2_SelectedIndexChanged(object sender, EventArgs e)         {             string installerfilename = string.Format("{0}{1}", AppDomain.CurrentDomain.BaseDirectory, "installer.ini");             IEnumerable&lt;string&gt; inilines = File.ReadAllLines(installerfilename).AsEnumerable();              string selectedItem = checkedListBox2.SelectedItem.ToString();             bool IsChecked = checkedListBox2.CheckedItems.Contains(selectedItem);             //bool IsChecked2 = inilines.Contains("#product=");              if (IsChecked)                 inilines = inilines.Select(line =&gt; line == string.Format("#product={0}", selectedItem)                                                    ? Regex.Replace(line, string.Format("#product={0}", selectedItem), string.Format(@"product={0}", selectedItem))                                                    : line);              else                 inilines = inilines.Select(line =&gt; (line == string.Format("#product={0}", selectedItem) || line == string.Format(@"product={0}", selectedItem))                                                    ? Regex.Replace(line, string.Format(@".*product={0}", selectedItem), string.Format(@"#product={0}", selectedItem))                                                    : line);               if (checkedListBox2.CheckedItems.Count == 0)                 inilines = inilines.Select(line =&gt; Regex.Replace(line, @".*product=all", @"product=all"));             else                 inilines = inilines.Select(line =&gt; Regex.Replace(line, @".*product=all", @"#product=all"));              string strWrite = string.Join(Environment.NewLine, inilines.ToArray());             File.WriteAllText(installerfilename, strWrite);         } </code></pre>  <p>and fore introduce the items in checkedListBox I used :</p>  <pre><code> var items = System.IO.File.                   ReadAllLines(path + "installer.ini").                   //Where(x =&gt; !x.StartsWith("#product=all")).                   Where(x =&gt; x.StartsWith("#product=") &amp;&amp; !x.StartsWith("#product=all")).                   Select(x =&gt; x.Replace("#product=", "").Trim()).                                    ToArray();             var items2 = System.IO.File.                   ReadAllLines(path + "installer.ini").                 //Where(x =&gt; !x.StartsWith("#product=all")).                   Where(x =&gt; x.StartsWith("product=") &amp;&amp; !x.StartsWith("product=all")).                   Select(x =&gt; x.Replace("product=", "").Trim()).                    ToArray();              checkedListBox2.Items.AddRange(items);             checkedListBox2.Items.AddRange(items2);             var lines = System.IO.File.ReadAllLines(path + "installer.ini");               lines.Where(x =&gt; !x.StartsWith("#"))      .Select(x =&gt; x.Replace("product=", "").Trim())      .ToList()      .ForEach(item =&gt;      {          var index = this.checkedListBox2.Items.IndexOf(item);          if (index &gt;= 0)              this.checkedListBox2.SetItemChecked(index, true);      }); </code></pre>