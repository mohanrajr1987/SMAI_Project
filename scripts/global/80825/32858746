<p>I have a <code>checkbox</code> to Select All/Deselect All Items from a <code>checkedListBox</code>. Fore this I have the next code who works:</p>  <pre><code> private void checkedListBox2_SelectedIndexChanged(object sender, EventArgs e)         {  if (checkedListBox2.CheckedItems.Count == checkedListBox2.Items.Count)                  checkBox1.Checked = true;             else if (checkedListBox2.CheckedItems.Count != checkedListBox2.Items.Count)                 checkBox1.Checked = false; } </code></pre>  <p>But the problem is, If I have all items checked (the button <code>select all</code> is checked) and If I make click on one item all are deselected (and the button <code>select all</code> is uncheck ). I want when I make click on one item to deselect just the button <code>Select all</code> not all items?</p>  <p>EDIT: Here is my code :</p>  <pre><code>private void checkedListBox2_SelectedIndexChanged(object sender, EventArgs e) {              string installerfilename = string.Format("{0}{1}", AppDomain.CurrentDomain.BaseDirectory, "installer.ini");             IEnumerable&lt;string&gt; inilines = File.ReadAllLines(installerfilename).AsEnumerable();             /* string selectedItem = checkedListBox2.SelectedItem.ToString();             bool IsChecked = checkedListBox2.CheckedItems.Contains(selectedItem);*/             bool IsChecked =       checkedListBox2.CheckedItems.Contains(checkedListBox2.SelectedItem);                  if (IsChecked)                     inilines = inilines.Select(line =&gt; line == string.Format("#product={0}", checkedListBox2.SelectedItem)                                                        ? Regex.Replace(line, string.Format("#product={0}", checkedListBox2.SelectedItem), string.Format(@"product={0}", checkedListBox2.SelectedItem))                                                        : line);                  else                     inilines = inilines.Select(line =&gt; (line == string.Format("product={0}", checkedListBox2.SelectedItem))                                                        ? Regex.Replace(line, string.Format(@".*product={0}", checkedListBox2.SelectedItem), string.Format(@"#product={0}", checkedListBox2.SelectedItem))                                                        : line);                  if (checkedListBox2.CheckedItems.Count == 0)                     inilines = inilines.Select(line =&gt; Regex.Replace(line, @".*product=all", @"product=all"));                 else                     inilines = inilines.Select(line =&gt; Regex.Replace(line, @".*product=all", @"#product=all"));                   if (checkedListBox2.CheckedItems.Count == checkedListBox2.Items.Count)                                checkBox1.Checked = true;                  else if (checkedListBox2.CheckedItems.Count != checkedListBox2.Items.Count)                     checkBox1.Checked = false;                   string strWrite = string.Join(Environment.NewLine, inilines.ToArray());                 File.WriteAllText(installerfilename, strWrite);              }       private void checkBox1_CheckedChanged_1(object sender, EventArgs e)             {                  string installerfilename = path + "installer.ini";                 string installertext = File.ReadAllText(installerfilename);                 var lin = File.ReadLines(path + "installer.ini").ToArray();                  CheckBox cb = sender as CheckBox;                 if ((cb.Checked) &amp;&amp; (checkedListBox2.CheckedItems.Count != checkedListBox2.Items.Count))                 {                                  //  checkBox1.Checked = false;                     for (int i = 0; i &lt; this.checkedListBox2.Items.Count; i++)                         {                             this.checkedListBox2.SetItemChecked(i, true)                                             }                     foreach (var txt in lin)                     {                         if (txt.Contains("#product="))                         {                             // var name = txt.Split('=')[1];                             installertext = installertext.Replace("#product=", "product=");                         }                         File.WriteAllText(installerfilename, installertext);                     }                 }                     else if ((!cb.Checked) &amp;&amp; ((checkedListBox2.CheckedItems.Count != checkedListBox2.Items.Count) || (checkedListBox2.CheckedItems.Count == checkedListBox2.Items.Count)))                     {                          //checkBox1.Checked = false;                         for (int i = 0; i &lt; this.checkedListBox2.Items.Count; i++)                         {                             this.checkedListBox2.SetItemChecked(i, false);                                                     }                         foreach (var txt in lin)                         {                              if (txt.Contains("product=") &amp;&amp; (!txt.StartsWith("#")))                             {                                 // var name1 = txt.Split('=')[1];                                 installertext = installertext.Replace(txt, "#" +txt);                             }                             File.WriteAllText(installerfilename, installertext);                         }                     }              } </code></pre>