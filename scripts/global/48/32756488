<p>I was wondering if someone could point me in the right direction to help me devise a high level algorithm to solve a problem like the one explained below, using Drools.</p>  <p>Let’s consider a billing system in which for a given month, and a given service, I can get from the database millions of records, like call detail records (CDR), i.e. with a client id and many other fields which I want to use to reason over in the rules. The thing is, that I do not only need to take actions based on the individual records, but also based on conditions that would apply to certain aggregations. For example, let’s say that a different price would be applied for all the CDRs after a certain threshold number was reached (that is, each CDR after the 500th is cheaper). In reality, the rules would be much more complicated than that.</p>  <p>Now, I am pretty sure that the idea is not to insert all these records together into the engine (KieSession) and afterwards fire all the rules. Therefore, I would need some Object, let’s call it an “accounting element”, in which I can collect all the information from each processed record. In this case I would do:</p>  <pre><code>for each CDR loop:     Insert a record;     Fire all the rules;     Delete the record; </code></pre>  <p>And inside the Drools’ rules I would need to update my accounting object, e.g. counting the number of records processed for each client/service.</p>  <p>Moreover, since I am also going to be taking decisions based on this accounting object, it will also have to be inserted in the KieSession, and remain there through the whole session, right?</p>  <p>I appreciate any advice you can give me regarding possible solution/implementation approaches to such a problem using Drools, and please do tell me if what I said makes sense or correct me if it doesn’t. Thank you!</p>