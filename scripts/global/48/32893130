<p>I'm building REST++ service with Yii2, which should be able to deal with 2 table schemes, (databases storing ~the~same~ data): </p>  <ol> <li><strong>a_new_one</strong>, which is perfect to be handled with ActiveRecord; </li> <li><strong>the_old_one</strong>, which has 1 generic table 'Object' with columns like 'field1', 'field2', etc, and few additional tables.</li> </ol>  <p>I want my request methods and controllers to be all the same for both schemes (would be very great, really). That means, that I need to have THE SAME MODELS for both cases.</p>  <p>The troubles all relate to <strong>the_old_one</strong> database: Let's say data of model User is stored in tables <strong>Object</strong> and <strong>UserProfile</strong>. If I make 2 ActiveRecord classes for both tables, will it be possible to make hasOne() relations to them in 3d class <strong>User</strong> (not sure about inheritance here), so it can be manipulated like this:</p>  <pre><code>$user = User::find()-&gt;someFilters()-&gt;someOrderingAndPagination()-&gt;one(); $user-&gt;Name = $your_new_name; $user-&gt;Age = $why_not_90; $user-&gt;save(); // and so on. </code></pre>  <p>Because I really don't want to be forced to write it like this:</p>  <pre><code>$user = User::find()-&gt;notSureAboutRelations()     -&gt;filters()-&gt;ordering()-&gt;pagination()-&gt;one(); $user-&gt;object-&gt;field7 = $your_new_name; $user-&gt;userProfile-&gt;Age = $why_not_90; $user-&gt;save(); </code></pre>  <p>I learned, <strong>Doctrine</strong> has easy model mapping ($user->Name can be mapped to db's Object.field7), but it's still impossible to map to 2 different tables within 1 Entity. Or am I incorrect ? If so, would it be a good idea to use Doctrine within Yii2 ?</p>