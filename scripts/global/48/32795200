<p>Microsoft's <a href="https://msdn.microsoft.com/en-us/library/ff647202.aspx" rel="nofollow">Unity</a> container allows to define concrete class and lifetime for an interface.</p>  <pre><code>&lt;register type="ILogger" mapTo="SerialPortLogger"&gt;   &lt;lifetime type="singleton" /&gt; &lt;/register&gt; </code></pre>  <p>In caffe we can build Neural Nets with order of layers from text file <a href="http://pastebin.com/KbZiwHn5" rel="nofollow">like</a>.</p>  <pre><code>name: "LogisticRegressionNet" layers {   name: "data"   type: HDF5_DATA   top: "data"   top: "label" ... } layers {   name: "fc1"   type: INNER_PRODUCT   bottom: "data"   top: "fc1" ... } layers {   name: "loss"   type: SOFTMAX_LOSS   bottom: "fc1"   bottom: "label"   top: "loss" } </code></pre>  <p>The construction order is effected by the order in text file and number of layers in text file.</p>  <p>How can i get extensible functionality in C# such that i am able to define mappings for interface as well as order of execution for program. e.g. </p>  <pre><code>Initialize Read [Manipulate] Display </code></pre>  <p>will make program to do the said tasks unless manipulate is provided, then it will also manipulate.</p>  <p>I can do it with file handling etc. but is there a better solution than that?</p>