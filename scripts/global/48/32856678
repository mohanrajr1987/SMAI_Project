<p>I'm trying to piece together an architecture for a Windows Universal App leveraging Azure Mobile Services. It's a LOB app and will need to handle 100-250 offline\online tables. Currently Mobile Services doesn't support nested complex objects so on the service side I've mapped most of my tables straight through from entity framework.</p>  <p>The question I have is whether I should use a separate layer to reconstitute the DTO's or if i should be doing this all through the service layer and the view model. My main concerns are isolation of responsibility (large team) and the performance overhead from the additional mapping. </p>  <p>Didn't have the reputation to add an image here's the link to the model.</p>  <p><a href="http://i.stack.imgur.com/0vWrI.png" rel="nofollow"><img src="http://i.stack.imgur.com/0vWrI.png" alt="enter image description here"></a></p>  <p>An example would be a Person object with a collection of addresses attached. I have three DTO objects: one for the person one for the address and one for the many to many relationship. If I'm mapping straight through to the view model i'd need an addressing service to lookup the address for a specific person.</p>  <p>If i insert an extra "Model" layer my service returns the Person Model with a Collection of address on it. It feels a bit wrong though...</p>