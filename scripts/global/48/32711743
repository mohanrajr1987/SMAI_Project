<p>In my Spring Boot/Neo4j application I have a big tree of Neo4j nodes and now I would like to implement hierarchical comments for each of these node.</p>  <p>Right now I'm thinking of where these comments must be placed in... In Neo4j database or in some other external RDBMS/NoSQL storage.</p>  <p>Why I'm thinking about it - because of my limited Cypher knowledge right now I'm faced with the problem of removing heavy Neo4j nodes(composite nodes with many relationships to other nodes).. and I can't fix this issue now.. so introducing new Comment nodes can totally kill my system.</p>  <p>So what do you think, should I try to fix the delete issue or implement Comments in some external data storage ?</p>  <p><strong>UPDATED</strong></p>  <p>This is my slow delete query:</p>  <pre><code>MATCH (d:Decision)  WHERE id(d) IN {decisionsIds}  OPTIONAL MATCH (d)-[r]-(t)  DELETE d, r  WITH t, r WHERE NOT (id(t) IN {decisionsIds})  OPTIONAL MATCH (t)-[r2:VOTED_ON|:CREATED_BY|:VOTED_FOR]-()-[r3:CONTAINS]-(t2) WHERE r2 &lt;&gt; r  WITH t, r2, t2, r3  WHERE none(x in labels(t)  WHERE x in ['User', 'Decision'])  DELETE t, r2, t2, r3 </code></pre>  <p>Right now this query works long time so I afraid to add new entities to Decision node in order to not kill the performance completely.</p>  <p><strong>This is a sample database:</strong> <a href="http://thedownloadplanet.com/files/techbook-development-db.zip" rel="nofollow">Sample database</a></p>  <p><strong>This is another small sample database with many Vote nodes:</strong> <a href="http://thedownloadplanet.com/files/techbook-development-db-test.zip" rel="nofollow">Test database</a></p>  <p>Is any way to optimize this query ?</p>