<p>Note: I'm bootstrapping a reactjs app but this is a general JavaScript question.</p>  <p>I have a special module "locationUtils" that I am trying to keep in it's own package, but keeping that code separate is causing an eyesore with callbacks.</p>  <p>When I access one of it's methods I have to send a callback with it <strong>that only has one of its parameters initially defined</strong>, and in that method I get the other data parameter to initalize the other parameter.</p>  <p><strong>Can I add in undefined parameters later like that in JavaScript</strong>, and is it <strong>good practice to initial parameters for a callback method as you go down the callback chain</strong> in general, or am I making a convoluted newbie mistake?</p>  <pre><code>/********************Module 1******************************/ var bootStrapUI = function(callback) {   locationUtils.findData(findOtherData(callback)); }  //This gets called last to finalize bootstraping var findOtherData = function(callback,originalFetchedData){  //use originalFetchedData to get more data  //bootStraping program with all rendering data  callback() //sends back a boolean confirming all fetched }  /**********************Module2**********************************/  var findData = function(findOtherData){   var data = magicGetData();   findOtherData(findOtherData,data);//I initialized a param late here! } </code></pre>