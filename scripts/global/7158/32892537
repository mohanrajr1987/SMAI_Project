<p>So recently I learned about callbacks. pieces of code (usually a function) that is passed to another function as parameter and is executed after some event happens.</p>  <p>I found this example:</p>  <p>this is a function that uploads a file and saves it on server.</p>  <pre><code>    class FileUpload     {         function save($callback)         {             $path = '/path/image';              echo "Data saved&lt;br /&gt;";             //call the callback             $callback($path);         }     } </code></pre>  <p>and here we make an instance of that class and call <code>save</code> method:</p>  <pre><code>class Profile {     function update_profile()     {         $f = new FileUpload('photo');          // Note, this syntax is very similar to javascript callback syntax     $f-&gt;save(function($path){         echo "Image resized at path $path &lt;br /&gt;";         });      } }  $p = new Profile; $p-&gt;update_profile(); </code></pre>  <p>my question is, why can't we just make a simple function and call that when data was saved. like so:</p>  <pre><code>function printResult($path) {    echo "Image resized at path $path &lt;br /&gt;"; }  class FileUpload     {         function save()         {             $path = '/path/image';              echo "Data saved&lt;br /&gt;";             //call our simple function             printResult($path);         }     }  class Profile     {         function update_profile()         {             $f = new FileUpload('photo');             $f-&gt;save();         }     }      $p = new Profile;     $p-&gt;update_profile(); </code></pre>  <p>How is this better or worse than using callbacks??</p>