<p>I've read similar posts, but none quite hit on the head how to do this correctly.</p>  <p>I understand Promises and how they are typically created with success and failure listeners waiting to be triggered to either resolve or reject.</p>  <p>What I don't understand is when I'm <strong>calling an API method that takes a success and failure callback as parameters</strong>- how do I determine which callback is being triggered so I can then have it resolved or rejected?</p>  <p>For example with this Web API and considering the <em>navigator.geolocation.getCurrentPosition</em> method it offers:</p>  <pre><code>var options = {   enableHighAccuracy: true,   timeout: 5000,   maximumAge: 0 };  function success(pos) {   var crd = pos.coords;    console.log('Your current position is:');   console.log('Latitude : ' + crd.latitude);   console.log('Longitude: ' + crd.longitude);   console.log('More or less ' + crd.accuracy + ' meters.'); };  function error(err) {   console.warn('ERROR(' + err.code + '): ' + err.message); };  navigator.geolocation.getCurrentPosition(success, error, options); </code></pre>  <p>When the API sends back a success or error it will call one of the callbacks I gave it but <strong>I don't know which one it's gonna call in order resolve or reject it.</strong></p>  <p>The question is then: What is the proper way to listen for which callback is being triggered and how does it look to ES6 promisify the outcome of this kind of API call?</p>