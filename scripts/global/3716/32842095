<p>I have this C++ code which I need to translate to C#.</p>  <pre><code> *hDev = CreateFile(PortNameUNC, GENERIC_READ|GENERIC_WRITE, 0, NULL,        OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL, NULL);   if(*hDev == INVALID_HANDLE_VALUE) return false ;  DCB *dcb = new DCB ; memset(dcb, 0x00, sizeof(DCB)) ; dcb-&gt;DCBlength       = sizeof(DCB); dcb-&gt;BaudRate        = BaudRate; dcb-&gt;Parity          = Parity; dcb-&gt;StopBits        = StopBits; dcb-&gt;ByteSize        = ByteSize; dcb-&gt;fBinary         = TRUE; dcb-&gt;fDsrSensitivity = 0; dcb-&gt;fDtrControl     = (DTR ? DTR_CONTROL_ENABLE : DTR_CONTROL_DISABLE) ; dcb-&gt;fRtsControl     = (RTS ? RTS_CONTROL_ENABLE : RTS_CONTROL_DISABLE) ; dcb-&gt;fOutxCtsFlow    = (CTS ? 1 : 0) ; dcb-&gt;fOutxDsrFlow    = (DSR ? 1 : 0) ; dcb-&gt;fOutX           = (XonnXoff ? 1 : 0) ; dcb-&gt;fInX            = 0 ; </code></pre>  <p>I managed to translate most of it on C# using e.g.</p>  <pre><code>    m_port = new SerialPort(portName, baudRate, parity, dataBits, stopBits); </code></pre>  <p>But I am not sure how to set properties like <code>DTR, RTS, CTS, DSR and Xonn/Xoff?</code></p>  <p>I found <code>Dtr.Enable</code> and <code>Rts.Enable</code> properties on <code>SerialPort</code>, but what to do with other three?  CTS, DSR and Xonn/Xoff? How to enable them?</p>  <hr>  <p>EDIT: Also, here is my C# implementation of above. <strong>Have I correctly mapped the C++ code to C# as below? any feedback appreciated.</strong> especially the <code>xon/xoff</code> flags and the <code>dtr</code> and <code>rts</code>?</p>  <pre><code> public SerialPortHASP(string portName, int baudRate, Parity parity, int dataBits, StopBits stopBits, bool dtr, bool rts, bool xonxoff)     {          m_port = new SerialPort(portName, baudRate, parity, dataBits, stopBits);          // Set XonXoff if set         if (xonxoff)             m_port.Handshake = Handshake.XOnXOff;          // Set DTR/RTS         m_port.DtrEnable = dtr;         m_port.RtsEnable = rts;          // Open the port for communications         m_port.Open();     } </code></pre>