<p>I'm reading data from a serial port in Unity3D 4.5 (C#, MonoDevelop). I've been <a href="https://channel9.msdn.com/Forums/TechOff/528962-Stumbling-on-Basic-Serial-Port-IO/85ac7584bb1243d28c3a9deb000c31e4" rel="nofollow">using this wrapper</a> to compensate for various flaws in the Mono implementation of the SerialPort class (particularly its propensity for crashing when trying to read the port). This has worked perfectly but now I need to talk to eight different serial ports simultaneously and threading has become a must.</p>  <p>I can't tell exactly where the error is coming from, but whenever I attempt to connect to a serial port from either a separate Thread or BackgroundWorker, it is unable to open the port -- Open() returns false. Strangely enough, the port seems to opening and will remain open ... if I attempt to open the port again from a known-working program, it will report that the port is already open. However, inside of my program, the port is definitely not open. Open() returns false and if I attempt to write to the port, I get the "port not open" exception.</p>  <p>If I use Open() from the main thread and dispose of it properly, it opens and closes exactly as expected. Can this wrapper be used in a separate thread, or do I need to approach this differently?</p>  <p>EDIT: I dug around a bit and found that in ConfigureSerialPort(), the line:</p>  <pre><code>if (GetCommState(handle, ref serialConfig)) </code></pre>  <p>is evaluating false, so the method returns false and the serial port cannot be configured. Again, this only happens when I'm attempting to Open() from a separate thread or background worker.</p>