<pre><code>unsigned char cmd[] = {'A', 'T', '+', "0x07", "0x08", 'D', 'F', "0xA6"}; </code></pre>  <p>To write this command to my target device, I expect to write byte </p>  <pre class="lang-none prettyprint-override"><code>41 54 2b 07 08 44 46 A6  </code></pre>  <p>accordingly.</p>  <p>However, the actual bytes written to device are </p>  <pre class="lang-none prettyprint-override"><code>41 54 2b b8 bb 44 46 be </code></pre>  <p>and it's obvious wrong at </p>  <pre class="lang-none prettyprint-override"><code>0x07 0x08 0xA6 </code></pre>  <p>How to write bytes are I expect to have in the above example ?</p>  <p>----- write function ------- </p>  <pre class="lang-c prettyprint-override"><code>void WriteToDevice(){ unsigned char cmd[]={'A', 'T', '+', "0x07", "0x08", 'D', 'F', "0xA6"}; int n = write(fd,&amp;cmd,8);  for(p=0;p&lt;8;p++){     printf("bytes written: %02x \n", cmd[p]); }  if(n&lt;0){     printf("write error \n"); } else{     printf("%d bytes written \n", n); }  }; </code></pre>  <p>compiler warning</p>  <pre class="lang-c prettyprint-override"><code>warning: (near initialization for ‘cmd[3]’) [enabled by default] warning: initialization makes integer from pointer without a cast [enabled by default] </code></pre>