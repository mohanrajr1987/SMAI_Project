<p>I have been sending serial data with an arduino via bluetooth to my computer. Here is the sample arduino code.</p>  <pre><code>long interval=10; long previousMs=0; int k=1000; int K=9999;   void setup() {   Serial1.begin(115200); }  void loop() {   unsigned long currentMs = millis();    if(currentMs - previousMs &gt; interval) {     previousMs = currentMs;        k=k+1;     Serial1.println(k);     if(k&gt;K){       k=1000;     }   } } </code></pre>  <p>This is the relevant part of my .cpp code that reads the data. I changed it a bit to print out the number of bytes read. It should be 6 every time (4 digits, carriage return, new line), but every once in a while it will give 5,4,3,2, or 1. </p>  <pre><code>int read_bt(PORTTYPE port, char *buf, int bytes_to_read) {     COMMTIMEOUTS timeout;     DWORD n = 0;     BOOL r;     FILE *fp;      fp = fopen("C:\\Users\\Myname\\Documents\\Visual Studio 2013\\Projects\\Project2\\Debug\\BT_Constant.txt", "w+t");      GetCommTimeouts(port, &amp;timeout);     timeout.ReadIntervalTimeout = MAXDWORD; // non-blocking     timeout.ReadTotalTimeoutMultiplier = 0;     timeout.ReadTotalTimeoutConstant = 0;     SetCommTimeouts(port, &amp;timeout);      while (1){         // Get and clear current errors on the port.         if (!ClearCommError(fd, &amp;dwErrors, &amp;comStat))             // Report error in ClearCommError.             exit(0);          // Get error flags.         fDNS = dwErrors &amp; CE_DNS;         fIOE = dwErrors &amp; CE_IOE;         fOOP = dwErrors &amp; CE_OOP;         fPTO = dwErrors &amp; CE_PTO;         fMODE = dwErrors &amp; CE_MODE;         fBREAK = dwErrors &amp; CE_BREAK;         fFRAME = dwErrors &amp; CE_FRAME;         fRXOVER = dwErrors &amp; CE_RXOVER;         fTXFULL = dwErrors &amp; CE_TXFULL;         fOVERRUN = dwErrors &amp; CE_OVERRUN;         fRXPARITY = dwErrors &amp; CE_RXPARITY;          if (comStat.cbInQue != 0){             // comStat.cbInQue bytes have been received, but not read              r = ReadFile(fd,                 buf,                 bytes_to_read,                 &amp;n,                 NULL);         }         fprintf(fp,"%d\n", n);         printf("%d\n", n);      } }  </code></pre>  <p>I thought about sharing the output text file but I can't think of the best way to do that. Basically it is just a ton of "6"'s and its scattered with 1-5 in various spots.</p>  <p>I am working on an project with EEG data so a very high resolution and low latency is required. I was wondering if there was an issue with any of my code or if it was more likely a hardware issue with the bluetooth module I am using (HC-05 BT 2.0EDR).</p>  <p>If anyone can shed some light on to why this is happening I would definitely appreciate it!</p>