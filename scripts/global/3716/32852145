<p>I'm working on a program to send commands to the serial port. The communication works fine so far.</p>  <p>Now I've added a new Form and I want to find the port names and open the port in the new form. After that I want to work with the connected serial port in my first form.</p>  <p>I always get the error:</p>  <blockquote>   <p>Error 1   error C2039: 'SerialPort' : is not a member of 'test3::Form2'</p> </blockquote>  <p>Form1:</p>  <pre><code>#pragma once #include &lt;windows.h&gt; #using &lt;System.dll&gt; #include &lt;iostream&gt;     //for using cout #include &lt;stdlib.h&gt;     //for using the function sleep #include &lt;string&gt; #include &lt;sstream&gt; #include &lt;msclr/marshal_cppstd.h&gt; #include &lt;time.h&gt; #include &lt;stdio.h&gt; #include &lt;ctime&gt; #include &lt;cstdio&gt; #include "Form2.h"  namespace test3 {      using namespace System;     using namespace System::ComponentModel;     using namespace System::Collections;     using namespace System::Windows::Forms;     using namespace System::Data;     using namespace System::Drawing;     using namespace System::IO::Ports;     using namespace std;     using namespace System::Diagnostics;     using namespace System::IO;      /// &lt;summary&gt;     /// Summary for Form1     /// &lt;/summary&gt;     public ref class Form1 : public System::Windows::Forms::Form      {     public:          Form1(void)         {             InitializeComponent();             findPorts();                     // disable this text field                   this-&gt;textBox2-&gt;Enabled = false;             //             //TODO: Add the constructor code here             //          }        protected:         /// &lt;summary&gt;         /// Clean up any resources being used.         /// &lt;/summary&gt;         ~Form1()         {             if (components)             {                 delete components;             }         }     private: System::IO::Ports::SerialPort^  _serialPort;  private: System::Void button10_Click(System::Object^  sender, System::EventArgs^  e) {               Form^ f2= gcnew Form2(this-&gt;_serialPort);              f2-&gt;Show();          } }; </code></pre>  <p>Form2:</p>  <pre><code>#pragma once #include &lt;windows.h&gt; #using &lt;System.dll&gt; #include &lt;iostream&gt;     //for using cout #include &lt;stdlib.h&gt;     //for using the function sleep #include &lt;string&gt; #include "Form1.h"  namespace test3 {      using namespace System;     using namespace System::ComponentModel;     using namespace System::Collections;     using namespace System::Windows::Forms;     using namespace System::Data;     using namespace System::Drawing;     using namespace System::IO::Ports;     using namespace std;     using namespace System::Diagnostics;     using namespace System::IO;      /// &lt;summary&gt;     /// Summary for Form2     /// &lt;/summary&gt;     public ref class Form2 : public System::Windows::Forms::Form     {      public:         Form2(SerialPort^ _serialPort)         {             InitializeComponent();                     this-&gt;SerialPort = _serialPort;               //             //TODO: Add the constructor code here             //         }      protected:         /// &lt;summary&gt;         /// Clean up any resources being used.         /// &lt;/summary&gt;         ~Form2()         {             if (components)             {                 delete components;             }         } </code></pre>