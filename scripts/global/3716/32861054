<p>I found example <a href="http://forums.codeguru.com/showthread.php?182234-serial-ports-C" rel="nofollow">here</a> for serial communication on <code>C#</code> using <code>PInvoke</code> calls. One question I have is that <code>DCB</code> structure they use here:</p>  <pre><code>[StructLayout(LayoutKind.Sequential)] public struct DCB { //taken from c struct in platform sdk  public int DCBlength; // sizeof(DCB)  public int BaudRate; // current baud rate /* these are the c struct bit fields, bit twiddle flag to set public int fBinary; // binary mode, no EOF check  public int fParity; // enable parity checking  public int fOutxCtsFlow; // CTS output flow control  public int fOutxDsrFlow; // DSR output flow control  public int fDtrControl; // DTR flow control type  public int fDsrSensitivity; // DSR sensitivity  public int fTXContinueOnXoff; // XOFF continues Tx  public int fOutX; // XON/XOFF out flow control  public int fInX; // XON/XOFF in flow control  public int fErrorChar; // enable error replacement  public int fNull; // enable null stripping  public int fRtsControl; // RTS flow control  public int fAbortOnError; // abort on error  public int fDummy2; // reserved  */ public uint flags; public ushort wReserved; // not currently used  public ushort XonLim; // transmit XON threshold  public ushort XoffLim; // transmit XOFF threshold  public byte ByteSize; // number of bits/byte, 4-8  public byte Parity; // 0-4=no,odd,even,mark,space  public byte StopBits; // 0,1,2 = 1, 1.5, 2  public char XonChar; // Tx and Rx XON character  public char XoffChar; // Tx and Rx XOFF character  public char ErrorChar; // error replacement character  public char EofChar; // end of input character  public char EvtChar; // received event character  public ushort wReserved1; // reserved; do not use  } </code></pre>  <p>You can see they have commented out the <code>CTS</code>, <code>DSR</code>, <code>RTS</code>, <code>DTR</code> and <code>XON/XOFF</code> out flow control parameters. But I need to be able to set these parameters. How do I modify this structure such that I can use these parameters also? In C++ those parameters are bit fields I guess. How to approach this in C# so that I can set  <code>CTS</code>, <code>DSR</code>, <code>RTS</code>, <code>DTR</code> and <code>XON/XOFF</code> ?</p>  <p>PS. Also, does the implementation I linked look reasonable to you?</p>