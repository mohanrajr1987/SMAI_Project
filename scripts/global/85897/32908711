<p>I have this project, and one of the tasks I need to do is find what page a specific object appears on. The object has a predefined ID, and the ID's appear in order from 0 to N, but they could potentially skip values.</p>  <p>Which means, obviously, that using the ID of the element I'm looking for won't work, as if it's 25, and there are supposed to be 10 items per page, but 8 of those items are missing, it would try to fit on page 3, but could only fit on page 2.</p>  <p>Here's what I have now, I was wondering if there was a better way:</p>  <pre><code>int itemsPerPage = Convert.ToInt32(masterDbContext.Settings.First(x =&gt; x.Name == "ItemsPerPage").Value); int itemCount = masterDbContext.Items.OrderBy(x =&gt; x.Id).TakeWhile(x =&gt; x.Id &lt; currentItemId).Count(); int pageNumber = (int)Math.Ceiling((double)itemCount / itemsPerPage);  Response.Redirect("~/View/" + rootItem.Id + (pageNumber &gt; 1 ? "/Page/" + pageNumber : "")); </code></pre>  <p>If there's no better way to do this, that's fine. I just <em>hope</em> that there is, because I'm sure the <code>TakeWhile</code> can take, well, a while when I have thousands of <code>Items</code> in the database.</p>  <p>Do note: this method currently works it seems.</p>