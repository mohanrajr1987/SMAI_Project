<p>I have two tables:</p>  <pre><code>Client ------------------------ Id           (string) &lt;-- PrimaryKey Name         (string) Number       (int)  Department:* ------------------------ Id           (int) &lt;-- Primary key Name         (string) ClientNumber (int?) Client       (Client, virtual) ..... </code></pre>  <p>Now I want to create an optional relationship from Departmant to Client (using ClientNumber). I've created a virtual property in the Department class (Client) and now I need to configure the relation using EntityTypeConfiguration.</p>  <p>There are <strong>no foreign keys</strong> configured in the database and I'm not able to change the database. I can't change the Entity (class) Client either.</p>  <p>So I need to tell EntityFramework that the ClientNumber in the Department class is related (optionally) to the Number property in the Client class. </p>  <p>But I can't figure out how to tell EF that the Department's <em>ClientNumber</em> is related to the Client's <em>Number</em> property, not the Client's primary key. (without changing the Client entity class)</p>  <p>edit: The <em>Number</em> property on Client is unique for each entry. </p>  <p>The relation should result in a sql statement like this: </p>  <pre><code>SELECT ..... FROM Department D LEFT OUTER JOIN Client C ON (D.ClientNumber = C.Number) </code></pre>  <p>It's easy to do this using joins in Linq, but it would be great to just: </p>  <pre><code>dbContext.Departments.Include(d =&gt; d.Client)  </code></pre>  <p>using a virtual property on Department class containing the Client (if any)</p>