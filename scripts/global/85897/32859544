<p>I had this code working using EF5, not is complains about cyclic dependencies:</p>  <pre><code> public class Supplier {     public int SupplierId { get; set; }     [ForeignKey("SupplierId")]     public Company SupplierE { get; set; }      public int CompanyId { get; set; }     [ForeignKey("CompanyId")]     [InverseProperty("Suppliers")]     public virtual Company Company { get; set; }  }   public class Company {     public int CompanyId { get; set; }      [InverseProperty("Company")]     public ICollection&lt;Client&gt; Clients { get; set; }      [InverseProperty("Company")]     public ICollection&lt;Supplier&gt; Suppliers { get; set; }  } </code></pre>  <p>and the fluent configuration is something like:</p>  <pre><code>  modelBuilder          .Entity&lt;Supplier&gt;()          .HasRequired(c =&gt; c.Company)          .WithMany(v =&gt; v.Suppliers)          .WillCascadeOnDelete(false); </code></pre>  <p>Also I have some code to configure the keys fr the Supplier Entity:</p>  <pre><code>public class SupplierConfiguration: EntityTypeConfiguration&lt;Supplier&gt; {     public SupplierConfiguration()     {         HasKey(c =&gt; new {c.CompanyId, c.SupplierId});     } } </code></pre>  <p>I get an error message about cyclic dependencies:</p>  <blockquote>   <p>Introducing FOREIGN KEY constraint 'FK_dbo.Supplier_dbo.Company_CompanyId' on table 'Supplier' may cause cycles or multiple cascade paths. Specify ON DELETE NO ACTION or ON UPDATE NO ACTION, or modify other FOREIGN KEY constraints.</p> </blockquote>  <p>As I mentionned this used to work in EF5, I just migrated to EF6 and started getting this.In addition I have a similar class called <code>Client</code> and it works fine for it.</p>  <p>Any ideas?</p>  <p>EDIT:</p>  <p>this is the same code from client:</p>  <pre><code>public class Client     {         public int ClientId { get; set; }         [ForeignKey("ClientId")]         public Company ClientE { get; set; }          public int CompanyId { get; set; }         [ForeignKey("CompanyId")]         [InverseProperty("Clients")]         public virtual Company Company { get; set; }      } </code></pre>