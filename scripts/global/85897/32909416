<p>So I have mulled over many of the questions asked here on stackoverflow pertaining to multiple databases and one context. My question is more about querying multiple databases as opposed to migration. this question is probably closest to my case:</p>  <p><a href="http://stackoverflow.com/questions/17941225/using-entity-framework-on-multiple-databases">Using entity framework on multiple databases</a></p>  <p>The responders mention EF6 having better support for this but despite several days of looking through blogs, posts, and whitepapers I cannot see how to query on multiple databases.</p>  <p>The scenario is like his.  Multitenant database structure with one central database which we want to use for shared resources, common data across all tenants. So  for example our categorization may be stored in the global (Since it is the same for all databases) but the tenant's data would be stored in his specific database.</p>  <p>What I Want to do  is simple and I have been able to do it in linqpad:</p>  <pre><code>var query= (from s in GlobalDatabase.Category join  TP  in  TenantProduct on s.catid equals  UG.catid select new { s.catid, TP.Productid} ); query.Dump();  </code></pre>  <p><a href="http://i.stack.imgur.com/CBbAy.png" rel="nofollow"><img src="http://i.stack.imgur.com/CBbAy.png" alt="LINQPad Screenshot"></a></p>  <p>Is this possible in  EF6\C# ?<br> I guess the question is how can I transform this into something that would work as a linq statement in  a project? Considering  that I used Linqpad's capability of joining 2 connections together is linq pad simply using 2 different contexts?</p>  <p>What I really wanted to end up with was one connection  (one login)  that has access to both databases?</p>