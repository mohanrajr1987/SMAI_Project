<p>We have a enum <code>Supplier</code></p>  <p>But now we need to also have some Domain data on that relation</p>  <p>So in 99.9% in the domain code we doe operations on the enum like <code>product.Supplier == Suppliers.FedEx</code></p>  <p>But now we also have added <code>product.SupplierInfo.CanAdjustPickupTime</code> where <code>SupplierInfo</code> is a Entity and not just a simple enum type.</p>  <p>I have tried these configs </p>  <pre><code>Property(p =&gt; p.Supplier)     .IsRequired()     .HasColumnName("SupplierId");  HasRequired(p =&gt; p.SupplierInfo)     .WithMany()     .HasForeignKey(p =&gt; p.Supplier); //I have also tried casting to int doing .HasForeignKey(p =&gt; (int)p.Supplier) </code></pre>  <p>This will fail with </p>  <blockquote>   <p>The ResultType of the specified expression is not compatible with the   required type. The expression ResultType is   'MyApp.Model.Suppliers' but the required type is   'Edm.Int32'.  Parameter name: keyValues[0]</p> </blockquote>  <p>Also tried</p>  <pre><code>Property(l =&gt; l.Supplier)     .IsRequired()     .HasColumnName("SupplierId");  HasRequired(p =&gt; p.SupplierInfo)     .WithMany()     .Map(m =&gt; m.MapKey("SupplierId")); </code></pre>  <p>This will offcourse give the good old </p>  <blockquote>   <p>One or more validation errors were detected during model generation:</p>      <p>SupplierId: Name: Each property name in a type must be unique.   Property name 'SupplierId' is already defined.</p> </blockquote>  <p>I could offcourse define SupplierId as a Property use that with <code>HasForeignKey</code> But then I need to change to <code>.SuppliedId == (int)Suppliers.FedEx</code> etc. Not really a solution. </p>  <p>I could also add a property enum that uses the SupplierId property as backing field, but this will not work with Expressions since it needs to use real mapped DB properties</p>  <p>Any ideas?</p>