<p>I'm having issues with returning objects from related domain models. The objects that are from other models are returning null. </p>  <p>What i am basically trying to accomplish is return an DTO that have the fields that i want from the related domain models instead of passing every field straight from the domain models to json.</p>  <p>Please see below code, can someone please advise.</p>  <p><a href="http://i.stack.imgur.com/2wwGV.jpg" rel="nofollow"><img src="http://i.stack.imgur.com/2wwGV.jpg" alt="SCREEN SHOT OF RESULT"></a> <a href="http://i.stack.imgur.com/huYRm.jpg" rel="nofollow"><img src="http://i.stack.imgur.com/huYRm.jpg" alt="DATABASE DIAGRAM"></a></p>  <pre><code>## CourseDomainModels.cs ##  public class CourseDomainModel : IObjectWithState {     public int Id { get; set; }     public string Name { get; set; }     public Double Duration { get; set; }     public string Description { get; set; }      public virtual TutorDomainModel CourseTutor { get; set; }     public virtual SubjectDomainModel CourseSubject { get; set; }      public ICollection&lt;EnrollmentDomainModel&gt; Enrollments { get; set; }      [NotMapped]     public Common.State state { get; set; }      [NotMapped]     public bool InDb =&gt; this.Id != default(int);      public object PersistenceEntityId =&gt; this.Id; }   ## TutorDomainModel.cs ##  public class TutorDomainModel : IObjectWithState {     public int Id { get; set; }     public string Email { get; set; }     public string UserName { get; set; }     public string Password { get; set; }     public string FirstName { get; set; }     public string LastName { get; set; }     public Enums.Gender Gender { get; set; }      public ICollection&lt;CourseDomainModel&gt; Courses;      [NotMapped]     public Common.State state { get; set; }      [NotMapped]     public bool InDb =&gt; this.Id != default(int);      public object PersistenceEntityId =&gt; this.Id; }  ## CourseDTO.cs ##  public class CourseDTO {     public string Name { get; set; }      public Double Duration { get; set; }      public string Description { get; set; }      public string Email { get; set; }      public string FirstName { get; set; }      public string LastName { get; set; } }  ## AutoMapperConfig.cs ##  public class AutoMapperConfig {     public static void RegisterMapping()     {          Mapper.CreateMap&lt;CourseDomainModel, CourseDTO&gt;();     } }  ## Startup.cs ##  public class Startup {     public void Configuration(IAppBuilder app)     {         HttpConfiguration config = new HttpConfiguration();         WebApiConfig.Register(config);         app.UseWebApi(config);          AutoMapperConfig.RegisterMapping();     } }  ## CourseService.cs ##  public CourseDTO GetCourse(int id)     {          var course = _courseRepo.Get(id);         CourseDTO courseView = Mapper.Map&lt;CourseDomainModel,CourseDTO(course);          return courseView;                } </code></pre>