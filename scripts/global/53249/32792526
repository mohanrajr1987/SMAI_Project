<p>I have a simple app with a webview to load local HTML pages, I put all my files inside assets, now in my navigation drawer I want to have some text/links that open these pages, I tried to follow some tuts on the web but somehow I can't make it happen.</p>  <p>Any help would be greatly appreciated!</p>  <p>My code on android studio:</p>  <p><strong>AndroidManifest.xml</strong></p>  <pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt; </code></pre>  <p></p>  <pre><code>&lt;application     android:allowBackup="true"     android:icon="@drawable/ic_launcher"     android:label="@string/app_name"     android:theme="@style/AppTheme" &gt;     &lt;activity         android:name=".MainActivity"         android:label="@string/app_name" &gt;         &lt;intent-filter&gt;             &lt;action android:name="android.intent.action.MAIN" /&gt;              &lt;category android:name="android.intent.category.LAUNCHER" /&gt;         &lt;/intent-filter&gt;     &lt;/activity&gt; &lt;/application&gt;  &lt;uses-permission android:name="android.permission.INTERNET" /&gt; </code></pre>  <p></p>  <p><strong>activity_main.xml</strong></p>  <pre><code>&lt;android.support.v4.widget.DrawerLayout xmlns:android="http://schemas.android.com/apk/res/android" xmlns:tools="http://schemas.android.com/tools" android:id="@+id/drawer_layout" android:layout_width="match_parent" android:layout_height="match_parent"&gt;   &lt;RelativeLayout     android:layout_width="match_parent"     android:layout_height="match_parent"     android:paddingLeft="@dimen/activity_horizontal_margin"     android:paddingRight="@dimen/activity_horizontal_margin"     android:paddingTop="@dimen/activity_vertical_margin"     android:paddingBottom="@dimen/activity_vertical_margin"     tools:context=".MainActivity"     android:background="#ffffffff"&gt;      &lt;TextView         android:layout_width="wrap_content"         android:layout_height="wrap_content"         android:layout_centerHorizontal="true"         android:text="History Of S.Johnson High School"         android:textSize="24sp"         android:gravity="center"         android:layout_marginTop="100dp"/&gt;      &lt;ImageView         android:layout_width="wrap_content"         android:layout_height="wrap_content"         android:src="@drawable/sjohnson"         android:layout_alignParentBottom="true"         android:layout_centerHorizontal="true"/&gt;      &lt;WebView         android:id="@+id/activity_main_webview"         android:layout_width="match_parent"         android:layout_height="match_parent" /&gt;  &lt;/RelativeLayout&gt;  &lt;!-- Side navigation drawer UI --&gt; &lt;ListView     android:id="@+id/navList"     android:layout_width="250dp"     android:layout_height="match_parent"     android:layout_gravity="left|start"     android:background="#ffeeeeee"/&gt; </code></pre>  <p></p>  <p><strong>MainActivity.java</strong></p>  <pre><code>public class MainActivity extends ActionBarActivity { private WebView mWebView; private ListView mDrawerList; private DrawerLayout mDrawerLayout; private ArrayAdapter&lt;String&gt; mAdapter; private ActionBarDrawerToggle mDrawerToggle; private String mActivityTitle;  @Override protected void onCreate(Bundle savedInstanceState) {     super.onCreate(savedInstanceState);     setContentView(R.layout.activity_main);      mWebView = (WebView) findViewById(R.id.activity_main_webview);      mDrawerList = (ListView)findViewById(R.id.navList);mDrawerLayout = (DrawerLayout)findViewById(R.id.drawer_layout);     mActivityTitle = getTitle().toString();      addDrawerItems();     setupDrawer();      getSupportActionBar().setDisplayHomeAsUpEnabled(true);     getSupportActionBar().setHomeButtonEnabled(true);      WebSettings webSettings = mWebView.getSettings();     webSettings.setJavaScriptEnabled(true);     mWebView.setWebViewClient(new MyAppWebViewClient());     mWebView.loadUrl("file:///android_asset/www/index.html");   }  @Override public void onBackPressed() {     if(mWebView.canGoBack()) {         mWebView.goBack();     } else {         super.onBackPressed();     } }  private void addDrawerItems() {     String[] osArray = { "Android", "iOS", "Windows", "OS X", "Linux" };     mAdapter = new ArrayAdapter&lt;String&gt;(this, android.R.layout.simple_list_item_1, osArray);     mDrawerList.setAdapter(mAdapter);      mDrawerList.setOnItemClickListener(new AdapterView.OnItemClickListener() {         @Override         public void onItemClick(AdapterView&lt;?&gt; parent, View view, int position, long id) {             Toast.makeText(MainActivity.this, "Time for an upgrade!", Toast.LENGTH_SHORT).show();         }     }); }  private void setupDrawer() {     mDrawerToggle = new ActionBarDrawerToggle(this, mDrawerLayout, R.string.drawer_open, R.string.drawer_close) {           public void onDrawerOpened(View drawerView) {             super.onDrawerOpened(drawerView);             getSupportActionBar().setTitle("Navigation!");             invalidateOptionsMenu(); // creates call to onPrepareOptionsMenu()         }           public void onDrawerClosed(View view) {             super.onDrawerClosed(view);             getSupportActionBar().setTitle(mActivityTitle);             invalidateOptionsMenu(); // creates call to onPrepareOptionsMenu()         }     };      mDrawerToggle.setDrawerIndicatorEnabled(true);     mDrawerLayout.setDrawerListener(mDrawerToggle); }  @Override protected void onPostCreate(Bundle savedInstanceState) {     super.onPostCreate(savedInstanceState);     // Sync the toggle state after onRestoreInstanceState has occurred.     mDrawerToggle.syncState(); }  @Override public void onConfigurationChanged(Configuration newConfig) {     super.onConfigurationChanged(newConfig);     mDrawerToggle.onConfigurationChanged(newConfig); }  @Override public boolean onCreateOptionsMenu(Menu menu) {     // Inflate the menu; this adds items to the action bar if it is present.     getMenuInflater().inflate(R.menu.menu_main, menu);     return true; }  @Override public boolean onOptionsItemSelected(MenuItem item) {     // Handle action bar item clicks here. The action bar will     // automatically handle clicks on the Home/Up button, so long     // as you specify a parent activity in AndroidManifest.xml.     int id = item.getItemId();      //noinspection SimplifiableIfStatement     if (id == R.id.action_settings) {         return true;     }      // Activate the navigation drawer toggle     if (mDrawerToggle.onOptionsItemSelected(item)) {         return true;     }      return super.onOptionsItemSelected(item); } </code></pre>  <p><strong>MyAppWebViewClient.java</strong></p>  <pre><code>public class MyAppWebViewClient extends WebViewClient {  @Override public boolean shouldOverrideUrlLoading(WebView view, String url) {     if(Uri.parse(url).getHost().length() == 0) {         return false;     }      Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(url));     view.getContext().startActivity(intent);     return true; } </code></pre>  <p><strong>themes.xml</strong></p>  <pre><code>&lt;resources&gt;  &lt;!-- Base application theme. --&gt; &lt;style name="AppTheme"     parent="@style/Theme.AppCompat.Light.DarkActionBar"&gt;     &lt;item name="android:actionBarStyle"&gt;@style/MyActionBar&lt;/item&gt;      &lt;!-- Support library compatibility --&gt;     &lt;item name="actionBarStyle"&gt;@style/MyActionBar&lt;/item&gt; &lt;/style&gt;  &lt;!-- ActionBar styles --&gt; &lt;style name="MyActionBar"     parent="@style/Widget.AppCompat.Light.ActionBar.Solid.Inverse"&gt;     &lt;item name="android:background"&gt;@drawable/actionbar_background&lt;/item&gt;      &lt;!-- Support library compatibility --&gt;     &lt;item name="background"&gt;@drawable/actionbar_background&lt;/item&gt; &lt;/style&gt; </code></pre>  <p></p>  <p><strong>strings.xml</strong></p>  <pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt; </code></pre>  <p></p>  <pre><code>&lt;string name="app_name"&gt;Info&lt;/string&gt; &lt;string name="hello_world"&gt;Hello world!&lt;/string&gt; &lt;string name="action_settings"&gt;Settings&lt;/string&gt; &lt;string name="drawer_open"&gt;Open navigation drawer&lt;/string&gt; &lt;string name="drawer_close"&gt;Close navigation drawer&lt;/string&gt; </code></pre>  <p></p>