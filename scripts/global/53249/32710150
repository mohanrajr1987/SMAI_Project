<p>On a fragment, I have a <code>ListView</code> which works perfectly fine. However, once the Activity gets killed which happens when I don't use the application much often, the <code>ListView</code> behaves differently. In that case, though the data is displayed correctly, but the navigation on <code>ListView</code> item click does not show the next fragment.<br> I have a custom adapter for the <code>ListView</code>. Following is the <strong>onClick</strong> :   </p>  <pre><code>Toast.makeText(activity, "Position : " + String.valueOf(mPosition) + "\nSize : " + String.valueOf(arrActivity.size()), Toast.LENGTH_SHORT).show();             truegroups.model.Activity model = (truegroups.model.Activity) arrActivity.get(mPosition);             Toast.makeText(activity, "onClick fragment " + fragment.getClass().getName(), Toast.LENGTH_SHORT).show();             FragmentManager fm = fragment.getActivity().getSupportFragmentManager();             FragmentTransaction transaction = fm.beginTransaction();             transaction.addToBackStack(null);             transaction.setCustomAnimations(R.anim.enter_anim, R.anim.exit_anim, R.anim.enter_anim, R.anim.exit_anim);             WebFragment fragment = WebFragment.newInstance(String.format("%s%s", Globals.TGURL_ACTIVITY_DETAILS, model.getActivityId()), "");             transaction.replace(R.id.fragment_activity_layout, fragment);             transaction.commit();   </code></pre>  <p>It gives correct result when I Toast the data.<br> <strong>WebFragment</strong> has a <code>WebView</code>. In the above scenario, the <code>WebView</code> loads the <strong>Url</strong> but still I am not able to view the fragment.<br> <strong>WebFragment</strong> <code>onCreateView</code> :  </p>  <pre><code>@Override     public View onCreateView(LayoutInflater inflater, ViewGroup container,                              Bundle savedInstanceState) {         settings = getActivity().getSharedPreferences("preferences", getActivity().MODE_PRIVATE);         View view = inflater.inflate(R.layout.fragment_web, container, false);         browser = (WebView) view.findViewById(R.id.webFragment_webview);         browser.setWebViewClient(new WebViewClient());         browser.getSettings().setLoadsImagesAutomatically(true);         browser.getSettings().setJavaScriptEnabled(true);         browser.getSettings().setDomStorageEnabled(true);          if (Build.VERSION.SDK_INT &gt;= 19) {             browser.setLayerType(View.LAYER_TYPE_HARDWARE, null);         }         else {             browser.setLayerType(View.LAYER_TYPE_SOFTWARE, null);         }          browser.setWebChromeClient(new WebChromeClient()         {             @Override             public boolean onJsAlert(WebView view, String url, String message, JsResult result) {                 return super.onJsAlert(view, url, message, result);             }              @Override             public boolean onJsBeforeUnload(WebView view, String url, String message,                                             JsResult result) {                 System.out.print("");                 return false;             }              @Override             public void onCloseWindow(WebView window) {                 System.out.print("");             }         });          browser.setWebViewClient(new WebViewClient() {             public void onReceivedError(WebView view, int errorCode, String description, String failingUrl) {                 //Users will be notified in case there's an error (i.e. no internet connection)             }              @Override             public void onLoadResource (WebView view, String url) {                 super.onLoadResource(view, url);                 Log.v("", "onLoadResource("+url+");");             }              @Override             public void onPageStarted(WebView view, String url, Bitmap favicon) {                 try {                     if((url.contains(".pdf") || url.contains(".xml") || url.contains(".xlsx") || url.contains(".docx") || url.contains(".ppt")) &amp;&amp; !isAttachment) {                         isAttachment = true;                         url = org.apache.commons.lang3.StringUtils.join("http://docs.google.com/gview?embedded=true&amp;url=", url);                         browser.loadUrl(url);                     }                      if (!isDetailAlreadyShown &amp;&amp; url.toLowerCase().contains("event/eventdetails?eventid=")) {                         isDetailAlreadyShown = true;                     } else if (isDetailAlreadyShown &amp;&amp; url.toLowerCase().contains("event/eventdetails?eventid=")) {                         isReloadRequired = true;                     }                     if (url.toLowerCase().contains("activities/activitydetails")) {                         if (!isNotificationTab) {                             Intent intent = new Intent("activityReload");                             intent.putExtra("reloadActivity", "yes");                             LocalBroadcastManager.getInstance(getActivity()).sendBroadcast(intent);                             getActivity().getSupportFragmentManager().popBackStack();                             browser.stopLoading();                             Class.forName("android.webkit.WebView").getMethod("onPause", (Class[]) null).invoke(browser, (Object[]) null);                         }                     }                      if (url.equals(Globals.TGURL_HOME) || url.equals(Globals.TGURL_HOME_INDEX)) {                         if (!isNotificationTab) {                             Intent intent = new Intent("activityReload");                             intent.putExtra("reloadActivity", "yes");                             LocalBroadcastManager.getInstance(getActivity()).sendBroadcast(intent);                             getActivity().getSupportFragmentManager().popBackStack();                             browser.stopLoading();                             Class.forName("android.webkit.WebView").getMethod("onPause", (Class[]) null).invoke(browser, (Object[]) null);                         }                     }                      if (URL.equals(Globals.TGURL_NEW_GROUP) &amp;&amp; url.toLowerCase().contains("groupdetails?groupid")) {                         if (!isNotificationTab) {                             Intent intent = new Intent("groupReload");                             intent.putExtra("reloadGroup", "yes");                             LocalBroadcastManager.getInstance(getActivity()).sendBroadcast(intent);                             getActivity().getSupportFragmentManager().popBackStack();                             browser.stopLoading();                             Class.forName("android.webkit.WebView").getMethod("onPause", (Class[]) null).invoke(browser, (Object[]) null);                         }                     }                      if (url.equals(Globals.TGURL_MESSAGE_SAVE)) {                         Intent intent = new Intent("messageReload");                         intent.putExtra("reloadMessage", "yes");                         LocalBroadcastManager.getInstance(getActivity()).sendBroadcast(intent);                         getActivity().getSupportFragmentManager().popBackStack();                         browser.stopLoading();                         Class.forName("android.webkit.WebView").getMethod("onPause", (Class[]) null).invoke(browser, (Object[]) null);                     }                      if (url.equals(Globals.TGURL_MESSAGE_CANCEL)) {                         getActivity().getSupportFragmentManager().popBackStack();                         browser.stopLoading();                         Class.forName("android.webkit.WebView").getMethod("onPause", (Class[]) null).invoke(browser, (Object[]) null);                     }                      if (url.toLowerCase().contains("/account/login") || url.contains("/Account/LogOnByAjax")) {                         loginUser();                         browser.stopLoading();                         Class.forName("android.webkit.WebView").getMethod("onPause", (Class[]) null).invoke(browser, (Object[]) null);                     }                 } catch (IllegalAccessException e) {                     e.printStackTrace();                 } catch (InvocationTargetException e) {                     e.printStackTrace();                 } catch (NoSuchMethodException e) {                     e.printStackTrace();                 } catch (ClassNotFoundException e) {                     e.printStackTrace();                 } catch (Exception e) {                     e.printStackTrace();                 }             }              public void onPageFinished(WebView view, String url) {                 super.onPageFinished(view, url);             }              @Override             public boolean shouldOverrideUrlLoading(WebView view, String url) {                 view.loadUrl(url);                 if (url.contains("/Home")) {                     return false;                 }                  return true;             }          });          browser.loadUrl(URL);         return view;     }   </code></pre>