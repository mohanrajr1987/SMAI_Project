<p>I am trying to create an android app witch loads local HTML pages in webview, I managed to make that part work, but now I have a drawer menu with some strings and when I click one of them I want to open a different HTML page, I am stuck on this part so I'm asking for some guidelines.</p>  <p>This is my code in MainActivity.java</p>  <pre><code>public class MainActivity extends ActionBarActivity { private WebView mWebView; private ListView mDrawerList; private DrawerLayout mDrawerLayout; private ArrayAdapter&lt;String&gt; mAdapter; private ActionBarDrawerToggle mDrawerToggle; private String mActivityTitle;  @Override protected void onCreate(Bundle savedInstanceState) {     super.onCreate(savedInstanceState);     setContentView(R.layout.activity_main);      mWebView = (WebView) findViewById(R.id.activity_main_webview);      mDrawerList = (ListView)findViewById(R.id.navList);mDrawerLayout = (DrawerLayout)findViewById(R.id.drawer_layout);     mActivityTitle = getTitle().toString();      addDrawerItems();     setupDrawer();     getSupportActionBar().setDisplayHomeAsUpEnabled(true);     getSupportActionBar().setHomeButtonEnabled(true);      WebSettings webSettings = mWebView.getSettings();     webSettings.setJavaScriptEnabled(true);     mWebView.setWebViewClient(new MyAppWebViewClient());     mWebView.loadUrl("file:///android_asset/www/index.html");   }  @Override public void onBackPressed() {     if(mWebView.canGoBack()) {         mWebView.goBack();     } else {         super.onBackPressed();     } }  private void addDrawerItems() {     String[] osArray = { "Android", "black" };     mAdapter = new ArrayAdapter&lt;String&gt;(this, android.R.layout.simple_list_item_1, osArray);     mDrawerList.setAdapter(mAdapter);      mDrawerList.setOnItemClickListener(new AdapterView.OnItemClickListener() {         @Override         public void onItemClick(AdapterView&lt;?&gt; parent, View view, int position, long id) {             Toast.makeText(MainActivity.this, "Time for an upgrade!", Toast.LENGTH_SHORT).show();             //load file to webView             mWebView.loadUrl("file:///android_asset/www/help.html");             //close drawer             mDrawerLayout.closeDrawers();          }     }); }  private void setupDrawer() {     mDrawerToggle = new ActionBarDrawerToggle(this, mDrawerLayout, R.string.drawer_open, R.string.drawer_close) {          /** Called when a drawer has settled in a completely open state. */         public void onDrawerOpened(View drawerView) {             super.onDrawerOpened(drawerView);             getSupportActionBar().setTitle("Navigation!");             invalidateOptionsMenu(); // creates call to onPrepareOptionsMenu()         }          /** Called when a drawer has settled in a completely closed state. */         public void onDrawerClosed(View view) {             super.onDrawerClosed(view);             getSupportActionBar().setTitle(mActivityTitle);             invalidateOptionsMenu(); // creates call to onPrepareOptionsMenu()         }     };      mDrawerToggle.setDrawerIndicatorEnabled(true);     mDrawerLayout.setDrawerListener(mDrawerToggle); }  @Override protected void onPostCreate(Bundle savedInstanceState) {     super.onPostCreate(savedInstanceState);     // Sync the toggle state after onRestoreInstanceState has occurred.     mDrawerToggle.syncState(); }  @Override public void onConfigurationChanged(Configuration newConfig) {     super.onConfigurationChanged(newConfig);     mDrawerToggle.onConfigurationChanged(newConfig); }  @Override public boolean onCreateOptionsMenu(Menu menu) {     // Inflate the menu; this adds items to the action bar if it is present.     getMenuInflater().inflate(R.menu.menu_main, menu);     return true; }  @Override public boolean onOptionsItemSelected(MenuItem item) {     // Handle action bar item clicks here. The action bar will     // automatically handle clicks on the Home/Up button, so long     // as you specify a parent activity in AndroidManifest.xml.     int id = item.getItemId();      //noinspection SimplifiableIfStatement     if (id == R.id.action_settings) {         return true;     }      // Activate the navigation drawer toggle     if (mDrawerToggle.onOptionsItemSelected(item)) {         return true;     }      return super.onOptionsItemSelected(item); </code></pre>