<p>I needed to pass a WebView to another Activity, and I couldn't create a new WebView in the new Activity because the html content can not be loaded twice. So I managed to solve the problem using a static blackboard and the <a href="http://developer.android.com/reference/android/content/MutableContextWrapper.html" rel="nofollow">MutableContextWrapper</a>.</p>  <p>The approach was: (i) The original Activity instantiates the WebView with a <a href="http://developer.android.com/reference/android/content/MutableContextWrapper.html" rel="nofollow">MutableContextWrapper</a>, and before to start the second Activity, (ii) I detach the WebView from the original Activity, (iii) store it in a static blackboard, and when the second Activity is started, (iv) it gets the instance of WebView on the blackboard, (v) updates its Context using the <a href="http://developer.android.com/reference/android/content/MutableContextWrapper.html" rel="nofollow">MutableContextWrapper</a>, (vi) and attach it to the new Activity. When the second Activity is closed, the reverse way is followed to put back the WebView in the original Activity.</p>  <p>This approach works very well in the most Android versions, but since the Lollipop version, the WebView does not refresh its content while it is attached to the second Activity. However when the second Activity is closed and the WebView goes back to the original Activity, it works fine.</p>  <p>In my researches, I discovered about the new behavior of the WebViews from the Android L that reduces memory footprint and increases performance by intelligently choosing the portion of the HTML document that needs to be drawn. </p>  <p>So I suspected that this feature could interfere in the WebView's refreshing, but even calling the <a href="http://developer.android.com/reference/android/webkit/WebView.html#enableSlowWholeDocumentDraw()" rel="nofollow">enableSlowWholeDocumentDraw()</a> method, the WebView continues not working properly.</p>  <p>Someone would know explain the cause for this behavior? </p>