<p>I have written a <code>Python</code> class in attempt to write asynchronously with a buffer to gzip files. Here is the code for the class:</p>  <pre><code>import gzip from multiprocessing import Process  def _async_write(fp, string):      fp.write(string)      return   class AsyncBufWriter(object):                                                        def __init__(self, fname, char_buf_size):                                            self._length = 0                                                                 self._buf = ""                                                                   self._target_fp = gzip.open(fname, 'a')                                          self._char_buf_size = char_buf_size      self._async_proc = None                                                    def write(self, string):                                                             self._length += len(string)                                                      self._buf += string                                                               if self._length &gt;= self._char_buf_size:                                              if self._async_proc is not None:                                                     self._async_proc.join()                                                          self._async_proc = None                                                       self._async_proc = Process(target=_async_write,                                          args=(self._target_fp,str(self._buf)))                                   self._async_proc.start()                                                         self._length = 0                                                                 self._buf = ""                                                            def close(self):                                                                     if self._async_proc is not None:                                                     self._async_proc.join()                                                          self._async_proc = None                                                       if self._length &gt; 0:                                                                 self._target_fp.write(self._buf)                                             self._target_fp.close() </code></pre>  <p>The output file gives this upon gunzip:</p>  <pre><code>gzip: match_out.json.gz: invalid compressed data--format violated </code></pre>  <p>If you are interested in how the output file looks like, the first few lines in <code>VIM</code> are like this:</p>  <pre><code>1 ^_&lt;8b&gt;^H^H^D&lt;ce&gt;                                                                                              2 V^B&lt;ff&gt;/some_path/I/Have/in/Mysystem/Censored:D/match_out.json^@&lt;ec&gt;&lt;bd&gt;{w&lt;db&gt;6&lt;d6&gt;/&lt;fc&gt;&lt;ff&gt;&lt;fb&gt;)&lt;d0&gt;t&lt;9d&gt;&lt;e9&gt;&lt;cc&gt;&lt;f3# 3 ^Gt^]Q                                                                                                        4 &lt;e6&gt;&lt;da&gt;Sg^Ȉ&lt;dc&gt;(ow&lt;87&gt;&lt;c3&gt;^H=&lt;b7&gt;^Q&lt;a2&gt;^Ra&lt;b3&gt;&lt;cd&gt;&lt;c9&gt;6&lt;d1&gt;&lt;f9&gt;v&lt;c7&gt;&lt;dd&gt;&lt;fc&gt;^OZ'q&lt;a7&gt;&lt;93&gt;^F&lt;ee&gt;&lt;99&gt;Xc&lt;e8&gt;l^# 5 &lt;ed&gt;N&lt;83&gt;&lt;f8&gt;$&lt;88&gt;l&lt;b3&gt;&lt;e7&gt;~^O,(&lt;f8&gt;9=^[&lt;9d&gt;B&lt;93&gt; &lt;82&gt;&lt;ea&gt;V^\^M&lt;92&gt;&lt;b0&gt;9^\&lt;c4&gt;&lt;f0&gt;&lt;eb&gt;&lt;a6&gt;&lt;ed&gt;&amp;&lt;ab&gt;-=^Y$6J{^# 6 &lt;80&gt;&lt;cb&gt;&lt;fc&gt;&gt;^L&lt;d2&gt;&lt;c1&gt;I^Z&lt;b8&gt;}!&lt;ab&gt;&lt;8a&gt;&lt;e2&gt;^A&lt;ec&gt;G^Y^GH&lt;b3&gt;¿&lt;fc&gt;&lt;9e&gt;4h&lt;c5&gt;@.a^D&lt;bb&gt;G:):&lt;ef&gt;&lt;d9&gt;V&lt;90&gt;&lt;d7&gt;&lt;e7# 7 ^L&lt;c8&gt;~鷁^B&lt;82&gt;&lt;f6&gt;xgu&lt;bb&gt;]e&lt;a5&gt;7&lt;ce&gt;^S&lt;c4&gt;0pI8&lt;a7&gt;l^KY&lt;cb&gt;"&lt;85&gt;&lt;d6&gt;^B&lt;8e&gt;a&lt;86&gt;^@^S4&lt;8a&gt;&lt;94&gt;Y&lt;e4&gt;Le&lt;ce&gt;"&lt;ef&gt;# 8 6&lt;d0&gt;nc&lt;c2&gt;1�&lt;bc&gt;&lt;dc&gt;^\&lt;f8&gt;{&lt;b3&gt;&lt;e9&gt;^H&lt;d2&gt;s^[ŽG&lt;b3&gt;&lt;a2&gt;&lt;91&gt;&lt;dd&gt;!&lt;ac&gt;'&lt;eb&gt;Hh2^O&lt;b0&gt;([&lt;a1&gt;&lt;ed&gt;e&lt;84&gt;2~&lt;b9&gt;&lt;f7&gt;&lt;# 9 ^O&lt;fe&gt;&lt;98&gt;0&lt;ff&gt;2^WwP"j&lt;87&gt;-&lt;d7&gt;&lt;fe&gt;?&lt;b0&gt;/I&lt;f3&gt;߿6&lt;a6&gt;mK&lt;8c&gt;&lt;bb&gt;Ԕ`&lt;b2&gt;A&lt;88&gt;&lt;f8&gt;&lt;ef&gt;_^K^K%&lt;fe&gt;&lt;98&gt;&lt;e1&gt;:c^H&lt;92&gt;3# 10 ^[R&lt;&lt;f9&gt;M&lt;8a&gt;&lt;ca&gt;o&lt;b2&gt;&lt;91&gt;&lt;bd&gt;r&lt;f9&gt;&lt;e9&gt;ST&lt;93&gt;?^?&lt;c7&gt;}GO6&lt;c7&gt;&lt;cf&gt;'Tc&lt;ca&gt;&lt;e0&gt;&lt;dc&gt;T&lt;e8&gt;`ZV&lt;ee&gt;&lt;81&gt;nP&lt;ea&gt;^?iA&lt;aa# 11 l&lt;82&gt;&lt;e2&gt;^^[]&lt;87&gt;&lt;ac&gt;&lt;b4&gt;^Y&lt;9e&gt;&lt;85&gt;Q&lt;88&gt;&lt;c2&gt;^H&lt;fd&gt;+&lt;88&gt;&lt;e2&gt;f϶^C&lt;f4&gt;/^T&lt;a6&gt;h^P&lt;c7&gt;&lt;e8&gt;&lt;f8&gt;&lt;d1&gt;a&lt;f0&gt;ih{0K&lt;ed&gt;&lt;# 12 P&lt;d7&gt;&lt;dd&gt;9&lt;88&gt;Qs&lt;98&gt;D&lt;9b&gt;&lt;e8&gt;&lt;a8&gt;k^GP&lt;dd&gt;&lt;eb&gt;^AU^@-&lt;f4&gt;R&lt;d4&gt;^OO&lt;bb&gt;^C&lt;d4&gt;&lt;f4&gt;47L^P^P&lt;a4&gt;&lt;85&gt;f1^B&lt;8c&gt;          13 ^L^D^^^B&lt;fd&gt;&lt;86&gt;^W&lt;f0&gt;&lt;a4&gt;&lt;9f&gt;R &lt;87&gt;&lt;81&gt;{ʒ&lt;a6&gt;kn'&lt;9b&gt;U^M^S&lt;bd&gt;&lt;98&gt;&lt;e9&gt;&lt;9a&gt;۳f&lt;85&gt;&lt;c8&gt;ڈ&lt;8a&gt;&lt;ed&gt;^Z&lt;fc&gt;:&lt;a7&gt;3&lt;c2# 14 3&lt;e7&gt;mP&lt;d6&gt;vk&lt;f7&gt;&lt;c3&gt;n&lt;cd&gt;ogW^@#zk`ą&lt;94&gt;^R&lt;cf&gt;&lt;f1&gt;&lt;85&gt;&lt;98&gt;T&lt;e6&gt;&lt;c0&gt;&lt;e8&gt;&lt;b5&gt;W`&lt;b2&gt;^X&lt;a5&gt;A&lt;88&gt;b^D&lt;f3&gt;&lt;ea&gt;x^Up&lt;# 15 ["^MՌ^K`3=&lt;fe&gt;&lt;89&gt;r^S&lt;fd&gt;k9˵U�z&lt;8e&gt;^Bz)E&lt;b5&gt;^Q&lt;fb&gt;z^?w^^&lt;f6&gt;&lt;a8&gt;&lt;cuVm0L&lt;82&gt;&lt;c1&gt;)&lt;95&gt;HF^T^@^B^X+&lt;f2&gt;+k%&lt;ec&gt;p^# 16 3&lt;c9&gt;,..                        </code></pre>  <p>Any suggestions, comments, complaints, yelling?</p>