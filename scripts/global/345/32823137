<p>I am trying to open a <code>FileStream</code> only if the file exists, and do something else otherwise (not create it, so <code>FileMode.OpenOrCreate</code> is not applicable). </p>  <p>However, simply checking <code>File.Exists</code> before creating the <code>FileStream</code> will not prevent race conditions as the file could be deleted before the <code>FileStream</code> has a chance to be created, in which case a <code>FileNotFoundException</code> would be thrown.</p>  <p>Is there a way to achieve this "natively", without resorting to the following try catch wrapper:</p>  <pre><code>/// &lt;returns&gt;false if the file does not exists, true otherwise.&lt;/returns&gt; public static bool TryOpenFileStreamIfExists(string filePath, FileAccess fileAccess, FileShare fileShare, out FileStream fs, FileOptions fileOptions = FileOptions.None) {     try {         if (!File.Exists(filePath)) {             fs = null;             return false;         }         fs = new FileStream(filePath, FileMode.Open, fileAccess, fileShare, short.MaxValue, fileOptions);         return true;     }     catch (FileNotFoundException) {         fs = null;         return false;     } } </code></pre>