<p><a href="http://i.stack.imgur.com/WQTVY.png" rel="nofollow"><img src="http://i.stack.imgur.com/WQTVY.png" alt="enter image description here"></a></p>  <p>I hear that: FileReader is high-level stream, BufferedReader is low-level stream, and following this website :<a href="http://way2java.com/io/chaining-of-streams/" rel="nofollow">http://way2java.com/io/chaining-of-streams/</a></p>  <p>" Rules of chaining</p>  <p>If streams are chained just like that, you will land in compilation errors. Following rules are to be followed.</p>  <ul> <li>The input for a high-level stream may come from a low-level stream or another high-level stream. That is, in programming, the constructor of a high-level stream can be passed with an object of low-level or high-level.</li> <li>Being low-level, the low-level stream should work by itself. It is not entitled to get passed with any other stream" </li> </ul>  <p>But: </p>  <pre><code>` public class CopyLines { public static void main(String[] args) throws IOException {      BufferedReader inputStream = null;     PrintWriter outputStream = null;      try {         inputStream = new BufferedReader(new FileReader("xanadu.txt"));// not like above website say         outputStream = new PrintWriter(new FileWriter("characteroutput.txt"));          String l;         while ((l = inputStream.readLine()) != null) {             outputStream.println(l);         }     } finally {         if (inputStream != null) {             inputStream.close();         }         if (outputStream != null) {             outputStream.close();         }     } } </code></pre>  <p>}`</p>  <p>Someone tell me, why code above also correct</p>