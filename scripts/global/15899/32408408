<p>Here is a very simple class that initially sets a control as in edit mode or not</p>  <pre><code>Public Class DateTBx     Inherits DevComponents.WpfEditors.DateTimeInput     Private _TextBoxNewRecord As Boolean      Public Property IsNewRecord As Boolean         Get             Return _TextBoxNewRecord         End Get         Set(value As Boolean)             _TextBoxNewRecord = value         End Set     End Property     Protected Overrides Sub OnInitialized(e As System.EventArgs)         MyBase.OnInitialized(e)         VerticalAlignment = Windows.VerticalAlignment.Center         HorizontalAlignment = Windows.HorizontalAlignment.Left         BorderBrush = New SolidColorBrush(Colors.Silver)         ClearButtonVisibility = Windows.Visibility.Hidden          If _TextBoxNewRecord = True Then             BorderThickness = New Thickness(1)             IsEnabled = True         Else             BorderThickness = New Thickness(0)             IsEnabled = False         End If      End Sub   End Class </code></pre>  <p>Which is great until I want to change the IsNewRecord value, then of course it doesn't work. I know that using DependencyProperty is the way to go and have tried a few variations but still the light hasn't switched on - here is one attempt. A pointer would be appreciated.</p>  <pre><code>Public Class DateTBx Inherits DevComponents.WpfEditors.DateTimeInput Public Shared IsNewRecordProperty As DependencyProperty = DependencyProperty.Register("IsNewRecord", GetType(Boolean), GetType(DateTBx), New PropertyMetadata(New PropertyChangedCallback(AddressOf IsNewRecordChanged))) Private _TextBoxNewRecord As Boolean  Public Property IsNewRecord As Boolean     Get         Return _TextBoxNewRecord     End Get     Set(value As Boolean)         _TextBoxNewRecord = value     End Set End Property    Protected Overrides Sub OnInitialized(e As System.EventArgs)     MyBase.OnInitialized(e)     VerticalAlignment = Windows.VerticalAlignment.Center     HorizontalAlignment = Windows.HorizontalAlignment.Left     BorderBrush = New SolidColorBrush(Colors.Silver)     ClearButtonVisibility = Windows.Visibility.Hidden      If _TextBoxNewRecord = True Then         BorderThickness = New Thickness(1)         IsReadOnly = False     Else         BorderThickness = New Thickness(0)         IsReadOnly = True     End If  End Sub  Private Shared Sub IsNewRecordChanged(Sender As DependencyObject, e As DependencyPropertyChangedEventArgs)     Dim vControl As DateTBx = TryCast(Sender, DateTBx)     Dim vBoolean As Boolean = e.NewValue     If vBoolean = True Then         vControl.BorderThickness = New Thickness(1)         vControl.IsReadOnly = False     Else         vControl.BorderThickness = New Thickness(0)         vControl.IsReadOnly = True     End If End Sub </code></pre>  <p>End Class</p>