<p>I have a working sed command that replaces some coordinates in the <strong>matched</strong> block as seen below: The sed command looks like this and works in the <strong>bash</strong>:</p>  <pre><code>sed '/^matched.*$/ { n;n;n;s/img{[0-9]*,[0-9]*}/img{0,10}/;n;s/img{[0-9]*,[0-9]*}/img{20,30}/;n;s/img{[0-9]*,[0-9]*}/img{40,0}/  } ' file.txt </code></pre>  <p>It searches for a match and performs some <strong>s</strong>ubstitutions in the <strong>n</strong>ext lines <br> The problem is that contrary to the bash, if I type the first line of code and hit Enter in <strong>tcsh</strong>. The code gets executed immediately and returns missing '.  If I execute the same command with <strong>tcsh</strong> and remove all the linebreaks then I get <strong>sed: command garbled:</strong> (With bash sed version 4.2.2 on ubuntu it even works without newlines)</p>  <p>I know that the problem has to do with the new lines before and after the curly brackets { } that contain the block of sed code. But I don't know how to enter them there. <br> Also, I do not know how I would put those newline characters in a shell script to have the curly brackets on their separate lines.</p>  <p><strong>file.txt:</strong></p>  <pre><code>unmatched                                            {                                              "img{170,68}"                                              "img{817,252}"                                              "img{664,1096}"                                              "img{12,943}"                                            }  matched                                            {                                              "img{0,0}"                                              "img{0,111}"                                              "img{222,333}"                                              "img{444,0}"                                            } </code></pre>