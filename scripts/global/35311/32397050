<p>I created a web service in VS 2010, C#. It communicates with the client (iPad app) with JSON responses. It's basically setup as in <a href="http://www.codeproject.com/Articles/167159/How-to-create-a-JSON-WCF-RESTful-Service-in-sec" rel="nofollow">this</a> example.</p>  <p>When an exception occurs, a WebFaultException is thrown, so useful information is transmitted to the client in a JSON response. This works in the development environment.</p>  <p>Now when I publish this service on an IIS7 server and an error occurs, the service generates the JSON response as intended, but IIS7 appends an HTML document, which completely messes up everything. E.g.,</p>  <pre><code>{"BOerror":{"error_description":"Authorization error: This device (IP0014a) has not yet been released for use. Ask an administrator to do this.","error_number":4000}}&lt;!DOCTYPE html&gt; &lt;html&gt;     &lt;head&gt;         &lt;title&gt;Runtime Error&lt;/title&gt;         &lt;meta name="viewport" content="width=device-width" /&gt;         &lt;style&gt;          body {font-family:"Verdana";font-weight:normal;font-size: .7em;color:black;}           p {font-family:"Verdana";font-weight:normal;color:black;margin-top: -5px}          b {font-family:"Verdana";font-weight:bold;color:black;margin-top: -5px}          H1 { font-family:"Verdana";font-weight:normal;font-size:18pt;color:red }          ...  &lt;/html&gt; </code></pre>  <p>The header seems to have been left intact:</p>  <pre><code>Status Code: 401 Unauthorized Cache-Control: private Content-Type: application/json; charset=utf-8 Date: Fri, 04 Sep 2015 09:38:55 GMT Server: Microsoft-IIS/7.5 Transfer-Encoding: chunked X-AspNet-Version: 4.0.30319 X-Powered-By: ASP.NET </code></pre>  <p>How can I revert to the intended behaviour of just returning the JSON data with the error message?</p>  <p>I tried the following (to no avail):</p>  <ul> <li>The <code>&lt;customErrors&gt;</code> tag in the Web.Config.</li> <li>The <code>&lt;httpErrors errorMode="DetailedLocalOnly" existingResponse="PassThrough"&gt;</code> tag in the Web.Config.</li> </ul>  <p>Also one possibility seems to be to set <code>TrySkipIisCustomErrors</code> to false, but I don't generate my responses on such low level.</p>  <p><strong>Update</strong> It seems that error 401 (Unauthorized) is a special case. When I use e.g. 400 (Bad Request) instead, IIS doesn't mess up the response.</p>