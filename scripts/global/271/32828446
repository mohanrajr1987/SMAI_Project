<p>I'm documenting my library with Sphinx. And I have decorator <code>logic_object</code>:</p>  <pre><code>class logic_object:     """Decorator for logic object class.     """     def __init__(self, cls):         self.cls = cls         self.__doc__ = self.cls.__doc__ </code></pre>  <p>And I have <code>gravity</code> class that decorated by <code>logic_object</code>:</p>  <pre><code>@logic_object class gravity:     """Basic gravity object logic class.      :param float g: pixels of acceleration     :param float jf: jump force     """ #There is more not important code. </code></pre>  <p>My Sphinx <code>.rst</code> file is:</p>  <pre><code>Mind.Existence ======================== Classes, methods and functions marked with * aren't for usual cases, they are made to help to the rest of the library.  .. automodule:: Mind.Existence    :members:    :member-order: bysource </code></pre>  <p><code>logic_object</code> gets documented with <code>autodoc</code>, but <code>gravity</code> doesn't.</p>  <p>Why this happens and how to fix it?</p>