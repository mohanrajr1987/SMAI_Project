<p>How should read-only computed properties (say, of Ember.js Models) be documented as, in YUIdoc?</p>  <p>Say I have a simple model:</p>  <pre><code>/**  * Person model  * @class Person  * @extends Ember.Object  * @constructor  */ Person = Ember.Object.extend({   /**    * @property firstName    * @type String    */   firstName: null,    /**    * @property lastName    * @type String    */   lastName: null,    /**    * ? what goes here?    */   fullName: Ember.computed('firstName', 'lastName', function() {     return `${this.get('firstName')} ${this.get('lastName')}`;   }) }); </code></pre>  <p>What should <code>fullName</code> be marked as?</p>  <p>Is it a <code>@property</code>? And if so, should it be marked as <code>@readOnly</code>? I can see it both ways -- since it doesn't have a setter function, it's a read-only property. On the other hand, it's derived from editable/settable properties, so it can change as a result of user actions.</p>  <p>Or is it a <code>@method</code>? Because it not only uses other properties, but actually transforms them? The transforms part isn't as obvious in such a simple example, but say a computed property was something like <code>nameInitials</code>, which only returned the first letters of the first &amp; last name, etc?</p>  <p>Also: Am I correct to use the <code>@property</code> tag for Ember properties, and not the <code>@attribute</code> tag?</p>