<h2>Quick <a href="http://search.cpan.org/~dapm/perl-5.14.4/pod/perldoc.pod" rel="nofollow">perldoc</a> overview:</h2>  <p>When writing a Perl module you can document it with <a href="http://perldoc.perl.org/perlpod.html" rel="nofollow"><code>POD</code></a> style documentation.  Then to get an overview of how the module works you can just type this into the command line:</p>  <p><code>perldoc &lt;module_name&gt;</code></p>  <hr>  <h2>How do I do this with Python?</h2>  <p>I understand that Python has a standard form of documenting code using "docstrings" that is somewhat similar to Perl's POD style.  The information about the Python module can then be extracted using the <code>help()</code> function, but this is <em>far from elegant</em>.</p>  <p>First you need to start the Python interpreter, then import the module you want to get help for, and then finally you can use the <code>help()</code> function to get information about the module.</p>  <p><strong>example:</strong></p>  <pre><code>&gt;python # Prints Python version info &gt;&gt;&gt;import &lt;module_name&gt; &gt;&gt;&gt;help(&lt;module_name&gt;) # Prints documentation! </code></pre>  <hr>  <h2>Is there a better way?</h2>  <p>I would like a Python equivalent to the way this works for Perl:</p>  <p><code>pydoc &lt;module_name&gt;</code></p>  <p>but when I try this I get the following output:</p>  <pre><code>'pydoc' is not recognized as an internal or external command, operable program or batch file. </code></pre>