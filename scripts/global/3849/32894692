<p>for a given webapp -for example if facebook- , i want to split into different modules </p>  <p>each module are <strong>only depended on core</strong>, <strong>and unaware of anyother component</strong> -so that in future if i want to add or remove a feature all i have to do is develope this feature with its html and js and directives what ever inside it self, and just add dependency in core module and im good to go.</p>  <p>for example app will contain  1. wall "path = "/components/wall.js"  2. user profile " /components/profile.js"  3. chat "/components/chat.js"</p>  <p>all need to know current logged in user details, so may be the core module will handle this by exposing user details to $rootScope. "/core.js"</p>  <p>then entire app user must be logged in to access, so i will let core.js handle all the authentication</p>  <p><strong>EDIT TO NARROW DOWN Question</strong></p>  <pre><code>var core = angular.module("core", ['core.wall']);  var wall = angular.module("core.wall", []); </code></pre>  <p>Now core <strong>DEPENDE</strong> on wall, yet in my design , wall is the one that depends on core. yet at same time, <strong>core routing is altered by core.wall</strong> since wall should declare its own routing rules.</p>  <p>is this dependency injection doable ? </p>