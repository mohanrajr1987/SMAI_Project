<p>I'm coming from Java, and trying to turn the idea of a "utility class" into something that works in ES6.</p>  <p>In my file <code>numbers.js</code>, I can export a single function:</p>  <pre><code>export default function padDigits(number, digits) {     return new Array(Math.max(digits - String(number).length + 1, 0)).join(0) + number; } </code></pre>  <p>Which can then be imported in another file like:</p>  <pre><code>import padDigits from '../utils/numbers'; ... var paddedNum = padDigits(myNum, 2); </code></pre>  <p><strong>However:</strong> I would like for two things to be possible: I want to (1) export multiple functions from this single file, and (2) I would like for them to be accessible via a single import statement, and called via a namespace/classname prefix, like:</p>  <pre><code>import Numbers from '../utils/numbers'; ... var paddedNum = Numbers.padDigits(myNum, 2); var truncatedNum = Numbers.truncate(myNum, 3); </code></pre>  <p>But I'm having a hard time finding the right syntax to accomplish this.</p>