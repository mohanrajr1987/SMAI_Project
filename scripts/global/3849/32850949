<p>In Python we usually make a distinction between private and public attributes of classes, objects and modules, by prefixing private attributes with a <code>_</code> at the beginning of the name. So a module level function meant for private use would be named <code>_func</code>.</p>  <p>Is there such a convention for package level elements, i.e. modules? For example suppose I have several modules which are part of the public API (except for their private <code>_</code> prefixed components) and several modules which are totally for private use. Should I prefix the private ones with a <code>_</code>? Should I put them in a "<code>private</code>" sub-package?</p>  <p>Is there a convention for this?</p>