<p>I'm having a problem with average distance in this exercise. It should be close to the sqrt of N steps, but it's lower. Can you help me to find out where is my mistake?</p>  <p>2D random walk.  A two dimensional random walk simulates the behavior of a particle moving in a grid of points.  At each step, the random walker moves north, south, east, or west with probability 1/4,  independently of previous moves. Determine how far away (on average) the random walker is from the starting point after N steps.  (Theoretical answer: on the order of sqrt(N).) </p>  <pre><code>public class RandomWalk{     public static void main(String[] args){      int N = Integer.parseInt(args[0]);      double nextStep = 0;     double averageDistance = 0;     int COUNT = 1000;      for (int j = 0; j &lt; COUNT; j++){         int moveWest = 0;         int moveEast = 0;         int moveSouth = 0;         int moveNorth = 0;         double distance = 0;          for (int i = 0; i &lt; N; i++){         nextStep = Math.random()*4;         if (nextStep &lt;= 1) ++moveWest;           else if (nextStep &lt;= 2) ++moveEast;             else if (nextStep &lt;= 3) ++moveSouth;               else if (nextStep &lt;= 4)++moveNorth;                }          moveEast = moveEast - moveWest;         moveNorth = moveNorth - moveSouth;         distance = Math.sqrt((moveEast * moveEast) + (moveNorth * moveNorth));         averageDistance += distance;           System.out.println("Walker is " + distance + "\t steps away of from the starting point");         //System.out.println("Sqrt of N is " + Math.sqrt(N));      }     System.out.println("Average distance is " + averageDistance/COUNT + " steps away of from the starting point");     } } </code></pre>