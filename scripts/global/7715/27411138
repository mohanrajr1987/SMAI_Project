<p>I created a concept app that grabs three locations and displays them on a google map: My school, my home and my current location.</p>  <p>The app used to work but now it crashes whenever I ask for it to pull the current location. I have made no changes to the app in the last week but now it will not function properly. Oddly, it will still pull up my school and home.</p>  <pre><code>import android.app.Activity; import android.content.Context; import android.location.Criteria; import android.location.Location; import android.location.LocationManager; import android.os.Bundle; import android.view.View; import android.widget.Button; import android.location.Location; import com.google.android.gms.location.LocationListener; import com.google.android.gms.maps.CameraUpdate; import com.google.android.gms.maps.CameraUpdateFactory; import com.google.android.gms.maps.GoogleMap; import com.google.android.gms.maps.MapFragment; import com.google.android.gms.maps.model.LatLng; import com.google.android.gms.maps.model.MarkerOptions;     //Loosely based on an App tutorial from Youtube by ram goud.  public class MapActivity extends Activity implements android.location.LocationListener {      private final LatLng LOCATION_HOME = new LatLng(45.310488, -93.536989);     private final LatLng LOCATION_SCHOOL = new LatLng(44.972586, -93.283689);     protected LocationManager locationManager;     protected LocationListener locationListener;     protected boolean gps_enabled, network_enabled;     Button homeButton;     Button schoolButton;     Button currentLocation;     private double lat;     private double lng;     private final LatLng LOCATION_CURRENT = null;      private GoogleMap map;           @Override     protected void onCreate(Bundle savedInstanceState) {         super.onCreate(savedInstanceState);         setContentView(R.layout.activity_map);            map =((MapFragment) getFragmentManager().findFragmentById(R.id.map)).getMap();          map.setMyLocationEnabled(true);         map.getUiSettings().setRotateGesturesEnabled(false); //I dislike this feature. That is why it has been removed.   //      Criteria criteria = new Criteria(); //      String provider = locationManager.getBestProvider(criteria, gps_enabled); //      final Location myLocation = locationManager.getLastKnownLocation(provider);          locationManager = (LocationManager) getSystemService(Context.LOCATION_SERVICE);         locationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER, 0, 0, this);           homeButton = (Button)findViewById(R.id.home_button);         homeButton.setOnClickListener(new View.OnClickListener(){              @Override             public void onClick(View v) {                 map.setMapType(GoogleMap.MAP_TYPE_TERRAIN); //MAP_TYPE_TERRAIN sets the map displayed as just a normal Google Map image.                 CameraUpdate update = CameraUpdateFactory.newLatLngZoom(LOCATION_HOME, 14); // newLatLngZoom is for zooming. the # represents the distance. 21 furthest &amp; 1 being closest.                 map.animateCamera(update);                 map.addMarker(new MarkerOptions().position(LOCATION_HOME).title("Hello, Home"));             }          });         schoolButton = (Button)findViewById(R.id.school_button);         schoolButton.setOnClickListener(new View.OnClickListener() {              @Override             public void onClick(View v) {                 map.setMapType(GoogleMap.MAP_TYPE_SATELLITE); //MAP_TYPE_SATELLITE sets the map displayed as a sat image                 CameraUpdate update = CameraUpdateFactory.newLatLngZoom(LOCATION_SCHOOL, 16); // newLatLngZoom is for zooming. the # represents the distance. 21 furthest &amp; 1 being closest.                 map.addMarker(new MarkerOptions().position(LOCATION_SCHOOL).title("Hello, School"));                 map.animateCamera(update);              }         });          currentLocation = (Button)findViewById(R.id.current);         currentLocation.setOnClickListener(new View.OnClickListener() {              @Override             public void onClick(View v) {                 GoToCurrent();                  }           });       }      private void GoToCurrent() { //Method created to find current lat/long of user.         LocationManager locationManager = (LocationManager) getSystemService(LOCATION_SERVICE);         map.setMapType(GoogleMap.MAP_TYPE_HYBRID);         Criteria criteria = new Criteria();         String provider = locationManager.getBestProvider(criteria, gps_enabled);         Location myLocation = locationManager.getLastKnownLocation(provider);          double lati = myLocation.getLatitude();         double longi = myLocation.getLongitude();          LatLng latlng = new LatLng(lati, longi);          map.moveCamera(CameraUpdateFactory.newLatLng(latlng));          map.animateCamera(CameraUpdateFactory.zoomTo(20));          map.addMarker(new MarkerOptions().position(new LatLng(lati, longi)).title("You are here"));     }       @Override     public void onLocationChanged(Location location) {       }     @Override     public void onStatusChanged(String provider, int status, Bundle extras) {      }      @Override     public void onProviderEnabled(String provider) {         // TODO Auto-generated method stub      }      @Override     public void onProviderDisabled(String provider) {         // TODO Auto-generated method stub      }     } </code></pre>  <p>//This is the manifest, in case anyone is curious. </p>  <pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt; &lt;manifest xmlns:android="http://schemas.android.com/apk/res/android"     package="com.example.googlemaps"     android:versionCode="1"     android:versionName="1.0" &gt;      &lt;uses-sdk         android:minSdkVersion="11"         android:targetSdkVersion="19" /&gt;        &lt;uses-permission android:name="com.google.android.gms.version"/&gt;      &lt;uses-permission android:name="android.permission.INTERNET"/&gt;     &lt;uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/&gt;     &lt;uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/&gt;     &lt;uses-permission android:name="com.google.android.providers.gsf.permission.READ_GSERVICES"/&gt;     &lt;!-- The following two permissions are not required to use          Google Maps Android API v2, but are recommended. --&gt;     &lt;uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION"/&gt;     &lt;uses-permission android:name="android.permission.ACCESS_FINE_LOCATION"/&gt;      &lt;!-- The following two permissions are not required to use Google Maps Android API v2, but are recommended. --&gt;      &lt;application         android:allowBackup="true"         android:icon="@drawable/ic_launcher"         android:label="@string/app_name"         android:theme="@style/AppTheme" &gt;         &lt;activity             android:name=".MapActivity"             android:label="@string/app_name" &gt;             &lt;intent-filter&gt;                 &lt;action android:name="android.intent.action.MAIN" /&gt;                  &lt;category android:name="android.intent.category.LAUNCHER" /&gt;             &lt;/intent-filter&gt;         &lt;/activity&gt;          &lt;meta-data             android:name="com.google.android.maps.v2.API_KEY"             android:value="xxxxxxxxxxxxxxxxxxxxxx-xxxxxxxx" /&gt; &lt;!-- API key  --&gt;               &lt;meta-data                 android:name="com.google.android.gms.version"              android:value="@integer/google_play_services_version"/&gt;ï»¿     &lt;/application&gt;  &lt;/manifest&gt; </code></pre>