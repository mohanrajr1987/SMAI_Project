<p>I wrote a solution to some Project Euler problem. My algorithm works, outputs the solution, but never terminates.</p>  <p>Here is the program (compiled under MS VS2013):</p>  <pre><code>using bigint = __int64; using cache = std::map&lt;bigint, int&gt;;  auto collatz_length(bigint n, cache* memory)-&gt;int {         if (memory-&gt;empty()) {                 memory-&gt;emplace(1, 1);         }          auto search_result = decltype(memory-&gt;end()){};          if ((search_result = memory-&gt;find(n)) != memory-&gt;end()) {                 return search_result-&gt;second;         }          auto next = n;         auto length = 0;           do {                 next = next % 2 == 0 ?                         next / 2 :                         next * 3 + 1;                 length++;         } while (next &gt; n);          auto result = length + collatz_length(next, memory);          memory-&gt;emplace(n, result);         return result; }   auto project_eulerXXX()-&gt;void {         auto                  max = 1000 * 1000,                 longest = 0,                 current = -1,                 argmax = 1;         auto memo = new cache();          for (auto i = 2; i &lt;= max; i++) {                 if ((current = collatz_length(i, memo)) &gt; longest) {                         longest = current;                         argmax = i;                 }         }         std::cout &lt;&lt; "max for i = 1 to " &lt;&lt; max &lt;&lt; " is for " &lt;&lt; argmax &lt;&lt; std::endl;          delete memo; }  auto _tmain()-&gt;int {         project_eulerXXX();           std::cout &lt;&lt; "done!\n";         std::cin.get();         return 0; } </code></pre>  <p>The message <code>done!</code> is never written on the console. But the function <code>project_eulerXXX()</code> outputs the solution. I believe that the function is stucked somewhere around the delete (when I break, the debugger confirms that the function <code>project_eulerXXX()</code> did not terminate).</p>  <p>Note that</p>  <ul> <li>the issue remains when an <code>unique_prt</code> owns the <code>std::map</code></li> <li>the issue disappears when I comment the line with the delete </li> </ul>  <p>What is the matter with my program?</p>