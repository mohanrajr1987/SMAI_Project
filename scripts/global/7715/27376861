<p>I need a little help with making an xsl map file. I have an input. This containsa a list of some items:</p>  <pre><code>&lt;root&gt;     &lt;resultListIn&gt;         &lt;resultItemIn&gt;             &lt;a&gt;aaa&lt;/a&gt;             &lt;b&gt;bbb&lt;/b&gt;             &lt;c&gt;ccc1&lt;/c&gt;         &lt;/resultItemIn&gt;         &lt;resultItemIn&gt;             &lt;a&gt;aaa&lt;/a&gt;             &lt;b&gt;bbb&lt;/b&gt;             &lt;c&gt;ccc2&lt;/c&gt;         &lt;/resultItemIn&gt;         &lt;resultItemIn&gt;             &lt;a&gt;aab&lt;/a&gt;             &lt;b&gt;bbb&lt;/b&gt;             &lt;c&gt;ccc3&lt;/c&gt;         &lt;/resultItemIn&gt;         &lt;resultItemIn&gt;             &lt;a&gt;aaa&lt;/a&gt;             &lt;b&gt;bbc&lt;/b&gt;             &lt;c&gt;ccc4&lt;/c&gt;         &lt;/resultItemIn&gt;         &lt;resultItemIn&gt;             &lt;a&gt;aaa&lt;/a&gt;             &lt;b&gt;bbc&lt;/b&gt;             &lt;c&gt;ccc5&lt;/c&gt;         &lt;/resultItemIn&gt;     &lt;/resultListIn&gt; &lt;/root&gt; </code></pre>  <p>Now i would like to transform it into a structure that looks like a map: our „key” will be the the &lt; a> and &lt; b> elements (from each resultItem), and the value will be a list of &lt; c> elements from the every &lt; resultItem> that has the same &lt; a> and &lt; b> values.</p>  <p>So the output should look like (you can see the "cc1"+"cc2" and "cc4"+"cc5" values in the proper resultItem's &lt; cItemList>, because in the input the &lt; a> and &lt; b> elements were the same in the corresponding &lt; resultItem>):</p>  <pre><code>&lt;resultroot&gt;     &lt;resultListOut&gt;         &lt;resultItem&gt;             &lt;a&gt;aaa&lt;/a&gt;             &lt;b&gt;bbb&lt;/b&gt;             &lt;cItemList&gt;                 &lt;c&gt;cc1&lt;/c&gt;                 &lt;c&gt;cc2&lt;/c&gt;             &lt;/cItemList&gt;         &lt;/resultItem&gt;         &lt;resultItem&gt;             &lt;a&gt;aab&lt;/a&gt;             &lt;b&gt;bbb&lt;/b&gt;             &lt;cItemList&gt;                 &lt;c&gt;cc3&lt;/c&gt;             &lt;/cItemList&gt;         &lt;/resultItem&gt;         &lt;resultItem&gt;             &lt;a&gt;aaa&lt;/a&gt;             &lt;b&gt;bbc&lt;/b&gt;             &lt;cItemList&gt;                 &lt;c&gt;cc4&lt;/c&gt;                 &lt;c&gt;cc5&lt;/c&gt;             &lt;/cItemList&gt;         &lt;/resultItem&gt;     &lt;/resultListOut&gt; &lt;/resultroot&gt; </code></pre>  <p>Can you guys help me with this? I don’t need a whole xsl code, only some guidance, advice on how to where to start, what kind of algorithm should i write. I don’t really see how to implement this in xsl (and sadly i can’t use Java).</p>  <p>I tried to think through it with for-each structures but it's a big mess as i see it.</p>  <p>Thanks in advance, Tom</p>