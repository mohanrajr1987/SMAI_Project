<p>I am working on a function in a program to read an input from a user then, the function will check to see if that function exists and then runs it, but it is very buggy and the functions meant to be run, run twice.</p>  <pre><code>            //functions with a int and a string      std::map&lt;std::string, std::function&lt;void(int, string)&gt;&gt; functionsIS = {               {"printWordWithNumber", numberPlusWord},       };      //functions with no parameters      std::map&lt;std::string, std::function&lt;void()&gt;&gt; functionsNI = {              {"Help", userHelp},      };  void CommandCheck(std::string command){ int paramInt; string paramString; for (int i = 0; i &lt; functionsIS.size(); i = i++){     if (functionsIS[command]){         std::cout &lt;&lt; "Accessed '" &lt;&lt; command &lt;&lt; "' reading requirements..." &lt;&lt; std::endl;         std::cout &lt;&lt; "Enter paramater one (integer) : ";         std::cin &gt;&gt; paramInt;         std::cout &lt;&lt; std::endl&lt;&lt;"Enter paramater two (string)" &lt;&lt; std::endl;         std::cin.ignore();         std::getline(std::cin,paramString);         std::cout &lt;&lt; "running..." &lt;&lt; std::endl;         functionsIS[command](paramInt,paramString);     } } for (int i = 0; i &lt; functionsNI.size(); i = i++){     if (functionsNI[command]){         std::cout &lt;&lt; "Accessed '" &lt;&lt; command &lt;&lt; "' running..." &lt;&lt; std::endl;         functionsNI[command]();     } } } </code></pre>  <p>Here is version for you to run:</p>  <p>In source:</p>  <pre><code>#include &lt;iostream&gt; #include &lt;map&gt; #include &lt;windows.h&gt; #include &lt;string&gt; #include &lt;vector&gt; #include &lt;map&gt; #include &lt;functional&gt;  #include "userFunctions.h"//header file for functions  using namespace std;  std::string input; //functions with a int and a string std::map&lt;std::string, std::function&lt;void(int, string)&gt;&gt; functionsIS = {     { "printWordWithNumber", numberPlusWord }, }; //functions with no parameters std::map&lt;std::string, std::function&lt;void()&gt;&gt; functionsNI = {     { "Help", userHelp }, };  void CommandCheck(std::string command){ int paramInt; string paramString; for (int i = 0; i &lt; functionsIS.size(); i = i++){     if (functionsIS[command]){         std::cout &lt;&lt; "Accessed '" &lt;&lt; command &lt;&lt; "' reading requirements..." &lt;&lt; std::endl;         std::cout &lt;&lt; "Enter paramater one (integer) : ";         std::cin &gt;&gt; paramInt;         std::cout &lt;&lt; std::endl &lt;&lt; "Enter paramater two (string)" &lt;&lt; std::endl;         std::cin.ignore();         std::getline(std::cin, paramString);         std::cout &lt;&lt; "running..." &lt;&lt; std::endl;         functionsIS[command](paramInt, paramString);     } } for (int i = 0; i &lt; functionsNI.size(); i = i++){     if (functionsNI[command]){         std::cout &lt;&lt; "Accessed '" &lt;&lt; command &lt;&lt; "' running..." &lt;&lt; std::endl;         functionsNI[command]();     } } }  int main(){ do{     std::cout &lt;&lt; "Waiting For Command..." &lt;&lt; std::endl;     cin &gt;&gt; input;     CommandCheck(input); } while (input != "end");   return 0; } </code></pre>  <p>Create a header file called "functions" and paste this:</p>  <pre><code>#include &lt;iostream&gt; #include &lt;fstream&gt; #include &lt;string&gt; using namespace std;  void numberPlusWord(int number, std::string word){ std::cout &lt;&lt; word &lt;&lt; std::endl; std::cout &lt;&lt; number &lt;&lt; std::endl; }  void userHelp(){ std::cout &lt;&lt; "I can help!" &lt;&lt; std::endl; } </code></pre>