<p>I am calling a SalesForce API added as a WebReference in my Console Test application.</p>  <p>one of the parameter that it requires is of type object. To be precise, following is my code:</p>  <pre><code> SFObject sfObject = new SFObject             {                 type = "User",                 Item = new { ExternalId = 2}             }; </code></pre>  <p>I am passing the code above where API is expecting the Item's type to be <strong>object().</strong></p>  <p>When I make the final call, I am seeing following error:</p>  <blockquote>   <p>{"&lt;>f__AnonymousType0`1[System.Int32] cannot be serialized</p> </blockquote>  <p>Below is definition of SFObject as my <strong>"Add web reference"</strong> downloaded it.</p>  <pre><code>[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]     [System.SerializableAttribute()]     [System.Diagnostics.DebuggerStepThroughAttribute()]     [System.ComponentModel.DesignerCategoryAttribute("code")]     [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:sfobject.sfapi.successfactors.com")]     public partial class SFObject {          private object itemField;          private string typeField;          private System.Xml.XmlElement[] anyField;          /// &lt;remarks/&gt;         [System.Xml.Serialization.XmlElementAttribute("businessKeys", typeof(BusinessKeys))]         [System.Xml.Serialization.XmlElementAttribute("id", typeof(string))]         public object Item {             get {                 return this.itemField;             }             set {                 this.itemField = value;             }         }          /// &lt;remarks/&gt;         public string type {             get {                 return this.typeField;             }             set {                 this.typeField = value;             }         }          /// &lt;remarks/&gt;         [System.Xml.Serialization.XmlAnyElementAttribute()]         public System.Xml.XmlElement[] Any {             get {                 return this.anyField;             }             set {                 this.anyField = value;             }         }     } </code></pre>  <p>I searched around and seems like there is some problem with WCF serialization but I am not using WCf here. Is there any way that I can get around this problem?</p>