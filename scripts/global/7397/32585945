<p>Hej.</p>  <p>I'm trying to create a virtual force hierarchy overview in salesforce. </p>  <p>I'm still very new to SalesForce, so please forgive me if this a noob question.</p>  <p>I have 4 custom object (Institution, Department, Course and Class) with in a hierarchy (Institution one-to-many Department one-to-many Course one-to-many Class) all created with Master-Detail Relationship.</p>  <p>Apex:</p>  <pre><code>public class filter {     public static List&lt;Institution&gt; Institutions = new List&lt;Institution&gt;();      public static List&lt;Institution&gt; getInstitutions(){         string id = ApexPages.currentPage().getParameters().get('id');         list&lt;Institution__c&gt; institutionList = new list&lt;Institution__c&gt;();         if(id == null){             institutionList = [SELECT Id,Name FROM Institution__c];         }         else{             institutionList = [SELECT Id,Name FROM Institution__c WHERE id = :id];         }         for(Institution__c sf_institution : institutionList){             Institutions.add(new Institution(sf_institution));         }         System.debug(Institutions);         return Institutions;     }      public class Institution{         private String name;         private String id;         private List&lt;Department&gt; Departments = new List&lt;Department&gt;();          public String getName(){             return this.name;         }          public String getId(){             return this.id;         }          public List&lt;Department&gt; getDepartments(){             for(Department__c sf_department : [SELECT id, Name FROM Department__c WHERE Institution__r.Name = :name]){                 Departments.add(new Department(sf_department));             }             return Departments;         }          public Institution(Institution__c sf_institution){             this.name = sf_institution.name;             this.id = sf_institution.id;             System.debug(this);         }     }      public class Department{         private String name;         private String id;         private List&lt;Course&gt; Courses = new List&lt;Course&gt;();          public String getName(){             return this.name;         }          public String getId(){             return this.id;         }          public List&lt;Course&gt; getCourses(){             for(Course__c sf_course : [SELECT id, Name FROM Course__c WHERE Department__r.id = :id]){                 Courses.add(new Course(sf_course));             }             return Courses;         }          public Department(Department__c sf_department){             this.name = sf_department.name;             this.id = sf_department.id;             System.debug(this);         }     }      public class Course{         private String name;         private String id;         private List&lt;Class_L&gt; Class_s = new List&lt;Class_L&gt;();          public String getName(){             return this.name;         }          public String getId(){             return this.id;         }          public List&lt;Class_L&gt; getClass_s(){             for(Class__c sf_class_s : [SELECT id, Name FROM Class__c WHERE Course__r.id = :id]){                 Class_s.add(new Class_L(sf_class_s));             }             return Class_s;         }          public Course(Course__c sf_course){             this.name = sf_course.name;             this.id = sf_course.id;         }     }      public class Class_L{         private String name;         private String id;          public String getName(){             return this.name;         }          public String getId(){             return this.id;         }          public Class_L(Class__c sf_class_s){             this.name = sf_class_s.name;             this.id = sf_class_s.id;         }     } } </code></pre>  <p>I have created a virtual force that can show this.</p>  <p>Virtual force:</p>  <pre><code>&lt;apex:page controller="filter"&gt;     &lt;apex:pageBlock &gt;         &lt;apex:repeat value="{!Institutions}" var="i"&gt;             &lt;apex:outputLink value="https://eu5.salesforce.com/{!i.id}"&gt;&lt;apex:outputText value="{!i.name}"/&gt;&lt;/apex:outputLink&gt;&lt;br/&gt;             &lt;apex:repeat value="{!i.Departments}" var="d"&gt;                 -&lt;apex:outputText value="{!d.name}"/&gt;&lt;br/&gt;                 &lt;apex:repeat value="{!d.Courses}" var="co"&gt;                     --&lt;apex:outputText value="{!co.name}"/&gt;&lt;br/&gt;                     &lt;apex:repeat value="{!co.Class_s}" var="cl"&gt;                         ---&lt;apex:outputText value="{!cl.name}"/&gt;&lt;br/&gt;                     &lt;/apex:repeat&gt;                 &lt;/apex:repeat&gt;             &lt;/apex:repeat&gt;         &lt;/apex:repeat&gt;     &lt;/apex:pageBlock&gt; &lt;/apex:page&gt; </code></pre>  <p>Before i can upload it from my Sandbox Org to my Production Org, i need to make a test of this.</p>  <p>I tried like this:</p>  <pre><code>@isTest public class testFilter { static testmethod void test1(){     Institution__c Institution = new Institution__c();     Institution.Name = 'Institution';     insert Institution;      system.debug(Institution);     system.debug([SELECT name FROM Institution__c WHERE id = :Institution.id]);      Department__c Department = new Department__c();     Department.Name = 'Department';     Department.Institution__c = Institution.id;     insert Department;      system.debug(Department);      Course__c Course = new Course__c();     Course.Name = 'Course';     Course.Department__c = Department.id;     insert Course;      system.debug(Course);      Class__c Class_s = new Class__c();     Class_s.Name = 'Class_s';     Class_s.Course__c = Course.id;     insert Class_s;      system.debug(Class_s);       Test.startTest();     List&lt;object&gt; testList = filter.getInstitutions();     Test.stopTest();      system.debug(testList);      System.assertNotEquals(null, testList); } } </code></pre>  <p>It works, but i can only call "getInstitutions()". With don't give me 75% code coverage.</p>  <p>I can't do this:</p>  <pre><code>    Test.startTest();     List&lt;Institution&gt; testList = filter.getInstitutions();     Test.stopTest(); </code></pre>  <p>cause it don't know what "Institution" is.</p>  <p>I can't just add the code directly to the Production Org.</p>  <p>I tried change the code to something like this:</p>  <pre><code>public class Filter_Elements {     public static List&lt;Institution__c&gt; InstitutionList = new List&lt;Institution__c&gt;();      public static List&lt;Institution__c&gt; getInstitutionList(){         List&lt;Institution__c&gt; listInstitution = [SELECT name, id FROM Institution__c];         return listInstitution;     }      public static List&lt;Department__c&gt; DepartmentList = new List&lt;Department__c &gt;();      public static List&lt;Department__c&gt; getDepartmentList(){         List&lt;Department__c &gt; listDepartment = [SELECT name, id FROM Department__c ];         return listDepartment;     } } </code></pre>  <p>But i can't get the ID for the Institution__c when i have to make the list for the Department__c.</p>  <p>Am i missing something really basic? Can anyone help me please?</p>