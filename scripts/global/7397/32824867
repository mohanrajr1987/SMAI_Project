<p>In the mule flow, I have iterated upsertResults and add it into arraylist in the process phase, but sometimes its not showing exact result because its based on batch size it keep on changing I think. And also I couldn't access flowvars in Oncomplete phase. Hereby I added my mule configuration code,</p>  <pre class="lang-html prettyprint-override"><code>&lt;batch:job name="Student-Application-Upsert-Batch" max-failed-records="-1"&gt;     &lt;batch:threading-profile poolExhaustedAction="WAIT"/&gt;     &lt;batch:input&gt;         &lt;data-mapper:transform doc:name="CSV To List&amp;lt;Account&amp;gt;" config-ref="CSV_To_List_Account_" stream="true"/&gt;     &lt;/batch:input&gt;     &lt;batch:process-records&gt;         &lt;batch:step name="Upsert-Account"&gt;             &lt;batch:commit  doc:name="Batch Commit" streaming="true"&gt;                 &lt;sfdc:upsert config-ref="Salesforce__Basic_authentication" externalIdFieldName="Email_Address_Key__c" type="Account" doc:name="Upsert Account"&gt;                     &lt;sfdc:objects ref="#[payload]"/&gt;                 &lt;/sfdc:upsert&gt;                 &lt;foreach   doc:name="For Each Result Record" &gt;                     &lt;choice doc:name="Choice"&gt;                         &lt;when expression="#[payload.success == 'true']"&gt;                             &lt;set-variable variableName="Success" value="#[SuccessResult.add(message.payload)]" doc:name="Success Records"/&gt;                         &lt;/when&gt;                         &lt;otherwise&gt;                             &lt;set-variable variableName="Failure" value="#[FailureResult.add(message.payload)]" doc:name="Failure Records"/&gt;                         &lt;/otherwise&gt;                     &lt;/choice&gt;                 &lt;/foreach&gt;                 &lt;logger message="#####-------------&amp;gt;Failures: #[flowVars.FailureResult.size()]" level="INFO" doc:name="Log Failure Records"/&gt;                 &lt;logger message="#####-------------&amp;gt;Success: #[flowVars.SuccessResult.size()]" level="INFO" doc:name="Log Success Records"/&gt;                 &lt;object-to-string-transformer doc:name="Object to String"/&gt;                 &lt;file:outbound-endpoint path="${MULE.PROCESSED_FILES}" outputPattern="#[flowVars.UpsertLogName]" connector-ref="LogFileWritter" responseTimeout="10000" doc:name="Upsert Results Log File"/&gt;             &lt;/batch:commit&gt;         &lt;/batch:step&gt;         &lt;batch:step name="Log-Failures" accept-policy="ONLY_FAILURES"&gt;             &lt;logger message="Record with the following payload has failed. Payload:: #[message.payload], Loading Phase: #[failureExceptionForStep], Inside Failure the exception is :- #[getStepExceptions()]" level="INFO" doc:name="Log Failure"/&gt;             &lt;!-- &lt;foreach collection="#[payload]" doc:name="For Each"&gt;                 &lt;logger message="For earch resultset row Payload is #[message.payload], counter is #[flowVars['counter']]" level="INFO" doc:name="Logger"/&gt;             &lt;/foreach&gt;--&gt;             &lt;object-to-string-transformer doc:name="Object to String"/&gt;             &lt;file:outbound-endpoint path="${MULE.FAILURE_LOGS}" outputPattern="OnlyFailures_#[message.inboundProperties.originalFilename].txt"  responseTimeout="10000" doc:name="File" connector-ref="LogFileWritter"/&gt;         &lt;/batch:step&gt;     &lt;/batch:process-records&gt;     &lt;batch:on-complete&gt;         &lt;logger message="Batch Failed Records: #[payload.failedRecords]" level="INFO" doc:name="Logger"/&gt;         &lt;logger message="#####-------------&amp;gt;Failures: #[flowVars.FailureResult.size()]" level="INFO" doc:name="Failure Size Logger"/&gt;         &lt;logger message="Number of failed Records: #[payload.failedRecords] " level="INFO" doc:name="Failed Records" /&gt;         &lt;logger level="INFO" doc:name="Logger" message=" Number of loadedRecord: #[payload.loadedRecords]"/&gt;          &lt;logger message="Number of successful Records: #[flowVars.SuccessResult.size()]"    level="INFO" doc:name="Successful Records" /&gt;          &lt;logger message="ElapsedTime #[payload.getElapsedTimeInMillis()]" level="INFO" doc:name="Elapsed Time" /&gt;      &lt;/batch:on-complete&gt; &lt;/batch:job&gt; </code></pre>