<p>I am adding two jquery one for DataTable and Another for Range Slider, but my Range Slider is not showing. it is giving me this error</p>  <blockquote>   <p>Uncaught ReferenceError: Jquery is not defined.</p> </blockquote>  <p>My code is below and  It is having two range slider.</p>  <pre><code>&lt;apex:page id="page" controller="AttachmentListWithFilterController" sidebar="false" readOnly="true"&gt; &lt;apex:includeScript value="{!URLFOR($Resource.jQuery, 'js/jquery-1.6.2.min.js')}"/&gt;  &lt;apex:includeScript value="{!URLFOR($Resource.jQuery, 'js/jquery-ui-1.8.16.custom.min.js')}"/&gt; &lt;apex:stylesheet value="{!URLFOR($Resource.jQuery, 'css/ui-lightness/jquery-ui-1.8.16.custom.css')}"/&gt;   &lt;script src="https://ajax.googleapis.com/ajax/libs/jquery/2.0.2/jquery.min.js"&gt;&lt;/script&gt;   &lt;script src="https://cdn.datatables.net/1.10.9/js/jquery.dataTables.min.js"&gt;&lt;/script&gt;    &lt;link href="https://cdn.datatables.net/1.10.9/css/jquery.dataTables.min.css" rel="stylesheet"/&gt;   &lt;script type="text/javascript"&gt;              $(function () {             $("#example1").dataTable();                     });                &lt;/script&gt;           &lt;apex:actionStatus id="actStatusId" &gt;                 &lt;apex:facet name="start" &gt;                   &lt;img src="/img/loading.gif" /&gt;                                     &lt;/apex:facet&gt;             &lt;/apex:actionStatus&gt;   &lt;!-- &lt;c:waitScreen &gt;          &lt;img src="/img/loading32.gif" /&gt;          &lt;div style="font-size:150%;padding:5px"&gt;Please Wait....&lt;/div&gt;   &lt;/c:waitScreen&gt;     --&gt;      &lt;script type="text/javascript"&gt;          //This will load as soon as the page is ready and will setup our slider         var str;         $(document).ready(function(){           var i=0,a=0;            str = document.getElementById('{!$Component.form.selectedF}').value;            var b=document.getElementById('{!$Component.page.form.pb.slidervalue.idInputHiddenMax}').value;            console.log('Value of b'+b);              $("#slider-range").slider({ //This line creates a slider on the DIV specified, options are passed arguments, comma separated below                 range: true, //This give the slider and top and bottom                 min: 0, //Min value for slider                 max: b, //Max value for slider                  values: ['{!sSliderFieldMin }','{!sSliderFieldMax }'], //Start values for the slider                 slide: function(event, ui){ //This function executes every time slider is moved and applies the slider values to the inputHidden fields as well as the output below the slider                     document.getElementById('{!$Component.page.form.pb.slidervalue.idInputHiddenMin}').value = ui.values[0];                     document.getElementById('{!$Component.page.form.pb.slidervalue.idInputHiddenMax}').value = ui.values[1];                    $("#amountValue").html( + ui.values[0] + 'KB - ' + ui.values[1] + 'KB');                      //callfind();                     //console.log(i++);                 },                 stop:function(event,ui){console.log(ui);callfind();}                });              $("#amountValue").html( + $("#slider-range").slider("values", 0) + 'KB - ' + $("#slider-range").slider("values", 1) + 'KB');         });          function checkMethod(){           var i=0;            str = document.getElementById('{!$Component.form.selectedF}').value;          var b=document.getElementById('{!$Component.page.form.pb.slidervalue.idInputHiddenMax}').value;            console.log('Value of b'+b);              $("#slider-range").slider({ //This line creates a slider on the DIV specified, options are passed arguments, comma separated below                 range: true, //This give the slider and top and bottom                 min: 0, //Min value for slider                 max: b, //Max value for slider                  values: ['{!sSliderFieldMin }',b], //Start values for the slider                 slide: function(event, ui){ //This function executes every time slider is moved and applies the slider values to the inputHidden fields as well as the output below the slider                     document.getElementById('{!$Component.page.form.pb.slidervalue.idInputHiddenMin}').value = ui.values[0];                     document.getElementById('{!$Component.page.form.pb.slidervalue.idInputHiddenMax}').value = ui.values[1];                    $("#amountValue").html( + ui.values[0] + 'KB - ' + ui.values[1] + 'KB');                       //callfind();                     //console.log(i++);                 },                 stop:function(event,ui){console.log(ui);callfind();}                });              $("#amountValue").html( + $("#slider-range").slider("values", 0) + 'KB - ' + $("#slider-range").slider("values", 1) + 'KB');         }      &lt;/script&gt;           &lt;script type="text/javascript"&gt;            function selectAllCheckboxes(obj,receivedInputID){                 var inputCheckBox = document.getElementsByTagName("input");                 for(var i=0; i&lt;inputCheckBox.length; i++){                     if(inputCheckBox[i].id.indexOf(receivedInputID)!=-1){                         inputCheckBox[i].checked = obj.checked;                     }                 }             }               function selectThis(ele,id){                 if(ele.checked)                     str+=id;                 else                     str = str.replace(id,'');                 document.getElementById('{!$Component.form.selectedF}').value = str;             }        &lt;/script&gt;     &lt;apex:pageMessages &gt;&lt;/apex:pageMessages&gt;     &lt;apex:Form id="form"&gt;     &lt;apex:inputhidden id="selectedF" value="{!selectedFiles}"/&gt;        &lt;apex:actionFunction name="callfind" action="{!searchByRange}" reRender="PGTable" status="actStatusId" /&gt;    &lt;apex:pageBlock id="pb" &gt;    &lt;apex:pageblockSection title="Select Type" collapsible="false"&gt;                        &lt;apex:selectRadio value="{!Selected}"&gt;                 &lt;apex:actionSupport event="onchange" action="{!TakeOther}" reRender="PGTable,pblock,showOwner,showslider,slidervalue" onComplete="checkMethod();"/&gt;                    &lt;apex:selectoptions value="{!radioValues}" /&gt;             &lt;/apex:selectRadio&gt;    &lt;/apex:pageBlockSection&gt;      &lt;apex:pageBlockSection title="Filter" collapsible="true" columns="2" id="pblock"&gt;                 &lt;apex:panelGrid columns="3" id="showOwner"&gt;                     &lt;apex:outputLabel value="Owner" rendered="{!renderName4}"/&gt;                     &lt;apex:inputField value="{!attachmentToUser.OwnerId}" rendered="{!renderName1}"  id="AttachmentID"   required="false"/&gt;                     &lt;apex:inputField value="{!cv.OwnerID}" rendered="{!renderName2}" id="FileID" required="false"/&gt;                    &lt;apex:inputField value="{!documentToUser.AuthorId}" rendered="{!renderName3}"  id="DocumentID"  required="false"/&gt;                    &lt;apex:commandButton action="{!searchByOwner}" value="Submit" reRender="DemoRepeat" rendered="{!ShowSumbit}"/&gt;                   &lt;/apex:panelGrid&gt;             &lt;apex:pageBlockSectionItem id="showslider" &gt;                          &lt;div id="slider-range" style="font-size: 90%; margin-top: 0.5em;width:100%"&gt;&lt;/div&gt;                         &lt;div id="amountValue" style="text-align: center"&gt;&lt;/div&gt;                        &lt;apex:actionFunction action="{!searchByRange}" name="myFunction"  reRender="PGTable"/&gt;               &lt;/apex:pageBlockSectionItem&gt;                 &lt;/apex:pageBlockSection&gt;                    &lt;apex:pageBlockSection columns="1" id="slidervalue"&gt;               &lt;apex:inputhidden value="{!sSliderFieldMin}" id="idInputHiddenMin"/&gt;              &lt;apex:inputhidden value="{!sSliderFieldMax}" id="idInputHiddenMax"/&gt;             &lt;/apex:pageBlockSection&gt;                      &lt;center&gt; &lt;apex:commandButton value="Delete Selected" reRender="PGTable" action="{!deleteSelected}" rendered="{!ShowDelete}"/&gt;&lt;/center&gt;           &lt;table id="example1" class="table table-bordered table-striped"&gt;          &lt;thead&gt;             &lt;tr&gt;                 &lt;th&gt;Name&lt;/th&gt;                 &lt;th&gt;BodyLength&lt;/th&gt;                 &lt;th&gt;Created Date&lt;/th&gt;                 &lt;th&gt;Owner Name&lt;/th&gt;             &lt;/tr&gt;         &lt;/thead&gt;             &lt;tbody&gt;            &lt;apex:repeat value="{!listofRecords}" id="DemoRepeat" var="a"&gt;            &lt;tr&gt;     &lt;td&gt; &lt;apex:outputText value="{!a.Name}"/&gt;&lt;/td&gt;     &lt;td&gt; &lt;apex:outputText value="{!a.size}"/&gt;&lt;/td&gt;     &lt;td&gt; &lt;apex:outputText value="{!a.Mydate}"/&gt;&lt;/td&gt;     &lt;td&gt; &lt;apex:outputText value="{!a.OwnerName}"/&gt;&lt;/td&gt;     &lt;/tr&gt;     &lt;/apex:repeat&gt;    &lt;/tbody&gt;      &lt;/table&gt;  &lt;center&gt; &lt;apex:commandButton value="Delete Selected" reRender="PGTable" action="{!deleteSelected}" rendered="{!ShowDelete}"/&gt;&lt;/center&gt;       &lt;/apex:pageBlock&gt;      &lt;/apex:Form&gt; </code></pre>