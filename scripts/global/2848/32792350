<p>I have a function that returns the type <code>IO Bool</code>. I'd like to use this function as an argument to <code>filterM</code>, but what I actually want to do is to invert its output. I've tried something to the effect of <code>(not . f)</code>, but <code>not</code> isn't hip to the <code>IO</code> vibe. How can I invert an <code>IO Bool</code>? </p>  <p>Here's a minimal working example:</p>  <pre><code>#!/usr/bin/env runhaskell {-# LANGUAGE UnicodeSyntax #-} module Main where import Prelude.Unicode  userEnteredStr ∷ String → IO Bool userEnteredStr str = do     input ← getLine     return (input ≡ str)  -- doesn't work. How would I write this function?  --userDidntEnterStr ∷ String → IO Bool --userDidntEnterStr str = not . userEnteredStr  main = do result ← userEnteredStr "y"           print result </code></pre>  <p>Sorry if this is basic! I can't find a function on Hoogle with type <code>IO Bool -&gt; IO Bool</code> and haven't found anything in my web searching.</p>