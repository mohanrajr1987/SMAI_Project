<p>Im trying to implement a list of nodes on my own using pointers.  So ive this on my class as private:</p>  <pre><code>class cj_enters {  private: struct node{   node* next;   node* prev;   int info; };   node* first; node* last; node* actual;  int size;  public: . . }; </code></pre>  <p>And im trying to implement this method:</p>  <pre><code>bool cj_enters:: operator==(const cj_enters&amp; B) const{   bool cerca = true;   node* aux = first;   while(aux != NULL and cerca){       if(!B.conte(aux-&gt;info)) // this method is working and it tells if object B has the info somewhere of the current node info(aux).       {           cerca = false;       }       else aux = aux -&gt; next;   }  return cerca; } </code></pre>  <p>So I don't know why but this method is returning me strange values like 244 or so when I compare two of these objects, it doesn't matter if they are the same or they are not.</p>  <p>Why is that? Thanks</p>