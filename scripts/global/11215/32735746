<p>This code works fine, except that I dont' know where last return statement in onTouchListener gets its info: return gestureDetector.onTouchEvent(event);</p>  <p>Keep in mind, <strong>I dont' override onTouchEvent</strong> for my class! But somehow calling onTouchEvent for gestureDetector works, why? </p>  <pre><code>  public void onCreate(){   //.... other code here    gestureDetector = new GestureDetector(this, new myGestureDetector() );  image.setOnTouchListener(new View.OnTouchListener(){         @Override         public boolean onTouch(View v, MotionEvent event){             if(event.getAction() == MotionEvent.ACTION_DOWN){             }             else if(event.getAction() == MotionEvent.ACTION_UP){             }             return gestureDetector.onTouchEvent(event);         }     });    }             private class myGestureDetector extends SimpleOnGestureListener{     @Override     public boolean onDown(MotionEvent e) {     @Override     public boolean onDown(MotionEvent e) {         return true ;     }       public boolean onDoubleTapErjan( View v){         return true ;     }      @Override     public boolean onDoubleTap(MotionEvent e){          return true ;     } } </code></pre>  <p>Does </p>  <blockquote>   <p>gestureDetector.onTouchEvent()</p> </blockquote>  <p>get its info about events directly from this private class myGestureDetector? But <strong>I don't have</strong> onTouchEvent in my private class!</p>  <p>This is a mystery for me, help me resolve it</p>