<p>I'm coding a little test application that uses the <code>Canvas</code> class in Scala with <code>scalafx</code>. The problem is with:</p>  <pre><code>gui.canvas.handleEvent(MouseEvent.MouseClicked){      a: MouseEvent =&gt; {           println("Mouse pos:" + a.sceneX+ "  " + a.sceneY)      }       } </code></pre>  <p>Throwing the error:</p>  <pre><code>[error] E:\dev\sg\src\main\scala\Test.scala:27: type mismatch; [error]  found   : scalafx.scene.input.MouseEvent =&gt; Unit [error]  required: _2.HandlerMagnet[javafx.scene.input.MouseEvent,?]  where val _2: scalafx.scene.canvas.Canvas [error]       a: MouseEvent =&gt; { [error]                     ^ </code></pre>  <p>I don't get why this exact same snippet compiles when it appears in the method <code>setupGraphics</code> but NOT in when it's in the <code>Main</code> object's code.</p>  <p>BTW, having browsed quite a bit of ScalaFX code, I'm getting a bit dizzy because I've seen lots different ways to bind to an event, there's <a href="https://github.com/scalafx/scalafx/blob/master/scalafx-demos/src/main/scala/scalafx/event/RectangleDrawingDemo.scala" rel="nofollow">the one I'm using</a>, <a href="http://stackoverflow.com/questions/21836133/scalafx-event-handler-with-first-class-function">setting the onMouseClicked variable</a> (with and without a first class function), <a href="https://github.com/scalafx/ScalaFX-Tutorials/blob/master/event-filters/src/main/scala/event_filters/DraggablePanelsExample.scala" rel="nofollow">using filterEvent</a>. Also, for each you can use an anonymous function or create an event handler object.</p>  <p>Of all those, this is the only one that worked in this example; trying to create an <code>EventHandler[MouseEvent]</code> and override <code>handle()</code> also fails in this case.</p>  <p>I'm using Scala 2.10.5  </p>  <p><strong>Full Source:</strong></p>  <pre><code>object Test {   import scalafx.Includes._   import scalafx.application.JFXApp   import scalafx.application.JFXApp.PrimaryStage   import scalafx.stage.Stage    import scalafx.scene.Scene   import scalafx.scene.canvas.Canvas   import scalafx.scene.canvas.GraphicsContext    import scalafx.scene.input.MouseEvent   import scalafx.event.EventHandler      class GUI(val canvas:Canvas     ,val stage: Stage     ,val gc: GraphicsContext){}    object Main extends JFXApp {      var gui=setupGraphics()      gui.canvas.handleEvent(MouseEvent.MouseClicked){       a: MouseEvent =&gt; {         println("Mouse pos:" + a.sceneX+ "  " + a.sceneY)       }     }      def setupGraphics():GUI={       val canvas = new Canvas(400, 400)       canvas.translateX=0       canvas.translateY=0       val gc = canvas.graphicsContext2D        canvas.handleEvent(MouseEvent.MouseClicked){         a: MouseEvent =&gt; {           println("Mouse pos:" + a.sceneX+ "  " + a.sceneY)         }       }        stage = new PrimaryStage {         title = "asd"         height = 600         width = 800         scene=new Scene{content=canvas}       }        return new GUI(canvas,stage,gc)     }       }     } </code></pre>