<p>I have a c++ class (File2.cpp) and a c++ file (File1) containing several utility functions, one of them (onEvent) is going to be triggered once a message is received from another process. The c++ file and the class are in different namespaces. I need to call a function in the c++ (eventHappened) once the function of the c++ file is triggered. I tried this but if doesn't compile:</p>  <p>File1.cpp contains utility functions it is not defined as a class and it should be kept like that. onEvent() is going to be called by another class.</p>  <pre><code>//File1.h Class Y::A; Y::A* currClass; namespace X {   public void RegisterClass(Y::A* a);   public void onEvent(); }  //File1.cpp #include "File1.h" public void RegisterClass(Y::A* a) {    currClass = a; }  public void onEvent() {   currClass-&gt;eventHappened();  } </code></pre>  <p>In addition to what is written, File2.cpp uses utility functions from File1.cpp in other functions.</p>  <pre><code>//File2.h #include "File1.h" namespace Y {   public void functionA();   public void eventHappened(); } //File2.cpp #include "File2.h" Class A{   public void functionA(){    X::registerClass(this);     }   public void eventHappened() {         //Do something   } } </code></pre>  <p>Is it possible to perform what I am trying to do ? How can I fix it ?</p>