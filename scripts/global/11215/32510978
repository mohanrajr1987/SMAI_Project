<p>My navbar dropdown components use inline CSS. I have two components for the dropdown, <code>&lt;NavbarDropdown&gt;</code> and <code>&lt;DropdownMenu&gt;</code>. </p>  <p>This is how it looks in the app. </p>  <pre><code>&lt;NavbarDropdown name="Dropdown"&gt;     &lt;DropdownMenu menuItems={options}/&gt; &lt;/NavbarDropdown&gt; </code></pre>  <p>Below is my code and it works fine. But I was wondering if this is a good way to do it ? Or are there any better ways to implement the eventhandlers in React ? For example, use react lifecycle methods (componentDidMount &amp; componentWillUnmount) for eventhandling and mount or unmount <code>&lt;DropdownMenu&gt;</code> component everytime user clicks ? </p>  <p>Any suggestions will be greatly appreciated. </p>  <pre><code>import React from 'react'; import Radium from 'radium';  @Radium export default class NavbarDropdown extends React.Component {  displayName = 'Navigation bar dropdown button'  static propTypes = {     name: React.PropTypes.string }  state = {   open: false }  getStyles = () =&gt; {   return {....} // css  renderChildren = () =&gt; {   const {children} = this.props;    const newChildren = React.Children.map(children, (child) =&gt; {     return React.cloneElement(child,         {            open: this.state.open         });   });   return newChildren; }  dropdownToggle = (e) =&gt; {   e.preventDefault();    this.setState(     {open: true}   );    document.addEventListener('click', this.handlePageClick); }  handlePageClick = () =&gt; {   this.setState(     {open: false}   );    document.removeEventListener('click', this.handlePageClick); }  render() {   const {style, name} = this.props;   const defStyle = this.getStyles();   return (     &lt;li ref= "dropdown" style={[defStyle.dropdown, style &amp;&amp; style]}&gt;         &lt;a ref="link" onClick={this.dropdownToggle} href="#" style={[defStyle.link]}&gt;             {name}{' '}             &lt;b style={[defStyle.caret]}&gt;&lt;/b&gt;         &lt;/a&gt;         {this.renderChildren()}     &lt;/li&gt;   ); } } </code></pre>  <p>Below is the DropdownMenu component.</p>  <pre><code>import React from 'react'; import Radium from 'radium';  @Radium export default class DropdownMenu extends React.Component {     displayName = 'Dropdown menu items'      static propTypes = {         menuItems: React.PropTypes.array,         style:     React.PropTypes.object,         open:      React.PropTypes.bool     }      getStyles = () =&gt; {       const {open} = this.props;       let styles = {           menu: {...}, // CSS           link: {...} // CSS       };       if (open) {         styles.menu.display = 'block';       }       if (!open) {         styles.menu.display = 'none';       }       return styles;     }      render() {       const defStyle = this.getStyles();       const {menuItems, style, optionSelect} = this.props;       return (         &lt;ul style={[defStyle.menu, style &amp;&amp; style]}&gt;           {             menuItems.map(item =&gt; {               return (                 &lt;li key={menuItems.indexOf(item)}&gt;                     &lt;a key={item.name} style={[defStyle.link]} href={item.href}&gt;{item.name}&lt;/a&gt;                 &lt;/li&gt;               );             })           }         &lt;/ul&gt;       );     } } </code></pre>