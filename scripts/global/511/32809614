<p>I have an <code>NSMutableArray</code> property in a class where I keep reference to some managed objects of an <code>NSManagedObjectContext</code> which I called <code>mainContext</code> and that is associated to main queue. In this same class, I create a <code>privateContext</code> in a private queue and I set it as a child of the <code>mainContext</code>.</p>  <p>I'd like to pass the objects in my <code>NSMutableArray</code> (<code>self.entities</code>), which belong to the <code>mainContext</code>, to its child <code>privateContext</code> and, at the same time, keep a reference of such objects once they are in the <code>privateContext</code> in another array (<code>self.tempEntities</code>). I want to keep these references because I'll insert new objects later in <code>privateContext</code> and I'd need to easily know which of the objects that are at that moment in <code>privateContext</code> came from its parent <code>mainContext</code>.</p>  <p>I'm not sure if this way of doing this is correct:</p>  <pre><code>for (MyEntity *entity in self.entities) { // this is main thread    [self.privateContext performBlockAndWait: ^{       [self.privateContext objectWithID:entity.objectID];       [self.tempEntities addObject:entity];     }]; } </code></pre>  <p>Or this will cause any problem later. Or maybe is there another and better way to do this?</p>  <p>Thanks</p>  <p><strong>EDIT:</strong> How will be the parent context updated in this case when the child is saved? I mean: the purpose of passing to the child context the objects in the parent, in my scenario, is that I need to compare in the child context its new objects with the ones that were passed from the parent. Then, maybe I need to delete some objects that came from the parent, and/or replace some of the objects that came from the parent with some of the news in child, and/or insert some of the new objects in child into the parent.</p>  <p>Would calling <code>[self.privateContext save:nil];</code> replace all objects in parent context with the objects in the child, or how is the merge handled?</p>  <p>Thanks again</p>