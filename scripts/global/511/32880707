<pre><code>try{                     updateForAllPermissions(date, center, user, books, false); } catch(Exception e) {     logger.error(e, e);     continue; } file.renameTo(new File(dir.getAbsolutePath()+"/"+file.getName())); </code></pre>  <p>I have this code where i want whenever updateForAllPermissions() fails then code inside catch block should be implemented . But the problem is updateForAllPermissions() is a method which is using multithreading . So even in the background updateForAllPermissions() throws exception, the last step outside catch block gets executed. In the debug mode i can see, once the updateForAllPermissions() starts, the control of code comes to last step and once i bypass it the exception is thrown from the method updateForAllPermissions() . I want the method updateForAllPermissions to finish first and then the future steps should be decided on the basis of it's outcome.  All i can attribute is this non linear flow of code control is due to multi threading.</p>