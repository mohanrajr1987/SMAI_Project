<p>I am doubt with that , in Java language, we need hold the lock, before we await some condition to be satisfied.</p>  <p>for example, int java monitor lock:</p>  <pre><code>synchronized(lock){    System.out.println("before lock ...");    lock.wait();    System.out.println("after lock ..."); } </code></pre>  <p>or the cucurrent utils.</p>  <pre><code>Lock lock = new ReentrantLock(); Condition cond = lock.newCondition();  lock.lock(); try{      System.out.println("before condition ...");      cond.await();      System.out.println("after condition ..."); }catch(Exception e){      e.printStackTrace(); }finally{      lock.unlock(); } </code></pre>  <p>so, why we can't await, without hold the lock ?</p>  <p>if that just because of Java, other language works differ ?</p>  <p>I hope you can explain the reason after the design, but not only for JAVA-SPEC definition. </p>