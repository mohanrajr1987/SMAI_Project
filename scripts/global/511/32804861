<p>I am using ExecutorCompletionService to submit few tasks. I want to then wait for max, say 5 seconds, and then stop processing. </p>  <pre><code>ExecutorService executorService = Executors.newFixedThreadPool(10);      CompletionService&lt;String&gt; completionService = new ExecutorCompletionService&lt;String&gt;(             executorService); List&lt;Callable&lt;String&gt;&gt; callables = createCallables(); //each callable sleeps randomly between 1-10 seconds and then prints the thread name for (Callable&lt;String&gt; callable : callables)      taskCompletionService.submit(callable); for (int i = 0; i &lt; callables.size(); i++) {     Future&lt;String&gt; result = completionService.take();        System.out.println(result.get());  } </code></pre>  <p>Now I don't want to wait for more than 5 seconds for all the tasks to be completed. I just want to collect results of tasks that are done within 5 seconds. How can I achieve that?  </p>  <pre><code>executorService.shutdown(); executorService.awaitTermination(5, TimeUnit.SECONDS); </code></pre>  <p>I have used <code>shutdown</code> and <code>awaitTermination</code> on <code>executorService</code>, but my main thread still waits for all submitted tasks to complete and it takes 10 seconds for all the tasks to be completed and prints each thread's name. How can I stop processing in 5 seconds?</p>