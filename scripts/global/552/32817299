<p>Our app runs several different AppDomains in order to work around a limitation in a 3rd party API we're using.</p>  <p>Intermittently (say 1 in 8 times) when we attempt to unload the AppDomain, using <code>AppDomain.Unload(appDomain)</code>, the entire app hangs with no warning, and does not respond to SIGQUIT, making it difficult to debug the issue.</p>  <p>There is no unmanaged code in our codebase, though it's possible that one of the libraries (including Npgsql) we're using may contain some.</p>  <p>Googling the issue shows a number of references to hangs on AppDomain.Unload, but these have supposedly been fixed in the version of  Mono we're using (4.03).</p>  <p>Running on Ubuntu 12.04.</p>  <p>Any help / pointers greatly appreciated!</p>  <p>Simplified version of the code below:</p>  <pre><code>AppDomain appDomain = null; try {     appDomain = AppDomain.CreateDomain("some unique name");     batchProcessor = (MarshaledProcessor)appDomain.CreateInstanceAndUnwrap(         MarshalledProcessorType.Assembly.FullName,         MarshalledProcessorType.FullName);          batchProcessor.ProcessItems(); } catch (Exception exception) {     Log.Error("some error", exception); } finally {     try {         if (batchProcessor != null) {             batchProcessor.Dispose();         }         if (appDomain != null) {             AppDomain.Unload(appDomain);         }     } catch (Exception exception) {         Log.Error(exception);     } } </code></pre>