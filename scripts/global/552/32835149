<p>From what I've read I would expect the following JavaScript code to log "All is well", but instead it hits the error case:</p>  <p><div class="snippet" data-lang="js" data-hide="false"> <div class="snippet-code"> <pre class="snippet-code-js lang-js prettyprint-override"><code>var audio = document.createElement('audio'); var ctx = new window.AudioContext(); var source = ctx.createMediaElementSource(audio); audio.src = 'http://www.mediacollege.com/audio/tone/files/440Hz_44100Hz_16bit_30sec.mp3'; // As @padenot mentioned, this is the number of channels in the source node, not the actual media file var chans = source.channelCount; if(chans == 1) {   snippet.log("All is well"); } else {   snippet.log("Expected to see 1 channel, instead saw: " + chans) }</code></pre> <pre class="snippet-code-html lang-html prettyprint-override"><code>&lt;!-- Provides the `snippet` object, see http://meta.stackexchange.com/a/242144/134069 --&gt; &lt;script src="http://tjcrowder.github.io/simple-snippets-console/snippet.js"&gt;&lt;/script&gt;</code></pre> </div> </div> </p>  <h2>What's going on?</h2>  <p>Is this, perhaps a CORS issue? Is there some other way to determine that this mp3 file is, in fact, mono?</p>  <p><strong>Edit:</strong> As @padenot mentioned, this is the number of channels in the source node, not the actual media file</p>  <h2>Clarification</h2>  <p>I would love a solution that avoids having to decoding the entire audio file in memeory. <code>decodeAudioData()</code>, in my experience, requires decoding the entire mp3 at one, which can take seconds. <code>createMediaElementSource()</code> allows you to stream the media and decode as you listen.</p>