<p>I recently had a <a href="http://superuser.com/questions/979504/load-dialog-disk-access-slowdown-on-windows-10">huge struggle with a disk I/O timeout bug</a>, which eventually came down to the fact that <code>System.IO.Directories.GetLogicalDrives()</code> and <code>System.Environment.GetLogicalDrives()</code> were returning drive <code>A:\</code>, which did not actually exist.  I understand (to an extent) that floppy controllers are not actually smart enough to know that physical media is not connected, so that gets a pass in my book.  </p>  <p>However, I'm still getting a ghostly drive <code>H:\</code> that does not actually exist.  Currently my solution is to pass all the drives returned by <code>GetLogicalDrives()</code> to <code>Directory.Exists()</code> to check them before actually accessing them, but this seems a bit hack-y.  </p>  <p>(I unfortunately can't use <code>DriveInfo</code> as this is actually within Unity, and Mono for some unknowable reason did not implement <code>DriveInfo</code> on the Windows platform in the version that I'm bound to.)</p>  <p>So my question is two-fold:</p>  <ol> <li><p>Does anyone have an explanation why Windows would return non-existent drives in a function that is pretty obviously requesting drives that exist?</p></li> <li><p>Are there any options besides checking the path or using <code>DriveInfo</code> to test if a drive actually exists?</p></li> </ol>