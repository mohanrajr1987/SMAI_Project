<p><a href="http://i.stack.imgur.com/KOvHV.png" rel="nofollow"><img src="http://i.stack.imgur.com/KOvHV.png" alt="enter image description here"></a></p>  <blockquote>   <p>In UIPageViewController, in First Page Take UINavigationBar add it as Top Bar. Add Some title as Custom LeftBarButtonItem.       When i Moved the first page the title need to move to navigationBar.</p> </blockquote>  <p><a href="http://i.stack.imgur.com/VMSXP.png" rel="nofollow"><img src="http://i.stack.imgur.com/VMSXP.png" alt="enter image description here"></a></p>  <blockquote>   <p>The PageContentViewController is like this:</p> </blockquote>  <pre><code>#import &lt;UIKit/UIKit.h&gt;  @interface PageContentViewController : UIViewController{     UINavigationBar *topBar; } @property (weak, nonatomic) IBOutlet UIImageView *backgroundImageView; @property (weak, nonatomic) IBOutlet UILabel *titleLabel; //@property (weak, nonatomic) UINavigationBar *topBar; @property NSUInteger pageIndex; @property NSString *titleText; @property NSString *imageFile;  - (UIView*)getBarButtonItemView; - (UINavigationItem*)getNavigationItemView;  @end #import "PageContentViewController.h"  #define  kSubTitleTag 101 #define  kDefaultColor [UIColor colorWithRed:34.0/255.0 green:97.0/255.0 blue:221.0/255.0 alpha:1]  @interface PageContentViewController ()  @end  @implementation PageContentViewController //@synthesize topBar;  - (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil {     self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];     if (self) {         // Custom initialization     }     return self; }  - (void)viewWillAppear:(BOOL)animated{     [super viewWillAppear:animated];     } - (void)viewDidAppear:(BOOL)animated{     [super viewDidAppear:animated];      topBar.frame = CGRectMake(0, self.parentViewController.parentViewController.navigationController.navigationBar.frame.origin.y+self.parentViewController.parentViewController.navigationController.navigationBar.frame.size.height, CGRectGetWidth(self.parentViewController.parentViewController.navigationController.navigationBar.frame), CGRectGetHeight(self.parentViewController.parentViewController.navigationController.navigationBar.frame)); }  - (void)viewDidLoad {     [super viewDidLoad];      NSArray *coloursArray = @[[UIColor whiteColor],[UIColor whiteColor],[UIColor whiteColor],[UIColor whiteColor],[UIColor whiteColor]];     self.backgroundImageView.image = [UIImage imageNamed:self.imageFile];     self.titleLabel.text = self.titleText;      NSInteger index = (NSInteger)_pageIndex;     self.view.backgroundColor = coloursArray[index];      NSLog(@"pageIndex : ***************** %lu ******************",(unsigned long)_pageIndex);      if (_pageIndex == 0) {         topBar = [[UINavigationBar alloc] initWithFrame:CGRectMake(0, self.navigationController.navigationBar.frame.origin.y+self.navigationController.navigationBar.frame.size.height, CGRectGetWidth(self.navigationController.navigationBar.frame), CGRectGetHeight(self.navigationController.navigationBar.frame))];         topBar.autoresizingMask = UIViewAutoresizingFlexibleWidth;         topBar.autoresizesSubviews = YES;         [self.view addSubview:topBar];         [self.view bringSubviewToFront:topBar];          UINavigationItem *item  = [[UINavigationItem alloc] init];           UIBarButtonItem *leftbutton = [[UIBarButtonItem alloc]                                        initWithTitle:@"Flower &amp; Gifts"                                        style:UIBarButtonItemStylePlain                                        target:self                                        action:@selector(test:)];          item.leftBarButtonItem = leftbutton;         [topBar setItems:[NSArray arrayWithObjects:item, nil]];      }      if([self respondsToSelector:@selector(edgesForExtendedLayout)]){         self.edgesForExtendedLayout=UIRectEdgeNone;     }      [self.view layoutSubviews];  }  - (UINavigationItem*)getNavigationItemView{     return  (UINavigationItem*)[topBar.items objectAtIndex:0]; }   - (UIView*)getBarButtonItemView{      UINavigationItem *item =(UINavigationItem*)[topBar.items objectAtIndex:0];      UIBarButtonItem *leftBtn = item.leftBarButtonItem;     UIView *barBtnView = [self getBarItemView:leftBtn];      return barBtnView; }  -(UIView*) getBarItemView :(UIBarButtonItem *)item{     UIView *view = [item valueForKey:@"view"];     return view; }  - (void)showListingTitle{      UINavigationItem *item =(UINavigationItem*)[topBar.items objectAtIndex:0];     UIBarButtonItem *leftBtn = item.leftBarButtonItem;     leftBtn.enabled = YES;     leftBtn.title =@"Flower &amp; Gifts";  }  - (void)hideListingTitle:(id)sender {      NSLog(@"%@",topBar.items);     UINavigationItem *item =(UINavigationItem*)[topBar.items objectAtIndex:0];     UIBarButtonItem *leftBtn = item.leftBarButtonItem;     leftBtn.enabled = NO;     leftBtn.title =@"";  }   - (void)didReceiveMemoryWarning {     [super didReceiveMemoryWarning];     // Dispose of any resources that can be recreated. }  - (void)test:(id)sender{  } @end   #import &lt;UIKit/UIKit.h&gt; #import "PageContentViewController.h"  @interface ViewController : UIViewController &lt;UIPageViewControllerDataSource,UIScrollViewDelegate&gt;{     BOOL flag;     NSInteger pageIndex;  }  - (IBAction)startWalkthrough:(id)sender; @property (strong, nonatomic) UIPageViewController *pageViewController; @property (strong, nonatomic) NSArray *pageTitles; @property (strong, nonatomic) NSArray *pageImages; @property (nonatomic, assign) CGFloat lastContentOffset; @end  #import "ViewController.h"  #define  kSubTitleTag 101 #define  kDefaultColor [UIColor colorWithRed:34.0/255.0 green:97.0/255.0 blue:221.0/255.0 alpha:1]      @interface ViewController ()      @end      @implementation ViewController      - (void)viewDidLoad     {         [super viewDidLoad];         // Create the data model         _pageTitles = @[@"Over 200 Tips and Tricks", @"Discover Hidden Features", @"Bookmark Favorite Tip", @"Free Regular Update"];         _pageImages = @[@"page1.png", @"page2.png", @"page3.png", @"page4.png"];          pageIndex = 0;          // Create page view controller         self.pageViewController = [self.storyboard instantiateViewControllerWithIdentifier:@"PageViewController"];         self.pageViewController.dataSource = self;          PageContentViewController *startingViewController = [self viewControllerAtIndex:0];         NSArray *viewControllers = @[startingViewController];         [self.pageViewController setViewControllers:viewControllers direction:UIPageViewControllerNavigationDirectionForward animated:NO completion:nil];          // Change the size of page view controller           [self addChildViewController:_pageViewController];         [self.view addSubview:_pageViewController.view];         [self.pageViewController didMoveToParentViewController:self];         self.pageViewController.view.frame = CGRectMake(0, 0, self.view.frame.size.width, self.view.frame.size.height - 30);         for (UIView *view in self.pageViewController.view.subviews) {             if ([view isKindOfClass:[UIScrollView class]]) {                 [(UIScrollView *)view setDelegate:self];                 [(UIScrollView *)view setPagingEnabled:YES];             }         }         self.title = nil;         self.navigationItem.titleView = [self getTitleView];         flag = NO;      }      - (void)didReceiveMemoryWarning     {         [super didReceiveMemoryWarning];         // Dispose of any resources that can be recreated.     }      - (IBAction)startWalkthrough:(id)sender {         PageContentViewController *startingViewController = [self viewControllerAtIndex:0];         NSArray *viewControllers = @[startingViewController];         [self.pageViewController setViewControllers:viewControllers direction:UIPageViewControllerNavigationDirectionReverse animated:NO completion:nil];     }      - (PageContentViewController *)viewControllerAtIndex:(NSUInteger)index     {         if (([self.pageTitles count] == 0) || (index &gt;= [self.pageTitles count])) {             return nil;         }          // Create a new view controller and pass suitable data.         PageContentViewController *pageContentViewController = [self.storyboard instantiateViewControllerWithIdentifier:@"PageContentViewController"];         pageContentViewController.imageFile = self.pageImages[index];         pageContentViewController.titleText = self.pageTitles[index];         pageContentViewController.pageIndex = index;         pageIndex = index;          return pageContentViewController;     }      #pragma mark - Page View Controller Data Source      - (UIViewController *)pageViewController:(UIPageViewController *)pageViewController viewControllerBeforeViewController:(UIViewController *)viewController     {         NSUInteger index = ((PageContentViewController*) viewController).pageIndex;          if ((index == 0) || (index == NSNotFound)) {             return nil;         }          index--;         return [self viewControllerAtIndex:index];     }      - (UIViewController *)pageViewController:(UIPageViewController *)pageViewController viewControllerAfterViewController:(UIViewController *)viewController     {         NSUInteger index = ((PageContentViewController*) viewController).pageIndex;          if (index == NSNotFound) {             return nil;         }          index++;         if (index == [self.pageTitles count]) {             return nil;         }         return [self viewControllerAtIndex:index];     }      - (NSInteger)presentationCountForPageViewController:(UIPageViewController *)pageViewController     {         return [self.pageTitles count];     }      - (NSInteger)presentationIndexForPageViewController:(UIPageViewController *)pageViewController     {         return 0;     }      #pragma mark - Local API     - (UIView*)getTitleView {          UIView *titleView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, 120, 42)];         titleView.backgroundColor = [UIColor clearColor];          UILabel *titleLabel = [[UILabel alloc] initWithFrame:CGRectMake(0, 0, 120, 25)];         titleLabel.text = @"Sample App";         titleLabel.font = [UIFont boldSystemFontOfSize:18.0];         titleLabel.textAlignment = NSTextAlignmentCenter;         titleLabel.lineBreakMode = NSLineBreakByWordWrapping;         titleLabel.backgroundColor = [UIColor clearColor];         titleLabel.textColor = kDefaultColor;          [titleView addSubview:titleLabel];           CGSize contactStringSize = CGSizeMake(120, 25);          UILabel *contactStringLabel = [[UILabel alloc] initWithFrame:CGRectMake(0, CGRectGetMaxY(titleLabel.frame), contactStringSize.width, CGRectGetHeight(titleView.frame) - CGRectGetHeight(titleLabel.frame))];         contactStringLabel.text = @"Flower &amp; Gifts";         contactStringLabel.backgroundColor = [UIColor clearColor];         contactStringLabel.textColor = kDefaultColor;         contactStringLabel.font = [UIFont systemFontOfSize:13.0];         contactStringLabel.textAlignment = NSTextAlignmentCenter;         contactStringLabel.lineBreakMode = NSLineBreakByWordWrapping;         contactStringLabel.tag = kSubTitleTag;         [titleView addSubview:contactStringLabel];         [contactStringLabel setHidden:YES];          CGRect frame = titleView.frame;         frame.size.width = titleLabel.frame.size.width &gt; contactStringLabel.frame.size.width ? titleLabel.frame.size.width:contactStringLabel.frame.size.width;         titleView.frame = frame;          CGRect titleLabelFrame = titleLabel.frame;         titleLabelFrame.size.width = CGRectGetWidth(frame);         titleLabel.frame = titleLabelFrame;          CGRect contactLabelStringFrame = contactStringLabel.frame;         contactLabelStringFrame.size.width = CGRectGetWidth(frame);         contactStringLabel.frame = contactLabelStringFrame;          return  titleView;      }      - (IBAction)animateTitle:(id)sender {          PageContentViewController *pageVC = (PageContentViewController*)self.pageViewController.viewControllers[0];          UINavigationItem *item =(UINavigationItem*)[pageVC getNavigationItemView];         UIBarButtonItem *leftBtn = item.leftBarButtonItem;         UIView *barBtnView = [leftBtn valueForKey:@"view"];          CGRect barBtnViewFrame = barBtnView.frame;         barBtnViewFrame.origin.y += 64;          leftBtn.enabled = NO;         leftBtn.title =@"";          UILabel *lbl = [[UILabel alloc] initWithFrame:barBtnViewFrame];         lbl.text = @"Flower &amp; Gifts";         [lbl setTextColor:[UIColor colorWithRed:34.0/255.0 green:97.0/255.0 blue:221.0/255.0 alpha:1]];          [self.navigationController.view addSubview:lbl];          UILabel *subTitleLabel = [self getNavigationSubTitleLabel];          CGPoint  coordinatePoint = [self.navigationController.view convertPoint:subTitleLabel.bounds.origin fromView:self.navigationItem.titleView];         NSLog(@"convertPoint:fromView: %@", NSStringFromCGPoint(coordinatePoint));           CGRect targetFrame = CGRectZero;          if (subTitleLabel) {             targetFrame.size     = subTitleLabel.frame.size;             targetFrame.origin.y = coordinatePoint.y+25.0f;             targetFrame.origin.x = coordinatePoint.x;         }         else{             targetFrame = self.navigationItem.titleView.frame;         }          [UIView animateWithDuration:1.0f animations:^{             lbl.frame = targetFrame ;             [lbl layoutIfNeeded];         }];          lbl.font = [UIFont systemFontOfSize:13.0];      }      -(UILabel *) getNavigationSubTitleLabel{          UIView *titleView = self.navigationItem.titleView;          if ([titleView viewWithTag:kSubTitleTag]) {             UILabel *subTitleLabel = (UILabel*)[titleView viewWithTag:kSubTitleTag];             return subTitleLabel;         }          return  nil;     }      #pragma mark -  UIScrollView delegate       - (void)scrollViewDidScroll:(UIScrollView *)scrollView     {         NSLog(@"lastContentOffset: %f  scrollView.contentOffset:%f",(CGFloat)self.lastContentOffset,(CGFloat)scrollView.contentOffset.x);          if (self.lastContentOffset &gt; scrollView.contentOffset.x){ //Right             NSLog(@"-------------------------&gt;&gt;");             NSLog(@"****************** pageIndex:%lu  set flag Yes ******************",(long)pageIndex);              if ( (scrollView.contentOffset.x &gt; 1100) &amp;&amp; !flag) {                 [self animateTitle:nil];                 flag = YES;                 [scrollView setContentOffset:CGPointMake(1024, 0) animated:YES];             }             else if (pageIndex !=0 &amp;&amp; flag) {                 NSLog(@"++++++++++++++++++ pageIndex:%lu  set flag No +++++++++++++++++++",(long)pageIndex);                 flag = NO;             }          }         else if (self.lastContentOffset &lt; scrollView.contentOffset.x){//Left             NSLog(@"&lt;&lt;-------------------------");         }          self.lastContentOffset = scrollView.contentOffset.x;      }        // any offset      @end </code></pre>  <p>Advanced thanks for the solution.</p>