<p>There's a PDF I'm reading which says that a pointer is invalid after it passes out of scope.</p>  <p>See slide #14 in the file below: <a href="http://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-087-practical-programming-in-c-january-iap-2010/lecture-notes/MIT6_087IAP10_lec05.pdf" rel="nofollow">http://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-087-practical-programming-in-c-january-iap-2010/lecture-notes/MIT6_087IAP10_lec05.pdf</a></p>  <p>Now I wrote almost the exact same code below in C++ with Dev-C++ compiler:</p>  <pre><code>#include &lt;iostream&gt; using namespace std;  char* get_message() {       char msg[]="Hello";       return msg; }  int main() {     char *ptr = get_message();     cout&lt;&lt;ptr&lt;&lt;endl;     system("PAUSE");     return 0; } </code></pre>  <p>In the original file, the code uses the "puts" function to print out the char string. It prints out garbage. I was expecting garbage, but it prints out "Hello" just fine. Curiously, if I amend my code to:</p>  <pre><code>char *ptr = get_message(); puts(ptr); cout&lt;&lt;ptr&lt;&lt;endl; </code></pre>  <p>It prints out garbage twice, suggesting the original "ptr" pointer has been modified by the "puts" function.</p>  <p>Can somebody please explain exactly what is happening? Why does cout prints out the string just fine (although there's a warning saying "address of local variable returned") even though the pointer is supposed to be invalid? Why does "puts" not work? Why does cout not work after puts? Why do comets always land in craters?</p>