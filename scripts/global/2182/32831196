<p>Is it possible to do achieve this behavior using node modules?</p>  <p>module.js:</p>  <pre><code>module.exports = function () {     var test.fn = function () {         console.log("$test.fn()");     }      var test.fn2 = function () {         console.log("$test.fn2()");     }      var variable = "test"; }; </code></pre>  <p>app.js:</p>  <pre><code>require("./module.js")();  test.fn(); test.fn2(); otherFunction(variable); </code></pre>  <p>I dont want to do anything like this <code>$ = require("./module.js")(); $.test.fn();</code> I want to inject this variables into app.js scope without wrapper variable.</p>  <h3>Edit:</h3>  <p>I have ended up using this:</p>  <p>module.js:</p>  <pre><code>module.exports = function () {     eval(String(inject));      var inject = (         this.$module1 = {},         this.$module1.fn = function () {             console.log("$module1.fn()");         }         ); }; </code></pre>  <p>app.js:</p>  <pre><code>require("./module.js")();  $module1.fn(); </code></pre>