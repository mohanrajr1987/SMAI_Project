<p>I am trying to make an app in Rails 4.</p>  <p>I have three models being:</p>  <pre><code>User.rb (for authentication and fixed details) Profile.rb (for user details which can change) project.rb (for projects that users create) </code></pre>  <p>The user model associations are:</p>  <pre><code>has_many :project_questions, dependent: :destroy#, through: :projects   accepts_nested_attributes_for :project_questions    has_one :sweep   accepts_nested_attributes_for :sweep    has_one :educator_project_comment   has_many :project_student_eois   belongs_to :educator   has_many :project_invitations   has_one :video   accepts_nested_attributes_for :video   has_one :finalise, through: :sweep   has_many :observations    has_one :approval_request   belongs_to :industry   belongs_to :course    has_and_belongs_to_many :users   belongs_to :creator, class_name: 'User'   has_many :profiles, through: :industry </code></pre>  <p>The profile model associations are:</p>  <pre><code>has_one :setting   has_one :phone#, :through =&gt; :setting   has_one :address#, :through =&gt; :setting   belongs_to :university   belongs_to :organisation   belongs_to :user   has_many :notices   belongs_to :faculty   belongs_to :industry   has_one :video   has_many :feedbacks </code></pre>  <p>The user model associations are:</p>  <pre><code>has_one :account_history   has_one :active_user_policy   has_one :profile   has_one :shortlist   has_one :match_maker   has_many :authentications   has_many :relationships, foreign_key: "follower_id", dependent: :destroy   has_many :followed_users, through: :relationships, source: :followed   has_many :followers, through: :reverse_relationships   has_and_belongs_to_many :projects   has_and_belongs_to_many :programs   has_and_belongs_to_many :proposals   has_one :policy_privacy   has_one :policy_user   has_many :project_questions   has_many :project_answers   has_one :signature_block   has_one :video   has_many :project_invitations   has_many :feedbacks   accepts_nested_attributes_for :feedbacks   has_many :reviewers, :through =&gt; :feedbacks, :class_name =&gt; 'User'   has_many :created_feedbacks, :class_name =&gt; 'Feedback', :foreign_key =&gt; 'reviewer_id'   has_many :reviewed_users, :through =&gt; :feedbacks_left, :source =&gt; :user, :class_name =&gt; 'User'   has_one :signature_block </code></pre>  <p>In my projects_controller, I have:</p>  <pre><code>def show      @project = Project.find(params[:id])     @creator = User.find(@project.creator_id)     @creator_profile = @creator.profile    end </code></pre>  <p>The association between user and project is that project belongs to user. In my project table, I have an integer attribute called 'creator_id'. I don't have a separate 'user_id' field.</p>  <p>I have creator, because I want to define users who create projects (so that the project creator links to that user's profile (as opposed to the profile of the current_user who is looking at the project).</p>  <p>I have defined three scopes in project.rb as:</p>  <pre><code>scope :creator, lambda { where(@creator_profile = user.profile_id)}    scope :current, lambda { where('project.start_date &gt;= ?', Date.today)}   scope :visible, lambda { joins(:sweep =&gt; :disclosure).where('disclosures.allusers' =&gt; 'true')     .joins(:sweep =&gt; :finalise).where('finalises.draft' =&gt; 'false') } </code></pre>  <p>The method 'all_current_for_creator' is defined in my project.rb as:</p>  <pre><code>def self.all_current_for_creator(creator)     if creator.profile.present?        creator.current.visible     else       guest_visible     end   end  </code></pre>  <p>In my profile show page, I render a partial, to show the creators current projects as:</p>  <pre><code>&lt;div class="categorytitle"&gt;       Current Collaborative Projects     &lt;/div&gt;      &lt;div class="categorybody"&gt;      &lt;div class="row"&gt;       &lt;div class="col-md-10 col-md-offset-1"&gt;       &lt;% if Project.all_current_for_creator(@creator).!blank? %&gt;          &lt;% Project.all_current_for_creator(@creator).sort_by(&amp;:created_at).each do |project| %&gt;          &lt;div class="row"&gt; &lt;div class="projectprofilerow"&gt;             &lt;div class="col-md-4"&gt;               &lt;div class="projectindex"&gt;                 &lt;%= image_tag project.hero_image_url, width: '70', height: '70' if project.hero_image.present? %&gt;               &lt;/div&gt;             &lt;/div&gt;             &lt;div class="col-md-8"&gt;               &lt;div class="row"&gt;                 &lt;div class="col-md-12"&gt;                   &lt;div class="indexheading"&gt; &lt;%= link_to project.title, project %&gt; &lt;/div&gt;                 &lt;/div&gt;               &lt;/div&gt;               &lt;div class="row"&gt;                 &lt;div class="col-md-12"&gt;                   &lt;div class="indexsubtext"&gt;                         &lt;%= truncate(project.description, :ommission =&gt; "...", :length =&gt; 250) %&gt;                   &lt;/div&gt; &lt;/div&gt;                               &lt;/div&gt;               &lt;/div&gt;             &lt;/div&gt;       &lt;/div&gt;       &lt;% end %&gt;         &lt;% else %&gt;           &lt;%= render :text =&gt; "No current projects".html_safe %&gt;           &lt;% end %&gt;   &lt;/div&gt; &lt;/div&gt;       &lt;/div&gt; </code></pre>  <p>I have also tried '.any?' instead of !blank.  When i try checking for blank, I get this error:</p>  <pre><code>wrong number of arguments (1 for 0) </code></pre>  <p>When I try .any?, I get this error:</p>  <pre><code>undefined method `any?' for nil:NilClass </code></pre>  <p>I think the reason for this is that nil isn't a thing so any can't test on it, but I get an error when I try .present? so I'm not clear on that.</p>  <pre><code>    Can anyone see where I'm going wrong? </code></pre>