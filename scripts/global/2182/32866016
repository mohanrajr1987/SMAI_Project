<p>I'm trying to set a js var using a ajax call. Then the var value is inputed into a form element. It works fine until the point I try to use the var the way shown below.</p>  <p>the function I use to fetch the val </p>  <pre><code>function ajaxFetch(query) {   var val;   $.post( "/ajax/crud.php",{mode:"fetch",query:query},function(data) {     val=data;   });   return val; } </code></pre>  <p>I'll skip crud.php code, since it's working for another scripts and it only queries MySQL, and echoes the value. </p>  <p>Then I call ajaxFetch function triggered by a click </p>  <pre><code>$(document).on("click",".btnCall",function(){   id=$(this).data("id")//gets an id from a data tag   q1 = "SELECT NAME FROM user WHERE ID="+id;   userName = ajaxFetch(q1);   $("#form_userName").val(userName); }); </code></pre>  <p>What I can't understand, but I guess it's a scope issue, is the following</p>  <ol> <li><p>If I do things the way is shown, the form remains empty </p></li> <li><p>If I do a direct ajax call, within the click trigger (not calling the function), the form is filled with the user's name.  </p></li> <li><p>If I do things the way shown above, but I add an "alert(val)" into the ajaxFetch function (I use this to test the function), the alert will be "undefined" but the form WILL be filled with the value.</p></li> </ol>  <p>I ran into the issue this way: I first made the ajax call within the "click" event. Then I created the ajaxFetch function, as there will be a couple of calls. I added an "alert" to both function and "click" event, so I could see if the fetch was working properly.  The first thing I've noticed was that the first alert (inside ajaxFetch) was empty, but the alert inside the click event was showing the value. </p>  <p>Thanks in advance. sorry for any mistakes</p>  <p><strong>EDIT - the way worked (using unwanted alerts)</strong></p>  <pre><code>function ajaxFetch(query) {   var val;   $.post( "/ajax/crud.php",{mode:"fetch",query:query},function(data) {     val=data;      alert(data);    });   return val; }  $(document).on("click",".btnCall",function(){   id=$(this).data("id")//gets an id from a data tag   q1 = "SELECT NAME FROM user WHERE ID="+id;   userName = ajaxFetch(q1);    alert(userName)    $("#form_userName").val(userName); }); </code></pre>  <p>this way the form value <em>will</em> be filed. The first alert will show an <em>empty string</em> and the second alert will show the right value.</p>