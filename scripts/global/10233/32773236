<p>I know the difference between <code>$.fn.extend</code> and <code>$.extend</code>. But what is the difference between <code>$.fn</code> and <code>$.fn.extend</code>? When should I use one or the other? In the jQuery learning center for implementing jQuery plugins, I cannot find any examples that use <code>$.fn.extend</code> or discuss when to use <code>$.fn.extend</code> and when to use <code>$.fn</code>.</p>  <p>Thank you.</p>  <p>Take a very basic example:</p>  <pre><code>$.fn.greenify = function() {     this.css( "color", "green" ); };  $( "a" ).greenify(); // Makes all the links green.  $.fn.extend({     greenifyP: function() {         return this.css( "color", "green" );     } });  $(  "p" ).greenifyP();   // html &lt;a href="http://www.google.com"&gt;test&lt;/a&gt; &lt;p&gt;test&lt;/p&gt; </code></pre>  <p>Are the two methods exactly the same under the covers? I'm trying to determine when would I use <code>$.fn.extend</code>, as opposed to <code>$.fn</code> and if they are equivalent?</p>