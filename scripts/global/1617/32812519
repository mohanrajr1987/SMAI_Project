<p>I'm creating a gradebook using linked list and I don't understand how to enroll a student to a course using linked list.  I created three structs with a singly list. A <code>student</code>, <code>course</code>, <code>Class_Info</code> struct (with Class_<code>Info</code> enrolling the student to a course). </p>  <pre><code>typedef struct Student_Info // Student's information {     int Student_ID;     char Student_Name[55];     struct Student_Info *next;  }  Student;  typedef struct // Linked list for students {     int Stracker; // Keeps track of sudents     Student *Student_Head;     Student *Student_Tail; } List_Student;  typedef struct Course_Info // Course information {     int Course_ID;     char Course_Name[15];     struct Course_Info *next;  } Course;  typedef struct // Linked list for Course {     int Ctracker; // Keeps track of courses     Course *Course_Head;     Course *Course_Tail; } List_Course;  typedef struct Class_Index // The Course and students in course {     struct Class_Index *next; } Class_Info;  typedef struct  {     int EnrollTrack;     Student *Student_Head;     Student *Student_Tail;     Course *Course_Head;     Course *Course_Tail;     Class_Info *Class_Head;     Class_Info *Class_Tail; } Enrollment; </code></pre>  <p>Along with their declarations</p>  <pre><code>    List_Student Students;     List_Course Courses;     Grade_List Grades;     Enrollment Enroll;      Enroll.EnrollTrack = 0;     Enroll.Class_Head = Enroll.Class_Tail = NULL;      Students.Stracker = 0;     Students.Student_Head = Students.Student_Tail = NULL;      Courses.Ctracker = 0;     Courses.Course_Head = Courses.Course_Tail = NULL;      Grades.Grade_cnt = 0;     Grades.Grade_Head = Grades.Grade_Tail = NULL; </code></pre>  <p>I have a function called <code>void Enroll Student</code> that will be used to enroll a student to a course. The function checks if the course ID entered exist and does the same with checking a student ID. this is the part Im stuck on, adding a student to a course after they entered a valid student ID. Here goes my function.</p>  <pre><code>void EnrollStudent(List_Course *Courses, List_Student *Students, Enrollment *Enroll) {     int CID; int SID;      Class_Info *Index;     Index = (Class_Info *) malloc (sizeof(Class_Info));     Index -&gt; next = NULL;      Course* current = Courses -&gt; Course_Head; //Sets Current as a local vairable     Student* current2 = Students -&gt; Student_Head;      printf("Enter course ID: ");     scanf("%d%*c", &amp;CID);      //Checks if the course exist     while ((NULL != current) &amp;&amp; (CID != current-&gt;Course_ID)) current = current-&gt; next;      {         if (NULL == current)         {                 printf("ERROR! Course %d not found!!!\n", CID);             return;         }         else         {              printf("Now enter the student ID: ");             scanf ("%d", &amp;SID);                         //Checks if Student exist             while((NULL != current2) &amp;&amp; (SID != current2 -&gt; Student_ID)) current2 = current2 -&gt; next;             if (NULL == current2)             {                     printf("ERROR! Student %d not found!!!\n", SID);                 return;             }             else             {                 if (Enroll -&gt; EnrollTrack == 0)                 {                     Enroll -&gt; Class_Head = Enroll -&gt; Class_Tail = Index;                 }                 else                 {                     Enroll -&gt; Class_Tail -&gt; next = Index;                     Enroll -&gt; Class_Tail = Index;                 }                     Enroll -&gt; EnrollTrack += 1;             }         }     }   } </code></pre>  <p>I'm not sure if I'm adding the student to the course in this part.</p>  <pre><code>if (Enroll -&gt; EnrollTrack == 0) {     Enroll -&gt; Class_Head = Enroll -&gt; Class_Tail = Index; } else {     Enroll -&gt; Class_Tail -&gt; next = Index;     Enroll -&gt; Class_Tail = Index; } Enroll -&gt; EnrollTrack += 1; </code></pre>