<p>I am having a very tough time understanding exception handling after watching online tutorials and reading up on it. I am trying to pass test driven development, and I can't. What I have come up with so far is this. I am supposed to use this struct</p>  <pre><code>struct ArrayException {     ArrayException(string newMessage = "error") :message(newMessage)     {     }      string message; }; </code></pre>  <p>The first try.</p>  <pre><code>int sum(int* theArray, unsigned int arraySize) {     try     {          if (theArray = NULL)         {             throw ArrayException("NULL ARRAY REFERENCE");         }     }     catch (int* param)     {         cout &lt;&lt; "you can't have " &lt;&lt; param &lt;&lt; " as an array size";     }     int sum = 0;     for (int i = 1; i &lt; arraySize; i++)     {         sum += theArray[i];     }     return sum; } </code></pre>  <p>I also tried doing it this way.</p>  <pre><code>int sum(int* theArray, unsigned int arraySize) {      if (theArray = NULL)     {         throw ArrayException("NULL ARRAY REFERENCE");     }     else     {         int sum = 0;         for (int i = 1; i &lt; arraySize; i++)         {             sum += theArray[i];         }         return sum;     } } </code></pre>