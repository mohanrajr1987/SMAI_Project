<p>Could someone explain to me why I cannot print out this variable from a struct? I believe it is something to do with how my pointers are set up but I can't seem to get it. </p>  <p>I've currently got it so that it takes in the user input for a shape type e.g. Circle, Square, Triangle. This input is set into an array of chars called type. There is a struct called Shape which contains type and x and y coordinates. I'm trying to set the user input type into this struct and print out the results for that shape. </p>  <p>The code is as follows: </p>  <pre><code>#include &lt;stdio.h&gt; #include &lt;string.h&gt;  typedef struct Shape {     char type;     int x;     int y; }Shape;  static int setShape (char type[], int xpos, int ypos) {     Shape shape;     shape.type = *type;     shape.x = xpos;     shape.y = ypos;      printf("=== SHAPE ===\n %s:\n  x:%d\n  y:%d\n", &amp;shape.type, shape.x, shape.y);      return 0; }  int main (int argc, char *argv[]) {     int rc = 0;     int i = 0;     char type[8];     int xpos = 100;     int ypos = 100;      for (i = 1; i &lt; argc; i++)     {         if ( strcmp (argv[i], "Circle") == 0)     {         strncpy(type, "Circle", 8);         }         else if ( strcmp (argv[i], "Square") == 0)         {             strncpy(type, "Square", 8);         }         else if ( strcmp (argv[i], "Triangle") == 0)         {             strncpy(type, "Triangle", 8);         }     }      rc = setShape(type, xpos, ypos);     if(rc != 0) {         printf("Error setting shape.\n");     }      return 0; } </code></pre>  <p>If it input:      ./shape Circle </p>  <p>Output: </p>  <pre><code>=== SHAPE === CLAd:   x:100   y:100 </code></pre>  <p>Any help would be great, thanks. </p>