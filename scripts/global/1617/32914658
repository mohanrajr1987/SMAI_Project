<p>Here is my first attempt.  I hoped that the last statement in Fill() would do a memberwise copy, but in fact nothing happened.  The issue is doubtless that the types in the assignment are not known at compile time.  My intent is to use a dictionary of structs, keyed by type, in connection with unit tests.  Maybe it can't be done, without adding knowledge of the various individual structs to my class.</p>  <pre><code>internal class TestData {     private static Dictionary&lt;Type, ValueType&gt; mTestData = new Dictionary&lt;Type, ValueType&gt;();      internal static void Add(ValueType _testData)     {         mTestData.Add(_testData.GetType(), _testData);     }      internal static void Fill(ValueType _runtimeData)     {         ValueType testData = mTestData[_runtimeData.GetType()];         _runtimeData = testData;     } } </code></pre>