<pre><code>#include "stdafx.h" #include &lt;ctype.h&gt; #include &lt;limits.h&gt; #include &lt;stdio.h&gt; #include &lt;stdlib.h&gt; #include &lt;stdint.h&gt; #include &lt;string.h&gt;  //typedef struct kvNode kvNode;  struct kvNode {     char cKey[32];     uint32_t iValue;     struct kvNode *NEXT; };  //Function declarations void put(char *key[], int *value); uint32_t get(char *key[]); int del(char *key[]); uint32_t hashkey(char *key); void strUpper(char *);  const int arraylen = 10; //length of key array kvNode *keys[]; //our key array  int main() {     //Create array of pointers to kvNodes     keys[arraylen] = { NULL };     return 0; } </code></pre>  <p>I'm pretty sure this is the block of code returning the error. The error happens during build time and is:</p>  <blockquote>   <p>1>keyValue.obj : error LNK2001: unresolved external symbol "struct kvNode * * keys" (?keys@@3PAPAUkvNode@@A)</p> </blockquote>  <p>What I'm trying to do is practice a key value store in C (undoubtedly using more, shall we say, <em>relaxed</em> languages recently has dulled my C knife), so I define a key value node struct, then an array of pointers to those nodes. Following other questions on SO about forward declaring of structs I got the syntax for declaring a pointer to the struct inside the struct, but for some reason the compiler (Vis Studio) is coughing on an unresolved external symbol and I don't know why.</p>