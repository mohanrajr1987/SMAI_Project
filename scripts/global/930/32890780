<p>my question is relatively simple but I haven't found an answer yet. I have a table which only contains only one row. This row has two columns, ClientCode and a ClientIndex. </p>  <p>I have a select query which looks like:</p>  <pre><code>SELECT i.ClientCode + FORMAT(i.ClientIndex, "000000") FROM Indexes as I; </code></pre>  <p>Now after I've run the select I want to increment the ClientIndex by one. </p>  <pre><code>UPDATE Indexes SET ClientIndex = ClientIndex + 1; </code></pre>  <p>Motivation: I want to be able to create sequential Report Numbers. So every time I generate a report I want the ClientIndex to increment. For this to work I will need to lock the table, select my number, increment the Index and unlock the table.</p>  <p>Is this possible in MS Access 2013? It's trivial in Sql using a Stored Procedure; but the requirements state Access and there is no way around this requirement. Furthermore, I'm building a client application (using .NET and F#) which will retrieve the Report Number.</p>  <p><strong>EDIT</strong>: It seems like people do not really get the question. I want both statements, the <code>SELECT</code> and the <code>UPDATE</code> to run within the same execution. I do <em>NOT</em> want to call the select and update after each other from some client.</p>  <p>The SP in plain old t-sql it would look something like:</p>  <pre><code>CREATE PROCEDURE something AS BEGIN     declare @result as nchar(10);     set @result = &lt;&lt;select query&gt;&gt;;     &lt;&lt;update query&gt;&gt;;     select @result; END </code></pre>  <p><strong>EDIT:</strong> I'm building a .NET F# application which will call the Access database and retrieve the Report Number. This application will run in a Windows Service on a Windows server. This Report Number could be called about 100 times concurrently at large intervals. </p>