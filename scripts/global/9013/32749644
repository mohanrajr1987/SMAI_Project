<p>There seems to be a problem with the system properties in Maven. It seems that system properties don't correspond to  the environment variables.</p>  <p>The situation is that I would like to the change the absolute location of the user-specific <code>settings.xml</code> file, as the Maven document says</p>  <blockquote>   <p>If you need to create user-specific settings from scratch, itâ€™s   easiest to copy the global settings from your Maven installation to   your ${user.home}/.m2 directory</p> </blockquote>  <p>which means that the only way to change the absolute location of the user-specific file is to change the <code>user.home</code> property. But it seems that this is not exactly the <code>HOME</code> or <code>HOMEPATH</code> environment variable. In fact, I deleted all the environment variables such as <code>HOME</code> and <code>HOMEPATH</code>, and run mvn using <code>mvn -X</code> just to see the user-specific <code>settings.xml</code> that mvn uses. The result is the following (I am in Windows 7 and I run the command in cmd.exe):</p>  <p><a href="http://i.stack.imgur.com/M3NVD.png" rel="nofollow"><img src="http://i.stack.imgur.com/M3NVD.png" alt="enter image description here"></a></p>  <p>Maven still finds a <code>user.home</code> property, however, I haven't set such a environment variable. To verify this, I then run the <code>set</code> command to see all the environment variables but find nothing about the path <code>d:\Userfiles\xili\</code> which is used by Maven as the <code>user.home</code> system property. By the way, there is no settings.xml file in this path, because I haven't put any file in this path.</p>  <p>How maven figure out such a path as <code>user.home</code>?</p>