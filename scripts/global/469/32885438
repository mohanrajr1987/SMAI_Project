<p>I try to use a list of checkbox in my view and pass all checked checkbox to my controller like explain here : <a href="http://www.c-sharpcorner.com/UploadFile/4d9083/creating-simple-checkboxlist-in-mvc-4-using-razor/" rel="nofollow">List of checkbox</a></p>  <p>but anything is wrong because the list passed to the controller from the view is empty.</p>  <p>I use a personal model:</p>  <pre><code>public class Monmodele {     public TTypeRetouche Ttyperetouche { get; set; }     public List&lt;TTypeRetouche&gt; Ttyperetouches { get; set; }     public CheckTypeRetouche Cchecktyperetouche { get; set; }     public List&lt;CheckTypeRetouche&gt; Cchecktyperetouches { get; set; }     public TRetoucheTypeRetouche Tretouchetyperetouche { get; set; }     public List&lt;TRetoucheTypeRetouche&gt; Tretouchetyperetouches { get; set;  }  [NotMapped] public class CheckTypeRetouche {     public int Idtyperetouche {get;set;}     public string Libelle {get;set;}     public bool Checked {get;set;} }  //Table et classe TretoucheTypeRetouche //Contient tous les types de retouche d'une retouche (une photo) [Table("TRetoucheTypeRetouche")] public class TRetoucheTypeRetouche{     [Key]     [DatabaseGeneratedAttribute(DatabaseGeneratedOption.Identity)]     public virtual int Idretouche { get; set; }     public virtual int Idtyperetouche {get;set;}     public virtual int Idcommande { get; set; }  }  //Table et classe TypeRetouche [Table("TTypeRetouche")] public class TTypeRetouche{     [Key]     [DatabaseGeneratedAttribute(DatabaseGeneratedOption.Identity)]     public int Idtyperetouche { get; set; }     public string Libelle { get; set; }     public int Prix { get; set; }     public string SRCtyperetouche { get; set; }     [NotMapped]     public HttpPostedFileBase fichierphotomodele { get; set; } } </code></pre>  <p>In the controller, I retrieve data to display in the view and I add to a list data for the checkbox :</p>  <pre><code>    public ActionResult VCreateCommande()     {                     using (var db = new ApplicationDbContext())         {             if (Request.IsAuthenticated)             {                 string userid = User.Identity.GetUserId().ToString();                 monmodel.Tretouchetyperetouches = (from a in db.TRetoucheTypeRetouches                                                    where a.Idcommande == idcmd                                                    select a).ToList();                 monmodel.Ttyperetouches = db.TTypeRetouches.ToList();                  //Liste des type de retouche pour les checkbox                 var list = new List&lt;CheckTypeRetouche&gt;();                  foreach (var item in monmodel.Ttyperetouches)                 {                     list.Add(new CheckTypeRetouche{Idtyperetouche=item.Idtyperetouche,Libelle=item.Libelle,Checked=false});                 }                 monmodel.Cchecktyperetouches = list;              }             return View(monmodel);         }     } </code></pre>  <p>The POST in the controller, I pass a list of checkbox ojects:</p>  <pre><code>    [HttpPost]     [ValidateAntiForgeryToken]     public ActionResult VCreateRetouche([Bind(Include = "SRCPhoto,fichierphoto,Idtyperetouche")] TRetouche Tretouche, List&lt;CheckTypeRetouche&gt;list)     //public ActionResult Create()     {         using (var db = new ApplicationDbContext())         {             if (Request.IsAuthenticated)             {         ......                  //Récupérer l'identifiant de la retouche crée                 //Récupération de l'identifiant                  idretouche = db.TRetouches.Max(u =&gt; u.Idretouche);                  //Quelles sont le ou les types de retouches sélectionnées                  foreach (var item in list)                 {                     if (item.Checked == true)                     {                         TRetoucheTypeRetouche tretouchetyperetouche = new TRetoucheTypeRetouche();                         tretouchetyperetouche.Idretouche = idretouche;                         tretouchetyperetouche.Idcommande = idcmd;                         tretouchetyperetouche.Idtyperetouche = item.Idtyperetouche;                         db.TRetoucheTypeRetouches.Add(tretouchetyperetouche);                     }                 }               }             return View("VCreateCommande",monmodel);         }     } </code></pre>  <p>And the view :</p>  <pre><code>@using (Html.BeginForm("VCreateRetouche", "CCommande", FormMethod.Post, new { enctype = "multipart/form-data" })) {     @Html.AntiForgeryToken()     @Html.ValidationSummary(true, "", new { @class = "text-danger" })      &lt;div class="creation-retouche"&gt;         &lt;h4&gt;Specifier votre retouche&lt;/h4&gt;         @foreach (var item in Model.Cchecktyperetouches)         {             &lt;div&gt;                 &lt;div class="ilnb col1"&gt;                     @Html.HiddenFor(model =&gt; item.Idtyperetouche)                     @Html.DisplayFor(model =&gt; item.Libelle)                 &lt;/div&gt;                 &lt;div class="ilnb col2"&gt;                     @Html.CheckBoxFor(model =&gt; item.Checked)                 &lt;/div&gt;             &lt;/div&gt;             }         &lt;div class=""&gt;             &lt;div class="ilnb col1"&gt;Photo...&lt;/div&gt;             &lt;div class="ilnb col2"&gt;                 @Html.TextBoxFor(model =&gt; model.Tretouche.fichierphoto, new { type = "file" })             &lt;/div&gt;         &lt;/div&gt;         &lt;br /&gt;         &lt;div&gt;             &lt;input type="submit" value="Ajouter" class="inpajout btn btn-default" /&gt;         &lt;/div&gt;         &lt;br /&gt;     &lt;/div&gt; } </code></pre>  <p>The model used in the view is :</p>  <p><code>@model CreationLogicielSitePhoto.Models.Monmodele</code></p>