<p>Suppose I have a kernel in which I first bring in the neighbors of a vertex from a CSR graph representation into the shared memory. I bring in 1024 neighbors at a time and loop until all the vertices are filled. These neighbors are in a sorted order.</p>  <p>Suppose,now I have a different list of vertices in an array and I need to know which among all these which vertices are contained in the neighbors that I copied into the shared memory. Presently I am doing a binary search in the shared memory to check if a thread's Vertex is present.However this method suffers from a lot of thread divergence. Is there a better way to do this.?</p>  <p>My thread block size is 256.</p>