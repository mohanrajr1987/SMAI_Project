<p>I am working on a multithreaded number crunching app, let's call it <code>myprogram</code>. I plan to run <code>myprogram</code> on IBM's LSF grid. LSF allows a job to scheduled on CPUs from different machines. For example, <code>bsub -n 3 ... myprogram ...</code> can allocate two CPUs from node1 and one CPU from node2. </p>  <p>I know that I can ask LSF to allocate all 3 cores in the same node, but I am interested in the case where my job is scheduled onto different nodes.</p>  <ol> <li><p>How does LSF manage this? Will <code>myprogram</code> be run in two different processes in node1 and node2?</p></li> <li><p>Does LSF automatically manage data transfer between node1 and node2?</p></li> <li><p>Anything I can do in <code>myprogram</code> to make this easy for LSF to manage? Should I be making use of any LSF libraries?</p></li> </ol>