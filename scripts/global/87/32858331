<p>So I've looked up and only found normal triangles questions out there. This one is a bit tricky.</p>  <blockquote>   <p>Given a N, your program should create an asterisk unfilled triangle with a N side size.</p> </blockquote>  <pre><code>Example 1  Inform N: 1  *  Example 2: Inform N: 2 ** * Example 3: Inform N: 3 *** ** * Example 4: Inform N: 4 **** * * ** * Example 5: Inform N: 5 ***** *  * * * ** * </code></pre>  <p>Here's my attempt, I could only make a filled triangle inefficiently </p>  <pre><code>void q39(){     int n,i,b;     printf("Inform N: ");     scanf ("%i",&amp;n);     for ( i = 0; i &lt; n; ++i)     {     printf("*");     for ( b = 1; b &lt; n; ++b)     {         if (i==0)         {         printf("*");         }         else if (i==1 &amp;&amp; b&gt;1)         {             printf("*");         }         else if (i==2 &amp;&amp; b&gt;2)         {             printf("*");         }         else if(i==3 &amp;&amp; b&gt;3){             printf("*");         }         else if(i==4 &amp;&amp; b&gt;4){             printf("*");         }         else if(i==5 &amp;&amp; b&gt;5){             printf("*");         }         else if(i==6 &amp;&amp; b&gt;6){             printf("*");         }         else if(i==7 &amp;&amp; b&gt;7){             printf("*");         }         else if (i==8 &amp;&amp; b&gt;8){             printf("*");         }     }         printf("\n");     }  } </code></pre>