<p>I had a requirement where i will have Billing address &amp; Shipping address on Same VF page in Salesforce.</p>  <p>I am using Autocomplete for both address &amp; i have created a component which i am using it twice on VF page .</p>  <p>Issue : When i am using VF component once on VF page everything is working fine but when i am adding the same component of the VF page twice it stop working. I am not getting Address</p>  <p>Please suggest how to fix this issue</p>  <p><strong>Component code :</strong></p>  <pre><code>&lt;apex:component controller="GoogleComponentController"&gt;   &lt;/apex:form&gt; ---&gt;  &lt;apex:attribute type="string" name="idcomponent" required="true" description="Unique id for this component in the page" assignTo="{!componentid}"/&gt; &lt;html&gt;   &lt;head&gt;     &lt;title&gt;Place Autocomplete Address Form&lt;/title&gt;     {!componentid}     &lt;meta name="viewport" content="initial-scale=1.0, user-scalable=no"/&gt;     &lt;meta charset="utf-8"/&gt;     &lt;style&gt;       html, body {         height: 100%;         margin: 0;         padding: 0;       }       #map {         height: 100%;       }     &lt;/style&gt;     &lt;link type="text/css" rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500"/&gt;     &lt;style&gt;       #locationField, #controls {         position: relative;         width: 480px;       }       #autocomplete {         position: absolute;         top: 0px;         left: 0px;         width: 99%;       }       .label {         text-align: right;         font-weight: bold;         width: 100px;         color: #303030;       }       #address {         border: 1px solid #000090;         background-color: #f0f0ff;         width: 480px;         padding-right: 2px;       }       #address td {         font-size: 10pt;       }       .field {         width: 99%;       }       .slimField {         width: 80px;       }       .wideField {         width: 200px;       }       #locationField {         height: 20px;         margin-bottom: 2px;       }     &lt;/style&gt;   &lt;/head&gt;    &lt;body&gt;     &lt;div id="locationField"&gt;       &lt;input id="autocomplete" placeholder="Enter your address"              onFocus="geolocate()" type="text"&gt;&lt;/input&gt;     &lt;/div&gt;      &lt;table id="address"&gt;       &lt;tr&gt;         &lt;td class="label"&gt;Street address&lt;/td&gt;         &lt;td class="slimField"&gt;&lt;input class="field" id="street_number"               disabled="true"&gt;&lt;/input&gt;&lt;/td&gt;         &lt;td class="wideField" colspan="2"&gt;&lt;input class="field" id="route"               disabled="true"&gt;&lt;/input&gt;&lt;/td&gt;       &lt;/tr&gt;       &lt;tr&gt;         &lt;td class="label"&gt;City&lt;/td&gt;         &lt;td class="wideField" colspan="3"&gt;&lt;input class="field" id="locality"               disabled="true"&gt;&lt;/input&gt;&lt;/td&gt;       &lt;/tr&gt;       &lt;tr&gt;         &lt;td class="label"&gt;State&lt;/td&gt;         &lt;td class="slimField"&gt;&lt;input class="field"               id="administrative_area_level_1" disabled="true"&gt;&lt;/input&gt;&lt;/td&gt;         &lt;td class="label"&gt;Zip code&lt;/td&gt;         &lt;td class="wideField"&gt;&lt;input class="field" id="postal_code"               disabled="true"&gt;&lt;/input&gt;&lt;/td&gt;       &lt;/tr&gt;       &lt;tr&gt;         &lt;td class="label"&gt;Country&lt;/td&gt;         &lt;td class="wideField" colspan="3"&gt;&lt;input class="field"               id="country" disabled="true"&gt;&lt;/input&gt;&lt;/td&gt;       &lt;/tr&gt;     &lt;/table&gt;      &lt;script&gt; // This example displays an address form, using the autocomplete feature // of the Google Places API to help users fill in the information.  var placeSearch, autocomplete; var componentForm = {   street_number: 'short_name',   route: 'long_name',   locality: 'long_name',   administrative_area_level_1: 'short_name',   country: 'long_name',   postal_code: 'short_name' };  function initAutocomplete() {   // Create the autocomplete object, restricting the search to geographical   // location types.   autocomplete = new google.maps.places.Autocomplete(       (document.getElementById('autocomplete')),       {types: ['geocode']});    // When the user selects an address from the dropdown, populate the address   // fields in the form.   autocomplete.addListener('place_changed', fillInAddress); }  // [START region_fillform] function fillInAddress() {   // Get the place details from the autocomplete object.   var place = autocomplete.getPlace();    for (var component in componentForm) {     document.getElementById(component).value = '';     document.getElementById(component).disabled = false;   }    // Get each component of the address from the place details   // and fill the corresponding field on the form.   for (var i = 0; i &lt; place.address_components.length; i++) {     var addressType = place.address_components[i].types[0];     if (componentForm[addressType]) {       var val = place.address_components[i][componentForm[addressType]];       document.getElementById(addressType).value = val;     }   } } // [END region_fillform]  // [START region_geolocation] // Bias the autocomplete object to the user's geographical location, // as supplied by the browser's 'navigator.geolocation' object. function geolocate() {   if (navigator.geolocation) {     navigator.geolocation.getCurrentPosition(function(position) {       var geolocation = {         lat: position.coords.latitude,         lng: position.coords.longitude       };       var circle = new google.maps.Circle({         center: geolocation,         radius: position.coords.accuracy       });       autocomplete.setBounds(circle.getBounds());     });   } } // [END region_geolocation]      &lt;/script&gt;     &lt;script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBJpqM1gX8A3tzRBb13op5ci9tiZOJZWeY&amp;signed_in=true&amp;libraries=places&amp;callback=initAutocomplete"&gt;&lt;/script&gt;   &lt;/body&gt; &lt;/html&gt;  &lt;/apex:component&gt; </code></pre>  <p><strong>VF page:</strong> </p>  <pre><code>&lt;apex:page &gt; &lt;c:Google_Component id="billing" idcomponent="billingid" &gt;&lt;/c:Google_Component&gt; &lt;!--&lt;c:Google_Component id="shipping" idcomponent="shipping" &gt;&lt;/c:Google_Component&gt; --&gt; &lt;/apex:page&gt; </code></pre>  <p><strong>Controller:</strong></p>  <pre><code>public class GoogleComponentController{ public string componentid{get;set;} public void GoogleComponentController(){ system.debug('@@@@&gt;'+componentid); }  } </code></pre>