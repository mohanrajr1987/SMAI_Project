<p>I wanted to create a bitmap from an icon file or a PE file, but I could specify neither the resource index nor the image size with <code>System.Drawing.Icon.ExtractAssociatedIcon</code>, so I wrote my own implementation using the Windows API.</p>  <pre><code>public static class IconExtractor {     [DllImport("User32", CallingConvention = CallingConvention.StdCall, EntryPoint = "DestroyIcon")]     private static extern bool DestroyIcon (         IntPtr hIcon);      [DllImport("Shell32", CallingConvention = CallingConvention.StdCall, CharSet = CharSet.Unicode, EntryPoint = "ExtractAssociatedIconW")]     private static extern IntPtr ExtractAssociatedIcon (         IntPtr hInstance,         [MarshalAs(UnmanagedType.LPWStr)] StringBuilder lpIconPath,         ref ushort lpiIcon);      public static ImageSource Load (string path, ushort index = 0, int size = 32) {         try {             IntPtr hIcon = ExtractAssociatedIcon(IntPtr.Zero, new StringBuilder(path, 260), ref index);             BitmapSource bmsrc = Imaging.CreateBitmapSourceFromHIcon(hIcon, new Int32Rect(0, 0, size, size), BitmapSizeOptions.FromEmptyOptions());             DestroyIcon(hIcon);             return bmsrc;         } catch (Exception) {             return null;         }     } } </code></pre>  <p>Now I can specify the resource index (in case I'm extracting an icon from a PE file), but it always loads the icons with an edge length of 32 pixels*. <strong>Does this behavior come from</strong> <code>ExtractAssociatedIcon</code> <strong>? If not, is there a way to specify the size that should be loaded?</strong></p>  <hr>  <p>* When opening the PE file with <a href="http://www.nirsoft.net/utils/iconsext.html" rel="nofollow">IconExtractor (v1.47)</a>, it shows me different icons (with their indexes) and it clearly shows that every icon resource has multiple sizes.</p>  <p><a href="http://i.stack.imgur.com/yrIyh.png" rel="nofollow"><img src="http://i.stack.imgur.com/yrIyh.png" alt="enter image description here"></a></p>