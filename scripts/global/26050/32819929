<p>I got a custom component, (with its own Controller, and its own xib) which has a button. I made it using <a href="http://iphonedev.tv/blog/2014/12/15/create-an-ibdesignable-uiview-subclass-with-code-from-an-xib-file-in-xcode-6" rel="nofollow">this</a> tutorial.</p>  <p>In main ViewController, I have four of these components, inside a ScrollView. I want the app to react to the clicking of that button preparing a segue.</p>  <p>I cannot do it from my custom component controller, because its an UIView, and cannot connect from the custom component to the main ViewController, because its not a direct sibling, there is a ScrollView. So, I cannot make an IBAction from the buttons in the View Controller of the Main.storyboard. </p>  <p>My goal is, from the custom component, create an IBAction in the Controller for the Main.storyboard, so I can start a segue and present one scene or another, depending of which button pressed the user.</p>  <p>How could I achieve this? Thank you.</p>  <p>My custom component controller:</p>  <pre><code>    import UIKit      @IBDesignable class CustomView: UIView {      // Our custom view from the XIB file     var view: UIView!      @IBOutlet weak var label: UILabel!     @IBOutlet weak var icono: UIImageView!     @IBAction func onClick(sender: UIButton) {         println("button \(label.text!)")         switch label.text!{             case "Text 1":                 println("First component")              case "Text 2":                 println("Second component")             case "Text 3":                 println("Third component")             case "Text 4":                 println("Fourth component")             default:                 println("Error")         }     }     @IBInspectable var image: UIImage? {         get {             return icono.image         }         set(image) {             icono.image = image         }     }      @IBInspectable var text: String? {         get {             return label.text         }         set (text){             label.text=text         }     }      func xibSetup() {         view = loadViewFromNib()          // use bounds not frame or it'll be offset         view.frame = bounds          // Make the view stretch with containing view         view.autoresizingMask = UIViewAutoresizing.FlexibleWidth | UIViewAutoresizing.FlexibleHeight         //self.view.backgroundColor = UIColor.purpleColor().colorWithAlphaComponent(0)         self.view.backgroundColor=UIColor.clearColor()         // Adding custom subview on top of our view (over any custom drawing &gt; see note below)         addSubview(view)      }      func loadViewFromNib() -&gt; UIView {          let bundle = NSBundle(forClass: self.dynamicType)         let nib = UINib(nibName: "CustomView", bundle: bundle)         let view = nib.instantiateWithOwner(self, options: nil)[0] as! UIView          return view     }     /*     // Only override drawRect: if you perform custom drawing.     // An empty implementation adversely affects performance during animation.     override func drawRect(rect: CGRect) {         // Drawing code     }     */      override init(frame: CGRect) {         // 1. setup any properties here          // 2. call super.init(frame:)         super.init(frame: frame)          // 3. Setup view from .xib file         xibSetup()     }      required init(coder aDecoder: NSCoder) {         // 1. setup any properties here          // 2. call super.init(coder:)         super.init(coder: aDecoder)          // 3. Setup view from .xib file         xibSetup()     }  } </code></pre>  <p>My Main.storyboard's ViewController:</p>  <pre><code>import UIKit  class ViewController: UIViewController {   @IBOutlet weak var customViewVirtual: CustomView! @IBOutlet weak var customViewContactar: CustomView! @IBOutlet weak var customViewPresenciales: CustomView! @IBOutlet weak var customViewCalendario: CustomView!  override func viewDidLoad() {     super.viewDidLoad()     self.view.backgroundColor = UIColor(patternImage: UIImage(named: "fondo")!)     customViewVirtual.backgroundColor=UIColor.clearColor()     customViewContactar.backgroundColor=UIColor.clearColor()     customViewPresenciales.backgroundColor=UIColor.clearColor()     customViewCalendario.backgroundColor=UIColor.clearColor()        // Do any additional setup after loading the view, typically from a nib. }   override func didReceiveMemoryWarning() {     super.didReceiveMemoryWarning()     // Dispose of any resources that can be recreated. } </code></pre>  <p>}</p>