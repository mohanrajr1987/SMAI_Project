<p>I have a subclass of <code>UIView</code> called <code>TitleView</code>, all this subclass does is override <code>layerClass</code> to return <code>CATransformLayer</code>.</p>  <p>My <code>titleView</code> property has some subviews; a <code>titleBackgroundView</code> and a <code>titleLabel</code>.</p>  <p>When I run my code the <code>titleView</code>’s top layer is visible (green background), but when I run my flip animation, there’s no animation. The code just jumps to the end state. Furthermore there’s no bottom layer visible (red background), just a reversed version of the <code>titleView</code> (a transformed <code>titleLabel</code>).</p>  <p>In the IBOutlet setter I have the following code:</p>  <pre><code>@IBOutlet private weak var titleView: TitleView! {     didSet {         titleView.backgroundColor = UIColor.clearColor()          let topLayer = CALayer()         topLayer.backgroundColor = UIColor.greenColor().CGColor         topLayer.frame = titleView.bounds         topLayer.doubleSided = false         topLayer.zPosition = 3          titleView.layer.addSublayer(topLayer)          let bottomLayer = CALayer()         bottomLayer.backgroundColor = UIColor.redColor().CGColor         bottomLayer.frame = titleView.bounds         bottomLayer.doubleSided = false         bottomLayer.zPosition = 2         bottomLayer.transform = CATransform3DMakeRotation(CGFloat(M_PI), 1, 0, 0)          titleView.layer.addSublayer(bottomLayer)     } } </code></pre>  <p><code>titleView</code> animation code:</p>  <pre><code>private func setIsCategoriesShowing(showCategories: Bool, animated: Bool) {     let alreadyInFinishState = (isShowingCategories == showCategories) ? true : false      if alreadyInFinishState     {         return     }      //  Setup animations      isAnimatingCategories = true      headerView.superview?.bringSubviewToFront(headerView)      titleView.layer.setAnchorPointDynamically(CGPoint(x: 0.5, y: 1)) // Change position when updating anchor point      //  Animate      let duration: NSTimeInterval = animated ? 0.8 : 0     let options: UIViewAnimationOptions = (showCategories == true) ? [.CurveEaseIn] : [.CurveEaseOut]     let newRotationValue: CGFloat = (showCategories == true) ? -179 : 0     let damping: CGFloat = (showCategories == true) ? 0.7 : 1     let initialSpringVelocity: CGFloat = (showCategories == true) ? 0.5 : 1      UIView.animateWithDuration(duration,         delay: 0,         usingSpringWithDamping: damping,         initialSpringVelocity: initialSpringVelocity,         options: options,         animations: { () -&gt; Void in              var rotationAndPerspectiveTransform = CATransform3DIdentity             rotationAndPerspectiveTransform.m34 = 1 / -500             rotationAndPerspectiveTransform = CATransform3DRotate(rotationAndPerspectiveTransform, newRotationValue, 1, 0, 0);              self.titleView.layer.sublayerTransform = rotationAndPerspectiveTransform;         }) { (success) -&gt; Void in              if showCategories == false             {                 self.titleView.layer.sublayerTransform = CATransform3DIdentity             }              self.isAnimatingCategories = false             self.isShowingCategories = showCategories     } } </code></pre>