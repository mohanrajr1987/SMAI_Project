<p>I have a simple series of integration tests that I want to issue a rollback after each tests. The problem I'm facing is that while I see a rollback statement issued in the console (I have <code>SQLALCHEMY_ECHO = True</code> in my configuration), the data is still present in the database. Obviously, I would expect the data I insert after every test to be gone from the database.</p>  <p>Here is an example with just enough code to trigger my issue -</p>  <pre><code>import pytest from app import create_app from app import db as _db from app.main.models import Customer   @pytest.yield_fixture(scope='session') def app():     app = create_app('testing')     app_ctx = app.app_context()     app_ctx.push()      yield app      app_ctx.pop()   @pytest.yield_fixture(scope='session') def db(app):     _db.app = app     _db.create_all()      yield _db      print('drop_all()')   @pytest.yield_fixture(scope='function') def session(db):     conn = db.engine.connect()     trans = conn.begin()     session = db.create_scoped_session(options={ 'bind': conn })     db.session = session      yield session      trans.rollback()     conn.close()     session.remove()   def test_foo(session, app):             cust = Customer(name='foo')     session.add(cust)     cust2 = Customer(name='bar')     session.add(cust2)     session.commit()      client = app.test_client()     response = client.get('/api/customers')      from json import loads     json_response = loads(response.data.decode('utf-8'))     custs = json_response['customers']      assert len(custs) == 2     assert custs[0]['name'] == 'foo' </code></pre>  <p>SQLAlchemy log -</p>  <pre><code>2015-09-24 13:56:27,601 INFO sqlalchemy.engine.base.Engine BEGIN (implicit) 2015-09-24 13:56:27,667 INFO sqlalchemy.engine.base.Engine BEGIN (implicit) 2015-09-24 13:56:27,669 INFO sqlalchemy.engine.base.Engine INSERT INTO customers (name) OUTPUT inserted.id VALUES (?) 2015-09-24 13:56:27,669 INFO sqlalchemy.engine.base.Engine ('foo') 2015-09-24 13:56:27,715 INFO sqlalchemy.engine.base.Engine INSERT INTO customers (name) OUTPUT inserted.id VALUES (?)  2015-09-24 13:56:27,715 INFO sqlalchemy.engine.base.Engine ('bar') 2015-09-24 13:56:27,749 INFO sqlalchemy.engine.base.Engine COMMIT 2015-09-24 13:56:27,779 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)  2015-09-24 13:56:27,779 INFO sqlalchemy.engine.base.Engine SELECT customers.id AS customers_id, customers.name AS customers_name FROM customers  2015-09-24 13:56:27,780 INFO sqlalchemy.engine.base.Engine () 2015-09-24 13:56:27,827 INFO sqlalchemy.engine.base.Engine ROLLBACK 2015-09-24 13:56:27,827 INFO sqlalchemy.engine.base.Engine ROLLBACK </code></pre>  <p>As you can see I there are 3 implicit transactions being started, but only 2 rollbacks. Why isn't the transaction that I'm beginning during the test session being rolled back?</p>  <p>I've read SQLAlchemy's documentation with regards to rolling back during tests, but nothing sticks out.</p>