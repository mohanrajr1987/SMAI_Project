<p>I am pretty new to using both <code>SQLALCHEMY</code> and the <code>PYRAMID</code> web framework. I am struggling with what might be a simple fix to some, but I haven't been able to figure it out. I have looked at some <a href="http://stackoverflow.com/questions/7671886/attributeerror-instrumentedlist-object-has-no-attribute">posts</a> <a href="http://stackoverflow.com/questions/882215/rendering-json-objects-using-a-django-template-after-an-ajax-call">here on</a> <a href="http://stackoverflow.com/questions/27733335/display-friends-name-by-flask-many-to-many-sqlalchemy">Stacks</a>, but they don't quite answer my issue.</p>  <p>I have a <code>many-to-many</code> relationship in my <code>database</code> table. I am trying to <code>return</code> an object (<code>categories</code>) from the parent table <code>assessment</code>. I am trying at the moment to: <code>return {'name': assessment.name, 'text': assessment.text, 'user': assessment.user_id, 'video':assessment.video_id, 'categories': assessment.categories.assessment_category_link}</code> but this doesn't work --> <code>'categories': assessment.categories.assessment_category_link</code></p>  <p>I am able to return all the objects except categories. Below is the relevant error and code.</p>  <p>TRACEBACK:</p>  <pre><code> line 306, in get_assessment     return {'name': assessment.name, 'text': assessment.text, 'user': assessment.user_id, 'video':assessment.video_id, 'categories': assessment.categories.assessment_category_link} AttributeError: 'InstrumentedList' object has no attribute 'assessment_category_link' </code></pre>  <p>SQLALCHEMY TABLE/RELATIONSHIP: </p>  <pre><code># MANY-to-MANY association_table = Table('assessment_category_link', Base.metadata,     Column('assessment_id', Integer, ForeignKey('assessments.assessment_id')),     Column('category_id', Integer, ForeignKey('categories.category_id')))  class Assessment(Base):     # column/entity code     categories = relationship('Category', secondary='assessment_category_link', backref='assessments')      def __init__(self, name, text, user, video, categories):         # CODE          self.categories = categories </code></pre>  <p>The GET() method, specifically the <code>return</code> value that is throwing the error:</p>  <pre><code>@view_config(route_name='assessment', request_method='GET', renderer='json') def get_assessment(request):     with transaction.manager:         assessment_id = int(request.matchdict['id'])         assessment = api.retrieve_assessment(assessment_id)         if not assessment:             raise HTTPNotFound()         return {'name': assessment.name, 'text': assessment.text, 'user': assessment.user_id, 'video':assessment.video_id, 'categories': assessment.categories.assessment_category_link} </code></pre>