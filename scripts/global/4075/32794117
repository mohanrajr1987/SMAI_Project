<p>For some reason flask-sqlalchemy seems to have problems resolving the sqlite tables when running under apache + mod_wsgi.</p>  <p>simplified example:</p>  <pre><code>from models import db, User  app = Flask(__name__) app.config['DEBUG'] = True app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:////tmp/zop.sqlite3' db.init_app(app) </code></pre>  <p>models.py:</p>  <pre><code>from flask.ext.sqlalchemy import SQLAlchemy db = SQLAlchemy()  class User(db.Model):     id = db.Column(db.Integer, primary_key=True)     name = db.Column(db.String(50), unique=True)     email = db.Column(db.String(120), unique=True)     ... </code></pre>  <p>Basically my app works fine when I run it via <code>python myapp.py</code></p>  <p>But when I run this under apache + mod_wsgi, I get the following error when I run something like <code>User.query.filter_by(name=username).first()</code>:</p>  <pre><code>OperationalError: (sqlite3.OperationalError) no such table: user [SQL: u'SELECT user.id AS user_id, user.name AS user_name, user.email AS user_email \\nFROM user \\nWHERE user.name = ?\\n LIMIT ? OFFSET ?'] [parameters: ('foo', 1, 0)] </code></pre>  <p>Is there anything I need to change to get it working under apache+mod_wsgi?</p>