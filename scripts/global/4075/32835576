<p>I know the following can be achieved in a different way, but I am looking for a specific way of using select statements as a column in SQLAlchemy.</p>  <p>An example query is:</p>  <pre><code>SELECT employee.*, (         SELECT avg(salary)          FROM employee as e1          WHERE e1.department_id = e2.department_id     ) as avg_salary FROM employee as e2 </code></pre>  <p>I'm using only the Core component in SQLAlchemy. This is what I got so far:</p>  <pre><code>e1 = employee.alias('e1') e2 = employee.alias('e2')  inner = select(   columns=[func.mean(e1.salary).label('avg_salary')],   from_obj=e1   whereclause=e1.department_id == e2.department_id )  outer = select(   columns=[e2, inner.avg_salary],   from_obj=e2 ) </code></pre>  <p>However, this (<code>outer</code>) produces a <code>SELECT ... from employee as e1, (select ...) as e2</code> and not the desired query I am looking for.</p>  <p>How can I arrive at the SQL query using SQLAlchemy core?</p>