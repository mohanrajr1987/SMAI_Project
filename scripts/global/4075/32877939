<p>Suppose I have a one-to-many relationship, where the parents and children are grouped by some <code>group_id</code>.</p>  <blockquote>   <p>Note: this example is a stripped down version of my code, which is actually a many-to-many relationship. There may be some errors unrelated to the question.</p> </blockquote>  <pre><code>class Node(Base):     __tablename__ = 'node'     id = Column(GUID, default=uuid.uuid4, primary_key=True)     group_id = Column(GUID, nullable=False, primary_key=True)     parent_id = Column(GUID)     title = Column(Text, nullable=False)  class Leaf(Base):     __tablename__ = 'leaf'     id = Column(GUID, nullable=False, primary_key=True)     group_id = Column(GUID, nullable=False, primary_key=True)     parent_id = Column(GUID, nullable=False) </code></pre>  <p>The <code>group_id</code> is used as a way to create new versions - so nodes and leaves with the same <code>id</code> can exist in multiple groups.</p>  <p>What I want to do is compare two groups, and find all the leaves whose parents have changed. I am trying to use an outer join to do the comparison, and then two joins to filter the parent nodes:</p>  <pre><code>def find_changed_leaves(group_id_a, group_id_b, session):     NodeA = model.Node     NodeB = aliased(model.Node, name='node_b')     LeafA = model.Leaf     LeafB = aliased(model.Leaf, name='leaf_b')      query = (session.query(LeafA, LeafB)         .outerjoin(LeafB, LeafA.id == LeafB.id)          .join(NodeA, (LeafA.group_id == NodeA.group_id) &amp;                      (LeafA.parent_id == NodeA.id))         .join(NodeB, (LeafB.group_id == NodeB.group_id) &amp;                      (LeafB.parent_id == NodeB.id))          # Group membership         .filter(LeafA.group_id == group_id_a,                 LeafB.group_id == group_id_b)          # Filter for modified parents         .filter(NodeA.title != NodeB.title)     )      return query.all() </code></pre>  <p>This works, but it doesn't show leaves that are only in one of the groups (e.g. if a leaf was added to a node in the new group). How can I show all the leaves, returning <code>None</code> for a leaf that is missing from one of the groups?</p>  <p><em>Edit:</em> I see there are <a href="http://weblogs.sqlteam.com/jeffs/archive/2007/10/11/mixing-inner-outer-joins-sql.aspx" rel="nofollow">perils mixing join with outer join</a>. I tried naively changing it to <code>.outerjoin(NodeA, ...</code>, but it didn't help.</p>