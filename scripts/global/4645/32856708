<p>Bottom line, I have a huge multidimensional array returned by <em>ldap_get_entries</em> that I am trying to parse into different groups based on the location attribute.</p>  <p>In PowerShell I could do something like:</p>  <pre><code>$location1 = Get-ADUser -Filter * | ? {?_.l -eq "test_location"} </code></pre>  <p>What I am currently doing within PHP (as far as my brain will let me go) is something like:</p>  <pre><code>Foreach ($records as $record) {     if (isset($record['l'])) {         switch ($record['l'][0]) {             case "test_location1":                 $location1[] = $record;                 continue 2;             case "test_location2":                 $location2[] = $record;                 continue 2;                      }     } } </code></pre>  <p>I then use a <em>foreach</em> loop (alternative syntax) against an array of location variables ($location1, $location2), that I used the above method, to sort records into their appropriate location variable. In this way, I build an HTML table grouping each locations records together. I build a new table for each location with some HTML code in between each group, so I don't believe sorting the ldap results by location will work, as it would output one large table.</p>  <p>Is there any way to specify a WHERE clause in PHP? So that I can assign all records in an array with a matching key value to variable1 and all records in an array with a different matching key value to variable2.</p>  <p>I am assuming I am tackling this in an amateur scripting way.. If there is an easier way to accomplish this task (maybe skipping the assign records to variables part), or any sort of "best practice" I am missing here, I am up for learning it.</p>  <p>Thanks in advance!!</p>