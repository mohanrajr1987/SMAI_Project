<p>One of PHP's biggest advantages , is that because its interpreted and not compiled , you can fetch from the DB an entity with a dynamic composition of attributes/properties and can refer to them in code as if they were static getters/setters :</p>  <pre><code>$person = $this-&gt;getPerson(); $person-&gt;getN1(); ... ... ... ... $person-&gt;getNn(); </code></pre>  <p>Where getN1...getNn were not declared for the person class at all .</p>  <p>This enables the language to be very efficient in working in-front of dynamic DB's and be used in CMS's - where virtually nothing is known about the received entity , as the user configured/declared it his own via the ADMIN back-end .</p>  <p>Can this advantage and behavior be replicated in Java without working with dictionaries/collections , which de-facto make you give away most of the basic language get/set syntax and object handling and stay with the dictionary.keyexist / dictioanry.get() syntax through out the entire system - which is perhaps more error prone then dynamic language (just think of all the constants/readonly you need to declare when accessing the entity dictionary fields if you want it to be best practiced) .</p>  <p>If not , would you suggest that PHP is simply more suitable for CMS's , where the user can configure the entities himself ? </p>  <p>Thank you,</p>  <p>James</p>