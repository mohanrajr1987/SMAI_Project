<p>Lately I'm trying to scrape Information from a website (<a href="http://www.kicktipp.de" rel="nofollow">kicktipp</a>) using Nodejs, the <a href="https://github.com/request/request" rel="nofollow">request module</a> and cheerio. Since this site requires an authentication to view most of it's sites, I tried to login via a post request and checking if the user is logged in with the following code (I replaced the credentials with dummy data but I use real data in my actual script):</p>  <pre><code>var request = require('request'); var jar = request.jar(); var request = request.defaults({   jar: jar,   followAllRedirects: true }); var jar = request.jar(); var cheerio = require('cheerio');  request.post({     url: 'http://www.kicktipp.de/info/profil/loginaction',     headers: { 'content-type': 'application/x-www-form-urlencoded' },     method: 'post',     jar: jar,     body: 'kennung=test@example.com&amp;passwort=1234567890&amp;_charset_=UTF-8&amp;submitbutton=Anmelden' }, function(err, res, body){   if(err) {     return console.error(err);   };    request.get({     url: 'http://www.kicktipp.de/',     method: 'get',     jar: jar   }, function(err, res, body) {     if(err) {       return console.error(err);     };      var $ = cheerio.load(body);     var text = $('.dropdownbox &gt; li &gt; a').text();     console.log(text);     var error = $('#kicktipp-content &gt; div.messagebox.errors &gt; p').text();     console.log(error);     var cookies = jar.getCookies('http://www.kicktipp.de/');     console.log(cookies);   }); }); </code></pre>  <p>The parameters send by the html-form (as inspected with the browser) looking like this:</p>  <pre><code>kennung=test@example.com&amp;passwort=1234567890&amp;_charset_=UTF-8&amp;submitbutton=Anmelden </code></pre>  <p>With that script, my <code>cookie jar</code> looks like this:</p>  <pre><code>[ Cookie="JSESSIONID=F650D7F5CD6AF4F6B0944B2190EE2D29.kt213; Path=/; hostOnly=true; aAge=1ms; cAge=179ms" ] </code></pre>  <p>The <code>JSESSIONID</code> is saved successfully but the server will not be logged in since <code>console.log(text)</code> prints <code>Login</code> but it should print <code>Logout</code> if the user is signed in properly.</p>  <p>After inspecting the login request with the browser I recognized that the browser receives a new cookie everytime a page on this domain is requested via <code>set-cookie</code> in the response header like this:</p>  <pre><code>Set-Cookie: login=bS5zcGxpZXRob2V2ZXJAZ21haWwuY29tOjE0NzU0MDA3MjAxMjA6Mzg1NTI4OGY3ODgzN2FkMzllNTA0NWNkY2ZjMjBjZGM; Domain=.kicktipp.de; Expires=Sun, 02-Oct-2016 09:32:00 GMT; Path=/; HttpOnly </code></pre>  <p>However I'm not able (or just don't know how) to get this cookie into my request jar and therefore visiting the page as a logged in user.</p>  <p>Is there anything I'm missing here to stay logged in (or log in to the page at all)? Thanks in advance.</p>