<p>I have a small open source application. I used <code>[NSString stringWithContentsOfURL]</code> to download website's html and check if user has been logged in in Safari.</p>  <p>Before El Capitan everything was working fine: <code>stringWithContentsOfURL</code> used sharedCookiesStorage (Safari ones) and returned the html of the page as logged in user.</p>  <p>But in El Capitan this is not working this way: <code>stringWithContentsOfURL</code> returns the html of the page, where the user is not logged in. So it doesn't use Safari's cookies anymore. (I'm logged in on this page in Safari).</p>  <p>There were some changes in El Capitan, I had to add all my domains to <code>NSExceptionDomains</code> in <code>info.plist</code>, so it could get data from http://, but I haven't found any changes in <code>stringWithContentsOfURL</code> in the latest OSX release.</p>  <p>What can be the problem? Everything was fine before upgrading. Maybe I could somehow pass <code>[NSHTTPCookieStorage sharedHTTPCookieStorage]</code> to <code>[NSString stringWithContentsOfURL]</code>?</p>  <p>The actual code, that gets html is:</p>  <pre><code>html = [NSString stringWithContentsOfURL:[NSURL URLWithString: [trackerSettDict objectForKey:@"loginCheckURL"]] encoding: NSUTF8StringEncoding error:&amp;error]; </code></pre>  <p>Some code to test the error:</p>  <pre><code>NSError *error; NSString *html; html = [NSString stringWithContentsOfURL:[NSURL URLWithString: @"https://google.com"] encoding: NSWindowsCP1251StringEncoding error:&amp;error]; NSLog(@"%@", html); </code></pre>