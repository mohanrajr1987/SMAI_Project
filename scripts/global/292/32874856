<p>I working on a django project which uses the built in django login method to authenticate users with the sessionID token and the session based authentication mechanism.</p>  <p>On the other hand i have my API which is built with django-rest-framework and uses token-authentication. (save the token in a cookie)</p>  <p>Lets say my website is running on <strong>example.com</strong> and the api is on <strong>api.example.com</strong> and I have a angularJS app running on <strong>admin.example.com</strong>.</p>  <p>Each time I login on <strong>example.com</strong> I will get the sessionID token as a cookie but when i go to the <strong>admin.example.com</strong> app I have to login again (angularJS loginform), because of the token-authentication.</p>  <p>I have written a django middelware that logs the user in when the cookie for the token authentication is set. This works quite buggy:</p>  <pre><code>class UserCookieMiddleWare(object):     """     Middleware to set token cookie     If user is authenticated and there is no cookie, set the cookie,     If the user is not authenticated and the cookie remains, delete it     """      def process_response(self, request, response):         # if user and no cookie, set cookie         if request.user.is_authenticated() and not request.COOKIES.get('token'):             token = request.user.get_auth_token()             response.set_cookie("token", token.key)         elif not request.user.is_authenticated() and request.COOKIES.get('token'):             key = request.COOKIES["token"]             try:                 token = Token.objects.get(key=key)                 user = token.user                 user.backend = 'django.contrib.auth.backends.ModelBackend'                 login(request, user)             except Token.DoesNotExist:                 response.delete_cookie("token")         return response </code></pre>  <p>What i want to do is that the user can only login once and is authenticated on every site. (example.com, admin.example.com, ...) Is there any way to make a better shared authentication between my websites?</p>  <p>Thanks</p>