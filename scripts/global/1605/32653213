<p>I am using the Visual Studio Performance Tools in an attempt to discover why my program is running out of memory. After guessing what to do I have produced this display:-</p>  <p><a href="http://i.stack.imgur.com/cjh8l.png" rel="nofollow"><img src="http://i.stack.imgur.com/cjh8l.png" alt="enter image description here"></a></p>  <p>It seems to suggest <a href="https://msdn.microsoft.com/en-us/library/dn342825.aspx" rel="nofollow">here</a> that the size of the object includes the object only and the inclusive size includes all the objects that object references. But the objects concerned are defined like this:-</p>  <pre><code>Public Structure Temperature     Implements IMeasurements, IComparable(Of Temperature)      Private Const KELVIN_TO_CENTIGRADE     As Double = 273.15     Private temperature As Double      Friend Sub New(ByVal passed_temperature As Double)         temperature = passed_temperature     End Sub      ' some other methods, operator overloads and the IComparable     ' implementation  End Structure </code></pre>  <p>so the sizes clearly don't mean that unless there is a staggering amount of wasted space associated with these structures.</p>  <p>So, does anyone know what this is all about? Am I completely missing the point here?</p>