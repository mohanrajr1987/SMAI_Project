<p>I am trying to use <code>perf</code> to profile my Android application.</p>  <p>With help of <a href="https://google.github.io/fplutil/android_ndk_perf.html%20fplutil" rel="nofollow">fplutil</a> project I managed to install perf on Android device, run <code>perf record</code> and then <code>perf report</code> on host machine.</p>  <p>Usually when I run <code>perf report -g</code> I expect to see call graph similar to this one:</p>  <pre><code>47.91%    a.out  a.out              [.] f5()           |           --- f5()              |              |--53.82%-- f4()              |          |              |          |--56.16%-- f3()              |          |          |              |          |          |--49.14%-- f2()              |          |          |          |              |          |          |          |--52.92%-- f1()              |          |          |          |          a()              |          |          |          |          main              |          |          |          |          __libc_start_main              |          |          |          |              |          |          |           --47.08%-- a()              |          |          |                     main              |          |          |                     __libc_start_main </code></pre>  <p>However when I execute <code>perf report</code> for data collected on Android device I do not see proper call graph, like if stack is not unwinding properly:</p>  <pre><code>4.98%  app_name  my_lib.so  [.] void quat_apply&lt;double&gt;(double*, double const*, double const*, int, double)             |                                                                                                           --- 0xbee75fe4                                                                                               |                                                                                                           --- 0xbee760c4                                                                                               |                                                                                                           --- 0xbee75c0c  </code></pre>  <p>What should I do to replace these hex addresses with function names?</p>  <p>I am already building my code with <code>-g</code> and <code>-fno-omit-frame-pointer</code>, am I missing something else?</p>