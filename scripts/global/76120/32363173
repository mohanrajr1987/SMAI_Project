<p>I'm just getting started with MiniMagick within a Rails app and I'm having an issue that I can't seem to find referenced anywhere. My super-simple test case is as follows:</p>  <pre><code>MiniMagick.configure do |config|   config.cli = :graphicsmagick end  image = MiniMagick::Image.open("Sunset.png") image.resize "100x100" image.format "png" image.write('composite.png') </code></pre>  <p>Which results in </p>  <pre><code>NoMethodError: undefined method `gsub' for nil:NilClass /Users/me/.rvm/gems/jruby-1.7.18@project/gems/mini_magick-4.3.0/lib/mini_magick/shell.rb:32:in `execute' </code></pre>  <p>The error is thrown by the <code>image.resize</code> call (although the same error is thrown by <code>image.valid?</code>, <code>image.blank?</code>, and undoubtedly others), and the line of code in the <code>MiniMagick::Shell</code> class throwing the error is:</p>  <pre><code>send("execute_#{MiniMagick.shell_api.gsub("-", "_")}", *command) </code></pre>  <p>Leading me to the conclusion that <code>MiniMagick.shell_api</code> is nil when it shouldn't be. </p>  <p>I'm on </p>  <ul> <li>JRuby-1.7.18</li> <li>Rails 3.2.21</li> <li>Mac OSX 10.9.5</li> <li>GraphicsMagick 1.3.21 2015-02-28 Q8</li> </ul>  <p>I also saw the same error using ImageMagick 6.9.1-1 Q16 x86_64 2015-04-15. I can resize images without a problem using GraphicsMagick on the command line. I even wrote a simple Ruby class outside of my Rails app and the same code works fine within that! </p>  <p>Any thoughts? </p>