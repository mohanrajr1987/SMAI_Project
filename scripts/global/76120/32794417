<p>The following script runs, but executes only partially</p>  <pre><code>        rubber.sudo_script "create_master_db", &lt;&lt;-ENDSCRIPT           sudo -i -u postgres psql -c "#{create_user_cmd}"           sudo -i -u postgres psql -c "#{create_replication_user_cmd}"           sudo -i -u postgres psql -c "CREATE DATABASE #{env.db_name} WITH OWNER #{env.db_user}"           sudo -i -u postgres psql -c "CREATE SCHEMA postgis"           sudo -i -u postgres psql -c "CREATE EXTENSION PostGIS WITH SCHEMA postgis"           sudo -i -u postgres psql -c "SET search_path = public, postgis"           sudo -i -u postgres psql -c "CREATE EXTENSION fuzzystrmatch"           sudo -i -u postgres psql -c "CREATE SCHEMA topology"           sudo -i -u postgres psql -c "CREATE EXTENSION postgis_topology WITH SCHEMA topology"           sudo -i -u postgres psql -c "GRANT ALL ON postgis.spatial_ref_sys TO PUBLIC"           sudo -i -u postgres psql -c "GRANT ALL ON postgis.geometry_columns TO PUBLIC"         ENDSCRIPT </code></pre>  <p>postgresql-9.4-main.log registers a statement, but <code>SELECT PostGIS_full_version();</code> does not return an active extension.   The log <strong>does not</strong> register any scheme setting, even with <code>debug5</code> set. </p>  <p>Manually, as postgres user accessing the database, I have verified and <code>CREATE EXTENSION PostGIS WITH SCHEMA postgis;</code> lead to ERROR:  schema "postgis" does not exist.  Thus the schema was not created. The same is true for topology schema.  (<em>Subsequently, as user postgres, CREATE SCHEMA [...], CREATE EXTENSION WITH SCHEMA [...] and the extension becomes available per <code>SELECT [...]</code></em>).</p>  <p>Various syntassi were attempted unsuccessfully.</p>