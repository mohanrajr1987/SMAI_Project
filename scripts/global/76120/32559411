<p>I noticed that in the Shopify API documentation, they mention the possibility to <strong>retreive multiple orders in a single call using "A comma-seperated list of order ids"</strong> as a parameter called "ids".</p>  <p>Link to section of docs I'm referring to: <a href="https://docs.shopify.com/api/order#index" rel="nofollow">https://docs.shopify.com/api/order#index</a></p>  <p>I've been using the shopify_api gem for many years, which is based around Rails ActiveResource. I currently use it with Rails 3.2.13, and it works great.</p>  <p>I know how to retreive a single record:</p>  <pre><code># params[:id] = "123456789" order = ShopifyAPI::Order.find(params[:id]) </code></pre>  <p>Or many records at once:</p>  <pre><code>orders = ShopifyAPI::Order.find(:all, :params =&gt; {:limit =&gt; 250, :page =&gt; 2}) </code></pre>  <p>However, I cannot seem to get it to work using multiple ids. Any ideas what I am doing wrong here?</p>  <pre><code># params[:ids] = "123456789,987654321,675849301"   orders = ShopifyAPI::Order.find(:all, :params =&gt; {:ids =&gt; params[:ids]}) </code></pre>  <p>Which issues this GET request: <code>https://xxxxxx.myshopify.com:443/admin/orders.json?ids=123456789,987654321,675849301</code></p>  <p>But gives nothing back, <code>orders = []</code></p>  <p><strong>UPDATE:</strong></p>  <p>I've also tried the following suggestions:</p>  <pre><code># params[:ids] = "123456789,987654321,675849301"   orders = ShopifyAPI::Order.find(params[:ids]) </code></pre>  <p>Which issues this GET request: <code>https://xxxxxx.myshopify.com:443/admin/orders/123456789,987654321,675849301.json</code></p>  <p>However this only returns the first order <code>123456789</code></p>  <p>And:</p>  <pre><code># params[:ids] = "123456789,987654321,675849301" ids_as_array = params[:ordersSel].split(",") orders = ShopifyAPI::Order.find(:all, :params =&gt; {ids: ids_as_array}) </code></pre>  <p>Which issues this GET request: <code>https://xxxxxx.myshopify.com:443/admin/orders.json?ids[]=123456789&amp;ids[]=987654321&amp;ids[]=675849301</code></p>  <p>And results in a <code>Bad Request</code></p>  <p>Any help would be appreciated.</p>