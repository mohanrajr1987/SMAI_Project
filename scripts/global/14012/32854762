<p>I've been trying to get a regular expression to work for my code for a while and am wondering if anyone knows a better way.</p>  <p>I've got a big chunk of text to parse and want to split it into an array based on the lines. This would be straightforward, right? Using regex:</p>  <pre><code>var re:RegExp = /\n/;     arr = content.split(re); </code></pre>  <p>Easy. But I also want to only split on lines that do not have a space after them. I figured I'd use the \S character to match anything with a non-space character after the \n.</p>  <pre><code>var re:RegExp = /\n\S/;     arr = content.split(re); </code></pre>  <p>However, this now removes the first letter of every line I'm splitting (because it's matching those letters).</p>  <p>What's the best way to:</p>  <ol> <li>Ignore the spaces by using a caret (I tried something like <code>/\n^\' '/</code> but no luck)?</li> <li>Not lose that <code>\S</code> character when splitting the string into an array?</li> </ol>