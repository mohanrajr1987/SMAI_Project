<p>I am applying filters to a bitmap using something like: </p>  <p><code>TweenLite.to(origBitmap,0,{colorMatrixFilter:{saturation:2,brightness:3});</code></p>  <p>and that works fine.</p>  <p>I need to somehow apply a sharpen filter to <code>origBitmap</code> which I have successfully achieved using a <code>ConvolutionFilter</code>. The problem is after I've ran the above tweenlite call, then create a convolution filter and apply it to <code>origBitmap</code>, it removes the initial saturation and brightness filters and just keeps the sharpen filter</p>  <pre><code>private function applyEffects(effects:Array):void {   currentEffects = effects;   var props:Object = {};   for (var i:String in effects)   {     props[effects[i].effect] = effects[i].amount;   }   TweenLite.to(bitmap,0,{colorMatrixFilter:props});   //-- props could look like {saturation:2,brightness:3}     //-- This will sharpen the container sprite   var matrix:Array = [0, -1,  0,                      -1,  5, -1,                       0, -1,  0];   var conv:ConvolutionFilter = new ConvolutionFilter();   conv.matrixX = 3;   conv.matrixY = 3;   conv.matrix = matrix;   conv.divisor = 1;    bitmap.filters = [conv]; //-- this removes the above filters and just sharpens the image } </code></pre>  <p>Is there a way to also incorporate the ConvolutionFilter in that TweenLite call above? I've searched quite a bit and found some guy made a class called TweenMan which was based around your class where ConvolutionFilter is incorporated: <a href="https://github.com/danro/tweenman-as3" rel="nofollow">https://github.com/danro/tweenman-as3</a></p>