<p>in my NavigationDrawerFragment.java</p>  <p>i have this code</p>  <pre><code>expListView.setOnChildClickListener(new ExpandableListView.OnChildClickListener() {     @Override     public boolean onChildClick(ExpandableListView parent, View v,                                 int groupPosition, int childPosition, long id) {         String header = listDataHeader.get(groupPosition);         Category child = listDataChild.get(header).get(childPosition);          // child.name to get the name         // child.id to get the id         //Toast.makeText(getActivity(),"ChildNme: "+child.name+" ChildId: "+child.id, Toast.LENGTH_SHORT).show();          selectItem(1);          return false;     } }); </code></pre>  <p>after i click the child, i set selectItem to 1</p>  <p>the selectItem(1) will go to MainActivity.java</p>  <pre><code>public void onNavigationDrawerItemSelected(int position) {         // update the main content by replacing fragments          FragmentManager fragmentManager = getFragmentManager();          // NEW STUFF         if(position == 1){             fragmentManager.beginTransaction()                     .replace(R.id.container, CategoryFragment.newInstance())                     .commit();         }  } </code></pre>  <p>my question is how to pass the child.name and child.id from NavigationDrawerFragment.java to MainActivity.java then pass to CategoryFragment?</p>  <p>or any other solution to pass the child.name and child.id to CategoryFragment.</p>  <p><strong>COMPLETE CODE</strong></p>  <p>NavigationDrawerFragment.java</p>  <pre><code>package com.example.administrator.mosbeau;  import android.app.FragmentManager; import android.os.AsyncTask; import android.support.v7.app.ActionBarActivity; import android.app.Activity; import android.support.v7.app.ActionBar; import android.support.v4.app.Fragment; import android.support.v7.app.ActionBarDrawerToggle; import android.support.v4.view.GravityCompat; import android.support.v4.widget.DrawerLayout; import android.content.SharedPreferences; import android.content.res.Configuration; import android.os.Bundle; import android.preference.PreferenceManager; import android.view.LayoutInflater; import android.view.Menu; import android.view.MenuInflater; import android.view.MenuItem; import android.view.View; import android.view.ViewGroup; import android.widget.Button; import android.widget.ExpandableListView; import android.widget.ListAdapter; import android.widget.ListView; import android.widget.SimpleAdapter; import android.widget.Toast;  import org.apache.http.HttpEntity; import org.apache.http.HttpResponse; import org.apache.http.client.methods.HttpPost; import org.apache.http.impl.client.DefaultHttpClient; import org.apache.http.params.BasicHttpParams; import org.json.JSONArray; import org.json.JSONException; import org.json.JSONObject;  import java.io.BufferedReader; import java.io.InputStream; import java.io.InputStreamReader; import java.util.ArrayList; import java.util.HashMap; import java.util.List;  /**  * Fragment used for managing interactions for and presentation of a navigation drawer.  * See the &lt;a href="https://developer.android.com/design/patterns/navigation-drawer.html#Interaction"&gt;  * design guidelines&lt;/a&gt; for a complete explanation of the behaviors implemented here.  */ public class NavigationDrawerFragment extends Fragment {      /**      * Remember the position of the selected item.      */     private static final String STATE_SELECTED_POSITION = "selected_navigation_drawer_position";      /**      * Per the design guidelines, you should show the drawer on launch until the user manually      * expands it. This shared preference tracks this.      */     private static final String PREF_USER_LEARNED_DRAWER = "navigation_drawer_learned";      /**      * A pointer to the current callbacks instance (the Activity).      */     private NavigationDrawerCallbacks mCallbacks;      /**      * Helper component that ties the action bar to the navigation drawer.      */     private ActionBarDrawerToggle mDrawerToggle;      private DrawerLayout mDrawerLayout;     private ListView mDrawerListView;     private View mFragmentContainerView;      private int mCurrentSelectedPosition = 0;     private boolean mFromSavedInstanceState;     private boolean mUserLearnedDrawer;      String myJSON;     private static final String TAG_RESULTS="result";     private static final String TAG_ID = "categories_id";     private static final String TAG_NAME = "categories_name";     JSONArray categories = null;       public NavigationDrawerFragment() {     }      Boolean InternetAvailable = false;     Seocnd detectconnection;      @Override     public void onCreate(Bundle savedInstanceState) {         super.onCreate(savedInstanceState);          // Read in the flag indicating whether or not the user has demonstrated awareness of the         // drawer. See PREF_USER_LEARNED_DRAWER for details.         SharedPreferences sp = PreferenceManager.getDefaultSharedPreferences(getActivity());         mUserLearnedDrawer = sp.getBoolean(PREF_USER_LEARNED_DRAWER, false);          if (savedInstanceState != null) {             mCurrentSelectedPosition = savedInstanceState.getInt(STATE_SELECTED_POSITION);             mFromSavedInstanceState = true;         }          // Select either the default item (0) or the last selected item.         selectItem(mCurrentSelectedPosition);      }      @Override     public void onActivityCreated(Bundle savedInstanceState) {         super.onActivityCreated(savedInstanceState);         // Indicate that this fragment would like to influence the set of actions in the action bar.         setHasOptionsMenu(true);     }      ExpandableListAdapter listAdapter;     ExpandableListView expListView;     List&lt;String&gt; listDataHeader;     HashMap&lt;String, List&lt;Category&gt;&gt; listDataChild;      @Override     public View onCreateView(LayoutInflater inflater, ViewGroup container,                              Bundle savedInstanceState) {          View fragmentView =  inflater.inflate(                 R.layout.fragment_navigation_drawer, container, false);         /*mDrawerListView = (ListView) fragmentView.findViewById(R.id.listView);          //mDrawerListView = (ListView) inflater.inflate(                 //R.layout.fragment_navigation_drawer, container, false);         mDrawerListView.setOnItemClickListener(new AdapterView.OnItemClickListener() {             @Override             public void onItemClick(AdapterView&lt;?&gt; parent, View view, int position, long id) {                 selectItem(position);             }         });         mDrawerListView.setAdapter(new ArrayAdapter&lt;String&gt;(                 getActionBar().getThemedContext(),                 android.R.layout.simple_list_item_activated_1,                 android.R.id.text1,                 new String[]{                         getString(R.string.title_home),                         getString(R.string.title_category),                         getString(R.string.title_myaccount),                         getString(R.string.title_referafriend),                         getString(R.string.title_about),                         getString(R.string.title_privacypocity),                         getString(R.string.title_shippingterms),                         getString(R.string.title_contactus),                 }));         mDrawerListView.setItemChecked(mCurrentSelectedPosition, true);*/          // get the listview         expListView = (ExpandableListView) fragmentView.findViewById(R.id.lvExp);          // preparing list data         //prepareListData();          detectconnection = new Seocnd(getActivity());         InternetAvailable = detectconnection.InternetConnecting();         if (InternetAvailable) {             getData();         } else {             selectItem(100);         }         return fragmentView;     }       public void getData(){         class GetDataJSON extends AsyncTask&lt;String, Void, String&gt; {              @Override             protected String doInBackground(String... params) {                 DefaultHttpClient httpclient = new DefaultHttpClient(new BasicHttpParams());                 HttpPost httppost = new HttpPost("http://joehamirbalabadan.com/android/android/categories.php");                  // Depends on your web service                 httppost.setHeader("Content-type", "application/json");                  InputStream inputStream = null;                 String result = null;                 try {                     HttpResponse response = httpclient.execute(httppost);                     HttpEntity entity = response.getEntity();                      inputStream = entity.getContent();                     // json is UTF-8 by default                     BufferedReader reader = new BufferedReader(new InputStreamReader(inputStream, "UTF-8"), 8);                     StringBuilder sb = new StringBuilder();                      String line = null;                     while ((line = reader.readLine()) != null)                     {                         sb.append(line + "\n");                     }                     result = sb.toString();                 } catch (Exception e) {                     // Oops                 }                 finally {                     try{if(inputStream != null)inputStream.close();}catch(Exception squish){}                 }                 return result;             }              @Override             protected void onPostExecute(String result){                 myJSON=result;                 prepareListData();                  listAdapter = new ExpandableListAdapter(getActivity(), listDataHeader, listDataChild);                  // setting list adapter                 expListView.setAdapter(listAdapter);                  // Listview Group click listener                 expListView.setOnGroupClickListener(new ExpandableListView.OnGroupClickListener() {                      @Override                     public boolean onGroupClick(ExpandableListView parent, View v,                                                 int groupPosition, long id) {             /*Toast.makeText(getActivity(),             "Group Clicked " + listDataHeader.get(groupPosition),             Toast.LENGTH_SHORT).show();*/                         if(groupPosition == 1){                             return false;                         } else {                             selectItem(groupPosition);                             return true;                         }                     }                 });                  // Listview on child click listener                 expListView.setOnChildClickListener(new ExpandableListView.OnChildClickListener() {                      @Override                     public boolean onChildClick(ExpandableListView parent, View v,                                                 int groupPosition, int childPosition, long id) {                         // TODO Auto-generated method stub                          String header = listDataHeader.get(groupPosition);                         Category child = listDataChild.get(header).get(childPosition);                          // child.name to get the name                         // child.id to get the id                         Toast.makeText(getActivity(),"ChildNme: "+child.name+" ChildId: "+child.id, Toast.LENGTH_SHORT).show();                         //selectItem(1);                          return false;                     }                 });             }         }         GetDataJSON g = new GetDataJSON();         g.execute();     }      protected void prepareListData(){         try {             JSONObject jsonObj = new JSONObject(myJSON);             categories = jsonObj.getJSONArray(TAG_RESULTS);              listDataHeader = new ArrayList&lt;String&gt;();             listDataChild = new HashMap&lt;String, List&lt;Category&gt;&gt;();              // Adding group data             listDataHeader.add("HOME");             listDataHeader.add("CATEGORY");             listDataHeader.add("MY ACCOUNT");             listDataHeader.add("REFER A FRIEND");             listDataHeader.add("ABOUT");             listDataHeader.add("PRIVACY POLICY");             listDataHeader.add("SHIPPING TERMS");             listDataHeader.add("CONTACT US");              List&lt;Category&gt; CATEGORY = new ArrayList&lt;Category&gt;();             for(int i=0;i&lt;categories.length();i++){                 JSONObject c = categories.getJSONObject(i);                 Category category = new Category();                 category.name = c.getString(TAG_NAME);                 category.id = c.getString(TAG_ID);                  CATEGORY.add(category);             }              listDataChild.put(listDataHeader.get(1), CATEGORY); // Header, Child data          } catch (JSONException e) {             e.printStackTrace();         }      }      /*      * Preparing the list data      */     /*private void prepareListData() {         listDataHeader = new ArrayList&lt;String&gt;();         listDataChild = new HashMap&lt;String, List&lt;String&gt;&gt;();          // Adding group data         listDataHeader.add("HOME");         listDataHeader.add("CATEGORY");         listDataHeader.add("MY ACCOUNT");         listDataHeader.add("REFER A FRIEND");         listDataHeader.add("ABOUT");         listDataHeader.add("PRIVACY POLICY");         listDataHeader.add("SHIPPING TERMS");         listDataHeader.add("CONTACT US");          // Adding child data         List&lt;String&gt; CATEGORY = new ArrayList&lt;String&gt;();         CATEGORY.add("Category 1");         CATEGORY.add("Category 2");         CATEGORY.add("Category 3");         CATEGORY.add("Category 4");         CATEGORY.add("Category 5");           listDataChild.put(listDataHeader.get(1), CATEGORY); // Header, Child data }*/      public boolean isDrawerOpen() {         return mDrawerLayout != null &amp;&amp; mDrawerLayout.isDrawerOpen(mFragmentContainerView);     }      /**      * Users of this fragment must call this method to set up the navigation drawer interactions.      *      * @param fragmentId   The android:id of this fragment in its activity's layout.      * @param drawerLayout The DrawerLayout containing this fragment's UI.      */     public void setUp(int fragmentId, DrawerLayout drawerLayout) {         mFragmentContainerView = getActivity().findViewById(fragmentId);         mDrawerLayout = drawerLayout;          // set a custom shadow that overlays the main content when the drawer opens         mDrawerLayout.setDrawerShadow(R.drawable.drawer_shadow, GravityCompat.START);         // set up the drawer's list view with items and click listener          ActionBar actionBar = getActionBar();         actionBar.setDisplayHomeAsUpEnabled(true);         actionBar.setHomeButtonEnabled(true);          // ActionBarDrawerToggle ties together the the proper interactions         // between the navigation drawer and the action bar app icon.         mDrawerToggle = new ActionBarDrawerToggle(                 getActivity(),                    /* host Activity */                 mDrawerLayout,                    /* DrawerLayout object */                 R.string.navigation_drawer_open,  /* "open drawer" description for accessibility */                 R.string.navigation_drawer_close  /* "close drawer" description for accessibility */         ) {             @Override             public void onDrawerClosed(View drawerView) {                 super.onDrawerClosed(drawerView);                 if (!isAdded()) {                     return;                 }                  getActivity().supportInvalidateOptionsMenu(); // calls onPrepareOptionsMenu()             }              @Override             public void onDrawerOpened(View drawerView) {                 super.onDrawerOpened(drawerView);                 if (!isAdded()) {                     return;                 }                  if (!mUserLearnedDrawer) {                     // The user manually opened the drawer; store this flag to prevent auto-showing                     // the navigation drawer automatically in the future.                     mUserLearnedDrawer = true;                     SharedPreferences sp = PreferenceManager                             .getDefaultSharedPreferences(getActivity());                     sp.edit().putBoolean(PREF_USER_LEARNED_DRAWER, true).apply();                 }                  getActivity().supportInvalidateOptionsMenu(); // calls onPrepareOptionsMenu()             }         };          // If the user hasn't 'learned' about the drawer, open it to introduce them to the drawer,         // per the navigation drawer design guidelines.         if (!mUserLearnedDrawer &amp;&amp; !mFromSavedInstanceState) {             mDrawerLayout.openDrawer(mFragmentContainerView);         }          // Defer code dependent on restoration of previous instance state.         mDrawerLayout.post(new Runnable() {             @Override             public void run() {                 mDrawerToggle.syncState();             }         });          mDrawerLayout.setDrawerListener(mDrawerToggle);     }      private void selectItem(int position) {         mCurrentSelectedPosition = position;         if (mDrawerListView != null) {             mDrawerListView.setItemChecked(position, true);         }         if (mDrawerLayout != null) {             mDrawerLayout.closeDrawer(mFragmentContainerView);         }         if (mCallbacks != null) {             mCallbacks.onNavigationDrawerItemSelected(position);         }     }      @Override     public void onAttach(Activity activity) {         super.onAttach(activity);         try {             mCallbacks = (NavigationDrawerCallbacks) activity;         } catch (ClassCastException e) {             throw new ClassCastException("Activity must implement NavigationDrawerCallbacks.");         }     }      @Override     public void onDetach() {         super.onDetach();         mCallbacks = null;     }      @Override     public void onSaveInstanceState(Bundle outState) {         super.onSaveInstanceState(outState);         outState.putInt(STATE_SELECTED_POSITION, mCurrentSelectedPosition);     }      @Override     public void onConfigurationChanged(Configuration newConfig) {         super.onConfigurationChanged(newConfig);         // Forward the new configuration the drawer toggle component.         mDrawerToggle.onConfigurationChanged(newConfig);     }      @Override     public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {         // If the drawer is open, show the global app actions in the action bar. See also         // showGlobalContextActionBar, which controls the top-left area of the action bar.         if (mDrawerLayout != null &amp;&amp; isDrawerOpen()) {             inflater.inflate(R.menu.global, menu);             showGlobalContextActionBar();         }         super.onCreateOptionsMenu(menu, inflater);     }      @Override     public boolean onOptionsItemSelected(MenuItem item) {         if (mDrawerToggle.onOptionsItemSelected(item)) {             return true;         }          if (item.getItemId() == R.id.action_example) {             Toast.makeText(getActivity(), "Example action.", Toast.LENGTH_SHORT).show();             return true;         }          return super.onOptionsItemSelected(item);     }      /**      * Per the navigation drawer design guidelines, updates the action bar to show the global app      * 'context', rather than just what's in the current screen.      */     private void showGlobalContextActionBar() {         ActionBar actionBar = getActionBar();         actionBar.setDisplayShowTitleEnabled(true);         actionBar.setNavigationMode(ActionBar.NAVIGATION_MODE_STANDARD);         actionBar.setTitle(R.string.app_name);     }      private ActionBar getActionBar() {         return ((ActionBarActivity) getActivity()).getSupportActionBar();     }      /**      * Callbacks interface that all activities using this fragment must implement.      */     public static interface NavigationDrawerCallbacks {         /**          * Called when an item in the navigation drawer is selected.          */         void onNavigationDrawerItemSelected(int position);     } } </code></pre>  <p>MainActivity.java</p>  <pre><code>package com.example.administrator.mosbeau;  import android.app.Activity; import android.support.v7.app.ActionBarActivity; import android.support.v7.app.ActionBar; import android.app.Fragment; import android.app.FragmentManager; import android.os.Bundle; import android.view.LayoutInflater; import android.view.Menu; import android.view.MenuItem; import android.view.View; import android.view.ViewGroup; import android.support.v4.widget.DrawerLayout;   public class MainActivity extends ActionBarActivity         implements NavigationDrawerFragment.NavigationDrawerCallbacks {      /**      * Fragment managing the behaviors, interactions and presentation of the navigation drawer.      */     private NavigationDrawerFragment mNavigationDrawerFragment;      /**      * Used to store the last screen title. For use in {@link #restoreActionBar()}.      */     private CharSequence mTitle;      Boolean InternetAvailable = false;     Seocnd detectconnection;      @Override     protected void onCreate(Bundle savedInstanceState) {         super.onCreate(savedInstanceState);         setContentView(R.layout.activity_main);          detectconnection = new Seocnd(this);         InternetAvailable = detectconnection.InternetConnecting();         if (InternetAvailable) {         } else {             NointernetFragment fragment = new NointernetFragment();             FragmentManager fragmentManager = getFragmentManager();             fragmentManager.beginTransaction()                     .replace(R.id.container, fragment)                     .commit();         }          mNavigationDrawerFragment = (NavigationDrawerFragment)                 getSupportFragmentManager().findFragmentById(R.id.navigation_drawer);         mTitle = getTitle();          // Set up the drawer.         mNavigationDrawerFragment.setUp(                 R.id.navigation_drawer,                 (DrawerLayout) findViewById(R.id.drawer_layout));     }      @Override     public void onNavigationDrawerItemSelected(int position) {         // update the main content by replacing fragments          FragmentManager fragmentManager = getFragmentManager();          // NEW STUFF         if(position == 0){             fragmentManager.beginTransaction()                     .replace(R.id.container, HomeFragment.newInstance())                     .commit();         }         else if (position == 1){             fragmentManager.beginTransaction()                     .replace(R.id.container, CategoryFragment.newInstance())                     .commit();         }         else if (position == 2){             fragmentManager.beginTransaction()                     .replace(R.id.container, AccountFragment.newInstance())                     .commit();         }         else if (position == 3){             fragmentManager.beginTransaction()                     .replace(R.id.container, ReferFragment.newInstance())                     .commit();         }         else if (position == 4){             fragmentManager.beginTransaction()                     .replace(R.id.container, AboutFragment.newInstance())                     .commit();         }         else if (position == 5){             fragmentManager.beginTransaction()                     .replace(R.id.container, PolicyFragment.newInstance())                     .commit();         }         else if (position == 6){             fragmentManager.beginTransaction()                     .replace(R.id.container, TermsFragment.newInstance())                     .commit();         }         else if (position == 7){             fragmentManager.beginTransaction()                     .replace(R.id.container, ContactusFragment.newInstance())                     .commit();         }         else if (position == 100){             fragmentManager.beginTransaction()                     .replace(R.id.container, NointernetFragment.newInstance())                     .commit();         }     }      public void onSectionAttached(int number) {         switch (number) {             case 1:                 mTitle = getString(R.string.title_home);                 break;             case 2:                 mTitle = getString(R.string.title_category);                 break;             case 3:                 mTitle = getString(R.string.title_login);                 break;             case 4:                 mTitle = getString(R.string.title_register);                 break;             case 5:                 mTitle = getString(R.string.title_myaccount);                 break;             case 6:                 mTitle = getString(R.string.title_referafriend);                 break;             case 7:                 mTitle = getString(R.string.title_about);                 break;             case 8:                 mTitle = getString(R.string.title_privacypocity);                 break;             case 9:                 mTitle = getString(R.string.title_shippingterms);                 break;             case 10:                 mTitle = getString(R.string.title_contactus);                 break;             case 100:                 mTitle = getString(R.string.title_nointernet);                 break;         }     }      @SuppressWarnings("deprecation")     public void restoreActionBar() {         ActionBar actionBar = getSupportActionBar();         actionBar.setNavigationMode(ActionBar.NAVIGATION_MODE_STANDARD);         actionBar.setDisplayShowTitleEnabled(true);         actionBar.setTitle(mTitle);     }        @Override     public boolean onCreateOptionsMenu(Menu menu) {         if (!mNavigationDrawerFragment.isDrawerOpen()) {             // Only show items in the action bar relevant to this screen             // if the drawer is not showing. Otherwise, let the drawer             // decide what to show in the action bar.             getMenuInflater().inflate(R.menu.main, menu);             restoreActionBar();             return true;         }         return super.onCreateOptionsMenu(menu);     }      @Override     public boolean onOptionsItemSelected(MenuItem item) {         // Handle action bar item clicks here. The action bar will         // automatically handle clicks on the Home/Up button, so long         // as you specify a parent activity in AndroidManifest.xml.         int id = item.getItemId();          //noinspection SimplifiableIfStatement         if (id == R.id.action_settings) {             return true;         }          return super.onOptionsItemSelected(item);     }      /**      * A placeholder fragment containing a simple view.      */     public static class PlaceholderFragment extends Fragment {         /**          * The fragment argument representing the section number for this          * fragment.          */         private static final String ARG_SECTION_NUMBER = "section_number";          /**          * Returns a new instance of this fragment for the given section          * number.          */         public static PlaceholderFragment newInstance(int sectionNumber) {             PlaceholderFragment fragment = new PlaceholderFragment();             Bundle args = new Bundle();             args.putInt(ARG_SECTION_NUMBER, sectionNumber);             fragment.setArguments(args);             return fragment;         }          public PlaceholderFragment() {         }          @Override         public View onCreateView(LayoutInflater inflater, ViewGroup container,                                  Bundle savedInstanceState) {             View rootView = inflater.inflate(R.layout.fragment_main, container, false);             return rootView;         }          @Override         public void onAttach(Activity activity) {             super.onAttach(activity);             ((MainActivity) activity).onSectionAttached(                     getArguments().getInt(ARG_SECTION_NUMBER));         }      }  } </code></pre>  <p>CategoryFragment.java</p>  <pre><code>package com.example.administrator.mosbeau;  import android.app.Activity; import android.app.Fragment; import android.os.Bundle; import android.support.annotation.Nullable; import android.view.LayoutInflater; import android.view.View; import android.view.ViewGroup; import android.widget.EditText;  /**  * Created by Administrator on 9/18/2015.  */ public class CategoryFragment extends Fragment {      public static CategoryFragment newInstance() {         CategoryFragment fragment = new CategoryFragment();         return fragment;     }      public CategoryFragment () {     }      @Nullable     @Override     public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState){         View rootView = inflater.inflate(R.layout.categorylayout, container, false);          getActivity().invalidateOptionsMenu();          return rootView;     }      @Override     public void onAttach(Activity activity) {         super.onAttach(activity);         ((MainActivity) activity).onSectionAttached(2);     } } </code></pre>