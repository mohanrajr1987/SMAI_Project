<p>I have a maybe little bit stupid question, but I didn't find any answers on this. So I have a Fragment and some entity object which extends Observable. I want my Fragment to be notified when some changes were made in my entity, so I implemented an Observer there.</p>  <p>Now I have some doubts about where observers have to be added and deleted. I mean the most correct callbacks in fragment.</p>  <p>Now I'm using <code>onViewCreated</code> to add observer, <code>onDestroyView</code> to delete observer, but I think that there are may be better places to do it.</p>  <p>Here is a sample code:</p>  <pre><code>@Override public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {     super.onViewCreated(view, savedInstanceState);      WheelManager.getInstance().addObserver(this);     PreferenceManager.getInstance().addObserver(this); }  @Override     public void onDestroyView() {         super.onDestroyView();         WheelManager.getInstance().deleteObserver(this);         PreferenceManager.getInstance().deleteObserver(this);     } </code></pre>  <p>I will be very thankful for answers.</p>  <p><strong>UPD:</strong> Also I've looked through <a href="http://developer.android.com/intl/ru/guide/components/fragments.html" rel="nofollow">Official Developer Guide</a>, but find nothing about this question.</p>