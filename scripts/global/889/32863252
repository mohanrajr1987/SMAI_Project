<p>We're running a Windows Service which is responsible for monitoring a set of processes. The service is basically just responsible for (a) checking if the defined jobs are running, and (b) starting the jobs if they are not.</p>  <p>The service is created via the following command (sc: <a href="https://technet.microsoft.com/en-us/library/bb490995.aspx" rel="nofollow">https://technet.microsoft.com/en-us/library/bb490995.aspx</a>):</p>  <pre><code>sc create "My Service" binPath= C:\heyoo\myservice.exe type= own start= auto error= normal sc start "SCF Service" </code></pre>  <p>One of the jobs the service is responsible for creating is 'Camera.exe'. Camera.exe retrieves a video feed from the connected cameras (FireWire 1394), and does some processing on them.</p>  <p>A week ago, the service was rewritten from using ShellExecute to use CreateProcess so it is able to better monitor the defined jobs <em>(as it gets the HANDLE to the process)</em>.</p>  <p>ShellExecute call (old method):</p>  <pre><code>bool Execute() {     int result = (int)ShellExecute(NULL, "open", "C:\\bin\\Camera.exe", NULL, NULL, SW_SHOWDEFAULT);     return result &gt; 32; } </code></pre>  <p>CreateProcess call (new method):</p>  <pre><code>// Called with Execute("C:\\bin\\Camera.exe", ""); bool Execute(std::string prog, std::string args) {     std::string cmd = std::string(prog) + " " + args;     char *path = new char[cmd.length()+1];     strcpy(path, cmd.c_str());      STARTUPINFO si = {0};     si.cb = sizeof(STARTUPINFO);     PROCESS_INFORMATION pi;     ZeroMemory(&amp;pi, sizeof(pi));      DWORD creationFlags = REALTIME_PRIORITY_CLASS;      BOOL result = CreateProcess(NULL, path, NULL, NULL, FALSE, creationFlags, NULL, NULL, &amp;si, &amp;pi);     delete[] path;      if (result) {         SetProcInfo(pi);     }      return result; } </code></pre>  <p>With the new CreateProcess method, we noticed that (A) the network systematically fails after a certain interval, and (B) the images retrieved from the cameras contain invalid timestamps (correct timestamps are crucial to us).</p>  <p>A frequently takes down the entire network connection, and requires a reboot to get back online. B causes the processing of images to fail, as we are highly dependent on valid timestamps.</p>  <p>The problems (A &amp; B) does <em>only</em> arise when Service.exe is run <em>as a service</em>. When running Service.exe or Camera.exe from the command line, none of the problems occurr.</p>  <p>Today I removed the CreateProcess calls from the service <em>(went back to ShellExecute)</em>, and the problems disappeared again. What am I doing wrong with the API call?</p>