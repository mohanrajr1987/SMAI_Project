<p><a href="https://msdn.microsoft.com/en-us/library/windows/desktop/ms684954(v=vs.85).aspx" rel="nofollow">Documentation</a> says:</p>  <blockquote>   <p>When the thread is in the process of being terminated, calling QueueUserAPC to add to the thread's APC queue will fail with (31) ERROR_GEN_FAILURE.</p> </blockquote>  <p><code>TerminateThread()</code> is not used, thread should exit normally. <code>QueueUserAPC()</code> is used to interrupt waiting on completion port.</p>  <p>Whereas <code>QueueUserAPC()</code> with <code>ERROR_GEN_FAILURE</code> (31) is somewhat documented, error <code>ERROR_EXE_MARKED_INVALID</code> (192) when waiting is interrupted seems strange for me.</p>  <p>Where I queue APC:</p>  <pre><code>~Reader() {     // Queue APC procedure.     // APC doesn't do any WinAPI work.     // Even it's empty it forces thread to wake up.     // Also we just use that function to change state.     auto queueApcResult = ::QueueUserAPC(changeStateToTerminationApcFunc, m_threadHandle, reinterpret_cast&lt;ULONG_PTR&gt;(&amp;state));      // Why does it return with error?     assert(0 == queueApcResult &amp;&amp; ::GetLastError() == ERROR_GEN_FAILURE);      assert(WAIT_OBJECT_0 == ::WaitForSingleObject(m_threadHandle, INFINITE)); } </code></pre>  <p>Here is waiting on completion port:</p>  <pre><code>std::shared_ptr&lt;Packet&gt; get(unsigned int timeoutMs) const {     auto packet = std::make_shared&lt;Packet&gt;();     ULONG numberOfEntriesRemoved = 0;     packet-&gt;error = ::GetLastError();     auto result = ::GetQueuedCompletionStatusEx(         m_completionPortHandle,         &amp;packet-&gt;entry,         1, // "Length" of entries "array".         &amp;numberOfEntriesRemoved, // Number of entries removed.         timeoutMs,         TRUE // Alertable state.     );     packet-&gt;error = result == 0 ? ::GetLastError() : 0;     return packet; } </code></pre>  <p>And following comparison returns <code>true</code>.</p>  <pre><code>static bool isTerminationPacket(const CompletionPort::Packet &amp; packet) {     // I don't know why such error appears.     return packet.error == ERROR_EXE_MARKED_INVALID; } </code></pre>