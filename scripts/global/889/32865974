<p>Imagine there is an application that has a window with a fixed size, where all controls remain at exactly known places (yes, there are such applications). Now imagine that said application's window is quite small and almost unusable on a touch-screen device. My idea now is to build a simple WPF UI, that maps certain controls of the external application to a touch-friendly UI.</p>  <p>(And this is actually not about gaming, but rather about making music. I want to use the small external application live on stage...)</p>  <p>I found a whole bunch of ways of controlling external applications, most of them getting an handle to the external application's window, then getting a handle to a button, then performing a mouse click on that, like in answers provided to the following questions:</p>  <ul> <li><a href="http://stackoverflow.com/questions/5522247/control-external-window-in-visual-studio-c-sharp">Control external window in visual studio c#</a></li> <li><a href="http://stackoverflow.com/questions/4715335/how-to-get-the-handle-of-3rd-party-applications-button-using-c">How to get the handle of 3rd party application&#39;s button using c#?</a></li> </ul>  <p>Other answers propose to move the mouse to the desired location and then perform certain mouse events:</p>  <ul> <li><a href="http://stackoverflow.com/questions/10355286/programmatically-mouse-click-in-another-window">programmatically mouse click in another window</a></li> <li><a href="http://stackoverflow.com/questions/4715335/how-to-get-the-handle-of-3rd-party-applications-button-using-c">How to get the handle of 3rd party application&#39;s button using c#?</a></li> </ul>  <p>All of these approaches have drawbacks: Sometimes they need to know the target applications's structure. Sometimes they use deprecated API methods. Sometimes the move the cursor of the mouse to the external application.</p>  <p>So here is my question: <strong>How can I perform mouse actions on external applications relative to the external application's window without actually moving the mouse pointer?</strong></p>  <p>Ideally there would be no need for external application's window to be on top, meaning that ideally my WPF UI would be a fullscreen one.</p>  <hr>  <p><strong>NB:</strong> Some commenters suggested using UI Automation for that task. I tried to walk the UI tree of the external application using <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/dd318521(v=vs.85).aspx" rel="nofollow">Inspect</a>, but that yielded unsatisfying results:</p>  <p><a href="http://i.stack.imgur.com/R6ZFW.png" rel="nofollow"><img src="http://i.stack.imgur.com/R6ZFW.png" alt="enter image description here"></a></p>