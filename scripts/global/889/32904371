<p>Our code is written in C++ 11 (VS2012/Win 7-64bit). The C++ library provides a <code>sleep_for</code> function that we use. We observed that the C++ <code>sleep_for</code> sometimes shows a large overshoot. In other words we request to sleep for say 15 ms but the sleep turns out to be e.g. 100 ms. We see this when the load on the system is high. </p>  <p>My first reaction: “of course the sleeps "take longer" if there is a lot of load on the system and other threads are using the CPU”. However the “funny” thing is that if we replace the <code>sleep_for</code> by a Windows API “Sleep” call then we do not see this behavior. I also saw that the <code>sleep_for</code> function under water makes a call to the Window API <code>Sleep</code> method. </p>  <p>The documentation for <a href="https://msdn.microsoft.com/en-us/library/hh920528.aspx" rel="nofollow">sleep_for</a> states:</p>  <blockquote>   <p>The function blocks the calling thread for <strong>at least</strong> the time that's specified by <em>Rel_time</em>. This function does not throw any exceptions.</p> </blockquote>  <p>So technically the function is working. However we did not expect to see a difference between C++ <code>sleep_for</code> and the regular <code>Sleep(Ex)</code> function.</p>  <p>Can somebody explain this behavior?</p>