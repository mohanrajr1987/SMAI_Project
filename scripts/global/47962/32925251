<p>I have this class:</p>  <p>public class Weather {</p>  <pre><code>public Today today = new Today(){}; public Tomorrow tomorrow = new Tomorrow(){}; public DayAfter dayafter = new DayAfter(){}; public DayDayAfter daydayafter = new DayDayAfter(){};  public class Today {     private String mToday;     private int mTodayHours;     private final ArrayList&lt;String&gt; arrTime1 = new ArrayList&lt;String&gt;();     private final ArrayList&lt;String&gt; arrWind_Speed1 = new ArrayList&lt;String&gt;();     private final ArrayList&lt;String&gt; arrCloud_Amount1 = new ArrayList&lt;String&gt;();     private final ArrayList&lt;String&gt; arrPop1 = new ArrayList&lt;String&gt;();     private final ArrayList&lt;String&gt; arrWind_Gust1 = new ArrayList&lt;String&gt;();     private final ArrayList&lt;String&gt; arrTemperature1 = new ArrayList&lt;String&gt;();     private final ArrayList&lt;String&gt; arrWind_Direction1 = new ArrayList&lt;String&gt;();     private final ArrayList&lt;String&gt; arrWeather1 = new ArrayList&lt;String&gt;();      public void putTodayHours(int value){ mTodayHours = value; }     public int getTodayHours() {return mTodayHours;}     public String getToday(){ return mToday;}      public void putToday(String key, String value){         switch (key) {             case "today": mToday = value;break;             case "time":arrTime1.add(value);break;             case "wind_speed":arrWind_Speed1.add(value);break;             case "cloud_amount":arrCloud_Amount1.add(value);break;             case "pop":arrPop1.add(value);break;             case "wind_gust":arrWind_Gust1.add(value);break;             case "temperature":arrTemperature1.add(value);break;             case "wind_direction":arrWind_Direction1.add(value);break;             case "weather":arrWeather1.add(value);break;         }     }     public ArrayList getToday(String key){         switch (key){             case "time": return arrTime1;             case "wind_speed": return arrWind_Speed1;             case "cloud_amount": return arrCloud_Amount1;             case "pop": return arrPop1;             case "wind_gust": return arrWind_Gust1;             case "temperature": return arrTemperature1;             case "wind_direction": return arrWind_Direction1;             case "weather": return arrWeather1;         }         return null;     }   } </code></pre>  <p>and so on... which is parsed an populated via this AsyncTask:</p>  <pre><code>public class JSONWeatherTask extends AsyncTask&lt;String, Void, Weather&gt; {      @Override     protected Weather doInBackground(String... params) {         String data = ((new WeatherHttpClient()).getWeatherData(params[0], params[1]));         Weather forecast = new Weather();         try {             forecast = JSONWeatherParser.getWeather(data);         } catch (JSONException e) {             e.printStackTrace();         }         return forecast;     }     @Override     protected void onPostExecute(Weather weather){         super.onPostExecute(weather);         Intent intent = new Intent(getApplicationContext(),FragmentStatePagerSupportActivity.class);         startActivity(intent); </code></pre>  <p>which on PostExecute calls another activity class (FragmentPagerSupportActivity).  The question is: How to pass the already populated "Weather weather" to the activity? Thanks.</p>