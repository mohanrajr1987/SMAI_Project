<p>Here's the scenario:</p>  <ol> <li><p>User uses Activity#1 to schedule an alarm (using the the android <code>AlarmManager</code> service), and goes back to home screen. Activity#1 remains in stack. </p></li> <li><p><code>AlarmReciever</code>'s <code>onReceived()</code> is called as planned:</p>  <pre><code>@Override public void onReceive(Context context, Intent intent){     Intent intent = new Intent(context ,Activity2.class);  intent.setFlags(         Intent.FLAG_ACTIVITY_NEW_TASK |         Intent.FLAG_ACTIVITY_NO_HISTORY                 );  context.startActivity(intent); } </code></pre></li> <li><p>Activity#2 (<code>Activity2</code>) starts successfully.</p>  <pre><code>public class Activity2 extends Activity {   @Override protected void onCreate(Bundle savedInstanceState) {     super.onCreate(savedInstanceState);      setContentView(R.layout.activity_layout_2);      getWindow().addFlags(             WindowManager.LayoutParams.FLAG_SHOW_WHEN_LOCKED |                     WindowManager.LayoutParams.FLAG_DISMISS_KEYGUARD |                     WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON |                     WindowManager.LayoutParams.FLAG_TURN_SCREEN_ON |                     WindowManager.LayoutParams.FLAG_FULLSCREEN     );  }  @Override protected void onResume() {     super.onResume();      findViewById(R.id.dismiss_button).setOnClickListener(             new View.OnClickListener() {                 @Override                 public void onClick(View v) {                     finish();                  }             }     );  } </code></pre>  <p>}</p></li> <li><p>User clicks a button (<code>R.id.dismiss_button</code>) to <code>finish()</code> Activity#2.</p></li> <li>System moves back to homescreen as expected, <strong>yet Activity#2 remains on stack</strong> (it appears when the user clicks on <a href="http://developer.android.com/design/handhelds/index.html#Recents%20screen" rel="nofollow">Recent Button</a>)</li> </ol>  <p>Please notice that in addition to setting <code>Intent.FLAG_ACTIVITY_NO_HISTORY</code> flag for the intent, the flag was also specified in the <code>AndroidManifest.xml</code> (and I tried also each of them separably):</p>  <pre><code>   &lt;activity         android:name=".Activity2"         android:label="@string/app_name"         android:configChanges="orientation|keyboardHidden"         android:launchMode= "singleInstance"         android:noHistory="true"         &gt;     &lt;/activity&gt; </code></pre>  <p>Also, the flag <code>Intent.FLAG_ACTIVITY_NEW_TASK</code> is required as the Activity#2 being started from an <code>AlarmReceiver</code> rather than another activity.</p>