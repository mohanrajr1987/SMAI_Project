<p>I have two separate Android apps, ApplicationA and ApplicationB. I wish to open ApplicationA, type some data into an EditText, and send that value to ApplicationB.  In ApplicationB, I wish to perform some actions and then send a value from an EditText in ApplicationB back to ApplicationA.  Currently, I am doing this by using Intents:</p>  <pre><code>    ApplicationA     -----&gt;    ApplicationB        -----&gt;        ApplicationB        -----&gt;   ApplicationA  Start MainActivity in        Handle the Intent from           Perform some actions,       Handle the Intent from ApplicaitonB, sending        ApplicationA, and read           then start MainActivity     ApplicationB, and read                                               some data                    the Intent's data                in ApplicationA, sending    some data                                                               some data </code></pre>  <p>As you can see, I am using one intent to to go from A -> B, and another one to go from B -> A.  </p>  <p>It would seem much easier to start <code>ApplicationB's</code> <code>MainActivity</code> using an Intent from <code>ApplicaitonA</code> and calling <code>startActivityForResult()</code>, while implementing <code>onActivityResult()</code> in <code>ApplicationA</code> to handle the respone from <code>ApplicationB</code>.  The problem with this is that it seems like <code>startActivityForResult()</code> <strong>returns immediately</strong>, so there is no time for the user in <code>ApplicationB</code> to perform any actions before returning the data to <code>ApplicationA</code>.  It seems like this would work if both Activities were in the same application, but since they are in different applications, <code>startActivityForResult()</code> is always returning immediately.</p>  <p>This is the <code>MainActivity</code> class of <code>ApplicationA</code>:</p>  <pre><code>@Override protected void onCreate(Bundle savedInstanceState) {     super.onCreate(savedInstanceState);      setContentView(R.layout.activity_main);      final EditText et = (EditText) this.findViewById(R.id.someDataInA);        final Button btn = (Button) this.findViewById(R.id.button);      btn.setOnClickListener(new View.OnClickListener() {         @Override         public void onClick(View v) {             Intent i = MainActivity.this.getPackageManager().getLaunchIntentForPackage("com.comp.ActivityB");             MainActivity.this.startActivity(i);         }     }); } </code></pre>  <p>And this is the <code>MainActiivty</code> class of <code>ApplicationB</code>:</p>  <pre><code>In@Override protected void onCreate(Bundle savedInstanceState) {     super.onCreate(savedInstanceState);      setContentView(R.layout.activity_main);      final EditText et = (EditText) this.findViewById(R.id.someDataInB);      final Button btn = (Button) this.findViewById(R.id.button);      btn.setOnClickListener(new View.OnClickListener() {         @Override         public void onClick(View v) {             Intent i = MainActivity.this.getPackageManager().getLaunchIntentForPackage("com.comp.ActivityA");             MainActivity.this.startActivity(i);         }     }); } </code></pre>  <p>Here is the AndroidManifest for ApplicationA:</p>  <pre><code> &lt;application     android:allowBackup="true"     android:icon="@mipmap/ic_launcher"     android:label="@string/app_name"     android:theme="@style/AppTheme"&gt;     &lt;activity         android:name=".MainActivity"         android:label="@string/app_name"&gt;         &lt;intent-filter&gt;             &lt;action android:name="android.intent.action.MAIN" /&gt;             &lt;category android:name="android.intent.category.LAUNCHER" /&gt;         &lt;/intent-filter&gt;     &lt;/activity&gt; &lt;/application&gt; </code></pre>  <p>and the AndroidManifest for ApplicationB:</p>  <pre><code>   &lt;application     android:allowBackup="true"     android:icon="@mipmap/ic_launcher"     android:label="@string/app_name"     android:theme="@style/AppTheme" &gt;     &lt;activity         android:name=".MainActivity"         android:label="@string/app_name" &gt;         &lt;intent-filter&gt;             &lt;action android:name="android.intent.action.MAIN" /&gt;             &lt;category android:name="android.intent.category.LAUNCHER" /&gt;         &lt;/intent-filter&gt;     &lt;/activity&gt; &lt;/application&gt; </code></pre>