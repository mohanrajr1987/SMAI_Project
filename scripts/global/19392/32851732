<p>So as the title says, I'm trying to run liferay in side of a docker container. Then from there, connect to a database on an outside node. </p>  <p>I can successfully ping the server that the SQL Server is running on from inside the docker container, however, when I try to connect to the database through liferay's configuration interface, it simply says an connection could not be established, and the logs state that log in for the user failed. </p>  <p>If it's not possible, I understand, just trying to get a better idea of this little mess. </p>  <p>======================================================================</p>  <p>Just to note, I've been using <a href="https://github.com/snasello/docker-liferay-6.2" rel="nofollow">snasello's</a> docker image for liferay, except taking out the preconfigured database to force liferay to go to the configuration page. I'm starting the container with </p>  <pre><code>docker run --rm -it -i 8080:8080 {whatever the local name of the image is} </code></pre>  <p>00:00:34,301 WARN  [C3P0PooledConnectionPoolManager[identityToken->21r35xoL]-HelperThread-#6][BasicResourcePool:1851] com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@3b17c58d -- Acquisition Attempt Failed!!! Clearing pending acquires. While trying to acquire a needed new resource, we failed to succeed more than the maximum number of allowed acquisition attempts (3). Last acquisition attempt exception: java.sql.SQLException: Cannot open database "lportal" requested by the login. The login failed.         at net.sourceforge.jtds.jdbc.SQLDiagnostic.addDiagnostic(SQLDiagnostic.java:368)         at net.sourceforge.jtds.jdbc.TdsCore.tdsErrorToken(TdsCore.java:2820)         at net.sourceforge.jtds.jdbc.TdsCore.nextToken(TdsCore.java:2258)         at net.sourceforge.jtds.jdbc.TdsCore.login(TdsCore.java:603)         at net.sourceforge.jtds.jdbc.ConnectionJDBC2.(ConnectionJDBC2.java:345)         at net.sourceforge.jtds.jdbc.ConnectionJDBC3.(ConnectionJDBC3.java:50)         at net.sourceforge.jtds.jdbc.Driver.connect(Driver.java:184)         at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:146)         at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:195)         at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:211)         at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1086)         at com.mchange.v2.resourcepool.BasicResourcePool.doAcquireAndDecrementPendingAcquiresWithinLockOnSuccess(BasicResourcePool.java:1073)         at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:44)         at com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask.run(BasicResourcePool.java:1810)         at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:648) 00:00:34,301 WARN  [C3P0PooledConnectionPoolManager[identityToken->21r35xoL]-HelperThread-#6][BasicResourcePool:894] Having failed to acquire a resource, com.mchange.v2.resourcepool.BasicResourcePool@80d65ef is interrupting all Threads waiting on a resource to check out. Will try again in response to new client requests. 00:00:34,303 WARN  [C3P0PooledConnectionPoolManager[identityToken->21r35xoL]-HelperThread-#9][BasicResourcePool:894] Having failed to acquire a resource, com.mchange.v2.resourcepool.BasicResourcePool@80d65ef is interrupting all Threads waiting on a resource to check out. Will try again in response to new client requests. 00:00:34,304 WARN  [C3P0PooledConnectionPoolManager[identityToken->21r35xoL]-HelperThread-#1][BasicResourcePool:894] Having failed to acquire a resource, com.mchange.v2.resourcepool.BasicResourcePool@80d65ef is interrupting all Threads waiting on a resource to check out. Will try again in response to new client requests.</p>