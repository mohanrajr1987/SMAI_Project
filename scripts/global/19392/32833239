<p>I have two liferay portlets that work with OrientDB. First portlet constructs graph(GraphBuilder), second visualizes it(GraphVisualizer). I have also one application working with the OrientDB database(OrientDBPersistence) that both portlets use via spring beans. So it should work together in the following way. I create graph in GraphBuilder portlet and save it with custom label using OrientDBPersistence. Then I draw it using GraphVisualizer that asks OrientDBPersistence for graph with this particular label. </p>  <p>My problem is that once I create graph1 and save it, I am able to vizualize it, but when I create graph2 it cannot be retrieved by GraphVisualizer, because it is not present in DB. However when I look into the studio I can see it there. Like the graphs I make are not visible to the Visualizer until I restart the portal. </p>  <p>So in GraphDBPersistence I connect to OrientDB and I get the OrientGraph object to which I persist all my graphs with different label:</p>  <pre><code>OrientGraph resultGraph = factory.getTx();     resultGraph.setThreadMode(OrientBaseGraph.THREAD_MODE.ALWAYS_AUTOSET);     return resultGraph; </code></pre>  <p>Then I build a graph in GraphBuilder that has injeced beans from  OrientDBPersistence to perform saving with Label1.  Saving looks like this:</p>  <pre><code> private void performGraphSaving(String label, OrientGraph graphO) {     try{         for(Vertex vertex : graph.getVertices()){             constructVertex(vertex, graphO, label);         }                 for(SocialVertex vertex : graph.getVertices()){             Collection&lt;Edge&gt; outEdges = graph.getOutEdges(vertex);             for(Edge socOutEdge : outEdges){                 SocialVertex opposite = graph.getOpposite(vertex, socOutEdge);                 constructEdge(vertex, opposite, socOutEdge, graphO, label);             }         }         graphO.commit();     }catch(Exception ex){         System.err.println(ex);         graphO.rollback();     } } </code></pre>  <p>I also call <code>graphO.shutdown();</code>. After graph is stored.</p>  <p>For example vertext retrieval looks like this:</p>  <pre><code>public Set&lt;Vertex&gt; getAllNodesFromGraph(String graphLabel, OrientGraph graph) {     Set&lt;Vertex&gt; labelledGraph = new HashSet&lt;&gt;();     try{         Iterable&lt;Vertex&gt; configGraph = graph.getVerticesOfClass(graphLabel);         for(Vertex v : configGraph){             labelledGraph.add(v);         }     } catch(Exception ex){         graph.rollback();     }        return labelledGraph; } </code></pre>  <p>The retrieval always throws <code>(java.lang.IllegalArgumentException) java.lang.IllegalArgumentException: Class '133' was not found in database schema</code>, but I can see it in the studio.</p>  <p>No matter if I create this resultGraph once and I keep inside the bean, or I create it every time I access the bean, it always consist only the first graph I saved. After restarting portal, former graphs are visualized, but newly created are not found by the GraphDBPersistence. </p>  <p>Does anyone have any idea?  Thanks</p>