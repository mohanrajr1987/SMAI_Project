<p>I've found some mp3s are failing when calling decodeAudioData for Web Audio use in Safari (both desktop and mobile). </p>  <p>This mp3 for example fails to decode. <a href="http://assets.readingeggsassets.com/activities/break_it_up/audio/us/peck-fp-68c19f10.mp3" rel="nofollow">http://assets.readingeggsassets.com/activities/break_it_up/audio/us/peck-fp-68c19f10.mp3</a></p>  <pre><code>var init = function(url) {   var audioCtx, fail, request, source, success;   audioCtx = new (window.AudioContext || window.webkitAudioContext)();   success = function(e) {     console.log('success', e);   };   fail = function(e) {     console.log('fail', e);   };   source = audioCtx.createBufferSource();   request = new XMLHttpRequest();   request.open('GET', url, true);request.responseType = 'arraybuffer';   request.onload = function() {     var audioData;     audioData = request.response;     return audioCtx.decodeAudioData(audioData, success, fail);   };   return request.send();  }  var working = 'http://assets.readingeggsassets.com/activities/break_it_up/audio/us/peck-fp-2476b044.mp3' var notWorking = 'http://assets.readingeggsassets.com/activities/break_it_up/audio/us/peck-fp-68c19f10.mp3'  init(notWorking); </code></pre>  <p>Has anyone else experienced this? Is there a fix? Can anyone identify the problem with the mp3 that doesn't work?</p>  <p>Open Safari on desktop. Go this url and open the dev console to see the result. You can flick between the 'working' and 'notWorking' variable in the JS. <a href="http://codepen.io/mattcolman/pen/jbVZQZ" rel="nofollow">http://codepen.io/mattcolman/pen/jbVZQZ</a></p>  <p>Thanks!</p>