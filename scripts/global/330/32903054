<p>I have successfully implemented a radio button bar with a datetimepicker: if you click on the radio button it shows a datetimepicker. it works on Firefox and Chrome but not on Safari. If I change the type to text instead of radio, it works. Any advice? here's my html:</p>  <pre><code>&lt;div class="customIntervalselect ui-buttonset" id="3297f685-ddac-4309-8750-e377f91216f8" style="display: block; "&gt; &lt;input type="radio" id="ce08067f-a61c-4bb4-89bf-b0dd8f3d685f" value="12" name="start" class="ui-helper-hidden-accessible"&gt; &lt;label for="ce08067f-a61c-4bb4-89bf-b0dd8f3d685f" title="start" class="ui-button ui-widget ui-state-default ui-button-text-only ui-corner-left ui-state-active" role="button" aria-disabled="false" aria-pressed="true"&gt; &lt;span class="ui-button-text"&gt;start&lt;/span&gt; &lt;/label&gt; &lt;input type="radio" id="17f2fd11-735c-432b-b9de-b01b25b2e38b" value="13" name="end" class="ui-helper-hidden-accessible"&gt; &lt;label for="17f2fd11-735c-432b-b9de-b01b25b2e38b" title="end" class="ui-button ui-widget ui-state-default ui-button-text-only ui-corner-right ui-state-active" role="button" aria-disabled="false" aria-pressed="true"&gt; &lt;span class="ui-button-text"&gt;end&lt;/span&gt; &lt;/label&gt; &lt;/div&gt; </code></pre>  <p>And here the js:</p>  <pre><code>this.uuidcustomIntervalselect = Uuid(); //give uuid to the custom button datepicker, the comparison graphs have to be indipendent in hovering  var uuidStart      = Uuid(); //create a unique id for the DOM elements var uuidStop       = Uuid(); var startbuttontxt = tr("start"); var endbuttontxt   = tr("end");  this.CustomButtonDatePickers = $("&lt;div&gt;", {"class": "customIntervalselect","id": this.uuidcustomIntervalselect});  //create custom button datepickers timescaleCustomButtonDatePickers[0] = $("&lt;input&gt;", {     type: "radio",     id:    uuidStart,     value: 12,     name: "start" });  //create button labels! var labelstart = $("&lt;label&gt;", {     "for": uuidStart,      title: startbuttontxt }).append(startbuttontxt);  //create custom button datepickers timescaleCustomButtonDatePickers[1] = $("&lt;input&gt;", {     type: "radio",     id:    uuidStop,     value: 13,     name: "end" });  //create button labels! var labelstop = $("&lt;label&gt;", {     "for": uuidStop,      title: endbuttontxt }).append(endbuttontxt);  var startTime; var stopTime;  //start time timescaleCustomButtonDatePickers[0].datetimepicker({     datepicker: false,        dateFormat: '',     timeFormat: 'hh:mm tt',     onSelectTime: function(dateText) {         console.log("test 03");         startTime = new XDate(dateText);         timescaleCustomButtonDatePickers[0].prop("checked", false).button('refresh'); //uncheck other buttons           timescaleCustomButtonDatePickers[1].prop("checked", false).button('refresh'); //uncheck other buttons          timescaleCustomButtonDatePickers[1].datetimepicker({             minTime: "00:00"         });          var mintime = this.validateSelectedTime(startTime,dateText);          timescaleCustomButtonDatePickers[1].datetimepicker({             minTime: mintime         });     }.bind(this) });  //stop time timescaleCustomButtonDatePickers[1].datetimepicker({     datepicker: false,     dateFormat: '',     timeFormat: 'hh:mm tt',     allowTimes:["0:00", "1:00", "2:00", "3:00", "4:00", "5:00", "6:00", "7:00", "8:00", "9:00", "10:00", "11:00", "12:00",       "13:00", "14:00", "15:00", "16:00", "17:00", "18:00", "19:00", "20:00", "21:00", "22:00", "23:00", "23:59"],     onSelectTime: function(dateText) {         stopTime = new XDate(dateText);         this.timeScale = this.timeScales[7];         this.timeScale.setTime(startTime, stopTime, this.selectedDate);         this.timeScaleOptions[7].prop("checked", true).button('refresh');         this.getResults();         timescaleCustomButtonDatePickers[0].prop("checked", false).button('refresh'); //uncheck other buttons           timescaleCustomButtonDatePickers[1].prop("checked", false).button('refresh'); //uncheck other buttons       }.bind(this) });  this.CustomButtonDatePickers.append(timescaleCustomButtonDatePickers[0], labelstart, timescaleCustomButtonDatePickers[1], labelstop); //add buttons to timescale button bar div  this.CustomButtonDatePickers.buttonset().change(this.setTimescale.bind(this));  //inherit css ui shit from jquery </code></pre>