<p>I am running a forEach inside a forEach because I need to set a key to a data I am looping through and the only way I thought of doing it was running a forEach on the data and then running a forEach on each of that data and setting a type. Basically I am trying to make 2 versions of the same data organized by a type. What happens is it runs through the first object sets a type then goes onto the next object and sets the display key that I wanted it to set for the first object and so on.</p>  <pre><code>CategoryCardService.query({}, function (category_card_service_response) {             $scope.categoryCardServiceResponse = category_card_service_response;             $scope.spotDataType = [                 {type:'Occupancy'},                 {type:'Turnover'}             ];               angular.forEach(category_card_service_response, function (category_card_value)  {                 angular.forEach($scope.spotDataType, function (spotData)  {                     category_card_value.type = spotData.type;                      var categoryOccupancyPercent = $filter('number')(category_card_value.occupancy_percent * one_hundred_percent, 0);                     var categoryTotalTurnover = category_card_value.total_turnover;                     console.log('card values' + JSON.stringify(category_card_value));                      var doughnut_chart_min = 0;                     var doughnut_chart_max = 0;                         category_card_value.doughnutData = [doughnut_chart_min, doughnut_chart_max];                      if (category_card_value.type === 'Occupancy' ){                         category_card_value.display = categoryOccupancyPercent + '%';                         doughnut_chart_min = categoryOccupancyPercent;                         doughnut_chart_max = 100 - categoryOccupancyPercent;                         category_card_value.doughnutData = [doughnut_chart_min, doughnut_chart_max];                     } else if (category_card_value.type === 'Turnover'){                         category_card_value.display = categoryTotalTurnover;                         doughnut_chart_min = 0;                         doughnut_chart_max = 0;                     } else{                      }                     category_card_value.doughnutColors = [calculateDoughnutColor(doughnut_chart_min), '#2D65AF'];                 });             });         }); </code></pre>