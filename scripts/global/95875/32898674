<p>I am creating 4 separate micro services using spring cloud.</p>  <ol> <li>OAuth-2 Authenticating service</li> <li>Resource Service</li> <li>UI Service</li> <li>Gateway Service</li> </ol>  <p>But my data model is <code>blurred</code> between these services. For example,</p>  <p>I have the domain models, </p>  <ol> <li>User</li> <li>Group</li> </ol>  <p>User and Group have a <em>many to many</em> relationship</p>  <p>which I am intending to keep within <strong>OAuth-2 Authenticating service</strong>, hopefully in a separate database. and I have the following domain models,</p>  <ol> <li>Document </li> </ol>  <p>and this document should have a many to many relationship with the Group. I am hoping to keep this domain model in <strong>Resources Service</strong> again within a separate database.</p>  <p>Since these micro services have their <code>separate</code> data repositories, I am confused of how to provide a user interface so that a user can create new <strong>Users</strong>, create new <strong>Groups</strong> create new <strong>Documents</strong>, and assign users to <strong>Groups</strong> and also assign <strong>Documents</strong> to the <strong>Groups</strong>.</p>  <p>I am hoping to expose the Web View for this from the UI service. But I am confused of how to make use of the disinterestedness of micro services while adhering to a monolithic like data model.</p>