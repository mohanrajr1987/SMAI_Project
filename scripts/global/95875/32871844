<p>When I add the simple spring-boot-starter-data-jpa dependency in my pom.xml, i got an error in the pom.xml file.  If I remove that dependency there is no more errors. I am no sure why it is happening, because i am trying to execute a simple jpa example. I haven't had problems if i add others starters dependencies, I only have problems with that specific starter. </p>  <p>I am using Spring STS 3.7.0 to develop my tests.<br> I use jdk 8.0.0.60</p>  <p>Thank for your help. </p>  <p>my pom.xml (I removed the links in the header because i dont have enought reputatios to post ilimited links)</p>  <pre><code> &lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;project xmlns="(MAVEN LINK)" xmlns:xsi="(W3 LINK)"     xsi:schemaLocation="LINK"&gt;     &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;      &lt;groupId&gt;org.test&lt;/groupId&gt;     &lt;artifactId&gt;demo&lt;/artifactId&gt;     &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;     &lt;packaging&gt;jar&lt;/packaging&gt;      &lt;name&gt;demo&lt;/name&gt;     &lt;description&gt;Demo project for Spring Boot&lt;/description&gt;      &lt;parent&gt;         &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;         &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;         &lt;version&gt;1.2.6.RELEASE&lt;/version&gt;         &lt;relativePath/&gt; &lt;!-- lookup parent from repository --&gt;     &lt;/parent&gt;      &lt;properties&gt;         &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;         &lt;java.version&gt;1.8&lt;/java.version&gt;     &lt;/properties&gt;      &lt;dependencies&gt;         &lt;dependency&gt;             &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;             &lt;artifactId&gt;spring-boot-starter-data-jpa&lt;/artifactId&gt;         &lt;/dependency&gt;          &lt;dependency&gt;             &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;             &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;             &lt;scope&gt;test&lt;/scope&gt;         &lt;/dependency&gt;     &lt;/dependencies&gt;      &lt;build&gt;         &lt;plugins&gt;             &lt;plugin&gt;                 &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;                 &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;             &lt;/plugin&gt;         &lt;/plugins&gt;     &lt;/build&gt;   &lt;/project&gt; </code></pre>  <p>Exception</p>  <pre><code>org.eclipse.aether.transfer.ArtifactTransferException: Failure to transfer org.hibernate:hibernate-core:jar:4.3.11.Final from https://repo.maven.apache.org/maven2 was cached in the local repository, resolution will not be reattempted until the update interval of central has elapsed or updates are forced. Original error: Could not transfer artifact org.hibernate:hibernate-core:jar:4.3.11.Final from/to central (https://repo.maven.apache.org/maven2): The operation was cancelled.     at org.eclipse.aether.internal.impl.DefaultUpdateCheckManager.newException(DefaultUpdateCheckManager.java:238)     at org.eclipse.aether.internal.impl.DefaultUpdateCheckManager.checkArtifact(DefaultUpdateCheckManager.java:206)     at org.eclipse.aether.internal.impl.DefaultArtifactResolver.gatherDownloads(DefaultArtifactResolver.java:585)     at org.eclipse.aether.internal.impl.DefaultArtifactResolver.performDownloads(DefaultArtifactResolver.java:503)     at org.eclipse.aether.internal.impl.DefaultArtifactResolver.resolve(DefaultArtifactResolver.java:421)     at org.eclipse.aether.internal.impl.DefaultArtifactResolver.resolveArtifacts(DefaultArtifactResolver.java:246)     at org.eclipse.aether.internal.impl.DefaultRepositorySystem.resolveDependencies(DefaultRepositorySystem.java:367)     at org.apache.maven.project.DefaultProjectDependenciesResolver.resolve(DefaultProjectDependenciesResolver.java:205)     at org.apache.maven.project.DefaultProjectBuilder.resolveDependencies(DefaultProjectBuilder.java:215)     at org.apache.maven.project.DefaultProjectBuilder.build(DefaultProjectBuilder.java:188)     at org.apache.maven.project.DefaultProjectBuilder.build(DefaultProjectBuilder.java:119)     at org.eclipse.m2e.core.internal.embedder.MavenImpl.readMavenProject(MavenImpl.java:636)     at org.eclipse.m2e.core.internal.project.registry.DefaultMavenDependencyResolver.resolveProjectDependencies(DefaultMavenDependencyResolver.java:63)     at org.eclipse.m2e.core.internal.project.registry.ProjectRegistryManager.refreshPhase2(ProjectRegistryManager.java:529)     at org.eclipse.m2e.core.internal.project.registry.ProjectRegistryManager$3.call(ProjectRegistryManager.java:491)     at org.eclipse.m2e.core.internal.project.registry.ProjectRegistryManager$3.call(ProjectRegistryManager.java:1)     at org.eclipse.m2e.core.internal.embedder.MavenExecutionContext.executeBare(MavenExecutionContext.java:176)     at org.eclipse.m2e.core.internal.embedder.MavenExecutionContext.execute(MavenExecutionContext.java:151)     at org.eclipse.m2e.core.internal.project.registry.ProjectRegistryManager.refresh(ProjectRegistryManager.java:495)     at org.eclipse.m2e.core.internal.project.registry.ProjectRegistryManager.refresh(ProjectRegistryManager.java:350)     at org.eclipse.m2e.core.internal.project.registry.ProjectRegistryManager.refresh(ProjectRegistryManager.java:297)     at org.eclipse.m2e.core.internal.builder.MavenBuilder$BuildMethod.getProjectFacade(MavenBuilder.java:154)     at org.eclipse.m2e.core.internal.builder.MavenBuilder$BuildMethod$1.call(MavenBuilder.java:89)     at org.eclipse.m2e.core.internal.embedder.MavenExecutionContext.executeBare(MavenExecutionContext.java:176)     at org.eclipse.m2e.core.internal.embedder.MavenExecutionContext.execute(MavenExecutionContext.java:151)     at org.eclipse.m2e.core.internal.embedder.MavenExecutionContext.execute(MavenExecutionContext.java:99)     at org.eclipse.m2e.core.internal.builder.MavenBuilder$BuildMethod.execute(MavenBuilder.java:86)     at org.eclipse.m2e.core.internal.builder.MavenBuilder.build(MavenBuilder.java:200)     at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:734)     at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)     at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:205)     at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:245)     at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:300)     at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)     at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:303)     at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:359)     at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:382)     at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:144)     at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:235)     at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)        Failure to transfer org.hibernate:hibernate-core:jar:4.3.11.Final from  was cached in the local repository, resolution will not be reattempted until the update interval of spring-ext has elapsed or updates are forced. Original error: Could not transfer artifact org.hibernate:hibernate-core:jar:4.3.11.Final from/to spring-ext : The operation was cancelled.  org.eclipse.aether.transfer.ArtifactTransferException: Failure to transfer org.hibernate:hibernate-core:jar:4.3.11.Final from (URL SPRING EDITED) was cached in the local repository, resolution will not be reattempted until the update interval of spring-ext has elapsed or updates are forced. Original error: Could not transfer artifact org.hibernate:hibernate-core:jar:4.3.11.Final from/to spring-ext (URL SPRING EDITED): The operation was cancelled.     at org.eclipse.aether.internal.impl.DefaultUpdateCheckManager.newException(DefaultUpdateCheckManager.java:238)     at org.eclipse.aether.internal.impl.DefaultUpdateCheckManager.checkArtifact(DefaultUpdateCheckManager.java:206)     at org.eclipse.aether.internal.impl.DefaultArtifactResolver.gatherDownloads(DefaultArtifactResolver.java:585)     at org.eclipse.aether.internal.impl.DefaultArtifactResolver.performDownloads(DefaultArtifactResolver.java:503)     at org.eclipse.aether.internal.impl.DefaultArtifactResolver.resolve(DefaultArtifactResolver.java:421)     at org.eclipse.aether.internal.impl.DefaultArtifactResolver.resolveArtifacts(DefaultArtifactResolver.java:246)     at org.eclipse.aether.internal.impl.DefaultRepositorySystem.resolveDependencies(DefaultRepositorySystem.java:367)     at org.apache.maven.project.DefaultProjectDependencies[![enter image description here][1]][1]Resolver.resolve(DefaultProjectDependenciesResolver.java:205)     at org.apache.maven.project.DefaultProjectBuilder.resolveDependencies(DefaultProjectBuilder.java:215)     at org.apache.maven.project.DefaultProjectBuilder.build(DefaultProjectBuilder.java:188)     at org.apache.maven.project.DefaultProjectBuilder.build(DefaultProjectBuilder.java:119)     at org.eclipse.m2e.core.internal.embedder.MavenImpl.readMavenProject(MavenImpl.java:636)     at org.eclipse.m2e.core.internal.project.registry.DefaultMavenDependencyResolver.resolveProjectDependencies(DefaultMavenDependencyResolver.java:63)     at org.eclipse.m2e.core.internal.project.registry.ProjectRegistryManager.refreshPhase2(ProjectRegistryManager.java:529)     at org.eclipse.m2e.core.internal.project.registry.ProjectRegistryManager$3.call(ProjectRegistryManager.java:491)     at org.eclipse.m2e.core.internal.project.registry.ProjectRegistryManager$3.call(ProjectRegistryManager.java:1)     at org.eclipse.m2e.core.internal.embedder.MavenExecutionContext.executeBare(MavenExecutionContext.java:176)     at org.eclipse.m2e.core.internal.embedder.MavenExecutionContext.execute(MavenExecutionContext.java:151)     at org.eclipse.m2e.core.internal.project.registry.ProjectRegistryManager.refresh(ProjectRegistryManager.java:495)     at org.eclipse.m2e.core.internal.project.registry.ProjectRegistryManager.refresh(ProjectRegistryManager.java:350)     at org.eclipse.m2e.core.internal.project.registry.ProjectRegistryManager.refresh(ProjectRegistryManager.java:297)     at org.eclipse.m2e.core.internal.builder.MavenBuilder$BuildMethod.getProjectFacade(MavenBuilder.java:154)     at org.eclipse.m2e.core.internal.builder.MavenBuilder$BuildMethod$1.call(MavenBuilder.java:89)     at org.eclipse.m2e.core.internal.embedder.MavenExecutionContext.executeBare(MavenExecutionContext.java:176)     at org.eclipse.m2e.core.internal.embedder.MavenExecutionContext.execute(MavenExecutionContext.java:151)     at org.eclipse.m2e.core.internal.embedder.MavenExecutionContext.execute(MavenExecutionContext.java:99)     at org.eclipse.m2e.core.internal.builder.MavenBuilder$BuildMethod.execute(MavenBuilder.java:86)     at org.eclipse.m2e.core.internal.builder.MavenBuilder.build(MavenBuilder.java:200)     at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:734)     at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)     at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:205)     at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:245)     at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:300)     at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)     at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:303)     at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:359)     at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:382)     at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:144)     at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:235)     at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55) </code></pre>