<p>I'm trying to use both Spring Data JPA and Spring Data Elasticsearch on the same domain object but it doesn't work.</p>  <p>When I tried to run a simple test, I got the following exception:</p>  <blockquote>   <p>org.springframework.data.mapping.PropertyReferenceException: No   property index found for type Person!     at   org.springframework.data.mapping.PropertyPath.(PropertyPath.java:75)   ~[spring-data-commons-1.11.0.RELEASE.jar:na]  at   org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:327)   ~[spring-data-commons-1.11.0.RELEASE.jar:na]  at   org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:307)   ~[spring-data-commons-1.11.0.RELEASE.jar:na]  at   org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:270)   ~[spring-data-commons-1.11.0.RELEASE.jar:na]  at   org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:241)   ~[spring-data-commons-1.11.0.RELEASE.jar:na]  at   org.springframework.data.repository.query.parser.Part.(Part.java:76)   ~[spring-data-commons-1.11.0.RELEASE.jar:na]  at   org.springframework.data.repository.query.parser.PartTree$OrPart.(PartTree.java:235)   ~[spring-data-commons-1.11.0.RELEASE.jar:na]  at   org.springframework.data.repository.query.parser.PartTree$Predicate.buildTree(PartTree.java:373)   ~[spring-data-commons-1.11.0.RELEASE.jar:na]  at   org.springframework.data.repository.query.parser.PartTree$Predicate.(PartTree.java:353)   ~[spring-data-commons-1.11.0.RELEASE.jar:na]  at   org.springframework.data.repository.query.parser.PartTree.(PartTree.java:84)   ~[spring-data-commons-1.11.0.RELEASE.jar:na]  at   org.springframework.data.jpa.repository.query.PartTreeJpaQuery.(PartTreeJpaQuery.java:61)   ~[spring-data-jpa-1.9.0.RELEASE.jar:na]   at   org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)   ~[spring-data-jpa-1.9.0.RELEASE.jar:na]   at   org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:206)   ~[spring-data-jpa-1.9.0.RELEASE.jar:na]   at   org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:73)   ~[spring-data-jpa-1.9.0.RELEASE.jar:na]   at   org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.(RepositoryFactorySupport.java:408)   ~[spring-data-commons-1.11.0.RELEASE.jar:na]  at   org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:206)   ~[spring-data-commons-1.11.0.RELEASE.jar:na]  at   org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.initAndReturn(RepositoryFactoryBeanSupport.java:251)   ~[spring-data-commons-1.11.0.RELEASE.jar:na]  at   org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:237)   ~[spring-data-commons-1.11.0.RELEASE.jar:na]  at   org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:92)   ~[spring-data-jpa-1.9.0.RELEASE.jar:na]   at   org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637)   ~[spring-beans-4.2.1.RELEASE.jar:4.2.1.RELEASE]   at   org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)   ~[spring-beans-4.2.1.RELEASE.jar:4.2.1.RELEASE]   ... 43 common frames   omitted</p> </blockquote>  <p>They work when disabling either one.</p>  <p>The project is based on Spring Boot 1.3.0.M5.</p>  <p>This is a sample project reproducing the situation:</p>  <p><a href="https://github.com/izeye/spring-boot-throwaway-branches/tree/data-jpa-and-elasticsearch" rel="nofollow">https://github.com/izeye/spring-boot-throwaway-branches/tree/data-jpa-and-elasticsearch</a></p>