<p>I am new to spring and I found an interesting behavior but don't know how to fix it... I have a class as following:</p>  <p>@Component  public class ScheduleService {</p>  <pre><code>/** The Constant log. */ private static final Logger log = LoggerFactory.getLogger(ScheduleService.class);  /** The schedule repository. */ @Autowired private ScheduleRepository  scheduleRepository;  @Autowired private PipelineService pipelineService;   private AtomicReference     atomic_scheduler = new AtomicReference();  /**  * Instantiates a new schedule service.  */ public ScheduleService() { }  /**  * Starts the quarts scheduler instance  *   */ public synchronized void start() {     .... }  public Scheduler getScheduler() {     start();     return (Scheduler) atomic_scheduler.get(); }  /**  * Creates the schedule.  *  * @param session the session  * @param schedule the Schedule  * @return the Schedule  */ public Schedule createSchedule(Session session, Schedule schedule) throws Exception { </code></pre>  <p>..........     }</p>  <pre><code>/**  * Gets the Schedule.  *  * @param session the session  * @param id the id  * @return the Schedule  */ @Transactional(propagation=Propagation.REQUIRES_NEW, isolation=Isolation.READ_COMMITTED) public Schedule getSchedule(Session session, String id) throws Exception { </code></pre>  <p>.....     }</p>  <pre><code>/**  * Gets the Schedule given the Schedule name.  *  * @param session the session  * @param name the name of the Schedule to return  * @return the Schedule  */ @Transactional(propagation = Propagation.REQUIRES_NEW, isolation = Isolation.READ_COMMITTED) public Schedule getScheduleByName(Session session, String name) throws Exception {     ........ }  /**  */ public Schedule updateSchedule(Session session, Schedule sch) throws Exception { </code></pre>  <p>.......     } }</p>  <p>I found all methods in this class are called by proxy but I don't know why... Should only "transactional" method be called by APO proxy? How do I solve this? I want non-transactional methods invoked by calling threads directly without going through proxy. </p>  <p>Thanks everyone for advise. </p>