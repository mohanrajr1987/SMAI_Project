<p>I am using Spring Boot for my application. Due to a particular need, I have my own <strong><em>Servlet</strong></em> class that extends from the Spring <strong><em>DispatcherServlet</em></strong>. (And I am pretty sure that I won't be the first one that is doing this.)</p>  <p>Everything worked fine until I tried adding authentication/authorization. I setup the authentication/authorization as shown here:</p>  <p><a href="https://github.com/spring-projects/spring-data-examples/tree/master/rest/security" rel="nofollow">https://github.com/spring-projects/spring-data-examples/tree/master/rest/security</a></p>  <p>I use the <strong><em>@PreAuthorize</em></strong> annotations on my REST controller methods to restrict access based on the type of operation such as GET/POST.</p>  <p>I get the error: <strong>"AuthenticationObject not found in SecurityContextHolder"</strong> when I try to POST something. What I did next was compare my application and a working Spring Boot Security example (as in the example above) by stepping through it to see what is happening. I discovered that in the working example, before the <strong><em>doService</em></strong> method of the DispatcherServlet is being invoked, filters such as BasicAuthenticationFilter and others come into the picture. I don't see these filters getting invoked in my application.</p>  <p>Due to the filters not being invoked I don't see the user information or the session-id in the request object at all in my application. I do see that in the working example though. Moreover, I see that in the working example, the request and response objects gets wrapped in a <strong><em>SecurityContextHolder</em></strong> Wrapper from the filter. Since filters don't get invoked in my application, the request/response objects never get wrapped. I suspect that the above error is related to this.</p>  <p>I guess that since I have my own Servlet class that extends the Spring Servlet, it is in essence saying to Spring that I will take control from there. This also means that I will have to do everything that normally Spring does for me.</p>  <p>My questions are : </p>  <ul> <li><p>At what point in Spring Boot do the filters get invoked and how do I achieve this in my application before the request reaches my custom Servlet? </p></li> <li><p>Do I have to inject them as Beans into my Main class ? And in what order  should they be invoked?</p></li> </ul>  <p>Thanks again,</p>