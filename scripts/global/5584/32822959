<p>I'm a programmer new to Java. Based on what I've read on OOP, I understand that you shouldn't code in a way that you have to rewrite everything to change something. I've always tried to apply design patterns, refactoring etc. and I was actually excited about the potential fixability.</p>  <p>Then came my first major change: I decided to implement GLES instead of using canvas for drawing operations. Unfortunately, GLES required a lot more steps for drawing, e.g. pre-loading of textures. As a result, I couldn't just reimplement existing interfaces that defined most of my app's methods; I had to touch every single class in my app.</p>  <p>I guess my question is, would this be a case of incorrect employment of OOP, a situation that OOP couldn't have averted, i.e. I didn't make the right choices at the start, or perhaps an Android thing? If it is something I'm doing wrong, some example solutions would be a great help. Thanks!</p>