<p>I´m currently facing some problems in reading out the values of the Android rotation vector. As the Android documentation explains, the rotation vector is a sensor fusion combination of gyroscope, magnetometer and acceleromenter. The reference frame of the rotation vector is X facing east, Y facing north and Z vertical when the device is laying in a flat position.</p>  <p>All the mentioned characteristics are right and work in my application. </p>  <p>Now the problem: The rotation vector seems partly very inaccurate. First the values of the rotation vector seem to lag behind the actual movement, second the values are really affected by fast movements of de device.</p>  <p>To exclude any errors made by my implementation is tested a demo application from google as well. The source code is located <a href="http://www.vogella.com/code/ApiDemos/src/com/example/android/apis/os/RotationVectorDemo.html" rel="nofollow">here</a>. Also in this demo the rotation vector seems partly laggy and unreliable in fast movements.</p>  <p>Did anyone else faced some problems with Androids rotation vector?</p>  <p>Here is how I´m doing it: Register the sensor and listener:</p>  <pre><code>sensorManager.registerListener(this, gravitySensor, SensorManager.SENSOR_DELAY_FASTEST, handler) </code></pre>  <p>Reading out the values and create a rotation matrix used for OpenGL rendering:</p>  <pre><code>@Override public void onSensorChanged(SensorEvent event) {     if (event.sensor.getType() == Sensor.TYPE_ROTATION_VECTOR) {         SensorManager.getRotationMatrixFromVector(rotationMatrix4D, event.values);     } } </code></pre>  <p>Edit: I am developing on Samsung Galaxy S3 Mini. Maybe just the device's sensors are not that good. </p>