<p>I've been wracking my brain on this one for a while, so much that it has driven me to ask my first question on stack overflow.</p>  <p>I am currrently developing an AR browser Android application using the Java Monkey Engine. </p>  <p>A camera preview is set up such that each frame is taken from a Camera.PreviewCallback and set as a texture for a Geometry object in the JME application.</p>  <p>After around 5 minutes the application will crash with the following message. </p>  <pre><code> 09-26 20:54:09.986  25730-25770/com.openarbrowser.westernfrontar E/Surface﹕ queueBuffer: error queuing buffer to SurfaceTexture, -22 09-26 20:54:09.988  25730-25918/com.openarbrowser.westernfrontar E/IMemory﹕ cannot dup fd=1023, size=462848, err=0 (Too many open files) 09-26 20:54:09.988  25730-25918/com.openarbrowser.westernfrontar E/IMemory﹕ cannot map BpMemoryHeap (binder=0xb8265bc8), size=462848, fd=-1 (Bad file number) </code></pre>  <p>Suspecting a memory leak I have run the application in StrictMode, which sends recurring warnings to logcat.</p>  <pre><code>09-26 20:48:06.687  25730-25742/com.openarbrowser.westernfrontar E/StrictMode﹕ A resource was acquired at attached stack trace but never released. See java.io.Closeable for information on avoiding resource leaks.     java.lang.Throwable: Explicit termination method 'end' not called             at dalvik.system.CloseGuard.open(CloseGuard.java:184)             at java.util.zip.Inflater.&lt;init&gt;(Inflater.java:82)             at java.util.zip.ZipFile.getInputStream(ZipFile.java:331)             at java.util.jar.JarFile.getInputStream(JarFile.java:390)             at libcore.net.url.JarURLConnectionImpl.getInputStream(JarURLConnectionImpl.java:222)             at com.jme3.asset.plugins.UrlAssetInfo.create(UrlAssetInfo.java:58)             at com.jme3.asset.plugins.ClasspathLocator.locate(ClasspathLocator.java:108)             at com.jme3.asset.ImplHandler.tryLocate(ImplHandler.java:177)             at com.jme3.asset.DesktopAssetManager.loadAsset(DesktopAssetManager.java:272)             at com.jme3.asset.DesktopAssetManager.loadShader(DesktopAssetManager.java:411)             at com.jme3.material.Technique.loadShader(Technique.java:217)             at com.jme3.material.Technique.makeCurrent(Technique.java:201)             at com.jme3.material.Material.selectTechnique(Material.java:928)             at com.jme3.material.Material.autoSelectTechnique(Material.java:936)             at com.jme3.material.Material.render(Material.java:1055)             at com.jme3.renderer.RenderManager.renderGeometry(RenderManager.java:523)             at com.jme3.renderer.queue.RenderQueue.renderGeometryList(RenderQueue.java:322)             at com.jme3.renderer.queue.RenderQueue.renderQueue(RenderQueue.java:374)             at com.jme3.renderer.RenderManager.renderViewPortQueues(RenderManager.java:763)             at com.jme3.renderer.RenderManager.flushQueue(RenderManager.java:719)             at com.jme3.renderer.RenderManager.renderViewPort(RenderManager.java:983)             at com.jme3.renderer.RenderManager.render(RenderManager.java:1029)             at com.jme3.app.SimpleApplication.update(SimpleApplication.java:252)             at com.jme3.app.AndroidHarness.update(AndroidHarness.java:467)             at com.jme3.system.android.OGLESContext.onDrawFrame(OGLESContext.java:349)             at android.opengl.GLSurfaceView$GLThread.guardedRun(GLSurfaceView.java:1522)             at android.opengl.GLSurfaceView$GLThread.run(GLSurfaceView.java:1239) </code></pre>  <p>I found similar errors here:</p>  <p><a href="http://stackoverflow.com/questions/23370836/illegalargumentexception-surface-nativelockcanvas-choreographer-bufferqueue">IllegalArgumentException Surface.nativeLockCanvas , Choreographer, BufferQueue</a></p>  <p><a href="https://code.google.com/p/android/issues/detail?id=48098" rel="nofollow">https://code.google.com/p/android/issues/detail?id=48098</a></p>  <p><a href="http://stackoverflow.com/questions/31530940/android-e-surface-queuebuffer-error-queuing-buffer-to-surfacetexture-22-cr">Android - E/Surface﹕ queueBuffer: error queuing buffer to SurfaceTexture, -22 crash</a></p>  <p><a href="http://stackoverflow.com/questions/3525287/what-does-surfaceholder-surface-type-push-buffers-means">What does SurfaceHolder.SURFACE_TYPE_PUSH_BUFFERS means?</a></p>  <p>A commenter in q23370836 describes a bug that also crashes their application every five minutes.</p>  <p>Occaisonally I also get the error</p>  <pre><code>Could not allocate CursorWindow '/data/data/com.openarbrowser.westernfrontar/databases/POI.db' of size 2097152 due to error -24. </code></pre>  <p>I have tried to fix this in the usual way by closing the cursor in a finally block. </p>  <pre><code>Cursor c = null;                  try{                     c = mReadablePOIDatabase.query(             ...);                      c.moveToFirst();                     while(!c.isAfterLast()){                         ...                          c.moveToNext();                     }                      c.close(); ...                 }                 finally {                     //closes the cursor even if an exception is thrown                     if(c != null)                         c.close();                         c = null;                     Looper.loop();                 } }  } </code></pre>  <p>Am I missing something really obvious. Any thoughts?</p>