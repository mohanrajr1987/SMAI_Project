<p>I have to evaluate how difficult it would be to extract some object (e.g. <code>java.security.PrivateKey</code>) from memory of a running java program. </p>  <p>I'm not very into this low level memory stuff, so I started out with small C programs and familiarized myself with <code>gdb</code>, <code>/proc/&lt;pid&gt;/maps</code>, <code>/proc/&lt;pid&gt;/mem</code> and a <a href="http://serverfault.com/a/408929/256824">script</a> that dumps all the memory areas.</p>  <p>However, things change when switching to java. Memory is allocated and managed very differently with java thanks to garbage collection. In C programs I'd look at a stack address and  know for certain that it contained the variable I wanted to extract.</p>  <p>So my questions are:</p>  <ol> <li>Do Java objects have some kind of type ID so I can locate objects of that type in a memory dump?</li> <li>If so, how do I find out the ID of a type (e.g. what's the ID of a <code>String</code>)?</li> <li>If there is no such type ID, what other possibilities would attackers have to extract, let's say, a <code>java.security.PrivateKey</code> from a java process?</li> </ol>  <p>Suppose that <a href="https://visualvm.java.net/jmx_connections.html" rel="nofollow">JMX</a> is turned off.</p>  <p>Thanks for your help</p>