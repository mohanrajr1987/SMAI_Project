<h2>Need more Caching in Mondrian and less DB queries</h2>  <p>Although I've enough RAM, my mondrian is really slow and does not use the RAM it should have been. The RAM is allocated as -Xmx40G in tomcat.</p>  <ul> <li>I tried to explicitly use the parameters in mondrian.properties which enables caching. Like the following(although these are defaults):</li> </ul>  <p>mondrian.expCache.enable=true</p>  <p>mondrian.rolap.EnableRolapCubeMemberCache=true</p>  <p>mondrian.rolap.star.disableCaching=false</p>  <p>Still the heap usage did not increase in the visualvm.</p>  <ul> <li>Then I came across this property:  mondrian.result.highCardChunkSize (I used 113: there is no logic behind this. I just wanted to have a big value as the default is 1 and made sure it is coprime  with the mondrian.result.limit) Default value: 1 Means: When reading high cardinality dimension elements, number of elements read from database in each step. When dealing with high cardinality dimensions, elements are retrieved in blocks: first N elements are retrieved, when these elements are read, next ones (from N+1 to 2N) are got. N number is this property. Setting great values for this property increases performance but may overload memory. Values should be prime with mondrian.result.limit(I used 5000000)</li> </ul>  <p>source: <a href="http://mondrian.sourceforge.net/head/configuration.html" rel="nofollow">http://mondrian.sourceforge.net/head/configuration.html</a></p>  <p>Does it really help? </p>  <p>I even referred to the pentaho recommendations:</p>  <p><a href="http://infocenter.pentaho.com/help/index.jsp?topic=%2Fperformance_tuning_guide%2Fconcept_mondrian_properties.html" rel="nofollow">http://infocenter.pentaho.com/help/index.jsp?topic=%2Fperformance_tuning_guide%2Fconcept_mondrian_properties.html</a></p>  <ul> <li>Any recommendations to tune the performance of Mondrian will be really helpful apart from DB tuning(indexing and all)? I fear I am missing something out here.</li> </ul>