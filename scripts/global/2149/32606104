<p>We are facing a strange issue related to minor GC. One of our application which is in production since last 18 months started having higher minor gc pauses times recently. Historically our minor GC pauses were around 30-50 msec, however now they are around 110 msec to 400 msec. There has not been any changes in heap configurations but good number of code changes has gone in.</p>  <p>The application is a Rest web service running on tomcat hosted on a cloud with 8 cpu virtual machines and 24 GB RAM and talking to cassandra. We tried to recreate the issue for debugging the same in a lower environment by running a performance test but not able to do so. There is a single rest service which is invoked with similar workload with 98% of the time however 2% of the workload is bit different. We are not able to load test those 2% of the calls due to data issues.</p>  <p>When we run the load we see that almost same amount of heap is reclaimed or promoted as in normal scenario (load is 8-10 times of production when we run the load test) but minor gc pauses are &lt;50 msec always. (we did run the same load on a production VM as its a read operation)</p>  <p>With Performance test requests(High load):</p>  <pre><code>2015-09-15T10:16:51.617+0000: 300001.062: [GC (Allocation Failure) [PSYoungGen: 1922537K-&gt;174564K(1922560K)] 2146305K-&gt;432640K(4019712K), 0.0604696 secs] [Times: user=0.44 sys=0.00, real=0.06 secs] 2015-09-15T10:16:54.033+0000: 300003.478: [GC (Allocation Failure) [PSYoungGen: 1922383K-&gt;174567K(1922560K)] 2180459K-&gt;469257K(4019712K), 0.0493751 secs] [Times: user=0.28 sys=0.00, real=0.05 secs] 2015-09-15T10:16:56.468+0000: 300005.912: [GC (Allocation Failure) [PSYoungGen: 1922535K-&gt;174570K(1922560K)] 2217225K-&gt;504099K(4019712K), 0.0437478 secs] [Times: user=0.27 sys=0.00, real=0.05 secs] 2015-09-15T10:16:58.696+0000: 300008.140: [GC (Allocation Failure) [PSYoungGen: 1922538K-&gt;174576K(1922560K)] 2252067K-&gt;541818K(4019712K), 0.0407501 secs] [Times: user=0.25 sys=0.00, real=0.04 secs] 2015-09-15T10:17:00.887+0000: 300010.331: [GC (Allocation Failure) [PSYoungGen: 1922544K-&gt;174573K(1922560K)] 2289786K-&gt;577682K(4019712K), 0.0468752 secs] [Times: user=0.32 sys=0.00, real=0.05 secs] 2015-09-15T10:17:03.142+0000: 300012.586: [GC (Allocation Failure) [PSYoungGen: 1922541K-&gt;174581K(1922560K)] 2325650K-&gt;617970K(4019712K), 0.0424797 secs] [Times: user=0.26 sys=0.00, real=0.04 secs] 2015-09-15T10:17:05.394+0000: 300014.838: [GC (Allocation Failure) [PSYoungGen: 1922549K-&gt;174587K(1922560K)] 2365938K-&gt;659487K(4019712K), 0.0425134 secs] [Times: user=0.27 sys=0.00, real=0.04 secs] 2015-09-15T10:17:07.661+0000: 300017.106: [GC (Allocation Failure) [PSYoungGen: 1922555K-&gt;174566K(1922560K)] 2407455K-&gt;694256K(4019712K), 0.0389039 secs] [Times: user=0.24 sys=0.00, real=0.04 secs] 2015-09-15T10:17:09.951+0000: 300019.395: [GC (Allocation Failure) [PSYoungGen: 1922534K-&gt;174577K(1922560K)] 2442224K-&gt;726822K(4019712K), 0.0385114 secs] [Times: user=0.29 sys=0.00, real=0.03 secs] 2015-09-15T10:17:12.302+0000: 300021.746: [GC (Allocation Failure) [PSYoungGen: 1922545K-&gt;174591K(1922560K)] 2474790K-&gt;762111K(4019712K), 0.0400951 secs] [Times: user=0.28 sys=0.00, real=0.04 secs] </code></pre>  <p>But at much lesser production load for the same JVM on the same machine, minor GC pauses are quite high:</p>  <pre><code>015-09-15T05:36:27.428+0000: 283176.872: [GC (Allocation Failure) [PSYoungGen: 1844205K-&gt;125665K(1922560K)] 1991878K-&gt;273338K(4019712K), 0.1087286 secs] [Times: user=0.61 sys=0.00, real=0.11 secs] 2015-09-15T05:39:05.945+0000: 283335.390: [GC (Allocation Failure) [PSYoungGen: 1873633K-&gt;157526K(1922560K)] 2021306K-&gt;305200K(4019712K), 0.1099762 secs] [Times: user=0.58 sys=0.00, real=0.11 secs] 2015-09-15T05:41:43.686+0000: 283493.131: [GC (Allocation Failure) [PSYoungGen: 1905494K-&gt;174576K(1922560K)] 2053168K-&gt;337666K(4019712K), 0.1249486 secs] [Times: user=0.70 sys=0.00, real=0.13 secs] 2015-09-15T05:45:06.059+0000: 283695.503: [GC (Allocation Failure) [PSYoungGen: 1922544K-&gt;174560K(1922560K)] 2085634K-&gt;371522K(4019712K), 0.1434632 secs] [Times: user=0.95 sys=0.00, real=0.15 secs] 2015-09-15T05:48:08.511+0000: 283877.955: [GC (Allocation Failure) [PSYoungGen: 1922528K-&gt;174576K(1922560K)] 2119490K-&gt;404319K(4019712K), 0.1145014 secs] [Times: user=0.76 sys=0.00, real=0.11 secs] 2015-09-15T05:50:49.150+0000: 284038.594: [GC (Allocation Failure) [PSYoungGen: 1922544K-&gt;174571K(1922560K)] 2152287K-&gt;436331K(4019712K), 0.1178926 secs] [Times: user=0.68 sys=0.00, real=0.12 secs] 2015-09-15T05:54:18.962+0000: 284248.407: [GC (Allocation Failure) [PSYoungGen: 1922539K-&gt;174560K(1922560K)] 2184299K-&gt;467992K(4019712K), 0.0975615 secs] [Times: user=0.63 sys=0.00, real=0.10 secs] 2015-09-15T05:57:45.177+0000: 284454.621: [GC (Allocation Failure) [PSYoungGen: 1922240K-&gt;174577K(1922560K)] 2215672K-&gt;501369K(4019712K), 0.1108669 secs] [Times: user=0.75 sys=0.00, real=0.11 secs] 2015-09-15T06:00:55.609+0000: 284645.053: [GC (Allocation Failure) [PSYoungGen: 1922545K-&gt;174584K(1922560K)] 2249337K-&gt;534084K(4019712K), 0.0970370 secs] [Times: user=0.65 sys=0.00, real=0.10 secs] 2015-09-15T06:03:32.692+0000: 284802.137: [GC (Allocation Failure) [PSYoungGen: 1922552K-&gt;174582K(1922560K)] 2282052K-&gt;569585K(4019712K), 0.1109909 secs] [Times: user=0.80 sys=0.00, real=0.11 secs] 2015-09-15T06:06:14.975+0000: 284964.420: [GC (Allocation Failure) [PSYoungGen: 1922550K-&gt;174586K(1922560K)] 2317553K-&gt;599629K(4019712K), 0.0967938 secs] [Times: user=0.41 sys=0.00, real=0.10 secs] </code></pre>  <p>Now if minor GC pause time consists of Card Scanning, Stack Scanning, Old Generation Scanning and Copy time, which all should be kind of similar if not identical in above scenario, how come GC pauses times are so different? Or am I Missing something very basic here? </p>  <pre><code>JVM Version Info: java version "1.8.0_20" Java(TM) SE Runtime Environment (build 1.8.0_20-b26) Java HotSpot(TM) 64-Bit Server VM (build 25.20-b23, mixed mode) </code></pre>  <p>Heap parameters are: </p>  <pre><code>-XX:+DisableExplicitGC -XX:GCLogFileSize=10485760 -XX:+HeapDumpOnOutOfMemoryError -XX:InitialHeapSize=4G -XX:MaxHeapSize=4G -Xmn2G -XX:NumberOfGCLogFiles=25 -XX:+PrintGC -XX:+PrintGCApplicationStoppedTime -XX:+PrintGCDateStamps -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintHeapAtGC -XX:+PrintTenuringDistribution -XX:SurvivorRatio=10 -XX:-UseAdaptiveSizePolicy -XX:+UseCompressedOops -XX:+UseGCLogFileRotation -XX:+UseParallelGC -XX:+UseParallelOldGC </code></pre>