<pre><code>wall.paint(g); wall2.paint(g); bird.paint(g); pause.paint(g);  if (score &gt; 9){     bronze.paint(g); } if (score &gt; 19){     silver.paint(g); } if (score &gt; 39){     gold.paint(g); } if (score &gt; 69){     plat.paint(g); }  if (score &gt; 99){     trophy.paint(g); } </code></pre>  <p>Ok i'm working on my first java game which is a flappy bird clone (because it's a simple but fun game). Everytime you reach a score of 10, 20, 40, 70 you are awarded with a medal and a medal appears next to your score.</p>  <p><a href="http://i.stack.imgur.com/y4sTh.png" rel="nofollow"><img src="http://i.stack.imgur.com/y4sTh.png" alt="Medal next to score"></a></p>  <p>But when you reach a score of 100 you get a trophy, this trophy has some transparent spots on it so it displays the previously drawn medal behind it</p>  <p><a href="http://i.stack.imgur.com/QRT9b.png" rel="nofollow"><img src="http://i.stack.imgur.com/QRT9b.png" alt="Medal Behind Trophy"></a></p>  <p>All i want to do is remove the previously drawn medals not every single graphic in the game.</p>  <p>Here is the Game.java code if you need it, this is where the rendering takes place.</p>  <pre class="lang-java prettyprint-override"><code>package net.dragon4c3.game;  import java.awt.Font; import java.awt.Graphics; import java.awt.event.MouseAdapter; import java.awt.event.MouseEvent; import java.awt.image.BufferedImage; import java.io.File; import java.io.IOException; import javax.imageio.ImageIO; import javax.swing.JPanel; import net.dragon4c3.medal.*;  @SuppressWarnings("serial") public class Game extends JPanel {      static int HEIGHT = 800;     static int WIDTH = 600;     static String TITLE = "Flappy Bird ";     static String VERSION = "1.2 ";     static Bird bird = new Bird();     Floor floor = new Floor();     MedalBronze bronze = new MedalBronze();     MedalSilver silver = new MedalSilver();     MedalGold gold = new MedalGold();     MedalPlatinum plat = new MedalPlatinum();     Trophy trophy = new Trophy();     Volume pause = new Volume();     Pipe wall = new Pipe(WIDTH);     Pipe wall2 = new Pipe(WIDTH + (WIDTH / 2));     static int score = 0;     static int maxScore=0;     int scrollX = 0;     static boolean dead = false;      BufferedImage img = null;     {         try {             img = ImageIO.read(new File("assets/textures/background.png"));         } catch (IOException e) {             System.out.println("background.png Not Found!!");         }}         {         this.addMouseListener(new MouseAdapter() {             public void mousePressed(MouseEvent arg0) {                 bird.jump();                 Sound.soundWing();                 }              });           {        }}     @SuppressWarnings("static-access")     public void paint(Graphics g) {         super.paint(g);          g.drawImage(img, scrollX, 0, null);         g.drawImage(img, scrollX + 1800, 0, null);          wall.paint(g);         wall2.paint(g);         bird.paint(g);         pause.paint(g);          if (score &gt; 9){             bronze.paint(g);         }         if (score &gt; 19){             silver.paint(g);         }         if (score &gt; 39){             gold.paint(g);         }         if (score &gt; 69){             plat.paint(g);         }          if (score &gt; 99){             trophy.paint(g);         }         g.setFont(new Font("04b_19", Font.BOLD, 53));         g.drawString("" + score, Game.WIDTH / 2 - 20, 65);          g.setFont(new Font("04b_19", Font.BOLD, 30));         g.drawString("Best: " + maxScore, Game.WIDTH / 2 - -160, 40);         }      @SuppressWarnings("static-access")     public void move() {          wall.move();         wall2.move();         bird.move();         scrollX += Pipe.speed;         if (scrollX == -1800)             scrollX = 0;         if (dead) {             wall.x = 600;             wall2.x = 600 + (WIDTH / 2);             dead = false;         }         if ((wall.x == Bird.X) || (wall2.x == Bird.X))             score();     }     public static void score() {         score += 1;         Sound.soundScore();         System.out.println("Score: " + score);           if(score &gt; maxScore) {                maxScore = score;             }            {         }     } }        </code></pre>  <p>I've tried code like g.clearRect(not sure what the rest is) and it cleared all of the textures.</p>