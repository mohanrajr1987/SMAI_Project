<p>in my project i have a scrollpane which can contains various panel, depending by user action. By the way, i'd like to have each panel of a fixed height, and on add, they should be shown one below the previous. Instead they change their height depending to the number of existing panels. I wrote a main class with the goal of reproducing current behaviour, and an image which should explain what am I aiming for.</p>  <p>image:</p>  <p><a href="http://i.stack.imgur.com/H1EgH.png" rel="nofollow"><img src="http://i.stack.imgur.com/H1EgH.png" alt="enter image description here"></a></p>  <p>code:</p>  <pre><code>import java.awt.BorderLayout; import java.awt.Color; import java.awt.Dimension; import java.awt.event.MouseEvent; import java.awt.event.MouseListener;  import javax.swing.Box; import javax.swing.JButton; import javax.swing.JFrame; import javax.swing.JLabel; import javax.swing.JPanel; import javax.swing.JScrollPane; import javax.swing.ScrollPaneConstants; import javax.swing.SwingUtilities;   public class MyClass {      static JScrollPane myScrollPaneContent;     static Box panelContainer;     static int i=0;      public static void main(String[] args)  {                SwingUtilities.invokeLater(new Runnable() {             public void run(){                    int i=0;                 //mainWindow                     JFrame mainWindow = new JFrame("MyFrame");                     mainWindow.setLayout(new BorderLayout());                     mainWindow.setMinimumSize(new Dimension(1050,300));                  //panel to be placed in mainwindow (borderlayout.Center)                 //contains a menu + scrollpane                     JPanel centerPanel = new JPanel();                  //Box for myScrollPaneContent                 panelContainer = Box.createVerticalBox();                       //button for centerPanel                     JButton button = new JButton("addPanel");                     button.setBackground(Color.green);                     button.addMouseListener(new MouseListener() {                         @Override                         public void mouseReleased(MouseEvent e) {                             //nothing                         }                         @Override                         public void mousePressed(MouseEvent e) {                             //nothing                         }                          @Override                         public void mouseExited(MouseEvent e) {                             //nothing                         }                          @Override                         public void mouseEntered(MouseEvent e) {                             //nothing                         }                          @Override                         public void mouseClicked(MouseEvent e) {                             addPanel();                         }                      });                     centerPanel.add(button);                       myScrollPaneContent = new JScrollPane(panelContainer);                     myScrollPaneContent.setPreferredSize(new Dimension(600,250));                     myScrollPaneContent.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);                      //all panels are added to the Box                       //the box do not need to be added to scroll pane since it has been given into it s constructor                      //the scrollpane is added to the centralpanel                     centerPanel.add(myScrollPaneContent);                      mainWindow.add(centerPanel,BorderLayout.CENTER);                     mainWindow.add(Box.createVerticalGlue(),BorderLayout.SOUTH);                       mainWindow.setVisible(true);             }         });     }         public static void addPanel(){         switch(i++){         case 0:             //panel 1 for Box             JPanel one = new JPanel();             JLabel labOne = new JLabel("hello");             one.add(labOne);             one.setPreferredSize(new Dimension(1000,25));             one.setBackground(Color.white);             panelContainer.add(one);              break;         case 1:             //panel 2 for Box             JPanel two = new JPanel();             JLabel labTwo = new JLabel("i am a label");             two.add(labTwo);             two.setPreferredSize(new Dimension(1000,30));             two.setBackground(Color.yellow);             panelContainer.add(two);             break;         case 2:             //panel 3 for Box             JPanel three = new JPanel();             JLabel labThree = new JLabel("Bye bye");             three.add(labThree);             three.setPreferredSize(new Dimension(1000,30));             three.setBackground(Color.gray);             panelContainer.add(three);             break;         case 3:             //panel 4 for Box             JPanel four = new JPanel();             JLabel labFour = new JLabel("boyz");             four.add(labFour);             four.setPreferredSize(new Dimension(1000,30));             four.setBackground(Color.blue);             panelContainer.add(four);             break;         default:              i=0;             break;         }         myScrollPaneContent.revalidate();         myScrollPaneContent.repaint();     } } </code></pre>