<p>Problem: When running specs the output is very confusing, instead of saying where the error lies it just throws misleading errors</p>  <p>This is inside the rails lib folder, and it's mounted on the routes.rb</p>  <pre><code># lib/engines/users/app.rb  module Engines   module Users     class App &lt; Sinatra::Base         get '/api/v1/users/me' do           raise 'runtime error here'         end          get '/api/v1/another-route' do           # something here           status 200         end     end   end end </code></pre>  <p>The spec file looks something like this:</p>  <pre><code>it 'returns a 200' do   get '/api/v1/users/me', auth_attributes   expect(last_response.body).to eq 'something' # added to clarify my point, it's not the response status that I care of.   expect(last_response.status).to be 200 end </code></pre>  <p>error:</p>  <pre><code> Failure/Error: expect(last_response.status).to be 200     expected #&lt;Fixnum:401&gt; =&gt; 200         got #&lt;Fixnum:1001&gt; =&gt; 500     Compared using equal?, which compares object identity,    but expected and actual are not the same object. Use    `expect(actual).to eq(expected)` if you don't care about    object identity in this example. </code></pre>  <p>expected error:</p>  <pre><code>     RuntimeError:        runtime error here </code></pre>  <p>Another route also fails:</p>  <pre><code>it 'something' do   get '/api/v1/another-route', auth_attributes   expect(last_response.status).to be 401   json = JSON.parse(last_response.body).with_indifferent_access   expect(json[:message]).to eql "You have been revoked access." end </code></pre>  <p>error: Prints a massive html output which I believe is the rails backtrace html output</p>  <p>expected error: none as this endpoint doesn't raise an error</p>  <p>My question is if there's a way to:</p>  <ol> <li>Stop rails from dealing with this, so it gives the actual output</li> <li>Avoid the entire engine to fail because one route raise exception</li> </ol>  <p>I believe that by solving the first point, the second one gets fixed too.</p>  <p>Thank you for your time</p>