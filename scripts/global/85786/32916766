<p>This is just a curious irritant, but why does my app not include the expected line in config/application.rb, or anywhere else?</p>  <pre><code>require 'rails/all'  </code></pre>  <p>This app was generated using Rails Composer in early 2014, if that makes a difference.  Also, it is Rails 4.2.1.</p>  <p>The issue arose only because I am studying the <a href="http://guides.rubyonrails.org/configuring.html" rel="nofollow">Configuring Rails Applications</a> and the <a href="http://guides.rubyonrails.org/initialization.html" rel="nofollow">The Rails Initialization Process</a> guides as I have a need to modify my initialization process.  Both state that the config/application.rb file is expected to contain that line, but mine does not.  And, yes, the app runs just fine locally and on Heroku, so...  Why?</p>  <p>My file is:</p>  <pre><code>require File.expand_path('../boot', __FILE__)  # Pick the frameworks you want: require "active_record/railtie" require "action_controller/railtie" require "action_mailer/railtie" require "sprockets/railtie" # require "rails/test_unit/railtie"  # Require the gems listed in Gemfile, including any gems # you've limited to :test, :development, or :production. Bundler.require(:default, Rails.env)  module Theappname   class Application &lt; Rails::Application      config.generators do |g|        # Enable Chrome Source Maps so CSS and JS can be debugged       #g.sass_options = { :debug_info =&gt; true }        # don't generate RSpec tests for views and helpers       g.test_framework :rspec, fixture: true       g.fixture_replacement :factory_girl, dir: 'spec/factories'        g.view_specs false       g.helper_specs false     end      # Rails 4 should include all helpers for controllers and views     config.action_controller.include_all_helpers = true        # Settings in config/environments/* take precedence over those specified here.     # Application configuration should go into files in config/initializers     # -- all .rb files in that directory are automatically loaded.      # Set Time.zone default to the specified zone and make Active Record auto-convert to this zone.     # Run "rake -D time" for a list of tasks for finding time zone names. Default is UTC.     #config.time_zone = 'Eastern Time (US &amp; Canada)'     config.time_zone = 'UTC'   # Don't use local time or you won't notice time issues.      # The default locale is :en and all translations from config/locales/*.rb,yml are auto loaded.     # config.i18n.load_path += Dir[Rails.root.join('my', 'locales', '*.{rb,yml}').to_s]     # config.i18n.default_locale = :de      # Do not check for unavailable locales     I18n.enforce_available_locales = false      # not needed at 4.0     config.assets.initialize_on_precompile = false      # Load files in lib     config.autoload_paths += %W(#{config.root}/lib)      # Extend Rails classes in lib/core_ext/&lt;classname&gt;.rb...  See above?     #config.autoload_paths += Dir[File.join(Rails.root, "lib", "core_ext", "*.rb")].each {|l| require l }      # 20150711 Default Date formats     #default_date_formats = { :default =&gt; '%d.%m.%Y' }     default_date_formats = { :default =&gt; '%Y.%m.%d' }     Time::DATE_FORMATS.merge!(default_date_formats)     Date::DATE_FORMATS.merge!(default_date_formats)      # 20150808 Adding Delayed_Job queueing for daily_report and such     config.active_job.queue_adapter = :delayed_job    end end </code></pre>