<p>I have a Rails 4 app that I´m integrating with other system. Everyday we need to import their database. Some or most of the data should be already imported in our database (from previous loads).</p>  <p>When we try to insert an an existing object in the database, like this:</p>  <pre><code>... region = Region.new(id: id, name: name) region.save </code></pre>  <p>we get this error:</p>  <pre><code>ActiveRecord::RecordNotUnique (Mysql2::Error: Duplicate entry '1' for key 'PRIMARY': </code></pre>  <p>I thought save method creates in case the record doesn´t exist or update in case it exists. What am I missing? Should I find the object in the database first? Like:</p>  <pre><code>region = Region.find(id) if region  #update fields else   #create region end region.save </code></pre>  <p>Is there a better, more effective, better performance (take into account there will be thousands of records) elegant Rails way to do it?</p>