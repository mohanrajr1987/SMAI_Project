<p>I have a problem with my FosUser login in this days i try to render the controller of my login html page in navbar and the login work well..  Now i put my site on the server, i clear the cache and after login the page refreshes without log in the site.. </p>  <p>This is the controller </p>  <pre><code>namespace FOS\UserBundle\Controller;  use Symfony\Bundle\FrameworkBundle\Controller\Controller; use Symfony\Component\HttpFoundation\Request; use Symfony\Component\Security\Core\SecurityContextInterface; use Symfony\Component\Security\Core\Exception\AuthenticationException;  class SecurityController extends Controller { public function loginAction(Request $request) {     /** @var $session \Symfony\Component\HttpFoundation\Session\Session */     $session = $request-&gt;getSession();      // get the error if any (works with forward and redirect -- see below)     if ($request-&gt;attributes-&gt;has(SecurityContextInterface::AUTHENTICATION_ERROR)) {         $error = $request-&gt;attributes-&gt;get(SecurityContextInterface::AUTHENTICATION_ERROR);     } elseif (null !== $session &amp;&amp; $session-&gt;has(SecurityContextInterface::AUTHENTICATION_ERROR)) {         $error = $session-&gt;get(SecurityContextInterface::AUTHENTICATION_ERROR);         $session-&gt;remove(SecurityContextInterface::AUTHENTICATION_ERROR);     } else {         $error = null;     }      if (!$error instanceof AuthenticationException) {         $error = null; // The value does not come from the security component.     }      // last username entered by the user     $lastUsername = (null === $session) ? '' : $session-&gt;get(SecurityContextInterface::LAST_USERNAME);      $csrfToken = $this-&gt;has('form.csrf_provider')         ? $this-&gt;get('form.csrf_provider')-&gt;generateCsrfToken('authenticate')         : null;      return $this-&gt;renderLogin(array(         'last_username' =&gt; $lastUsername,         'error'         =&gt; $error,         'csrf_token' =&gt; $csrfToken,     )); }  /**  * Renders the login template with the given parameters. Overwrite this function in  * an extended controller to provide additional data for the login template.  *  * @param array $data  *  * @return \Symfony\Component\HttpFoundation\Response  */ protected function renderLogin(array $data) {     return $this-&gt;render('FOSUserBundle:Security:login.html.twig', $data); }  public function checkAction() {     throw new \RuntimeException('You must configure the check path to be handled by the firewall using form_login in your security firewall configuration.'); }  public function logoutAction() {     throw new \RuntimeException('You must activate the logout in your security firewall configuration.'); } } </code></pre>  <p>How can i do??</p>