<p>In a nutshell - I'm trying to use system() to call a windows port of grep, which has been copied into a directory in PATH (C:\windows\system32 to be exact.)</p>  <p>The program is then also put in C:\windows\system32 and added to the right click menu so users can run it by right-clicking inside a mapped drive window, on my test systems the G: drive. </p>  <p>Under Windows 7, it works. </p>  <p>Under Windows 8, I get this (when running manually by typing in the program name) :</p>  <pre><code>G:\(snip)&gt;listandparse   'grep' is not recognized as an internal or external command,   operable program or batch file.   </code></pre>  <p>But if I type grep:</p>  <pre><code>G:\(snip)&gt;grep   Usage: grep [OPTION]... PATTERN [FILE]...   Try `grep --help' for more information.   </code></pre>  <p>If I hardcode the path:</p>  <pre><code>&gt; G:\(snip)&gt;listandparse   &gt; 'C:\windows\system32\grep.exe' is not recognized as an internal or &gt; external command, operable program or batch file.   </code></pre>  <p>And, wackiest of all, if I do it from the C: drive:</p>  <pre><code>C:\Users\(snip)&gt;grep   Usage: grep [OPTION]... PATTERN [FILE]...   Try `grep --help' for more information.    C:\Users\(snip)&gt;listandparse   Usage: grep [OPTION]... PATTERN [FILE]...   Try `grep --help' for more information.   </code></pre>  <p>Code follows:</p>  <pre><code>#include &lt;iostream&gt;  #include &lt;cstdlib&gt; using namespace std;   int main (int argc, char** argv) {      system("grep");      return 0; } </code></pre>