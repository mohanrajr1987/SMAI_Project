<p>I was experimenting with desktopduplication api <a href="https://code.msdn.microsoft.com/windowsdesktop/Desktop-Duplication-Sample-da4c696a" rel="nofollow">sample code</a> and it was mentioned <a href="https://msdn.microsoft.com/en-us/library/windows/hardware/dn653326%28v=vs.85%29.aspx" rel="nofollow">here</a> that </p>  <blockquote>   <p>even full screen DirectX applications can be duplicated. </p> </blockquote>  <p>Also <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/hh404611%28v=vs.85%29.aspx" rel="nofollow">here</a> it is mentioned that </p>  <blockquote>   <p>The following components of the operating system can generate the desktop image:</p>      <ul>   <li><p>The DWM by composing the desktop image</p></li>   <li><p>A full-screen DirectX or OpenGL application</p></li>   <li><p>An application by switching to a separate desktop, for example, the secure desktop that is used to display the login screen</p></li>   </ul> </blockquote>  <p>However when I tested the sample code with multiple monitors provided <a href="https://code.msdn.microsoft.com/windowsdesktop/Desktop-Duplication-Sample-da4c696a" rel="nofollow">here</a>, it worked fine for other applications running on desktop but when I started a fullscreen directx application, the running applications in the background are pushed onto the secondary monitor and only the secondary monitor is captured in the duplicated window. </p>  <p>What might be the reason for this? I ran the exact sample code provided by MSDN. Is there something more I need to do in order to capture DirectX fullscreen games using DesktopDuplication API </p>