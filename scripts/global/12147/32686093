<p>I have this table structure:</p>  <p>Table1: <code>id, group_id, label, sort_order</code></p>  <p>Keys: <code>PK: id, UNIQUE: group_id+sort_order, INDEX: group_id</code></p>  <p>Sample data:</p>  <pre><code>id   group_id   label       sort_order 50   1          Field 1     1  51   1          Field 2     2 52   1          Field 3     3 </code></pre>  <p>Where <code>(group_id, sort_order)</code> is a unique key. </p>  <p>To update the arrangement of records on front-end, the <code>sort_order</code> field is used in order by clause. User can update the order by dragging labels around in front-end, which passes the ids, ex: <code>52, 51,50</code> which is then treated as the new order/sorting.</p>  <p>Expected result:</p>  <pre><code>id   group_id   label       sort_order 50   1          Field 1     3  51   1          Field 2     2 52   1          Field 3     1 </code></pre>  <p>The process should update all 3 records with the new <code>sort_order</code> values. Sample update query:</p>  <pre><code>UPDATE Table1 SET sort_order = 1 WHERE id = 52 AND group_id = 1 </code></pre>  <p>However, since sort_order is part of a unique key, it throws error since <code>group_id,sort_order</code> key already exists.</p>  <p>I did a hackish workaround where I update the sort order twice, ex: by updating it into a higher value, ex: <code>sort_order = actual_order + 1000</code> then update again using the actual values, ex: <code>sort_order = actual_order</code>.</p>  <p>What would be the better approach? Should I just remove the unique key completely instead?</p>  <p>--</p>  <p>EDIT</p>  <p>--</p>  <p>To give a better view of the problem, here is my PHP code:</p>  <p>Sample fieldIds: <code>52,51,50</code> or <code>50,51,52</code> or <code>51,52,50</code>. The sequence determines the new sorting.</p>  <pre><code>public function updateSort($projectId, $groupId, $subgroupId, array $fieldIds) {     // Other stuff     // ...      $statement = create_a_prepared_statement(); // ...      // Updating sort_order directly would result to unique key violation     // so change the sort_order into some negative numbers and re-sort with     // the actual orders     foreach ($fieldIds as $sortIndex =&gt; $fieldId) {         $sort = $sortIndex - 1000;         $statement-&gt;execute(array(             'id' =&gt; $fieldId,             'project_id' =&gt; $projectId,             'group_id' =&gt; $groupId,             'subgroup_id' =&gt; $subgroupId,             ':0' =&gt; $sort,         ));     }      // Now sort it correctly     foreach ($fieldIds as $sortIndex =&gt; $fieldId) {         $sort = $sortIndex + 1;         $statement-&gt;execute(array(             'id' =&gt; $fieldId,             'project_id' =&gt; $projectId,             'group_id' =&gt; $groupId,             'subgroup_id' =&gt; $subgroupId,             ':0' =&gt; $sort,         ));     }      return true; } </code></pre>