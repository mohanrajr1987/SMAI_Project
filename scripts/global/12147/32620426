<p>There are a lot of posts on the easiest way to find duplicates in two arrays, but what is absolute fastest way? Is there a way to avoid using two for loops and get the function from <code>O(n^2)</code> time to <code>O(n)</code> time? The arrays I have contain ~1000 items each. Before running the function I check which array is longer and use that array as the <code>toCheckAgainst</code> variable.</p>  <pre><code>var containingBoth = []; function checkArrays(toCheck, toCheckAgainst){  for(var i=0;i&lt;toCheck.length;i+=1){   for(var j=0;j&lt;toCheckAgainst.length;j+=1){     if (toCheck[i] === toCheckAgainst[j]) {       containingBoth.push(toCheck[i]);     }    }   }  } </code></pre>