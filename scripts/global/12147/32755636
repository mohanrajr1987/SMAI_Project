<p>I am a C++ noob.  I have a list of numbers that I put into a Vector.  All numbers are 9 digit integers and are unique.  I want to know what is the least amount of digits (starting from the right) that can be used to uniquily identify each number in the set. right now there are only 6 numbers, but the list could potentially grow into the thousands. I have posted my code thus far (not working.) </p>  <p>EDIT  output is the following...</p>  <pre><code>digit is 1 digit is 1 digit is 1  RUN FINISHED; exit value 0; real time: 0ms; user: 0ms; system: 0ms </code></pre>  <p>This is mostly a learning exercise.  Please be generous and explicit with your comments and solutions.  </p>  <pre><code>#include &lt;iostream&gt; #include &lt;vector&gt; #include &lt;fstream&gt; #include &lt;string&gt; #include &lt;cstdlib&gt; #include &lt;algorithm&gt;  using namespace std;  int main() {      //declare stream variable and load vector with values      ifstream myfile("mydata.txt");     vector&lt;int&gt; myVector;     int num;     while (myfile &gt;&gt; num) {         myVector.push_back(num);     }        //sort and squack if there is a duplicate.       std::sort(myVector.begin(), myVector.end());     for (int i = 0; i &lt; (myVector.size() - 1); i++) {         if (myVector.at(i) == myVector.at(i + 1)) {             printf("There are duplicate student numbers in the file");             exit(EXIT_FAILURE);         }      }     //if it get here, then there are no duplicates of student numbers             vector&lt;int&gt; newv;     int k = 1;     bool numberFound = false;     bool myflag = false;      while (numberFound == false) {         //loop  through original numbers list and add a digit to newv.           for (int j = 0; j &lt; myVector.size(); ++j) {             newv.push_back(myVector.at(j) % (10^k));         }         sort(newv.begin(), newv.end());         for (int i = 0; i &lt; (newv.size() - 1); i++) {             if (newv.at(i) == newv.at(i + 1)) {                 //there is a duplicate for this digit. Set flag.                   myflag = true;             }             if (myflag == false) {                 numberFound = true;                 cout &lt;&lt; "digit is " &lt;&lt; k &lt;&lt; endl;             } else {                 k++;             }          }      }           //    for (int i = 0; i &lt; myVector.size(); i++) {     //        cout &lt;&lt; "||" &lt;&lt; myVector.at(i) &lt;&lt; "||" &lt;&lt; endl;     //    }     //     //    for (int i = 0; i &lt; newv.size(); i++) {     //        cout &lt;&lt; "---" &lt;&lt; newv.at(i) &lt;&lt; "---" &lt;&lt; endl;     //    }          return 0; } </code></pre>