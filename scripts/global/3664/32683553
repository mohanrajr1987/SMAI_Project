<p>Disclaimer: I'm new to programming in c++, I've read through dozens of forums, and can't find an answer to my specific question.</p>  <p>I've included the header and definition files for a Point class below and a main function that calls an overloaded ostream to print the Point.  I can't find the correct syntax for the definition for the non member overloaded operator&lt;&lt;.  If I have it the way it's posted, I get error message:</p>  <p>undefined reference to `Clustering::operator&lt;&lt;(std::ostream&amp;, Clustering::Point const&amp;)</p>  <p>If I add Clustering:: before the operator&lt;&lt; I get error message:</p>  <p>std::ostream&amp; Clustering::operator&lt;&lt;(std::ostream&amp;, const Clustering::Point&amp;)' should have been declared inside 'Clustering'  std::ostream &amp;Clustering::operator&lt;&lt;(std::ostream &amp;os, const ::Clustering::Point &amp;point)</p>  <p>How is this code supposed to be written?</p>  <p>Point.h file:</p>  <pre><code>#ifndef CLUSTERING_POINT_H #define CLUSTERING_POINT_H  #include &lt;iostream&gt;  namespace Clustering {      class Point {         int m_dim;        // number of dimensions of the point         double *m_values; // values of the point's dimensions      public:         Point(int);          friend std::ostream &amp;operator&lt;&lt;(std::ostream &amp;, const Point &amp;);     }; }  #endif //CLUSTERING_POINT_H </code></pre>  <p>Point.cpp file:</p>  <pre><code>#include "Point.h"  //Constructor Clustering::Point::Point(int i) {     m_dim = i;     m_values[i] = {0}; }  std::ostream &amp;operator&lt;&lt;(std::ostream &amp;os, const Clustering::Point &amp;point) {     os &lt;&lt; "Test print";     return os; } </code></pre>  <p>Main.cpp:</p>  <pre><code>#include &lt;iostream&gt; #include "Point.h"  using namespace std; using namespace Clustering;`  int main() {      Point p1(5);     cout &lt;&lt; p1;     return 0; } </code></pre>