<p>Say I have a Framework called SwiftKit, which has a UIView's extension class method named someClassMethod and a property named someProperty within it:</p>  <pre><code>// SwiftKit public extension UIView {     class func someClassMethod() {         print("someClassMethod from Swift Kit")     }      var someProperty: Double {         print("someProperty from Swift Kit")         return 0     } } </code></pre>  <p>And I also have a Framework called SwiftFoundation, which also has a UIView's extension class method named someClassMethod and a property named someProperty within it:</p>  <pre><code>// SwiftFoundation public extension UIView {     class func someClassMethod() {         print("someClassMethod from Swift Foundation")     }      var someProperty: Double {         print("someProperty from Swift Foundation")         return 0     } } </code></pre>  <p>Then I created a project introduced these Frameworks, things is, if I import both of them in the same swift file and access those extensions, I got a "Ambiguous use of someProperty/someClassMethod()" error, even if I specified the call in the form of SwiftKit.UIView.someClassMethod() :</p>  <pre><code>import UIKit import SwiftKit import SwiftFoundation  class ViewController: UIViewController {     override func viewDidLoad() {         super.viewDidLoad()         // Do any additional setup after loading the view, typically from a nib.          self.view.someProperty              // error: Ambiguous use of 'somProperty'         SwiftKit.UIView.someClassMethod()   // error: Ambiguous use of 'someClassMethod()'     } } </code></pre>  <p>If I only import one of them, the ambiguous error goes away, but more strange thing happens:</p>  <pre><code>import UIKit import SwiftKit //import SwiftFoundation  class ViewController: UIViewController {     override func viewDidLoad() {         super.viewDidLoad()         // Do any additional setup after loading the view, typically from a nib.          self.view.someProperty         SwiftKit.UIView.someClassMethod()     } } </code></pre>  <p>The console print out:</p>  <blockquote>   <p>someProperty from Swift Foundation </p>      <p>someClassMethod from Swift Foundation</p> </blockquote>  <p>My question is: How can I call these extensions(both class/instance method, properties) without ambiguous? If I cannot, does it mean we should add prefix to extension names as we usually do with Objective-C?</p>