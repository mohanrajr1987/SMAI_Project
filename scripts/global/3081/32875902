<p>When I am testing for a particular project I create a new instance of an ActiveRecord object using</p>  <pre><code>ObjectType.new(parameters) </code></pre>  <p>This instantiation in RSpec 3.3 (the latest version) calls the after_save callback within that model though. This behavior does not match what actually happens in the development environment and what I expect when that new instance in memory is created. Additionally if I do a binding.pry on the test that this is ran on I can examine the database and in fact there is a persisted object in the database that is created by RSpec instead of just using the in memory object.</p>  <p>Why is this behavior occurring and how should I fix it?</p>  <p><strong>UPDATE:</strong></p>  <p>So it appears that if you have a dependency object that relies on the in memory ActiveRecord object and then that object is saved to the database, the in memory object will also be saved.</p>  <p>For example.</p>  <pre><code>obj = ObjectType.new(parameters) DependencyObject.create(relies_on: obj) </code></pre>  <p>The <code>obj</code> object will be persisted to the database first and then the DependencyObject will be saved.</p>