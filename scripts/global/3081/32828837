<p>I am trying to test a controller action on a non-restful route.  </p>  <p><code>config/routes.rb</code>:</p>  <pre><code>  match '/integration/:provider/callback' =&gt; "providers#manual_auth", as: :integration_callback </code></pre>  <p>You can see that also via <code>rake routes</code>:</p>  <pre><code>integration_callback /integration/:provider/callback(.:format) providers#manual_auth </code></pre>  <p>In my spec file:</p>  <p><code>spec/controllers/providers_controller_spec.rb</code>:</p>  <pre><code>describe ProvidersController do   describe '#manual_auth' do     it 'hits the manual_auth action' do       get :manual_auth, use_route: :integration_callback     end   end end </code></pre>  <p>That gives me an error of:</p>  <pre><code>Failures:    1) ProvidersController#manual_auth hits the manual_auth action      Failure/Error: get :manual_auth, use_route: :integration_callback      ActionController::RoutingError:        No route matches {:controller=&gt;"providers", :action=&gt;"manual_auth"} </code></pre>  <p>However in <code>app/controllers/providers_controller.rb</code> I have</p>  <pre><code>class ProvidersController &lt; ApplicationController   def manual_auth     logger.info "Got into manual auth"   end end </code></pre>  <p>I should mention I'm purposely avoiding a request spec here because I need to be able to access and set a session object(that lives in this <code>#manual_auth</code> action) which apparently can only be done in controller tests, not request specs.  </p>