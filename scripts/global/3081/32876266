<p>I am having issues with getting a simple STI shoulda-matcher spec to pass correctly. </p>  <p>Here are the associations..</p>  <pre><code>class User &lt; ActiveRecord::Base end  class Provider &lt; ActiveRecord::Base     belongs_to :practice_manager, class_name: 'User', foreign_key: :user_id end  class PracticeManager &lt; User     has_many :providers end </code></pre>  <p>..and my factories..</p>  <pre><code>FactoryGirl.define do     sequence(:email) { |n| "person#{n}@email.com" }     sequence(:password) { |p| "thepassword123" }     sequence(:password_confirmation) { |p| "thepassword123" }      factory :user do         email         password         password_confirmation     end      factory :practice_manager, parent: :user, class: 'PracticeManager' do     end      factory :provider_user, parent: :user, class: 'ProviderUser' do     end      factory :provider do         sequence(:first_name) { |n| "Sally#{n}" }         sequence(:last_name) { |n| "Harmon#{n}" }         sequence(:npi) { |n| n.to_s.rjust(10, '0')}         sequence(:sf_contact_ident) { |s| s.to_s.rjust(15, '0') }         practice_manager     end end </code></pre>  <p>..as well as the test I am trying to get to pass.</p>  <pre><code>require 'rails_helper'  RSpec.describe PracticeManager, type: :model do     describe "Relationships" do         it { should have_many(:providers).class_name('User').with_foreign_key(:user_id) }     end end </code></pre>  <p>One thing I found is that I can get the test to pass if I add the <code>class_name: 'User', foreign_key: :user_id</code> to the <code>has_many</code> side of the association, but I'm afraid it's a false positive. It doesn't seem right. </p>  <p>Any suggestions are highly appreciated.</p>