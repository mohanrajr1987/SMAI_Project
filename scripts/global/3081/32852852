<p>I want to create a test which tests if my method is working correctly.</p>  <p>The tonnage is calculated within my submission model and saved over there. I also need that function within my contest views and that's why I also included it in the contest model (is this correct?).</p>  <pre><code>class Contest &lt; ActiveRecord::Base   has_many :submissions     def tonnage     self.submissions.sum(:tonnage)   end  end </code></pre>  <p>When I test (minitest) I get following error:</p>  <pre><code>FAIL["test_0003_must have tonnage", #&lt;Class:0x007fbcb9fac260&gt;, 2015-09-29 21:23:47 +0200]  test_0003_must have tonnage#Contest (1443554627.17s)         --- expected         +++ actual         @@ -1 +1 @@         -440         +#&lt;BigDecimal:7fbcbc9ac150,'0.0',9(27)&gt;         test/models/contest_test.rb:17:in `block (2 levels) in &lt;top (required)&gt;' </code></pre>  <p>My test looks like this (minitest):</p>  <pre><code>describe Contest do   let(:contest) { Contest.create(name: "test",                                  admin_id: 1,) }    it "must have tonnage" do     contest.tonnage.must_equal 440   end   end </code></pre>  <p>What does the test output mean (the failure) and what is the proper way to unit test this? I assume my method in my model is correct since it is working.</p>  <p>Thanks to the comment below I found out that I was referring to the wrong contest. Below is the proper test:</p>  <pre><code>describe Contest do    let (:default) { contests :default }    it "must have tonnage" do     default.tonnage.must_equal 440   end  end </code></pre>