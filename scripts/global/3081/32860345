<p>I'm using Capybara, rspec and poltergeist, outside of rails, to run some headless integrations tests. The scenario is that, there are 2 select fields. If I select a value in the first select field, the 2nd select field is populated based on the value of the first select field. If I run my spec using poltergeist in Mac OSX, the spec works. But in ubuntu, it fails, it seems that the 2nd select field is not populated. I also have <code>js: true</code> on my specs.</p>  <p>Here's my spec_helper.rb:</p>  <pre><code>require 'capybara/poltergeist' require 'capybara' require 'capybara/rspec' require 'pry' require 'support/session_helper' RSpec.configure do |config|    config.include Capybara::DSL   config.include Capybara::Poltergeist   config.include SessionHelper    Capybara.run_server = false   Capybara.default_driver = :poltergeist   Capybara.javascript_driver = :poltergeist   Capybara.app_host = "http://vps-staging.dropmysite.com"    options = { js_errors: false }   Capybara.register_driver :poltergeist do |app|     Capybara::Poltergeist::Driver.new(app, options)   end    config.expect_with :rspec do |expectations|      expectations.include_chain_clauses_in_custom_matcher_descriptions = true   end    config.mock_with :rspec do |mocks|     mocks.verify_partial_doubles = true   end  end </code></pre>  <p><em>EDIT</em> Adding failing spec</p>  <pre><code>require 'spec_helper'  feature 'vps-staging', js: true do   background do     visit '/'   end    let(:timestamp) { Time.now.strftime('%Y-%m-%d_%H-%M-%S') }     feature 'create private server' do     background do       sign_in 'blahblah@blahblah.com'     end      it 'successfully creates server' do       find(:xpath, "//a[@href='/en/private_servers/new']").click        directory_field = all(".tagit-new")[0].find("input")       select 'Ubuntu', from: 'distribution'       select '15.04', from: 'version'       fill_in 'private_server_profile_name', with: "Auto Test #{timestamp}"       directory_field.set "/home"       click_button 'Save'        visit '/en/dashboard'        expect(page.text).to have_content "Auto Test #{timestamp}"     end   end end </code></pre>  <p><em>EDIT</em> another thing I found out is that, this bug only happens on phantomjs version 1.9.8 and below. 2.0 works fine.</p>