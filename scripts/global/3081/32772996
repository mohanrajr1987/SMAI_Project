<p>So I have a controller that redirects at certain points under certain conditions. When I pass parameters to my spec helper methods in my controller spec (using the latest RSpec) to trigger these conditions I get a </p>  <pre><code>ActionView::MissingTemplate </code></pre>  <p>Error. Under closer examination when I am supposed to redirect I do a line like the following:</p>  <pre><code>redirect_to root_path &amp;&amp; return </code></pre>  <p>And then an exception in my test suite is thrown. I put a break point in the index function of the controller that should be called (that the route I'm redirecting to is pointing to) and it is never called in my test suite. This code seems to work when I just run it in my development environment and on production but for this test it just won't budge. Any ideas?</p>  <p>My test looks something like this:</p>  <pre><code>describe TestController do       it 'redirects properly with failure' do           get :create,               provider: 'test',               error: 'access_denied'           expect(response.body).to match 'test'         end end </code></pre>  <p>EDIT:</p>  <p>Update!</p>  <p>So it seems that changing my redirect to</p>  <pre><code>redirect_to root_path and return </code></pre>  <p>works in rspec.</p>  <p>I do not know why the order precendence of the &amp;&amp; operator is breaking in the spec...anyone have an explanation of what is going on here?</p>