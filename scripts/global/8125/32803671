<p>I have a string that I want to strip of everything in-between two specific characters. For example given <code>"hello {there} world"</code> I want to remove everything between <code>{</code> and <code>}</code> including those delimiters, in order to obtain <code>"hello world"</code>. It needs to handle the scenario where there are any number of nested results for that pattern. For example <code>"hello {there {mr} } world and {all} those who inhabit it"</code> should become <code>"hello world and those who inhabit it"</code>. </p>  <p>It seems it needs to find the inner most result and work its way outwards to prevent removing incorrect ranges. For example if it simply found the first <code>{</code> and the first <code>}</code> it would generate <code>hello  world and those who inhabit it</code> which is incorrect. If it were to remove everything in-between the first <code>{</code> and the last <code>}</code>, it would remove content that shouldn't be removed and result in <code>"hello those who inhabit it"</code>.</p>  <p>So how can this be accomplished?</p>  <p>One could use the <code>rangeOfString</code> API to get the first occurrence of a string and use those ranges to remove characters via  <code>stringByReplacingCharactersInRange</code>, or perhaps one could use a regex pattern. I'm not sure how best to utilize those to obtain the necessary behavior.</p>