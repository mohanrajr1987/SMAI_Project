<p>I'm working my way through an official Python tutorial and I can't for the life of me figure out how the nested for loops work in example <a href="https://docs.python.org/2/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops" rel="nofollow">4.4</a>: </p>  <pre><code>for n in range(2, 10):     for x in range(2, n):         if n % x == 0:             print n, '==', x, '*', n/x             break     else:         # loop fell through w/o finding a factor         print n, 'is a prime number' </code></pre>  <p><code>range(2, 10)</code> produces:<code>n = [2, 3, 4, 5, 6, 7, 8, 9]</code> ,so the way I understand it the inner for loop: <code>for x in range(2, n):</code> should produce <code>(x, n-1)</code> and thus the following pairs of <code>x, n</code> with each iteration: <code>(2, 1), (3, 2), (4, 3), (5, 4), (6, 5), (7, 6), (8, 7), (9, 8)</code>. Now, obviously that would never produce <code>n % x == 0</code> but that's the only way I can think about it.  When I print this piece of code: </p>  <pre><code>for n in range(2, 10):     for x in range(2, n):         print x, n </code></pre>  <p>to check what numbers will be generated, it returns (the first 6 pairs):</p>  <pre><code>2 3 2 4 3 4 2 5 3 5 4 5 </code></pre>  <p>How can the first pair <code>x, n</code> be <code>2, 3</code> if the first <code>n</code> is <code>2 - 1</code> since the last position of <code>range()</code> will be excluded. I'm utterly and miserably lost. </p>