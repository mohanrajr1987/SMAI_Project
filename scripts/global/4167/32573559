<p>I have a bottle "server" serving me block device images' in .raw format. Unfortunately, after download finishes (successfully or not, doesn't matter) I have to run one more method to unmount exported block device.</p>  <p>Below I provide the code which is used to export the image but only provides me with errors  (cannot unmap device as it's used by different process) and isn't exporting images as intended:</p>  <pre><code>class ExportResponse(HTTPResponse):     def __init__(self, devpath, volume_name):         self.devpath = devpath         self.volume_name = volume_name          output_filename = "%s.raw" % (volume_name)          fp = open(devpath)         content_length = os.lseek(fp.fileno(), 0, os.SEEK_END)         os.lseek(fp.fileno(), 0, os.SEEK_SET)         headers = {                 'Content-Length': str(content_length),                 'Content-Type': "application/octet-stream",                 'Content-Disposition': 'attachment; filename="%s"' % output_filename                 }         log.info("%s, %s" % (os.SEEK_CUR, content_length))         super(ExportResponse, self).__init__(fp, **headers)  @get('/retrieve/&lt;volume_name&gt;/') def export_volume(volume_name):     fmt = request.query['format']     dev = find_mapping(volume_name)     if dev:         log.debug("export, name=%s, already mapped dev=%s" % (repr(volume_name), str(dev)))     dev_owner = dev is None     try:         if not dev:             map_volume(volume_name)             dev = find_mapping(volume_name)             log.debug("export, name=%s, mapped to dev=%s" % (repr(volume_name), str(dev)))         return(ExportResponse(dev, volume_name))     except:         log.exception("export, name=%s" % repr(volume_name))         if dev and dev_owner:             unmap_volume(volume_name)         raise     finally:         unmap_volume(volume_name) </code></pre>  <p>Is there any good way of doing this?</p>