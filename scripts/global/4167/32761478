<p>If I want to inherit environment variables to child processes, i do something like:</p>  <pre><code>export MYVAR=tork </code></pre>  <p>Assume I have a a file <code>site.conf</code> containing assignments of values (that can contain spaces) to variables:</p>  <pre><code>EMAIL="dev@example.com" FULLNAME="Master Yedi" FOO=bar </code></pre>  <p>Now I would like to process this file whenever I open a new shell (e.g. with some code in <code>~/.bashrc</code> or <code>~/.profile</code>), so that any processes started from within that newly opened shell will inherit the assignments via environmental variables.</p>  <p>The obvious solution would be to prefix each line in <code>site.conf</code> with an <code>export</code> and just source the file. However I cannot do this since the file is also read (directly) by some other applications, so the format is fixed.</p>  <p>I tried something like</p>  <pre><code>cat site.conf | while read assignment do   export "${assignment}" done </code></pre>  <p>But this doesn't work, for various reasons (the most important being that <code>export</code> is executed in a subshell, so the variable will never be exported to the children of the calling shell).</p>  <p>Is there a way to programmatically <code>export</code> unknown variables in bash?</p>