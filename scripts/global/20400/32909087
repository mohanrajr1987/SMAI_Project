<p>I have an irregular (non-rectangular) lon/lat grid and a bunch of points in lon/lat coordinates, which should correspond to points on the grid (though they might be slightly off for numerical reasons). Now I need the indices of the corresponding lon/lat points.</p>  <p>I've written a function which does this, but it is REALLY slow.</p>  <pre><code>def find_indices(lon,lat,x,y):     lonlat = np.dstack([lon,lat])     delta = np.abs(lonlat-[x,y])     ij_1d = np.linalg.norm(delta,axis=2).argmin()     i,j = np.unravel_index(ij_1d,lon.shape)     return i,j  ind = [find_indices(lon,lat,p*) for p in points] </code></pre>  <p>I'm pretty sure there's a better (and faster) solution in numpy/scipy. I've already googled quite a lot, but the answer has so far eluded me. </p>  <p><strong>Any suggestions how to efficiently find the indices of the corresponding (nearest) points?</strong></p>  <p><em>PS: This question emerged from another one (<a href="http://stackoverflow.com/q/32845601/4419816">click</a>).</em></p>