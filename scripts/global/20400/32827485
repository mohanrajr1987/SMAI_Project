<p>I have the following function</p>  <p><a href="http://i.stack.imgur.com/3X3HZ.jpg" rel="nofollow"><img src="http://i.stack.imgur.com/3X3HZ.jpg" alt="My_function"></a></p>  <p>Where X is a 2D field (that is, 2D Numpy array), and f is an algebraic function of X (like B*X + A), and the Laplacian term is implemented using second order finite differences method (5 points stencil). If I assume that the time derivative is zero, I am left with the problem of finding the root of the function</p>  <p><a href="http://i.stack.imgur.com/2bUOX.jpg" rel="nofollow"><img src="http://i.stack.imgur.com/2bUOX.jpg" alt="root"></a></p>  <p>That is, finding the field X that gives g(X)=0.</p>  <p>Is there a Numpy/Scipy or other Python module that is implementing the Successive over-relaxation method?</p>