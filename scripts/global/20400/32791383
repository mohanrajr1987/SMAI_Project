<p>I have the following set of data and want to fit an ODE to it.</p>  <pre><code>xdata = [1400,1200,1450,1400,1300,1350,1388,1400,1390,1350,1400,1390,1500,1388,1390,1200,1230,1400,1400,1400,1300,1390,1225,1400,1470,1400,1450,1200,1225,1225,1230,1440,1415,1400,1230,1470,1400,1300,1300,1400,1470,1300,1450,1300,1415,1400,1440,1464,1450,1390] ydata = [1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,0,1,1,1,1,1,1,0,1,0,1,1,0,1,1,1] </code></pre>  <p>I've tried the form from <a href="http://kitchingroup.cheme.cmu.edu/blog/category/nonlinear-regression/" rel="nofollow">this tutorial</a>, but it doesn't seem to be working:</p>  <pre><code>def fitfunc(t, r):     def y_diff(y, t):        return y*(1-y)*((1 - r)/((1-y)*r + y))     y0 = ydata[0] + .01     return odeint(y_diff, y0, t) </code></pre>  <p>When trying the following:</p>  <pre><code>k_fit, kcov = curve_fit(fitfunc, xdata, ydata) </code></pre>  <p>I get an error:</p>  <pre><code>Illegal input detected (internal error). Run with full_output = 1 to get quantitative information. Illegal input detected (internal error). Run with full_output = 1 to get quantitative information.  -------------------------------------------------------------------------- ValueError                                Traceback (most recent call last) ValueError: object too deep for desired array   --------------------------------------------------------------------------- error                                     Traceback (most recent call last) &lt;ipython-input-94-bc1a2ad4d726&gt; in &lt;module&gt;() ----&gt; 1 k_fit, kcov = curve_fit(fitfunc, xdata, ydata, full_output=1)   2 #print k_fit  //anaconda/lib/python2.7/site-packages/scipy/optimize/minpack.pyc in     curve_fit(f, xdata, ydata, p0, sigma, absolute_sigma, **kw) 553     # Remove full_output from kw, otherwise we're passing it in twice. 554     return_full = kw.pop('full_output', False) --&gt; 555     res = leastsq(func, p0, args=args, full_output=1, **kw) 556     (popt, pcov, infodict, errmsg, ier) = res 557   //anaconda/lib/python2.7/site-packages/scipy/optimize/minpack.pyc in leastsq(func, x0, args, Dfun, full_output, col_deriv, ftol, xtol, gtol, maxfev, epsfcn, factor, diag) 377             maxfev = 200*(n + 1) 378         retval = _minpack._lmdif(func, x0, args, full_output, ftol, xtol, --&gt; 379                                  gtol, maxfev, epsfcn, factor, diag) 380     else: 381         if col_deriv:  error: Result from function call is not a proper array of floats. </code></pre>  <p>Is there something I'm missing in terms of how to set up <code>curve_fit</code> or is this a limitation of fitting to binary data? Are there other options for fitting ODEs to binary data?</p>