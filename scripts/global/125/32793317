<p>I am currently developing my own programming language designed to be used by game developers, dubbed the Motor Game Development Language. I am reading the book "Compiler Design in C" by Allen L. Holub, and so far its very good. I like the model of compilers it is going for, where there are four passes, but the book itself only covers the second pass being the lexical analyzer, parser, code generation, and a symbol table. That being said, I am having difficulty finding any good resources on writing a preprocessor (as I do intend to have my own form of preprocessors like C/C++ has), an optimizer, and what the book refers to as the "back end" which translates the optimized code into "real assembly language or some form of binary, executable code"</p>  <p>Could anyone point me to some good resources?</p>  <p>I'm interested in both theory and practice as I tend to learn better when I see it both ways.</p>