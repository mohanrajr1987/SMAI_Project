<p>This is my very first topic in here and I wish to ask my question as good as I can.</p>  <p>I have always been interested in programming languages styles, capabilities, functionalities and so on and I have recently started to design my own one. It is very basic and only character-based (it doesn't recognize keywords or anything). I first implemented the interpreter in Python (language facilities and algorithm design) and then ported it to C which I really like ! Here is the famous <code>hello, world!</code> program written in <a href="https://github.com/Spriithy/Bitflow" rel="nofollow">Bitflow</a></p>  <pre><code> @0:     &amp;/++++*,     /{++:+++++++}*+,     +++++++,,     +++,     _     &amp;/{+++:++++}*-,     ${+++:+++++},     +++,     {++:---},     $++++,     _&amp;/+, </code></pre>  <p>So now. Back to my question ! I would really like to implement a little bit more improved language that could handle very basic functionalities. I don't want to go big now (obviously not the good thing to do in my opinion). Do you guys have good suggestions for me ? What book should I read ? (except for the Dragon Book, which definitely contains more theory than anything else) What could be a good idea to start with ? Do you know anything that leads to some project that looks cool ?</p>  <p>Moreover, I've read the K&amp;R book <code>The UNIX programming environment</code> and <code>The C programming language</code>. The first provide a simple programming language that I'd like to re-design by hand. (source code provided no longer compiles due to standards evolution, even with me rewriting most of things in ANSI C or C99).</p>  <p>Thank you guys in advance ! Feel free to link articles or tutorials, similar questions !</p>  <p><a href="https://github.com/Spriithy/Bitflow" rel="nofollow">link to bitflow repository</a></p>  <p>PS: Excuse my bare english... I'm french ;D</p>