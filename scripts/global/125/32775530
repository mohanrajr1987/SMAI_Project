<p>For example, we have a grammar S-> aSa | aa, clearly, this grammar can generate all even-length string of a's. If we devise a recursive-descent parser for this grammar, why inputs like "aa", "aaaa", "aaaaaaaa" can be recognized, but "aaaaaa" cannot be recognized?</p>  <p>Here is my thought:</p>  <p>For "aa", try S-> aSa, 'a' matches, however, 'S' does not match, backtrace.           try S-> aaï¼Œ matches.</p>  <p>For "aaaa", try S-> aSa, 'a' matches, try S->aSa, we have aaSaa, S not matches, try S->aa, we have aaaa, matches.</p>  <p>For "aaaaaa", try S-> aSa, 'a' matches, try S->aSa, we have aaSaa, try S->aSa, we have aaaSaaa, not matches, try S->aa, we have "aaaaaa".</p>  <p>i don't know what's with the 'aaaaaa' part.</p>  <p>why aaaaaa cannot be recognized?</p>