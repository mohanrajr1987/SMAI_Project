<p>There are some similar questions on SO but I can't seem to find quite what I'm looking for.</p>  <p>There is a C# library (OpenCVSharp) declaring an overloaded method like this:</p>  <pre><code>public static void CalcHist(Mat[] images,              int[] channels, InputArray mask,             OutputArray hist, int dims, int[] histSize,             Rangef[] ranges, bool uniform = true, bool accumulate = false) {            .... }  public static void CalcHist(Mat[] images,             int[] channels, InputArray mask,             OutputArray hist, int dims, int[] histSize,             float[][] ranges, bool uniform = true, bool accumulate = false) {     .... } </code></pre>  <p>i.e. varying only by the type of the "ranges" parameter.</p>  <p>I can't seem to call this method, even when using tupled argument style, including the optional parameters and adding a whole bunch of type annotations:</p>  <pre><code>let images = [|new Mat()|]  let hist = OutputArray.Create(new Mat()); let hdims = [|256|]; let ranges = [| new Rangef(0.f,256.f) |]; Cv2.CalcHist&lt;Mat [] * int [] * InputArray * OutputArray * int * int [] * Rangef [] * bool * bool&gt;             (images,             [|0|],             null,             hist,             1,             hdims,             ranges,             true,             false) </code></pre>  <p>The error is "Error 4   The member or object constructor 'CalcHist' taking 9 arguments are not accessible from this code location. All accessible versions of method 'CalcHist' take 9 arguments"</p>  <p>Is there some way I can call this method from F#?</p>