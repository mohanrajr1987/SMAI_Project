<p>In F#, can two functions with different arity and return types share a name?</p>  <p>For example, with 2 arguments, <code>f</code> returns an <code>int</code>: </p>  <pre><code>let f (x:int) (y:int) : int = x + y </code></pre>  <p>But with 3 arguments, <code>f</code> returns a <code>bool</code>: </p>  <pre><code>let f (x:bool) (y:bool) (z:bool) : bool = x &amp; y &amp; z </code></pre>  <p>It seems like the return type <em>should</em> be inferable by the number of arguments given, but I get the compilation error:  </p>  <blockquote>   <p>Duplicate definition of value 'f'</p> </blockquote>  <p>Is this a limitation of F#? </p>