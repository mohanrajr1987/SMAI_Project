<p>I have tried to compile some code by using gcc. After I built the program, I found that some function are used in a.out but in my cpp file.</p>  <p>For example, I called "printf()" in my "main.cpp" and the "__printf_chk()" is created in a.out instead "printf()". Furthermore, "__stack_chk_fail()" is created when the option "-fno-stack-protector" is not specified. (-O0 is useless for these cases)</p>  <p>I want to create a executable binary without any functions which I didn't use in my main program except "<strong>libc_start_main" and "__gmon_start</strong>". (maybe some option of gcc could disable generating these function?)</p>  <p>(If my program is linked with newlib instead glibc, will it solve my problem?)</p>