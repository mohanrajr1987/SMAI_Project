<p>I am writing a unit test library and I need to log the name of the test function during the assertion, like as follows:</p>  <pre><code>struct my_test_case : public unit_test::test {     void some_test()     {         assert_test(false, "test failed.");     } }; </code></pre>  <p>When I run the test case, I want to produce an output like:</p>  <pre><code>ASSERTION FAILED (&amp;my_test_case::some_test()): test failed. </code></pre>  <p>I know there are some ways to solve this issue:</p>  <ol> <li><p>Give <code>__FUNCTION__</code> to assert_true()</p></li> <li><p>Define a macro like <code>ASSERT(a, b)</code> that expands to <code>assert_true(a, b, __FUNCTION__)</code></p></li> <li><p>Define a macro like <code>TEST</code> to cache the <code>__FUNCTION__</code> in the test function</p></li> </ol>  <p><code>struct my_test_case : public unit_test::test {     void some_test()     {         TEST         assert_test(false, "test failed.");     } };</code></p>  <p>But these are error-prone and ugly solutions. Are there any other solutions to this problem?</p>