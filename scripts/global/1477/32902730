<p>Program file name - armstrong3.c.</p>  <pre><code>#include &lt;stdio.h&gt; #include &lt;math.h&gt;  int main(void) { int i, sum, num, rem,x; x=pow(2,5); printf("%d\n", x); printf("List of 3 digit armstrong numbers \n"); for (i=100; i&lt;=999; i++) {     num=i;     sum=0;     while (num&gt;0) {         rem=num%10;         sum=sum+pow(rem,3);         num/=10;     }     if (i==sum)          printf("%d\n", i);       } return 0; } </code></pre>  <p>This simple program finds 3 digit armstrong numbers. To calculate the cube I am using <code>pow()</code> of <code>math.h</code>. It didn't work initially and gave the famous error during compilation:</p>  <blockquote>   <p>armstrong3.c:(.text+0x91): undefined reference to `pow' collect2:</p>      <p>error: ld returned 1 exit status.</p> </blockquote>  <p>Then I compiled it with <code>gcc armstrong.c -lm</code>, and it worked fine.</p>  <p>Then I used another <code>pow()</code> function in the second line of the <code>main()</code> function and commented out the earlier <code>pow()</code> function which I was using to calculate the cube. Strangely, the program compiled fine with <code>gcc armstrong3.c</code>.</p>  <p>The program posted by me gets compiles fine using <code>gcc armstrong.c -lm</code>.</p>  <p>The following scenario is my current issue:</p>  <p>With the second <code>pow()</code> commented out it <code>gcc armstrong.c</code> compiles with no warnings and errors. No <code>-lm</code> flag required.</p>  <p>If I uncomment the second <code>pow()</code> function in the program, it does not compile and gives the above mentioned error. And with <code>-lm</code> it works fine.</p>  <p>Why is there this unusual behavior with the same function in two places inside the same program?</p>  <p>Compiler: gcc version 4.8.4 (Ubuntu 4.8.4-2ubuntu1~14.04).</p>