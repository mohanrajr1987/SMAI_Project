<p>Here's what I have so far which I thought would work, but I'm getting this error:</p>  <pre><code>Template error  In template /usr/lib/python2.7/site-packages/django/contrib/admin/templates/admin/edit_inline/tabular.html, error at line 50 Caught TypeError while rendering: render_option() takes exactly 4 arguments (23 given) 40            {% endspaceless %} 41          &lt;/td&gt; 42          {% for fieldset in inline_admin_form %} 43            {% for line in fieldset %} 44              {% for field in line %} 45                &lt;td class="{{ field.field.name }}"&gt; 46                {% if field.is_readonly %} 47                    &lt;p&gt;{{ field.contents }}&lt;/p&gt; 48                {% else %} 49                    {{ field.field.errors.as_ul }} 50                    {{ field.field }}  &lt;--- error here </code></pre>  <p>The code in admin.py</p>  <pre><code>def get_construct_choices():     construct_request_choices = Construct.objects.all().order_by('family','promotor','additional_mutation')     construct_request_choices = itertools.groupby(construct_request_choices, key=lambda x:str(x.family))     choices = []     for family, group in construct_request_choices:         choices.append((family, [str(val) for val in group]))     print choices     return choices  class ConstructRequestCustomForm(forms.ModelForm):     class Meta:         model = ConstructRequest     construct = forms.ChoiceField(choices=get_construct_choices())  class ConstructRequestInline(admin.TabularInline):     model = ConstructRequest     form = ConstructRequestCustomForm     extra = 1  class RequestAdmin(make_DefaultAdminAuditTable(Request)):     inlines = (ConstructRequestInline,) </code></pre>