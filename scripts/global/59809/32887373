<p>I am trying to change different items in row of the custom adapter by getview. But the items those are getting changed are not in the row at which the click even is applied. Following is my code:</p>  <pre><code>                @Override     public View getView(int position, View convertView, ViewGroup parent) {         animFadein = AnimationUtils.loadAnimation(_ctx, R.anim.zoom_in);          NearbyData listingDetailsObject = listingObj.get(position);         if (convertView == null) {             LayoutInflater inflator = (LayoutInflater) _ctx                     .getSystemService(_ctx.LAYOUT_INFLATER_SERVICE);             convertView = inflator.inflate(R.layout.listingadapterb,parent, false);             holder = new Holder();             holder.addressTextView = (TextView) convertView                     .findViewById(R.id.addresstxt);             holder.saleTextView = (TextView) convertView                     .findViewById(R.id.saletxt);             holder.cityTextView = (TextView) convertView                     .findViewById(R.id.citytxt);             holder.stateTextView = (TextView) convertView                     .findViewById(R.id.statetxt);             holder.zipTextView = (TextView) convertView                     .findViewById(R.id.ziptxt);             holder.feetTextView = (TextView) convertView                     .findViewById(R.id.feettxt);             holder.bathTextView = (TextView) convertView                     .findViewById(R.id.bathtxt);             holder.priceTextView = (TextView) convertView                     .findViewById(R.id.pricetxt);             holder.CheckImg = (TextView) convertView                     .findViewById(R.id.checkimg);            // holder.CheckImg.setBackgroundColor(_ctx.getResources().getColor(R.color.red));             holder.imageSign = (ImageView) convertView                     .findViewById(R.id.imagesign);             holder.estimateTextView = (TextView) convertView                     .findViewById(R.id.esttext);             holder.imageView = (ImageView) convertView                     .findViewById(R.id.image);             holder.ratingBar=(RatingBar)convertView                     .findViewById(R.id.ratebar);                convertView.setTag(holder);         } else {             holder = (Holder) convertView.getTag();         }         final int pos=position;         holder.CheckImg.setOnClickListener(new View.OnClickListener() {             @Override             public void onClick(View v) {                 TextView t=(TextView)v;                  t.setBackgroundColor(_ctx.getResources().getColor(R.color.red));                 t.setText("Checked");                  holder.imageSign.setBackgroundResource(R.color.red);                 holder.imageSign.setImageResource(R.drawable.check);                 Intent intent = new Intent(_ctx, UpdateCheckInEstimate.class);                 intent.putExtra("position", pos);                 intent.putExtra("name", "ListingDetails");                 intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);                 _ctx.startActivity(intent);             }         });       //  holder.imageView.setImageUrl(null, mImageLoader);         holder.addressTextView.setText(listingDetailsObject.getAddress() + "");         if (listingDetailsObject.getAddress().toString() == null || listingDetailsObject.getAddress().toString().equals(""))         {             holder.addressTextView.setText("NA");             holder.addressTextView.setTextColor(_ctx.getResources().getColor(R.color.color_grey));         }         else {             holder.addressTextView.setTextColor(_ctx.getResources().getColor(R.color.color_black));             String s=listingDetailsObject.getAddress();             if(s.length()&gt;18) {                 s = s.substring(0, 17);                 s=s+"......";                 holder.addressTextView.setText(s);             }         } //        if(listingDetailsObject.getForSale()==true) //        { //            holder.saleTextView.setText("FOR SALE"); //            holder.saleTextView.setTextColor(_ctx.getResources().getColor( R.color.dark_green)); //        } //        else //        {             holder.saleTextView.setText("FEATURED");             holder.saleTextView.setTextColor(_ctx.getResources().getColor( R.color.red));  //       }         if (listingDetailsObject.getCity().toString() == null || listingDetailsObject.getCity().toString().equals("")) {             holder.cityTextView.setText("NA");             holder.cityTextView.setTextColor(_ctx.getResources().getColor(R.color.color_grey));         }         else {             holder.cityTextView.setTextColor(_ctx.getResources().getColor(R.color.color_black));             holder.cityTextView.setText(listingDetailsObject.getCity() + ",");         }         if (listingDetailsObject.getState().toString() == null || listingDetailsObject.getState().toString().equals("")) {             holder.stateTextView.setTextColor(_ctx.getResources().getColor(R.color.color_grey));             holder.stateTextView.setText("NA");         }         else {             holder.stateTextView.setTextColor(_ctx.getResources().getColor(R.color.color_black));             holder.stateTextView.setText(listingDetailsObject.getState() + ",");         }         if (listingDetailsObject.getZip().toString() == null || listingDetailsObject.getZip().toString().equals("")) {             holder.zipTextView.setTextColor(_ctx.getResources().getColor(R.color.color_grey));             holder.zipTextView.setText("NA");         }         else {             holder.zipTextView.setTextColor(_ctx.getResources().getColor(R.color.color_black));             holder.zipTextView.setText(listingDetailsObject.getZip() + "");         }         if (listingDetailsObject.getEstimatedSquareFeet().toString() == null || listingDetailsObject.getEstimatedSquareFeet().toString().equals("null")  ) {             holder.feetTextView.setTextColor(_ctx.getResources().getColor(R.color.color_grey));             holder.feetTextView.setText("NA");         }         else {             holder.feetTextView.setTextColor(_ctx.getResources().getColor(R.color.color_black));             holder.feetTextView.setText(listingDetailsObject.getEstimatedSquareFeet() + "sqft.");         }          if (listingDetailsObject.getEstimates().toString() == null || listingDetailsObject.getEstimates().toString().equals("")) {             holder.estimateTextView.setTextColor(_ctx.getResources().getColor(R.color.color_grey));             holder.estimateTextView.setText("(0 Est.)");         }         else {             holder.estimateTextView.setTextColor(_ctx.getResources().getColor(R.color.color_black));             holder.estimateTextView.setText("(" + listingDetailsObject.getEstimates() + " Est.)");         }         holder.priceTextView.setText("$"+getNumberFormat(listingDetailsObject.getPrice()));         //  holder.priceTextView.setText(listingDetailsObject.getPrice()+"");         //holder.bedTextView.setText(listingDetailsObject.getBedrooms()+" Beds");         Integer i=new Integer(listingDetailsObject.getBaths());         if (i == 0  ) {             holder.bathTextView.setTextColor(_ctx.getResources().getColor(R.color.color_grey));             holder.bathTextView.setText("NA");         }         else {             holder.bathTextView.setTextColor(_ctx.getResources().getColor(R.color.color_black));             holder.bathTextView.setText(listingDetailsObject.getBaths() + " Baths");         }         //holder.bathTextView.setText(listingDetailsObject.getBaths()+" Baths");         //holder.ratingBar.setNumStars(5);         holder.ratingBar.setRating((float)listingDetailsObject.getLocationRating());       //  Log.v("Vip", listingDetailsObject.getPhotos().size()+""); //        if(listingDetailsObject.getThumbnails().size()!=0) { //            if (listingDetailsObject.getThumbnails().get(0)!= "null"){ //                String image_url = listingDetailsObject.getThumbnails().get(0).toString(); //                Log.v("Vip",image_url+ "hello\n"); //                mImageLoader.get(image_url, ImageLoader.getImageListener(holder.imageView, //                        R.mipmap.ic_launcher, R.drawable //                                .error)); //                holder.imageView.setImageUrl(image_url, mImageLoader); //            }else{ //                holder.imageView.setDefaultImageResId(R.mipmap.ic_launcher); //            } //        }else{ //            holder.imageView.setDefaultImageResId(R.mipmap.ic_launcher); //        }           if(listingDetailsObject.getPhotos().size()!=0) {             if (listingDetailsObject.getPhotos().get(0) != "null") {                 if(listPhotos.size()&lt;25)                 {                     listPhotos.add(position,listingDetailsObject.getPhotos());                 }                 String image_url = listingDetailsObject.getPhotos().get(0).toString();                 Log.v("Vip",image_url); //                mImageLoader.get(image_url, ImageLoader.getImageListener(holder.imageView, //                        R.mipmap.ic_launcher, R.drawable //                                .error)); //                holder.imageView.setImageUrl(image_url, mImageLoader); //            }else{ //                holder.imageView.setDefaultImageResId(R.mipmap.ic_launcher); //            } //        }else{ //            holder.imageView.setDefaultImageResId(R.mipmap.ic_launcher); //        }                   Glide.with(_ctx)                         .load(image_url)                         .diskCacheStrategy(DiskCacheStrategy.ALL)                         .centerCrop()                         .placeholder(R.mipmap.ic_launcher)                         .crossFade()                         .animate(R.anim.fade_in)                         .thumbnail(.1f)                         // .resize()                         .into(holder.imageView);              }         }         else         if(listPhotos.size()&lt;25)         {             List&lt;Object&gt; temp=new ArrayList&lt;&gt;();             temp.add("null");             listPhotos.add(position,temp);         }         holder.imageView.setImageResource(R.drawable.ic_launch);         return convertView;     } </code></pre>  <p>The problem here is with the holder.imagesign which is getting changed in a different row than the one in which the textview is.</p>