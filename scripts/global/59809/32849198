<p>i was trying to code something(the world will never know what :D) and when im trying to update listview i just get an error....</p>  <p>code in theory: "when i click on item in NavDrawer the listView should get populated with specific data"</p>  <p>code in reality:</p>  <pre><code>public class MainActivity extends AppCompatActivity { ArrayAdapter&lt;String&gt; adapter; String[] values;  @Override protected void onCreate(Bundle savedInstanceState) {     super.onCreate(savedInstanceState);     setContentView(R.layout.activity_main);       ListView listview = (ListView) findViewById(R.id.listview);     values = new String[]{"Android", "iPhone", "WindowsMobile",             "Blackberry", "WebOS", "Ubuntu", "Windows7"};     adapter = new ArrayAdapter&lt;String&gt;(this, android.R.layout.simple_list_item_1, values);     listview.setAdapter(adapter); } public void update(){     adapter.clear();     adapter.notifyDataSetChanged(); } </code></pre>  <p>that method is called from this method that exsists in NavDrawerFragment.java</p>  <pre><code>@Override public void itemClicked(View view, int position) {     Toast.makeText(getActivity(), "shit is going down", Toast.LENGTH_LONG).show();     new MainActivity().update();  } </code></pre>  <p>i guess that it is happening because im creating a new object, but i just (in the middle of typing a post) passed adapter as a method parameter(u can inmagine it as a setter)and in itemClicked method i  typed adapter.clear() and same shit happend</p>  <hr>  <p>okay, i changed values varible using setter</p>  <pre><code> public void setValues(String[] values) {     this.values = values;     adapter.notifyDataSetChanged(); }  </code></pre>  <p>i called it like that from recyclerview(that exists in the drawer) adapter <code>String values[] = {"lel", "uja"};             mainActivity.setValues(values);</code> so same crash, maybile som1 would like to get on skype call? i promise, i wont be annoying</p>  <hr>  <p>Apparently I was creating another object after all:</p>  <pre><code> MainActivity mainActivity = new MainActivity(); </code></pre>  <p>I was wondering why I can access that method like this:</p>  <pre><code>mainActivity.setValues(values); </code></pre>  <p>So probably what I'm asking is: How to access method without creating activity?</p>