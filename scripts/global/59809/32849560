<p>How can i update my <code>ListView</code> from <code>onPostExecute</code> method? Currently i can only update <code>TextView</code> or <code>ImageView</code>, but i need to add few records to my list.</p>  <p>I tried to send <code>Intent</code> in <code>onPostExecute</code> method and on receive use <code>notifyAppWidgetViewDataChanged</code>, but its not working.</p>  <p>Part of my <code>ListProvider implements RemoteViewsFactory</code></p>  <pre><code>public class RetrieveTask extends  AsyncTask&lt;Context,Void, List&lt;String&gt;&gt; {             private Exception exception;             private Context context;             private RemoteViews views;              @Override             protected List&lt;String&gt; doInBackground(Context... params) {                 data = new ArrayList&lt;Map&lt;String, Object&gt;&gt;();                 List&lt;String&gt; output = new ArrayList&lt;String&gt;();                 try {                     context = params[0];                     int k = 15;                     //конектимся к странице политеха и получаем её разметку                     doc = Jsoup.connect("http://vlg-media.ru/transport").get();                      String img = "";                     int i = 0;                     //выбор элементов заданного класса                     Title = doc.select(".art_img");                      for (Element titles : Title) {                         String IMG = URL;                         String HREF;                         //Element Img = titles.select(".art_image").first();                         IMG = "http://vlg-media.ru" + titles.select("img").attr("src").toString();                         IMG = IMG.replace("small", "medium");                         HREF = "http://vlg-media.ru" + titles.select("a").attr("href").toString();                         // Element Title = titles.select(".con_titlelink").first();                         String title = titles.select("img").attr("alt").toString();                          m = new HashMap&lt;String, Object&gt;();                         m.put(ATTRIBUTE_NAME_TITLE, title);                         m.put(ATTRIBUTE_NAME_HREF,HREF);                         //добавление данных в наш контейнер                         data.add(m);                         publishProgress();                         i++;                         //}                         if (i == k)                             break;                     }                     //}                 } catch (Exception ex) {                     this.exception = ex;                     m = new HashMap&lt;String, Object&gt;();                     m.put(ATTRIBUTE_NAME_TITLE, "Ошибка");                     m.put(ATTRIBUTE_NAME_HREF,"Error");                     //добавление данных в наш контейнер                     data.add(m);                     return null;                 }                 return  output;             }                protected void onPostExecute(List&lt;String&gt; output) {                 RemoteViews remoteViews = new RemoteViews(context.getPackageName(), R.layout.widget_provider_layout);                 AppWidgetManager appWidgetManager = AppWidgetManager.getInstance(context);                 ComponentName thisWidget = new ComponentName(context, WidgetProvider.class);                  //works                 remoteViews.setTextViewText(R.id.txvWidgetTitle, Integer.toString(data.size()));                 //dont work                 ArrayList&lt;ListItem&gt; listItemList1 = new ArrayList&lt;ListItem&gt;();                 ListItem listItem = new ListItem();                 listItem.heading = "header1";                 listItem.content = "content1";                 listItemList1.add(listItem);                 appWidgetManager.updateAppWidget(thisWidget,remoteViews);                 }          } </code></pre>  <p><code>WidgetProvider</code> class</p>  <pre><code> @Override     public void onReceive(Context context, Intent intent) {         super.onReceive(context,intent);         if (intent.getAction().equals(ACTION_TOAST)) {             String item = intent.getExtras().getString(EXTRA_STRING);             Toast.makeText(context, item, Toast.LENGTH_LONG).show();             Toast.makeText(context, "refresh", Toast.LENGTH_LONG).show();             AppWidgetManager mgr = AppWidgetManager.getInstance(context);             int[] ids = mgr.getAppWidgetIds(new ComponentName(context, WidgetProvider.class));              for(int id : ids) {                 mgr.notifyAppWidgetViewDataChanged(id, R.id.widgetCollectionList);             }          }       }      @Override     public void onUpdate(Context context, AppWidgetManager appWidgetManager,                          int[] appWidgetIds) {         final int N = appWidgetIds.length;         /*int[] appWidgetIds holds ids of multiple instance of your widget          * meaning you are placing more than one widgets on your homescreen*/         for (int i = 0; i &lt; N; ++i) {             RemoteViews remoteViews = updateWidgetListView(context,                     appWidgetIds[i]);             appWidgetManager.updateAppWidget(appWidgetIds[i], remoteViews);             //new ParseClass(remoteViews).execute(remoteViews);             final Intent onItemClick = new Intent(context,WidgetProvider.class);             onItemClick.setAction(ACTION_TOAST);             onItemClick.setData(Uri.parse(onItemClick                     .toUri(Intent.URI_INTENT_SCHEME)));             final PendingIntent onClickPendingIntent = PendingIntent                     .getBroadcast(context, 0, onItemClick,                             PendingIntent.FLAG_UPDATE_CURRENT);             remoteViews.setPendingIntentTemplate(R.id.widgetCollectionList,                     onClickPendingIntent);              /*final Intent onImageClick = new Intent(context, WidgetProvider.class);             onImageClick.setAction(ACTION_REFRESH);             onImageClick.setData(Uri.parse(onImageClick                     .toUri(Intent.URI_INTENT_SCHEME)));             final  PendingIntent onImagePendingIntet = PendingIntent                     .getBroadcast(context,0,onImageClick,                             PendingIntent.FLAG_UPDATE_CURRENT);             remoteViews.setPendingIntentTemplate(R.id.refreshView,onImagePendingIntet);*/              appWidgetManager.updateAppWidget(appWidgetIds[i],remoteViews);         }         super.onUpdate(context, appWidgetManager, appWidgetIds);     }      private RemoteViews updateWidgetListView(Context context, int appWidgetId) {          //which layout to show on widget         RemoteViews remoteViews = new RemoteViews(context.getPackageName(),                 R.layout.widget_provider_layout);         //RemoteViews Service needed to provide adapter for ListView         Intent svcIntent = new Intent(context, WidgetService.class);         //passing app widget id to that RemoteViews Service         svcIntent.putExtra(AppWidgetManager.EXTRA_APPWIDGET_ID, appWidgetId);         //setting a unique Uri to the intent         //don't know its purpose to me right now         svcIntent.setData(Uri.parse(svcIntent.toUri(Intent.URI_INTENT_SCHEME)));         //setting adapter to listview of the widget         remoteViews.setRemoteAdapter(appWidgetId, R.id.widgetCollectionList,                 svcIntent);         //setting an empty view in case of no data         remoteViews.setEmptyView(R.id.widgetCollectionList, R.id.empty_view);         return remoteViews;     } </code></pre>