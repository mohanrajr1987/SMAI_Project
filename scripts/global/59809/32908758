<p>I am beginner in android. I want to open installed application through my application with the help of google translator. Like user speak "whatsapp" then my app convert it into text. and by text i will open installed application. I have done speech to text coding and installed applications list coding. </p>  <p><strong>Google Speech to text</strong> I have stored the value of google translator text into <code>String s1</code></p>  <p><strong>List ApplicationInfo</strong></p>  <pre><code> btnopen = (Button) findViewById(R.id.btnopen);  btnopen.setOnClickListener(new View.OnClickListener() {                      @Override                     public void onClick(View v) {                         // TODO Auto-generated method stub                         String s1=txtText.getText().toString();                         String s2=applist.get(position).toString();                            if(s1 == s2){                               packageManager = context.getPackageManager();                               ApplicationInfo app = applist.get(position);                                  try {                                     Intent intent = packageManager                                     .getLaunchIntentForPackage(app.packageName);                                      if (null != intent) {                                         startActivity(intent);                                     }                                 } catch (ActivityNotFoundException e) {                                     Toast.makeText(AllAppsActivity.this, e.getMessage(),                                             Toast.LENGTH_LONG).show();                                 } catch (Exception e) {                                     Toast.makeText(AllAppsActivity.this, e.getMessage(),                                             Toast.LENGTH_LONG).show();                                 }                                 }                              else{                                     Toast.makeText(getApplicationContext(), txtText.getText().toString()+" is not match", Toast.LENGTH_LONG).show();                                 }                            }                     private PackageManager getPackageManager() {                         // TODO Auto-generated method stub                         return null;                     }                 }); </code></pre>  <p><strong>ApplicationAdapter</strong></p>  <pre><code>public class ApplicationAdapter extends ArrayAdapter&lt;ApplicationInfo&gt; {     private List&lt;ApplicationInfo&gt; appsList = null;     private Context context;     private PackageManager packageManager;         public ApplicationAdapter(Context context, int textViewResourceId,             List&lt;ApplicationInfo&gt; appsList) {         super(context, textViewResourceId, appsList);         this.context = context;         this.appsList = appsList;         packageManager = context.getPackageManager();     }      @Override     public int getCount() {         return ((null != appsList) ? appsList.size() : 0);     }      @Override     public ApplicationInfo getItem(int position) {         return ((null != appsList) ? appsList.get(position) : null);     }      @Override     public long getItemId(int position) {         return position;     }      @Override     public View getView(int position, View convertView, ViewGroup parent) {         View view = convertView;         if (null == view) {             LayoutInflater layoutInflater = (LayoutInflater) context                     .getSystemService(Context.LAYOUT_INFLATER_SERVICE);             view = layoutInflater.inflate(R.layout.snippet_list_row, null);         }          ApplicationInfo data = appsList.get(position);         if (null != data) {             TextView appName = (TextView) view.findViewById(R.id.app_name);             TextView packageName = (TextView) view.findViewById(R.id.app_paackage);             ImageView iconview = (ImageView) view.findViewById(R.id.app_icon);              appName.setText(data.loadLabel(packageManager));             packageName.setText(data.packageName);             iconview.setImageDrawable(data.loadIcon(packageManager));         }         return view;     } }; </code></pre>  <p><strong>ApplicationAdapter</strong> and list <strong>Applicationinfo</strong> give me a list of installed applications.</p>  <p>How can I compare <strong>s1</strong> in ListView?</p>