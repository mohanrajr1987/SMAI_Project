<p>I`m create list of points of sales from SQLite using custom adapter</p>  <pre><code>    dbHelper = new YourVoiceDatabaseHelper(getActivity());      pointsList = new ArrayList&lt;Point&gt;();     List&lt;Point&gt; pl = new ArrayList&lt;Point&gt;();     PointsListArrayAdapter adapter;      adapter =  new PointsListArrayAdapter(getActivity().getApplicationContext(),             pointsList,             getActivity().getFilesDir(),             getResources().getString(R.string.Local_Resorces_Folder),             dbHelper);      pointsListView.setAdapter(adapter);      pl =  dbHelper.getAllPoints();      if(myLocation != null) {         for (Point el : pl) {             elLocation.setLatitude(Double.parseDouble(el.getLatitude()));             elLocation.setLongitude(Double.parseDouble(el.getLongtitude()));              if (myLocation.distanceTo(elLocation) &lt;= 999) {                 pointsList.add(el);             }         }     } else {         Toast.makeText(getActivity(), "Не удалось определить ваше местоположение, проверте ваши разрешения и настройки",                 Toast.LENGTH_LONG).show();     } adapter.notifyDataSetChanged(); </code></pre>  <p>To custom adapter I send instance of my database ad using it in there and this slows my main tread. I`m trying to use AsyncTask in adapter to get images path from database and set images but Async do absolutely NOTHING</p>  <pre><code>    package ua.com.it_artel.tvoy_golos.service; </code></pre>  <p>public class PointsListArrayAdapter extends BaseAdapter {</p>  <pre><code>Context context; private List&lt;Point&gt; pointsList; private File appFolder; private String resoursesFolder; private YourVoiceDatabaseHelper dbHelper; private String imagePath;  public PointsListArrayAdapter(Context context, List&lt;Point&gt; pointsList, File appFolder, String resoursesFolder, YourVoiceDatabaseHelper dbHelper) {     this.context = context;     this.pointsList = pointsList;     this.appFolder = appFolder;     this.resoursesFolder = resoursesFolder;     this.dbHelper = dbHelper; }  @Override public int getCount() {     return pointsList.size(); }  @Override public Object getItem(int position) {     return pointsList.get(position); }  @Override public long getItemId(int position) {     return pointsList.get(position).getId(); }  static class ViewHolder {     ImageView image;     TextView adress;     TextView name;     TextView distance;     Location elLocation;     Point point; }  @Override public View getView(int position, View convertView, ViewGroup parent) {      ViewHolder viewHolder;     View rowView = convertView;     if(convertView == null){         LayoutInflater inflater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);         rowView = inflater.inflate(R.layout.list_element_layout_type_1, parent, false);          viewHolder = new ViewHolder();         viewHolder.elLocation = new Location("");          viewHolder.image = (ImageView) rowView.findViewById(R.id.item_image);          viewHolder.adress = (TextView) rowView.findViewById(R.id.item_text);          viewHolder.name = (TextView) rowView.findViewById(R.id.item_name);          viewHolder.distance = (TextView) rowView.findViewById(R.id.item_distance);          rowView.setTag(viewHolder);     } else {         viewHolder = (ViewHolder) rowView.getTag();     }      viewHolder.elLocation.setLatitude(Double.parseDouble(pointsList.get(position).getLatitude()));     viewHolder.elLocation.setLongitude(Double.parseDouble(pointsList.get(position).getLongtitude()));      viewHolder.point = pointsList.get(position);     new AdapterImageSetter().execute(viewHolder);      viewHolder.adress.setText(pointsList.get(position).getAddress());      viewHolder.name.setText(dbHelper.getPartnerByUID(pointsList.get(position).getPartnerUid()).getName());      viewHolder.distance.setText(String.valueOf(Math.round(MyLocationListener.myLocation.distanceTo(viewHolder.elLocation))) + " м");      return rowView;  }  private class AdapterImageSetter extends AsyncTask&lt;ViewHolder, Void, ViewHolder&gt; {      @Override     protected ViewHolder doInBackground(ViewHolder... params) {         ViewHolder viewHolder = params[0];          imagePath = dbHelper.getPointsPartnerImage(viewHolder.point.getPartnerUid());          if (imagePath.equals("")) {             viewHolder.image.setImageResource(R.drawable.no_image);         } else {             Drawable dr = Drawable.createFromPath(appFolder.getPath() + "/" + resoursesFolder + "/" + imagePath);             viewHolder.image.setImageDrawable(dr);         }         return viewHolder;     } } </code></pre>  <p>}</p>  <p>I have tried different variations in AsyncTask and Runnable but it doesn`t work, like if there are no code.. Hope u understand my English and someone give advice</p>