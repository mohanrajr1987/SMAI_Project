<p>So I have a movie trivia game that I am building.  The problem I am running into is on the main user profile page I set 3 listviews.  One for games where it is your turn, one for games that are waiting for your opponent, and one for completed games.  These list views make calls to Parse.com to fetch the game object.  In Order to fetch this info from Parse I need to provide my query with a Facebook user id.  My code calls Facebook to get the ID, but the listview adapters run about 5 milliseconds before the call to Facebook returns the ID.  When the user refreshes the page, the lists load properly, but when first running the app they are blank.  Here is the user profile activity code:</p>  <pre><code>public class UserProfileActivity extends AppCompatActivity {      ParseLogic mPl;     private WfoAdapter wfoAdapter;     private WoyAdapter woyAdapter;     private CompletedGameAdapter completedGameAdapter;     private TicketSystem mTicketsSytem;        String mMyFbId;     String mMyFbName;      int mTickets;      ListView mWfoListView;     ListView mWoyListView;     ListView mCompletedGameListView;     TextView mmTicketNumber;       @Override     protected void onCreate(Bundle savedInstanceState) {         super.onCreate(savedInstanceState);           mTicketsSytem = new TicketSystem();         mTickets = mTicketsSytem.getTickets();          setContentView(R.layout.activity_user_profile);         new getFbDeets().execute(); //This is where the async task is called           mPl = new ParseLogic();         mWoyListView = (ListView)findViewById(R.id.waitingForYouListView);         mWfoListView = (ListView)findViewById(R.id.waitingForOpponentListView);         mCompletedGameListView = (ListView)findViewById(R.id.completedGameListView);         mmTicketNumber = (TextView)findViewById(R.id.numberOfTickets);          mmTicketNumber.setText(String.valueOf(mTickets));             FaceBookFriends.getFaceBookFriends();             //Testing start game remove when building rest of page         Button button = (Button)findViewById(R.id.startNewGame);         button.setOnClickListener(new View.OnClickListener() {             @Override             public void onClick(View v) {                  Intent intent = new Intent(UserProfileActivity.this, GameStart.class);                 startActivity(intent);               }         });     }      @Override     protected void onResume() {         super.onResume();            // Logs 'install' and 'app activate' App Events.         AppEventsLogger.activateApp(this);          mTickets = mTicketsSytem.getTickets();         mmTicketNumber.setText(String.valueOf(mTickets));         populateWoyListView();         populateWfoListView();         populateCompleteListView();       }      @Override     public void onBackPressed(){}       @Override     public boolean onOptionsItemSelected(MenuItem item) {         // Handle action bar item clicks here. The action bar will         // automatically handle clicks on the Home/Up button, so long         // as you specify a parent activity in AndroidManifest.xml.          //create the logout button in action bar         switch (item.getItemId()){             case R.id.logoutButton:                 ParseUser.logOut();                 ParseUser currentUser = ParseUser.getCurrentUser(); // this will now be null                 Intent intent = new Intent(UserProfileActivity.this, WelcomeActivity.class);                 startActivity(intent);         }          return super.onOptionsItemSelected(item);     }      public void populateUI() {         populateWoyListView();         populateWfoListView();         populateCompleteListView();          mWoyListView.setOnItemClickListener(new AdapterView.OnItemClickListener() {             @Override             public void onItemClick(AdapterView&lt;?&gt; parent, View view, int position, long id) {                 String goTV = ((TextView) view.findViewById(R.id.gameObjectHiddenTextView)).getText().toString();                 String score = ((TextView) view.findViewById(R.id.woyScoreNumber)).getText().toString();                 Log.v("Clicked Object Id ", goTV);                 Intent intent = new Intent(UserProfileActivity.this, AreYouReady.class);                 intent.putExtra("Score", score);                 intent.putExtra("Object Id", goTV);                  startActivity(intent);             }         });     }      private void populateWoyListView() {       //mMfbId is the variable set by the facebook call         woyAdapter = new WoyAdapter(this ,mMyFbId);           woyAdapter.loadObjects();         mWoyListView.setAdapter(woyAdapter);     }      private void populateWfoListView() {         wfoAdapter = new WfoAdapter(this);         wfoAdapter.loadObjects();         mWfoListView.setAdapter(wfoAdapter);     }      private void populateCompleteListView() {         completedGameAdapter = new CompletedGameAdapter(this, mMyFbId);         completedGameAdapter.loadObjects();         mCompletedGameListView.setAdapter(completedGameAdapter);     }       protected class getFbDeets extends AsyncTask&lt;Void, Void, Void&gt;{         @Override         protected Void doInBackground(Void... params) {              mMyFbId = FaceBookFriends.getMyFbId();             mMyFbName = FaceBookFriends.getMyFbName();             Log.v("getFbDeets() ", "Is Running");             return null;         }          @Override         protected void onPostExecute(Void aVoid) {             super.onPostExecute(aVoid);             populateUI();         }     }      } </code></pre>  <p>This is the completed gave adapter:</p>  <pre><code>/**  * Created by Tom Schinler on 9/23/2015.  */ public class CompletedGameAdapter extends ParseQueryAdapter&lt;Game&gt; {      String mWinnerScore;     String mWinnerName;     String mLoserScore;     String mLoserName;     String mFbName;       public CompletedGameAdapter(Context context, final String myFbId) {         super(context, new ParseQueryAdapter.QueryFactory&lt;Game&gt;() {             public ParseQuery&lt;Game&gt; create() {                 ParseQuery&lt;Game&gt; queryCreatedBy = new ParseQuery&lt;Game&gt;("Game");                 queryCreatedBy.whereEqualTo("Created_By", ParseUser.getCurrentUser());                  ParseQuery&lt;Game&gt; queryOppOf = new ParseQuery&lt;Game&gt;("Game");                 queryOppOf.whereEqualTo("Opponent_Id", myFbId);                  ParseQuery&lt;Game&gt; query = ParseQuery.or(Arrays.asList(queryCreatedBy, queryOppOf));                 query.whereNotEqualTo("Creator_Score", "");                 query.whereNotEqualTo("Opponent_Score", "");                 query.orderByDescending("updatedAt");                 query.setLimit(4);                 return query;             }          });     }       @Override     public View getItemView(Game game, View view, ViewGroup parent) {          if (view == null) {             view = View.inflate(getContext(), R.layout.completed_game_layout, null);         }          super.getItemView(game, view, parent);         mFbName = FaceBookFriends.getMyFbName();          TextView winOrLose = (TextView)view.findViewById(R.id.winOrLose);           int oppScore = Integer.parseInt(game.getOpponentScore());         int creatScore = Integer.parseInt(game.getCreatorScore());              if(oppScore &gt; creatScore){             mWinnerScore = String.valueOf(oppScore);             mWinnerName = game.getOpponentName();             mLoserScore = String.valueOf(creatScore);             mLoserName = game.getCreatorFbName();         }         else {             mWinnerScore = String.valueOf(creatScore);             mWinnerName = game.getCreatorFbName();             mLoserScore = String.valueOf(oppScore);             mLoserName = game.getOpponentName();         }          TextView winnerName = (TextView)view.findViewById(R.id.winnerName);         winnerName.setText(mWinnerName);          TextView winnerScore = (TextView)view.findViewById(R.id.winnerScore);         winnerScore.setText(mWinnerScore);          TextView loserName = (TextView)view.findViewById(R.id.loserName);         loserName.setText(mLoserName);          TextView loserScore = (TextView)view.findViewById(R.id.loserScore);         loserScore.setText(mLoserScore);          if(mWinnerName.equals(mFbName)){             view.setBackgroundColor(Color.GREEN);             winOrLose.setText("WIN!!");         }         else {             view.setBackgroundColor(Color.RED);             winOrLose.setText("LOSER!!");         }           return view;     }   } </code></pre>  <p>and here is the adapter that sets the listview for games waiting on the user:</p>  <pre><code>/**  * Created by Tom Schinler on 9/22/2015.  */ public class WoyAdapter extends ParseQueryAdapter&lt;Game&gt;{       public WoyAdapter(Context context, final String fbId) {         super(context, new ParseQueryAdapter.QueryFactory&lt;Game&gt;() {              public ParseQuery&lt;Game&gt; create() {                 //Log.v("var fbid is ", fbId);                 ParseQuery query = new ParseQuery("Game");                 query.whereEqualTo("Opponent_Id", fbId);                 query.whereEqualTo("Opponent_Score", "");                 query.orderByDescending("updatedAt");                 query.setLimit(4);                 return query;             }         });     }      @Override     public View getItemView(Game game, View view, ViewGroup parent) {          if (view == null) {             view = View.inflate(getContext(), R.layout.waiting_on_you_layout, null);             Log.v("WOY is this", "running");         }          super.getItemView(game, view, parent);          ProfilePictureView friendPic = (ProfilePictureView) view.findViewById(R.id.woyFbPic);         String friendId = game.getCreatorId();         if(friendId != null){             friendPic.setProfileId(friendId);         }          TextView oppName = (TextView)view.findViewById(R.id.woyNameText);         oppName.setText(game.getCreatorFbName());          TextView oppScore = (TextView)view.findViewById(R.id.woyScoreNumber);         oppScore.setText(game.getCreatorScore());          TextView GOTV = (TextView)view.findViewById(R.id.gameObjectHiddenTextView);         GOTV.setText(game.getObjectId());           return view;     } } </code></pre>  <p>I set mMyFbId with a Facebook method like this:</p>  <pre><code>mMyFbId = FaceBookFriends.getMyFbId(); </code></pre>  <p>but it return about 1 second after the code runs to build the lists views, since they do not have the variable, they populate nothing.  Please help.</p>