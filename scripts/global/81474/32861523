<p>I am building an application using IBM MobileFirst Platform Foundation 6.3 for windows phone 8 and I have a flow like this.</p>  <p>In page A the user taps a button and navigates to page B. In Page B the user taps another button and a call is initiated. If the call returns successfully then the user is taken to page C. </p>  <p>Page A corresponds to ViewModel Avm and the other to ViewModels Bvm and Cvm. So the call in page B is initiated by a command in Bvm and the return is also handled there. </p>  <p>The problem is this flow. The user initiates the call on page B, then before the call returns, presses Back and navigates to page A. However the Bvm still exists so when the call returns the user is taken to page C from page A. This is not permitted behavior. </p>  <p>Unfortunately MobileFirst does not support cancelling requests so I cannot do that when navigating from the page.</p>  <p>What I have tried: Setting a bool variable in Bvm that determines whether page B is the active page when the call returns and updating it on the OnNavigatedTo and OnNavigatedFrom events of the page, creates a race condition. If the call returns while navigation is occuring then it is not certain if the variable will be set in time. The same goes for any change I can do on the navigation events.</p>  <p>Do you have any suggestion as to how I can face this problem.  Maybe a way to dispose of the view model in time before the call returns.</p>  <p>EDIT: More specific data and code.  In page B the Bvm has a list <code>List&lt;AddOnItemViewModel&gt; AvailableAddonVMs</code> this list is displayed on the screen and the command which invoces the call is in every <code>AddOnItemViewModel</code></p>  <p>Code for OnNavigatedFrom of page B</p>  <pre><code>var vm = this.DataContext as AddOnsViewModel;         if (e.NavigationMode == NavigationMode.Back)         {             foreach (var addOnVM in vm.AvailableAddonVMs)             {                                     addOnVM.IsStillOnPage = false;                 System.Diagnostics.Debug.WriteLine("go back" + addOnVM.AddOn.ServiceName + addOnVM.IsStillOnPage);             }         }         base.OnNavigatingFrom(e); </code></pre>  <p>Code for <code>AddOnItemViewModel</code></p>  <pre><code>    #region check if still on page             public bool IsStillOnPage = true;             #endregion     ...      //Callback function public void AfterEnableCheck(){      Deployment.Current.Dispatcher.BeginInvoke(() =&gt;                     {                         if (!IsStillOnPage)                         {                             System.Diagnostics.Debug.WriteLine("not on page now");                             return;                         }                        // else continue with navigation                        System.Diagnostics.Debug.WriteLine("continue navigation");                     }                    ); } </code></pre>  <p>EDIT 2: Sample flow and logs</p>  <p>Flow: A call is initiated on page B -> Back is pressed before it returns and navigation to page A happens -> Sometimes navigation to page C happens, sometimes it doesn't. </p>  <p>Logs: </p>  <p>go back serviceName1 false</p>  <p>go back serviceName2 false</p>  <p>.  .  go back serviceNameX false </p>  <p>not on page now (navigation to page C doesn't happen) </p>  <p>OR </p>  <p>continue navigation (navigation to page C happens). </p>  <p>It is strange that eventhough IsStillOnPage is set to false on every AddOnItemViewModel still sometimes the value appears to be true when the if condition is evaluated </p>