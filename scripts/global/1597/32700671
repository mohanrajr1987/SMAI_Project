<p><strong>UPDATED QUESTION - STILL NOT WORKING</strong></p>  <p>I've changed the code.</p>  <p>Now, deactivateAlerts and activateAlerts are in the MainActivity.</p>  <p>Now, inside activateAlerts(), I'm instantiating a GPSListener for the GPS Provider:</p>  <pre><code>if (locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER)) {     gpsListener = new GPSListener(getApplicationContext()); } else if </code></pre>  <p>Where the GPSListener is this:</p>  <pre><code>public class GPSListener implements LocationListener {  private Context mCtx; private Location cLoc; private LocationManager mLocMan;  public GPSListener (Context ctx){     mCtx = ctx;     mLocMan = (LocationManager) mCtx.getSystemService(Context.LOCATION_SERVICE);     mLocMan.requestLocationUpdates(LocationManager.GPS_PROVIDER, 0, 0, this); }  public Location getLocation() {     cLoc = mLocMan.getLastKnownLocation(LocationManager.GPS_PROVIDER);     return cLoc; }  public void stop() {     mLocMan.removeUpdates(GPSListener.this); }  @Override public void onLocationChanged(Location location) {     Log.i("UPDATING", "updating location"); }  @Override public void onStatusChanged(String provider, int status, Bundle extras) {  }  @Override public void onProviderEnabled(String provider) {  }  @Override public void onProviderDisabled(String provider) {  } </code></pre>  <p>}</p>  <p>With the deactiveAlerts() function, I execute the instruction to remove the GPS updates:</p>  <pre><code>if(gpsListener!=null){    gpsListener.stop(); } </code></pre>  <p>But the GPS is not stopping yet =(</p>  <p>What is the problem now?</p>  <hr>  <p><strong>ORIGINAL QUESTION</strong></p>  <p>The user can activate or deactivate location updates.</p>  <p>If the location updates are activated, it works ok, but when the location updates are deactivated, the GPS is still waiting for updates (and the icon appears on the action bar).</p>  <p>The code is that:</p>  <pre><code>public class Alerts extends Fragment {  MyLocationListener myLocationListener = null;  ...  public void activateAlerts() {      locationManager = (LocationManager) activity.getSystemService(Context.LOCATION_SERVICE);     myLocationListener = new MyLocationListener();      getActivity().runOnUiThread(new Runnable() {         @Override         public void run() {              if (locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER)) {                 locationManager.requestLocationUpdates(                         LocationManager.GPS_PROVIDER,                         Utils.MINIMUM_TIME_BETWEEN_UPDATE,                         Utils.MINIMUM_DISTANCECHANGE_FOR_UPDATE,                         myLocationListener                 );             } else if (locationManager.isProviderEnabled(LocationManager.NETWORK_PROVIDER)) {                 locationManager.requestLocationUpdates(                         LocationManager.NETWORK_PROVIDER,                         Utils.MINIMUM_TIME_BETWEEN_UPDATE,                         Utils.MINIMUM_DISTANCECHANGE_FOR_UPDATE,                         myLocationListener                 );             } else {                 locationManager.requestLocationUpdates(                         LocationManager.PASSIVE_PROVIDER,                         Utils.MINIMUM_TIME_BETWEEN_UPDATE,                         Utils.MINIMUM_DISTANCECHANGE_FOR_UPDATE,                         myLocationListener                 );             }         }     });      ...  }  public void deactivateAlerts() {      ...      locationManager = (LocationManager) activity.getSystemService(Context.LOCATION_SERVICE);     if(myLocationListener != null) {         locationManager.removeUpdates(myLocationListener);         myLocationListener = null;     }      ... }  public class MyLocationListener implements android.location.LocationListener {     public void onLocationChanged(Location location) {         Log.i("UPDATING", "updating location");     }      public void onStatusChanged(String s, int i, Bundle b) {         Log.v("LocationListener", "onStatusChanged");     }      public void onProviderDisabled(String s) {         Log.v("LocationListener", "onProviderDisabled");     }      public void onProviderEnabled(String s) {         Log.v("LocationListener", "onProviderEnabled");     } } </code></pre>  <p>What is the problem? </p>  <p>I've read this posts:</p>  <p><a href="http://stackoverflow.com/questions/6894234/stop-location-listener-in-android">Post1</a></p>  <p><a href="http://stackoverflow.com/questions/2012870/android-how-to-stop-gps">Post2</a></p>  <p><a href="http://stackoverflow.com/questions/9738980/gps-location-listener-stop">Post3</a></p>  <p><a href="http://stackoverflow.com/questions/3333237/turn-off-gps-icon-when-locationlistener-is-sleeping">Post4</a></p>