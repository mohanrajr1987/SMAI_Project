<p>I have this model</p>  <pre><code>class Clinic(models.Model):     name = models.CharField(max_length=100)     email = models.EmailField(blank=True)     website = models.URLField(blank=True)     phone_number = PhoneNumberField(blank=True)      slug = models.SlugField(blank=True)     delivery = models.BooleanField()      def __str__(self):         return self.name      def get_absolute_url(self):         return reverse('clinic_detail', kwargs={'slug': self.slug})      def save(self, *args, **kwargs):         slug = slugify(self.name)         super(Clinic, self).save(*args, **kwargs) </code></pre>  <p>and I am trying to have the slug field self populate itself upon creation. I am trying to use the slugify function within the save method to do this but for some reason the save function I definied isn't running when I create a clinic object from the Django admin. When I try to access the clinic object from a list that I generate in this template</p>  <pre><code>&lt;ul&gt; {% for clinic in object_list %}     &lt;li&gt;&lt;a href="{{clinic.get_absolute_url}}"&gt;{{clinic.name}}&lt;/a&gt;&lt;/li&gt; {% empty %}     &lt;li&gt;No clinics available&lt;/li&gt; {% endfor %} &lt;/ul&gt; </code></pre>  <p>I get an error because no slug is available so get_absolute_url fails. </p>  <p>If I then go back to the admin and manually add a slug then everything works fine. Why is this happening? </p>