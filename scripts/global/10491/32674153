<p>Good evening,</p>  <p>I've read multiple answers from Stack Overflow, from several tutorials and still, it doesn't work. </p>  <p>The project is called "crepes_bretonnes". The absolute path of the project is :  <code>/Users/Jack/Desktop/Projet_Django/crepes_bretonnes</code></p>  <p>This path leads to the project's root which contains : </p>  <ul> <li>blog</li> <li>crepes_bretonnes</li> <li>db.sqlite3</li> <li>manage.py</li> <li>static</li> <li>templates</li> </ul>  <p><code>settings.py</code> is in the second folder : <code>crepes_bretonnes</code> and contains : </p>  <pre><code>import os  BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))  SETTINGS_DIR = os.path.dirname(__file__) PROJECT_PATH = os.path.join(SETTINGS_DIR, os.pardir) PROJECT_PATH = os.path.abspath(PROJECT_PATH)  TEMPLATE_DIRS = (     # Put strings here, like "/home/html/django_templates" or "C:/www/django/templates".     # Always use forward slashes, even on Windows.     # Don't forget to use absolute paths, not relative paths.     os.path.join(PROJECT_PATH, 'templates'), ) </code></pre>  <p>If I did things properly : Setting_Dir is the path of the <code>Settings.py</code> and to go back to the root path (one level up) I use the function <code>pardir</code></p>  <p>So now, Django will be searching templates in the templates folder at the root of the crepes_bretonnes project at the following path :  <code>/Users/Jack/Desktop/Projet_Django/crepes_bretonnes</code></p>  <p>A function in the <code>views.py</code>of the <code>blog</code> app return a `render'  containing a template :</p>  <p><code>return render(request, 'blog/addition.html', locals())</code></p>  <p>This template is located in a template folder in the blog folder. </p>  <p>First line of the <code>addition.html</code> is : </p>  <pre><code>{% extends "base.html" %} </code></pre>  <p>This base.html is contained in the root folder called templates. I don't understand why it keeps me giving the following error: </p>  <blockquote>   <p>Django tried loading these templates, in this order: Using loader   django.template.loaders.filesystem.Loader: Using loader   django.template.loaders.app_directories.Loader:   /Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/Django-1.8.3-py3.4.egg/django/contrib/admin/templates/base.html   (File does not exist)   /Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/Django-1.8.3-py3.4.egg/django/contrib/auth/templates/base.html   (File does not exist)   /Users/Jack/Desktop/Projet_Django/crepes_bretonnes/blog/templates/base.html   (File does not exist)</p> </blockquote>  <p>Actually it can't find the base.html in the templates folder at the root of my project. There is something critical about absolute path I must be missing at some point. </p>  <p>Could you help ? </p>  <p>EDIT : I'm using Mac os X.  Here are all the printed path requested in the settings.py : </p>  <pre><code>**Base_Dir** /Users/Jack/Desktop/Projet_Django/crepes_bretonnes  **Settings_Dir** /Users/Jack/Desktop/Projet_Django/crepes_bretonnes/crepes_bretonnes  **Project_Path** /Users/Jack/Desktop/Projet_Django/crepes_bretonnes  **Templates_Dir** /Users/Jack/Desktop/Projet_Django/crepes_bretonnes/templates </code></pre>  <p>EDIT : ANSWER </p>  <p>Modify <code>settings.py</code> in order to make it look like this : </p>  <pre><code>import os  BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))  TEMPLATES = [     {         'BACKEND': 'django.template.backends.django.DjangoTemplates',         'DIRS': [os.path.join(BASE_DIR, 'templates')],         'APP_DIRS': True,         'OPTIONS': {             'context_processors': [                 'django.template.context_processors.debug',                 'django.template.context_processors.request',                 'django.contrib.auth.context_processors.auth',                 'django.contrib.messages.context_processors.messages',             ],         },     }, ] </code></pre>