<p>This is the deserialization that produces the problem:</p>  <pre><code>public MyType ProblematicDeserialization(jsonString) {     return Newtonsoft.Json.JsonConvert.DeserializeObject&lt;MyType&gt;(jsonString);    } </code></pre>  <p>It works or it doesn't deppending on how jsonString is loaded:</p>  <p><strong>CASE 1:</strong></p>  <p><code>myObjectType</code> serialized with json.net as a string and then written into <code>filePath</code>:</p>  <pre><code>//This line works correctly: dynamic correctlyWorkingJson = IO.File.ReadAllText(filePath, Text.Encoding.UTF8); </code></pre>  <p><strong>CASE 2</strong></p>  <p>Same as <strong>CASE 1</strong>, but the content of <code>filePath</code> has been copied and then pasted into a json resource in my project:</p>  <pre><code>//This line gives an ERROR: ""Unexpected character encountered while parsing value: . Path '', line 0, position 0." dynamic notWorkingJson = GetJsonFromResource(resourceName);  private string GetJsonFromResource(string resourceName) {     byte[] jsonBytes = Convert.ToByte(ResourcesManager.GetResource(resourceName));     if (jsonBytes == null) {         throw new Exception(string.Format("Resource '{0}.json' was not found.", resourceName));     }     string json = UTF8BytesToString(jsonBytes);     return json; } </code></pre>  <p>On the debugger, both <code>correctlyWorkingJson</code> and <code>notWorkingJson</code> look exactly the same, but obviously there is something that makes the resource json not acceptable for the json.net deserialization.</p>