<p>I would like to be able to ask JSON.net to deserialize a JSON string into an interface, and return one of the classes that implements that interface. Is that possible?</p>  <p>We tried to create our own <a href="http://www.newtonsoft.com/json/help/html/CustomJsonConverter.htm" rel="nofollow">JsonConverter</a>, but got an exception with message "Could not create an instance of type {0}. Type is an interface or abstract class and cannot be instantiated." (from <a href="https://github.com/JamesNK/Newtonsoft.Json/blob/master/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs" rel="nofollow">Newtonsoft.Json.Serialization.JsonSerializerInternalReader</a>). It looks like JSON.net explicitly checks the type before it makes it to <code>ReadJson()</code> override in our custom converter.</p>