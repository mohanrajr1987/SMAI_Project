<p>So I the following code in my WebApiConfig.cs</p>  <pre><code>        // Web API routes         config.MapHttpAttributeRoutes();          config.Routes.MapHttpRoute(             name: "DefaultApi",             routeTemplate: "api/{controller}/{id}",             defaults: new { id = RouteParameter.Optional }         );          //Make default return type JSON         //   config.Formatters.XmlFormatter.SupportedMediaTypes.Clear();         config.Formatters.JsonFormatter.SupportedMediaTypes.Add(new MediaTypeHeaderValue("text/html"));         config.Formatters.JsonFormatter.SerializerSettings.Formatting = Formatting.Indented;         config.Formatters.JsonFormatter.SerializerSettings.ContractResolver = new CamelCasePropertyNamesContractResolver(); </code></pre>  <p>As you can see I add "text\html" as a supported media type for the JsonFormatter in order to get the default serialization to be be JSON. This does make the response JSON, but the Indented formatter is completely ignored. </p>  <p>If I instead clear all supported media types for XML and don't add "text\html" to the JsonFormatter then everything works as expected. The side effect though is that XML cannot even be explicitly requested by the consumer which does not meet the specifications I was given. </p>  <p>Curiously if I remove all supported media types for XML AND add "text\html" to the JsonFormatter then the problem still occurs and the formatting is not applied. FYI, the SerializerSettings object is Newtonsoft.Json.SerializerSettings.</p>  <p>Anyone know why this is happening/how to fix it?</p>