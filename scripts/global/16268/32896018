<p>I'm new to the REST/JSON interface.</p>  <p>I'm working in VS 2013 C#, Framework is 4.5.</p>  <p>Right now I've successfully created items on a list in Sharepoint, using a JSON payload similar to this:</p>  <pre><code>{ '__metadata': { 'type': 'SP.Data.ABCs_x0020_for_x0020_TAC_x0020_SiebelListItem' }, 'Priority':'A', 'Requirements_x0020_Status':'Fully Documented', 'Status':'Under Consideration', 'Description':'This is a test', 'ABC_x0020_Type':'Enhancement', 'Title':'Testing: 921253434', 'Business_x0020_Unit_x0020_Affect':'TAC', 'AssignedToId':'1', 'Submitted_x0020_by':'sdsd', 'Applies_x0020_To':'Screens/Views', 'Screen_x002f_View_x002f_Module':'CSR'} </code></pre>  <p>I was manually creating the JSON payload and decided to try out some objects that might help with the Serialization/Deserialization.</p>  <p>Here is the code:</p>  <pre><code>            ABCItem item = new ABCItem();          item.Title = "Testing " + ran.Next();         item.ABC_x0020_Type = "Enchancement";         item.Applies_x0020_To = "Screens/View";         item.Priority = "A";         item.Requirements_x0020_Status = "Fully Documented";         item.Screen_x002f_View_x002f_Module = "CSR";         item.Business_x0020_Unit_x0020_Affect = "TAC";         item.Submitted_x0020_by = "Brian Hintze";         item.Status = "Under Consideration";         item.AssignedToId = 1;         item.Description = "The quick brown fox jumped over the lazy dog and then drank a pint of beer.";           string json = JsonConvert.SerializeObject(item); </code></pre>  <p>Unfortunately I can't figure out how to get the __metadata part of the JSON payload to get added correctly. I've tried this</p>  <pre><code> item.__metadata = "{ 'type': 'SP.Data.ABCs_x0020_for_x0020_TAC_x0020_SiebelListItem' }"; </code></pre>  <p>But that didn't work.</p>  <p>I've tried fiddling around the MetaDataSettings, but so far I can't figure out the right combination.</p>  <pre><code>           string json = JsonConvert.SerializeObject(item,new JsonSerializerSettings         {             TypeNameHandling = TypeNameHandling.All,             // $type no longer needs to be first             MetadataPropertyHandling = MetadataPropertyHandling.Default         }); </code></pre>  <p>Any help would be appreciated. I'm sure it is something fairly basic that I'm missing.</p>  <p>thanks,</p>  <p>lee</p>