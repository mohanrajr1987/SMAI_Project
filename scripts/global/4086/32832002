<p>I recently switched the build system of my C++ project to CMake. I am trying to use the ExternalProject_Add function to download the required libraries(there are currently 3 of them, GLM and TINYOBJ are static and GLFW can be either static or dynamic) using git then link to them in my project. I want to be able to link these libraries (and possibly others) with minimal effort so that I can build on multiple platforms. Or if someone else comes in to work on the project, they won't have to worry too much about getting the correct libraries installed.</p>  <p>However, I keep getting these errors when building (on Windows 10 with MinGW):</p>  <pre><code>[100%] Linking CXX executable OpenGLTest.exe "C:\Program Files (x86)\CMake\bin\cmake.exe" -E cmake_link_script CMakeFiles\OpenGLTest.dir\link.txt --verbose=1 "C:\Program Files (x86)\CMake\bin\cmake.exe" -E remove -f CMakeFiles\OpenGLTest.dir/objects.a C:\MinGW\bin\ar.exe cr CMakeFiles\OpenGLTest.dir/objects.a @CMakeFiles\OpenGLTest.dir\objects1.rsp C:\MinGW\bin\g++.exe  -std=c++11   -Wl,--whole-archive CMakeFiles\OpenGLTest.dir/objects.a -Wl,--no-whole-archive  -o OpenGLTest.exe -Wl,--out-implib,libOpenGLTest.dll.a -Wl,--major-image-version,0,--minor-image-version,0 @CMakeFiles\OpenGLTest.dir\linklibs.rsp CMakeFiles\OpenGLTest.dir/objects.a(Main.cpp.obj):Main.cpp:(.text+0xd): undefined reference to `FPSCounter::getElapsedTime()' CMakeFiles\OpenGLTest.dir/objects.a(Main.cpp.obj):Main.cpp:(.text+0x2b): undefined reference to `FPSCounter::reset()' CMakeFiles\OpenGLTest.dir/objects.a(Main.cpp.obj):Main.cpp:(.text+0x54): undefined reference to `FPSCounter::setLastTick()' CMakeFiles\OpenGLTest.dir/objects.a(Main.cpp.obj):Main.cpp:(.text+0x5e): undefined reference to `FPSCounter::addFrame()' CMakeFiles\OpenGLTest.dir/objects.a(Main.cpp.obj):Main.cpp:(.text+0x131): undefined reference to `GLCamera::getCameraZoom()' CMakeFiles\OpenGLTest.dir/objects.a(Main.cpp.obj):Main.cpp:(.text+0x14d): undefined reference to `GLCamera::setCameraZoom(float)' CMakeFiles\OpenGLTest.dir/objects.a(Main.cpp.obj):Main.cpp:(.text+0x1e2): undefined reference to `GLCamera::getCameraPosition()' CMakeFiles\OpenGLTest.dir/objects.a(Main.cpp.obj):Main.cpp:(.text+0x76d): undefined reference to `GLCamera::setCameraTarget(glm::tvec3&lt;float, (glm::precision)0&gt;)' CMakeFiles\OpenGLTest.dir/objects.a(Main.cpp.obj):Main.cpp:(.text+0x797): undefined reference to `GLCamera::setCameraPosition(glm::tvec3&lt;float, (glm::precision)0&gt;)' CMakeFiles\OpenGLTest.dir/objects.a(Main.cpp.obj):Main.cpp:(.text+0x9ac): undefined reference to `GLRenderer_Deferred::GLRenderer_Deferred()' CMakeFiles\OpenGLTest.dir/objects.a(Main.cpp.obj):Main.cpp:(.text+0xbe8): undefined reference to `FPSCounter::FPSCounter()' CMakeFiles\OpenGLTest.dir/objects.a(Main.cpp.obj):Main.cpp:(.text+0xbf2): undefined reference to `FPSCounter::FPSCounter()' collect2.exe: error: ld returned 1 exit status CMakeFiles\OpenGLTest.dir\build.make:98: recipe for target 'OpenGLTest.exe' failed mingw32-make[2]: *** [OpenGLTest.exe] Error 1 mingw32-make[2]: Leaving directory 'C:/Users/Matt/git/oglrenderengine/BUILD' mingw32-make[2]: Target 'CMakeFiles/OpenGLTest.dir/build' not remade because of errors. CMakeFiles\Makefile2:142: recipe for target 'CMakeFiles/OpenGLTest.dir/all' failed mingw32-make[1]: *** [CMakeFiles/OpenGLTest.dir/all] Error 2 mingw32-make[1]: Leaving directory 'C:/Users/Matt/git/oglrenderengine/BUILD' mingw32-make[1]: Target 'all' not remade because of errors. Makefile:82: recipe for target 'all' failed mingw32-make: *** [all] Error 2 </code></pre>  <p>My directory structure looks like this:</p>  <pre><code>Project | +-BUILD (all the CMake output files are here) +-Sub-dir   |   +CMakeLists.txt   +src </code></pre>  <p>Here is my CMakeLists.txt:</p>  <pre><code>cmake_minimum_required(VERSION 2.8) project(OpenGLTest)  set(CMAKE_CXX_FLAGS "-std=c++11") set_directory_properties(PROPERTIES EP_BASE "./deps/")  # Include OpenGL find_package(OpenGL REQUIRED) if (OPENGL_FOUND)     include_directories(${OPENGL_INCLUDE_DIR})     link_libraries(${OPENGL_LIBRARIES}) endif()  # Include GLEW find_package(GLEW REQUIRED) if (GLEW_FOUND)     include_directories(${GLEW_INCLUDE_DIRS})     link_libraries(${GLEW_LIBRARIES}) endif()  include(ExternalProject)  # Include GLM ExternalProject_Add (        GLM        GIT_REPOSITORY "https://github.com/g-truc/glm.git"        GIT_TAG "master"        UPDATE_COMMAND ""        INSTALL_COMMAND "" ) include_directories(${CMAKE_BINARY_DIR}/deps/Source/GLM/glm)  # Include GLFW link_directories(${CMAKE_BINARY_DIR}/deps/Build/GLFW/src) ExternalProject_Add (        GLFW        GIT_REPOSITORY "https://github.com/glfw/glfw.git"        GIT_TAG "master"        CMAKE_ARGS -DGLFW_BUILD_EXAMPLES=OFF -DGLFW_BUILD_TESTS=OFF -DGLFW_BUILD_DOCS=OFF -DGLFW_INSTALL=OFF -DBUILD_SHARED_LIBS=ON        UPDATE_COMMAND ""        INSTALL_COMMAND "") include_directories(${CMAKE_BINARY_DIR}/deps/Source/GLFW/include)  # Include TINYOBJ ExternalProject_Add (        TINYOBJ        GIT_REPOSITORY "https://github.com/syoyo/tinyobjloader.git"        GIT_TAG "master"        UPDATE_COMMAND ""        INSTALL_COMMAND "" ) include_directories(${CMAKE_BINARY_DIR}/deps/Source/TINYOBJ)  include_directories(${PROJECT_SOURCE_DIR}) # add the executable add_executable(OpenGLTest src/Main.cpp) target_link_libraries(OpenGLTest glfw3 ${GLEW_LIBRARIES} ${OPENGL_LIBRARIES}) add_dependencies(OpenGLTest GLM GLFW TINYOBJ) </code></pre>  <p>My "main" is located in Main.cpp in the "src" directory along with all the files referenced in the errors as "undefined reference". I've added the include directories for all the libraries(right after the ExternalProject_Add command) and attempted to link the dynamic library being built for GLFW but it still doesn't seem to work.</p>  <p>What am I missing to get this to build correctly? Any help would be appreciated.</p>