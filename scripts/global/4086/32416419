<p>As I continue my foray into learning C++, I'm trying to enable OpenMP in Eclipse (C/C++ Mars 4.5.0) using the MinGW toolchain.  Suffice it to say I have no idea how to go about it.  Adding the <code>-fopenmp</code> flag to the C/C++ compiler options in the project settings wasn't sufficient.  I attempted to compile and run the following test code provided by OpenMP using the GNU Make Builder:</p>  <pre><code>#include &lt;omp.h&gt; #include &lt;stdio.h&gt;  int main() {     #pragma omp parallel printf("Hello from thread %d, nthreads %d\n", omp_get_thread_num(), omp_get_num_threads()); } </code></pre>  <p>Eclipse spit out the following:</p>  <pre><code>Building file: ../OpenMPTest.cpp Invoking: GCC C++ Compiler g++ -O0 -g3 -Wall -c -fmessage-length=0 -fopenmp -MMD -MP -MF"OpenMPTest.d" -MT"OpenMPTest.d" -o "OpenMPTest.o" "../OpenMPTest.cpp" ../OpenMPTest.cpp: In function 'int main()': ../OpenMPTest.cpp:14:23: error: expected '#pragma omp' clause before 'printf'   #pragma omp parallel printf("Hello from thread %d, nthreads %d\n", omp_get_thread_num(), omp_get_num_threads());                        ^ ../OpenMPTest.cpp:15:1: error: expected primary-expression before '}' token  }  ^ make: *** [OpenMPTest.o] Error 1 </code></pre>  <p>That gives me the (possibly incorrect) impression that Eclipse can't find the OpenMP libraries.</p>  <p>So, before I screw anything up beyond repair, I was wondering if I could get a step-by-step for-idiots guide to installing and enabling OpenMP in an Eclipse project with MinGW. </p>