<p>I am using Google Places in my ReactJS application and IE9 has problems with the way I'm doing this:</p>  <pre><code>Error: only call this function after the script has in fact loaded. </code></pre>  <p>(that's on the first line in places.js)</p>  <p>Later IE versions have no problems (nor has other browsers).</p>  <p>The way I'm loading my Google stuff is that I'm using the ReactScriptLoader.</p>  <pre><code>var ReactScriptLoaderModule = require('../utils/ReactScriptLoader.js'); var ReactScriptLoaderMixin= ReactScriptLoaderModule.ReactScriptLoaderMixin; var ReactScriptLoader= ReactScriptLoaderModule.ReactScriptLoader; var googleMapsURL = 'https://maps.googleapis.com/maps/api/js?v=3.21.10&amp;libraries=places&amp;callback=initializeGoogleAPI';  window.initializeGoogleAPI = function() {     ReactScriptLoader.triggerOnScriptLoaded(googleMapsURL); } </code></pre>  <p>This happens in my main App.jsx, before anything else happens. The callback ensures the dispatcher will tell the application Google is ready.</p>  <pre><code>onScriptLoaded: function(){ AppActions.googleScriptsLoaded(); }, </code></pre>  <p>I suspect how that is handled is irrelevant here, just want to show what's going on and how I'm thinking with the loading of the script. What I'm thinking is that maybe something happens before the window is completely loaded, or something?</p>  <p>Any tips?</p>