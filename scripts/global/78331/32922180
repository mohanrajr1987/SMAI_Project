<p>I'm using Angular and WebSQL in a Cordova project, and I've started a new list controller that will list the results of a table from the WebSQL database.</p>  <p>I have a sqlSvc that queries the database like so:</p>  <pre><code>service.upc = function(newUpc) {     var deferred = $q.defer();     var resolveResults = function (tx, results) {         deferred.resolve(results.rows);     }     var selectUpcs = function() {         var queryString = "SELECT * FROM UPC";         service.db.transaction(function (tx) {             tx.executeSql(queryString, [], resolveResults, rejectWithError);         });     }     deferUntilInit(function () {         if (newUpc) {             insertOrReplaceAndSelect(newUpc); //omitted         } else {             selectUpcs();         }     });     return deferred.promise; } </code></pre>  <p>All the controller does is this:</p>  <pre><code>var listCtrl = function($scope, sqlSvc) {     sqlSvc.upc().then(function(result) {         $scope.list = result;     }); } angular.module("RDb").controller("listCtrl", ["$scope", "sqlSvc", listCtrl]); </code></pre>  <p>And it's binding to a simple UI view template:</p>  <pre><code>&lt;div id="scanList"&gt;     &lt;ul class="list-unstyled"&gt;         &lt;li ng-repeat="scan in list"&gt;             &lt;div&gt;{{scan.upc}} ({{scan.datetime}})&lt;/div&gt;         &lt;/li&gt;     &lt;/ul&gt; &lt;/div&gt; </code></pre>  <p>This is giving me the 10 $digest iterations reached error, and it seems to be caused by the way WebSQL is return its results.  The error goes away if I deep copy the data, changing <code>resolveResults</code> to:</p>  <pre><code>var data = JSON.parse(JSON.stringify(results.rows)); deferred.resolve(results.rows); </code></pre>  <p>I would like to be able to get this service to work without having to deep copy every results set that it gets.  Can anyone help me understand why this is happening?</p>