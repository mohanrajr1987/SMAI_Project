<p>Hello StackOverflow community! I'm student trying to solve this problem.... The main issue I am having with it is that I dont know the best way to find characters that are valid integers in Strings.  Note: I am only 1 month into learning Java, and I spent most of last year learning python. So compiler languages are new to me.<br> Write a program that reads in a product code and outputs whether it is valid or not based on some simple rules. </p>  <p>The rules: 1st part can contain only capital letters and 6 digits. 2nd part is alldigits and = the product of the first 6 digits taken in groups of two from the left. </p>  <p>eg: AX6BYU56UX6CV6BNT7NM  287430 is valid because 65*66*67 = 287430</p>  <p>This is what I have so far</p>  <pre><code>import java.util.*;                       //import java utilities public class Basic5{                      //declares my class     public static void main(String[]args){         Scanner kb=new Scanner(System.in);//creates Scanner for user input         String userentry=kb.nextLine();   //Takes users input as a string              String result="Valid";            //Variable for if the code is Valid         int DoubleCounter=0;              //Counter for number of ints         double newdouble;                          List&lt;Double&gt; NumberList =  new ArrayList&lt;Double&gt;(); //Creates Array List for tracking Doubles         for(int i=0;i&lt;userentry.length();i++){              //checks length of Users input             if(Character.isLowerCase(userentry.codePointAt(i))){  //checks if its a Lowercase letter                 result="Fail";                              //Changes result variable             if(Integer.parseInt(userentry,i)){              //checks if character from input is a valid integer                 DoubleCounter+=1;                           //Adds to DoubleCounter                 newdouble=userentry.charAt(i);              //Isolates character                 NumberList.add(newdouble);                  //Adds it to List of doubles             }             }         }     } } </code></pre>