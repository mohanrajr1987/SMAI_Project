<p>I have a project in my programming class that has to give a PayRoll scenario which contains three classes including PayRoll, PayRollTester, and EmployeeRecord. My code compiles and prints the EmployeeRecord correctly but does not list the PayRoll correctly. Instead, I receive an error saying Error: Out of Bounds of ArrayList.</p>  <p><strong>Payroll:</strong></p>  <pre><code>import java.util.Scanner; import java.util.ArrayList; import java.util.Date;  // ...javadoc... public class Payroll {     //ArrayLists that will use methods from EmployeeRecords.     ArrayList&lt;String&gt; employeeNames2;     ArrayList&lt;Double&gt; employeeWages2;      ArrayList&lt;Integer&gt; emID = new ArrayList&lt;Integer&gt;();     ArrayList&lt;Double&gt; hours = new ArrayList&lt;Double&gt;();     ArrayList&lt;Double&gt; totalPay = new ArrayList&lt;Double&gt;();     //Creating the hours and wages variables.     private double hoursWorked = 0.0;     private double hoursWorked2 = 0.0;     private int weeks = 0;     private String employeeID = "%03d";     private int quit = 1000;     private int i = 1;      Scanner input = new Scanner(System.in);      public void setEmployeePayroll()     {         // Constructs a new EmployeeRecord.         EmployeeRecord e = new EmployeeRecord();         e.setEmployeeInfo();          employeeNames2 = e.getEmployeeNamesArrayList();         employeeWages2 = e.getWageArrayList();          // Local variables used in setEmployeePayroll.         double totalPay2 = 0.0;         double totalHours = 0.0;         double overTime = 0.0;         double overTime2 = 0.0;          System.out.println("Please enter ACME employee ID, the week they worked (1 or 2), and the number of hours worked. This information should be entered in the order the names were entered. Enter 0 when you are done inputing information.");          while(quit != 0)         {             quit = input.nextInt();             if(quit == 0)             {                 break;             }              weeks = input.nextInt();              if(weeks == 1)             {                 hoursWorked = input.nextDouble();             }             else if(weeks == 2)             {                 hoursWorked2 = input.nextDouble();             }              /*              * I am checking to see if the employee is going to be paid for overtime and also calculating the pay for both weeks.              * 1) My first if statement indicates whether or not the employee worked over 40 in week one and week two.              * 2) My first else if statement indicates whether the employee works more than 40 hours in week two but not week one.              * 3) My second else if statement indicates whether the employee works more than 40 hours in week one but not in week two.              * 3) My third else if statement finally indicates that the employee worked over 40 hours in both week one and two.              */             if(hoursWorked &gt; 0 &amp;&amp; hoursWorked &lt;= 40 &amp;&amp; hoursWorked2 &gt; 0 &amp;&amp; hoursWorked2 &lt;= 40)             {                 totalHours = hoursWorked + hoursWorked2;                 hours.add(totalHours);                 totalPay2 = totalHours * (employeeWages2.get(i - 1));                 totalPay.add(totalPay2);                 hoursWorked = 0.0;                 hoursWorked2 = 0.0;             }             else if(hoursWorked2 &gt; 40 &amp;&amp; hoursWorked &gt; 0 &amp;&amp; hoursWorked &lt;= 40)             {                 overTime2 = hoursWorked2 - 40;                 totalHours = hoursWorked + hoursWorked2;                 hours.add(totalHours);                 totalPay2 = totalHours * (employeeWages2.get(i - 1)) + (overTime2 * 1.5);                 totalPay.add(totalPay2);                 hoursWorked = 0.0;                 hoursWorked2 = 0.0;             }             else if(hoursWorked &gt; 40 &amp;&amp; hoursWorked2 &lt;= 40 &amp;&amp; hoursWorked2 &gt; 0)             {                 overTime = hoursWorked - 40;                 totalHours = hoursWorked + hoursWorked2;                 hours.add(totalHours);                 totalPay2 = totalHours * (employeeWages2.get(i - 1)) + (overTime * 1.5);                 totalPay.add(totalPay2);                 hoursWorked = 0.0;                 hoursWorked2 = 0.0;             }             else if(hoursWorked &gt; 40 &amp;&amp; hoursWorked2 &gt; 40)             {                 overTime = hoursWorked - 40;                 overTime2 = hoursWorked2 - 40;                 totalHours = hoursWorked + hoursWorked2;                 hours.add(totalHours);                 totalPay2 = totalHours * (employeeWages2.get(i - 1)) + (1.5 * (overTime + overTime2));                 totalPay.add(totalPay2);                 hoursWorked = 0.0;                 hoursWorked2 = 0.0;             }             i = quit;         }         System.out.println();         System.out.println("Employee Number  |  Employee Name    |  Hours Worked  |  Total Pay");         for(int i = 0; i &lt; e.getEmployeeNamesArrayList().size();)         {             System.out.println(String.format(employeeID, i + 1) + "              | " + emID.get(i + 1) + "        | " + hours.get(i + 1) + "           | " + totalPay.get(i + 1));         }     } } </code></pre>  <p><strong>EmployeeRecord:</strong></p>  <pre><code>import java.util.Scanner; import java.util.ArrayList;  // ...javadoc... public class EmployeeRecord {     /*      * Creating the array and instance variables for EmployeeRecord consisting      * of TaxID numbers, Employee Names, Wages, Employee ID numbers and hours worked.      */     ArrayList&lt;String&gt; employeeNames = new ArrayList&lt;String&gt;();     ArrayList&lt;String&gt; taxIDList = new ArrayList&lt;String&gt;();     ArrayList&lt;Double&gt; employeeWages = new ArrayList&lt;Double&gt;();      Scanner input = new Scanner(System.in);      private String employeeID = "%03d";     private String employeeFullName = " ";     private String taxID = " ";     private double wage = 0.0;      //Adding employees.     public void setEmployeeInfo()     {         System.out.println("Please enter the full names of each ACME employee, their employee tax ID, and their employee wage rate. Type 'Q Q' when you are done entering employee information.");          while(employeeFullName != "Q")         {             employeeFullName = input.next() + " " + input.next();             if(employeeFullName.equalsIgnoreCase("Q" + " " + "Q"))             {             break;             }             taxID = input.next();             wage = input.nextDouble();              employeeNames.add(employeeFullName);             taxIDList.add(taxID);             employeeWages.add(wage);              System.out.println("Employee ID  |  Employee Name        |  Tax ID          |  Wage");             for(int i = 1; i &lt;= employeeNames.size(); i++)             {                 System.out.printf(String.format(employeeID, i) + "          | " + employeeNames.get(i - 1) + "              | " + taxIDList.get(i - 1) + "          | " + "%1.2f",employeeWages.get(i - 1));                 System.out.println();             }         }     }      /**      * Creating a method that returns the employee ArrayList employeeName.      */     public ArrayList&lt;String&gt; getEmployeeNamesArrayList()     {         return employeeNames;     }      /**      * Creating a method that returns the employee's Tax ID ArrayList taxIDList.      */     public ArrayList&lt;String&gt; getTaxIdsArrayList()     {         return taxIDList;     }      /**      * Creating a method that returns the wages ArrayList       */     public ArrayList&lt;Double&gt; getWageArrayList()     {         return employeeWages;     }  } </code></pre>  <p><strong>PayrollTester:</strong></p>  <pre><code>import java.util.Scanner;  // ...javadoc... public class PayrollTester {     public static void main(String[] args)     {         Payroll employeeComplete = new Payroll();         employeeComplete.setEmployeePayroll();     } } </code></pre>