<p>I know this sound very easy to you guys but I'm trying to access <code>lessonList.size()</code> from <code>AsyncTask</code> and pass it to <code>public int getCount()</code> tabs, but when i try to log it in <code>onCreateView</code> it returns <code>0</code></p>  <pre><code>Log.d("CountLesson", "" + lessonList.size()); // returning 0 </code></pre>  <p>How to achieve proper size?</p>  <p>This is my code:</p>  <pre><code>import android.os.AsyncTask; import android.os.Bundle; import android.support.v4.app.Fragment; import android.support.v4.app.FragmentManager; import android.support.v4.app.FragmentPagerAdapter; import android.support.v4.view.ViewPager; import android.util.Log; import android.view.LayoutInflater; import android.view.View; import android.view.ViewGroup;  import org.json.JSONArray; import org.json.JSONException; import org.json.JSONObject;  import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.net.HttpURLConnection; import java.net.URL; import java.util.ArrayList;  public class tab_container extends Fragment {      public static tab_container newInstance() {         tab_container fragment = new tab_container();          return fragment;     }      public tab_container() {         // Required empty public constructor     }      ViewPager viewPager = null;      public static ArrayList&lt;String&gt; lessonList = new ArrayList&lt;&gt;();      FragmentManager fragmentManager;       @Override     public View onCreateView(LayoutInflater inflater, ViewGroup container,                              Bundle savedInstanceState) {         // Inflate the layout for this fragment         View rootView =  inflater.inflate(R.layout.fragment_tab_container, container, false);          viewPager = (ViewPager) rootView.findViewById(R.id.lessonPager);         fragmentManager = getActivity().getSupportFragmentManager();         viewPager.setAdapter(new MyAdapter(fragmentManager));          new lessonTab().execute();          Log.d("CountLesson", "" + lessonList.size());          return rootView;     }      class MyAdapter extends FragmentPagerAdapter {          public MyAdapter(FragmentManager fm) {             super(fm);         }          @Override         public Fragment getItem(int position) {             Fragment objFragment = null;              switch (position) {                 case 0:                     objFragment = tab1.newInstance();                     break;                 case 1:                     objFragment = tab2.newInstance();                     break;                 case 2:                     objFragment = tab3.newInstance();                     break;             }              return objFragment;         }          @Override         public int getCount() {             return 3;         }          @Override         public CharSequence getPageTitle(int position) {             String title = new String();             switch (position) {                 case 0:                     title = "Lesson";                     break;                 case 1:                     title = "Test Two";                     break;                 case 2:                     title = "Test Three";                     break;             }             return title;         }     } // end of MyAdapter       class lessonTab extends AsyncTask&lt;String, String, String&gt; {          @Override         protected void onPreExecute() {          }          @Override         protected String doInBackground(String... strings) {             BufferedReader reader = null;              try {                 URL user_login_url = new URL("http://192.168.1.110/thermodynamics/index.php/users/get_lessons");                  HttpURLConnection con = (HttpURLConnection)user_login_url.openConnection();                  StringBuilder sb = new StringBuilder();                  reader = new BufferedReader(new InputStreamReader(con.getInputStream()));                  String lessonResponse;                  while ((lessonResponse = reader.readLine()) != null) {                     return  lessonResponse;                 }                 return sb.toString();              } catch (IOException e) {                 e.printStackTrace();                 return null;             } finally {                 if(reader != null) {                     try {                         reader.close();                     } catch (IOException e) {                         e.printStackTrace();                         return  null;                     }                 }             }         }          @Override         protected void onPostExecute(String lessonResponse) {             try {                 JSONObject lessonObject = new JSONObject(lessonResponse);                  JSONArray lessonArray = lessonObject.getJSONArray("data");                  for (int i = 0; i &lt; lessonArray.length(); i++) {                      JSONObject dataLessons = lessonArray.getJSONObject(i);                     lessonList.add(dataLessons.getString("lesson_title"));                 }              } catch (JSONException e) {                 e.printStackTrace();             }         }      } // end of asynctask  } // end of fragment </code></pre>