<p>I'm trying to learn recursion in Erlang and I am working through a book. But I'm hitting a wall when faced with the problem of taking a list and returning only the duplicate elements. I tried writing a function which returns only the unique elements and then removing them from the original list.</p>  <pre><code>adjacent_dups(L) -&gt; L -- uniques(L).  uniques([])    -&gt; []; uniques([H|T]) -&gt; [H | [X || X &lt;- uniques(T), X /= H]]. </code></pre>  <p>This will however not give the correct result when the list is not well structured.</p>  <pre><code>L = [7,3,4,3] </code></pre>  <p>My code will return</p>  <pre><code>adjacent_dups([7,3,4,3]) -&gt; 3  </code></pre>  <p>How can I get</p>  <pre><code>adjacent_dups([7,3,4,3]) -&gt; []  </code></pre>