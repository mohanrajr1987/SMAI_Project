<p>I write a simple tcp server module and run it well. When i compile this module while running, the problem is that when the client send anything to server, it receives no response! How can fix it?</p>  <pre><code>start(Port) -&gt;     {ok, Listen} = gen_tcp:listen(Port, [{active, once}]),     spawn(?MODULE, loop, [Listen]).   loop(Listen) -&gt;     {ok, Socket} = gen_tcp:accept(Listen),     spawn(?MODULE, loop, [Listen]),     handler(Socket).    handler(Socket) -&gt;     receive         {tcp, Socket, Data} -&gt;             %io:format("recv ~p~n", [Data]),             spawn(?MODULE, response, [self(), Data]),             inet:setopts(Socket, [{active, once}]),             handler(Socket);         {tcp_closed, Socket} -&gt;             %io:format("disconnected~n", []),             gen_tcp:close(Socket);          {send_msg, Msg} -&gt;             gen_tcp:send(Socket, lists:flatten(io_lib:format("~p", [Msg])) ++ ?END_CHAR),             handler(Socket)     end.   response(PID, Data) -&gt;     [Req|Args] = string:tokens(Data, ?END_CHAR),     {ReqPID, ReqRef} = spawn_monitor(view, request, [list_to_atom(Req), self(), Args]),     receive         {'DOWN', ReqRef, process, ReqPID, {function_clause, _}} -&gt; PID ! {send_msg, invalid_request};         {'DOWN', ReqRef, process, ReqPID, {{case_clause, _}, _}} -&gt; PID ! {send_msg, bad_args};         {'DOWN', ReqRef, process, ReqPID, {{badmatch, _}, _}} -&gt; PID ! {send_msg, bad_args};         Resp -&gt; PID ! {send_msg, Resp}     end. </code></pre>