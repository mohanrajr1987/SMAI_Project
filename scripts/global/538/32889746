<p>In Erlang, a cluster of connected machines has some soft limitations on how many machines you can have without suffering from too many messages being sent for the gossip protocol to work properly. </p>  <p><a href="http://stackoverflow.com/questions/13212007/erlang-clusters">This question</a> has similar statements. I have also seen some benchmarks of Riak running ok with 200 nodes (can't find the link but I think it was a Basho test).</p>  <p>I understand that a 200 Erlang node cluster is capable of <strong>REALLY</strong> heavy loads. I am just wondering on alternatives if that limit becomes a bottleneck.</p>  <p>It seems the answer to a bigger scale than that (which would be huge) is to isolate your system in smaller isolated clusters, much like a micro services approach. </p>  <p>My question is: <em>which is the recommended way of making this communication?</em> </p>  <p>I don't want to come up with a REST service because of the unnecessary weight of marshling/unmarshiling JSON, HTTPS handshakes and other protocol bound operations (load balancers and etc).</p>  <p><a href="http://bert-rpc.org/" rel="nofollow">BERT-RPC</a> seemed like the best fit but its development seems stale. <a href="https://github.com/Nekso/nkcluster" rel="nofollow">NkCluster</a> seems to have implemented something similar but is there an Erlang/Elixir/Joxa/LFE way of doing this?</p>