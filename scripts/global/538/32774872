<p>Given a positive number N, my print_even() function prints out all the even numbers between 1 and N:</p>  <pre><code>-module(my). -compile(export_all).  print_even(N) when N&gt;0 -&gt; even_helper(1, N).  even_helper(Current, N) when Current =&lt; N -&gt;     io:format("(Current = ~w)~n", [Current]),     case Current rem 2 of         0 -&gt; io:format("Number: ~p~n", [Current]);         _ -&gt; do_nothing     end,     even_helper(Current+1, N); even_helper(Current, N) when Current &gt; N -&gt;     ok. </code></pre>  <p>Here's some sample output:</p>  <pre><code>28&gt; my:print_even(10). (Current = 1) (Current = 2) Number: 2 (Current = 3) (Current = 4) Number: 4 (Current = 5) (Current = 6) Number: 6 (Current = 7) (Current = 8) Number: 8 (Current = 9) (Current = 10) Number: 10 ok </code></pre>  <p>Below is the code I'm using for a conditional break:</p>  <pre><code>-module(c_test). -compile(export_all).  c_break(Bindings) -&gt;     case int:get_bindings('Current', Bindings) of         {value, 3}  -&gt; true;         _           -&gt; false     end. </code></pre>  <p>I set a conditional break on the following line in print_even():</p>  <pre><code>    case Current rem 2 of </code></pre>  <p>...which according to the Erlang <a href="http://www.erlang.org/doc/apps/debugger/debugger_chapter.html" rel="nofollow">debugger docs</a> should be legal.  But no matter what I do, I can't get my c_break() function to execute.  I expected execution to halt at the breakpoint when Current is equal to 3, but the code runs to completion, and the breakpoint is skipped.   I even tried:</p>  <pre><code>c_break(Bindings) -&gt;     case int:get_bindings('Current', Bindings) of         _  -&gt; true;     end. </code></pre>  <p>But execution still won't halt at the breakpoint.</p>  <p><strong>Update:</strong> I <em>can</em> get execution to halt if I use the following function for my conditional break:</p>  <pre><code>c_break(_) -&gt;     true. </code></pre>  <p>If I change that to:</p>  <pre><code>c_break(X) -&gt;     io:format("~w~n", [X]),     true. </code></pre>  <p>...then once again execution won't halt.</p>