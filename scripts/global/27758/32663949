<p>I've been using a custom UINaviationController transition for quite some time now. I have all of the delegate code put into its own class. The navigation controller delegate is set up and parts of my delegate do execute (the convenience method and the  - (NSTimeInterval)transitionDuration:</p>  <p>However the method for - (void)animateTransition:(id )transitionContext never gets called on devices/simulators that are running iOS 9+. This same class works fine on iOS 8.x. </p>  <p>Looking through the header file for UIViewControllerTransitioning.h, I don't see ANY changed related to iOS 9.0. </p>  <p>Google turns up nothing. </p>  <p>So what does happen when I expect this transition? The usual UINavigationController push animation. However I can't get back out of it because calling [self.navigationController pop...] pops nothing.</p>  <pre><code>@interface PKFullScreenAssetTransitionAnimator : NSObject &lt;UIViewControllerAnimatedTransitioning&gt;         +(PKFullScreenAssetTransitionAnimator*)fullscreenTransitionAnimatorWithTransitionView:(UIView*)transitionView                                                                               startingAtFrame:(CGRect)frame                                                                                 endingAtFrame:(CGRect)frame                                                                                     operation:(UINavigationControllerOperation)operation; @end    @implementation PKFullScreenAssetTransitionAnimator      +(PKFullScreenAssetTransitionAnimator*)fullscreenTransitionAnimatorWithTransitionView:(UIView*)transitionView                                                                           startingAtFrame:(CGRect)startFrame                                                                             endingAtFrame:(CGRect)endFrame                                                                                 operation:(UINavigationControllerOperation)operation{          PKFullScreenAssetTransitionAnimator *animator = [[PKFullScreenAssetTransitionAnimator alloc]init];          UIImageView *tempImageView = [[UIImageView alloc]initWithFrame:startFrame];         [tempImageView setImage:[transitionView imageRepresentation]];         animator.transitionView = tempImageView;          animator.startFrame = startFrame;         animator.endFrame = endFrame;          animator.operation = operation;         return animator;       }       - (NSTimeInterval)transitionDuration:(id &lt;UIViewControllerContextTransitioning&gt;)transitionContext{         return 1.1;     }        - (void)animateTransition:(id &lt;UIViewControllerContextTransitioning&gt;)transitionContext{         self.transitionContext = transitionContext;          if(self.operation == UINavigationControllerOperationPush){              // Get containerView             UIView *containerView = transitionContext.containerView;              // Add toView             UIViewController *toViewController = [transitionContext viewControllerForKey:UITransitionContextToViewControllerKey];             [containerView addSubview:toViewController.view];              // Add backgroundView (with 0 alpha)             UIView *backgroundView = [[UIView alloc]initWithFrame:toViewController.view.bounds];             backgroundView.backgroundColor = [UIColor blackColor];             [containerView addSubview:backgroundView];              // Add assetView             UIView *transitionView = self.transitionView;             [containerView addSubview:transitionView];              // Move assetView.frame             [UIView animateWithDuration:0.7 delay:0 usingSpringWithDamping:0.6 initialSpringVelocity:0 options:UIViewAnimationOptionCurveEaseOut animations:^{                 self.transitionView.frame = self.endFrame;             } completion:^(BOOL finished) {                 [UIView animateWithDuration:0.3 animations:^{                     backgroundView.alpha = 0;                 } completion:^(BOOL finished) {                     [self.transitionView removeFromSuperview];                     [backgroundView removeFromSuperview];                     [self.transitionContext completeTransition:YES];                 }];              }];         } else {             PK_LOG_TODO_TASK(@"Implement pop animation");         }     }   @end </code></pre>