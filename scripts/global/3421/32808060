<p>I'm trying to figure out how tracking / analytics scripts work. There's an optimised version of <a href="https://mathiasbynens.be/notes/async-analytics-snippet#universal-analytics" rel="nofollow">the Google Analytics code</a>:</p>  <pre><code>&lt;script&gt;   (function(window, document, variableName, scriptElement, firstScript) {     window['GoogleAnalyticsObject'] = variableName;     window[variableName] || (window[variableName] = function() {       (window[variableName].q = window[variableName].q || []).push(arguments);     });     window[variableName].l = +new Date;     scriptElement = document.createElement('script'),     firstScript = document.scripts[0];     scriptElement.src = 'https://127.0.0.1:3000/analytics.js';     firstScript.parentNode.insertBefore(scriptElement, firstScript)   }(window, document, 'ga'));    ga('create', 'UA-XXXX-Y');   ga('send', 'pageview'); &lt;/script&gt; </code></pre>  <p>Loading a custom script, I can't figure out how the ga() functions work. I tried various IIFE and constructors already, but don't get the 'create' and 'send' events.</p>  <p>How do I see these events on the server?</p>  <p><strong>update</strong></p>  <p>I managed to abstract my way to the queue, now wondering how I can create an async queue to send these events to the server. Any suggestions?</p>  <pre><code>(function() {   var ga = function(a) {     return void 0 != a &amp;&amp; -1 &lt; (a.constructor + '').indexOf('String');   };   var sa = function(a) {     return a ? a.replace(/^[\s\xa0]+|[\s\xa0]+$/g, '') : '';   };   var gb = ga(window.GoogleAnalyticsObject) &amp;&amp; sa(window.GoogleAnalyticsObject) || 'ga';   var Window = window;   var Document = document;    console.log(Window[gb].q);  })(window); </code></pre>