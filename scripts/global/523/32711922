<p>I have a two text box's one purely for animation and another to use. The animation works fine apart from when the text box is not focused i would like it to reverse the animation, which is possible if you use exit actions, but this then does not allow me to use the text box underneath as it sees that as an exit action. So i wondered if it was possible to only reverse the animation when the grid is pressed? or even exclude the other text box? </p>  <p>how can i achieve this? Here is my code. </p>  <pre><code> &lt;TextBlock Margin="250.449,182.112,374.044,0" Text="Hint Text" Foreground="{StaticResource brushWatermarkForeground}"                    Visibility="{Binding ElementName=txtUserEntry, Path=Text.IsEmpty, Converter={StaticResource BooleanToVisibilityConverter}}" Height="19.725" VerticalAlignment="Top" /&gt;     &lt;TextBox Name="txtUserEntry" Background="Transparent" BorderBrush="{x:Null}" Margin="250.449,182.112,352.952,0" Height="25.689" VerticalAlignment="Top" BorderThickness="0" /&gt;     &lt;TextBox x:Name="textBox" Text="Floating Label Text"   Height="25.689" VerticalAlignment="Top" Margin="250.449,182.112,352.952,0" Style="{DynamicResource TextBoxStyle1}" BorderThickness="1" Foreground="#FF8B8B8B" Background="White"/&gt;    &lt;Style x:Key="TextBoxStyle1" TargetType="{x:Type TextBox}"&gt;             &lt;Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/&gt;             &lt;Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/&gt;             &lt;Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/&gt;             &lt;Setter Property="FontFamily" Value="15"/&gt;             &lt;Setter Property="BorderThickness" Value="1"/&gt;             &lt;Setter Property="KeyboardNavigation.TabNavigation" Value="None"/&gt;             &lt;Setter Property="HorizontalContentAlignment" Value="Left"/&gt;             &lt;Setter Property="FocusVisualStyle" Value="{x:Null}"/&gt;             &lt;Setter Property="AllowDrop" Value="true"/&gt;             &lt;Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/&gt;             &lt;Setter Property="Stylus.IsFlicksEnabled" Value="False"/&gt;             &lt;Setter Property="Template"&gt;                 &lt;Setter.Value&gt;                     &lt;ControlTemplate TargetType="{x:Type TextBox}"&gt;                         &lt;ControlTemplate.Resources&gt;                             &lt;Storyboard x:Key="Storyboard1"&gt;                                 &lt;ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="border"&gt;                                     &lt;EasingColorKeyFrame KeyTime="0" Value="#FFABADB3"/&gt;                                     &lt;EasingColorKeyFrame KeyTime="0:0:0.6" Value="#FF018CFF"/&gt;                                 &lt;/ColorAnimationUsingKeyFrames&gt;                             &lt;/Storyboard&gt;                             &lt;Storyboard x:Key="StoryboardTextAnimation"&gt;                                 &lt;DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="TextBox"&gt;                                     &lt;EasingDoubleKeyFrame KeyTime="0" Value="0"/&gt;                                     &lt;EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-29.961"/&gt;                                 &lt;/DoubleAnimationUsingKeyFrames&gt;                                 &lt;DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="TextBox"&gt;                                     &lt;EasingDoubleKeyFrame KeyTime="0" Value="0"/&gt;                                     &lt;EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-21.265"/&gt;                                 &lt;/DoubleAnimationUsingKeyFrames&gt;                                 &lt;DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="TextBox"&gt;                                     &lt;EasingDoubleKeyFrame KeyTime="0" Value="1"/&gt;                                     &lt;EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.715"/&gt;                                 &lt;/DoubleAnimationUsingKeyFrames&gt;                                 &lt;DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="TextBox"&gt;                                     &lt;EasingDoubleKeyFrame KeyTime="0" Value="1"/&gt;                                     &lt;EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.715"/&gt;                                 &lt;/DoubleAnimationUsingKeyFrames&gt;                                 &lt;ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="TextBox"&gt;                                     &lt;EasingColorKeyFrame KeyTime="0" Value="#FF8B8B8B"/&gt;                                     &lt;EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF00A2FF"/&gt;                                 &lt;/ColorAnimationUsingKeyFrames&gt;                                 &lt;ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.FontWeight)" Storyboard.TargetName="TextBox"&gt;                                     &lt;DiscreteObjectKeyFrame KeyTime="0"&gt;                                         &lt;DiscreteObjectKeyFrame.Value&gt;                                             &lt;FontWeight&gt;Normal&lt;/FontWeight&gt;                                         &lt;/DiscreteObjectKeyFrame.Value&gt;                                     &lt;/DiscreteObjectKeyFrame&gt;                                     &lt;DiscreteObjectKeyFrame KeyTime="0:0:0.3"&gt;                                         &lt;DiscreteObjectKeyFrame.Value&gt;                                             &lt;FontWeight&gt;Bold&lt;/FontWeight&gt;                                         &lt;/DiscreteObjectKeyFrame.Value&gt;                                     &lt;/DiscreteObjectKeyFrame&gt;                                 &lt;/ObjectAnimationUsingKeyFrames&gt;                             &lt;/Storyboard&gt;                             &lt;Storyboard x:Key="StoryboardTextAnimation_Copy1"&gt;                                 &lt;DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="TextBox"&gt;                                     &lt;SplineDoubleKeyFrame KeyTime="0" Value="-29.961"/&gt;                                     &lt;SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/&gt;                                 &lt;/DoubleAnimationUsingKeyFrames&gt;                                 &lt;DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="TextBox"&gt;                                     &lt;SplineDoubleKeyFrame KeyTime="0" Value="-21.265"/&gt;                                     &lt;SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/&gt;                                 &lt;/DoubleAnimationUsingKeyFrames&gt;                                 &lt;DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="TextBox"&gt;                                     &lt;SplineDoubleKeyFrame KeyTime="0" Value="0.715"/&gt;                                     &lt;SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/&gt;                                 &lt;/DoubleAnimationUsingKeyFrames&gt;                                 &lt;DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="TextBox"&gt;                                     &lt;SplineDoubleKeyFrame KeyTime="0" Value="0.715"/&gt;                                     &lt;SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/&gt;                                 &lt;/DoubleAnimationUsingKeyFrames&gt;                                 &lt;ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="TextBox"&gt;                                     &lt;SplineColorKeyFrame KeyTime="0" Value="#FF00A2FF"/&gt;                                     &lt;SplineColorKeyFrame KeyTime="0:0:0.3" Value="#FF8B8B8B"/&gt;                                 &lt;/ColorAnimationUsingKeyFrames&gt;                                 &lt;ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.FontWeight)" Storyboard.TargetName="TextBox"&gt;                                     &lt;DiscreteObjectKeyFrame KeyTime="0"&gt;                                         &lt;DiscreteObjectKeyFrame.Value&gt;                                             &lt;FontWeight&gt;Bold&lt;/FontWeight&gt;                                         &lt;/DiscreteObjectKeyFrame.Value&gt;                                     &lt;/DiscreteObjectKeyFrame&gt;                                     &lt;DiscreteObjectKeyFrame KeyTime="0:0:0.3"&gt;                                         &lt;DiscreteObjectKeyFrame.Value&gt;                                             &lt;FontWeight&gt;Normal&lt;/FontWeight&gt;                                         &lt;/DiscreteObjectKeyFrame.Value&gt;                                     &lt;/DiscreteObjectKeyFrame&gt;                                 &lt;/ObjectAnimationUsingKeyFrames&gt;                             &lt;/Storyboard&gt;                             &lt;/ControlTemplate.Resources&gt;                         &lt;Border x:Name="border" SnapsToDevicePixels="True" BorderThickness="0,0,0,2" BorderBrush="#FFABADB3"&gt;                             &lt;ScrollViewer x:Name="TextBox" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" RenderTransformOrigin="0.5,0.5" Content="Floating Label Text" Background="White"&gt;                                 &lt;ScrollViewer.RenderTransform&gt;                                     &lt;TransformGroup&gt;                                         &lt;ScaleTransform/&gt;                                         &lt;SkewTransform/&gt;                                         &lt;RotateTransform/&gt;                                         &lt;TranslateTransform/&gt;                                     &lt;/TransformGroup&gt;                                 &lt;/ScrollViewer.RenderTransform&gt;                             &lt;/ScrollViewer&gt;                         &lt;/Border&gt;                         &lt;ControlTemplate.Triggers&gt;                             &lt;Trigger Property="IsEnabled" Value="false"&gt;                                 &lt;Setter Property="Opacity" TargetName="border" Value="0.56"/&gt;                             &lt;/Trigger&gt;                             &lt;Trigger Property="IsMouseOver" Value="true"&gt;                                 &lt;Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/&gt;                             &lt;/Trigger&gt;                             &lt;Trigger Property="IsKeyboardFocused" Value="true"&gt;                                 &lt;Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/&gt;                                 &lt;Trigger.EnterActions&gt;                                     &lt;BeginStoryboard Storyboard="{StaticResource Storyboard1}" /&gt;                                     &lt;BeginStoryboard Storyboard="{StaticResource StoryboardTextAnimation}" /&gt;                                 &lt;/Trigger.EnterActions&gt;                               &lt;/Trigger&gt;                           &lt;/ControlTemplate.Triggers&gt;                     &lt;/ControlTemplate&gt;                 &lt;/Setter.Value&gt;             &lt;/Setter&gt;             &lt;Style.Triggers&gt;                 &lt;MultiTrigger&gt;                     &lt;MultiTrigger.Conditions&gt;                         &lt;Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/&gt;                         &lt;Condition Property="IsSelectionActive" Value="false"/&gt;                     &lt;/MultiTrigger.Conditions&gt;                     &lt;Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/&gt;                 &lt;/MultiTrigger&gt;             &lt;/Style.Triggers&gt;         &lt;/Style&gt;    &lt;SolidColorBrush x:Key="brushWatermarkForeground" Color="LightGray" /&gt;           &lt;BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" /&gt;         &lt;local:TextInputToVisibilityConverter x:Key="TextInputToVisibilityConverter" /&gt;         &lt;SolidColorBrush x:Key="TextBox.MouseOver.Border2" Color="#FF7EB4EA"/&gt;         &lt;Style x:Key="TextBoxStyleNew" TargetType="{x:Type TextBox}"&gt;             &lt;Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/&gt;             &lt;Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/&gt;             &lt;Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/&gt;             &lt;Setter Property="BorderThickness" Value="1"/&gt;             &lt;Setter Property="KeyboardNavigation.TabNavigation" Value="None"/&gt;             &lt;Setter Property="HorizontalContentAlignment" Value="Left"/&gt;             &lt;Setter Property="FocusVisualStyle" Value="{x:Null}"/&gt;             &lt;Setter Property="AllowDrop" Value="true"/&gt;             &lt;Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/&gt;             &lt;Setter Property="Stylus.IsFlicksEnabled" Value="False"/&gt;             &lt;Setter Property="Template"&gt;                 &lt;Setter.Value&gt;                     &lt;ControlTemplate TargetType="{x:Type TextBox}"&gt;                         &lt;ControlTemplate.Resources&gt;                             &lt;Storyboard x:Key="StoryboardAnimateText"/&gt;                         &lt;/ControlTemplate.Resources&gt;                         &lt;Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" BorderThickness="0,0,0,2" Margin="0,-5,0,0"&gt;                             &lt;ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/&gt;                         &lt;/Border&gt;                         &lt;ControlTemplate.Triggers&gt;                             &lt;Trigger Property="IsEnabled" Value="false"&gt;                                 &lt;Setter Property="Opacity" TargetName="border" Value="0.56"/&gt;                             &lt;/Trigger&gt;                             &lt;Trigger Property="IsMouseOver" Value="true"&gt;                                 &lt;Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border2}"/&gt;                                 &lt;Setter Property="BorderThickness" TargetName="border" Value="0"/&gt;                             &lt;/Trigger&gt;                             &lt;Trigger Property="IsKeyboardFocused" Value="true"&gt;                                 &lt;Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/&gt;                                 &lt;Setter Property="BorderThickness" TargetName="border" Value="0"/&gt;                               &lt;/Trigger&gt;                         &lt;/ControlTemplate.Triggers&gt;                     &lt;/ControlTemplate&gt;                 &lt;/Setter.Value&gt;             &lt;/Setter&gt;             &lt;Style.Triggers&gt;                 &lt;MultiTrigger&gt;                     &lt;MultiTrigger.Conditions&gt;                         &lt;Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/&gt;                         &lt;Condition Property="IsSelectionActive" Value="false"/&gt;                     &lt;/MultiTrigger.Conditions&gt;                     &lt;Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/&gt;                 &lt;/MultiTrigger&gt;             &lt;/Style.Triggers&gt;         &lt;/Style&gt;      public partial class MainWindow : Window {     public MainWindow()     {         InitializeComponent();     }      private void MainWindow_MouseDown(object sender, MouseButtonEventArgs e)     {         grid1.Focus();       }   }  public class TextInputToVisibilityConverter : IMultiValueConverter {     public object Convert(object[] values, Type targetType, object parameter, System.Globalization.CultureInfo culture)     {         // Always test MultiValueConverter inputs for non-null         // (to avoid crash bugs for views in the designer)         if (values[0] is bool &amp;&amp; values[1] is bool)         {             bool hasText = !(bool)values[0];             bool hasFocus = (bool)values[1];              if (hasFocus || hasText)                 return Visibility.Collapsed;         }          return Visibility.Visible;     }       public object[] ConvertBack(object value, Type[] targetTypes, object parameter, System.Globalization.CultureInfo culture)     {         throw new NotImplementedException();     } } } </code></pre>