<p><strong>update</strong></p>  <p>Anyone that sees this and says hey wait he used <code>map.data.addGeoJson()</code> and not <code>.loadGeoJson()</code> it's because the fiddle needs addGeoJson when loading the JSON locally. <code>loadGeoJSson()</code> works the same as the above code if running on a web server. </p>  <p><strong>Original Question below</strong></p>  <p>I'm running all this on a web server so according to the googleMaps docs loading geoJSON from the same domain is accepted as long as the URI is correct (also for dev i'm running the geoJSON request via http, not sure if that matters). To simply things i placed my JSON object in the same directory as my index.html and mapInit.js file.  According to the API docs all the functions i've tried are available in the actual reference section of Version 3.21 so i'm assuming they still work. I also have an API key which i've plugged in accordingly.</p>  <p><strong>My question</strong></p>  <p>Why is the loadGeoJson not functioning, am I declaring it incorrectly, or am I styling incorrectly?</p>  <p><strong>Whats working</strong></p>  <p>The map loads just fine and centers on the correct location, it then loads the custom marker and centers the map accordingly.</p>  <p><strong>Whats not Working</strong></p>  <p>When loading the geoJSON file using <code>customLayer.loadGeoJSON("some.json")</code> i get no errors if I switch to using <code>customLayer.addGeoJSON("some.json")</code> i get an invalid feature or feature collection error in the console.  Additionally <code>customLayer.setStyle({icon:image})</code> doesn't seem to be setting the style I have also tried <code>customLayer.StyleOptions({icon:image})</code>.</p>  <p>So i stuck with <code>loadGeoJson()</code> because it seemed to be loading the JSON. </p>  <p>index.html</p>  <pre><code>!DOCTYPE html &lt;html&gt; &lt;body&gt; &lt;div id="myMap" style='padding:0; height: 800px; width:100%;'&gt;&lt;/div&gt; &lt;/body&gt; &lt;center&gt;     &lt;script src="http://maps.google.com/maps/api/js?sensor=false"&gt; &lt;/script&gt; &lt;script&gt; src="mapInit.js"&lt;/script&gt; &lt;/html&gt; </code></pre>  <p>mapInit.js</p>  <pre><code>function init(){ var mapCanvas = document.getElementById('myMap'); var map; var image = "../images/marker.svg";  var userCenter = new google.maps.LatLng(30.382288, -97.727447); var mapOptions = {     draggable: true,     zoomControl: true,     scrollwheel: true,     disableDoubleClickZoom: false,     zoom: 8,     center:userCenter };  map = new google.maps.Map(mapCanvas,mapOptions);  var customLayer = new google.maps.Data();  customLayer.loadGeoJson("some.json"); customLayer.setStyle({ title: '#',     icon:image,     map: map,  });  customLayer.forEach(function(feature) {      var point = new google.maps.LatLng(feature.getProperty('coordinates'))      var mark = new google.maps.Marker({         position: point,         title: '#',         icon:image,         map: map,         draggable: false,         animation: google.maps.Animation.DROP     }); }); // customLayer.setMap(map);  var marker = new google.maps.Marker({        position: userCenter,        title: 'Your Location',        icon:image,        map: map,        draggable: true,        animation: google.maps.Animation.DROP    }); } </code></pre>  <p>I have also tried adding <code>customLayer.setMap(map);</code> instead of declaring <code>map:map</code> in the <code>setStyle()</code> with no luck.</p>  <p>The some.json file is below and in the correct directory as Chrome and firefox consoles are registering 200 OK</p>  <p>some.json</p>  <pre><code>{     "type": "FeatureCollection",     "features":[         { "type": "Feature",          "geometry": {"type": "Point", "coordinates": [30.388256,-97.739863]},          "properties": {"prop0": "value0"}         },         { "type": "Feature",          "geometry": {"type": "Point", "coordinates": [30.389904,-97.739226]},          "properties": {"prop1": "value1"}         },         { "type": "Feature",          "geometry": {"type": "Point", "coordinates": [30.384617,-97.739348]},          "properties": {"prop2": "value2"}         },         { "type": "Feature",          "geometry": {"type": "Point", "coordinates": [30.387876,-97.7396]},          "properties": {"prop3": "value3"}         }     ] } </code></pre>