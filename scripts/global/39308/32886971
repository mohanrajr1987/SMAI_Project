<p>Currently, I am using spiderfy mechanism to show overlapping markers. It works fine in normal view. But doesn't work in satellite view.</p>  <p>initialize function</p>  <pre><code>var mapProp = {             zoom: 3,             center: new google.maps.LatLng(41.850033, -74.005941),             mapTypeId: google.maps.MapTypeId.ROADMAP,             minZoom: 1,             //scaleControl: true,             zoomControl: true,             zoomControlOptions: {                 style: google.maps.ZoomControlStyle.LARGE,                 position: google.maps.ControlPosition.LEFT_TOP                               }         };  var bounds = new google.maps.LatLngBounds(); myMap = new google.maps.Map(document.getElementById("mapAreaDiv"), mapProp); var mcOptions = { maxZoom: 20 }; var markerCluster = new MarkerClusterer(myMap, [], mcOptions); var oms = new OverlappingMarkerSpiderfier(myMap); google.maps.event.addListener(FMSmap, 'zoom_changed', function () {             // debugger;           //  alert("zoom changed");             if (myMap.getZoom() &lt; 3) {             //    alert("zoom changed to less than 3");                 myMap.setZoom(3);             }         });  var markers = mapData; // Info Window Content var infoWindowContent = []; // Display multiple markers on a map var infoWindow = new google.maps.InfoWindow(), marker, i; var previousLocation = ""; var prevInfoData = ""; markerWindowJSON = {}; var markerArray = []; if (markers.length != 0) { for (i = 0; i &lt; mapData.length; i++) {     var currentLocation = mapData[i].LocationDetails;    var Thumbnail = self.getThumbnail(mapData[i]);    var latitude = mapData[i].Latitude;    var longitude = mapData[i].Longitude;    var lat_long = latitude + "_" + longitude;    var infoData = self.createMapMarkers(mapData[i], Thumbnail);    if (currentLocation != null) {     //  if (markerWindowJSON[lat_long] != undefined)      {      //  infoData = '&lt;div class="floatL" style="width: 350px;"&gt;' + markerWindowJSON[lat_long] + '&lt;/div&gt; &lt;hr class="advhr"&gt;&lt;div class="floatL" style="width: 350px;"&gt;' + infoData + '&lt;/div&gt;';                         //latitude = parseFloat(latitude) + offset;// * (Math.random() * (max - min) + min);                         //longitude = parseFloat(longitude) + offset;// * (Math.random() * (max - min) + min);      }                      //else      {           infoData = '&lt;div class="floatL" style="width: 350px;"&gt;' + infoData + '&lt;/div&gt;';      }            markerWindowJSON[lat_long] = infoData;      }       infoWindowContent.push(infoData);      var position = new google.maps.LatLng(latitude, longitude);      bounds.extend(position);        marker = new google.maps.Marker({                position: position,                map: myMap,                title: markers[i].Name,                desc: infoWindowContent[i]             });                  markerCluster.addMarker(marker);                  oms.addMarker(marker);                 oms.addListener('spiderfy', function (markers) {                     infoWindow.close();                 });                 //google.maps.event.addListener(marker, 'click', (function (marker, i) {                 //    return function () {                 //        infoWindow.setContent(infoWindowContent[i]);                 //        infoWindow.open(map, marker);                 //    }                 //})(marker, i));                      // Automatically center the map fitting all markers on the screen                 myMap.fitBounds(bounds);                 previousLocation = currentLocation;                 marker.setMap(myMap);                 markerArray.push(marker);                }              oms.addListener('click', function (marker, event) {                 infoWindow.setContent(marker.desc);                 infoWindow.open(myMap, marker);             });         } </code></pre>  <p>Is their problem with map options which doesn't make Spiderify to work in Satellite view?</p>