<p>I'm trying to build an expression to convert a date/time parameter to an Epoch timestamp that will be used in a Url's parameter string.</p>  <p>I figured that I would try <code>GetDate()</code> first, then substitute the actual parameter (<code>@[$Package::endingDate]</code>).</p>  <p>This syntax:</p>  <pre><code>DATEDIFF("s", "19700101", GETDATE() ) </code></pre>  <p>produces:</p>  <blockquote>   <p>The function "DATEDIFF" does not support the data type "DT_WSTR" for   parameter number 2. The type of the parameter could not be implicitly   cast into a compatible type for the function. To perform this   operation, the operand needs to be explicitly cast with a cast   operator.</p> </blockquote>  <p>This syntax:</p>  <pre><code>DATEDIFF("s", (DT_WSTR)"19700101", GETDATE() ) </code></pre>  <p>produces:</p>  <blockquote>   <p>Attempt to parse the expression "DATEDIFF("s", (DT_WSTR)"19700101",   GETDATE() )" failed. The expression might contain an invalid token, an   incomplete token, or an invalid element. It might not be well-formed,   or might be missing part of a required element such as a parenthesis.</p> </blockquote>  <p>This syntax:</p>  <pre><code>DATEDIFF("s", CAST("19700101" AS DT_WSTR), GETDATE() ) </code></pre>  <p>produces:</p>  <blockquote>   <p>Attempt to parse the expression "DATEDIFF("s", CAST("19700101" as   DT_WSTR), GETDATE() )" failed. The expression might contain an invalid   token, an incomplete token, or an invalid element. It might not be   well-formed, or might be missing part of a required element such as a   parenthesis.</p> </blockquote>  <p>Is there a way to convert a date/time to an Epoch timestamp, including the timezone adjustments?</p>