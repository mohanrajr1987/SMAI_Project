<p>Hi I'm trying to combine the two api's as I need to display a kml layer and make the whole thing searchable this is the code from google fusion tables</p>  <pre><code>    &lt;!DOCTYPE html&gt;      &lt;html&gt;      &lt;head&gt;      &lt;meta name="viewport" content="initial-scale=1.0, user-scalable=no"&gt;      &lt;meta charset="utf-8"&gt;      &lt;title&gt;Fusion Tables queries&lt;/title&gt;      &lt;style&gt;     html, body {     height: 100%;     margin: 0;     padding: 0;   }   #map {     height: 100%;   } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div id="map"&gt;&lt;/div&gt; &lt;script&gt; function initMap() { var map = new google.maps.Map(document.getElementById('map'), { center: {lat: 41.948766, lng: -87.691497}, zoom: 12 });  var layer = new google.maps.FusionTablesLayer({ query: {   select: 'address',   from: '1d7qpn60tAvG4LEg4jvClZbc1ggp8fIGGvpMGzA',   where: 'ridership &gt; 5000' }  });  layer.setMap(map); }  &lt;/script&gt; &lt;script src="https://maps.googleapis.com/maps/api/js?key=API_KEY&amp;callback=initMap&amp;signed_in=true" async defer&gt; &lt;/script&gt; </code></pre>  <p> </p>  <p>with this code from google places</p>  <pre><code>     &lt;!DOCTYPE html&gt;  &lt;html&gt; &lt;head&gt; &lt;meta name="viewport" content="initial-scale=1.0, user-scalable=no"&gt; &lt;meta charset="utf-8"&gt; &lt;style&gt;   html, body {     height: 100%;     margin: 0;     padding: 0;   }   #map {     height: 100%;   }  .controls {  margin-top: 10px;  border: 1px solid transparent;  border-radius: 2px 0 0 2px;  box-sizing: border-box;  -moz-box-sizing: border-box;  height: 32px;  outline: none;  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);  }   #pac-input {  background-color: #fff;  font-family: Roboto;  font-size: 15px;  font-weight: 300;  margin-left: 12px;  padding: 0 11px 0 13px;  text-overflow: ellipsis;  width: 300px;   }   #pac-input:focus {   border-color: #4d90fe;   }    .pac-container {   font-family: Roboto;   }    #type-selector {  color: #fff;  background-color: #4d90fe;  padding: 5px 11px 0px 11px;   }  #type-selector label {   font-family: Roboto;   font-size: 13px;   font-weight: 300; }      &lt;/style&gt;     &lt;title&gt;Places Searchbox&lt;/title&gt;     &lt;style&gt;       #target {         width: 345px;       }     &lt;/style&gt;   &lt;/head&gt;   &lt;body&gt;     &lt;input id="pac-input" class="controls" type="text" placeholder="Search Box"&gt;     &lt;div id="map"&gt;&lt;/div&gt;     &lt;script&gt; // This example adds a search box to a map, using the Google Place Autocomplete // feature. People can enter geographical searches. The search box will return a // pick list containing a mix of places and predicted search terms.  function initAutocomplete() {   var map = new google.maps.Map(document.getElementById('map'), {     center: {lat: -33.8688, lng: 151.2195},     zoom: 13,     mapTypeId: google.maps.MapTypeId.ROADMAP   });    // Create the search box and link it to the UI element.   var input = document.getElementById('pac-input');   var searchBox = new google.maps.places.SearchBox(input);   map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);    // Bias the SearchBox results towards current map's viewport.   map.addListener('bounds_changed', function() {     searchBox.setBounds(map.getBounds());   });    var markers = [];   // [START region_getplaces]   // Listen for the event fired when the user selects a prediction and retrieve   // more details for that place.   searchBox.addListener('places_changed', function() {     var places = searchBox.getPlaces();      if (places.length == 0) {       return;     }      // Clear out the old markers.     markers.forEach(function(marker) {       marker.setMap(null);     });     markers = [];      // For each place, get the icon, name and location.     var bounds = new google.maps.LatLngBounds();     places.forEach(function(place) {       var icon = {         url: place.icon,         size: new google.maps.Size(71, 71),         origin: new google.maps.Point(0, 0),         anchor: new google.maps.Point(17, 34),         scaledSize: new google.maps.Size(25, 25)       };        // Create a marker for each place.       markers.push(new google.maps.Marker({         map: map,         icon: icon,         title: place.name,         position: place.geometry.location       }));        if (place.geometry.viewport) {         // Only geocodes have viewport.         bounds.union(place.geometry.viewport);       } else {         bounds.extend(place.geometry.location);       }     });     map.fitBounds(bounds);   });   // [END region_getplaces] }       &lt;/script&gt;     &lt;script src="https://maps.googleapis.com/maps/api/js?key=API_KEY&amp;libraries=places&amp;callback=initAutocomplete"          async defer&gt;&lt;/script&gt;   &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>still with me? they work independently but together the search won't work sorry for the long post, any help appreciated</p>