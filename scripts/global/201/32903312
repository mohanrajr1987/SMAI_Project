<p>From <a href="http://stackoverflow.com/a/7209263/1225328">http://stackoverflow.com/a/7209263/1225328</a>:</p>  <blockquote>   <p>The idea of refresh tokens is that if an access token is compromised,   because it is short-lived, the attacker has a limited window in which   to abuse it.</p> </blockquote>  <p>I get it, but if the attacker accesses the refresh token, they will be able to get a fresh auth token, am I wrong? This seems to just postpone the long-lived tokens security flaw...</p>  <p>Concerning this point, you'll find in the same answer:</p>  <blockquote>   <p>Refresh tokens, if compromised, are useless because the attacker   requires the client id and secret in addition to the refresh token in   order to gain an access token.</p> </blockquote>  <p>Then what's the difference between using a refresh token and simply resigning in? And how do you store the client id and secret if you don't want users to have to reenter them again?</p>  <hr>  <p>As <a href="http://stackoverflow.com/a/32911954/1225328">@FStephenQ</a> pointed out, a refresh token can be used only once: an attacker will then be able to get a new auth token, but only once, and a short-lived one. But then, how do you obtain a new refresh token once you already used one? If you get a new one when you use one, an attacker will then be able to refresh their token too...</p>  <hr>  <p>The actual question is: how to keep my users signed in? On the apps I use, once I signed in, I never have to sign in again: how do they proceed?</p>