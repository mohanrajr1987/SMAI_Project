<p>I want to get the forecast JSON after I have the device location, in past codes I archived this implementing the API Request in the locationManager method, but in this way every time the locationManager executed to give me a new location, the Request was also executed (almost every second. Now I placed the Request method in the view did load, but the problem with this is that the Request is made before I can have the device coordinates.</p>  <p>I’m looking for a better technique to get once or almost not every second the Request.</p>  <pre><code>import UIKit import CoreLocation  class ViewController: UIViewController, CLLocationManagerDelegate {  @IBOutlet var currentTempertureLabel: UILabel? @IBOutlet var currentHumidityLabel: UILabel? @IBOutlet var currentPrecipitationLabel: UILabel? @IBOutlet var currentSummaryLabel: UILabel? @IBOutlet var currentDateLabel: UILabel?  private let forecastAPIKey = “&lt;FORECASTKEY&gt;” var coordinate:(lat: Double, long:Double)? var locationManager:CLLocationManager!  func locationManager(manager:CLLocationManager, didUpdateLocations locations:[CLLocation]) {     print("Location Manager working...")     let locationNSArray = locations as NSArray     let locationObject = locationNSArray.lastObject as! CLLocation      let coordinates = locationObject.coordinate      let longitude = coordinates.longitude     let latitude = coordinates.latitude      coordinate = (lat: latitude, long: longitude)     print("Coordinate: \(coordinate)") }  override func viewDidLoad() {     super.viewDidLoad()      print("\nVIEW DID LOAD\n")     print("Coordinate 1: \(coordinate)")//I get 0.000,0.000      // start CURRENT DATE     let currentDate = CurrentDate().getDate()     currentDateLabel?.text = currentDate as String     // end CURRENT DATE      //start Location Services     locationManager = CLLocationManager()     locationManager.delegate = self     locationManager.desiredAccuracy = kCLLocationAccuracyBest     locationManager.requestAlwaysAuthorization()     locationManager.startUpdatingLocation()       //end Location Services      print("Coordinate 2: \(coordinate)")//I get 0.000,0.000      let forecastService = ForecastService(APIKey: forecastAPIKey)      if coordinate != nil {     forecastService.getForecast(coordinate!.lat, long: coordinate!.long) {         (currently) in         if let currentWeather = currently {             //Update UI             dispatch_async(dispatch_get_main_queue()) {                 //Execute closure, executes on the main tread                 if let temperature = currentWeather.temperature {                     self.currentTempertureLabel?.text = "\(temperature)º"                 }                  if let humidity = currentWeather.humidity {                     self.currentHumidityLabel?.text = "\(humidity)%"                 }                  if let precipitation = currentWeather.precipProbability {                     self.currentPrecipitationLabel?.text = "\(precipitation)%"                 }                  if let summary = currentWeather.summary {                     self.currentSummaryLabel?.text = summary                 }             }         }     }     print(“Coordinate 3: \(coordinate)”) //I get 0.000,0.000 } }  override func didReceiveMemoryWarning() {     super.didReceiveMemoryWarning()     // Dispose of any resources that can be recreated. } } </code></pre>