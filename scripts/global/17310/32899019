<p>I'm working on a pig latin translator program that:</p>  <ol> <li>Prompts the user for a word.</li> <li>If the word begins with a vowel, append “way” to the end of the word.</li> <li>If the word begins with a consonant, remove all consonants from the beginning of the word and append them to the end of the word. Then, append “ay” to the end of the word.</li> <li>Halts when the user enters “quit” (any combination of lower and upper case letters, such as “QUIT”, “Quit” or “qUIt”)</li> </ol>  <p>My program satisfies 1-3 just fine but I cannot seem to figure out how to continuously prompt the user for a word unless they enter some form of "quit". I know I need to use a while statement, but this is the best I come up with:</p>  <pre><code>while True:  VOWELS = ("a", "e", "i", "o", "u", "A", "E", "I", "O", "U")  statement = input("Please enter a word: ") statementL = statement.lower()  if statementL == "quit":     print ("Exiting program")     break   def find_vowel(word):    for i in range(len(word)):      if word[i] in VOWELS:         return i    return -1  words =  statement.split() count = 0  for word in words:    vowel = find_vowel(word) # No vowels found    if(vowel == -1):       print (word) # A vowel is the first letter    elif(vowel == 0):     print (word + "way")    else: # A consonant is first     print (word[vowel:] + word[:vowel] + "ay") </code></pre>  <p>My current while loop constantly prompts the user to enter a word but doesn't translate it and I get an error when I try to move the quitting the program chunk to the bottom. Any suggestions? Thanks in advance.</p>