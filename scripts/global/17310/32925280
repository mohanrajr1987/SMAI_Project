<p>What's wrong with my LinkedList add method if I want to implement it without a tail field?</p>  <pre><code>public class LinkedList&lt;E&gt; {     private Node&lt;E&gt; head= new Node&lt;E&gt;();     private int size=0;     public void linkedList(){         head=null;         size=0;     }     public void add(E data){         Node&lt;E&gt; currNode=head;         while (currNode.hasNext()){             currNode.setNext(currNode.getNext());         }         Node&lt;E&gt; lastNode= new Node&lt;E&gt;();         lastNode.setItem(data);         lastNode.setNext(null);         currNode.setNext(lastNode);         size++;     }      public void remove(int i){         Node&lt;E&gt; currNode = head;         int index=0;         while (index&lt;i){             currNode.setNext(currNode.getNext());             i++;         }         currNode.setNext(currNode.getNext().getNext());      }      public void print(){         Node&lt;E&gt; currNode = new Node&lt;E&gt;();         do{             System.out.println(currNode.getItem());          } while (!currNode.hasNext());     }       public static void main(String arc[]){         LinkedList&lt;String&gt; ll = new LinkedList&lt;String&gt;();         ll.add("9");         ll.add("b");         ll.add("987");         ll.print();         return;     }  } </code></pre>  <p>Here's the <code>Node</code> class:</p>  <pre><code>public class Node&lt;E&gt; {     private E item;     private Node&lt;E&gt; next;       public Node&lt;E&gt; getNext(){         return this.next;     }     public void setNext(Node&lt;E&gt; n){         this.next=n;     }      public E getItem(){         return this.item;     }      public void setItem(E item){         this.item=item;     }      public boolean hasNext(){         return (this.next != null);     } } </code></pre>  <p>Edit: Changed the print method to: public void print(){         Node currNode = head;</p>  <pre><code>    while (currNode.hasNext()){         System.out.println(currNode.getItem());         currNode=currNode.getNext();     }  } </code></pre>  <p>and I get this result:</p>  <pre><code>null 9 b </code></pre>