<p>I recently found out that Chrome seems to have a connection limit of 6 ( <a href="http://stackoverflow.com/questions/23679968/chrome-hangs-after-certain-amount-of-data-transfered-waiting-for-available-soc">Chrome hangs after certain amount of data transfered - waiting for available socket</a> ) unfortunately I found this out the hard way by getting a "waiting for available sockets" message after loading up too many tabs (7).</p>  <p>I know it is Chrome since another Chrome user (a.k.a another browser session) loads the web page perfectly fine on the same computer at the same time (I have multiple Chrome users open on my computer). So it is not the server in any way.</p>  <p>I believe this is because, in socket.io (which I am using for notifications), I am xhr-polling which is causing Chrome to have to wait until it can grab a socket from one of those connections before it can process the page.</p>  <p>What is the solution to this?</p>  <p>I have thought of a couple of solutions:</p>  <ul> <li>make the xhr-polling window smaller, this increases connections in the browser and node.js but will mean the page won't stall.</li> <li>Use websockets. I am unsure if websockets are immune to this problem either.</li> <li>Make connections inactive on tabs not focused. Though it seems other sites don't have to do that...</li> <li>Use some kind of connection sharing. Considering that Chrome isolates websockets and xhr requests to the tab I do find it difficult to understand how that works.</li> </ul>  <p>As an added point: the reason I have not gone with websockets from the start is because I use cloudflare. But if this is the way to solve it then: so be it.</p>