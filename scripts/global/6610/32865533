<p>If I upload a file through AngularJS to my SharePoint instance then it have small differences there. So the uploaded file not equals my source file.</p>  <p><a href="http://i.stack.imgur.com/kqjFV.png" rel="nofollow"><img src="http://i.stack.imgur.com/kqjFV.png" alt="enter image description here"></a></p>  <p>I'm using this script parts.</p>  <pre><code>var service = {};  service.upload = function (file) {     var deferred = $q.defer();      try {         var reader = new FileReader();         reader.onload = function (e) {              /* If I'm using readAsArrayBuffer instead readAsText I tried this: */              var bytes = new Uint8Array(e.target.result),                 binary = '';             for (var b = 0; b &lt; bytes.length; b++) {                 binary += String.fromCharCode(bytes[b]);             }              // Below in $http.post you must use "binary" instead "e.target.result" to test this conversion!              /* End of the try */              $http.post("http://localhost/sites/Dev/TestData/_api/web/GetFolderByServerRelativeUrl('/sites/Dev/TestData/Lists/TestList/Subfolder')/Files/Add(Url='My.pdf', Overwrite=true)", e.target.result, {                 headers: {                     "accept": "application/json;odata=verbose",                     "X-RequestDigest": $('#__REQUESTDIGEST').val()                 }             }).then(function (r) {                 deferred.resolve(r);                 console.info('Successfully uploaded!');             }, function (r) {                 deferred.reject(r);                 console.error('Error while uploading!');             });         };         //reader.readAsArrayBuffer(file); // &lt;- with that I must convert it before and then I have different changes (example above!)         reader.readAsText(file);     } catch (e) {         deferred.reject(e);     }      return deferred.promise; };  return service; </code></pre>  <p>And the frontend is really not important. Only <code>ng-file-upload</code> with small drop box and controllers which calls the service upload method.</p>  <p>And can I upload pictures with that, too? Or do I need a switch for different file types?</p>