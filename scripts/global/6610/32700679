<p>I am sending multiple AJAX requests by looping through a split string.  I need to associate the response with the request. I'm trying to receive the data provided in the AJAX request in the HTTP response.  I need this because I am making multiple requests and the responses are coming back asynchronously.  It appears the synchronous functionality of AJAX is deprecated.  </p>  <p>My javascript:</p>  <pre><code>var ingredientName = ""; var regExpNumber = /\d+/; var inputRecipe = $('#addRecipe fieldset input#inputRecipeIngredients').val();  //split up the string into pieces for analysis and matching    var recStringArray = inputRecipe.split(/[ ,]+/); //need to do some kind of error checking in the future  //step through each piece of the string for(var i=0; i &lt; recStringArray.length; i++) {      //check each array item for numbers      var volumeCheck = (recStringArray[i].match(regExpNumber));      //Check each array item that isn't a number to see if it is a unit of measure     if (volumeCheck == undefined) {         $.ajax({             type: 'POST',             url: '/recipes/uomsearch/' + recStringArray[i],             data: { 'key' : recStringArray[i]}         }).done(function( response1, response2 ) {             // Check for a successful (blank) response             if (response1.length == 0) {                 console.log("didn't find UOM");                 ingredientName += response2;                 console.log(ingredientName);                            }             else {                 for(var y=0; y &lt; response1.length; y++) {                     var p = response1[y].root;                     console.log(p);                 }                }             });     }//end of uom check for non-number array items } </code></pre>  <p>My recipes.js code running on the server:</p>  <pre><code>router.post('/uomsearch/:key', function(req, res, res2) {     var db = req.db;     var collection = db.get('uomlist');     var query = req.params.key      res2 = query;         console.log(res2);     collection.find({'key': query},{},function(e,docs){         res.json(docs);     }); }); </code></pre>