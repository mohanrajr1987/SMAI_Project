<p>I am having a problem receiving files from the client. Someone suggested that I should use binary serialization to send and receive messages in stream. Can you give me ideas on how I should serialize this? I just learned about serialization not long ago so I am quite confused on how I should associate it with my program.</p>  <p>This is the client that 'should' be serialize</p>  <pre><code> public void sendthedata()         {             if (!_timer.Enabled) // If timer is not running send data and start refresh interval             {                 SendData();                 _timer.Enabled = true;             }             else // Stop timer to prevent further refreshing             {                 _timer.Enabled = false;             }         }         private List&lt;int&gt; listedProcesses = new List&lt;int&gt;();         private void SendData()         {             String processID = "";             String processName = "";             String processPath = "";             String processFileName = "";             String processMachinename = "";              listBox1.BeginUpdate();             try             {                    piis = GetAllProcessInfos();                 for (int i = 0; i &lt; piis.Count; i++)                 {                     try                     {                         if (!listedProcesses.Contains(piis[i].Id)) //placed this on a list to avoid redundancy                         {                             listedProcesses.Add(piis[i].Id);                             processID = piis[i].Id.ToString();                             processName = piis[i].Name.ToString();                             processPath = piis[i].Path.ToString();                             processFileName = piis[i].FileName.ToString();                             processMachinename = piis[i].Machinename.ToString();                             output.Text += "\n\nSENT DATA : \n\t" + processFileName + "\n\t" + processMachinename + "\n\t" + processID + "\n\t" + processName + "\n\t" + processPath + "\n";                         }                      }                     catch (Exception ex)                     {                         wait.Abort();                         output.Text += "Error..... " + ex.StackTrace;                      }                      NetworkStream ns = tcpclnt.GetStream();                     String data = "";                     data = "--++" + processFileName + " " +  processMachinename + " "  + processID + " " + processPath;                     if (ns.CanWrite)                     {                         byte[] bf = new ASCIIEncoding().GetBytes(data);                         ns.Write(bf, 0, bf.Length);                         ns.Flush();                     }                 }             }             finally             {                 listBox1.EndUpdate();             }          } </code></pre>  <p>And deserializing in the server</p>  <pre><code>private void recieveData()     {         NetworkStream nStream = tcpClient.GetStream();         ASCIIEncoding ascii = null;         while (!stopRecieving)         {             if (nStream.CanRead)             {                 byte[] buffer = new byte[1024];                 nStream.Read(buffer, 0, buffer.Length);                 ascii = new ASCIIEncoding();                 recvDt = ascii.GetString(buffer);                 /*Received message checks if it has +@@+ then the ip is disconnected*/                 bool f = false;                 f = recvDt.Contains("+@@+");                 if (f)                 {                     string d = "+@@+";                     recvDt = recvDt.TrimStart(d.ToCharArray());                     clientDis();                     stopRecieving = true;                 }                  //else if (recvDt.Contains("^^"))                 //{                 //    new Transmit_File().transfer_file(file, ipselected);                 //}                 /* ++-- shutsdown/restrt/logoff/abort*/                 else if (recvDt.Contains("++--"))                 {                     string d = "++--";                     recvDt = recvDt.TrimStart(d.ToCharArray());                     this.Invoke(new rcvData(addToOutput));                     clientDis();                 }                 /*--++ Normal msg*/                 else if (recvDt.Contains("--++"))                 {                     string d = "--++";                     recvDt = recvDt.TrimStart(d.ToCharArray());                     this.Invoke(new rcvData(addToOutput));                  }             }             Thread.Sleep(1000);         }      }      public void addToOutput()     {         if (recvDt != null &amp;&amp; recvDt != "")         {              output.Text += "\n Received Data : " + recvDt;             recvDt = null;           }      } </code></pre>  <p>Thank you.</p>