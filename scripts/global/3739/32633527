<p>I have some Client/Server application. It works correct. And I want to add the cryptography to it. I find Crypto++ library, and make some simple project using it: for DES encoding, and for RSA encoding. It contains two classes: <code>EncoderDes</code> and <code>EncoderRSA</code>:</p>  <pre><code>class EncoderDES {     public:         EncoderDES();         std::string encode(std::string plainText);         std::string decode(std::string cypher);         std::string toReadable(std::string cypher);         void doIt();     private:         AutoSeededRandomPool prng;         SecByteBlock key;         byte iv[]; };  class EncoderRSA {     public:         EncoderRSA();         void keyGeneration();         void substitutePublicKey(Integer e, Integer n);         Integer encode(std::string plainText);         std::string decode(Integer cypher);     private:         AutoSeededRandomPool prng;         RSA::PublicKey publicKey;         RSA::PrivateKey privateKey; }; </code></pre>  <p>I think, Server must generate the DES key, and pass it to each client by RSA. And in this step I have some questions:  1. How to send (and how to receive) RSA::PublicKey?  2. How to send (and how to receive) SecByteBlock?</p>  <p>(I can't send them, because I can't:  1. convert RSA::PublicKey to char*  2. convert char* to RSA::PublicKey  3. convert SecByteBlock to string.)</p>  <p>I can only convert string to SecByteBlock:</p>  <pre><code>SecByteBlock stringToKey(string decodedKey) {     SecByteBlock receivedKey(decodedKey.data(), decodedKey.size());     return receivedKey; } </code></pre>  <p>But don't sure that it's correct.</p>  <p>How to resolve this problems?</p>