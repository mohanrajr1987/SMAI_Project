<p>Has the following architecture: the client part(dll on C#) sends a certain number of images on a server(or Windows Service or Web Service), where they are processed and then server sends back a response in the form of XML file of processing results.</p>  <p>The client is simply an automated app with no interface and input / output.</p>  <p>Server. It turns the engine using multithreading (using ThreadPool) to process the images. Accordingly, when refers a new client, the server creates a new thread in which processing occurs, at the end it sends a reply to the user(xml file). The load on the server is not very big 3-20 concurrent connections.</p>  <p>So far, I can't understand what is the architecture of interaction is best suited for my case. There are several ways to implement, or to write an asynchronous sockets server on, either use WCF or just write ASP.NET application and pour it on IIS(for this option I'm leaning most).</p>  <p>Which transfer Protocol is the best to use? Do HTTP for transferring large amounts of pictures(then you can move in the direction Web Service), or should think about TCP/IP(now WCF)?</p>  <p>That's all!</p>