<p>I'm working on a small UIWebView iOS App which points to my website, i've set the viewports correctly and it looks great in safari or if i add a bookmark to my home screen</p>  <p>But for some reason when i plug it into the UIWebView everything is larger, i tried unchecking "Scale to Fit" for the UIWebView in interface builder, but that dont help</p>  <p>How can i keep the WebView to scale/show things at the same aspect of safari?</p>  <p>Code in WebSite Header:</p>  <pre><code>&lt;!DOCTYPE html&gt; &lt;html lang="en"&gt; &lt;head&gt;  &lt;script&gt; function goBack() {     window.history.back(); } &lt;/script&gt; &lt;script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"&gt;&lt;/script&gt; &lt;link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css"&gt; &lt;meta charset="UTF-8" /&gt;  &lt;title&gt;SITE TITLE&lt;/title&gt; &lt;link rel="shortcut icon" href="{$url}/favicon.ico" /&gt; &lt;link href="{$url}/{$theme_path}/{$theme_name}/style.css" rel="stylesheet" type="text/css" /&gt; &lt;meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" /&gt; &lt;meta name="HandheldFriendly" content="true" /&gt; &lt;meta name="apple-mobile-web-app-capable" content="yes" /&gt; &lt;meta name="apple-mobile-web-app-status-bar-style" content="default" /&gt; &lt;link rel="apple-touch-icon-precomposed" href="WEBAPPICON.png"/&gt; &lt;/head&gt; </code></pre>  <p>Code for UIWebView:</p>  <pre><code>// //  ViewController.m //  Webview // //  Created by Stewart Crainie on 10/02/2014. //  Copyright (c) 2014 Stewart Crainie. All rights reserved. //  #import "ViewController.h"   @interface ViewController ()  @end  @implementation ViewController @synthesize receivedData, theConnection, webSite, back, forward, stop, refresh;    - (void)viewDidLoad {       [self loadWebsite];     [super viewDidLoad];     // Do any additional setup after loading the view, typically from a nib.   }    - (void)loadWebsite {       NSString *fullURL = @"http://WEBVITEURL";     NSURL *url = [NSURL URLWithString:fullURL];     NSURLRequest *requestWebsite = [NSURLRequest requestWithURL:url];       [webSite loadRequest:requestWebsite]; }  - (void)updateButtons {     self.forward.enabled = self.webSite.canGoForward;     self.back.enabled = self.webSite.canGoBack;     self.stop.enabled = self.webSite.loading;  }  #pragma mark MBProgressHUDDelegate methods  - (void)hudWasHidden:(MBProgressHUD *)hud {     // Remove HUD from screen when the HUD was hidded     [HUD removeFromSuperview];     HUD = nil; }   -(void)stopLoading {      NSLog(@"Stop Pushed");     [HUD hide:YES];     [webSite stopLoading];   }  -(void)webView:(UIWebView *)webView didFailLoadWithError:(NSError *)error {      NSLog(@"could not load the website caused by error: %@", error);     UIAlertView *message = [[UIAlertView alloc] initWithTitle:@"Error"                                          message:[NSString stringWithFormat:@"%@", [error localizedDescription]]                                         delegate:self                                cancelButtonTitle:@"Ok"                                otherButtonTitles:nil];      [message show];     [HUD hide:YES];     [webSite stopLoading];  }   -(void)webViewDidFinishLoad:(UIWebView *)webView {       [self updateButtons];      [HUD hide:YES];     [webSite stopLoading]; }   -(void)webViewDidStartLoad:(UIWebView *)webView {       [self updateButtons];      HUD = [MBProgressHUD showHUDAddedTo:self.view animated:YES];     HUD.delegate = self;     HUD.mode = MBProgressHUDModeIndeterminate;     HUD.labelText = @"Loading...";  }  @end </code></pre>