<p>I have read tens of pages on how to save session to a database with Zend framework.</p>  <p>Like, for example: <a href="http://framework.zend.com/manual/1.12/en/zend.session.savehandler.dbtable.html" rel="nofollow">http://framework.zend.com/manual/1.12/en/zend.session.savehandler.dbtable.html</a></p>  <p>I have tried and tried, but I can't get session saved in to database.</p>  <p>The problem is this - I am a newbie when it comes to Zend framework. But I need to use an existing Zend framework web application and connect it to another web application so that if a user goes to another web application that he will automatically be logged in. I want to do this by means of a session table.</p>  <p>The Zend framework web app is build in this structure: 1.Application> zend framework  2.Process A> Application > modules</p>  <p>The bootstrap of 2. is like this: </p>  <pre><code> &lt;?php  class Bootstrap extends Zend_Application_Bootstrap_Bootstrap {        // Start the session     protected function _initSession() {          //Start zend session         Zend_Session::start();     }      // Initialize the autoloaders     protected function _initAutoload() {         $front = $this-&gt;bootstrap("frontController")-&gt;frontController;         $front-&gt;throwExceptions(false);         $modules = $front-&gt;getControllerDirectory();         $default = $front-&gt;getDefaultModule();          foreach (array_keys($modules) as $module) {             if ($module === $default) {                 continue;             }              $moduleloader = new Zend_Application_Module_Autoloader(array(                 'namespace' =&gt; ucfirst($module),                 'basePath'  =&gt; $front-&gt;getModuleDirectory($module)));         }     }      protected function _initConfig() {         $config = new Zend_Config($this-&gt;getOptions());         Zend_Registry::set('config', $config);         return $config;     }      // Add the front controller plugins     protected function _initFrontPlugins() {         $this-&gt;bootstrap("frontController");          // Get the frontcontroller instance         $front = Zend_Controller_Front::getInstance();         $front-&gt;setBaseUrl('/procurement/');          // Register the plugin         $front-&gt;registerPlugin(new anothercompany_Plugin_FrontController_LoadModule());         $front-&gt;registerPlugin(new anothercompany_Plugin_FrontController_ModuleConfig());         $front-&gt;registerPlugin(new anothercompany_Plugin_FrontController_LanguageSetup());         $front-&gt;registerPlugin(new anothercompany_Plugin_FrontController_Client_ModuleSettings());         $front-&gt;registerPlugin(new anothercompany_Plugin_FrontController_Client_Initialize());         $front-&gt;registerPlugin(new anothercompany_PluginSystem_Initialize());     }      // Store the database connection, so that we can use it everywhere     protected function _initDbAdapter() {         $this-&gt;bootstrap('db');         $db = $this-&gt;getResource('db');          // Create the firebug profiler         if($_SERVER['REMOTE_ADDR'] == '12.12.12.12') {             $profiler = new Zend_Db_Profiler_Firebug('All DB Queries');             $profiler-&gt;setEnabled(true);              // Attach the profiler to your db adapter             $db-&gt;setProfiler($profiler);         }          // Add the db instance to the registry         if($db != null) {             Zend_Registry::set('db', $db);         }         else {             throw new Exception('Cannot create database adapter');         }     }      // Initialize the action helpers     protected function _initActionHelper() {         Zend_Controller_Action_HelperBroker::addPrefix('anothercompany_Action_Helper');         Zend_Controller_Action_HelperBroker::addPath(APPLICATION_PATH .'/helpers', 'Application_Helper');     }      // Initialize the view helpers     protected function _initViewHelper() {         $this-&gt;bootstrap('layout');         $this-&gt;bootstrap('view');         $view = $this-&gt;getResource('view');         Zend_Registry::set('view', $view);          $view-&gt;addHelperPath(realpath(APPLICATION_PATH .'/../../library/anothercompany/View/Helper'), 'anothercompany_View_Helper');     }      public function _initRoutes() {         if(file_exists(APPLICATION_PATH.'/configs/routes.xml')) {             $front = Zend_Controller_Front::getInstance();             $router = $front-&gt;getRouter();             $routes = new Zend_Config_Xml(APPLICATION_PATH.'/configs/routes.xml');             $router-&gt;addConfig($routes);             $front-&gt;setRouter($router);          }     } } </code></pre>  <p>I have tried to put this code in the <code>function_initSession</code>:</p>  <pre><code>$config = array(     'name'           =&gt; 'session',     'primary'        =&gt; 'id',     'modifiedColumn' =&gt; 'modified',     'dataColumn'     =&gt; 'data',     'lifetimeColumn' =&gt; 'lifetime' );  //create your Zend_Session_SaveHandler_DbTable and //set the save handler for Zend_Session Zend_Session::setSaveHandler(new Zend_Session_SaveHandler_DbTable($config)); </code></pre>  <p>But it didn't work.</p>  <p>The database is set up in application.ini</p>  <p>Can anyone help me?</p>