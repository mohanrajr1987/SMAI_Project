<p>What I was trying to do is to create a helper class so that I can invoke it as a method. I was able to do it successfully and was able to call/invoke from my views without any problem. However when I extended the functionality of this function to get the data from table so I have implemented <code>ServiceLocatorAwareInterface</code> for creating instance of the table but it is throwing me this error.</p>  <p><code>Catchable fatal error: Argument 1 passed to FileServer\Model\Md5Table::__construct() must be an instance of Zend\Db\TableGateway\TableGateway, none given, called in E:\cynking\zend\vendor\zendframework\zendframework\library\Zend\ServiceManager\AbstractPluginManager.php on line 172 and defined in E:\myproject\module\FileServer\src\FileServer\Model\Md5Table.php on line 19</code></p>  <p>This is my helper class <strong>MyModule\src\MyModule\Helper\Md5ToId.php:</strong>       <pre><code>use Zend\View\Helper\AbstractHelper; use Zend\ServiceManager\ServiceLocatorAwareInterface; use Zend\ServiceManager\ServiceLocatorInterface; use Zend\Db\TableGateway\TableGateway;  class Md5ToId extends AbstractHelper implements ServiceLocatorAwareInterface{      protected $serviceLocator;     protected $md5;      public function __invoke($hash){          if (!$this-&gt;md5){             //var_dump($this-&gt;serviceLocator);             $this-&gt;md5 = $this-&gt;serviceLocator-&gt;get('FileServer\Model\Md5Table');             echo "got md5table";         }          return $this-&gt;md5-&gt;getIdFromHash($hash);      }      public function setServiceLocator(ServiceLocatorInterface $sl)     {         $this-&gt;serviceLocator = $sl;         return $this;     }      public function getServiceLocator()     {         return $this-&gt;serviceLocator;     }  } </code></pre>  <p><strong>MyModule\Module.php</strong></p>  <pre><code>public function getServiceConfig() {     return array(         'factories' =&gt; array(             'FileServer\Service\Data' =&gt; function ($sm){                 $data = new Data();                 $data-&gt;setServiceLocator($sm);                 return $data;             },             {... and more ....},             'FileServer\Model\Md5Table' =&gt;  function($sm) {                 //echo "getting md5table";                 $tableGateway = $sm-&gt;get('Md5TableGateway');                               $table = new Md5Table($tableGateway);                 return $table;             },             'Md5TableGateway' =&gt; function ($sm) {                 $dbAdapter = $sm-&gt;get('Zend\Db\Adapter\Adapter');                 $resultSetPrototype = new ResultSet();                 $resultSetPrototype-&gt;setArrayObjectPrototype(new Md5());                 return new TableGateway('md5', $dbAdapter, null, $resultSetPrototype);             },         ),     ); }  public function getViewHelperConfig(){     return array(         'invokables' =&gt; array(             'md5toId' =&gt; 'FileServer\Helper\Md5ToId',             'md5toHash' =&gt; 'FileServer\Helper\Md5ToHash',         )     ); } </code></pre>  <p>I am not sure why I am getting error but when I try to get instance from the controller like below I am not getting any error.</p>  <p><code>echo $this-&gt;serviceLocator-&gt;get('FileServer\Model\Md5Table')-&gt;getMd5(100)-&gt;hash;</code></p>  <p>Which confirms that I don't have any configuration issue. </p>