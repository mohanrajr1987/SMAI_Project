<p>I implementet a controller action in the maybe most unelegant way. How could this made better? Table classes are just like after <code>bin/cake bake</code>. I think the part where the Entity is created could be simplyfied very much. </p>  <p>What I'm doing: Books <em>--belongsTo--></em> Publishers  <em>&lt;--habtm--></em> Publishernumbers When adding a Book to the database, the publishernumber is extracted from the ISBN number. This number is then linked to the publisher in a habtm relation. I need this to suggest the user some publishers when typing an isbn in the form.</p>  <p>The code works for now, but in a year, only god will know what I did here. The first part is straightforward.</p>  <pre><code>public function add() {     $book = $this-&gt;Books-&gt;newEntity();     $associations = ['associated' =&gt;             [                    'Tags',                 'Publishers',                 'Publishers.Publishernumbers'             ]         ];     if ($this-&gt;request-&gt;is('post')) {         $data= $this-&gt;request-&gt;data;           $publisher = $this-&gt;Books-&gt;Publishers-&gt;get(             $this-&gt;request-&gt;data['publisher_id'],                  ['contain' =&gt; ['Publishernumbers']]         );         unset($data['publisher_id']);          $book-&gt;publisher = $publisher;      //extract group- and publishernumber from the ISBN     $this-&gt;loadComponent('Isbn.Isbn');     $split = $this-&gt;Isbn-&gt;splitIsbn($this-&gt;request-&gt;data['isbn']);     $publishernumber = $split[1].$split[2]; </code></pre>  <p>This is the part where the mess begins. I think this could be done way more elegant.</p>  <pre><code>    //check if the publisher contains already the $publishernumber     //and if not, add it to the entity     $new = true;     foreach ($book-&gt;publisher-&gt;publishernumbers as $n){         if ($n-&gt;number == $publishernumber){             $new = false;         }     }     if ($new){         $existingNumber = $this-&gt;Books-&gt;Publishers-&gt;Publishernumbers             -&gt;findByNumber($publishernumber)             -&gt;first();         if (!$existingNumber){              //publishernumber does not exist in the database             $pubnumber = $this-&gt;Books-&gt;Publishers-&gt;Publishernumbers                 -&gt;newEntity();             $pubnumber = $this-&gt;Books-&gt;Publishers-&gt;Publishernumbers                 -&gt;patchEntity($pubnumber, ['number' =&gt; $publishernumber]);             $book-&gt;publisher-&gt;publishernumbers[] = $pubnumber;          } else {              //publishernumber exists in the database              //but is not associated with the publisher             $book-&gt;publisher-&gt;publishernumbers[] = $existingNumber;         }         $book-&gt;publisher-&gt;dirty('publishernumbers', true);     }       $book = $this-&gt;Books-&gt;patchEntity($book, $data, $associations); </code></pre>  <p>Saving </p>  <pre><code>    if ($this-&gt;Books-&gt;save($book, $associations)){         Cache::delete('exlibrisBooksIndex');         $this-&gt;Flash-&gt;success(__('The book has been saved.'));         return $this-&gt;redirect(['action' =&gt; 'index']);     } else {         $this-&gt;Flash-&gt;error(__('Error.'));     } } $publishers = $this-&gt;Books-&gt;Publishers-&gt;find('list')     -&gt;order('name')     -&gt;toArray(); $this-&gt;set(compact('book', 'publishers')); $this-&gt;set('_serialize', ['book']); } </code></pre>