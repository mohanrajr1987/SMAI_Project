<p>I'm trying to load my data into a <code>WatchKit</code> table. Basically, set the text of the label in each table group cell with the array of <code>match</code>s I have.</p>  <p>I've got the data, and everything set up, but actually loading it <strong>into the table is where I'm stuck</strong>.</p>  <p><strong><code>InterfaceController</code>.swift</strong>:</p>  <pre><code>    var receivedData = Array&lt;Dictionary&lt;String, String&gt;&gt;()      var eventsListSO = Array&lt;Event&gt;()      @IBOutlet var rowTable: WKInterfaceTable!  func setupTable() {          eventsListSO = Event.eventsListFromValues(receivedData)         rowTable.setNumberOfRows(eventsListSO.count, withRowType: "rows")  // finish setting up table          for eventSOm in eventsListSO {             NSLog("SETUP M: %@", eventSOm.eventMatch)         }          for eventSOc in eventsListSO {             NSLog("SETUP C: %@", eventSOc.eventTColor)         }      }      func session(session: WCSession, didReceiveUserInfo userInfo: [String : AnyObject]) {          if let tColorValue = userInfo["TColor"] as? String, let matchValue = userInfo["Match"] as? String {             receivedData.append(["TColor" : tColorValue , "Match" : matchValue])              let eventsList = Event.eventsListFromValues(receivedData)             for event in eventsList {                 NSLog("Event Color: %@", event.eventTColor)             }              for eventM in eventsList {                 NSLog("Event Match: %@", eventM.eventMatch)             }          } else {             print("tColorValue and matchValue are not same as dictionary value")         }      } </code></pre>  <p>I was trying to do it in <code>setupTable</code> because that seemed like best place to do this, but I keep getting stuck figuring out how to correctly implement setting the <code>label</code> text.</p>  <p><em>Here is the referencing code if needed:</em></p>  <p><strong><code>RowController</code>.swift</strong>:</p>  <pre><code>class RowController: NSObject {      @IBOutlet var matchLabel: WKInterfaceLabel!     @IBOutlet var groupColor: WKInterfaceGroup!  } </code></pre>  <p><strong><code>Event</code>.swift</strong>:</p>  <pre><code>class Event {      var eventTColor:String     var eventMatch:String      init(dataDictionary:Dictionary&lt;String,String&gt;) {         eventTColor = dataDictionary["TColor"]!         eventMatch = dataDictionary["Match"]!     }      class func newEvent(dataDictionary:Dictionary&lt;String,String&gt;) -&gt; Event {         return Event(dataDictionary: dataDictionary)     }      class func eventsListFromValues(values: Array&lt;Dictionary&lt;String, String&gt;&gt;) -&gt; Array&lt;Event&gt; {         var array = Array&lt;Event&gt;()          for eventValues in values {             let event = Event(dataDictionary: eventValues)             array.append(event)         }          return array     }  } </code></pre>  <p><strong>EDIT 1:</strong> Per Tanner, this is where I'm getting an error in what I'm trying.  On <code>row?.matchLabel.setText(eventSOm.eventMatch)</code> I'm getting error "Value of type AnyObject has no member <code>matchLabel</code>.</p>  <pre><code>func setupTable() {      eventsListSO = Event.eventsListFromValues(receivedData)     rowTable.setNumberOfRows(eventsListSO.count, withRowType: "rows")      for var i = 0; i &lt; self.rowTable.numberOfRows; i++ {         var row = self.rowTable.rowControllerAtIndex(i)         //setup row here         for eventSOm in eventsListSO {             NSLog("SETUP M: %@", eventSOm.eventMatch)             row?.matchLabel.setText(eventSOm.eventMatch)         } </code></pre>  <p><strong>EDIT 2</strong>: If I try this, then I get an error on line <code>if let row = self.rowTable.rowAtIndex(i) as? RowController</code> saying "Use of undeclared identifier type RowController"</p>  <pre><code>func setupTable() {      eventsListSO = Event.eventsListFromValues(receivedData)     rowTable.setNumberOfRows(eventsListSO.count, withRowType: "rows")     for var i = 0; i &lt; self.rowTable.numberOfRows; i++ {         if let row = self.rowTable.rowAtIndex(i) as? RowController {             // Set up table here         }     } </code></pre>