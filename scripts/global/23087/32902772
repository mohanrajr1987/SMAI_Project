<p>I'm trying to use two custom cells for displaying the product information, on the first one I show the product main information and in the second one I display the comments of this product.</p>  <p>At the moment everything is linked in the StoryBoard and I have my tableview prepared for storing the comment information in the second custom cell (I have checked the requestComments() function and It's working fine but I can't make them appear.</p>  <p>Is it something related to the <strong>numberOfRowsInSection</strong>? Because I tried to SUM the products.count with the comments.count and It's showing an error.</p>  <p>It's my first time using two custom cells so I hope someone can help me.</p>  <p>Here is my code:</p>  <pre><code>import UIKit import Social  class MarcaProductoViewController: UIViewController, UITableViewDataSource, UITableViewDelegate {  @IBOutlet var productoImageView:UIImageView! @IBOutlet var tableView:UITableView!  @IBOutlet var votarFrame:UIView! @IBOutlet var votarBarra:UISlider! @IBOutlet var votarLabel:UILabel!  var productoImage:String!  var nombre:String!  var producto:Producto! var productos = [Producto]()  var mensaje:Mensaje! var mensajes = [Mensaje]()  var img:UIImage?  override func viewDidLoad() {      super.viewDidLoad()      // Set table view background color     self.tableView.backgroundColor = UIColor(red: 240.0/255.0, green: 240.0/255.0, blue: 240.0/255.0, alpha: 0.2)      // Remove extra separator     self.tableView.tableFooterView = UIView(frame: CGRectZero)      // Change separator color     self.tableView.separatorColor = UIColor(red: 240.0/255.0, green: 240.0/255.0, blue: 240.0/255.0, alpha: 0.8)      self.tableView.rowHeight = UITableViewAutomaticDimension     self.tableView.estimatedRowHeight = 88.0      requestPost()      requestComments()      tableView.reloadData() }  override func viewDidAppear(animated: Bool) {     tableView.reloadData() }  override func viewWillAppear(animated: Bool) {     super.viewWillAppear(animated)      self.navigationController?.hidesBarsOnSwipe = false     self.navigationController?.setNavigationBarHidden(false, animated: true) }  override func didReceiveMemoryWarning() {     super.didReceiveMemoryWarning()     // Dispose of any resources that can be recreated. }  func requestPost () {      let request = NSMutableURLRequest(URL: NSURL(string: "http://www.website.es/product.php")!)     request.HTTPMethod = "POST"     let postString = "name="+name     request.HTTPBody = postString.dataUsingEncoding(NSUTF8StringEncoding)     let task = NSURLSession.sharedSession().dataTaskWithRequest(request) {         data, response, error in          if error != nil {             print("error=\(error)")             return         }          self.productos = self.parseJsonData(data!)          // Reload table view         dispatch_async(dispatch_get_main_queue(), {             self.tableView.reloadData()         })     }     task.resume()      tableView.reloadData() }  func parseJsonData(data: NSData) -&gt; [Producto] {      var productos = [Producto]()      do {         let jsonResult = try NSJSONSerialization.JSONObjectWithData(data, options: NSJSONReadingOptions.MutableContainers) as? NSDictionary          // Parse JSON data         let jsonProductos = jsonResult?["lista_productos"] as! [AnyObject]         for jsonProducto in jsonProductos {              let producto = Producto()             producto.image = jsonProducto["image"] as! String             producto.name = jsonProducto["name"] as! String             producto.desc = jsonProducto["desc"] as! String              productos.append(producto)         }     }     catch let parseError {         print(parseError)     }      return productos }  func requestComments () {      //print("Hola")      let request = NSMutableURLRequest(URL: NSURL(string: "http://www.website.es/comments.php")!)     request.HTTPMethod = "POST"     let postString = "name="+name      //print(postString)      request.HTTPBody = postString.dataUsingEncoding(NSUTF8StringEncoding)     let task = NSURLSession.sharedSession().dataTaskWithRequest(request) {         data, response, error in          if error != nil {             print("error=\(error)")             return         }          let responseString = NSString(data: data!, encoding: NSUTF8StringEncoding)!         print("mensajes = \(responseString)")          self.mensajes = self.parseJsonDataComments(data!)          // Reload table view         dispatch_async(dispatch_get_main_queue(), {             self.tableView.reloadData()         })     }     task.resume()      tableView.reloadData() }  func parseJsonDataComments(data: NSData) -&gt; [Mensaje] {      var messages = [Mensaje]()      do {         let jsonResult = try NSJSONSerialization.JSONObjectWithData(data, options: NSJSONReadingOptions.MutableContainers) as? NSDictionary          // Parse JSON data         let jsonProductos = jsonResult?["messages"] as! [AnyObject]         for jsonProducto in jsonProductos {              let message = Mensaje()             message.author = jsonProducto["author"] as! String             message.message = jsonProducto["message"] as! String             message.date = jsonProducto["date"] as! String              messages.append(message)         }     }     catch let parseError {         print(parseError)     }      return message }  func numberOfSectionsInTableView(tableView: UITableView) -&gt; Int {     // Return the number of sections.     return 1 }  func tableView(tableView: UITableView, numberOfRowsInSection section: Int) -&gt; Int {      // Return the number of rows in the section.     return productos.count }  func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -&gt; UITableViewCell {      title = productos[indexPath.row].nombre      if indexPath.row == 0 {          print("11")          let cell = tableView.dequeueReusableCellWithIdentifier("CellDetail", forIndexPath: indexPath) as! ProductoTableViewCell          cell.selectionStyle = .None          if let url = NSURL(string: productos[indexPath.row].imagen) {             if let data = NSData(contentsOfURL: url) {                 self.productoImageView.image = UIImage(data: data)             }         }          cell.name.text = productos[indexPath.row].name          cell.desc.text = productos[indexPath.row].desc          cell.layoutIfNeeded()          return cell     }     else {          print("22")          let cell2 = tableView.dequeueReusableCellWithIdentifier("MostrarComentarios", forIndexPath: indexPath) as! ComentariosTableViewCell          cell2.selectionStyle = .None          cell2.author.text = mensajes[indexPath.row].author          cell2.comment.text = mensajes[indexPath.row].comments          cell2.date.text = mensajes[indexPath.row].date          cell2.layoutIfNeeded()          return cell2     } } } </code></pre>  <p><strong><em>Update:</em></strong></p>  <p>I have made the following changes:</p>  <pre><code>func numberOfSectionsInTableView(tableView: UITableView) -&gt; Int {     // Return the number of sections.     return productos.count+mensajes.count }  func tableView(tableView: UITableView, numberOfRowsInSection section: Int) -&gt; Int {      // Return the number of rows in the section.     return productos.count }  func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -&gt; UITableViewCell {      title = productos[indexPath.row].nombre      if indexPath.section == 0 {          print("11")          let cell = tableView.dequeueReusableCellWithIdentifier("CellDetail", forIndexPath: indexPath) as! ProductoTableViewCell          cell.selectionStyle = .None          if let url = NSURL(string: productos[indexPath.row].imagen) {             if let data = NSData(contentsOfURL: url) {                 self.productoImageView.image = UIImage(data: data)             }         }          cell.nombre.text = productos[indexPath.row].nombre          cell.descripcion.text = productos[indexPath.row].descripcion          cell.modo_de_empleo.text = productos[indexPath.row].modo_de_empleo          cell.marca.text = productos[indexPath.row].marca          cell.linea.text = productos[indexPath.row].linea          cell.distribuidor.text = productos[indexPath.row].distribuidor          cell.tamano.text = productos[indexPath.row].tamano          cell.precio.text = productos[indexPath.row].precio          cell.codigo_nacional.text = productos[indexPath.row].codigo_nacional          cell.layoutIfNeeded()          return cell     }     else {          let cell2 = tableView.dequeueReusableCellWithIdentifier("MostrarComentarios", forIndexPath: indexPath) as! ComentariosTableViewCell          print(mensajes[indexPath.row].mensaje)          cell2.selectionStyle = .None          cell2.comentario.text = mensajes[indexPath.row].mensaje          cell2.fecha.text = mensajes[indexPath.row].fecha          cell2.layoutIfNeeded()          return cell2     } } </code></pre>  <p>At the moment, I can display the comments perfectly, but the problem is that the messages from this product are always the same (repeated in every new comment row) I just need to change something (I don't know what exactly) to show the correct information for the messages without beeing duplicated.</p>  <p>Thanks in advance.</p>