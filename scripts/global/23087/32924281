<p>I am using <code>NSRange</code> to divide an array of 100 into 10 and storing them in array of array. I'm getting the following error when I scroll down to the last section in <code>UITableView</code> and I'm using indexed <code>UITableView</code>.</p>  <blockquote>   <p><strong>* Terminating app due to uncaught exception 'NSRangeException', reason: '*</strong> -[__NSArrayI objectAtIndex:]: index 18446744073709551615   beyond bounds [0 .. 9]'</p> </blockquote>  <p>The following is my code : </p>  <pre><code>    var tableData : NSMutableArray!     var mutA  = NSMutableArray()     var indexOfNumbers = [String]()      override func viewDidLoad() {         super.viewDidLoad()         // Do any additional setup after loading the view, typically from a nib.          tableData = [             // 100 lines of string array of different starting letter         ]          let indexNumbers = "0 10 20 30 40 50 60 70 80 90 100"         indexOfNumbers = indexNumbers.componentsSeparatedByString(" ")          for (var i = 0; i &lt; 9; i++)         {             var halfArray : NSArray!             var theRange = NSRange()              theRange.location = i*10;             theRange.length = tableData.count / 10                 halfArray = tableData.subarrayWithRange(theRange)             mutA.addObject(halfArray)         }     }      func numberOfSectionsInTableView(tableView: UITableView) -&gt; Int {         return indexOfNumbers.count     }      func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -&gt; UITableViewCell {         let cell = tableView.dequeueReusableCellWithIdentifier("cell", forIndexPath: indexPath)          cell.textLabel?.text = mutA[indexPath.section][indexPath.row] as? String          return cell     }      func tableView(tableView: UITableView, numberOfRowsInSection section: Int) -&gt; Int {         return 10     }      func sectionIndexTitlesForTableView(tableView: UITableView) -&gt; [String]? {         return indexOfNumbers     }      func tableView(tableView: UITableView, sectionForSectionIndexTitle title: String, atIndex index: Int) -&gt; Int {         let temp = indexOfNumbers as NSArray         return temp.indexOfObject(title)     } </code></pre>  <p>I have no idea of what's going on.</p>