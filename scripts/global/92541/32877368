<p>Example: <a href="http://jsfiddle.net/qonrthk1/6/" rel="nofollow">http://jsfiddle.net/qonrthk1/6/</a></p>  <pre><code>&lt;script src="https://cdn.rawgit.com/download/polymer-cdn/1.1.3/lib/webcomponentsjs/webcomponents-lite.js"&gt;&lt;/script&gt; &lt;link rel="import" href="https://cdn.rawgit.com/download/polymer-cdn/1.1.3/lib/polymer/polymer.html"&gt; &lt;link rel="import" href="https://cdn.rawgit.com/download/polymer-cdn/1.1.3/lib/paper-styles/paper-styles.html"&gt; &lt;link rel="import" href="https://cdn.rawgit.com/download/polymer-cdn/1.1.3/lib/paper-styles/color.html"&gt; &lt;link rel="import" href="https://cdn.rawgit.com/download/polymer-cdn/1.1.3/lib/paper-styles/default-theme.html"&gt; &lt;link rel="import" href="https://cdn.rawgit.com/download/polymer-cdn/1.1.3/lib/paper-ripple/paper-ripple.html"&gt; &lt;link rel="import" href="https://cdn.rawgit.com/download/polymer-cdn/1.1.3/lib/paper-behaviors/paper-inky-focus-behavior.html"&gt; &lt;link rel="import" href="https://cdn.rawgit.com/download/polymer-cdn/1.1.3/lib/iron-checked-element-behavior/iron-checked-element-behavior.html"&gt; &lt;link rel="import" href="https://cdn.rawgit.com/download/polymer-cdn/1.1.3/lib/paper-toggle-button/paper-toggle-button.html"&gt; &lt;link rel="import" href="https://cdn.rawgit.com/download/polymer-cdn/1.1.3/lib/paper-input/paper-input.html"&gt; &lt;link rel="import" href="https://cdn.rawgit.com/download/polymer-cdn/1.1.3/lib/paper-button/paper-button.html"&gt; &lt;link rel="import" href="https://cdn.rawgit.com/download/polymer-cdn/1.1.3/lib/iron-flex-layout/iron-flex-layout.html"&gt; &lt;link rel="import" href="https://cdn.rawgit.com/download/polymer-cdn/1.1.3/lib/iron-flex-layout/classes/iron-flex-layout.html"&gt; &lt;link rel="import" href="https://cdn.rawgit.com/download/polymer-cdn/1.1.3/lib/iron-flex-layout/classes/iron-shadow-flex-layout.html"&gt;  &lt;link rel="import" href="https://cdn.rawgit.com/download/polymer-cdn/1.1.3/lib/paper-dropdown-menu/paper-dropdown-menu.html"&gt; &lt;link rel="import" href="https://cdn.rawgit.com/download/polymer-cdn/1.1.3/lib/paper-menu-button/paper-menu-button.html"&gt; &lt;link rel="import" href="https://cdn.rawgit.com/download/polymer-cdn/1.1.3/libiron-a11y-keys-behavior/iron-a11y-keys-behavior.html"&gt; &lt;link rel="import" href="https://cdn.rawgit.com/download/polymer-cdn/1.1.3/lib/iron-behaviors/iron-control-state.html"&gt; &lt;link rel="import" href="https://cdn.rawgit.com/download/polymer-cdn/1.1.3/lib/iron-behaviors/iron-button-state.html"&gt; &lt;link rel="import" href="https://cdn.rawgit.com/download/polymer-cdn/1.1.3/lib/iron-icons/iron-icons.html"&gt; &lt;link rel="import" href="https://cdn.rawgit.com/download/polymer-cdn/1.1.3/lib/iron-icons/iron-icon.html"&gt; &lt;link rel="import" href="https://cdn.rawgit.com/download/polymer-cdn/1.1.3/lib/iron-selector/iron-selector.html"&gt; &lt;link rel="import" href="https://raw.githubusercontent.com/PolymerElements/iron-selector/iron-selectable.html"&gt; &lt;link rel="import" href="https://raw.githubusercontent.com/PolymerElements/iron-selector/iron-selection.html"&gt;  &lt;link rel="import" href="https://cdn.rawgit.com/download/polymer-cdn/1.1.3/lib/paper-item/paper-item.html"&gt; &lt;link rel="import" href="https://cdn.rawgit.com/download/polymer-cdn/1.1.3/lib/paper-item/paper-item-shared-styles.html"&gt;  &lt;link rel="import" href="https://cdn.rawgit.com/download/polymer-cdn/1.1.3/lib/paper-button-behavior/paper-button-behavior.html"&gt;   &lt;dom-module id="pingo-toggle"&gt; &lt;style&gt;     .line {         margin-bottom: 40px;     }      .line span {         margin-left: 24px;     } &lt;/style&gt; &lt;template&gt;       &lt;div class="line"&gt;         &lt;paper-toggle-button checked={{_working.data}}&gt;&lt;/paper-toggle-button&gt;         &lt;span&gt;{{_working.label}}&lt;/span&gt;         &lt;span&gt;{{computeBooleanToString(_working.data)}}&lt;/span&gt;     &lt;/div&gt;     &lt;paper-item&gt;{{_workingItem}}&lt;/paper-item&gt;      &lt;template is="dom-repeat" items="{{_toArray(_notWorking)}}"&gt;         &lt;div class="line"&gt;             &lt;paper-toggle-button checked={{item.value.data.checked}}&gt;&lt;/paper-toggle-button&gt;             &lt;span&gt;{{item.value.label}}&lt;/span&gt;             &lt;span&gt;{{item.value.id}}&lt;/span&gt;             &lt;span&gt;{{computeBooleanToString(item.value.data.checked)}}&lt;/span&gt;         &lt;/div&gt;     &lt;/template&gt;     &lt;paper-item&gt;{{_notWorkingItem}}&lt;/paper-item&gt;  &lt;/template&gt;  &lt;script&gt;     (function () {         Polymer({             is: 'pingo-toggle',             properties: {                 _workingItem: {                     type: String,                     notify: true,                     value: "placeholder"                 },                 _notWorkingItem: {                     type: String,                     notify: true,                     value: "placeholder"                 },                 _working: {                     type: Object,                     notify: true,                     value: {                         label: "Working Toggle",                         data: true                     }                 },                 _notWorking: {                     type: Object,                     notify: true,                     value: {                         a: {                             checked: true                         },                         b: {                             checked: false                         }                     }                 },             },             _newItemObserved: function (newValue, oldValue) {                 this._value = JSON.parse(JSON.stringify(newValue));             },             // Observers             /////////////////////////////////////////////////////////             observers: ['_notWorkingValueChanged(_notWorking.*)', '_workingValueChanged(_working.*)'],             // Smart check. only fire if we change state.             _workingValueChanged: function (changeRecord) {                 var thisElement = this;                  this._workingItem = this.computeBooleanToString(this._working.data) + Math.random();                 console.log("Working" + changeRecord.path);              },             _notWorkingValueChanged: function (changeRecord) {                 var thisElement = this;                  this._notWorkingItem = "_notWorkingItem fired" + Math.random();                  console.log("notWorking:" + changeRecord.path);              },             computeBooleanToString: function (a) {                 return a === true ? 'true' : 'false';             },             _toArray: function (obj) {                 var index = 0;                 var thisElement = this;                 this._arrayData = Object.keys(obj).map(function (key) {                     var id = "item_" + index;                     ++index;                     var val = {};                     val.data = obj[key];                     val.label = "hi:" + key;                     val.data = obj[key];                     val.id = id;                     val.original = obj.key;                     return {                         name: key,                         value: val                     };                 });                 return this._arrayData;             }         });     })(); &lt;/script&gt; </code></pre>  <p>  The problem I am seeing is that when I have a dom-repeater, where I convert an object to an array, it doesn't seem to bind properly to the paper-toggle-button value. In my jsFiddle, you can see a working simple paper-toggle-button, and on that isn't working when inside the repeater.  </p>  <p><strong><em>Goal</em></strong>: I am try to detect toggle changes that happen inside the dom-repeater.  </p>  <p><strong><em>Expected</em></strong>: I expected the this._notWorking.a.checked and this._notWorking.b.checked to be changed upon a toggle.</p>  <p>My observers    observers: ['_notWorkingValueChanged(_notWorking.<em>)', '_workingValueChanged(_working.</em>)'],</p>  <p>The _notWorkingValueChanged never gets triggered.</p>  <p>The example is pretty small, so hopefully its an obvious problem.</p>  <p>Thanks</p>