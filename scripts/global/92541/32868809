<p>I'm trying to figure out the best way to determine to which parent node an event target belongs.</p>  <p>You have a custom polymer element with 2 or more forms in it. Each form has a submit button:</p>  <pre><code>&lt;form is="iron-form" id="form1" method="post" action="/action1"&gt;     &lt;paper-button on-tap="_submitHandler"&gt;Send&lt;paper-button&gt; &lt;/form&gt; &lt;form is="iron-form" id="form2" method="post" action="/action2"&gt;     &lt;paper-button on-tap="_submitHandler"&gt;Send&lt;paper-button&gt; &lt;/form&gt; ... &lt;form is="iron-form" id="formN" method="post" action="/action3"&gt;     &lt;paper-button on-tap="_submitHandler"&gt;Send&lt;paper-button&gt; &lt;/form&gt; </code></pre>  <p>Then in the  tag you have the handler:</p>  <pre><code>_submitHandler: function(e) {     var path = Polymer.dom(e).path;     var item = null;     var form = null;     for (var i = 0; i &lt; path.length; i++) {         item = path[i];         switch (item) {             case this.$.form1:                 form = this.$.form1;                 break;             case this.$.form2:                 form = this.$.form2;                 break;             // ... N cases         }     }     if (form != null) {         form.submit()     } } </code></pre>  <p>There must be a better way to do this... What would be the right way to handle such a case?</p>  <p>I'm using Polymer 1.0</p>