<p>I'm doing a project where I have modified the  <a href="https://docs.oracle.com/javase/tutorial/networking/sockets/clientServer.html" rel="nofollow">sample Java networking code from Oracle</a> , which is a networked Knock-Knock joke application.</p>  <p>I want to have it run by itself. Here is my code for the modified KnockKnockServer :</p>  <pre><code>import java.net.*; import java.io.*;  import org.slf4j.Logger; import org.slf4j.LoggerFactory; import java.sql.Timestamp; import java.util.Date;  public class FixedMessageSequenceServer extends Thread {    private static final Logger logger = LoggerFactory.getLogger("FixedMessageSequenceServer");      public static void main(String[] args) throws IOException  , InterruptedException {          logger.debug("This is a DEBUG message in Server ");         int jokeLocation;            ServerSocket serverSocket = null;          try {             serverSocket = new ServerSocket(4444);         } catch (IOException e) {             System.err.println("Could not listen on port: 4444.");             System.exit(1);         }          Socket clientSocket = null;         try {             clientSocket = serverSocket.accept();          } catch (IOException e) {             System.err.println("Accept failed.");             System.exit(1);         }          PrintWriter out = new PrintWriter(clientSocket.getOutputStream(), true);          BufferedReader in = new BufferedReader(                 new InputStreamReader(                 clientSocket.getInputStream()));         String inputLine, outputLine;         FixedMessageSequenceProtocol kkp = new FixedMessageSequenceProtocol(1);          outputLine = kkp.processInput(null);         out.println(outputLine);           try{          while ((inputLine = in.readLine()) != null) {              System.out.println(inputLine);              outputLine = kkp.processInput(inputLine);              out.println(outputLine);              if (outputLine.equals("Bye."))                 break;         }         }catch(SocketException so) {           try {          String[] command = {"C://Users//Dropbox//Thesis//Misc_Stuff//Java_Code//FixedMessageSequence_code//ClientBatchFile.bat"};  //args[0] ... CreateTexts          ProcessBuilder pb = new ProcessBuilder(command);          pb.redirectErrorStream(true);          Process exec = pb.start();             BufferedReader br = new BufferedReader(new InputStreamReader(exec.getInputStream()));          String text = null;          while ((text = br.readLine()) != null) {              System.out.println(text);          }           System.out.println("Process exited with " + exec.waitFor());       } catch (IOException  exp ) {            exp.printStackTrace(); }      }          out.close();         in.close();         clientSocket.close();         serverSocket.close();     } } </code></pre>  <p>And the following is my client-side :</p>  <pre><code>public class FixedMessageSequenceClient {    private static final Logger logger = LoggerFactory.getLogger("FixedMessageSequenceClient");    static String KKJokes[] =  { "Who's there?", "Turnip who?", "y",                                 "Who's there?", "Little Old Lady who?", "y",                                 "Who's there?" , "Doctor who?", "y",                                 "Who's there?", "Teacher who?", "y",                                "Who's there", "Dog who?", "y",                                 "Who's there?", "Firefighter who?", "y",                                 "Who's there?", "Zoologist who?", "y",                                 "Who's there?", "Atch who?", "y",                                 "Who's there?", "Who who", "y",                                 "Who's there?", "Who who", "y"};    public static void main(String[] args) throws IOException {          logger.debug("This is a DEBUG message in Client-Side");      int startPosition = 0;          try {       Scanner scan = new Scanner(new File ("somenumber.txt"));           while(scan.hasNext()) {             startPosition = Integer.parseInt(scan.nextLine());             System.out.println("The start position is : " + startPosition + "! ");           }          } catch (Exception io) {}          Socket kkSocket = null;         PrintWriter out = null;         BufferedReader br = null;      try {       kkSocket = new Socket("localhost", 4444);       out = new PrintWriter(kkSocket.getOutputStream(), true);       br = new BufferedReader( new InputStreamReader ( kkSocket.getInputStream()  ));           for (int i = startPosition; i &lt; KKJokes.length ; i++) {         try {              Thread.sleep(1000);        }         catch(Exception e){              e.printStackTrace();          }          out.println(KKJokes[i % KKJokes.length ]);          String fromServer = br.readLine();           System.out.println ( fromServer )  ;          }        out.println("Bye");        System.out.println ("Bye" );        out.close();       kkSocket.close();       } catch ( IOException io ){        System.err.println("Calling IO . toString " + io.toString());          System.exit(1);     }         } </code></pre>  <p>Finally, I modified the Protocol.java class to be able to take-in the joke-position:</p>  <pre><code>public class FixedMessageSequenceProtocol {      int currentJoke;       public FixedMessageSequenceProtocol (int step) {         this.currentJoke = step;     }      private static final int WAITING = 0;     private static final int SENTKNOCKKNOCK = 1;     private static final int SENTCLUE = 2;     private static final int ANOTHER = 3;      private static final int NUMJOKES = 10;      private int state = WAITING;     // private int currentJoke = 0;      private String[] clues = { "Turnip", "Little Old Lady", "Doctor",                                "Teacher", "Dog",  "Firefighter",                                 "Zoologist",  "Atch", "Who", "Who" };  // 10 Items     private String[] answers = { "Turnip the heat, it's cold in here!",                                  "I didn't know you could yodel!",                                  "Is there an owl doctor?",                                  "Teacher who says do ur HW please",                                  "Dog who runs",                                  "Firefighter who saves people",                                  "Zoologist who discovers",                                  "Bless you!",                                  "Is there an owl in here?",                                  "Is there an echo in here?" };      public String processInput(String theInput) {              String theOutput = null;              if (state == WAITING) {                 theOutput = "Knock! Knock!";                 state = SENTKNOCKKNOCK;             } else if (state == SENTKNOCKKNOCK) {                 if (theInput.equalsIgnoreCase("Who's there?")) {                     theOutput = clues[currentJoke];                     state = SENTCLUE;                 } else {                     theOutput = "You're supposed to say \"Who's there?\"! " +                     "Try again. Knock! Knock!";                 }             } else if (state == SENTCLUE) {                 if (theInput.equalsIgnoreCase(clues[currentJoke] + " who?")) {                     theOutput = answers[currentJoke] + " Want another? (y/n)";                     state = ANOTHER;                 } else {                     theOutput = "You're supposed to say \"" +                      clues[currentJoke] +                      " who?\"" +                      "! Try again. Knock! Knock!";                     state = SENTKNOCKKNOCK;                 }             } else if (state == ANOTHER) {                 if (theInput.equalsIgnoreCase("y")) {                     theOutput = "Knock! Knock!";                     if (currentJoke == (NUMJOKES - 1))                         currentJoke = 0;                     else                         currentJoke++;                     state = SENTKNOCKKNOCK;                 } else {                     theOutput = "Bye.";                     state = WAITING;                 }             }             return theOutput;     } </code></pre>  <p>My issue is that when I run my code, the order is all messed up. Here is how it looks when output :</p>  <pre><code>The start position is : 3! Knock! Knock! Little Old Lady I didn't know you could yodel! Want another? (y/n) Knock! Knock! Doctor Is there an owl doctor? Want another? (y/n) Knock! Knock! Teacher Teacher who says do ur HW please Want another? (y/n) Knock! Knock! You're supposed to say "Who's there?"! Try again. Knock! Knock! You're supposed to say "Who's there?"! Try again. Knock! Knock! You're supposed to say "Who's there?"! Try again. Knock! Knock! Dog You're supposed to say "Dog who?"! Try again. Knock! Knock! You're supposed to say "Who's there?"! Try again. Knock! Knock! Dog You're supposed to say "Dog who?"! Try again. Knock! Knock! </code></pre>  <p>I'm not seeing where my bug is in my code at the moment. It is repeating the line  <code>"You're supposed to say "Who's there?"! Try again. Knock! Knock!"</code> .  I think maybe it's a timing issue, since it seems to work Ok the first few times.</p>  <p>any tips appreciated, thanks</p>