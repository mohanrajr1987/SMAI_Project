<p>My project is targeted to SDK 23, and from now on, as far as I know, I have to use <code>HttpURLConnection</code> instead of <code>HttpClient</code> to make post requests, but I keep getting <code>501</code> response code from my webservice (I'm pretty sure it's fully functional, I have no doubt) when making post requests to store users in a remote mysql database. Here follows the main connection code:</p>  <pre><code>class DatabaseConnector extends AsyncTask&lt;String, Void, String&gt; {     private final String CONNECTION_URL = "webservice_address";      @Override     protected String doInBackground(String... params) {         String response = "initial value";          try {             URL url = new URL(CONNECTION_URL);              HttpURLConnection con = (HttpURLConnection) url.openConnection();             con.setDoOutput(true);             con.setDoInput(true);             con.setUseCaches(false);             con.setRequestProperty("Content-Type", "application/json");             con.setRequestProperty("Accept", "application/json");             con.setReadTimeout(10000);             con.setConnectTimeout(15000);             con.setRequestMethod("POST");              JSONObject json = new JSONObject();              json.put("query", params[0]);              JSONObject conn = new JSONObject();             conn.put("database", "database");             conn.put("hostname", "hostname");             conn.put("password", "password");             conn.put("username", "username");             conn.put("port", "port");              json.put("conn", conn.toString());              OutputStreamWriter wr = new OutputStreamWriter(con.getOutputStream());             wr.write(json.toString());             wr.flush();             wr.close();              con.connect();              //display what returns the POST request              StringBuilder sb = new StringBuilder();             int HttpResult = con.getResponseCode();              System.out.println("Response CODE: "+ con.getResponseCode());              if (HttpResult == HttpURLConnection.HTTP_OK) {                 System.out.println("Passed1");                 BufferedReader br = new BufferedReader(new InputStreamReader(con.getInputStream(), "utf-8"));                  while ((response = br.readLine()) != null) {                     sb.append(response + "\n");                 }                  br.close();                  System.out.println("E: " + sb.toString());                  response = sb.toString();             } else {                 System.out.println("E2: "+con.getResponseMessage());                 response = "Error1: "+con.getResponseMessage();             }         } catch (Exception e) {             response = "Error2: "+e.toString();         }          return response;     } } </code></pre>  <p>And in my fragment I make the network calls:</p>  <pre><code>try {     String result = new DatabaseConnector().execute("SELECssT 1").get();     Toast.makeText(ContentActivity.this, "Result: "+result, Toast.LENGTH_LONG).show(); } catch (Exception ex) {     Toast.makeText(ContentActivity.this, "Error3: "+ex.toString(), Toast.LENGTH_LONG).show(); } </code></pre>  <p>Nevermind that wrong sql statement, it's meant to be like that, I want the webservice to echo back that syntax error. I have tried many stuff, codes, examples, but it doesn't seem to work. </p>  <p><strong>The point is: I keep getting error code <em>501 Not Implemented</em>. Why? And how can I fix that?</strong></p>  <p><strong>EDIT:</strong></p>  <p>Any tips or comments on how to improve the way I make network calls on android is welcome, I'm pretty new to that. I'm using a Async call but somehow it's still executing in the main thread, cause the debugger complains:</p>  <pre><code>09-25 19:17:32.714  28853-28853/br.com.developer.package I/Choreographerï¹• Skipped 80 frames!  The application may be doing too much work on its main thread. </code></pre>  <p>Thank you all.</p>