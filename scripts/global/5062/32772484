<p>I am trying to copy the data of a pointer to a structure but am having issues. I commented where it crashes the program and where i am interacting with the pointer. What am I doing wrong?</p>  <pre><code>#include &lt;Windows.h&gt; #include &lt;WinNT.h&gt; #include &lt;SDKDDKVer.h&gt; #include &lt;stdio.h&gt; #include &lt;iostream&gt; #include &lt;vector&gt;  #include "NtStructs.h"  struct Resource {     WORD Id;     DWORD Name;     DWORD NameIsString;     DWORD OffsetToData;     PIMAGE_RESOURCE_DATA_ENTRY DataEntry; };  std::vector&lt;Resource&gt; listResources;  PBYTE GetBaseAddress() {     return static_cast&lt;LPBYTE&gt;(NtCurrentTeb()-&gt;Peb-&gt;ImageBaseAddress); }  void DumpMyResources() {     // Get Self     PBYTE data                              = reinterpret_cast&lt;PBYTE&gt;(reinterpret_cast&lt;HMODULE&gt;(GetBaseAddress()));      // Get The DOS Header     PIMAGE_DOS_HEADER IDH                   = reinterpret_cast&lt;PIMAGE_DOS_HEADER&gt;(data);      // Get The NT Header Using 'e_lfanew' As A Pointer To The NT Header     PIMAGE_NT_HEADERS INH                   = reinterpret_cast&lt;PIMAGE_NT_HEADERS&gt;(data + IDH-&gt;e_lfanew);      // Get The Resource Directory Using NT Header -&gt; Optional Header -&gt; Data Directory     PIMAGE_RESOURCE_DIRECTORY IRD           = reinterpret_cast&lt;PIMAGE_RESOURCE_DIRECTORY&gt;(data + INH-&gt;OptionalHeader.DataDirectory[IMAGE_DIRECTORY_ENTRY_RESOURCE].VirtualAddress);      // Convert Resource Directory To PBYTE     PBYTE resData                           = reinterpret_cast&lt;PBYTE&gt;(IRD);      // Entry Point To Directory     PIMAGE_RESOURCE_DIRECTORY_ENTRY IRDE    = reinterpret_cast&lt;PIMAGE_RESOURCE_DIRECTORY_ENTRY&gt;(IRD + 1);       // Loop All Resource Directories     for (int i = 0; i &lt; IRD-&gt;NumberOfIdEntries; i++)     {         // Find Directory We Want (Which Is 10 Because We Are Only Interested In RT_RCDATA)         if (IRDE[i].Id == 10)         {             // Enter This Directory             IRD = reinterpret_cast&lt;PIMAGE_RESOURCE_DIRECTORY&gt;(resData + IRDE[i].OffsetToDirectory);             IRDE = reinterpret_cast&lt;PIMAGE_RESOURCE_DIRECTORY_ENTRY&gt;(IRD + 1);              for (int j = 0; j &lt; IRD-&gt;NumberOfIdEntries; j++)             {                 Resource hResource;                  hResource.Id            = IRDE[j].Id;                 hResource.Name          = IRDE[j].Name;                 hResource.NameIsString  = IRDE[j].NameIsString;                 hResource.OffsetToData  = IRDE[j].OffsetToData;                  // This line needs to be fixed. I dont want a pointer, I want to copy the data from pointer to struct.                 hResource.DataEntry = reinterpret_cast&lt;PIMAGE_RESOURCE_DATA_ENTRY&gt;(resData + IRDE-&gt;OffsetToData);                  listResources.push_back(hResource);             }         }      } }  int main() {     DumpMyResources();      for (auto hRes : listResources)     {         printf("[Found] ID: %i\n",                  hRes.Id);         printf("[Found] Name: %ld\n",               hRes.Name);         printf("[Found] NameIsString: %ld\n",       hRes.NameIsString);         printf("[Found] OffsetToData: %#X\n",       hRes.OffsetToData);          // The output(s) below cause program to crash         printf("[Found] Size: %ld\n",               hRes.DataEntry-&gt;Size);         printf("[Found] CodePage: %ld\n",           hRes.DataEntry-&gt;CodePage);         printf("[Found] OffsetToData: %#X\n",       hRes.DataEntry-&gt;OffsetToData);         printf("[Found] Reserved: %ld\n",           hRes.DataEntry-&gt;Reserved);          printf("\n");     } } </code></pre>  <p>How can I copy the data from where the pointer points to to the struct?</p>