<pre><code>// main.cpp containing Class, Prototype, and Main Function  #include &lt;iostream&gt;   using namespace std;  class MyClass { public:     void printMsg();  };  void MyClass::printMsg() {     cout &lt;&lt; "success" &lt;&lt; endl;  }  int main() {   MyClass object;    object.printMsg();    return 0; }  //New .h file   class MyClass { public:     void printMsg(); };  //New .cpp file  #include &lt;iostream&gt;  using namespace std;  class MyClass { public:     void printMsg(); };  void MyClass::printMsg() {     cout &lt;&lt; "success" &lt;&lt; endl; }  int main() {   MyClass object;    object.printMsg();    return 0; }  // main.cpp  #include &lt;iostream&gt; #include "MyClass.h"  using namespace std;  int main() {   MyClass object;     object.printMsg();    return 0; } </code></pre>  <p>The fist .cpp file runs perfectly. When I try to extract the class and prototype I receive the following error message:</p>  <p>Undefined symbols for architecture x86_64: "MyClass::printMsg()", referenced from:  _main in main-11e326.o  ld: symbol(s) not found for architecture x86_64  clang: error: linker command failed with exit code 1 (use -v to see            invocation) [Finished in 1.7s with exit code 1]*/</p>