<p>okay hi  Here is a quick and straight to the point example of the problem.</p>  <pre><code>public class MyTestClass {      private static float FloatField;      public static float MethodA( float yourFloat)     {         FloatField = yourFloat / 10 * 0.125f;         return FloatField;     }      public void SomeOther_Non_Static_Method()     {      } }  public class ClassA {     float FloatA;     void Running()     {      FloatA =  MyTestClass.MethodA(1.2f);      } }  public class ClassB {     float FloatB;     void Running()     {         FloatB = MyTestClass.MethodA(8.4f);      } } </code></pre>  <p>As you can tell , <code>FloatField</code> will be assigned a value by <code>MyTestClass.MethodA</code> in <code>ClassA</code> and <code>ClassB</code> simultaneously. Thus overriding the values set be either.</p>  <p>I want it so that no overiding takes place .</p>  <p>Couple things to point out . The float Method in <code>MyTestClass</code> must <strong>remain</strong> static. The structure of <code>MethodA</code> in <code>MyTestClass</code> must remain unchanged </p>  <p>I don't want to believe that his is the end of the line and that doing this is completely impossible right now . I think that there must be a way . If you have any ideas please share.</p>