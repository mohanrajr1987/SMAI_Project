<p>While attempting to use the <a href="https://github.com/tpitale/legato/wiki/OAuth2-and-Google#application-code" rel="nofollow">Legato gem</a> with <a href="https://developers.google.com/console/help/new/?csw=1#serviceaccounts" rel="nofollow">service accounts</a>, we're receiving an error from Google <code>Authorization failed. Server message: { "error" : "invalid_grant” }</code>.</p>  <pre><code>def token   OAuth2::AccessToken.new(oauth_client, client_authorization.access_token,     expires_in: 1.hour   ) end  def oauth_client   OAuth2::Client.new("", "", {     authorize_url: "https://accounts.google.com/o/oauth2/auth",     token_url: "https://accounts.google.com/o/oauth2/token",   }) end  def client_authorization   @_client_authorization ||= client.authorization = service_account.authorize end  def service_account   Google::APIClient::JWTAsserter.new({{ secret email address }},                                      "https://www.googleapis.com/auth/analytics.readonly",                                      key) end  def key   Google::APIClient::KeyUtils.load_from_pem({{ secret keyfile path }}, {{ not so secret keyfile passphrase }}) end  def client   Google::APIClient.new(     application_name: {{ app name }},     application_version: 1,   ) end </code></pre>  <p>We know a few things:</p>  <ol> <li>The keyfile/pass are correctly working. If they were not, we’d see "Invalid keyfile or passphrase”.</li> <li>The code works in development (consistently and as expected)</li> </ol>  <p>Hypothesized issues:</p>  <ol> <li>Can we only generate one grant (per hour) for the service account? </li> <li>Do we need to somehow share the grant between the servers?</li> <li>Do we need to manually fetch a token and use it instead?</li> <li>Is there an IP restriction somewhere that doesn’t apply to localhost?</li> </ol>