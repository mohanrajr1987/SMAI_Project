<p>For authenticating youtube api from an electron app, this is the code I run in the renderer process</p>  <pre><code>      var authWindow = new BrowserWindow({ width: 800, height: 600, show: false, 'node-integration': false });     var authUrl = oauth2Client.generateAuthUrl( {access_type: 'offline',scope: SCOPE} );     //console.log(authUrl);     authWindow.loadUrl(authUrl);     authWindow.show();      // Handling response from the authorization window     authWindow.webContents.on('did-get-redirect-request' , function(event,oldUrl,newUrl){         console.log(oldUrl);         console.log(newUrl);         console.log(qs.extract(newUrl));         var code = qs.parse(qs.extract(newUrl)).code;         console.log(code)         oauth2Client.getToken(code,function(err,tokens){             if(!err){                 alert("no error");                 oauth2Client.setCredentials(tokens);                 authWindow.close();             }             else{                 alert(err);             }         });      });  </code></pre>  <p>Then a prompt appears for youtube authentication. After authorizing the application, it <code>oauth2Client.getToken(_,_)</code> returns error to the callback function. The error message that is shown in the alert prompt is <code> Error: tunneling socket could not be established, cause=write EPROTO </code> Although I can't see how this could effect the process, for the sakke of information, I get internet from a proxy server.</p>