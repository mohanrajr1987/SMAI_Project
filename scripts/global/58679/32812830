<p>I am trying to implement a server with spring-boot and spring-oauth2. When I send a request to the server, I am hoping to receive an access_token for an user but the server returns an error. My database has three tables: a User's table with user: username=yyy and password=xxxx, a Role's Table with the role=USER and i UserRole Table: a mapping from for the two tables (only the ids, a manytomany relationship).</p>  <p>My ServerConfiguration:</p>  <pre><code>private static final String RESOURCE_ID = "restservice";      @Configuration     @EnableResourceServer     protected static class ResourceServerConfiguration extends ResourceServerConfigurerAdapter {          @Override         public void configure(ResourceServerSecurityConfigurer resources) {             // @formatter:off             resources.resourceId(RESOURCE_ID);             // @formatter:on         }          @Override         public void configure(HttpSecurity http) throws Exception {             // @formatter:off             http.authorizeRequests()                 .antMatchers("/users")                 .hasRole("ADMIN")                 .antMatchers("/test").authenticated();             // @formatter:on         }      }      @Configuration     @EnableAuthorizationServer     protected static class AuthorizationServerConfiguration extends AuthorizationServerConfigurerAdapter {          private TokenStore tokenStore = new InMemoryTokenStore();         @Autowired         private CustomUserDetailsService customUserDetailsService;          @Autowired         private AuthenticationManager authenticationManager;          @Override         public void configure(AuthorizationServerEndpointsConfigurer endpoints) throws Exception {             // @formatter:off             endpoints                 .tokenStore(tokenStore)                 .authenticationManager(authenticationManager)                 .userDetailsService(customUserDetailsService);             // @formatter:on          }          @Override         public void configure(ClientDetailsServiceConfigurer clients) throws Exception {             // @formatter:off             clients.inMemory()                 .withClient("clientapp")                 .authorizedGrantTypes("password")                 .authorities("USER")                 .scopes("read")                 .resourceIds(RESOURCE_ID)                 .secret("123456");             // @formatter:on         }          @Bean         @Primary         public DefaultTokenServices tokenServices() {             DefaultTokenServices tokenServices = new DefaultTokenServices();             tokenServices.setSupportRefreshToken(true);             tokenServices.setTokenStore(this.tokenStore);             return tokenServices;         }     } </code></pre>  <p>My WebsecurityConfigurator:</p>  <pre><code>@Autowired     private CustomUserDetailsService customUserDetailsService;      @Override     protected void configure(AuthenticationManagerBuilder auth) throws Exception {          auth.userDetailsService(customUserDetailsService);     }      @Override     @Bean     public AuthenticationManager authenticationManagerBean() throws Exception {         return super.authenticationManagerBean();     } </code></pre>  <p>and my customuserdetailsService:</p>  <pre><code>private final UserService userService;      @Autowired     public CustomUserDetailsService(UserService userService) {         this.userService = userService;     }      @Override     public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {         User user = userService.login(username);         if (user == null)             throw new UsernameNotFoundException(String.format("User %s does not exist!", username));         return new UserRepositoryUserDetails(user);     }      private final static class UserRepositoryUserDetails extends User implements UserDetails {          private static final long serialVersionUID = 1L;          private UserRepositoryUserDetails(User user) {             super(user);         }          @Override         public Collection&lt;? extends GrantedAuthority&gt; getAuthorities() {             return getRoles();         }          @Override         public String getUsername() {             return getUsername();         }          @Override         public boolean isAccountNonExpired() {             return true;         }          @Override         public boolean isAccountNonLocked() {             return true;         }          @Override         public boolean isCredentialsNonExpired() {             return true;         }          @Override         public boolean isEnabled() {             return true;         }     } </code></pre>  <p>When I send this request:</p>  <pre><code>curl -vu clientapp:123456 -X POST http://localhost:8080/oauth/token -H 'Content-Type: application/x-www-form-urlencoded' -d 'grant_type=password&amp;password=xxx&amp;username=yyy&amp;scope=read&amp;client_secret=123456&amp;client_id=clientapp' </code></pre>  <p>Then I get:</p>  <pre><code> Hostname was NOT found in DNS cache *   Trying 127.0.0.1... * Connected to localhost (127.0.0.1) port 8080 (#0) * Server auth using Basic with user 'clientapp' &gt; POST /oauth/token HTTP/1.1 &gt; Authorization: Basic xxxxxx== &gt; User-Agent: curl/7.35.0 &gt; Host: localhost:8080 &gt; Accept: */* &gt; Content-Type: application/x-www-form-urlencoded &gt; Content-Length: 100 &gt;  * upload completely sent off: 100 out of 100 bytes &lt; HTTP/1.1 404 Not Found * Server Apache-Coyote/1.1 is not blacklisted &lt; Server: Apache-Coyote/1.1 &lt; Content-Type: text/html;charset=utf-8 &lt; Content-Language: en &lt; Content-Length: 1016 &lt; Date: Sun, 27 Sep 2015 20:51:06 GMT &lt;  * Connection #0 to host localhost left intact &lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;title&gt;Apache Tomcat/8.0.20 - Error report&lt;/title&gt;&lt;style type="text/css"&gt;H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}.line {height: 1px; background-color: #525D76; border: none;}&lt;/style&gt; &lt;/head&gt;&lt;body&gt;&lt;h1&gt;HTTP Status 404 - /oauth/token&lt;/h1&gt;&lt;div class="line"&gt;&lt;/div&gt;&lt;p&gt;&lt;b&gt;type&lt;/b&gt; Status report&lt;/p&gt;&lt;p&gt;&lt;b&gt;message&lt;/b&gt; &lt;u&gt;/oauth/token&lt;/u&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;description&lt;/b&gt; &lt;u&gt;The requested resource is not available.&lt;/u&gt;&lt;/p&gt;&lt;hr class="line"&gt;&lt;h3&gt;Apache Tomcat/8.0.20&lt;/h3&gt;&lt;/body&gt;&lt;/html&gt; </code></pre>  <p>Can someone pleasenhelp me? Thanks</p>