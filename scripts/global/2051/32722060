<p>So for the past few months I have been developing the 'login functionality' of my Angular apps like this. The user logs in and if the credentials are correct, the REST API returns a token. I take that token and store it as a cookie:</p>  <pre><code>$cookies.put('authorisation', data['token']); </code></pre>  <p>Whenever I call the $http service, I submit the authorisation cookie as a header and it authorises the http request. Then on the controller of each view I add:</p>  <pre><code>if (!$cookies.get('authorisation')) {     $location.path('/login'); } </code></pre>  <p>So if the cookie doesn't exist, the user is automatically kicked to the login screen. </p>  <p>This has worked for me just fine up until now but I can't help but feel that it is not the 'correct' way of doing things. Could anyone shed a little light on what the best practice method for this could be? And perhaps why what I'm doing is 'wrong'? </p>