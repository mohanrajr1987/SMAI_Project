<p>please let me introduce the issue, that I think it could be a very common one:</p>  <ol> <li><p>I want to store an android application data in a common storage system for all the users of that application. You can think of storing records for an android game for example where every player can see the other players records but he is only able to modify his own record.</p></li> <li><p>I've choosen to create a REST api java based and to use google app engine to host it and use google cloud storage available from GAE to store the data.  Its just a simple web application without any web page at all, just the REST url's.</p></li> <li><p>Regarding to security, there are two mayor concerns here:</p></li> </ol>  <p>3.1. The only one application authorized to use such REST api should be the given android application, it must be 100% secure so just the application can have access, so no decompilation or similar hacking of the apk could lead to someone having access to the REST api.</p>  <p>3.2. It could be convinient to have access to user data such as phone number or email address from the server without the need of asking the user for it. Kind of logging using a google account.</p>  <p>Any of the two 3.1 or 3.2 could be enought by itself to feel the application and REST api as safe enought.</p>  <p>I've readed a ton of posts regarding GAE credentials and/or Oauth2 but still searching for a simple tutorial or a good explanation of a similar design application securing. I'm pretty sure this architecture is pretty common in almost every single android app wich stores user data in a common place.</p>  <p>Thanks a lot.</p>