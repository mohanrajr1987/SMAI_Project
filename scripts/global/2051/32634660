<p>I need to create a custom authentication/authorization on an existing WCF service, which should be per-method: some methods should force user to log in, and other should allow anonymous usage. The service is implemented as singleton.</p>  <p>To do so, I want to do the following:</p>  <ul> <li>enable sessions with default behaviour, so each of the existing service methods will be initiating session in case it doesn't exist;</li> <li>add login(userName, password) method, which will keep a successful login artefact in a wrapper around <code>Dictionary&lt;&gt;</code>, with current session id used as a key;</li> <li>add <code>logout()</code> method which closes the session and removes the artefact from the dictionary;</li> <li>add sessions monitor which will use <code>Dictionary&lt;SessionId, WeakReference&lt;OperationContext.Current&gt;&gt;</code> to drop sessions, for which the <code>logout()</code> method was not called. The monitor will be executed each time a new session is added.</li> </ul>  <p>There are two questions though:</p>  <ol> <li>Is there a simpler method to achieve per-method auth?</li> <li>Are there any problems with this approach?</li> </ol>