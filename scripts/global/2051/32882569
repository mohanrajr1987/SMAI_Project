<p>So, I want to use Plus.me or lets say userinfo.profile scope with Google Cloud Endpoints with python as a backend.</p>  <p><em>Server Configuration:</em></p>  <pre><code>            @endpoints.api( name='sidebar', version='v1',# auth=AUTH_CONFIG,             allowed_client_ids=[WEB_CLIENT_ID,                                 ANDROID_CLIENT_ID,                                 endpoints.API_EXPLORER_CLIENT_ID],             audiences=[ANDROID_AUDIENCE],             scopes=[endpoints.EMAIL_SCOPE, "https://www.googleapis.com/auth/plus.me"])             class Sidebar(remote.Service): </code></pre>  <p>Does anybody have an idea how to send the appropriate scope from android client? All I know about setting up the android client is:</p>  <p><em>Android Client Configuration:</em></p>  <pre><code>String WEB_CLIENT_ID = "xxxxxxxxxx-bbbbbbbbbbbbbbbbbbbbbbbbb.apps.googleusercontent.com"; GoogleAccountCredential credential = GoogleAccountCredential.usingAudience(             mContext, AUDIENCE);  credential.setSelectedAccountName(accountName); Sidebar.Builder api = new Sidebar.Builder(AndroidHttp.newCompatibleTransport(), new GsonFactory(), credential); api.setRootUrl(mRootUrl); </code></pre>  <p>So, using this configuration doesnt work. get_current_user() returns None and there is an error in the server logs: </p>  <p><em>"Oauth framework user didn't match oauth token user."</em></p>  <p>If I remove the "<a href="https://www.googleapis.com/auth/plus.me" rel="nofollow">https://www.googleapis.com/auth/plus.me</a>" scope then the get_current_user() returns the user.</p>  <p>This thing is expected as I am not supplying a token for this scope or the scope itself from android client. So, How can I get this working? What changes do I need to do in the <strong>android client?</strong> </p>