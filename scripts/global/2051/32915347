<p>I am using ServiceStack with Redis to store sessions. Session expiry is set on a per user basis. It's all is working well expect for these specific service methods, which are having a side effect of changing the TTL (Time to live) back to the default of 2 weeks when I use <code>[RequiredRole(Roles.Admin)]</code>, but just using <code>[Authenticate]</code> isn't any problem.</p>  <pre><code>using Repositories.DTO; using ServiceStack; using ServiceStack.Auth;  namespace WebApi.Controllers {     public class RegistrationService : RegisterService     {         private readonly RegistrationRepo _repo;          public RegistrationService(RegistrationRepo repo)         {             _repo = repo;         }          [Authenticate] // No problems         public object Put(RegistrationRequest registration)         {             var result = _repo.UpdateUser(registration.user);              return new             {                 user = result             };         }          [Authenticate]         [RequiredRole(Roles.Admin)] //Problems. Expiry resets to 2 weeks         public object Post(RegistrationRequest registration)         {             var result = _repo.UpdateUser(registration.user);              return new             {                 user = result             };         } </code></pre>  <p>I initially set the <code>SessionExpiry</code> in the <code>OnAuthenticated</code> of an custom <code>CredentialsAuthProvider</code> class, and don't manually change the <code>SessionExpiry</code> any other place in the app (no <a href="http://teadriven.me.uk/2013/02/14/sliding-sessions-in-service-stack/" rel="nofollow">sliding session expirations</a> at this time - pun intended).</p>  <p>Any help would be greatly appreciated!</p>