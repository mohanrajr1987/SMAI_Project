<p>I'm using Zend Framework 2 and trying to create console command for filling db config</p>  <pre><code>php public/index.php env install stable --dbu=root --dbp=root --dbn=panel100     PHP Fatal error:  Uncaught exception 'PDOException' with message 'SQLSTATE[28000] [1045] Access denied for user 'username'@'localhost' (using password: YES)' in /home/seyfer/www/site.loc/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:43     Stack trace:     #0 /home/seyfer/www/site.loc/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php(43): PDO-&gt;__construct('mysql:host=loca...', 'username', 'password', Array)     #1 /home/seyfer/www/site.loc/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOMySql/Driver.php(45): Doctrine\DBAL\Driver\PDOConnection-&gt;__construct('mysql:host=loca...', 'username', 'password', Array)     #2 /home/seyfer/www/site.loc/vendor/doctrine/dbal/lib/Doctrine/DBAL/Connection.php(360): Doctrine\DBAL\Driver\PDOMySql\Driver-&gt;connect(Array, 'username', 'password', Array)     #3 /home/seyfer/www/site.loc/vendor/doctrine/dbal/lib/Doctrine/DBAL/Connection.php(429): Doctrine\DBAL\Connection-&gt;connect()     #4 /home/seyfer/www/site.loc/vendor/doctrine/dbal/lib/Doctrine/DBAL/Connection.php(3 in /home/seyfer/www/site.loc/vendor/zendframework/zend-servicemanager/src/ServiceManager.php on line 946 </code></pre>  <p>So no I have chicken and egg problem. Command fails because there is no DB  config, but command should create this config.</p>  <p>How to not initialize services when call this command?</p>  <p>My controller code is</p>  <pre><code>use Zend\Mvc\Controller\AbstractActionController; use ZendMover\Copier;  class EnvController extends AbstractActionController {     public function installAction()     {         $env = $this-&gt;getRequest()-&gt;getParam('env');         $dbu = $this-&gt;getRequest()-&gt;getParam('dbu');         $dbp = $this-&gt;getRequest()-&gt;getParam('dbp');         $dbn = $this-&gt;getRequest()-&gt;getParam('dbn');          try {             $environment = new Environment($env, new Copier());             $result      = $environment-&gt;installEnv($env, $dbu, $dbp, $dbn);              return $result ? "Success\n" : '';         } catch (\Exception $e) {             echo $e-&gt;getMessage() . "\n";         }     } } </code></pre>