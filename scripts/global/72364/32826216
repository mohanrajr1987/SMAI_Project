<p>There is a class <code>Item</code>. It has an attribute <code>type</code>, that can be <code>a</code>, <code>b</code>, or <code>c</code>. For all the types there is a common minimal set of attributes / input fields: <code>type</code> and other ones. Every type has some further attributes:</p>  <pre><code>default set of the common fields   type   ... additional fields in case of type=a   foo additional fields in case of type=b   bar   baz additional fields in case of type=c   bar   baz   buz </code></pre>  <p>Furthermore the validation rules for <code>bar</code> and <code>bar</code> are slightly different for the cases <code>type=b</code> and <code>type=c</code>.</p>  <p><strong>How to set up the validation in a ZF2/Apigilty application depending on the value of a field (or multiple fields)?</strong> For this concrete case: How to set up the validation depending on the <code>type</code>?</p>  <hr>  <p><strong>UPDATE</strong></p>  <p>The attribute <code>type</code> is an <em>in</em>dependent one. That means -- it should <em>not</em> become invalid, if the set of the additional fields (<code>foo</code>, <code>bar</code> etc.) doesn't match to it. (It's <code>required</code> and gets <a href="http://framework.zend.com/manual/current/en/modules/zend.validator.in-array.html" rel="nofollow">validated agains an array</a> of the allowed values, that's it.)</p>  <p>So, it should work in the opposite direction:</p>  <pre><code>IF (type == 'a') {     proper "required" and validation rules the additional fields } ELSEIF (type == 'b') {     proper "required" and validation rules the additional fields } ELSEIF (type == 'c') {     proper "required" and validation rules the additional fields } </code></pre>