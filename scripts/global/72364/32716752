<p>I am creating my first Zend Framework2 Project. My page offers the option to create adverts. I now want to offer the option to bookmark an advert. What needs to be done is that when you are on the page of the advert, the site will check if you are logged in and if you are it will check if the advert is already bookmarked and display the message otherwise it will offer you a link to "add the advert to your bookmarks". This link will also be shown when you are not logged in and if you click on in, you will then be re-directed to the Log-in Page.</p>  <p>Anyway, to achieve the above target, I have created a View Helper, which gets created by a BookmarkAdvertFactory. I have also created a BookmarkAdvertService, which checks the current Bookmark status. For that I need the UserId and the AdvertId. </p>  <p>In my module.php I inject the userEntity to be able to get the UserId in the BookmarkAdvertService, but now I am not sure how to access the AdvertId from the Service. Can someone give me an advice?</p>  <p><strong>module.php</strong></p>  <pre><code>'Advert\BookmarkLink' =&gt; function ($sl) {                         $entityManager = $sl-&gt;get('doctrine.entitymanager.orm_default');                       //$advertId = '395';                         $myService = new Service\BookmarkAdvertService($advertId);                         $myService-&gt;setEntityManager($entityManager);                          $repository = $entityManager-&gt;getRepository('Advert\Entity\Bookmark');                         $myService-&gt;setRepository($repository);                          $authService = $sl-&gt;get('zfcuser_auth_service');                         $userEntity = $authService-&gt;getIdentity();                         $myService-&gt;setUserEntity($userEntity);                          return $myService;                     },    public function getViewHelperConfig() {     return array(         'factories' =&gt; array(               'displayBookmarkLink' =&gt; 'Advert\View\Helper\BookmarkAdvertFactory') }     </code></pre>  <p><strong>Service\BookmarkAdvertService.php</strong></p>  <pre><code>namespace Advert\Service;  use Advert\Entity\Bookmark as BookmarkEntity; use Advert\Repository\BookmarkRepository; use Doctrine\ORM\EntityManager; use Zend\Debug\Debug;   class BookmarkAdvertService  {   protected $location;   protected $userEntity;    public function __construct($advertId)   {     $this-&gt;advertId = $advertId;    }    public function setEntityManager(EntityManager $entityManager)   {     $this-&gt;entityManager = $entityManager;   }    public function setRepository(BookmarkRepository $repository) {     $this-&gt;repository = $repository;   }    public function setUserEntity($userEntity)   {     $this-&gt;userEntity = $userEntity;   }    public function getUserEntity()   {     return $this-&gt;userEntity;   }     public function checkAdvertBookmarkStatus()   {     $userId = $this-&gt;getUserEntity()-&gt;getId();     $bookmarkStatus = $this-&gt;repository-&gt;getBookmarkStatus($this-&gt;advertId,$userId);      return $bookmarkStatus;   } </code></pre>  <p>}</p>  <p><strong>View\Helper\BookmarkAdvertFactory.php</strong></p>  <pre><code>namespace Advert\View\Helper;  use Zend\ServiceManager\FactoryInterface; use Zend\ServiceManager\ServiceLocatorInterface;  class BookmarkAdvertFactory implements FactoryInterface {    public function createService(ServiceLocatorInterface $serviceLocator)   {     $locator = $serviceLocator-&gt;getServiceLocator();     $service = $locator-&gt;get('Advert\BookmarkLink');     $helper  = new BookmarkAdvert($service);      return $helper;   } } </code></pre>  <p><strong>View\Helper\BookmarkAdvert.php</strong></p>  <pre><code>namespace Advert\View\Helper; use Zend\View\Helper\AbstractHelper;  class BookmarkAdvert extends AbstractHelper {    protected $service;    public function __construct($service)   {         $this-&gt;service = $service;   }    public function __invoke()   {     $bookmarkStatus = $this-&gt;service-&gt;checkAdvertBookmarkStatus();     return $this-&gt;render($bookmarkStatus);   }    public function render($bookmarkStatus)   {     return $this-&gt;getView()-&gt;render('advert/partial/bookmarklink', array('bookmarkStatus' =&gt; $bookmarkStatus));    }           } </code></pre>