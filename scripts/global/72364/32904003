<p>I am working on building a Zend Framework 2 (ZF2) website using Doctrine2 DBAL/ORM, where I develop equally on Windows and Mac, sometimes Linux (Ubuntu) (I like the all-around experience).</p>  <p>In <code>composer.json</code> I have the following versions:</p>  <ul> <li>"doctrine/doctrine-orm-module": "^0.9.1"</li> <li>"zendframework/zendframework": ">=2.3.2,&lt;3.0.0"</li> </ul>  <p>At first, my website ran fine on all three environments using XAMPP (Apache 2.4.16, MySQL 5.0.11, and PHP 5.6.12). But suddenly, after I performed some changes on Windows and pulled those changes from GitHub to my Mac computer, Doctrine started failing with the following exception message:</p>  <pre><code>An exception was raised while creating "Doctrine\ORM\EntityManager"; no instance returned </code></pre>  <p>I got this exception a lot while configuring Doctrine2 in ZF2. But once I was done, things just worked. That is until it broke on Mac, only! It still works fine on Windows.</p>  <p>I have cleared the cache completely (<code>rm data/cache/*</code>) and I have verified the integrity of my configuration files. The only difference in configuration between Windows and Mac is that I provide a <code>unix_socket</code>path for MySQL (see below).</p>  <p>My <code>config/application.php</code>:</p>  <pre><code>&lt;?php return array(     'modules' =&gt; array(         // ...         'DoctrineModule',         'DoctrineORMModule',     ),     'module_listener_options' =&gt; array(         // ...     ), ); </code></pre>  <p>My <code>config/autoload/databases.local.php</code> looks like this (with changed values for database server login information):</p>  <pre><code>&lt;?php return array(     'doctrine' =&gt; array(         'connection' =&gt; array(             'orm_default' =&gt; array(                 'driverClass' =&gt; 'Doctrine\DBAL\Driver\PDOMySql\Driver',                 'params' =&gt; array(                     'unix_socket' =&gt; '/Applications/XAMPP/xamppfiles/var/mysql/mysql.sock', // This is for Mac                     'host'        =&gt; 'some_host',                     'port'        =&gt; '3306',                     'user'        =&gt; 'some_user',                     'password'    =&gt; 'some_password',                     'dbname'      =&gt; 'some_database',                 )             )         ),         'configuration' =&gt; array(             'orm_default' =&gt; array(                 'proxy_dir' =&gt; 'core/server/data/DoctrineORMModule/Proxy',                 'proxy_namespace' =&gt; 'DoctrineORMModule\Proxy',             )         )     ), ); </code></pre>  <p>As mentioned, these configurations work on Windows (I can retrieve and use the EntityManager) and is a 1:1 mirror onto my Mac solution. So what happens?</p>  <p>When I check the cached configuration file, <code>data/cache/module-config-cache.application.config.cache.php</code>, on my Mac, the database login informations are incorrect, having the following values:</p>  <pre><code>// ... array (     'host' =&gt; 'localhost',     'port' =&gt; '3306',     'user' =&gt; 'username',     'password' =&gt; 'password',     'dbname' =&gt; 'database', ), // ... </code></pre>  <p>Obviously these are wrong. But how can ZF2 suddenly generate incorrect configurations on Mac?</p>  <p>I even tried checkout out previous commits from Git on my Mac, which I know worked for certain. But the same problem occurs. The only difference, I suspect might have influence on this behavior, is that I ran <code>composer.phar update</code>, which might've changed the versions of ZF2 and/or Doctrine2.</p>