<p><a href="http://framework.zend.com/manual/current/en/modules/zend.validator.db.html" rel="nofollow">ZF2 docs</a> show the following example in terms of using <strong>Db\RecordExists</strong> validator with multiple columns.</p>  <pre><code>$email     = 'user@example.com'; $clause    = $dbAdapter-&gt;quoteIdentifier('email') . ' = ' . $dbAdapter-&gt;quoteValue($email); $validator = new Zend\Validator\Db\RecordExists(     array(         'table'   =&gt; 'users',         'field'   =&gt; 'username',         'adapter' =&gt; $dbAdapter,         'exclude' =&gt; $clause     ) );  if ($validator-&gt;isValid($username)) {     // username appears to be valid } else {     // username is invalid; print the reason     $messages = $validator-&gt;getMessages();     foreach ($messages as $message) {         echo "$message\n";     } } </code></pre>  <p>Iâ€™ve tried this using my own Select object containing a more complex where condition. However, isValid() must be called with a value parameter.</p>  <p>In the example above <code>$username</code> is passed to <code>isValid()</code>. But there seems to be no according field definition.</p>  <p>I tried calling <code>isValid()</code> with an empty string, but this does not produce the desired result, since <code>Zend\Validator\Db\AbstractDb::query()</code> always adds the value to the statement:</p>  <pre><code>$parameters = $statement-&gt;getParameterContainer(); $parameters['where1'] = $value; </code></pre>  <p>If I remove the seconds line above, my validator produces the expected results.</p>  <p>Can someone elaborate on how to use RecordExists with the where conditions in my custom Select object? And only those?</p>