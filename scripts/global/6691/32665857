<p>I am having trouble mocking and testing my angular app. Given the file below, I am always getting the error <strong>deferred is not defined.</strong> </p>  <p>How can I correctly mock the API with Promise ? and How can I test that the API is indeed running and attach the response to the <em>$scope.data</em> variable?  </p>  <p><strong>Controller</strong></p>  <pre><code>angular.module('app').controller('controllerOne', [     '$scope',     'API',     function($scope, API) {         $scope.init = function() {             $scope.data = API.query(function(response) {                 return response;             });         };      } ]); </code></pre>  <p><strong>API Service</strong></p>  <pre><code>angular.module('app').factory('API', ['$resource',     function($resource) {         return $resource('api/url/:Id', {             Id: '@_id'         }, {             update: {                 method: 'PUT'             }         });     } ]); </code></pre>  <p><strong>Controller Spec</strong></p>  <pre><code>describe('app Module', function() {     beforeEach(function() {         module('app');     });     var mockAPI, q, $scope, ctrl;     beforeEach(function() {         mockAPI = {             query: function() {                 var deferred = q.defer();                 return deferred.promise;             }         };     });     beforeEach(inject(function($controller, $rootScope, $q) {         $scope = $rootScope.$new();         q = $q;         ctrl = $controller('controllerOne', {             $scope: $scope,             API: mockAPI         });     }));     it('should query API', function() {         spyOn(mockAPI, 'query').and.callThrough();         $scope.init();         deferred.resolve();         $scope.$root.$digest();         expect(mockAPI.query).toHaveBeenCalled();     }); }); </code></pre>  <p><em>If I run the following code, everything works, <strong>but I think it is not right</strong>, as I am initializing the API myself.</em></p>  <pre><code>it('should query API', function() {     mockAPI.query();     expect(mockAPI.query).toHaveBeenCalled(); }); </code></pre>  <p>What and How is the proper way to do this?</p>