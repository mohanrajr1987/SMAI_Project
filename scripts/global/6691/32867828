<p>I have class that is responsible for doing some processing:</p>  <pre><code>class Processor &lt; ActiveRecord::Base   def process     # do some stuff   end end </code></pre>  <p>and another class that is responsible for executing every processor and concatenating result. It's important to execute processors in correct order:</p>  <pre><code>class ProcessorSet &lt; ActiveRecord::Base   has_many :processors, -&gt; { order(:priority) }    def process     processors.map do |processor|       processor.process     end.join   end       end </code></pre>  <p>How to test ProcessorSet.process method without having dependency with Processor (I don't want to test Process.process method, because it's already tested in another test unit). I've tried to mock processors method using <a href="https://github.com/freerange/mocha" rel="nofollow">mocha</a>:</p>  <pre><code>class ProcessorSetTest &lt; ActiveSupport::TestCase   processor_set = ProcessorSet.new    processors = ['result1', 'result2'].map do |result|     object = mock()     object.expects(:process).returns(result)     object   end    processor_set.expects(:processors).returns(processors)    assert_equal 'result1result2', processor_set.process end </code></pre>  <p>But how in such case test that processors are returned in correct order?</p>