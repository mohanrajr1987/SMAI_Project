<p>I have two classes (<code>A</code> and <code>B</code>) which implements the same interface (<code>I</code>) in C#. The interface have 5 methods to implement. Implementations of two of those methods are almost the same in both <code>A</code> and <code>B</code> except each implemetation uses a different variable. Here is the abstract layout of my classes.</p>  <pre><code>class A : I {      Folder folder;      void method()      {         //implementation uses ``folder``      }  class B : I {      List list;      void method()      {         //implementation uses ``list``      } } </code></pre>  <p>Because the implementation of <code>Method</code> is the same (except the one parameter) I want to have implement <code>Method</code> only once. What is the best solution according of design patterns? one simple option is to define a third class which implements <code>Method</code>and takes one parameter (either <code>list</code> or <code>folder</code>) and then call it within the <code>Method</code> of <code>A</code> and <code>B</code>. Any other solution?</p>  <p>------------Edit---------------</p>  <p>I don't want my <code>Method</code> to get any extra parameter. Under such circumstances, isn't static util class a better option than defining an abstract class?</p>