<p>Question first, then backstory, as to not make the question seem completly idiotic if it is infact not possible..</p>  <p>QUESTION: Is there any way to write a method that returns || or &amp;&amp; or &lt; or > depending on which implemented subclass is calling the method</p>  <p>I´m currently learning Java and taking a few courses at uni to that extent.</p>  <p>So in an assignment in a course concerning objective-based design patterns and discrete structures we are to write a program that simulates a logical proposition and examines it for the quality of tautologi. I.e if the expression is true for all possible inputs.</p>  <p>i have made a simple binarytree implementation and the program works, but the design part of the course calls for us to use such design patterns as "Composite" and "Template method" all very fashionable words, sure you´ve all heard of e´m.</p>  <p>i have a Template method pattern in my toString insothat the </p>  <pre><code>abstract Class BinaryConnector extends Expression{ protected Expression a,b public String toString(){return a + getConnective() + b;  } public abstract String getConnective(); } </code></pre>  <p>wich in for example </p>  <pre><code>Class Or extends BinaryConnective{ //omissions public String getConnective(){return "||";} </code></pre>  <p>i would like to do the same for the actual comparison aswell.</p>  <p>i suppose there are many ways of juryrigging such a solution, such as a switch-statement in my abstract class. But just elegant solutions please.. im hoping for something like" just parse the getConnective()" or similar:)</p>  <p>or scold me for making you read so much..</p>