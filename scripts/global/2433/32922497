<p>I am writing a Core java module, where in there, there are events which are read and then those read events are needed to be organized into some form</p>  <p>I have figured the OOPS deign something like this</p>  <p>EventManager has Two Objects, EventReader and EventScheduler</p>  <p>The EventReader reads the data from the text input file and gives back an array of Objects of type Event.</p>  <p>The EventScheduler takes in as input the Event array object and processes them (including sorting the array as per its convince, then arrange them as using (KnapSackProblem) according to some criteria).</p>  <p>Inside the EventScheduler, I have kept methods which sorts and then arranges the Events as per the desired output.</p>  <p>So Is this design High Cohesion and Loose Coupling.. Threotically atleast.. Since I cannot share the entire diagram on the site.</p>  <p>I need a good design and wanted to know what is the correct design for this scenario.</p>  <p>Kindly let me know if you need more design information in this regards to understand the scenario more.</p>  <p>Just a note, I am actually not aiming at improving the performance, but only a very clean design concept for such a scenario.</p>  <p>Any Help is most welcome!</p>  <p>Thanks in Advance :) Cheers</p>