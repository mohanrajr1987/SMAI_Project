<p>I have this configuration on the parent class:</p>  <pre><code>@JsonTypeInfo(  use = JsonTypeInfo.Id.NAME,  include = JsonTypeInfo.As.EXISTING_PROPERTY,  property = "type",  visible = true ) @JsonSubTypes({  @JsonSubTypes.Type(value = AnalysisViewer.class, name = "ANALYSIS"),  @JsonSubTypes.Type(value = CombinedAnalysisViewer.class, name = "COMBINED"),  @JsonSubTypes.Type(value = SingleSourceViewer.class, name = "SINGLESOURCE"),  @JsonSubTypes.Type(value = SingleSourceGroupViewer.class, name = "SINGLESOURCE_GROUP") }) </code></pre>  <p>And the class has the following <code>type</code> attribute that I need to persist in the database (with JPA).</p>  <pre><code>public class Viewer {   ...   @Column(name = "TP_VIEWER")   @Enumerated(EnumType.STRING)   private ViewerTypeEnum type;   ... } </code></pre>  <p>With this config or changing to <code>visible=false</code> and <code>include=JsonTypeInfo.As.PROPERTY</code> I'm either getting an error on serialization saying that it's not possible to write twice the same property, or an error saying that I can't save a null value in the <code>type</code> column.</p>  <p>What I need is to have the type attribute in the database AND use it to teach Jackson the subtypes. I tried a lot of different configurations, and I can't find documentation on keeping and populating the property on deserialization. Can someone help me with that?</p>  <p>Thanks in advance.</p>