<p>Is there a way in Jackson to deserialize starting with a non-root element (i.e. an element that has at least one sibling)?  An example might help explain this better.</p>  <pre><code>{      "stat":"OK",     "response": {         "color":"red","food":"pizza"     } } </code></pre>  <p>I'd like to deserialize to a class defined as</p>  <pre><code>public class Response {     private String color;     private String food;      public String getColor() { return color; }     public void setColor(String c) { color = c; }      public String getFood() { return food; }     public void setFood(String f) { food = f; } } </code></pre>  <p>I looked into using @JsonRootName("response") to annotate the class and using a custom ObjectMapper setting the UNWRAP_ROOT_VALUE, however the <a href="https://github.com/FasterXML/jackson-databind/wiki/Deserialization-Features#structural-conversions" rel="nofollow">Jackson documentation</a> indicates the root element must be a singular root.  In my case there is a sibling ("stat") that I want to ignore.</p>