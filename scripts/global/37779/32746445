<p>I'm seeing a strange issue in my JSON responses where I'm retrieving a collection from a resource, given the resource's ID: Numbers (possibly list indices?) are showing up before or after the JSON object.</p>  <pre><code>[     {         "id": 1,         "dateCreated": [             2015,             9,             23,             18,             9,             33,             23000000         ],         "dateModified": [             2015,             9,             23,             18,             9,             33,             23000000         ],         "name": "First Check-In",         "description": null,         "qualifyingPeriodStartDate": [             2015,             9,             1,             0,             0         ],         "customers": [],         "campaign": {             "id": 1,             "dateCreated": [                 2015,                 9,                 24,                 14,                 59,                 31,                 474000000             ],             "dateModified": [                 2015,                 9,                 24,                 14,                 59,                 31,                 474000000             ],             "name": "Background campaign",             "startDate": [                 2015,                 9,                 1,                 0,                 0             ],             "endDate": [                 2016,                 9,                 1,                 0,                 0             ],             "chain": null,             "surveys": [],             "achievements": [                 1,                 {                     "id": 2,                     "dateCreated": [                         2015,                         9,                         23,                         18,                         10,                         21,                         341000000                     ],                     "dateModified": [                         2015,                         9,                         23,                         18,                         10,                         21,                         341000000                     ],                     "name": "First Survey Completion",                     "description": null,                     "qualifyingPeriodStartDate": [                         2015,                         9,                         1,                         0,                         0                     ],                     "customers": [],                     "campaign": 1,                     "reward": {                         "id": 1,                         "dateCreated": [                             2015,                             9,                             24,                             14,                             59,                             31,                             815000000                         ],                         "dateModified": [                             2015,                             9,                             24,                             14,                             59,                             31,                             815000000                         ],                         "name": "McFlurry",                         "customer": null,                         "rewardPointValue": 0,                         "chain": null,                         "achievements": [                             1,                             2,                             {                                 "id": 3,                                 "dateCreated": [                                     2015,                                     9,                                     23,                                     18,                                     10,                                     29,                                     691000000                                 ],                                 "dateModified": [                                     2015,                                     9,                                     23,                                     18,                                     10,                                     29,                                     691000000                                 ],                                 "name": "First Three Check-Ins",                                 "description": null,                                 "qualifyingPeriodStartDate": [                                     2015,                                     9,                                     8,                                     0,                                     0                                 ],                                 "customers": [],                                 "campaign": {                                     "id": 2,                                     "dateCreated": [                                         2015,                                         9,                                         24,                                         14,                                         59,                                         31,                                         782000000                                     ],                                     "dateModified": [                                         2015,                                         9,                                         24,                                         14,                                         59,                                         31,                                         782000000                                     ],                                     "name": "September campaign",                                     "startDate": [                                         2015,                                         9,                                         11,                                         0,                                         0                                     ],                                     "endDate": [                                         2015,                                         9,                                         18,                                         0,                                         0                                     ],                                     "chain": null,                                     "surveys": [],                                     "achievements": [                                         3                                     ],                                     "locations": []                                 },                                 "reward": 1,                                 "numActionsRequired": 3,                                 "actionType": "check-in",                                 "customerActions": []                             }                         ]                     },                     "numActionsRequired": 1,                     "actionType": "survey-completion",                     "customerActions": []                 }             ],             "locations": []         },         "reward": 1,         "numActionsRequired": 1,         "actionType": "check-in",         "customerActions": []     },     2 ] </code></pre>  <p>Can anyone provide some insight into why this is happening, and how to get rid of these numbers? For what it's worth, I'm using Spring with Hibernate and the jackson-datatype-hibernate module. (<a href="https://github.com/FasterXML/jackson-datatype-hibernate" rel="nofollow">https://github.com/FasterXML/jackson-datatype-hibernate</a>)</p>  <p>I'm also using the @JsonIdentityInfo annotation instead of @JsonManagedReference and @JsonBackReference.</p>  <h2>EDIT 1</h2>  <p>Parent entity:</p>  <pre><code>@Entity @DynamicUpdate @SelectBeforeUpdate @NamedQuery(name = "Campaign.byId", query = "from Campaign where id=:id") @JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "id", scope = Campaign.class) public class Campaign extends NamedEntity {     private static final long serialVersionUID = 1781401593603214034L;     private LocalDateTime startDate = LocalDateTime.now();     private LocalDateTime endDate = LocalDateTime.now();     @ManyToOne     @JoinColumn(name = "chain_id")     private Chain chain;     @ManyToMany(mappedBy = "campaigns", fetch = FetchType.EAGER, cascade = CascadeType.ALL)     private List&lt;Survey&gt; surveys = new ArrayList&lt;Survey&gt;();     @OneToMany(mappedBy = "campaign", fetch = FetchType.EAGER, cascade = CascadeType.ALL)     private List&lt;Achievement&gt; achievements = new ArrayList&lt;Achievement&gt;();     @ManyToMany(mappedBy = "campaigns", fetch = FetchType.EAGER, cascade = CascadeType.ALL)     private List&lt;Location&gt; locations = new ArrayList&lt;Location&gt;();     private boolean runsIndefinitely; </code></pre>  <p>Child entity:</p>  <pre><code>@Entity @DynamicUpdate @SelectBeforeUpdate @NamedQueries({ @NamedQuery(name = "Achievement.byId", query = "from Achievement where id=:id"),         @NamedQuery(name = "EligibleAchievements.byCustomerActionId", query = "from Achievement a where :customerActionId not in (select ca.id from a.customerActions as ca) and :customerId not in (select c.id from a.customers as c)"),         @NamedQuery(name = "CountedAchievements.byCustomerActionId", query = "from Achievement a where :id in (select ca.id from a.customerActions as ca)") }) @JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "id", scope = Achievement.class) public class Achievement extends NamedEntity {     private static final long serialVersionUID = -8317978091374706947L;     private String description;     private LocalDateTime qualifyingPeriodStartDate = LocalDateTime.now();     @ManyToMany(fetch = FetchType.EAGER)     @JoinTable(name = "customers_achievements", joinColumns = @JoinColumn(name = "achievement_id") , inverseJoinColumns = @JoinColumn(name = "customer_id") )     private List&lt;Customer&gt; customers = new ArrayList&lt;Customer&gt;();     @ManyToOne     @JoinColumn(name = "campaign_id")     private Campaign campaign;     @ManyToOne     @JoinColumn(name = "reward_id")     private Reward reward;     private int numActionsRequired;     private String actionType;     @ManyToMany(mappedBy = "achievements", fetch = FetchType.EAGER, cascade = CascadeType.ALL)     private List&lt;CustomerAction&gt; customerActions = new ArrayList&lt;CustomerAction&gt;(); </code></pre>  <h2>EDIT 2</h2>  <p>I am retrieving all of the achievements that belong to a specific campaign from this service endpoint method:</p>  <pre><code>@RequestMapping(value = "{id}/achievements", method = RequestMethod.GET, produces = "application/json") @ResponseBody public List&lt;Achievement&gt; getAchievementsFromCampaign(@PathVariable int id) {     List&lt;Achievement&gt; achievements = campaignService.getCampaignAchievements(id);     return achievements; } </code></pre>  <h2>EDIT 3</h2>  <p>It seems that if I use the JsonIgnore annotation on the reference to the parent entity (Campaign), then the numbers are replaced with the other JSON objects that I expect. I suppose that this is to prevent duplicate data from being shown in the JSON response.</p>  <p>So the numbers are actually the object IDs referring to the other Achievement objects that were already listed in the first nested Achievement JSON object.</p>