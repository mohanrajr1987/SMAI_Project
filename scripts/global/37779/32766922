<p>I have an abstract class called <code>Instance</code> and then two implementations of that, <code>UserInstance</code> and <code>HardwareInstance</code>. The issue I am having is that when I call the rest endpoint for a <code>@POST</code> into the database, I ideally wanted it to be like <code>.../rest/soexample/instance/create</code> where the instance is passed to the REST endpoint. If <code>Instance</code> wasn't abstract with more than one implementation it would be fine, but since I have 2 I am getting a <code>Jackson.databind</code> error.</p>  <p><em>" problem: abstract types either need to be mapped to concrete types, have custom deserializer, or be instantiated with additional type information"</em></p>  <p>After looking up a solution to this I found a SO answer that said I could use something like:</p>  <p><code>@JsonDeserialize(as=UserInstance.class)</code></p>  <p>But it seem's like that isonly useful if there is one implementation of the abstract class. Assuming I can't call it twice since there would be no way for it to decide which type of instance it would be.</p>  <p>So I am wondering what is the best way to handle this situation? Should I create different endpoints? Like:</p>  <p><code>.../rest/soexample/userinstance/create</code> &amp; <code>.../rest/soexample/hardwareinstance/create</code></p>  <p>I am not too sure as I am a noobie @ REST related things, though actively trying to learn. Thanks!</p>