<p>I have been trying the entire day to get a form with nested attributes to build the associations correctly and to save the nested attributes to no avail. Situation is as follows:</p>  <p><strong>Models</strong></p>  <p>Users can participate in multiple campaigns (can even participate multiple times in the same campaing). Campaings have multiple users, and this all through the Participation model.</p>  <pre><code>class User &lt; ActiveRecord::Base   #authentication done throug devise   has_many :campaigns, :through =&gt; :participations   has_many :participations   accepts_nested_attributes_for :participations, :campaigns end  class Participation &lt; ActiveRecord::Base   belongs_to :user, inverse_of: :participations   belongs_to :campaign, inverse_of: :participations   validates :role, inclusion: {in: %w(player dm), message: "value: %{value} is not a valid role"} end  class Campaign &lt; ActiveRecord::Base   has_many :users, through: :participations   has_many :participations   accepts_nested_attributes_for :participations   validates_presence_of :title end </code></pre>  <p><strong>Controller</strong></p>  <pre><code>class CampaignsController &lt; ApplicationController   def new     @campaign  = current_user.campaigns.build   end    def create     @campaign = current_user.campaigns.create(campaign_params)     if @campaign.valid?       redirect_to campaigns_path     else       render 'new'     end   end    private   def campaign_params     params.require(:campaign).permit(:title, participations_attributes: [:id, :role, :user_id, :campaign_id])   end end </code></pre>  <p><strong>The form</strong></p>  <pre><code>&lt;%= form_for @campaign do |f| %&gt;   &lt;%= f.text_field :title %&gt;   &lt;%= f.fields_for :participations do |p| %&gt;     &lt;%= p.select :role, {"Player" =&gt; "player", "Game master" =&gt; "dm"} %&gt;   &lt;% end %&gt;   &lt;%= f.submit nil, :class =&gt; 'btn btn-primary' %&gt; &lt;% end %&gt; </code></pre>  <p><strong>Params</strong></p>  <pre><code>Parameters: { "campaign"=&gt;{"title"=&gt;"sdfsdfdsf", "participations_attributes"=&gt;{"0"=&gt;{"role"=&gt;"player"}}}, "commit"=&gt;"Create Campaign"} </code></pre>  <p>If I remove the validation from role in participations, the associations are saving correctly. <strong>But the role is nil.</strong></p>  <p>What am I doing wrong? Thanks</p>  <p><strong>UPDATE</strong></p>  <p>I found out that because of the way create is currently written 2 records for the join table are saved to the DB. One were the user_id is set correctly but the role is nil, and one where the role is set correctly but the user_id is nil. Changing the controller action to:</p>  <pre><code>def create   @campaign = Campaign.new(campaign_params)   @campaign.participations.first.user_id = current_user.id   if @campaign.save #@campaign.save #&amp;&amp; @particpation.valid?     redirect_to campaigns_path   else     render 'new'   end end </code></pre>  <p>This saves everything correctly but, as you can see, I have to set the user_id in participation manually otherwise it ends up being nil. This works but I have a feeling that I should not have to set the user_id manually as I set this with build in the new action. Can someone shed some light on this for me?</p>  <p>Thanks</p>