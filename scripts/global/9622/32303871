<p>I have three Models, <code>A</code>, <code>B</code>, and <code>C</code>, where</p>  <ul> <li><code>A</code> has one <code>B</code></li> <li>and <code>A</code> has many <code>C</code>.</li> </ul>  <p>If a method <code>A.update()</code> is called it also calls methods <code>B.task()</code> and <code>C.task()</code>, and thanks to contain, <code>B</code> and <code>C</code>are already available within <code>A</code>.</p>  <p>However what if in my <code>B.someTask()</code> method I need to call <code>C.anotherTask()</code>?</p>  <p>If I <code>debug($this)</code> in <code>A</code>, I see the entities <code>B</code> and <code>C</code>, but if I <code>debug($this)</code> in <code>B</code> or <code>C</code> I only see properties of that entity.</p>  <p>Should there not be a property in <code>B</code> (or <code>C</code>) that references entity <code>A</code> as well?</p>  <p>I know that I can adjust my contain and add in that <code>A</code> should contain <code>B,C =&gt; [A]</code>, but that creates a second SQL query when I should already have <code>A</code>?</p>  <p>Is there some trickery I am missing here?</p>