<p>This problem has me completely stumped.  I'm still new at RoR and learning. </p>  <p>I have two tables: Countertops and Countmaterial.  A user will select all the features for their countertop including the material type.  The options for the material are listed in the Countmaterial table and are selection from a collection.  </p>  <p>My question is once the selection is made and the Countertop created how do I display the name of the material type on the index page for Countertops instead of the countertype, which is an integer generated to match the name in the Countmaterial table?  </p>  <p>I'd rather the index display "Granite" instead of "1", for example.  "Granite" is listed in the Countmaterial table and when the user selects "Granite", it populates the Countertop table as "1" in the countertype column.  Marble is a "2" and so on...</p>  <p>Here's my schema:</p>  <pre><code>create_table "countertops", force: :cascade do |t|  t.string   "size"  t.string   "color"  t.datetime "created_at",  null: false  t.datetime "updated_at",  null: false  t.string   "ZipCode"  t.string   "countertype" end  create_table "countmaterials", force: :cascade do |t|  t.string   "name"  t.datetime "created_at",    null: false  t.datetime "updated_at",    null: false  t.integer  "countertop_id" end </code></pre>  <p>My Countertop Controller for index:</p>  <pre><code>def index  @countertops = Countertop.all  @countertops = Countertop.includes(:countmaterial).all end </code></pre>  <p>My index code:</p>  <pre><code>&lt;% @countertops.each do |countertop| %&gt;   &lt;tr&gt;     &lt;td&gt;&lt;%= countertop.ZipCode %&gt;&lt;/td&gt;     &lt;td&gt;&lt;%= countertop.countmaterial.name %&gt;&lt;/td&gt; </code></pre>  <p>Associations:</p>  <pre><code>class Countertop &lt; ActiveRecord::Base   has_one :countmaterial end  class Countmaterial &lt; ActiveRecord::Base   belongs_to :countertop end </code></pre>  <p>What do you folks think??</p>