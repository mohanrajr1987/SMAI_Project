<p>Thanks for visiting</p>  <p>Whenever I click on Add a friend I get "friend added" but upon checking my console it says Friendship id: 10, user_id: 2, friend_id: 0, created_at: "2015-09-11 05:05:27", updated_at: "2015-09-11 05:05:27"> meaning it's adding but not associating with a friend_id. Can someone help me figure out why it's not saving friend_id whenever I click add a friend. Thank you for all your help.</p>  <p><strong>Schema.rb</strong></p>  <pre><code>create_table "friendships", force: true do |t|     t.integer  "user_id"     t.integer  "friend_id"     t.datetime "created_at"     t.datetime "updated_at" end </code></pre>  <p><strong>Routes.rb</strong></p>  <pre><code>root "users#index"    resources :friendships, only: [:create, :destroy]   resources :sessions, only: [:new, :create, :destroy]   resources :users </code></pre>  <p><strong>Users/show</strong></p>  <pre><code>&lt;% @users.each do |user| %&gt;  &lt;% if user.user_name != current_user.user_name %&gt;   &lt;% if @friendshiplink.nil? %&gt;    &lt;%= user.user_name %&gt;    &lt;%= link_to "Add Friend", friendships_path(friend_id: user), method: :post %&gt;   &lt;% else %&gt;    &lt;%= link_to(        ("Unfollow"),       "/friendships/#{ @friendshiplink.id }",       method: :delete) %&gt;   &lt;% end %&gt;  &lt;% end %&gt; &lt;% end %&gt; </code></pre>  <p><strong>User Model</strong></p>  <pre><code>has_many :friendships has_many :friends, through: :friendships has_many :inverse_friendships, class_name: "Friendship", foreign_key:  "friend_id" has_many :inverse_friends, through: :inverse_friendships, source: :user </code></pre>  <p><strong>Friendship Model</strong></p>  <pre><code>belongs_to :user belongs_to :friend, class_name: "User" </code></pre>  <p><strong>User Controller</strong></p>  <pre><code>def show  @users = User.all  @user = User.friendly.find(params[:id])  current_user  if @current_user     @followerlink = Follower.where(leader_id: @user.id,                              follower_id: @current_user.id).first     @friendshiplink = Friendship.where(user_id: @user.id,                                 friend_id: @current_user.id).first  end end </code></pre>  <p><strong>Friendship Controller</strong></p>  <pre><code>def create  @friendship = current_user.friendships.build(friend_id: params[:friend_id])  if @friendship.save   flash[:notice] = "Added friend."   redirect_to root_url  else   flash[:error] = "Unable to add friend."   redirect_to root_url  end end  def destroy  @friendship = current_user.friendships.find(params[:id])  @friendship.destroy  flash[:notice] = "Removed friendship."  redirect_to current_user end  def friendship_params  params.require(:friendship).permit(:friend_id, :user_id) end </code></pre>  <p>Thanks again for all the help. If there are any question or I'm missing a part of my code which may be needed, Please ask. </p>