<p>I have two models: Shops and Users.  Users <code>belong_to</code> Shops and a Shop <code>has_many</code> Users.  Users and Shops are created separately, and then a User adds a Shop which changes its <code>shop_id</code> to <code>@shop.id</code>. </p>  <p>I need <code>@shop.users</code> to query all the users that <code>belong_to</code> shop.  I'm not sure how to make this happen though.  Currently, the only connection is the association and <code>@user.shop_id</code> is updated to the correct shop when the User picks a shop with this button:</p>  <p>View:</p>  <pre><code>&lt;%= link_to 'Add As Your Shop', update_shop_url(id: @user.id, shop_id: @shop.id), class: 'button blue-button', data: { method: 'post' } %&gt; </code></pre>  <p>Controller:</p>  <pre><code>def update_shop   @user = User.find(params[:id])   @shop = Shop.find(params[:shop_id])   @user.update_attributes(shop_id: @shop.id)   flash[:success] = "Added Shop!"   redirect_to @shop end </code></pre>  <p>Here is the query in ShopsController#Customers</p>  <pre><code>def customers   @shop = Shop.find(params[:id])   @customers = Shop.users end </code></pre>  <p>This query gives me the error <code>undefined method 'users' for nil:NilClass</code>so users aren't being found with Shops.</p>  <p>How do I create the correct association when a user picks a shop rather than just updating the shop_id param?</p>