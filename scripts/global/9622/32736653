<p>I'm attempting to generate a customer profile page. The page includes customer order history, most recent orders, and their historical totals. I've been running sum, count, and average on Customer.where_completed but that's touching that database three times. I feel there has to be a better way?</p>  <pre><code>@customers_total_spent = @customer.orders.where_completed.sum(:sale) @customers_average_per_order = @customer.orders.where_completed.average(:sale) @customers_total_orders = @customer.orders.where_completed.count(:sale) </code></pre>  <h2>Customers</h2>  <pre><code>class Customer &lt; ActiveRecord::Base     has_many :orders end </code></pre>  <h2>Orders</h2>  <pre><code>class Order &lt; ActiveRecord::Base     belongs_to :customer     scope :completed,-&gt; { where.not(completed_at: nil) } end </code></pre>