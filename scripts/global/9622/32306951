<p>I have two models <code>shop</code> and <code>user</code>.  Shop <code>has_many</code> Users and User <code>has_one</code> Shop.  I'm trying to create a button on <code>shop/show</code> that allows a user to choose its shop.  The button should send the parameter <code>shop_id</code> to <code>Users_Controller#update_shop</code> which then changes <code>User.shop_id</code> to the id of the shop on the page.  </p>  <p>The current method in <code>Users_Controller#update_shop</code> is the following:</p>  <pre><code>def update_shop   @user = User.find(params[:id])   @user.update_attributes(shop_id: params[:shop][:id])   flash[:success] = "Added Shop!" end </code></pre>  <p>And the button on <code>show/shop</code> is this:</p>  <pre><code>  &lt;%= form_for User.update_shop, remote: true do |f| %&gt;     &lt;%= f.hidden_field :shop_id, value: @shop.id %&gt;     &lt;%= f.submit 'Add As Your Shop', :class =&gt; 'button blue-button' %&gt;   &lt;% end %&gt; </code></pre>  <p>I'm getting the error <code>NoMethodError in ShopsController#show undefined method</code>update_shop' for #`.  The method is defined in the Users controller though.</p>  <p>I understand there is probably a more efficient way to update <code>User.shop_id</code> through the association, so tips on doing that or getting this to work are greatly appreciated.</p>