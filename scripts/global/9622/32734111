<p>I am trying to draw a class diagram and am confused regarding the association relationship to be used in the scenario similar to the one below. </p>  <pre><code>Interface SampleInterface{      void sampleMethod(); }  class SampleInterfaceImpl implements SampleInterface{     public void sampleMethod(){     } }   class launcher{     private SampleInterface interfaceImpl;     public void setInterfaceImpl(SampleInterface interfaceImpl)     {         this.setInterfaceImpl = interfaceImpl;     }  } </code></pre>  <p>In the above example Launcher class has a state variable interfaceImpl of type SampleInterface . I am passing initializing the Launcher class by using Spring setter injection to pass an implementation of SampleInterface as a bean .  The scope of the bean is singleton. </p>  <p>The same bean is passed to other objects as well through spring. </p>  <p>My Doubts :</p>  <p>Is this relationship a composition or aggregation ? (Since the same bean is passed everywhere it is required and it is in singleton scope)</p>  <p>Can we represent the relationship as aggregation or composition when the state variable is an Interface type rather than a class type ? Or should i just represent it as an association ?</p>  <p>Thanks</p>