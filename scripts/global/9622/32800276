<p>Let's say I have a model, named <strong>Student</strong>,</p>  <p>A model named <strong>Test</strong> (the tests students take at school)</p>  <p>An association model named <strong>StudentTest</strong>, which says when the particular student has done a particular test, under what circumstances, etc..</p>  <p>A model named <strong>Questions</strong>, which will be used by the tests</p>  <p>An association model named <strong>QuestionTest</strong>, which says which questions will be on which tests.</p>  <p>Finally, a model named <strong>StudentAnswer</strong>, which contains a reference to QuestionTest and a reference to Student.</p>  <p>If I have</p>  <pre><code>st = StudentTest.first </code></pre>  <p>I can do:</p>  <pre><code>st.test.questions_test </code></pre>  <p>to get the test questions assigned to that student.</p>  <p>However, if I want the answers of that student, I cannot do this:</p>  <pre><code>st.test.questions_test.student_answers </code></pre>  <p>Because though it will get the answers that are related to those question_test_id, it will not be related to that student_id alone.</p>  <p>An alternative would be</p>  <pre><code>st.test.question_test.student_answers.where(student_id: st.id).all </code></pre>  <p>or</p>  <pre><code>st.student.student_answers.where(test_id: st.test_id).all </code></pre>  <p>But it seems too redundant have to repeat the variable st just to get it's id.</p>  <p>My question is: is there any association that I can declare to make it possible to retrive the answers as:</p>  <pre><code>st.student_answers </code></pre>  <p>or something like it?</p>  <p><strong>EDIT 1: What I was thinking of the use of relations</strong></p>  <p>I was thinking of something like:</p>  <p><strong>student_test.rb</strong></p>  <pre><code>has_many :questions_test, through: :test has_many :student_answers, through: [:questions_test, :student] </code></pre>  <p>But of course, this has syntax error. Through would only accept one argument</p>