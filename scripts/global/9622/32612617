<p>I want to write a easy Tagging-Plugin for cakephp3 applications. So lets say we have a model <em>books</em> and a model <em>reviews</em>. For each of this models it should be possible to attach Tags - just by adding a behavior (in a plugin): <code>$this-&gt;addBehavior('Tag.Taggable')</code>.</p>  <p>I created two Tables in the Database: <code>tags, tagged_tags</code>.</p>  <p>Table tagged_tags:</p>  <pre><code>id  |  tag_id  |  tagged_id                   | 1   |  1       |  1                           | 2   |  2       |  1                           | </code></pre>  <p>tagged_id is the id of the tagged entity. The infomation wich model it belongs to is in the other table. Table Tags:</p>  <pre><code>id  |  tag     |  model                       | 1   |  book    |  App\Model\Table\BooksTable  | 2   |  nobook  |  App\Model\Table\ReviewsTable| </code></pre>  <p>Obviously, only the first Tag belongs to a book. </p>  <pre><code>class TaggableBehavior extends Behavior {     // Some more code here      public function __construct(Table $table, array $config = [])     {         parent::__construct($table, $config);         $this-&gt;_table = $table;          $this-&gt;_table-&gt;belongsToMany('Tag.Tags', [              'joinTable' =&gt; 'tagged_tags',             'foreignKey' =&gt; 'tagged_id',             'targetForeignKey' =&gt; 'tag_id',             'conditions' =&gt; [                 'Tags.model' =&gt; get_class($this-&gt;_table);             ]         ]);      } } </code></pre>  <p>Retrieving the data works perfectly. But saving is an issue:</p>  <blockquote>   <p>Error: SQLSTATE[42S22]: Column not found: 1054 Unknown column   'Tags.model' in 'where clause'</p>      <p>SQL Query:</p>      <p>SELECT TaggedTags.id AS <code>TaggedTags__id</code>, TaggedTags.tagged_id AS   <code>TaggedTags__tagged_id</code>, TaggedTags.tag_id AS <code>TaggedTags__tag_id</code>    FROM tagged_tags TaggedTags WHERE (tagged_id = :c0 AND Tags.model =   :c1)</p> </blockquote>  <p>Im not so shure why cakephp performs a SELECT-query here, and I don't realy care. Why this query causes an error is clear. But where is my mistake here? It has to do with the <code>'conditions' =&gt; ['Tags.model' =&gt; get_class($this-&gt;_table);</code>. Without this, I can save data (but cant say wich Tag belongs to a book or not)</p>  <p><strong>EDIT: Some Additional Info</strong></p>  <p>Here is the complete sql statement, displayed in the debug kit <a href="http://freetexthost.com/tc3s46nugi" rel="nofollow">http://freetexthost.com/tc3s46nugi</a></p>  <p>controller code:</p>  <pre><code>public function add() {     $book = $this-&gt;Books-&gt;newEntity();     if ($this-&gt;request-&gt;is('post')) {         $book = $this-&gt;Books-&gt;patchEntity($book, $this-&gt;request-&gt;data);         if ($this-&gt;Books-&gt;save($book)) {             $this-&gt;Flash-&gt;success(__('The book has been saved.'));             return $this-&gt;redirect(['action' =&gt; 'index']);         } else {             $this-&gt;Flash-&gt;error(__('The book could not be saved. Please, try again.'));         }     } </code></pre>  <p>In the Behavior I have some logic (copy/pasted) form the Bookmarks-tutorial</p>  <pre><code>public function beforeSave($event, $entity, $options) {     if ($entity-&gt;tag_string) {         $entity-&gt;tags = $this-&gt;_buildTags($entity-&gt;tag_string);     } }  protected function _buildTags($tagString) {     $new = array_unique(array_map('trim', explode(',', $tagString)));     $out = [];     $query = $this-&gt;_table-&gt;Tags-&gt;find()         -&gt;where([             'Tags.tag IN' =&gt; $new,             'Tags.model' =&gt; $this-&gt;name()             ]);     // Remove existing tags from the list of new tags.     foreach ($query-&gt;extract('tag') as $existing) {         $index = array_search($existing, $new);         if ($index !== false) {             unset($new[$index]);         }     }     // Add existing tags.     foreach ($query as $tag) {         $tag['count'] = $tag['count']+1;         $out[] = $tag;     }     // Add new tags.     foreach ($new as $tag) {         $out[] = $this-&gt;_table-&gt;Tags-&gt;newEntity(['tag' =&gt; $tag, 'model' =&gt; $this-&gt;name(), 'count' =&gt; 0]);     }     return $out; } </code></pre>