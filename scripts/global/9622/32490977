<p>I have two models in my rails application.  One resides on my development database that is on Server A, then I have another one that I read data from on another database that exists on Server B.  I'm made an association between the two models that works fine.  However when I add the "has_one" association to my includes() to eliminate my n+1 query problem, I get the following error message.</p>  <pre><code>TinyTds::Error: Invalid object name 'dbo.person_attributes'.: ... (more) </code></pre>  <p>What is likely causing this issue? If I remove the association from the includes it works, but takes a couple of minutes to load the page.  Below I will outline some of the models that are related.</p>  <p><strong>Person Model</strong></p>  <pre><code>class Person &lt; ActiveRecord::Base    has_many :overall_attributes, class_name: "PersonAttribute", primary_key: 'other_id', foreign_key: 'person_id' end </code></pre>  <p><strong>PersonAttribute Model</strong></p>  <pre><code>class PersonAttribute &lt; IncomingModel   self.table_name = 'dbo.person_attributes'   self.primary_key = 'person_id'    belongs_to :person, class_name: 'Person', primary_key: 'other_id', foreign_key: 'person_id'  end </code></pre>  <p><strong>IncomingModel</strong></p>  <pre><code>class IncomingModel &lt; ActiveRecord::Base   self.abstract_class = true   self.table_name_prefix = "Incoming."   establish_connection "incoming_#{Rails.env}".to_sym end </code></pre>  <p>Causing the error is this line below... if I remove the <code>overall_attributes</code> association from the includes it works as expected, albeit very very slowly.</p>  <pre><code>@roster = Person.includes(:overall_attributes).where('office_id = (?)', @office.id) </code></pre>