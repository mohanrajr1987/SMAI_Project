<p><a href="http://plnkr.co/edit/6lx0aQUz8EgvSiluAgyd?p=preview" rel="nofollow">Here is a plunker</a> similar to what I'm trying to do.</p>  <p>I would like to provide an auto-complete list for a user to filter the table.  </p>  <p>The filter works fine while the user is typing, but if the user selects an option from the auto-complete list, then the filter stops filtering.</p>  <p>For example...</p>  <ul> <li>The plunker shows a list of 30 badges a SO users can earn.</li> <li>I type 'Au' into the text box; the filter reduces the list to two badges</li> <li><p>I press the down arrow button, then enter.</p></li> <li><p>'Autobiographer' is auto-completed into the textbox, but the list still shows two items </p></li> </ul>  <p>How can I select an auto-complete option and have it filter the list?</p>  <pre><code>&lt;html lang="en"&gt;    &lt;head&gt;     &lt;meta charset="utf-8" /&gt;     &lt;title&gt;jQuery UI Autocomplete - Default functionality&lt;/title&gt;     &lt;script data-require="angular.js@1.3.9" data-semver="1.3.9" src="https://code.angularjs.org/1.3.9/angular.js"&gt;&lt;/script&gt;     &lt;link rel="stylesheet" href="//code.jquery.com/ui/1.11.2/themes/smoothness/jquery-ui.css" /&gt;     &lt;script src="//code.jquery.com/jquery-1.10.2.js"&gt;&lt;/script&gt;     &lt;script src="//code.jquery.com/ui/1.11.2/jquery-ui.js"&gt;&lt;/script&gt;     &lt;script&gt;       var app = angular.module('app', []);        app.factory('badges', ['$http', function($http) {           return $http.get('https://api.stackexchange.com/2.2/badges?page=1&amp;order=desc&amp;sort=rank&amp;site=stackoverflow')             .success(function(data) {               return data;             })             .error(function(err) {               return err;             });       }]);        app.factory('badgesagain', ['$http', function($http) {           return $http.get('https://api.stackexchange.com/2.2/badges?page=1&amp;order=desc&amp;sort=rank&amp;site=stackoverflow')             .success(function(data) {               return data;             })             .error(function(err) {               return err;             });       }]);          app.controller('ctrl', ['$scope', 'badges', 'badgesagain', function($scope, badges, badgesagain){            badgeNames = [];           badges.then(function(response){              for(var i=0; i &lt; response.data.items.length; i++){               badgeNames[i] = response.data.items[i].name;             }            });            $scope.availableTags = badgeNames;           $scope.complete = function () {             console.log('running');             $( "#tags" ).autocomplete({               source: $scope.availableTags             });           };            badges.success(function(data) {             $scope.badgeList = data['items'];           });      }]);   &lt;/script&gt;   &lt;/head&gt;    &lt;body ng-app="app" ng-controller="ctrl"&gt;     &lt;div class="ui-widget"&gt;       &lt;label for="tags"&gt;Tags: &lt;/label&gt;       &lt;input id="tags" ng-keyup="complete()" ng-model="c.name"/&gt;     &lt;/div&gt;     &lt;ol&gt;       &lt;li ng-repeat="badge in badgeList | filter:c "&gt;         {{ badge.name }}       &lt;/li&gt;     &lt;/ol&gt;    &lt;body ng-app="app" ng-controller="ctrl"&gt;     &lt;div class="ui-widget"&gt;       &lt;label for="tags"&gt;Tags: &lt;/label&gt;       &lt;input id="tags" ng-keyup="complete()" ng-model="c.name"/&gt;     &lt;/div&gt;     &lt;ol&gt;       &lt;li ng-repeat="badge in badgeList | filter:c "&gt;         {{ badge.name }}       &lt;/li&gt;     &lt;/ol&gt;   &lt;/body&gt; &lt;/html&gt;   &lt;/body&gt; &lt;/html&gt; </code></pre>