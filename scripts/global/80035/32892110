<p>We have a body of code already using SWIG for Java (for Android mainly) from a common C++ code base.  This uses a IXXXXListener 'interface' (pure abstract class in C++) to call back up to Java from the C++.  This all works well.  However, I am now trying to make this work with C# in order to work with Xamarin for iOS (and Android) and am having a problem with the delegates that the SWIG director creates for C#.  When I run I get an error: </p>  <p>Attempting to JIT compile method '(wrapper native-to-managed) XXXXXX.IXXXXListener:SwigDirectoronXXXXX ()' while running with --aot-only. See <a href="http://docs.xamarin.com/ios/about/limitations" rel="nofollow">http://docs.xamarin.com/ios/about/limitations</a> for more information. </p>  <p>The Xamarin documentation talks about applying the MonoPInvokeCallback attribute wherever a delegate is provided to the native code (which I understand; there can be no JIT on iOS).  It also says that these need to be static. I have done this as necessary and documented elsewhere for the exceptions (<a href="http://blog.reblochon.org/2013/01/c-bindings-for-monotouch-using-swig.html" rel="nofollow">http://blog.reblochon.org/2013/01/c-bindings-for-monotouch-using-swig.html</a>), but it's not obvious how to do this with the director code that SWIG generates. </p>  <p>Does anyone have any ideas? Can I make SWIG produce more Java-like wrappers for C# directors? Or how would I go about turning the generated code into statics that could be decorated with the appropriate attribute? </p>