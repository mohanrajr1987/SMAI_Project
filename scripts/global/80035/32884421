<p>I'm new to all this so, despite spending hours looking for the answer, they all seem to say the same thing and it doesn't work!</p>  <p>I've created (my first) a blank app in VS 2015 using Xamarin. This works ok. Played around with the layout to create myself a log in screen. All looks fine. However, when I'm coding the onClick event for the button, and I try to reference the EditText boxes for username and password, they can't be found, even though I've set the </p>  <pre><code>android:id="@+id/userNameInput" </code></pre>  <p>things for each EditText.</p>  <p>When I use</p>  <pre><code>userName = (EditText)FindViewById(Resource.Id.userNameInput); </code></pre>  <p>to retrieve the content it can't find the resource userNameInput. In fact the only resource listed is the original myButton. Tried to add the resource in the projects properties as every search tells me to, but there isn't a resource tab.</p>  <p>So, how do I retrieve the content of userNameInput in the follwing method:</p>  <pre><code>    private void buttonClick(object sender, EventArgs e)      {         Button button = sender as Button;          userName = (EditText)FindViewById(Resource.Id.userNameInput);      } </code></pre>  <p>edit - added the following as requested. </p>  <p>Main.axml:</p>  <pre><code> &lt;?xml version="1.0" encoding="utf-8"?&gt;  &lt;RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"      android:orientation="vertical"      android:layout_width="fill_parent"      android:layout_height="fill_parent"&gt;      &lt;TextView          android:text="Username"          android:textAppearance="?android:attr/textAppearanceLarge"          android:layout_width="match_parent"          android:layout_height="wrap_content"          android:id="@+id/userNameLabel" /&gt;      &lt;EditText          android:layout_width="match_parent"          android:layout_height="wrap_content"          android:layout_below="@id/userNameLabel"          android:id="@+id/userNameInput" /&gt;      &lt;TextView          android:text="Password"          android:textAppearance="?android:attr/textAppearanceLarge"          android:layout_width="match_parent"          android:layout_height="wrap_content"          android:layout_below="@id/userNameInput"          android:id="@+id/userPWLabel" /&gt;      &lt;EditText          android:layout_width="match_parent"          android:layout_height="wrap_content"          android:layout_below="@id/userPWLabel"          android:id="@+id/userPWInput" /&gt;      &lt;Button          android:id="@+id/MyButton"          android:layout_width="fill_parent"          android:layout_height="wrap_content"          android:text="@string/Hello"          android:layout_below="@id/userPWInput"          android:onClick="buttonClick()" /&gt;  &lt;/RelativeLayout&gt; </code></pre>  <p>...and MainActivity.cs</p>  <pre><code>    protected override void OnCreate(Bundle bundle)     {         base.OnCreate(bundle);          // Set our view from the "main" layout resource         SetContentView(Resource.Layout.Main);          // Get our button from the layout resource,         // and attach an event to it         Button button = FindViewById&lt;Button&gt;(Resource.Id.MyButton);          button.Click += new EventHandler(buttonClick);      } </code></pre>  <p>Also tried it in VS2013 with the same effect. </p>