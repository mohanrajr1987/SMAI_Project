<p>Friends, <BR> I am trying to use connect-busboy and struggling with the right way of using it (or best practices). The below code is to capture title, description and an image file. Once I capture it, I want to save the image to the hard drive and the field data to a mongo db.</p>  <pre><code>create: function(req, res) {     var gotFile, gotTitle, gotDescription, savedToDB,          ext = "",         title = "",         description = "",         imgUrl = '',         saveImage = function() {             var possible = 'abcdefghijklmnopqrstuvwxyz0123456789';              for (var i=0; i &lt; 6; i+=1) {                 imgUrl += possible.charAt(Math.floor(Math.random() * possible.length));             }              //check if the filename already exists in the db             Models.Image.find({ filename: imgUrl }, function(err, images) {                 if (images.length &gt; 0) {                     //reinvoke the same method to generate a different imgUrl                     saveImage();                  } else {                     req.pipe(req.busboy);                      req.busboy.on('field', function (fieldname, val) {                         console.log("Uploading: " + fieldname + " = " + val + " [STEP 2]");                                                   //have to capture the 2 fields before we save to database. gotXXXXX keeps a track of what                          //data is already got from the form.                         if (fieldname === "title") {                             title = val;                             gotTitle = true;                             onFinish();                          } else if (fieldname === "description") {                             description = val;                             gotDescription = true;                             onFinish();                         }                     });                                          req.busboy.on('file', function (fieldname, file, filename, encoding, mimetype) {                         ext = path.extname(filename).toLowerCase();                          var fstream,                                             targetPath = path.resolve('./public/upload/' + imgUrl + ext);                           console.log("Uploading: " + filename + " [STEP 1]");                           if (ext === '.png' || ext === '.jpg' || ext === '.jpeg' || ext === '.gif') {                             fstream = fs.createWriteStream(targetPath);                             file.pipe(fstream);                             fstream.on('close', function () {                                 console.log("Uploading: fileStream ... CLOSE [STEP 4]");                                    gotFile = true;                                    onFinish();                                                    });                          } else {                             res.json(500, {error: 'Only image files are allowed.'});                         }                      });                      req.busboy.on('finish', function() {                         console.log("Uploading: ...FINISHED [STEP 3]");                                                  onFinish();                     });                 }             });         },          onFinish = function() {             if (gotFile &amp;&amp; gotDescription &amp;&amp; gotTitle) {                 if (!savedToDB) {                     var newImg = new Models.Image({                         title: title,                         filename: imgUrl + ext,                         description: description                     });                     newImg.save(function(err, image) {                         console.log('Successfully inserted image: ' + image.filename);                         res.redirect('/images/' + image.uniqueId);                     });                       savedToDB = true;                 }             }         };      saveImage(); } </code></pre>  <p>My questions:<BR> 1. What is the difference between "req.busboy" and "new Busboy(...)". <BR> 2. I tried using fstream.resume() but got an undefined error. Why? <BR> 3. I am listening to the file and field events. How can I be sure that all data is captured from the form before I save to database. At this time, I am using individual gotXXXXX variables to track that.<BR> 4. What all problems do you see with my code and what am I doing wrong?<BR> 5. Is there a good document or blog around busboy and how to use it?<BR> 6. What event tells me that all fields and files have been captured from the form post?<BR></p>