<p>I am generating (via Jade + Express.js + Node.js) an HTML page where I am setting the <code>value</code> of an <code>input[text]</code> element. However, even though this value is set properly (verified by viewing source code; Ctrl+U in FF), the interface shows a blank text box, and inspecting the element in FF shows extra AngularJS classes added to that <code>input[text]</code> element.</p>  <p>Appropriate line in the Jade template:</p>  <pre><code>input(type="text", class="form-control", tabindex=1, id="episodeVal", ng-model="epName", value="#{epName}") </code></pre>  <p>Output from Jade, generated via Node.js (which is exactly as per expectation):</p>  <pre><code>&lt;input type="text" tabindex="1" id="episodeVal" ng-model="epName" value="Arbit" class="form-control"&gt; </code></pre>  <p>"Computed" (correct word?) output shown by Firefox's "Inspect element" (this shows extra AngularJS classes added):</p>  <pre><code>&lt;input tabindex="1" id="episodeVal" ng-model="epName" value="Arbit" class="form-control ng-pristine ng-valid ng-touched" type="text"&gt; </code></pre>  <p>Why is AngularJS adding these additional classes? Am I correct in thinking that this is what is preventing the browser from showing the <code>value</code> set for <code>input[text]</code>?</p>  <p>Please let me know if any extra information is needed.</p>  <p><strong>Update 1:</strong> Just noticed that the enclosing form also has extra <code>ng-pristine</code> and <code>ng-valid</code> applied to it) and the FF </p>