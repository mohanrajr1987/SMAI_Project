<p>I have this table in my SQL Server database which has a few million rows. It stores pictures with urls. There are new pictures being added constantly and I don't want to have duplicated urls. So each time from my C# code I do linq query something like;</p>  <pre><code>!pictures.Any(n =&gt; n.url == url) </code></pre>  <p>or</p>  <pre><code>!pictures.Contains(n =&gt; n.url == url) </code></pre>  <p>So both of them increases the DTU of the database a lot especially on the CPU level. So I have to use higher tier in Azure Database service as well.</p>  <p>My question is, if I make the <code>url</code> column in the table a unique column or composite primary key and have my insert to db code in C# around try catch block, would it be better? Would it increase the performance of the query and database? Or is there better way to do that?</p>