<p>Is there any reason for it not working with a function returning a List&lt;>? Note that it will populate the list with the correct information. It's when sending the select publicLists.selectedList call it will fail.</p>  <p>The converter and everything is working like it should since the second version will work.</p>  <p>I am aware that you can use</p>  <pre><code>@PostConstruct public void init() </code></pre>  <p>But when I try to use a selectOneMenu like this it will not work</p>  <pre><code>&lt;p:selectOneMenu id="lista" value="#{publicLists.selectedList}" converter="allInstrumentConverter"&gt;                 &lt;f:selectItem itemLabel="Välj en" itemValue="" /&gt;                 &lt;f:selectItems value="#{publicLists.fetchLists()}" var="val" itemLabel="#{val.name}" itemValue="#{val}"/&gt;             &lt;/p:selectOneMenu&gt; </code></pre>  <p>Of course this will work since the list is prepopulated.</p>  <pre><code>&lt;p:selectOneMenu id="lista" value="#{publicLists.selectedList}" converter="allInstrumentConverter"&gt;                 &lt;f:selectItem itemLabel="Välj en" itemValue="" /&gt;                 &lt;f:selectItems value="#{publicLists.allLists}" var="val" itemLabel="#{val.name}" itemValue="#{val}"/&gt;             &lt;/p:selectOneMenu&gt; </code></pre>  <p>Function for returning the value (skipping irrelevant request to other service)</p>  <pre><code>try {             JsonNode json = response.readEntity(JsonNode.class);             allLists = mapper.readValue(json.traverse(), new TypeReference&lt;List&lt;AllLists&gt;&gt;(){});             return allLists;          } </code></pre>