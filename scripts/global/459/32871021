<p>hi there i'm newbie in android development and i'm following a tutrial but i got an errors so i need help , i'm trying to make a project to get rss feed from apple store" top 10 apps" and parsing it into android studio project and show it in listview  .. here's the error log </p>  <pre><code>&gt; 09-30 18:04:35.196    1969-1969/com.katarina.ahmed.top10appdownloader &gt; I/Timeline﹕ Timeline: Activity_idle id: android.os.BinderProxy@6ae73bc &gt; time:91550625 &gt;  &gt; 09-30 18:04:36.331    1969-1969/com.katarina.ahmed.top10appdownloader &gt; D/ViewRootImpl﹕ ViewPostImeInputStage ACTION_DOWN &gt;  &gt; 09-30 18:04:36.426    1969-1969/com.katarina.ahmed.top10appdownloader &gt; W/System.err﹕ java.lang.NullPointerException: Attempt to invoke &gt; virtual method 'int java.lang.String.length()' on a null object &gt; reference &gt;  &gt; 09-30 18:04:36.426    1969-1969/com.katarina.ahmed.top10appdownloader &gt; W/System.err﹕ at java.io.StringReader.&lt;init&gt;(StringReader.java:47) &gt;  &gt; 09-30 18:04:36.426    1969-1969/com.katarina.ahmed.top10appdownloader &gt; W/System.err﹕ at &gt; com.katarina.ahmed.top10appdownloader.ParseApplications.process(ParseApplications.java:37) &gt;  &gt; 09-30 18:04:36.426    1969-1969/com.katarina.ahmed.top10appdownloader &gt; W/System.err﹕ at &gt; com.katarina.ahmed.top10appdownloader.MainActivity$1.onClick(MainActivity.java:38) &gt;  &gt; 09-30 18:04:36.426    1969-1969/com.katarina.ahmed.top10appdownloader &gt; W/System.err﹕ at android.view.View.performClick(View.java:5184) &gt;  &gt; 09-30 18:04:36.426    1969-1969/com.katarina.ahmed.top10appdownloader &gt; W/System.err﹕ at android.view.View$PerformClick.run(View.java:20910) &gt;  &gt; 09-30 18:04:36.426    1969-1969/com.katarina.ahmed.top10appdownloader &gt; W/System.err﹕ at android.os.Handler.handleCallback(Handler.java:739) &gt;  &gt; 09-30 18:04:36.426    1969-1969/com.katarina.ahmed.top10appdownloader &gt; W/System.err﹕ at android.os.Handler.dispatchMessage(Handler.java:95) &gt;  &gt; 09-30 18:04:36.426    1969-1969/com.katarina.ahmed.top10appdownloader &gt; W/System.err﹕ at android.os.Looper.loop(Looper.java:145) &gt;  &gt; 09-30 18:04:36.426    1969-1969/com.katarina.ahmed.top10appdownloader &gt; W/System.err﹕ at &gt; android.app.ActivityThread.main(ActivityThread.java:5942) &gt;  &gt; 09-30 18:04:36.426    1969-1969/com.katarina.ahmed.top10appdownloader &gt; W/System.err﹕ at java.lang.reflect.Method.invoke(Native Method) &gt;  &gt; 09-30 18:04:36.426    1969-1969/com.katarina.ahmed.top10appdownloader &gt; W/System.err﹕ at java.lang.reflect.Method.invoke(Method.java:372) &gt;  &gt; 09-30 18:04:36.426    1969-1969/com.katarina.ahmed.top10appdownloader &gt; W/System.err﹕ at &gt; com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1400) &gt;  &gt; 09-30 18:04:36.426    1969-1969/com.katarina.ahmed.top10appdownloader &gt; W/System.err﹕ at &gt; com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1195) &gt;  &gt; 09-30 18:04:36.426    1969-1969/com.katarina.ahmed.top10appdownloader &gt; D/Main activity﹕ Error Parsing file </code></pre>  <p>the code for main is : </p>  <pre><code>PAckage com.com.katarina.top10appdownloader; import android.support.v7.app.AppCompatActivity; import android.os.Bundle; import android.util.Log; import android.view.Menu; import android.os.AsyncTask; import android.view.MenuItem; import android.view.View; import android.widget.ArrayAdapter; import android.widget.Button; import android.widget.ListView; import java.io.IOException; import java.io.InputStream; import java.io.InputStreamReader; import java.net.HttpURLConnection; import java.net.URL; import java.util.ArrayList;   public class MainActivity extends AppCompatActivity {     Button btnParse;     ListView listApps;     String XmlData;     @Override     protected void onCreate(Bundle savedInstanceState) {         super.onCreate(savedInstanceState);         setContentView(R.layout.activity_main);          btnParse=(Button) findViewById(R.id.btnParse);         listApps=(ListView) findViewById(R.id.listApps);         btnParse.setOnClickListener(new View.OnClickListener(){              @Override             public void onClick(View v) {             ParseApplications parse = new ParseApplications(XmlData);                  boolean operationStatus=parse.process();                  if(operationStatus)                 {                     ArrayList&lt;Application&gt; allApps=parse.getApplications();                     ArrayAdapter&lt;Application&gt; adapter=new ArrayAdapter&lt;Application&gt;(MainActivity.this,R.layout.list_item,allApps);                     listApps.setVisibility(listApps.VISIBLE);                     listApps.setAdapter(adapter);                 }                 else {                     Log.d("Main activity","Error Parsing file");                 }              }         });         new DownloadData().execute("http://ax.itunes.apple.com/WebObjects/MZStoreServices.woa/ws/RSS/topfreeapplications/limit=10/xml");     }      @Override     public boolean onCreateOptionsMenu(Menu menu) {         // Inflate the menu; this adds items to the action bar if it is present.         getMenuInflater().inflate(R.menu.menu_main, menu);         return true;     }      @Override     public boolean onOptionsItemSelected(MenuItem item) {         // Handle action bar item clicks here. The action bar will         // automatically handle clicks on the Home/Up button, so long         // as you specify a parent activity in AndroidManifest.xml.         int id = item.getItemId();          //noinspection SimplifiableIfStatement         if (id == R.id.action_settings) {             return true;         }          return super.onOptionsItemSelected(item);     }      private class DownloadData extends AsyncTask&lt;String,Void,String&gt;     {         String myXmlData;         protected String doInBackground(String...urls)         {             try {                 myXmlData=downloadXML(urls[0]);             } catch (IOException e)             {                 return " unable to download XML file ";             }             return "";         }         protected void onpostexecute(String result) {             Log.d("OnPostExecute", myXmlData);             XmlData=myXmlData;         }         private String downloadXML (String theUrl) throws IOException         {             int BUFFER_SIZE=2000;             InputStream is =null;             String xmlContents ="";             try{                 URL url=new URL(theUrl);                 HttpURLConnection conn=(HttpURLConnection) url.openConnection();                 conn.setReadTimeout(10000);                 conn.setConnectTimeout(15000);                 conn.setRequestMethod("GET");                 conn.setDoInput(true);                 int response=conn.getResponseCode();                 Log.d("Downloadxml","The REsponse returned is: "+response);                 is=conn.getInputStream();                 InputStreamReader isr= new InputStreamReader(is);                 int charRead;                 char[] inputBuffer=new char[BUFFER_SIZE];                 try {                     while ((charRead=isr.read(inputBuffer))&gt;0)                     {                         String readString=String.copyValueOf(inputBuffer,0,charRead);                         xmlContents+=readString;                         inputBuffer=new char[BUFFER_SIZE];                     }                     return xmlContents;                  } catch (IOException e){                     e.printStackTrace();                     return  null;                 }              } finally {                 if (is!=null)                     is.close();             }         }         }     } </code></pre>  <p>the parsing class :</p>  <pre><code>package com.katarina.top10appdownloader;  import android.util.Log;  import org.xmlpull.v1.XmlPullParser; import org.xmlpull.v1.XmlPullParserFactory;  import java.io.StringReader; import java.util.ArrayList;  public class ParseApplications {     private String data;     private ArrayList&lt;Application&gt; applications;      public ParseApplications(String XmlData) {         data = XmlData;         applications = new ArrayList&lt;Application&gt;();      }      public ArrayList&lt;Application&gt; getApplications() {         return applications;     }      public boolean process() {         boolean operationstatus = true;          Application currentRecord = null;         boolean inEntry = false;         String textValue = "";         try {              XmlPullParserFactory factory = XmlPullParserFactory.newInstance();             factory.setNamespaceAware(true);              XmlPullParser xpp = factory.newPullParser();             xpp.setInput(new StringReader(this.data));             int eventType = xpp.getEventType();             while (eventType != XmlPullParser.END_DOCUMENT) {                 String tagname = xpp.getName();                  if (eventType == XmlPullParser.START_TAG) {                     if (tagname.equalsIgnoreCase("entry")) {                         inEntry = true;                         currentRecord = new Application();                     }                 } else if (eventType == XmlPullParser.TEXT) {                     textValue = xpp.getText();                 } else if (eventType == XmlPullParser.END_TAG) {                     if (inEntry) {                         if (tagname.equalsIgnoreCase("entry")) {                             applications.add(currentRecord);                             inEntry = false;                         }                         if (tagname.equalsIgnoreCase("name")) {                             currentRecord.setName(textValue);                         } else if (tagname.equalsIgnoreCase("atrist")) {                             currentRecord.setArtist(textValue);                         } else if (tagname.equalsIgnoreCase("releaseDate")) {                             currentRecord.setReleaseDate(textValue);                         }                     }                 }                 eventType=xpp.next();             }          } catch (Exception e) {             e.printStackTrace();             operationstatus = false;         }         for(Application app:applications)         {             Log.d("LOG","*****************");             Log.d("LOG",app.getName());             Log.d("LOG",app.getArtist());             Log.d("LOG",app.getReleaseDate());         }         return operationstatus;     } } </code></pre>  <p>thanks in advance ..</p>