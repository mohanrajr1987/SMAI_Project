<p>Hi I keep getting this error, and I need to resolve it. What I am trying to do is link my twitter to an rss feed.</p>  <p>"error on line 1 at column 6923: Opening and ending tag mismatch: img line 0 and title"</p>  <pre><code>    function Twitter_RSS() {     return;      }      function doGet(e) {      var widgetID = e.queryString? e.queryString : "ERROR_NO_ID_FOUND";     var cache = CacheService.getPublicCache();     var id = "Twitter" + widgetID;     var rss = cache.get(id);      if ( ! rss ) {     rss = getTweets(widgetID);     cache.put(id, rss, 120); // Expire in 2 minutes     }      return ContentService.createTextOutput(rss)     .setMimeType(ContentService.MimeType.XML);     }       function getTweets(id) {      try {  var widget, json, tweets, regex, tweet, list, time, url, when, rss, heading, title, link, alltweets, permalink, permatitle;   title = "Twitter RSS Feed : " + id; link  = "http://www.techcovered.org/#" + id;               url   = "http://cdn.syndication.twimg.com/widgets/timelines/" + id;  widget  = UrlFetchApp.fetch(url); json    = Utilities.jsonParse(widget);     if ( ! json.body ) {   return; }  list = json.body.replace(/(\r\n|\n|\r)/gm," ")                 .replace(/\s+/g, " ")                 .replace(/&lt;div class=\"(h-card|footer|detail-expander|retweet-credit)[^&gt;]*&gt;(.*?)&lt;\/div&gt;/gi, "")                 .replace(/&lt;time[^&gt;]*&gt;(.*?)&lt;\/time&gt;/gi, "");  regex = new RegExp(/&lt;h1[^&gt;]*&gt;(.*?)&lt;\/h1&gt;/ig);  if ((heading = regex.exec(list)) !== null) {    regex = RegExp(/href="(.*?)"/ig);   if ((permalink = regex.exec(heading[1])) !== null) {     link = permalink[1];   }    regex = RegExp(/title="(.*?)"/ig);   if ((permatitle = regex.exec(heading[1])) !== null) {     title = permatitle[1];   } }  var self = ScriptApp.getService().getUrl() + "?" + id;  rss  = '&lt;?xml version="1.0"?&gt;&lt;rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"&gt;'; rss += ' &lt;channel&gt;&lt;title&gt;' + title + '&lt;/title&gt;'; rss += ' &lt;link&gt;' + link + '&lt;/link&gt;'; rss += ' &lt;atom:link href="' + self + '" rel="self" type="application/rss+xml"/&gt;'; rss += ' &lt;description&gt;' + title + ' :: RSS Generator available at http://www.labnol.org/?p=28149&lt;/description&gt;';  regex = RegExp(/&lt;ol[^&gt;]*&gt;(.*?)&lt;\/ol&gt;/ig);  if ((alltweets = regex.exec(list)) !== null) {    alltweets = alltweets[1].replace(/\s+/g, " ");    var re = /&lt;a class=".*?permalink.*?" href="(.*?)" data-datetime="(.*?)"[^&gt;]*&gt;(.*?)&lt;\/a&gt;(.*?)&lt;p[^&gt;]*&gt;(.*?)&lt;\/p&gt;/gm;    while (tweet = re.exec(alltweets)) {      url   = tweet[1];     when  = Utilities.formatDate(parseDate(tweet[2]), "UTC", "EEE, d MMM yyyy HH:mm:ss");      tweet = tweet[5].replace(/&lt;\s*(div|span|b|p)[^&gt;]*&gt;/gi, "")                     .replace(/&lt;\s*\/\s*(div|span|b|p)[^&gt;]*&gt;/gi, "")                     .replace(/class=".*?"|rel=".*?"|title=".*?"|target=".*?"|data-expanded-url=".*?"|data-query-source=".*?"|dir=".*?"|data-scribe=".*?"/gi, "")                     .replace(/\s+/g, " ");     if(tweet.substring(0,2)!="RT") {     rss += "&lt;item&gt;";     rss += " &lt;title&gt;"+ tweet.replace(/&lt;a[^&gt;]*&gt;(.*?)&lt;\/a&gt;/gi, "") + "&lt;/title&gt;";     rss += " &lt;pubDate&gt;" + when + " +0000&lt;/pubDate&gt;";     rss += " &lt;guid&gt;" + url + "&lt;/guid&gt;";     rss += " &lt;link&gt;" + url + "&lt;/link&gt;";     rss += " &lt;description&gt;&lt;![CDATA[ @"+url.split("/")[3] + ": " + tweet + "]]&gt;&lt;/description&gt;";     rss += "&lt;/item&gt;";                 }     }    rss += "&lt;/channel&gt;&lt;/rss&gt;";   return rss; }      } catch (e) {   Logger.log(e.toString());     }     }      function parseDate(d) {      var date = /(\d{4})-(\d{2})-(\d{2})T(\d{2}):(\d{2}):(\d{2})/;     var m = date.exec(d);     var year   = +m[1];     var month  = +m[2];     var day    = +m[3];     var hour   = +m[4];     var minute = +m[5];     var second = +m[6];      return new Date(year, month - 1, day, hour, minute, second);     } </code></pre>