<p>First of all, i need to say my java programming skills are less very basic, unfortunately.</p>  <p>I am trying to adapt a RSS parser from an Android app to display images when using a Bing news feed. Like this for example: <a href="http://www.bing.com/news/search?q=android&amp;format=RSS" rel="nofollow">http://www.bing.com/news/search?q=android&amp;format=RSS</a></p>  <p>Although the bing news rss has an image inside for each item, it is not wrapped in an usual media tag, but inside s tag like .... This is why no online feed readers i tried actually see that image.</p>  <p>The RSS handler java file now looks like below.</p>  <pre><code>public class RSSHandler extends DefaultHandler {      private State currentState = State.unknown;      private RSSFeed feed;     private RSSItem item;      private boolean itemFound = false;      private StringBuilder tagContent;      public RSSHandler() {     }      @Override     public void startDocument() throws SAXException {         feed = new RSSFeed();         item = new RSSItem();     }      @Override     public void startElement(final String uri, final String localName,              final String qName, final Attributes attributes)             throws SAXException {         currentState = State.unknown;         tagContent = new StringBuilder();         if (localName.equalsIgnoreCase("item") || localName.equalsIgnoreCase("entry")) {             itemFound = true;             item = new RSSItem();             currentState = State.unknown;         } else if (qName.equalsIgnoreCase("title")) {             currentState = State.title;         } else if (qName.equalsIgnoreCase("description") || qName.equalsIgnoreCase("content:encoded")) {             currentState = State.description;         } else if (qName.equalsIgnoreCase("link") || qName.equalsIgnoreCase("origLink")) {             currentState = State.link;         } else if (qName.equalsIgnoreCase("pubdate") || qName.equalsIgnoreCase("published")) {             currentState = State.pubdate;         } else if (qName.equalsIgnoreCase("media:thumbnail")) {             currentState = State.media;                 String attrValue = attributes.getValue("url");             item.setThumburl(attrValue);         } else if (qName.equalsIgnoreCase("News:Image")) {             currentState = State.news;         } else if (qName.equalsIgnoreCase("media:content")){             currentState = State.media;                String attrValue = attributes.getValue("url");             if (attributes.getValue("type") == null || attributes == null){                 return;             } else if (attributes.getValue("type").startsWith("image")) {                 item.setThumburl(attrValue);             } else if (attributes.getValue("type").startsWith("video")){                 item.setVideourl(attrValue);             } else if (attributes.getValue("type").startsWith("audio")){                  item.setAudiourl(attrValue);             }          } else if (qName.equalsIgnoreCase("enclosure")){             currentState = State.media;                String attrValue = attributes.getValue("url");             if (attributes.getValue("type").startsWith("image")){                 item.setThumburl(attrValue);             } else if (attributes.getValue("type").startsWith("video")){                  item.setVideourl(attrValue);             } else if (attributes.getValue("type").startsWith("audio")){                  item.setAudiourl(attrValue);             }          }      }      @Override     public void endElement(final String uri, final String localName,              final String qName) throws SAXException {         if (localName.equalsIgnoreCase("item") || localName.equalsIgnoreCase("entry")) {             feed.addItem(item);         }         if (itemFound == true) {             // "item" tag found, it's item's parameter             switch (currentState) {                 case title:                     item.setTitle(Html.fromHtml(tagContent.toString().trim()).toString());                     break;                 case description:                     item.setDescription(tagContent.toString());                                        //if thumburl not already set                     if (item.getThumburl() == null || item.getThumburl() == ""){                         String html = tagContent.toString();                         org.jsoup.nodes.Document docHtml = Jsoup                                 .parse(html);                         Elements imgEle = docHtml.select("img");                         String source = imgEle.attr("src");                         item.setThumburl(source);                     }                     break;                 case link:                     item.setLink(tagContent.toString());                     break;                 case pubdate:                     item.setPubdate(tagContent.toString());                     break;                 case news:                     Log.d("Testing", "Checkpoint");                     item.setThumburl(tagContent.toString());                     break;                  case media:                     break;                 default:                     break;             }         } else {             // not "item" tag found, it's feed's parameter             switch (currentState) {                 case title:                     feed.setTitle(tagContent.toString());                     break;                 case description:                     feed.setDescription(tagContent.toString());                     break;                 case link:                     feed.setLink(tagContent.toString());                     break;                 case pubdate:                     feed.setPubdate(tagContent.toString());                     break;                 default:                     break;             }         }     }      @Override     public void characters(final char[] ch, final int start, final int length)              throws SAXException {         tagContent.append(ch, start, length);     }      public RSSFeed getFeed() {         return feed;     }      public enum State {         unknown, title, description, link, pubdate, media, news      }  } </code></pre>  <p>Code</p>  <pre><code>else if (qName.equalsIgnoreCase("News:Image")) {            currentState = State.news;} </code></pre>  <p>and</p>  <pre><code>case news: Log.d("Testing", "Checkpoint"); item.setThumburl(tagContent.toString()); break;  </code></pre>  <p>was added by me, hoping that will see the image tag and set the thumb url so that can be used. Apparently it wasn't that easy :)</p>  <p>There are no errors, the app still parse the feed but only with title, description and link, no image. The "checkpoint" log is never showing in logcat, so i assume what i did does not really do anything...</p>