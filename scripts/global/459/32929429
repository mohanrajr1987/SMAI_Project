<p>The below given code has errors as specified herewith. Kindly help me resolve them.</p>  <pre><code>1 #include "contiki.h" 2 #include &lt;stdio.h&gt; 3 4 static struct collect_conn tc; 5 6 PROCESS(example_collect_process, "RSS Measurement"); 7 AUTOSTART_PROCESSES(&amp;example_collect_process); 8 9 static void recv(const rimeaddr_t *originator, uint8_t seqno,     uint8_t hops) 10 { 11  static signed char rss; 12  static signed char rss_val; 13  static signed char rss_offset; 14  printf("Sink got message from %d.%d, seqno %d, hops %d: len %d   '%s'\n",originator-&gt;u8[0], originator-&gt;u8[1],seqno,   hops,packetbuf_datalen(), 15         (char *)packetbuf_dataptr()); 16  rss_val = cc2420_last_rssi; 17  rss_offset=-45; 18  rss=rss_val + rss_offset; 19  printf("RSSI of Last Packet Received is %d\n",rss); 20 } 21 22 static const struct collect_callbacks callbacks = { recv }; 23 24 PROCESS_THREAD(example_collect_process, ev, data) 25 { 26  static struct etimer periodic; 27  static struct etimer et; 28   29  PROCESS_BEGIN(); 30 31  collect_open(&amp;tc, 130, COLLECT_ROUTER, &amp;callbacks); 32 33  if(rimeaddr_node_addr.u8[0] == 1 &amp;&amp; rimeaddr_node_addr.u8[1] == 0)  34  { 35    printf("I am sink\n"); 36    collect_set_sink(&amp;tc, 1); 37  } 38 39  /* Allow some time for the network to settle. */ 40  etimer_set(&amp;et, 120 * CLOCK_SECOND); 41  PROCESS_WAIT_UNTIL(etimer_expired(&amp;et)); 42 43  while(1)  44  { 45 46    /* Send a packet every 1 seconds. */ 47    if(etimer_expired(&amp;periodic))  48    { 49      etimer_set(&amp;periodic, CLOCK_SECOND * 1 ); 50      etimer_set(&amp;et, random_rand() % (CLOCK_SECOND * 1)); 51    } 52 53    PROCESS_WAIT_EVENT(); 54 55 56    if(etimer_expired(&amp;et))  57    { 58      static rimeaddr_t oldparent; 59      const rimeaddr_t *parent; 60      if(rimeaddr_node_addr.u8[0] != 1 ) 61      { 62        printf("Sending\n"); 63        packetbuf_clear(); 64        packetbuf_set_datalen(sprintf(packetbuf_dataptr(),"%s",   "Fight On") + 1); 65        collect_send(&amp;tc, 15); 66 67        parent = collect_parent(&amp;tc); 68        if(!rimeaddr_cmp(parent, &amp;oldparent))  69        { 70           if(!rimeaddr_cmp(&amp;oldparent, &amp;rimeaddr_null)) 71           { 72              printf("#L %d 0\n", oldparent.u8[0]); 73           } 74           if(!rimeaddr_cmp(parent, &amp;rimeaddr_null))  75           { 76              printf("#L %d 1\n", parent-&gt;u8[0]); 77           } 78            79           rimeaddr_copy(&amp;oldparent, parent); 80        } 81      } 82    } 83 84  } //end of while 85 86  PROCESS_END(); 87 } //end of process thread </code></pre>  <p>Errors:</p>  <p>[java] rss.c:70:42: error: ‘rimeaddr_null’ undeclared (first use in this function)</p>  <p>[java] rss.c:72:44: error: request for member ‘u8’ in something not a structure or union</p>  <p>[java] rss.c:76:41: error: request for member ‘u8’ in something not a structure or union</p>