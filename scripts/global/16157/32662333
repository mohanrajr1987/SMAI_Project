<p>I'm writing a simple calculator in HTML &amp; Javascript. It seems that using <code>HTMLElement.focus()</code> in conjunction with touch input causes Google Chrome to pop up an annoying menu. The menu is the same as can be seen on this page about <a href="http://techwhack.co/google-chrome-os-touch-based-text-editing-tablet-coming/" rel="nofollow">Touch Based Text Editing in Chrome OS</a> (although I'm testing on Windows 10). Disabling "Touch Based Text Editing" in Chrome's settings seems to disable the menu, but that's not a workable solution in general. </p>  <p>I'm using code similar to the <a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLTextAreaElement#Insert_HTML_tags_example" rel="nofollow">HTMLTextAreaElement - Insert HTML Tags Example</a> on MDN. Here is some example code that can pop up the menu:</p>  <p><div class="snippet" data-lang="js" data-hide="false"> <div class="snippet-code"> <pre class="snippet-code-js lang-js prettyprint-override"><code>function insertText(startText, endText) {   var inputElement = document.getElementById("ii");    var startPos = inputElement.selectionStart;   var endPos = inputElement.selectionEnd;   var oldText = inputElement.value;    var beforeText = oldText.substring(0, startPos)   var highlightText = oldText.substring(startPos, endPos);   var afterText = oldText.substring(endPos);    // Enclose highlighted text with startText and endText.   inputElement.value = beforeText + startText + highlightText + endText + afterText;    // Translate highlight position.   inputElement.setSelectionRange(startPos + startText.length, endPos + startText.length);    // Put the text caret back into the input element   inputElement.focus(); }</code></pre> <pre class="snippet-code-html lang-html prettyprint-override"><code>&lt;!DOCTYPE html&gt; &lt;html lang="en"&gt;  &lt;head&gt;   &lt;meta charset="utf-8" /&gt;   &lt;title&gt;Example!&lt;/title&gt; &lt;/head&gt;  &lt;body&gt;   &lt;input id="ii" type="text" /&gt;   &lt;button id="bb" onclick="insertText('start:', ':end')"&gt;Text&lt;/button&gt;   &lt;button id="b1" onclick="insertText('1', '')"&gt;1&lt;/button&gt;   &lt;button id="b2" onclick="insertText('2', '')"&gt;2&lt;/button&gt; &lt;/body&gt;  &lt;/html&gt;</code></pre> </div> </div> </p>  <p>I need to call <code>inputElement.focus()</code> so the caret is shown in the input text box. Oddly, the problem only happens the second time inputElement.focus() is triggered after focus is lost. That is: pressing a button the first time doesn't trigger the menu. Pressing any button after the first time triggers the menu. Pressing out of the page (so focus is not on a button or the input text form) resets the behavior (so pressing a button doesn't trigger it, but pressing another button does). Very odd.</p>  <p>This only happens when using touch (the mouse and keyboard don't seem to trigger the behavior). In fact, Chrome's menu pops up when using touch with stackoverflow.com's comment editor too! It works fine in MSIE, Edge, or Firefox. </p>  <p>I've tried capturing the <code>onselect</code>, <code>onfocus</code>, and <code>oncontextmenu</code> events. I've tried calling <code>event.preventDefault()</code>, <code>event.stopPropagation()</code>, and returning <code>false</code>. I've tried a few CSS styles to no avail. I'm at a loss how to disable this annoying behavior. I'm not trying to disable right-clicking context menus. Just the automatic menu behavior. Any help is appreciated!</p>