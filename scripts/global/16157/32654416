<p>I am using a <a href="http://grepcode.com/file/repository.grepcode.com/java/ext/com.google.android/android/4.4_r1/android/view/GestureDetector.java#GestureDetector.SimpleOnGestureListener" rel="nofollow">SimpleOnGestureListener</a> to detect the <a href="http://developer.android.com/reference/android/view/GestureDetector.SimpleOnGestureListener.html#onSingleTapUp%28android.view.MotionEvent%29" rel="nofollow">onSingleTapUp</a> event an a View.</p>  <p>The view has a scale factor of 5, therefore 1 screen pixel corresponds to 5 pixels on my view:</p>  <pre><code>  view.setScaleX(5);   view.setScaleY(5); </code></pre>  <p>The problem I am facing is that the Tap event is not detected accurately. I looked in the source code of <code>SimpleOnGestureListener</code>, the relevant parts are:</p>  <ul> <li><a href="http://grepcode.com/file/repository.grepcode.com/java/ext/com.google.android/android/4.4_r1/android/view/GestureDetector.java#594" rel="nofollow">Here</a> the <code>SingleTapUp()</code> listener is called if the touch points haven't moved over a certain threshold</li> <li><a href="http://grepcode.com/file/repository.grepcode.com/java/ext/com.google.android/android/4.4_r1/android/view/GestureDetector.java#466" rel="nofollow">Here</a> the travel distance of the touch points are calculated </li> </ul>  <p>I think the reason why the Tap is not detected reliably is that the distance calculation for the touch points relies on the scaled local coordinates of the view (<code>e.getX()</code> and <code>e.getY()</code>) instead of the raw coordinates (<code>e.getRawX()</code> and <code>e.getRawY()</code>). </p>  <p>Due to the scale factor tiny movements of the finger on screen will cause large changes in <code>e.getX()</code> and <code>e.getY()</code>.</p>  <p>Is my interpretation of the code correct? If so, how can I work around this problem?</p>  <p>For now my workaround is to intercept all events on a <code>View</code> that has no scale factor and then do the dispatching of the <code>MotionEvents</code> myself to the views that have the scale factor. </p>  <p>It works well, still I'd be interested if my analysis of the android code is correct or not.</p>  <p>I am using android 4.4</p>