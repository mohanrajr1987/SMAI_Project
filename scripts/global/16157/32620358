<p>I have a <code>PopupWindow</code> with several buttons that I need to drag around the screen. I set up the PopupWindow fairly normally:</p>  <pre><code>LayoutInflater inflater = (LayoutInflater) parent.getBaseContext().getSystemService(Context.LAYOUT_INFLATER_SERVICE); popupView = inflater.inflate(R.layout.popup, (ViewGroup) parent.findViewById(R.id.popup_element)); popup = new PopupWindow(popupLayout, 600, ViewGroup.LayoutParams.WRAP_CONTENT, true);  ... popup.showAtLocation(popupView, Gravity.NO_GRAVITY, mPosX, mPosY); </code></pre>  <p>This has several buttons whose functionality I use the normal setOnClickListener</p>  <pre><code>mButton1.setOnClickListener(new OnClickListener() {...}); ... </code></pre>  <p>There is a <code>SeekBar</code> which the user can't use:</p>  <pre><code>seekBar.setOnTouchListener(new OnTouchListener() {     @Override     public boolean onTouch(View v, MotionEvent event) {         return true;     } } </code></pre>  <p>And finally I handle dragging with <code>setOnTouchListener</code> for the popup's view</p>  <pre><code>popupView.setOnTouchListener(new OnTouchListener() {...}); </code></pre>  <p>The issue is that the touch event doesn't get triggered when touching the buttons which are children to the LinearLayout <code>popup_element</code>. This gives very little room around the buttons for dragging. I would like to be able to drag the PopupWindow even if it's a button that's touched or the seekbar.</p>  <p>I attempted to make my parent layout a custom layout, extending <code>LinearLayout</code> in order to implement <code>onInterceptTouchEvent()</code> and intercept the touch on an <code>ACTION_MOVE</code> event, but it doesn't seem to be working and I'm not sure how to handle the difference between <code>onClick</code> and <code>onTouch</code>. </p>  <p>Here is my layout if that helps:</p>  <pre><code>&lt;!-- I was considering changing this to my own class that extends Linear Layout --&gt; &lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"     xmlns:tools="http://schemas.android.com/tools"     android:id="@+id/popup_element"     ...&gt;      &lt;ImageButton         android:layout_width="wrap_content"         android:layout_height="wrap_content"         android:id="@+id/acceptButton"         android:src="@drawable/accept_btn_selector"         android:background="@null" /&gt;      &lt;ImageButton         android:layout_width="wrap_content"         android:layout_height="wrap_content"         android:id="@+id/playButton"         android:src="@drawable/play_btn_selector"         android:background="@null" /&gt;      &lt;ImageButton         android:layout_width="wrap_content"         android:layout_height="wrap_content"         android:id="@+id/recordButton"         android:src="@drawable/record_btn_selector"         android:background="@null" /&gt;      &lt;SeekBar         style="?android:attr/progressBarStyleHorizontal"         android:layout_width="fill_parent"         android:layout_height="wrap_content"         android:id="@+id/progressBar"         android:layout_margin="20dp"         android:thumb="@drawable/seek_thumb" /&gt;   &lt;/LinearLayout&gt; </code></pre>  <p>Any ideas? This seems like it would be a fairly common thing to do, but I can't find any info at all.</p>