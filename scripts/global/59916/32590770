<p>I have written some LESS code that resizes text based on browser width. Multiple different elements and their parameters can be sent to the reusable mixin.</p>  <p>All online LESS compilers output the desired result. But I am getting different output from Squarespace's LESS compiler.</p>  <p>Squarespace's compiler appears to "hang on" to the old variable values when called a second time.</p>  <p>Can you see how Squarespace's LESS compiler is reaching its output and, if so, share changes that can be made to make the output consistent with all other compilers?</p>  <p><strong>Output from online compilers: (desired)</strong></p>  <pre><code>@media screen and (max-width: 1280px) {   .homesCommunitiesLayout #pageHeroWrapper {     font-size: 120px;   } } @media screen and (max-width: 640px) {   .homesCommunitiesLayout #pageHeroWrapper {     font-size: 60px;   } } @media screen and (max-width: 1280px) {   #divisionTitle {     font-size: 85px;   } } @media screen and (max-width: 853.3333333333334px) {   #divisionTitle {     font-size: 56.666666666666664px;   } } @media screen and (max-width: 426.6666666666667px) {   #divisionTitle {     font-size: 28.333333333333332px;   } } </code></pre>  <p><strong>Output from Squarespace compiler: (undesirable)</strong></p>  <pre><code>@media screen and (max-width: 1280px) {     .homesCommunitiesLayout #pageHeroWrapper {         font-size: 120px;     } } @media screen and (max-width: 640px) {     .homesCommunitiesLayout #pageHeroWrapper {         font-size: 60px;     } } @media screen and (max-width: 1920px) { //&lt;---Gone wrong! Continuing to use element1!     .homesCommunitiesLayout #pageHeroWrapper {          font-size: 180px;     } } @media screen and (max-width: 1280px) {     .homesCommunitiesLayout #pageHeroWrapper {         font-size: 120px;     } } @media screen and (max-width: 640px) {     .homesCommunitiesLayout #pageHeroWrapper {         font-size: 60px;     } } </code></pre>  <p>LESS Source Code and <a href="http://less2css.org/#%7B%22less%22%3A%22%40maxSiteWidth%3A%201280px%3B%5Cn%40fullWidth%3A%20%40maxSiteWidth%3B%5Cn%5Cn%2F%2FElement%201%20Parameters%20%26%20Function%20Call%5Cn%40fitTextElement1%3A%20~%5C%22.homesCommunitiesLayout%20%23pageHeroWrapper%5C%22%3B%5Cn%40fitTextElement1Max%3A%20120px%3B%5Cn%40fitTextElement1Min%3A%2050px%3B%5Cn%40fitTextElement1BreakPoints%3A%202%3B%5Cn.fitText%28%40fitTextElement1%3B%20%40fitTextElement1Max%3B%20%40fitTextElement1Min%3B%20%40fitTextElement1BreakPoints%29%3B%5Cn%5Cn%2F%2FElement%202%20Parameters%20%26%20Function%20Call%5Cn%40fitTextElement2%3A%20~%5C%22%23divisionTitle%5C%22%3B%5Cn%40fitTextElement2Max%3A%2085px%3B%5Cn%40fitTextElement2Min%3A%2026px%3B%5Cn%40fitTextElement2BreakPoints%3A%203%3B%5Cn.fitText%28%40fitTextElement2%3B%20%40fitTextElement2Max%3B%20%40fitTextElement2Min%3B%20%40fitTextElement2BreakPoints%29%3B%5Cn%5Cn%2F%2FPrimary%20Looping%20Mixin%5Cn.fitText%28%40targetElement%3B%20%40targetElementMaxSize%3B%20%40targetElementMinSize%3B%20%40targetElementBreakPoints%29%20%7B%5Cn%5Ct.mixin-loop%20%28%40loopIteration%29%20when%20%28%40loopIteration%20%3E%200%29%20%7B%5Cn%5Cn%5Ct%5Ct%40%7BtargetElement%7D%20%7B%5Cn%5Ct%5Ct%5Ct.setBreakPointWidth%28%40loopIteration%3B%20%40targetElementBreakPoints%29%3B%5Cn%5Ct%5Ct%5Ct%40media%20screen%20and%20%28max-width%3A%20%40breakPointWidth%29%20%7B%5Cn%5Ct%5Ct%5Ct%5Ct.setFontSize%28%40loopIteration%3B%20%40targetElementMaxSize%3B%20%40targetElementMinSize%3B%20%40targetElementBreakPoints%29%3B%5Cn%5Ct%5Ct%5Ct%5Ctfont-size%3A%20%40targetElementFontSize%3B%5Cn%5Ct%5Ct%5Ct%7D%5Cn%5Ct%5Ct%7D%5Cn%5Ct%5Ct.mixin-loop%28%40loopIteration%20-%201%29%3B%5Cn%5Ct%7D%5Cn%5Ct.mixin-loop%280%29%7B%7D%5Cn%5Ct.mixin-loop%28%40targetElementBreakPoints%29%3B%5Cn%7D%5Cn%5Cn%2F%2FFunction%20to%20set%20font%20size%5Cn.setFontSize%28%40loopNumber%3B%20%40maxSize%3B%20%40minSize%3B%20%40breakPoints%29%20%7B%5Cn%5Ct%40targetElementFontSize%3A%20%28%40maxSize%2F%40breakPoints%29*%40loopNumber%3B%5Cn%5Ct.resetFontSize%28%40targetElementFontSize%3B%20%40minSize%29%3B%5Cn%7D%5Cn%5Cn%2F%2FFunction%20to%20reset%20font%20size%20if%20below%20minimum%20desired%5Cn.resetFontSize%28%40calculatedSize%3B%20%40minSize%29%20when%20%28%40calculatedSize%20%3C%20%40minSize%29%20%7B%5Cn%5Ct%40targetElementFontSize%3A%20%40minSize%3B%5Cn%7D%5Cn%5Cn%2F%2FFunction%20to%20set%20break%20point%5Cn.setBreakPointWidth%28%40loopNumber%3B%20%40breakPoints%29%20%7B%5Cn%5Ct%40breakPointWidth%3A%20%28%40fullWidth%2F%40breakPoints%29*%40loopNumber%3B%5Cn%7D%22%7D" rel="nofollow">Link to code on Less2Css.org</a>:</p>  <pre><code>@maxSiteWidth: 1280px; @fullWidth: @maxSiteWidth;  //Element 1 Parameters &amp; Function Call @fitTextElement1: ~".homesCommunitiesLayout #pageHeroWrapper"; @fitTextElement1Max: 120px; @fitTextElement1Min: 50px; @fitTextElement1BreakPoints: 2; .fitText(@fitTextElement1; @fitTextElement1Max; @fitTextElement1Min; @fitTextElement1BreakPoints);  //Element 2 Parameters &amp; Function Call @fitTextElement2: ~"#divisionTitle"; @fitTextElement2Max: 85px; @fitTextElement2Min: 26px; @fitTextElement2BreakPoints: 3; .fitText(@fitTextElement2; @fitTextElement2Max; @fitTextElement2Min; @fitTextElement2BreakPoints);  //Primary Looping Mixin .fitText(@targetElement; @targetElementMaxSize; @targetElementMinSize; @targetElementBreakPoints) {     .mixin-loop (@loopIteration) when (@loopIteration &gt; 0) {          @{targetElement} {             .setBreakPointWidth(@loopIteration; @targetElementBreakPoints);             @media screen and (max-width: @breakPointWidth) {                 .setFontSize(@loopIteration; @targetElementMaxSize; @targetElementMinSize; @targetElementBreakPoints);                 font-size: @targetElementFontSize;             }         }         .mixin-loop(@loopIteration - 1);     }     .mixin-loop(0){}     .mixin-loop(@targetElementBreakPoints); }  //Function to set font size .setFontSize(@loopNumber; @maxSize; @minSize; @breakPoints) {     @targetElementFontSize: (@maxSize/@breakPoints)*@loopNumber;     .resetFontSize(@targetElementFontSize; @minSize); }  //Function to reset font size if below minimum desired .resetFontSize(@calculatedSize; @minSize) when (@calculatedSize &lt; @minSize) {     @targetElementFontSize: @minSize; }  //Function to set break point .setBreakPointWidth(@loopNumber; @breakPoints) {     @breakPointWidth: (@fullWidth/@breakPoints)*@loopNumber; } </code></pre>  <p>Note that Squarespace uses LESS 1.3.3 so you'll need to manually switch Less2Css to that version (though it doesn't seem to change anything if you don't).</p>