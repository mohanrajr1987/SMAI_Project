<p>This is an excerpt from the function insert() in a SQL interface. I'm using the pgdb module (PyGreSQL).</p>  <pre><code>table = raw_input("Choose table: ")  ## Print list of values needed. #query produces the number of values needed in the table. query = """SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE table_catalog = current_database() AND table_name = %s"""%(table) self.cur.execute(query) print "Number of values needed: ",   self.print_answer()  params = [x.strip() for x in raw_input("Choose values: ").split(",")] params = [table] + params print(params) query = """INSERT INTO %s VALUES %s"""%('?',','.join('?' * int(len(params)-1)))  self.cur.execute(query, params) self.print_answer() </code></pre>  <p>Upon running this code, I get the following error message:</p>  <pre><code>Traceback (most recent call last):   File "interface.py", line 191, in &lt;module&gt;     db.run()   File "interface.py", line 182, in run     actions[self.print_menu()-1]()   File "interface.py", line 157, in insert     self.cur.execute(query, params)   File "build/bdist.macosx-10.6-intel/egg/pgdb.py", line 323, in execute   File "build/bdist.macosx-10.6-intel/egg/pgdb.py", line 359, in executemany pg.OperationalError: internal error in 'BEGIN': not all arguments converted during string formatting </code></pre>  <p>There is some kind of error in the execution of the rows with the parameters. I do not understand what. What is the correct way to write parameterized querys?</p>