<p>I'm using <code>WTForms</code> with <code>Flask</code> and I need to add a new parameter in the field base class. Until now I used to assign a tuple to the <code>description</code> parameter by invoking a function which returns the desired tuple:</p>  <pre><code># app/forms.py # -*- coding: utf-8 -*-  from flask.ext.wtf import Form from wtforms import IntegerField from wtforms import ValidationError from wtforms.validators import InputRequired from flask.ext.babel import lazy_gettext      def descr(name):     descrs = {     'd': ('description', 'unit'),     'h': (lazy_gettext('description2'), 'unit2'),     # ...     }     return descrs.get(name, name)  class As(Form):     d = IntegerField('d', default=210, description=descr('d'), validators=[InputRequired()])     # ...  class BendingForce(Form):     h = IntegerField(lazy_gettext('h'), default=250, description=descr('h'), validators=[InputRequired(), grater_than_cero])     # ... </code></pre>  <p>Now I would like to have two parameters <code>description</code> and <code>unit</code> to assign the desired values. How can I accomplish that ? Is it wise to do that anyway?</p>  <p>Example:</p>  <pre><code>class BendingForce(Form):             h = IntegerField(lazy_gettext('h'), default=250,                               description='description2', unit='unit2',                               validators=[InputRequired(), grater_than_cero])             # ... </code></pre>