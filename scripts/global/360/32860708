<p>The problem: I'd like to resolve slugs, if a slug has been used as a route parameter instead of an id.</p>  <p>Attempted Solution: I'm currently getting a parameter from the request in my middleware and trying to set it back to the request. But it seems that this isn't passed to the route (it is passed to subsequent middleware)</p>  <p>Route:</p>  <pre><code>Route::get('view_events/{gid}', array('as' =&gt; 'view_events','middleware' =&gt; ['auth','resolveGroupSlug','groupAdmin'], function($gid)  {     $user = Auth::user();     $group = Team::find($gid);     echo $gid;       //get this user's relationship to group     $group["team_user"] = Users_team::findComposite($gid,$user["id"]);     $events = Helpers::getEvents($gid,0);     return View::make('view_events', array('user' =&gt; $user, 'group' =&gt; $group, 'events' =&gt; $events)); })); </code></pre>  <p>Middleware (resolveGroupSlug):</p>  <pre><code>public function handle($request, Closure $next)     {         //convert a string gid to id number         if (is_string ($request-&gt;gid)) {             $group = Team::where('slug', '=', $request-&gt;gid)-&gt;firstOrFail();             $request['gid'] = $group-&gt;id;             echo $request-&gt;gid;         }         return $next($request);     } </code></pre>  <p>Any ideas how to set a route parameter in middleware? Or if there is just an easier way of doing this.</p>  <p>(No, i'm not going to copy paste the middleware code into every route i need this in!)</p>  <p>Thanks!!</p>