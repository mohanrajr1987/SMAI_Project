<p>I have a wpf application that needs to be called with several command line arguments. How do I show them in the labels that I have put in the window just for that reason? I tried to implement data binding, but without success, - the variable is read and assigned correctly, but for some absurd reason is not shown on screen, in the label I want. Here is the code:</p>  <pre><code>public partial class MainWindow : Window {     public Notification _notif = new Notification();     public MainWindow()     {         InitializeComponent();         this.DataContext = new Notification();     }      protected override void OnClosed(EventArgs e)     {         base.OnClosed(e);         App.Current.Shutdown();     } }  public partial class App : Application {     protected override void OnStartup(StartupEventArgs e){         if (e.Args.Length &gt;= 4)         {             MainWindow mainWindow = new MainWindow();              Label count_label = (Label)mainWindow.FindName("count");             count_label.DataContext = mainWindow._notif;              System.Diagnostics.Debug.WriteLine(mainWindow._notif.count + " - notif.count");             // bind the Date to the UI             count_label.SetBinding(Label.ContentProperty, new Binding("count")             {                 Source = mainWindow._notif,                 Mode = BindingMode.TwoWay             });             //assigning values to the labels              System.Diagnostics.Debug.WriteLine(count_label.Content + " - content of the label 'count'");             mainWindow._notif.count = e.Args[0];             System.Diagnostics.Debug.WriteLine(e.Args[0] + " is the argument n. 0");             System.Diagnostics.Debug.WriteLine(mainWindow._notif.count + " - notif.count");               System.Diagnostics.Debug.WriteLine(count_label.Content + "-------------------");              System.Diagnostics.Debug.WriteLine(count_label.Content + " - content of the label 'count'");             mainWindow._notif.count = "1234";             System.Diagnostics.Debug.WriteLine(mainWindow._notif.count + " - notif.count");             System.Diagnostics.Debug.WriteLine(count_label.Content + " - content of the label 'count'");          }     } }  public class Notification : INotifyPropertyChanged {     private string _count;      public string count {         get {             return _count;         }          set {             _count = value;             OnPropertyChanged("count");         }     }      #region INotifyPropertyChanged Members      public event PropertyChangedEventHandler PropertyChanged;      protected virtual void OnPropertyChanged(string propertyName)     {         if (PropertyChanged != null)         {             PropertyChanged(this, new PropertyChangedEventArgs(propertyName));         }     }      #endregion } </code></pre>  <p>And here you can see a snippet from the xaml:</p>  <pre><code>&lt;Label x:Name="count" Content="{Binding count}" HorizontalAlignment="Center" Margin="0,10,486,0" VerticalAlignment="Top" RenderTransformOrigin="-2.895,-0.769" Height="80" Width="145" FontFamily="Arial" FontSize="64" HorizontalContentAlignment="Center"/&gt; </code></pre>  <p>Thank you anticipately.</p>