<p>I am having trouble getting my head around optimistic locking. The framework I am using is Play 1.2.5.</p>  <p>Say I am selling concert tickets. I currently have the following:</p>  <pre><code>if (concert.ticketsSold &lt; concert.tickets) {     concert.ticketsSold ++;     concert.save(); } </code></pre>  <p>However, when several people book at the same time, the ticketsSold counter "lags" behind the real sold value. Eg it will say 2500 when i fact I sold 2700.</p>  <p>This is when I started reading about <strong>OptimisticLockException</strong>. In all the examples I found on the interweb, people tend to catch the OptimisticLockException, and show an error to the user.</p>  <p>What I want, is for the system to <strong>retry a certain number of times</strong>, before showing the user an error. The code I wrote is as follows:</p>  <pre><code>boolean saved = false; int tries = 0; while (!saved) {     try {         if (concert.ticketsSold &lt; concert.tickets) {             concert.ticketsSold ++;             concert.save();             saved = true;         } else break;     } catch (OptimisticLockException e) {         // reload concert object from the database         concert.refresh();     }     if (tries &gt; 9) break;     tries++; } </code></pre>  <p>As you see above, I try to reload the object from the database, to get the "updated" object, with the correct number of tickets sold, but whatever I try (refresh, reload, commit and begin new transaction), the object is not refreshed, and I still get the normal "cached" version of the object.</p>  <p>Any ideas on what I am doing wrong?</p>  <p>Many thanks!</p>  <p>Axel</p>  <p>PS: I am not using any caching system, like memchached or other.</p>