<p>I am using play 2.4 and would like to set an reference object "document" in model "user". If I iterate over iterator, I get the following error: So if I call the route /users, where normally I should get an Json list with all user objects and embedded documents.</p>  <p>[MarshallingException: Unable to unmarshall result to class models.User from content { "_id" : { "$oid" : "560969b4d4c6209ff2a1a973"} , "name" : "Alexander Buder" , "documents" : [ { "name" : "Sample.pdf"} , { "name" : "Test.pdf"}]}]</p>  <p>Model User</p>  <pre><code>package models;   import com.fasterxml.jackson.annotation.JsonProperty; import org.jongo.MongoCollection; import org.bson.types.ObjectId; import uk.co.panaxiom.playjongo.PlayJongo;  import java.util.ArrayList; import java.util.Iterator; import java.util.List;  /**  * Created by abuder on 28.09.15.  */ public class User {      public static MongoCollection users() {         return PlayJongo.getCollection("users");     }      @JsonProperty("_id")     private ObjectId id;     private String name;     private List&lt;Document&gt; documents = new ArrayList&lt;Document&gt;();      public User save() {         users().save(this);         return this;     }      public ObjectId getId() {         return id;     }      public void setId(ObjectId id) {         this.id = id;     }      public String getName() {         return name;     }      public void setName(String name) {         this.name = name;     }      public List&lt;Document&gt; getDocuments() {         return documents;     }      public void setDocuments(List&lt;Document&gt; documents) {         this.documents = documents;     }      public void remove() {         users().remove(this.id);     }      public static User findByName(String name) {         return users().findOne("{name: #}", name).as(User.class);     }      public static List&lt;User&gt; findAll(){         List&lt;User&gt; userList = new ArrayList&lt;User&gt;();         Iterator&lt;User&gt; iterator = users().find().as(User.class).iterator();         while (iterator.hasNext()){             userList.add(iterator.next());         }         return userList;     }  } </code></pre>  <p>Model Document</p>  <pre><code>package models;  /**  * Created by abuder on 28.09.15.  */ public class Document {       private String name;     public Document(String name){         this.name = name;     }      public String getName() {         return name;     }      public void setName(String name) {         this.name = name;     }  } </code></pre>  <p>Controller</p>  <pre><code>package controllers;  import models.Document; import models.User; import play.*; import play.libs.Json; import play.mvc.*;  import views.html.*;  import java.util.List;  public class Application extends Controller {      public Result index() {          Document doc1 = new Document("Sample.pdf");         Document doc2 = new Document("Test.pdf");          User user = new User();         user.setName("Alexander Buder");         user.getDocuments().add(doc1);         user.getDocuments().add(doc2);         user.save();          return ok(Json.toJson(user));     }       public Result usersJson(){        List&lt;User&gt; userList = User.findAll();         return ok(Json.toJson(userList));     }  } </code></pre>  <p>Routes</p>  <pre><code>GET        /                    controllers.Application.index()  GET        /users               controllers.Application.usersJson() </code></pre>