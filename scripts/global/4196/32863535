<p>I'm trying to create a quick checklist of people attending an event. This checklist is a simple webpage to be used on an iPad, using localStorage to remember who has arrived and who has not.</p>  <p>What I would like to do is have a container (or cell in my example below) that changes it's background color from the center outwards as it is held. Once the full cell is the new color, it remains that color once the user stops holding their finger on it. In this way you check people in to the event and the short hold should prevent accidental clicks.</p>  <p>My problem arises when I want to create the same effect in reverse if I wish to remove someone from the event (accidental click, person leaves etc), again filling from the center but this time using the original color. I find that the css and jquery that I am using causes the cell to immediately jump to the end of the fill animation for some reason.</p>  <p>I'm also not great with this type of transition, probably going about it in a very cack handed way.</p>  <p>Here is my code so far, you should be able to copy and paste this into an .html doc and it will run accepting mouse presses in place of finger holds:</p>  <pre><code>&lt;!doctype html&gt; &lt;html lang="en"&gt; &lt;head&gt;   &lt;meta charset="utf-8"&gt;   &lt;meta name="viewport" content="width=device-width, initial-scale=1"&gt;   &lt;title&gt;arrived demo&lt;/title&gt;   &lt;link rel="stylesheet" href="//code.jquery.com/mobile/1.4.5/jquery.mobile-1.4.5.min.css"&gt;   &lt;script src="//code.jquery.com/jquery-1.10.2.min.js"&gt;&lt;/script&gt;   &lt;script src="//code.jquery.com/mobile/1.4.5/jquery.mobile-1.4.5.min.js"&gt;&lt;/script&gt;   &lt;style&gt;   html, body { padding: 0; margin: 0; -webkit-user-select: none;}   html, .ui-mobile, .ui-mobile body {     height: 85px;   }   .ui-mobile, .ui-mobile .ui-page {     min-height: 85px;   }   #nav {     font-size: 200%;     width:17.1875em;     margin:17px auto 0 auto;   }   #nav a {     color: #777;     border: 2px solid #777;     background-color: #ccc;     padding: 0.2em 0.6em;     text-decoration: none;     float: left;     margin-right: 0.3em;   }   #nav a:hover {     color: #999;     border-color: #999;     background: #eee;   }   #nav a.selected,   #nav a.selected:hover {     color: #0a0;     border-color: #0a0;     background: #afa;   }   .box {     width: 200px;     height: 100%;     background-color: #e1e1e1;   }   .box.arrived {     background-color: green;   }   /* Shutter Out Horizontal */ .hvr-shutter-out-horizontal, .hvr-shutter-out-horizontal2 {   display: inline-block;   vertical-align: middle;   -webkit-transform: translateZ(0);   transform: translateZ(0);   box-shadow: 0 0 1px rgba(0, 0, 0, 0);   -webkit-backface-visibility: hidden;   backface-visibility: hidden;   -moz-osx-font-smoothing: grayscale;   position: relative;   background: #e1e1e1;   -webkit-transition-property: color;   transition-property: color;   -webkit-transition-duration: 1s;   transition-duration: 1s; } .hvr-shutter-out-horizontal:before, .hvr-shutter-out-horizontal2:before {   content: "";   position: absolute;   z-index: -1;   top: 0;   bottom: 0;   left: 0;   right: 0;   background: green;   -webkit-transform: scaleX(0);   transform: scaleX(0);   -webkit-transform-origin: 50%;   transform-origin: 50%;   -webkit-transition-property: transform;   transition-property: transform;   -webkit-transition-duration: 1s;   transition-duration: 1s;   -webkit-transition-timing-function: ease-out;   transition-timing-function: ease-out; } .hvr-shutter-out-horizontal2{background: green;} .hvr-shutter-out-horizontal2:before{background: #e1e1e1}  .hvr-shutter-out-horizontal:hover, .hvr-shutter-out-horizontal:focus, .hvr-shutter-out-horizontal:active,  .hvr-shutter-out-horizontal2:hover, .hvr-shutter-out-horizontal2:focus, .hvr-shutter-out-horizontal2:active {   color: white; } .hvr-shutter-out-horizontal.tap:before, .hvr-shutter-out-horizontal2.tap:before {   -webkit-transform: scaleX(1);   transform: scaleX(1); }  td {     padding: 20px;     vertical-align: middle; }  tr td:first-child {     width: 500px;    }   &lt;/style&gt; &lt;/head&gt; &lt;body&gt;  &lt;table&gt;     &lt;tr&gt;         &lt;td&gt;Person's name&lt;/td&gt;         &lt;td id="t1" class="box hvr-shutter-out-horizontal"&gt;&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;         &lt;td&gt;Someone elses name&lt;/td&gt;         &lt;td class="box hvr-shutter-out-horizontal"&gt;&lt;/td&gt;     &lt;/tr&gt;  &lt;script&gt;     $( document ).ready(function() {         for(i=1;i&lt;100;i++){             if(localStorage.getItem('t'+i) == 'Y'){                 //$("#t"+i).addClass('arrived');             }         }     });      var tapTime = 0;     $('.box').bind('vmousedown vmouseup', function (event) {         if (event.type == 'vmousedown') {             tapTime = new Date().getTime();             if($(this).hasClass('arrived')){                 //if already marked as arrived                 $(this).addClass('hvr-shutter-out-horizontal2');                 $(this).addClass('tap');             } else {                 //if not arrived                 $(this).addClass('tap');             }             //$(this).addClass('tap');         } else {             //event.type == 'vmouseup'             //here you can check how long the `tap` was to determine what do do              var duration = (new Date().getTime() - tapTime);             if (duration &gt; 1000) {                 //this is a tap-hold                 if($(this).hasClass('arrived')){                     //if already marked as arrived                  } else {                     $(this).removeClass('tap');                     $(this).removeClass('hvr-shutter-out-horizontal');                     $(this).addClass('arrived');                 }                    localStorage.setItem('t1','Y');             } else {                 //this is a tap                 $(this).removeClass('tap');             }         }     }); &lt;/script&gt;  &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>EDIT: .gif of how it behaves, the circles around the mouse represent my mouse being clicked and held down: <a href="http://gfycat.com/SecondhandSlipperyAngora" rel="nofollow">http://gfycat.com/SecondhandSlipperyAngora</a></p>  <p>You can see that the initial animation, filling the background with green from the center until the whole cell is green works just fine.</p>  <p>However when I click again to fill from the center as grey, the whole cell immediately turns grey. Another click causes the reverse animation (filling from green from the outside edges inwards). This is the behaviour causing problems.</p>  <p>I finally get the behaviour I want, which is the grey filling from the center on the third interaction.</p>