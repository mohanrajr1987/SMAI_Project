<p>I'm lazy, and got tired of selecting rows in dataframes with code like this (on the 0.4 RC):</p>  <pre><code>using DataFrames data = DataFrame(num=[1,2,3,4], let=["A", "B", "A", "B"]) subset = data[(data[:num].&gt;1)&amp;(data[:let].=="B"),:] </code></pre>  <p>so I wrote the following macro</p>  <pre><code># Need to import SubstitutionString from Base macro sel(dt, conditions)      dtstr=string(dt)     str = string(conditions)     out_str = replace(str, r":\w+",SubstitutionString(string(dtstr, "[", "\\g&lt;0&gt;", "]")))      out_str = string(dtstr, "[", out_str, ",:]")     eval(parse(out_str)) end </code></pre>  <p>so that I could instead write </p>  <pre><code>subset = @sel data (:num.&gt;1)&amp;(:let.=="B") </code></pre>  <p>This works fine, except in the situation where I want to match columns to strings like "Turtles::Leonardo" or "12:25:00".  Is there any way to avoid falsely identifying the contents of strings as column names here, or is this a limitation of this sloppy convert-to-string-and-work-on-that metaprogramming?</p>