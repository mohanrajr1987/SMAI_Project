<p>Hi I'm learning about gcc's <a href="https://gcc.gnu.org/onlinedocs/gcc/Common-Variable-Attributes.html#Common-Variable-Attributes" rel="nofollow">cleanup attribute</a>, and learning how it calls a function to be run when a variable goes out of scope, and I don't understand why you can use the word "cleanup" with or without underscores. Where is the documentation for, or documentation of, the version <em>with</em> underscores?</p>  <p>The gcc documentation above shows it like this:  </p>  <pre><code>__attribute__ ((cleanup(cleanup_function))) </code></pre>  <p>However, most code samples I read, show it like this:  </p>  <pre><code>__attribute__ ((__cleanup__(cleanup_function))) </code></pre>  <p>Ex: </p>  <ul> <li><a href="http://echorand.me/site/notes/articles/c_cleanup/cleanup_attribute_c.html" rel="nofollow">http://echorand.me/site/notes/articles/c_cleanup/cleanup_attribute_c.html</a></li> <li><a href="http://www.nongnu.org/avr-libc/user-manual/atomic_8h_source.html" rel="nofollow">http://www.nongnu.org/avr-libc/user-manual/atomic_8h_source.html</a></li> </ul>  <p>Note that the first example link states they are identical, and of course coding it proves this, but how did he know this originally? Where did this come from?</p>  <p>Why the difference? Where is <code>__cleanup__</code> defined or documented, as opposed to <code>cleanup</code>?</p>  <p>My fundamental problem lies in the fact that <em>I don't know what I don't know,</em> therefore I am trying to expose some of my unknown unknowns so they become known unknowns, until I can study them and make them known knowns. </p>  <p>My thinking is that perhaps there is some globally-applied principle to gcc preprocessor directives, where you can arbitrarily add underscores before or after any of them???--or perhaps only some of them? --or perhaps it modifies the preprocessor directive or attribute somehow and there are cases where one method, with or without the extra underscores, is preferred over the other?</p>