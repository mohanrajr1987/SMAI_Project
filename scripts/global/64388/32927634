<p>I have an index with some fields, my documents contains valid "category" data also contains "url"(analyzed field) data but not contains respsize.. in the other hand documents that contains "respsize" data (greater than 0) also contains "url" data but not contains "category" data.. I think you got the point, I need join or intersection whatever that a query returns all documents contains respsize and category that have same same url documents.</p>  <p>Here what I did so far;(url field analyzed, rest of them not_analyzed) </p>  <p>here documents that have category: <a href="http://i.stack.imgur.com/SQgqa.png" rel="nofollow"><img src="http://i.stack.imgur.com/SQgqa.png" alt="enter image description here"></a></p>  <p>and other documents have respsize that I need to combine them based on url <a href="http://i.stack.imgur.com/vHDj5.png" rel="nofollow"><img src="http://i.stack.imgur.com/vHDj5.png" alt="enter image description here"></a></p>  <p>I need a dsl query that return records that have same url token(in this scenario it will be www.domainname.com) with merge category and respsize, I simply want field in second img "category":"27" like in img1 but of course with rest of all fields.</p>  <p>here is my query but not work</p>  <pre><code>GET webproxylog/accesslog/_search {   "query": {     "filtered": {       "filter" : {             "and" : {                 "filters": [                     {                         "not": {                           "filter": {                             "terms": {                               "category": [                                 "-",                                 "-1",                                 "0"                               ]                             },                             "term": {                               "respsize": "0"                             }                           }                         },                         "term": {                           "category": "www.hurriyet.com.tr"                         }                     }                 ],                 "_cache" : true             }         }     }   },   "sort": [     {       "respsize": {         "order": "desc"       }     }   ] } </code></pre>