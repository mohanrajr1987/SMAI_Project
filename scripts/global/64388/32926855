<p>I'd like to perform a search like this:</p>  <p>search(text, ID)</p>  <p>It should return all items that match the text, but order the results based on the score of a child with the same ID as the parent.</p>  <p>Suppose I have a store with the following products. The children are similar products populated by an external service that uses a machine learning algorithm to determine how similar each item is to it's parent. (not using ES similarity)</p>  <p>The similarity score is in parentheses after the product name.</p>  <p>1 - a red long sleeve shirt</p>  <ul> <li>2 - a red short sleeve shirt (90)</li> <li>3 - a blue long sleeve shirt (90)</li> <li>5 - a green long sleeve shirt (90)</li> <li>4 - a blue short sleeve shirt (60)</li> <li>6 - a green short sleeve shirt (60)</li> </ul>  <p>2 - a red short sleeve shirt</p>  <ul> <li>1 - a red long sleeve shirt (90)</li> <li>4 - a blue short sleeve shirt (90)</li> <li>6 - a green short sleeve shirt (90)</li> <li>3 - a blue long sleeve shirt (60)</li> <li>5 - a green long sleeve shirt (60)</li> </ul>  <p>3 - a blue long sleeve shirt</p>  <ul> <li>4 - a blue short sleeve shirt (90)</li> <li>1 - a red long sleeve shirt (90)</li> <li>5 - a green long sleeve shirt (90)</li> <li>2 - a red short sleeve shirt (60)</li> <li>6 - a green short sleeve shirt (60)</li> </ul>  <p>7 - a red ball</p>  <ul> <li>8 - a blue ball (60)</li> <li>9 - a green ball (60)</li> <li>1 - a red long sleeve shirt (20)</li> <li>2 - a red short sleeve shirt (20)</li> </ul>  <p>8 - a blue ball</p>  <ul> <li>7 - a red ball (60)</li> <li>9 - a green ball (60)</li> <li>4 - a blue short sleeve shirt (20)</li> <li>3 - a blue long sleeve shirt (20)</li> </ul>  <p>9 - a green ball</p>  <ul> <li>8 - a blue ball (60)</li> <li>7 - a red ball (60)</li> <li>6 - a green short sleeve shirt (20)</li> <li>5 - a green long sleeve shirt (20)</li> </ul>  <p>10 - a red bat</p>  <ul> <li>2 - a red short sleeve shirt (20)</li> <li>1 - a red long sleeve shirt (20)</li> </ul>  <p>11 - an incredible ball</p>  <ul> <li>7 - a red ball</li> <li>8 - a blue ball</li> <li>9 - a green ball</li> </ul>  <p>If I do the following search:</p>  <p>search("red", 1)</p>  <p>I should get all of the parent (top level) items that contain the text "red", but they should be ordered by the score of the child that matches the ID 1</p>  <p>1 - a red long sleeve shirt (100)</p>  <p>2 - a red short sleeve shirt (90)</p>  <p>7 - a red ball (20)</p>  <p>10 - a red bat (20)</p>  <p>11 - an incredible ball</p>  <p>I'm unsure if this is possible, I've been looking at the nested aggregate queries but am unsure how to proceed. Any help would be greatly appreciated.</p>  <p><strong>EDIT</strong></p>  <p>Reading the ES docs I think I need to:</p>  <p>a) generate a term search and pass in an ID</p>  <p>b) create two aggregations</p>  <ul> <li><p>First containing the results that have children that match the ID, then perform an intrinsic sort on the results based on the score of the child that matches the ID</p></li> <li><p>Second containing any other results that don't have children that match the ID</p></li> </ul>  <p>c) perform a multivalue bucket sort where the first aggregation is returned before the second</p>