<p>I am trying to implement a search function on my <code>Rails</code> app to get a search box working.</p>  <p>However, when running the code, the following error is raised:</p>  <pre><code>NoMethodError in PostsController#index undefined method `paginate' for #&lt;Searchkick::Results:0x007f3ff123f0e0&gt; </code></pre>  <p>(I also have a tag cloud, which is working fine if I keep the code below unchanged, but if I change <code>@posts = @posts</code> to <code>@posts = Post.search</code> it breaks the tag functionality too.)</p>  <p>I am using:</p>  <ul> <li>Rails 4.2.0</li> <li>ruby 2.2.1p85 (2015-02-26 revision 49769) [x86_64-linux]</li> </ul>  <p><strong>Code:</strong></p>  <p>Here is how my <code>PostsController</code> looks like:</p>  <pre><code>class PostsController &lt; ApplicationController   before_action :find_post, only: [:show, :edit, :update, :destroy]   before_action :authenticate_user!, except: [:index, :show]    def new     @post = current_user.posts.build   end    def create     @post = current_user.posts.build(post_params)      if @post.save       redirect_to @post     else       render 'new'     end   end    def edit     @post = Post.friendly.find(params[:id])   end    def update     @post = Post.friendly.find(params[:id])     if @post.update(post_params)       redirect_to @post     else       render 'edit'     end   end    def destroy     @post.destroy     redirect_to root_path   end    def index     if params[:tag]       @posts = Post.tagged_with(params[:tag]).paginate(page: params[:page], per_page: 5)     else       @posts = Post.order('created_at DESC').paginate(page: params[:page], per_page: 2)     end      if params[:nil].present?       @posts = @posts.search(params[:nil]).paginate(page: params[:page])     else       @posts = @posts.paginate(page: params[:page])     end   end    def show     @post = Post.friendly.find(params[:id])   end    def autocomplete     render json: Post.search(params[:query], autocomplete: true, limit: 5).map(&amp;:title)   end    private    def find_post     @post = Post.friendly.find(params[:id])   end    def post_params     params.require(:post).permit(:title, :description, :content, :tag_list, :preview)   end end </code></pre>  <p>end</p>  <p>This is how my navbar search form looks like </p>  <pre><code>&lt;li class="navs"&gt;     &lt;%= form_tag posts_path, method: :get do%&gt;         &lt;%= text_field_tag :search, params[:query], placeholder: "Search Blog", name: "nil" , required: "", class: "input-field", id: "post_search", autocomplete: "off" do %&gt;             &lt;%= submit_tag "", class: "material-icons search-box" %&gt;         &lt;% end %&gt;         &lt;% if params[:search].present? %&gt;             &lt;%= link_to "X", posts_path %&gt;         &lt;% end %&gt;     &lt;% end %&gt; &lt;/li&gt; </code></pre>  <p>I have searched a lot and couldn't find any answers specific that could give me a right direction as to what I am doing wrong. </p>  <p>I would really appreciate any help. </p>