<p>I have wordpress website on my local system, and have marketify-child theme, in which is the search box for search items, all are working fine but currently it search by post name and i want to search by tag, i did it also but main problem is that when i <strong>there is tag available then it gives right results and if there is no result then it will be redirect to 404.php and i want stay on same page with no items available message.</strong> </p>  <p>Below my search box page code</p>  <pre><code> &lt;form role="search" method="get" class="search-form&lt;?php echo '' != get_search_query() ? ' active' : ''; ?&gt;" action="&lt;?php echo esc_url( home_url( '/' ) ); ?&gt;"&gt;     &lt;button type="submit" class="search-submit"&gt;&lt;i class="icon-search"&gt;&lt;/i&gt;&lt;/button&gt;     &lt;label&gt;         &lt;span class="screen-reader-text"&gt;&lt;?php _ex( 'Search for:', 'label', 'marketify' ); ?&gt;&lt;/span&gt;         &lt;input type="search" class="search-field" placeholder="&lt;?php echo esc_attr__( 'Search', 'marketify' ); ?&gt;" value="&lt;?php echo esc_attr( get_search_query() ); ?&gt;" name="download_tag" title="&lt;?php echo esc_attr__( 'Search for:', 'marketify' ); ?&gt;"&gt;     &lt;/label&gt;      &lt;a href="#" class="header-search-toggle"&gt;&lt;i class="icon-cross"&gt;&lt;/i&gt;&lt;/a&gt;      &lt;!-- &lt;input type="hidden" name="post_type" value="download" /&gt; --&gt; &lt;/form&gt; </code></pre>  <p>Below Function.php code     function get_edd_downloads_query( $atts, $content = null ) {</p>  <pre><code>$atts = shortcode_atts( array(     'category'         =&gt; '',     'exclude_category' =&gt; '',     'tags'             =&gt; '',     'exclude_tags'     =&gt; '',     'relation'         =&gt; 'OR',     'number'           =&gt; 9,     'price'            =&gt; 'no',     'excerpt'          =&gt; 'yes',     'full_content'     =&gt; 'no',     'buy_button'       =&gt; 'yes',     'columns'          =&gt; 3,     'thumbnails'       =&gt; 'true',     'orderby'          =&gt; 'post_date',     'order'            =&gt; 'DESC',     'ids'              =&gt; '' ), $atts, 'downloads' );  $query = array(     'post_type'      =&gt; 'download',     'posts_per_page' =&gt; (int) $atts['number'],     'orderby'        =&gt; $atts['orderby'],     'order'          =&gt; $atts['order'] );  if ( $query['posts_per_page'] &lt; -1 ) {     $query['posts_per_page'] = abs( $query['posts_per_page'] ); }  switch ( $atts['orderby'] ) {     case 'price':         $atts['orderby']   = 'meta_value';         $query['meta_key'] = 'edd_price';         $query['orderby']  = 'meta_value_num';     break;      case 'title':         $query['orderby'] = 'title';     break;      case 'id':         $query['orderby'] = 'ID';     break;      case 'random':         $query['orderby'] = 'rand';     break;      default:         $query['orderby'] = 'post_date';     break; }  if ( $atts['tags'] || $atts['category'] || $atts['exclude_category'] || $atts['exclude_tags'] ) {      $query['tax_query'] = array(         'relation' =&gt; $atts['relation']     );      if ( $atts['tags'] ) {          $tag_list = explode( ',', $atts['tags'] );          foreach( $tag_list as $tag ) {              if( is_numeric( $tag ) ) {                  $term_id = $tag;              } else {                  $term = get_term_by( 'slug', $tag, 'download_tag' );                  if( ! $term ) {                     continue;                 }                  $term_id = $term-&gt;term_id;             }              $query['tax_query'][] = array(                 'taxonomy' =&gt; 'download_tag',                 'field'    =&gt; 'term_id',                 'terms'    =&gt; $term_id             );         }      }      if ( $atts['category'] ) {          $categories = explode( ',', $atts['category'] );          foreach( $categories as $category ) {              if( is_numeric( $category ) ) {                  $term_id = $category;              } else {                  $term = get_term_by( 'slug', $category, 'download_category' );                  if( ! $term ) {                     continue;                 }                  $term_id = $term-&gt;term_id;              }              $query['tax_query'][] = array(                 'taxonomy' =&gt; 'download_category',                 'field'    =&gt; 'term_id',                 'terms'    =&gt; $term_id,             );          }      }      if ( $atts['exclude_category'] ) {          $categories = explode( ',', $atts['exclude_category'] );          foreach( $categories as $category ) {              if( is_numeric( $category ) ) {                  $term_id = $category;              } else {                  $term = get_term_by( 'slug', $category, 'download_category' );                  if( ! $term ) {                     continue;                 }                  $term_id = $term-&gt;term_id;             }              $query['tax_query'][] = array(                 'taxonomy' =&gt; 'download_category',                 'field'    =&gt; 'term_id',                 'terms'    =&gt; $term_id,                 'operator' =&gt; 'NOT IN'             );         }      }      if ( $atts['exclude_tags'] ) {          $tag_list = explode( ',', $atts['exclude_tags'] );          foreach( $tag_list as $tag ) {              if( is_numeric( $tag ) ) {                  $term_id = $tag;              } else {                  $term = get_term_by( 'slug', $tag, 'download_tag' );                  if( ! $term ) {                     continue;                 }                  $term_id = $term-&gt;term_id;             }              $query['tax_query'][] = array(                 'taxonomy' =&gt; 'download_tag',                 'field'    =&gt; 'term_id',                 'terms'    =&gt; $term_id,                 'operator' =&gt; 'NOT IN'             );          }      } }  if ( $atts['exclude_tags'] || $atts['exclude_category'] ) {     $query['tax_query']['relation'] = 'AND'; }  if( ! empty( $atts['ids'] ) )     $query['post__in'] = explode( ',', $atts['ids'] );  if ( get_query_var( 'paged' ) )     $query['paged'] = get_query_var('paged'); else if ( get_query_var( 'page' ) )     $query['paged'] = get_query_var( 'page' ); else     $query['paged'] = 1;  switch( intval( $atts['columns'] ) ) :     case 0:         $column_width = 'inherit'; break;     case 1:         $column_width = '100%'; break;     case 2:         $column_width = '50%'; break;     case 3:         $column_width = '33%'; break;     case 4:         $column_width = '25%'; break;     case 5:         $column_width = '20%'; break;     case 6:         $column_width = '16.6%'; break;     default:         $column_width = '33%'; break; endswitch;  // Allow the query to be manipulated by other plugins $query = apply_filters( 'edd_downloads_query', $query, $atts );   $downloads = new WP_Query( $query ); /*echo "&lt;pre&gt;"; print_r($downloads);die;*/ if ( $downloads-&gt;have_posts() ) :     $i = 1;     $wrapper_class = 'edd_download_columns_' . $atts['columns'];     ob_start(); ?&gt;     &lt;div class="custom_edd_downloads_list list_downloads"&gt;         &lt;?php while ( $downloads-&gt;have_posts() ) : $downloads-&gt;the_post(); ?&gt;             &lt;?php $schema = edd_add_schema_microdata() ? 'itemscope itemtype="http://schema.org/Product" ' : ''; ?&gt;             &lt;article class="item"&gt;                 &lt;div &lt;?php echo $schema; ?&gt;class="&lt;?php echo apply_filters( 'edd_download_class', 'edd_download', get_the_ID(), $atts, $i ); ?&gt;" id="edd_download_&lt;?php echo get_the_ID(); ?&gt;" style=""&gt;                     &lt;div class="edd_download_inner"&gt;                         &lt;?php                          do_action( 'edd_download_before' );                          if ( 'false' != $atts['thumbnails'] ) :                             edd_get_template_part( 'shortcode', 'content-image' );                             do_action( 'edd_download_after_thumbnail' );                         endif;                          // edd_get_template_part( 'shortcode', 'content-title' );                         // do_action( 'edd_download_after_title' );                          if ( $atts['excerpt'] == 'yes' &amp;&amp; $atts['full_content'] != 'yes' ) {                             edd_get_template_part( 'shortcode', 'content-excerpt' );                             do_action( 'edd_download_after_content' );                         } else if ( $atts['full_content'] == 'yes' ) {                             edd_get_template_part( 'shortcode', 'content-full' );                             do_action( 'edd_download_after_content' );                         }                          if ( $atts['price'] == 'yes' ) {                             edd_get_template_part( 'shortcode', 'content-price' );                             do_action( 'edd_download_after_price' );                         }                          if ( $atts['buy_button'] == 'yes' )                             edd_get_template_part( 'shortcode', 'content-cart-button' );                          do_action( 'edd_download_after' );                          ?&gt;                     &lt;/div&gt;                 &lt;/div&gt;             &lt;/article&gt;             &lt;?php if ( $atts['columns'] != 0 &amp;&amp; $i % $atts['columns'] == 0 ) { ?&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;?php } ?&gt;         &lt;?php $i++; endwhile; ?&gt;          &lt;/div&gt;         &lt;div style="clear:both;"&gt;&lt;/div&gt;         &lt;?php wp_reset_postdata(); ?&gt;          &lt;div id="custom_edd_download_pagination" class="navigation"&gt;             &lt;?php             if ( is_single() ) {                 echo paginate_links( apply_filters( 'edd_download_pagination_args', array(                     'base'    =&gt; get_permalink() . '%#%',                     'format'  =&gt; '?paged=%#%',                     'current' =&gt; max( 1, $query['paged'] ),                     'total'   =&gt; $downloads-&gt;max_num_pages                 ), $atts, $downloads, $query ) );             } else {                 $big = 999999;                 $search_for   = array( $big, '#038;' );                 $replace_with = array( '%#%', '&amp;' );                 echo paginate_links( apply_filters( 'edd_download_pagination_args', array(                     'base'    =&gt; str_replace( $search_for, $replace_with, get_pagenum_link( $big ) ),                     'format'  =&gt; '?paged=%#%',                     'current' =&gt; max( 1, $query['paged'] ),                     'total'   =&gt; $downloads-&gt;max_num_pages                 ), $atts, $downloads, $query ) );             }             ?&gt;         &lt;/div&gt;        &lt;script type="text/javascript"text/javascript"&gt;         jQuery(document).ready(function() {             /*var $list_downloads = jQuery('.list_downloads');              $list_downloads.imagesLoaded(function() {                 $list_downloads.masonry({                     itemSelector: '.item'                 });             });*/              jQuery(function($) {                  var $container = jQuery('.content-area');                             $container.imagesLoaded(function(){                                       $container.masonry({                      itemSelector: '.item',                      isAnimated: true,                       animationOptions: { //add animations if you want                         duration: 900,                         easing: 'easeInOutExpo'                     }                     });               });                  var $container = $('.list_downloads');                  $container.infinitescroll ({                       navSelector  : '#custom_edd_download_pagination',    // selector for the paged navigation                        nextSelector : '#custom_edd_download_pagination a.page-numbers',  // selector for the NEXT link (to page 2)                       itemSelector : '.list_downloads .item',                        extraScrollPx: 500,                        loading: {                            finished: undefined,                           //loadingText  : "Loading new posts...",                            loadingText  : "",                           //finishedMsg: 'No more pages to load.',                          finishedMsg: '',                           img: '&lt;?php echo get_stylesheet_directory_uri() ;?&gt;/images/ajax-loader.gif',                           selector: null,                           speed: 'slow',                           start: undefined                         }                       },                       //trigger Masonry as a callback                       function( newElements ) {                         /*function disableScroll() {                           if (window.addEventListener) // older FF                               window.addEventListener('DOMMouseScroll', preventDefault, false);                               window.onwheel = preventDefault; // modern standard                               window.onmousewheel = document.onmousewheel = preventDefault; // older browsers, IE                               window.ontouchmove  = preventDefault; // mobile                               document.onkeydown  = preventDefaultForScrollKeys;                         }*/                         $container.imagesLoaded(function(){                                                 $container.masonry({                                 itemSelector: '.item',                                 isAnimated: true,                                  animationOptions: { //add animations if you want                                     duration: 900,                                     easing: 'easeInOutExpo'                                 }                             });                         });                         var $newElems = $( newElements ).css({                                 opacity: 0                             });                          $newElems.animate({ opacity: 1 });                         $container.masonry( 'appended', $newElems, true );                       }                     );              });         })     &lt;/script&gt;     &lt;style&gt;         /*div#infscr-loading {           text-align: center;           width: 100%;           position: fixed;         }*/         #custom_edd_download_pagination{             display:block;             visibility: hidden;         }     &lt;/style&gt;     &lt;?php     $display = ob_get_clean(); else:     $display = sprintf( _x( 'No %s found', 'download post type name', 'edd' ), edd_get_label_plural() ); endif;  return apply_filters( 'downloads_shortcode', $display, $atts, $atts['buy_button'], $atts['columns'], $column_width, $downloads, $atts['excerpt'], $atts['full_content'], $atts['price'], $atts['thumbnails'], $query ); } add_shortcode( 'custom_downloads', 'get_edd_downloads_query' ); </code></pre>  <p>Display Result page as below</p>  <pre><code>&lt;section id="primary" class="content-area col-md-10 col-sm-9 col-xs-12"&gt;             &lt;main id="main" class="site-main" role="main"&gt;         &lt;!--             &lt;div class="section-title"&gt;&lt;span&gt;                 &lt;?php if ( is_search() ) : ?&gt;                     &lt;?php //printf( '&amp;quot;%s&amp;quot;', esc_attr( get_search_query() ) ); ?&gt;                 &lt;?php else : ?&gt;                     &lt;?php //marketify_downloads_section_title(); ?&gt;                 &lt;?php endif; ?&gt;             &lt;/span&gt;&lt;/div&gt;         --&gt;             &lt;?php              //echo "string";die;             echo do_shortcode( sprintf( '[custom_downloads number="%s"]', get_option( 'posts_per_page' ) ) ); ?&gt;              &lt;/main&gt;&lt;!-- #main --&gt;         &lt;/section&gt;&lt;!-- #primary --&gt; </code></pre>