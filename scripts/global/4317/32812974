<p>I am having the opposite problem I have seen many having. Most seem to want ofstream to append to the end of a file instead of overwriting it, but by default ofstream overwrites the file.</p>  <p>However, in my case it seems to only overwrite the file one time, when I need it to overwrite the file every time.</p>  <p>The purpose of this program is to generate random numbers, then input those into another program and record the runtime of that program. Everytime it encounter a new highest runtime it should save the output that generated that run runtime.</p>  <p>Below is the meat of the program.</p>  <pre><code>srand(time(0));  float maxRun=0; clock_t t1,t2; FILE *fp; ofstream out; ofstream copy_to; ifstream copy_from; string str; int count=0; float runTime=0;  while(count &lt; 1000){   out.open("output.txt");       for(int i=0;i&lt;N;i++){         out &lt;&lt; rand() % N &lt;&lt;endl;      }  //Determine the runtime (in clock cycles);   t1=clock();   fp = popen("./prog1 &lt; output.txt","r");   t2=clock();   runTime = ((float)t2 - (float)t1);    if(runTime &gt; maxRun){         maxRun = runTime;         cout &lt;&lt;"MAX RUN " &lt;&lt;  maxRun &lt;&lt; endl;         copy_from.open("output.txt");        copy_to.open("worst_case.txt");                while(copy_from &gt;&gt; str){                        copy_to &lt;&lt; str &lt;&lt; endl;                }         copy_to &lt;&lt; "MAX RUN " &lt;&lt; maxRun &lt;&lt;endl;      //copy_file("output.txt","worst.txt");   } count++; } </code></pre>