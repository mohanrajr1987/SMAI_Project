<p>I have a Rscript in a String variable and I want to execute it from Java program and pass some variable to it. If I execute that R script standalone, it works fine. I have converted that R script to one line by escaping it everything by using Python program as shown below:</p>  <pre><code>import json  jsonstr = json.dumps({"script": """\ #!/usr/bin/Rscript  # read the data file library('jsonlite') library('rpart')  args &lt;- as.list(Sys.getenv(c(                         "path",                         "client_users")))  if (args[["path"]]==""){     args[["path"]] &lt;- "." }  # other stuff here # other stuff here  """})  print jsonstr </code></pre>  <p>I use the printed string out and store it in String variable and then I am executing with below code and it doesn't work at all. I am passing <code>path</code> and <code>client_users</code> variable to above R script.</p>  <pre><code>public static void main(String[] args) throws IOException, InterruptedException {      // this is your script in a string     // String script = "#!/bin/bash\n\necho \"Hello World\"\n\n readonly PARAM1=$param1\n echo $PARAM1\n\nreadonly PARAM2=$param2\n echo $PARAM2\n\n";     String script = "above R Script here";      List&lt;String&gt; commandList = new ArrayList&lt;&gt;();     commandList.add("/bin/bash");      ProcessBuilder builder = new ProcessBuilder(commandList);     builder.environment().put("path", "/home/david");     builder.environment().put("client_users", "1000");     builder.redirectErrorStream(true);     Process shell = builder.start();      // Send your script to the input of the shell, something     // like doing cat script.sh | bash in the terminal     try(OutputStream commands = shell.getOutputStream()) {         commands.write(script.getBytes());     }      // read the outcome     try(BufferedReader reader = new BufferedReader(new InputStreamReader(shell.getInputStream()))) {         String line;         while((line = reader.readLine()) != null) {             System.out.println(line);         }     }      // check the exit code     int exitCode = shell.waitFor();     System.out.println("EXIT CODE: " + exitCode); } </code></pre>  <p>Above code works fine with bash shell script. Is there anything I need to do special for R script? I will be using same code for bash script and R scripts as well.</p>  <p>And this is the error I am getting:</p>  <pre><code>/bin/bash: line 7: -: No such file or directory /bin/bash: line 10: syntax error near unexpected token `'jsonlite'' /bin/bash: line 10: `library('jsonlite')'  </code></pre>  <p>And if I remove <code>commandList.add("/bin/bash");</code> and add <code>commandList.add("/bin/Rscript");</code> then I see below error:</p>  <pre><code>Cannot run program "/bin/Rscript": error=2, No such file or directory </code></pre>  <p><strong>Update:-</strong></p>  <p>Instead of using my above script, I decided to use simple print hell script in r to see whether I can execute it through Java or not.</p>  <pre><code>// this will print hello String script = "#!/usr/bin/env Rscript\nsayHello &lt;- function(){\n   print('hello')\n}\n\nsayHello()\n"; </code></pre>  <p>When I execute this script with <code>commandList.add("/bin/bash");</code>, I get this error:</p>  <pre><code>/bin/bash: line 2: syntax error near unexpected token `(' /bin/bash: line 2: `sayHello &lt;- function(){' </code></pre>  <p>But if I execute with this <code>commandList.add("/bin/sh");</code>, I get this error:</p>  <pre><code>/bin/sh: 2: Syntax error: "(" unexpected </code></pre>