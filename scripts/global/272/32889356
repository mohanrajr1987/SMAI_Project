<p>I have an xml file with two "sets" of data that I need to merge into a table showing old vs new. I'm doing this by processing only new data, and for each piece of new data, grabbing the accompanying old piece. My question is how to properly store my current position in the new set so that I can grab the matching data from the old set. The real challenge I'm having is around nested elements, where position() isn't as useful. So, given the following simplified xml, where I know 100% for sure that there will be a perfectly matching tag set in New and Old...</p>  <pre><code>&lt;doc&gt;    &lt;New&gt;       &lt;Para&gt;New info 1&lt;/Para&gt;       &lt;Para&gt;New info 2&lt;/Para&gt;       &lt;List&gt;          &lt;Li&gt;New Point 1&lt;/Li&gt;          &lt;Li&gt;New Point 2&lt;/Li&gt;          &lt;Li&gt;New Point 3&lt;/Li&gt;       &lt;/List&gt;       &lt;Para&gt;New info 3&lt;/Para&gt;       &lt;List&gt;          &lt;Li&gt;New Point 4&lt;/Li&gt;          &lt;Li&gt;New Point 5&lt;/Li&gt;          &lt;Li&gt;New Point 6             &lt;List&gt;                &lt;Li&gt;New nested Point 1&lt;/Li&gt;                &lt;Li&gt;New nested Point 2&lt;/Li&gt;                &lt;Li&gt;New nested Point 3&lt;/Li&gt;             &lt;/List&gt;          &lt;/Li&gt;       &lt;/List&gt;    &lt;/New&gt;    &lt;Old&gt;       &lt;Para&gt;Old info 1&lt;/Para&gt;       &lt;Para&gt;Old info 2&lt;/Para&gt;       &lt;List&gt;          &lt;Li&gt;Old Point 1&lt;/Li&gt;          &lt;Li&gt;Old Point 2&lt;/Li&gt;          &lt;Li&gt;Old Point 3&lt;/Li&gt;       &lt;/List&gt;       &lt;Para&gt;Old info 3&lt;/Para&gt;       &lt;List&gt;          &lt;Li&gt;Old Point 4&lt;/Li&gt;          &lt;Li&gt;Old Point 5&lt;/Li&gt;          &lt;Li&gt;Old Point 6             &lt;List&gt;                &lt;Li&gt;Old nested Point 1&lt;/Li&gt;                &lt;Li&gt;Old nested Point 2&lt;/Li&gt;                &lt;Li&gt;Old nested Point 3&lt;/Li&gt;             &lt;/List&gt;          &lt;/Li&gt;       &lt;/List&gt;    &lt;/Old&gt; </code></pre>  <p></p>  <p>I want to merge and output the info in an html-like table.</p>  <pre><code>  &lt;table&gt;      &lt;row&gt;         &lt;entry&gt;New Info 1&lt;/entry&gt;         &lt;entry&gt;Old Info 1&lt;/entry&gt;      &lt;/row&gt;      &lt;row&gt;         &lt;entry&gt;New Info 2&lt;/entry&gt;         &lt;entry&gt;Old Info 2&lt;/entry&gt;      &lt;/row&gt;      &lt;row&gt;         &lt;entry&gt;            &lt;list&gt;               &lt;li&gt;New Point 1&lt;/li&gt;            &lt;/list&gt;         &lt;/entry&gt;         &lt;entry&gt;            &lt;list&gt;               &lt;li&gt;Old Point 1&lt;/li&gt;            &lt;/list&gt;         &lt;/entry&gt;      &lt;/row&gt;      &lt;row&gt;         &lt;entry&gt;            &lt;list&gt;               &lt;li&gt;New Point 2&lt;/li&gt;            &lt;/list&gt;         &lt;/entry&gt;         &lt;entry&gt;            &lt;list&gt;               &lt;li&gt;Old Point 2&lt;/li&gt;            &lt;/list&gt;         &lt;/entry&gt;      &lt;/row&gt;      &lt;row&gt;         &lt;entry&gt;            &lt;list&gt;               &lt;li&gt;New Point 3&lt;/li&gt;            &lt;/list&gt;         &lt;/entry&gt;         &lt;entry&gt;            &lt;list&gt;               &lt;li&gt;Old Point 3&lt;/li&gt;            &lt;/list&gt;         &lt;/entry&gt;      &lt;/row&gt;      &lt;row&gt;         &lt;entry&gt;New Info 3&lt;/entry&gt;         &lt;entry&gt;Old Info 3&lt;/entry&gt;      &lt;/row&gt;      &lt;row&gt;         &lt;entry&gt;            &lt;list&gt;               &lt;li&gt;New Point 4&lt;/li&gt;            &lt;/list&gt;         &lt;/entry&gt;         &lt;entry&gt;            &lt;list&gt;               &lt;li&gt;Old Point 4&lt;/li&gt;            &lt;/list&gt;         &lt;/entry&gt;      &lt;/row&gt;      &lt;row&gt;         &lt;entry&gt;            &lt;list&gt;               &lt;li&gt;New Point 5&lt;/li&gt;            &lt;/list&gt;         &lt;/entry&gt;         &lt;entry&gt;            &lt;list&gt;               &lt;li&gt;Old Point 5&lt;/li&gt;            &lt;/list&gt;         &lt;/entry&gt;      &lt;/row&gt;      &lt;row&gt;         &lt;entry&gt;            &lt;list&gt;               &lt;li&gt;New Point 6&lt;/li&gt;            &lt;/list&gt;         &lt;/entry&gt;         &lt;entry&gt;            &lt;list&gt;               &lt;li&gt;Old Point 6&lt;/li&gt;            &lt;/list&gt;         &lt;/entry&gt;      &lt;/row&gt;      &lt;row&gt;         &lt;entry&gt;            &lt;list&gt;               &lt;li&gt;New nested Point 1&lt;/li&gt;            &lt;/list&gt;         &lt;/entry&gt;         &lt;entry&gt;            &lt;list&gt;               &lt;li&gt;Old nested Point 1&lt;/li &gt;         &lt;/entry&gt;      &lt;/row&gt;      &lt;row&gt;         &lt;entry&gt;            &lt;list&gt;               &lt;li&gt;New nested Point 2&lt;/li&gt;            &lt;/list&gt;         &lt;/entry&gt;         &lt;entry&gt;            &lt;list&gt;               &lt;li&gt;Old nested Point 2&lt;/li&gt;            &lt;/list&gt;         &lt;/entry&gt;      &lt;/row&gt;      &lt;row&gt;         &lt;entry&gt;            &lt;list&gt;               &lt;li&gt;New nested Point 3&lt;/li&gt;            &lt;/list&gt;         &lt;/entry&gt;         &lt;entry&gt;            &lt;list&gt;               &lt;li&gt;Old nested Point 3&lt;/li&gt;            &lt;/list&gt;         &lt;/entry&gt;      &lt;/row&gt;   &lt;/table&gt; </code></pre>  <p>It's only nested elements that are problematic. For everything else I can store my position within &lt;New&gt; and apply templates on the corresponding &lt;Old&gt; data, but position() becomes less useful when nested.</p>  <p>Any ideas on how to effectively store my position within &lt;New&gt; so that I can process the matching &lt;Old&gt; element? I'm using XSLT 1.</p>