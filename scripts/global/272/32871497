<p>XSLT newbie (thanks in advance)</p>  <p>I have an XML file containing payment data. I am trying to transform it into an xml format used by a bank. The XML needs to be different based on the payment type (urgent payment/wire, standard payment/ETF or manual payment). Multiple payments are possible in a given file. Here is a sample of the source XML (simplified, two transactions, both the same payment type)</p>  <pre><code>&lt;Payments&gt;  &lt;Payment xmlns:ns="urn:com.bank/paymentconnector"&gt;   &lt;Payment_Detail&gt;    &lt;Payment_Info&gt;     &lt;ns:PAYMENT_Payment_Memo&gt;Payment Info1&lt;/ns:PAYMENT_Payment_Memo&gt;     &lt;ns:PAYMENT_Payment_Amount&gt;1111&lt;/ns:PAYMENT_Payment_Amount&gt;     &lt;ns:PAYMENT_Type&gt;Wire&lt;/ns:PAYMENT_Type&gt;     &lt;ns:PAYMENT_Currency_Code&gt;USD&lt;/ns:PAYMENT_Currency_Code&gt;     &lt;ns:PAYMENT_Check_or_Advice_Number&gt;0&lt;/ns:PAYMENT_Check_or_Advice_Number&gt;   &lt;/Payment_Info&gt;  &lt;Payer_Data&gt;     &lt;ns:PAYER_Company_Name&gt;Company, LLP&lt;/ns:PAYER_Company_Name&gt;     &lt;ns:PAYER_Address_Line_1&gt;Main st&lt;/ns:PAYER_Address_Line_1&gt;     &lt;ns:PAYER_Address_Line_2&gt;Line 2&lt;/ns:PAYER_Address_Line_2&gt;     &lt;ns:PAYER_City&gt;Cleveland&lt;/ns:PAYER_City&gt;     &lt;ns:PAYER_Zip_Code&gt;11111&lt;/ns:PAYER_Zip_Code&gt;     &lt;ns:PAYER_Country&gt;US&lt;/ns:PAYER_Country&gt;     &lt;ns:PAYER_Account_Number&gt;1111-11111111&lt;/ns:PAYER_Account_Number&gt;     &lt;ns:PAYER_Currency&gt;USD&lt;/ns:PAYER_Currency&gt;  &lt;/Payer_Data&gt;  &lt;Payee_Data&gt;     &lt;ns:PAYEE_Name&gt;Name&lt;/ns:PAYEE_Name&gt;     &lt;ns:PAYEE_Bank_Name&gt;Bank Name&lt;/ns:PAYEE_Bank_Name&gt;     &lt;ns:PAYEE_Bank_Account_Name&gt;Account Name&lt;/ns:PAYEE_Bank_Account_Name&gt;     &lt;ns:PAYEE_Account_Number&gt;1111111&lt;/ns:PAYEE_Account_Number&gt;     &lt;ns:PAYEE_Masked_Account_Number&gt;********** &lt;/ns:PAYEE_Masked_Account_Number&gt;     &lt;ns:PAYEE_Account_Type&gt;DD&lt;/ns:PAYEE_Account_Type&gt;     &lt;ns:PAYEE_Routing_Transit_Number&gt;22222&lt;/ns:PAYEE_Routing_Transit_Number&gt;     &lt;ns:PAYEE_Bank_Country&gt;US&lt;/ns:PAYEE_Bank_Country&gt;     &lt;/Payee_Data&gt;    &lt;/Payment_Detail&gt;   &lt;/Payment&gt; &lt;Payment&gt;   &lt;Payment_Detail&gt;    &lt;Payment_Info&gt;     &lt;ns:PAYMENT_Payment_Memo&gt;Payment Info2&lt;/ns:PAYMENT_Payment_Memo&gt;     &lt;ns:PAYMENT_Payment_Amount&gt;22222&lt;/ns:PAYMENT_Payment_Amount&gt;     &lt;ns:PAYMENT_Type&gt;Wire&lt;/ns:PAYMENT_Type&gt;     &lt;ns:PAYMENT_Currency_Code&gt;USD&lt;/ns:PAYMENT_Currency_Code&gt;     &lt;ns:PAYMENT_Check_or_Advice_Number&gt;0&lt;/ns:PAYMENT_Check_or_Advice_Number&gt;  &lt;/Payment_Info&gt;  &lt;Payer_Data&gt;     &lt;ns:PAYER_Company_Name&gt;Company, LLP&lt;/ns:PAYER_Company_Name&gt;     &lt;ns:PAYER_Address_Line_1&gt;Main st&lt;/ns:PAYER_Address_Line_1&gt;     &lt;ns:PAYER_Address_Line_2&gt;Line 2&lt;/ns:PAYER_Address_Line_2&gt;     &lt;ns:PAYER_City&gt;Cleveland&lt;/ns:PAYER_City&gt;     &lt;ns:PAYER_Zip_Code&gt;11111&lt;/ns:PAYER_Zip_Code&gt;     &lt;ns:PAYER_Country&gt;US&lt;/ns:PAYER_Country&gt;     &lt;ns:PAYER_Account_Number&gt;1111-11111111&lt;/ns:PAYER_Account_Number&gt;     &lt;ns:PAYER_Currency&gt;USD&lt;/ns:PAYER_Currency&gt;  &lt;/Payer_Data&gt;  &lt;Payee_Data&gt;     &lt;ns:PAYEE_Name&gt;Name&lt;/ns:PAYEE_Name&gt;     &lt;ns:PAYEE_Bank_Name&gt;Bank Name&lt;/ns:PAYEE_Bank_Name&gt;     &lt;ns:PAYEE_Bank_Account_Name&gt;Account Name&lt;/ns:PAYEE_Bank_Account_Name&gt;     &lt;ns:PAYEE_Account_Number&gt;1111111&lt;/ns:PAYEE_Account_Number&gt;     &lt;ns:PAYEE_Masked_Account_Number&gt;**********&lt;/ns:PAYEE_Masked_Account_Number&gt;     &lt;ns:PAYEE_Account_Type&gt;DD&lt;/ns:PAYEE_Account_Type&gt;     &lt;ns:PAYEE_Routing_Transit_Number&gt;22222&lt;/ns:PAYEE_Routing_Transit_Number&gt;     &lt;ns:PAYEE_Bank_Country&gt;US&lt;/ns:PAYEE_Bank_Country&gt;  &lt;/Payee_Data&gt; &lt;/Payment_Detail&gt; &lt;/Payments&gt;    </code></pre>  <p>Here is my (simplified) output</p>  <pre><code> &lt;?xml version="1.0" encoding="UTF-8"?&gt;    &lt;!-- urgent payment--&gt;    &lt;urgent_payment_header&gt;     &lt;header_fields/&gt;     &lt;/urgent_payment_header&gt;     &lt;paymentrec&gt;      &lt;recordType&gt;5&lt;/recordType&gt;      &lt;payerAccNum&gt;1111-11111111&lt;/payerAccNum&gt;      &lt;!-- (other fields)--&gt;     &lt;/paymentrec&gt;     &lt;paymentrec&gt;      &lt;recordType&gt;5&lt;/recordType&gt;     &lt;payerAccNum&gt;&lt;/payerAccNum&gt;     &lt;!-- continue with any other urgent payments in the file--&gt;    &lt;/paymentrec&gt;    &lt;urgent_control_fields&gt;    &lt;/urgent_control_fields&gt;     &lt;!-- standard payment--&gt;   &lt;standard_payment_header&gt;   &lt;header_fields/&gt;   &lt;/standard_payment_header&gt;   &lt;paymentrec&gt;    &lt;recordType&gt;4&lt;/recordType&gt;    &lt;payerAccNum&gt;1111-11111111&lt;/payerAccNum&gt;     &lt;!-- (other fields)--&gt;    &lt;/paymentrec&gt;    &lt;paymentrec&gt;    &lt;recordType&gt;4&lt;/recordType&gt;    &lt;payerAccNum&gt;&lt;/payerAccNum&gt;     &lt;!-- continue with any other standard payments in the file--&gt;    &lt;/paymentrec&gt;    &lt;standard_control_fields&gt;    &lt;/standard_control_fields&gt;    &lt;!-- catch all payments--&gt;   &lt;catchall_payment_header&gt;   &lt;header_fields/&gt;   &lt;/catchall_payment_header&gt;   &lt;paymentrec&gt;   &lt;recordType&gt;3&lt;/recordType&gt;   &lt;payerAccNum&gt;1111-11111111&lt;/payerAccNum&gt; &lt;!-- (other fields)--&gt;    &lt;/paymentrec&gt;    &lt;paymentrec&gt;    &lt;recordType&gt;3&lt;/recordType&gt;    &lt;payerAccNum&gt;&lt;/payerAccNum&gt;     &lt;!-- continue with any other catchall payments in the file--&gt;    &lt;/paymentrec&gt;    &lt;catchall_control_fields&gt;    &lt;/catchall_control_fields&gt; </code></pre>  <p>my XSLT works when all of the payments in the source file are the same type (all urgent, all standard, all other types) with one header, the payment records listed out and then one control record</p>  <p>however, when the payment types are mixed (for example, one urgent and one standard) then only the header, first node and control record is written to the output. If a file contains an urgent payment/wire and a standard payment, I want the output to be</p>  <p>here is my (simplified XSLT)</p>  <pre><code> &lt;!-- Begin writing the output--&gt;   &lt;xsl:template match="Payments"&gt;   &lt;xsl:choose&gt;        &lt;xsl:when test="Payment/Payment_Detail/Payment_Info[ns:PAYMENT_Type != 'Wire']"&gt;                 &lt;xsl:call-template select="Payment-Header"/&gt;                 &lt;xsl:apply-templates select="Payment"/&gt;                 &lt;xsl:call-templates select="Payment-Control-Standard"/&gt;       &lt;/xsl:when&gt;        &lt;xsl:when test="Payment/Payment_Detail/Payment_Info[ns:PAYMENT_Type = 'Wire']"&gt;                  &lt;xsl:call-template select="Payment-Header"/&gt;                  &lt;xsl:apply-templates select="Payment"/&gt;                   &lt;xsl:call-template name="Payment-Control-Urgent"/&gt;        &lt;/xsl:when&gt;        &lt;xsl:otherwise&gt;                  &lt;xsl:call-template name="Payment-Header"/&gt;                  &lt;xsl:apply-templates select="Payment"/&gt;                   &lt;xsl:call-template name="Payment-Control-CatchAll"/&gt;        &lt;/xsl:otherwise&gt;    &lt;/xsl:choose&gt;    &lt;/xsl:template&gt;   &lt;xsl:template match="Payment"&gt;     &lt;xsl:choose&gt;         &lt;xsl:when test="Payment_Detail/Payment_Info[ns:PAYMENT_Type != 'Wire']"&gt;                 &lt;xsl:call-template name="Payment-Standard"/&gt;           &lt;/xsl:when&gt;         &lt;xsl:when test="Payment_Detail/Payment_Info[ns:PAYMENT_Type = 'Wire']"&gt;                 &lt;xsl:call-template name="Payment-Urgent"/&gt;         &lt;/xsl:when&gt;         &lt;xsl:otherwise&gt;                 &lt;xsl:call-template name="Payment-CatchAll"/&gt;         &lt;/xsl:otherwise&gt;     &lt;/xsl:choose&gt; &lt;/xsl:template&gt;  &lt;!-- End writing the output--&gt;  &lt;!-- Begin template details--&gt;      &lt;xsl:template name="Payment-Header"&gt;         &lt;header&gt;             (header fields, details not important)         &lt;/header&gt;     &lt;/xsl:template&gt;   &lt;xsl:template name="Payment-Control-Standard"&gt;     &lt;control&gt;         &lt;numberOfPayments&gt;count of standard payments in the file&lt;/numberOfPayments&gt;         &lt;sumOfPayments&gt;sum of standard payments in the file&lt;/sumOfPayments&gt;     &lt;/control&gt;   &lt;/xsl:template&gt;  &lt;xsl:template name="Payment-Control-Urgent"&gt;     &lt;control&gt;         &lt;numberOfPayments&gt;count of urgent payments in the file&lt;/numberOfPayments&gt;         &lt;sumOfPayments&gt;sum of urgent payments in the file&lt;/sumOfPayments&gt;     &lt;/control&gt;   &lt;/xsl:template&gt;  &lt;xsl:template name="Payment-Control-CatchAll"&gt;     &lt;control&gt;         &lt;numberOfPayments&gt;count of catch all payments in the file&lt;/numberOfPayments&gt;         &lt;sumOfPayments&gt;sum of catch all payments in the file&lt;/sumOfPayments&gt;     &lt;/control&gt;   &lt;/xsl:template&gt;  &lt;xsl:template name="Payment-Standard"&gt;  &lt;paymentrec&gt;         (payment fields, details not important)  &lt;/paymentrec&gt; &lt;/xsl:template&gt;  &lt;xsl:template name="Payment-Urgent"&gt;   &lt;paymentrec&gt;         (payment fields, details not important)              &lt;/paymentrec&gt;  &lt;/xsl:template&gt;  &lt;xsl:template name="Payment-CatchAll"&gt;   &lt;paymentrec&gt;         (payment fields, details not important)              &lt;/paymentrec&gt;  &lt;/xsl:template&gt; </code></pre>