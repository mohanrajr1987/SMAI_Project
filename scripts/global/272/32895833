<p>I have an XSLT that iterates over this XML and selects elements from the "InterestingData" node.</p>  <pre><code>&lt;Root xmlns="http://www.sometech.com"&gt;   &lt;DontNeed1&gt;     &lt;Item name="one" /&gt;     &lt;Item name="two" /&gt;     &lt;Item name="three" /&gt;   &lt;/DontNeed1&gt;   &lt;DontNeed2&gt;     &lt;transporters:SomeWebServiceTransportActivity xmlns:transporters="clr-namespace:SomeTech.DataFeed.Activities.Transporters;assembly=SomeTech.DataFeed" xmlns:out="clr-namespace:SomeTech.DataFeed;assembly=SomeTech.DataFeed" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:compModel="clr-namespace:SomeTech.DataFeed.ComponentModel;assembly=SomeTech.DataFeed" xmlns:channel="clr-namespace:SomeTech.DataFeed.Engine.Channel;assembly=SomeTech.DataFeed" xmlns:engine="clr-namespace:SomeTech.DataFeed.Engine;assembly=SomeTech.DataFeed" xmlns:kernel="clr-namespace:SomeTech.Kernel.Channel;assembly=SomeTech.Kernel" xmlns="clr-namespace:SomeTech.DataFeed;assembly=SomeTech.DataFeed" xmlns:schema="clr-namespace:System.Xml.Schema;assembly=System.Xml" xmlns:xmlLinq="clr-namespace:System.Xml.Linq;assembly=System.Xml" xmlns:domain="clr-namespace:SomeTech.Common.Domain;assembly=SomeTech.Common" xmlns:s="clr-namespace:System;assembly=mscorlib" x:Key="transportActivity" SearchType="ReportId" RecordsPerFile="100" UseWindowsAuth="false" IsWindowsAuthSpecific="false" TempFileOnErrorAction="DoNothing" TempFileOnErrorRenameString=""&gt;     &lt;/transporters:SomeWebServiceTransportActivity&gt;   &lt;/DontNeed2&gt;   &lt;InterestingData&gt;     &lt;Item&gt;Apple&lt;/Item&gt;     &lt;Item&gt;Orange&lt;/Item&gt;   &lt;/InterestingData&gt; &lt;/Root&gt; </code></pre>  <p>The transform is failing because of this attribute that's in the "DontNeed2" node: <code>xmlns:xmlLinq="clr-namespace:System.Xml.Linq;assembly=System.Xml"</code></p>  <p>So if I completely remove that attribute, the transform succeeds. However, I don't control the generation of that XML so I need to be able to handle it. How can this attribute that's in a node that the XSL doesn't even select have the ability to kill the transform, and how do I work around that?</p>