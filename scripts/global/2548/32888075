<p>We decided to use UDP to send a lot of data like coordinates between:</p>  <ul> <li>client [C++] (using poll)</li> <li>server [JAVA] [Apache MINA]</li> </ul>  <p>My datagrams are only 512 Bytes max to avoid as possible the fragmentation during the transfer.</p>  <p>Each datagram has a header I added (with an ID inside), so that I can monitor :</p>  <ul> <li>how many datagrams are received</li> <li>which ones are received</li> </ul>  <p>The problem is that we are sending the datagrams too fast. We receive like the first ones and then have a big loss, and then get some, and big loss again. The sequence of ID datagram received is something like [1], [2], [250], [251].....</p>  <p>The problem is happening in local too (using localhost, 1 network card only) <strong>I do not care about losing datagrams, but here it is not about simple loss due to network (which I can deal with)</strong></p>  <p>So my questions here are:</p>  <ul> <li>On client, how can I get the best :  <ul> <li>settings, or socket settings?</li> <li>way to send as much as I can without being to much?</li> </ul></li> <li>On Server, Apache MINA seems to say that it manage itself the ~"size of the buffer socket"~ but is there still some settings to care about?</li> <li>Is it possible to reach something like 1MB/s knowing that our connection already allow us to have at least this bandwidth when downloading regular files?</li> </ul>  <p>Nowadays, when we want to transfer a ~4KB coordinates info, we have to add sleep time so that we are waiting 5 minutes or more to get it to finish, it's a big issue for us knowing that we should send every minute at least 10MB coordinates informations.</p>