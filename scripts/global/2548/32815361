<p>thanks for reading. <strong>backgrounds</strong>: I want to write a udp server and a udp client. <strong>package format</strong> 0x01+head+body+0x02 <strong>struct info</strong></p>  <pre><code>const uint8_t MONITOR_STX = 0x01; const uint8_t MONITOR_ETX = 0x02; typedef struct {                                                                                                                                                                                                                              uint32_t ulType;     uint32_t ulUserIp;     uint32_t ulMysqlIp;     uint8_t ucReq;                                                                                                                                                                                                                                                                                                   }tMonitorHead; typedef struct {     struct timeval ulRecvTime;     uint8_t    aucDstMac[6];     uint8_t    aucSrcMac[6];     uint32_t    ulDstIp;     uint32_t    ulSrcIp;     uint16_t    ulDstPort;     uint16_t    ulSrcPort;     uint8_t    aucMysqlData[1024];     uint32_t    ulDataLen;     uint32_t    ErrType; }tMonitorMysqlReq; </code></pre>  <p><strong>server</strong> I have receive the pkg successfully. I want to parse the pkg body:</p>  <pre><code>        tMonitorMysqlReq * pkg_req_mysql_body = (tMonitorMysqlReq *)( ((char *)pPkg)+1+sizeof(tMonitorHead));     char recvTime[32] = {0};     char dstMac[32] = {0};     char srcMac[32] = {0};     char dstip[32] = {0};     char srcip[32] = {0};     uint32_t dstport, srcport;     char aucMysqlData[1024] = {0};     uint32_t ulDataLen;     uint32_t ErrType;     char insert_string[2048];      //change net to host     struct timeval tRecvTime = pkg_req_mysql_body-&gt;ulRecvTime;  //need ntoh     snprintf( recvTime,sizeof(recvTime),"%s",ctime((const time_t *)(&amp;(tRecvTime.tv_sec))) );      printf("recvTIme = %s\n", recvTime);      snprintf(dstMac,sizeof(dstMac),"%02x:%2x:%02x:%02x:%02x:%02x",pkg_req_mysql_body-&gt;aucDstMac[0],pkg_req_mysql_body-&gt;aucDstMac[1],pkg_req_mysql_body-&gt;aucDstMac[2],pkg_req_mysql_body-&gt;aucDstMac[3],pkg_req_mysql_body-&gt;aucDstMac[4],pkg_req_mysql_body-&gt;aucDstMac[5]);      int ii=0;     for(ii=0;ii&lt;6;ii++)     {         printf("pkg_req_mysql_body-&gt;aucDstMac[%d] = %02x\n",ii,pkg_req_mysql_body-&gt;aucDstMac[ii]);     }     printf("dstMac %s\n", dstMac);      snprintf(srcMac,sizeof(srcMac),"%02x:%2x:%02x:%02x:%02x:%02x",pkg_req_mysql_body-&gt;aucSrcMac[0],pkg_req_mysql_body-&gt;aucSrcMac[1],pkg_req_mysql_body-&gt;aucSrcMac[2],pkg_req_mysql_body-&gt;aucSrcMac[3],pkg_req_mysql_body-&gt;aucSrcMac[4],pkg_req_mysql_body-&gt;aucSrcMac[5]);      struct in_addr stTmpAddr;     stTmpAddr.s_addr = *(in_addr_t*)(&amp;(pkg_req_mysql_body-&gt;ulDstIp));     snprintf(dstip,sizeof(dstip),"%s",inet_ntoa(stTmpAddr));     stTmpAddr.s_addr = *(in_addr_t*)(&amp;(pkg_req_mysql_body-&gt;ulSrcIp));     snprintf(srcip,sizeof(srcip),"%s",inet_ntoa(stTmpAddr));     dstport = ntohs(pkg_req_mysql_body-&gt;ulDstPort);     srcport = ntohs(pkg_req_mysql_body-&gt;ulSrcPort);     memcpy(aucMysqlData,pkg_req_mysql_body-&gt;aucMysqlData,sizeof(aucMysqlData));     ulDataLen = ntohl(pkg_req_mysql_body-&gt;ulDataLen);     ErrType = ntohl(pkg_req_mysql_body-&gt;ErrType);       recvTime[24] = '\0';     printf("recvTime = %shihihi\n",recvTime);     snprintf(insert_string,sizeof(insert_string),"insert into db_monitor_data2 values(NULL,'%s','%s','%s','%s','%s',%u,%u,'%s',%u,%u)",recvTime,dstMac,srcMac,dstip,srcip,dstport,srcport,aucMysqlData,ulDataLen,ErrType);     printf("insert: %s\n",insert_string); </code></pre>  <p><strong>client</strong> create package</p>  <pre><code>    // create mysql_command pkg head tMonitorHead * pkg_head = (tMonitorHead*)(buff+1); pkg_head-&gt;ulType = htonl(MYSQL_COMMAND); pkg_head-&gt;ulUserIp = htonl(168430090);  //10.10.10.10 pkg_head-&gt;ulMysqlIp = htonl(2063614052);//100.64.0.123 pkg_head-&gt;ucReq = PROTO_REQ; pkg_head-&gt;ulSeq = htonl(1000000); pkg_head-&gt;ulSessionId = htonl(1000000);  // create mysql_command pkg body tMonitorMysqlReq *pkg_req_mysql_body = (tMonitorMysqlReq*)(buff+1+sizeof(tMonitorHead)); struct timeval tv; tv.tv_sec = 1443293232; tv.tv_usec = 594065;  pkg_req_mysql_body-&gt;ulRecvTime = tv;    //Sun Sep 27 02:47:12 2015 pkg_req_mysql_body-&gt;aucDstMac[0] = 0u;  //0x00 pkg_req_mysql_body-&gt;aucDstMac[1] = 153; //0x99 pkg_req_mysql_body-&gt;aucDstMac[2] = 136; //0x88 pkg_req_mysql_body-&gt;aucDstMac[3] = 119; //0x77 pkg_req_mysql_body-&gt;aucDstMac[4] = 102; //0x66 pkg_req_mysql_body-&gt;aucDstMac[5] = 85;  //0x55  pkg_req_mysql_body-&gt;aucSrcMac[0] = 170; //0xaa pkg_req_mysql_body-&gt;aucSrcMac[1] = 170; //0xaa pkg_req_mysql_body-&gt;aucSrcMac[2] = 170; //0xaa pkg_req_mysql_body-&gt;aucSrcMac[3] = 170; //0xaa pkg_req_mysql_body-&gt;aucSrcMac[4] = 170; //0xaa pkg_req_mysql_body-&gt;aucSrcMac[5] = 170; //0xaa  pkg_req_mysql_body-&gt;ulDstIp = 168430090u;   //10.10.10.10 pkg_req_mysql_body-&gt;ulSrcIp = 2063614052u;  //100.64.0.123  pkg_req_mysql_body-&gt;ulDstPort = htons(3306u); pkg_req_mysql_body-&gt;ulSrcPort = htons(9876u);  memcpy(pkg_req_mysql_body-&gt;aucMysqlData,"insert into tb",sizeof(pkg_req_mysql_body-&gt;aucMysqlData)); pkg_req_mysql_body-&gt;ulDataLen = htonl(200u); pkg_req_mysql_body-&gt;ErrType = htonl(300u);  // END buff[1+sizeof(tMonitorHead)+sizeof(tMonitorMysqlReq)] = MONITOR_ETX; </code></pre>  <p>I think the server will print:</p>  <pre><code>insert into db_monitor_data2 values(NULL,'Sun Sep 27 02:47:12 2015','00:99:88:77:66:55','aa:aa:aa:aa:aa:aa','10.10.10.10','100.64.0.123',3306,9876,'insert into tb',200,300) </code></pre>  <p>but the result is </p>  <pre><code>insert into db_monitor_data2 values(NULL,'Sun Sep 27 02:47:12 2015','91:10:09:00:00:00','00: 0:00:99:88:77','102.85.170.170','170.170.170.170',2570,2570,'d@',1835360104,1685192750) </code></pre>  <p>I do not know why I get this result...</p>  <p>in the client program, i wirte</p>  <pre><code>pkg_req_mysql_body-&gt;ulDstIp = 168430090u;   //10.10.10.10 pkg_req_mysql_body-&gt;ulSrcIp = 2063614052u;  //100.64.0.123 </code></pre>  <p>and i do not need to exchange the Big-endian and little-endian, because I got he num 168430090 and 2063614052 by the function inet_aton(), it returns the network address.</p>  <pre><code>Can somebody help me? I have been in trouble for a period of time, thank you very much!!! </code></pre>