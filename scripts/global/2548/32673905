<p>Good day,</p>  <p>I am making an Android app which sends UDP packets to Ruby server, which then forwards them to all subscribed android clients, including the original sender.</p>  <p>My server receives the packets, but is not able to send them or connect via UDP socket.</p>  <p>Server code snippet (Ruby, on Fedora 22):</p>  <pre><code>SERVER_SEND_PORT = 4000 ANDROID_PORT = 7500  # Send socket s_socket = UDPSocket.new s_socket.setsockopt(Socket::SOL_SOCKET,Socket::SO_BROADCAST, 1) s_socket.bind(SERVER_IP, SERVER_SEND_PORT)   # Receive socket r_socket = UDPSocket.new r_socket.setsockopt(Socket::SOL_SOCKET,Socket::SO_BROADCAST, 1) r_socket.bind(SERVER_IP, RECEIVE_PORT)  $clientIPs = [] $clientPorts = []  def broadcast(data)                $clientIPs.each_with_index do |ip, index|     puts "trying to send #{data}"     s_socket.connect(ip, ANDROID_PORT)  # does not pass this step     puts "connected"     s_socket.send(data, 0)     #s_socket.send(data, 0, ip, ANDROID_PORT)     puts "sent: " + data;   end end  while true   data, client = r_socket.recvfrom(256)   puts "received: " + data   Thread.new(client) do |clientAddr|     if !$clientIPs.include? clientAddr[3]       $clientIPs &lt;&lt; clientAddr[3]       $clientPorts &lt;&lt; clientAddr[1]     end      broadcast(data)   end end </code></pre>  <p>Client code snippet:</p>  <pre><code>private static final int LISTENING_PORT = 7500;    public void onStart() {      /* Unrelated code + Sending socket */       // Receiving Thread     new Thread(){         public void run() {             // Create receiving socket at a given port             try {                 rSocket = new DatagramSocket(LISTENING_PORT);                 rSocket.setBroadcast(true);             } catch (SocketException e) {                 e.printStackTrace();             }             Log.d("Trace", "Created receiving socket");              while (true) {                 if (rSocket != null) {                     // Receive data                     byte[] buf = new byte[256];                     DatagramPacket packet = new DatagramPacket(buf, buf.length);                     try {                         rSocket.receive(packet);                     } catch (IOException e) {                         e.printStackTrace();                     }                     System.out.println("Got the packet!");                 }             }         }     }.start(); } </code></pre>  <p><code>netstat -u</code> does not show any UDP connections in the server.</p>