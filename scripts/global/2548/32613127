<p>I wrote a custom application in c# that sends data to a remote computer. However if I send more than 23672 bytes at once, the data won't arrive (~99% packet drop). When opening up Wireshark, i found this: <a href="http://imgur.com/VRaM2Ga" rel="nofollow">Screenshot</a> It looks like the udp packet fragmentation fails, which is really strange because a packet of 23672 or lower will also get fragmented.</p>  <p>When testing the same application localhost everything works fine up to 65507 bytes (udp header limit). Test application that reproduces the error:</p>  <pre><code>        var client = new UdpClient();         var sequenceNumber = 0; //i'm sending a sequence number to determine how many packets i've lost         while (true)         {              var buffer = new byte[23673];             BitConverter.GetBytes(sequenceNumber++).CopyTo(buffer, 0);             client.Client.SendTo(buffer, new IPEndPoint(IPAddress.Parse("192.168.1.100"), 1234));             Thread.Sleep(1000);         } </code></pre>  <p>How can i resolve this issue?  Or should i just make my packets smaller? If yes, whats the best packet size for sending udp data over the internet?</p>