<p>Actually I am new to APNS and I have been using some help from the online forums and blogs. I am using PHP to implement the server side. The following is my PHP code</p>  <pre><code>&lt;?php  // Put your device token here (without spaces): $deviceToken = '0f744707bebcf74f9b7c25d48e3358945f6aa01da5ddb387462c7eaf61bbad78';  // Put your private key's passphrase here: $passphrase = 'pushchat';  // Put your alert message here: $message = 'My first push notification!';  ////////////////////////////////////////////////////////////////////////////////  $ctx = stream_context_create(); stream_context_set_option($ctx, 'ssl', 'local_cert', 'ck.pem'); stream_context_set_option($ctx, 'ssl', 'passphrase', $passphrase);  // Open a connection to the APNS server $fp = stream_socket_client(     'ssl://gateway.sandbox.push.apple.com:2195', $err,     $errstr, 60, STREAM_CLIENT_CONNECT|STREAM_CLIENT_PERSISTENT, $ctx);  if (!$fp)     exit("Failed to connect: $err $errstr" . PHP_EOL);  echo 'Connected to APNS' . PHP_EOL;  // Create the payload body $body['aps'] = array(     'alert' =&gt; $message,     'sound' =&gt; 'default'     );  // Encode the payload as JSON $payload = json_encode($body);  // Build the binary notification $msg = chr(0) . pack('n', 32) . pack('H*', $deviceToken) . pack('n', strlen($payload)) . $payload;  // Send it to the server $result = fwrite($fp, $msg, strlen($msg));  if (!$result)     echo 'Message not delivered' . PHP_EOL; else     echo ' </code></pre>  <p>' . PHP_EOL;</p>  <pre><code>// Close the connection to the server fclose($fp); </code></pre>  <p>I have converted the .p12 file to a PEM file and named it as ck.pem and has hosted it on the same location as the php file resides. When I execute the PHP file, the following gets printed. Is there something I am missing. I am doubtful about the certificate part.</p>  <pre><code>Connected to APNS Message successfully delivered </code></pre>