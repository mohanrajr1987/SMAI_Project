<p>I ran into a nasty problem on Monday.  I have a java client application that integrates with a third-party SaaS provider.  The integration was done in 2012-2013, so the team wrote a WSDL document, implemented the server-side of the web service in JavaScript and the provider's framework, and then used Apache CXF 2.5.10 to generate client stubs, and all was well.  Until our team discovered a security issue with the SaaS provider, and decided we needed to set a security setting to require authorization for requests to the WSDL document.  After my client bounced, the integration was broken, and every request to the web service gets a 401 error message: Caused by: javax.wsdl.WSDLException: WSDLException: faultCode=PARSER_ERROR: Problem parsing '<a href="https://company.saasprovider.com/SaasProviderTicketManager.do?WSDL" rel="nofollow">https://company.saasprovider.com/SaasProviderTicketManager.do?WSDL</a>'.: java.io.IOException: Server returned HTTP response code: 401 for URL: <a href="https://company.saasprovider.com/SaasProviderTicketManager.do?WSDL" rel="nofollow">https://company.saasprovider.com/SaasProviderTicketManager.do?WSDL</a></p>  <p>The SaaS provider was very helpful, monitoring things on the wire and identifying the issue as the request for the WSDL was not coming with authorization headers that were being sent when making the actual SOAP request.</p>  <p>How do I tell CXF to add the authorization headers on the request for the WSDL?</p>