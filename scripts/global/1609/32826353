<p>I have made SOAP requests before in Java but I seem to be having an eternity of trouble with this one.  I use SOAPUI to see what the envelope needs to consist but the function's namespace isn't declared in the object istelf but rather a namespace for the entire envelope (you'll know what i mean below) </p>  <pre><code>    &lt;soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:kic="http://kickstart.private.webservices.public"&gt;    &lt;soapenv:Header/&gt;    &lt;soapenv:Body&gt;       &lt;kic:getStats soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"&gt;          &lt;websiteUrl xsi:type="xsd:string"&gt;?&lt;/websiteUrl&gt;       &lt;/kic:getStats&gt;    &lt;/soapenv:Body&gt; &lt;/soapenv:Envelope&gt; </code></pre>  <p>I tried both ksoap2 and xml.soap but both seem to return an html String from the webservice (redundant to post as it doesn't return a specific error). </p>  <p>I also tried makign the request directly from the WSDL link and calling the functions from there : <a href="http://dev.rightclick.nl/rc/public/webservices/private/kickstart/daily.cfc?wsdl" rel="nofollow">http://dev.rightclick.nl/rc/public/webservices/private/kickstart/daily.cfc?wsdl</a></p>  <p>I preferably use ksoap2 because it worked for me in the past but as all examples have used Android, I wouldn't mind switching to a more appropiate replacement</p>  <p>My Java code looks as follows : </p>  <pre><code>package com.rc.kickstart.backend.WebService;  import java.io.IOException;  import org.ksoap2.SoapEnvelope; import org.ksoap2.serialization.MarshalBase64; import org.ksoap2.serialization.SoapObject; import org.ksoap2.serialization.SoapSerializationEnvelope; import org.ksoap2.transport.HttpTransportSE; import org.xmlpull.v1.XmlPullParserException;  public class RequestService {      private static final String WSDL = "http://dev.rightclick.nl/rc/public/webservices/private/kickstart/daily.cfc?wsdl";     private static final String targetNameSpace = "http://dev.rightclick.nl/rc/public/webservices/private/kickstart/daily.cfc";     // for getStatsRequest     private static final String NAMESPACE = "http://rightclick.nl/webservices/private/kickstart/";      private static final String METHOD_NAME = "getStats";     private static final String SOAP_ACTION = NAMESPACE + METHOD_NAME;      private static final String ADDRESS_LOCATION = "http://dev.rightclick.nl/rc/public/webservices/private/kickstart/daily/";      private static final String hostURL = "dev.rightclick.nl/";     private static final String WEBSITE_URL = "http://dev.rightclick.nl/";      public static void main(String[] args) {          // requestSOapObject         SoapObject request = new SoapObject(NAMESPACE, METHOD_NAME);         request.addProperty("websiteUrl", WEBSITE_URL);          SoapSerializationEnvelope envelop = getSoapSerializationEnvelope(request);         // envelop.bodyOut = request;         envelop.encodingStyle = SoapSerializationEnvelope.ENC;         envelop.dotNet = true;          MarshalBase64 mbase = new MarshalBase64();// marshal is used to                                                     // serialize the byte array          HttpTransportSE aht = new HttpTransportSE(WSDL);         aht.debug = true;         mbase.register(envelop);          try {             aht.call(SOAP_ACTION, envelop);         } catch (IOException | XmlPullParserException e) {             e.printStackTrace();             System.out.println("Request: " + aht.requestDump);             System.out.println("Response: " + aht.responseDump);         }      }      private final static SoapSerializationEnvelope getSoapSerializationEnvelope(SoapObject request) {         SoapSerializationEnvelope envelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);         envelope.dotNet = true;         envelope.implicitTypes = true;         envelope.setOutputSoapObject(request);          return envelope;     }  } </code></pre>  <p>this exact code has worked before with a similar webservice  When running, I get this error but that is only because xml.soap tries to parse html code. : </p>  <blockquote>   <p>org.xmlpull.v1.XmlPullParserException: unexpected type (position:TEXT    Connection to T...@1:84 in java.io.InputStreamReader@4b1210ee)    at   org.kxml2.io.KXmlParser.exception(Unknown Source)     at   org.kxml2.io.KXmlParser.nextTag(Unknown Source)   at   org.ksoap2.SoapEnvelope.parse(Unknown Source)     at   org.ksoap2.transport.Transport.parseResponse(Unknown Source)  at   org.ksoap2.transport.HttpTransportSE.call(Unknown Source)     at   com.rc.kickstart.backend.WebService.RequestService.getStatsData(RequestService.java:67)     at   com.rc.kickstart.backend.WebService.RequestService.main(RequestService.java:28)</p> </blockquote>  <p>If you have any questions or want more info please comment. </p>