<p>I have been fighting the following error for longer than I would like to admit. The solutions I was finding were not related to what the actual problem was.</p>  <p>PHP Fatal error:  SOAP-ERROR: Parsing WSDL: Couldn't load from '<a href="https://x.x.x.x/iControl/iControlPortal.cgi?WSDL=LocalLB.Class" rel="nofollow">https://x.x.x.x/iControl/iControlPortal.cgi?WSDL=LocalLB.Class</a>' : failed to load external entity "<a href="https://x.x.x.x/iControl/iControlPortal.cgi?WSDL=LocalLB.Class" rel="nofollow">https://x.x.x.x/iControl/iControlPortal.cgi?WSDL=LocalLB.Class</a>"</p>  <p>My prod environment is CentOS 6 which is packaged with PHP 5.3 which has been EOL since August 2014. From my understanding CentOS backports security fixes, I still wanted to do some testing with a newer version and there was some other features not available in 5.3 that I could possibly leverage. </p>  <p>I built out a new DEV environment with PHP 5.6 and all seemed to be working until I tried a SOAP call and got the message above. After a lot of searching I finally found that in PHP 5.6 SSL Certificate check is enabled by default. In my DEV environment it is completely contained and the application requires SSL. I do not have a valid certificate. I have not tested in my PROD environment which does have valid certificates. </p>  <p>To get around this I added:</p>  <pre><code>'stream_context'=&gt;stream_context_create (     array     (         'ssl'=&gt;array         (             'verify_peer'=&gt;false,              'verify_peer_name'=&gt;false         )     ) ) </code></pre>  <p>Here it is put together in the code. This is kind of messy just threw it together for testing. </p>  <pre><code>&lt;?php  $device_ip = "x.x.x.x"; $user = "username"; $pw = "password";  $location = "https://" . $device_ip . "/iControl/iControlPortal.cgi?"; $wsdl_class = "https://" . $device_ip . "/iControl/iControlPortal.cgi?WSDL=LocalLB.Class"; $soap_class = new SoapClient($wsdl_class, array('location'=&gt;$location, 'login'=&gt;$user, 'password'=&gt;$pw, 'stream_context'=&gt;stream_context_create(array('ssl'=&gt;array('verify_peer'=&gt;false, 'verify_peer_name'=&gt;false)))));  $response = $soap_class-&gt;get_string_class(array("SomeName")); var_dump($response);  ?&gt; </code></pre>  <p>although I was able to find a workaround for not having a valid certificate. Is there a way to import the self-signed certificate so that I would not have use the workaround in my DEV environment?</p>