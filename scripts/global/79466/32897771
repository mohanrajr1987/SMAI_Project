<p>I am trying to add a modal popup or some message to show the user that the connection to firebase is either down or unavailable, but don't know how to add it to my authWithPassword function. </p>  <pre><code>    login: function (user) {         var defered = $q.defer();         var hash = CryptoJS.SHA3(user.password);         var encryptedPassword = hash.toString(CryptoJS.enc.Hex);          ref.authWithPassword({             email: user.email,             password: encryptedPassword         }, function (error, authData) {             if (error) {                 defered.reject(error);                 switch (error.code) {                     case 'INVALID_USER':                         console.log('The specified user account does not exist.');                         break;                     case 'INVALID_PASSWORD':                         console.log('The specified user account password is incorrect.');                         break;                 }             } else {                 defered.resolve(authData);             }         });          return defered.promise;     }, // login </code></pre>  <p>this is coming from a service I have created.</p>  <p>UPDATE: I figured this out by just adding a modal popup function into the error break code and using firebase 'NETWORK_ERROR' code.</p>  <pre><code>$scope.login = function() {     LoadingSpinner.show();     Authentication.login($scope.user).then(function(authData){       if(authData.password.isTemporaryPassword === true){         $state.go('change-password');       } else {         $state.go('inapp.news-feed');       }     }, function(error){         switch (error.code) {           case 'INVALID_USER':             $scope.message = true;             $scope.errorMessage = 'The specified user account does not exist.';             break;           case 'INVALID_PASSWORD':             $scope.message = true;             $scope.errorMessage = 'The specified user account password is incorrect';             break;           case 'NETWORK_ERROR':             if(error.code == 'NETWORK_ERROR'){               $timeout(function() {                 LoadingSpinner.hide();                 $scope.message = true;                 $scope.errorMessage = 'Network is down at the moment';                 }, 3000);             }             break;         }     }).finally(function() {         LoadingSpinner.hide();     }); }; //login </code></pre>