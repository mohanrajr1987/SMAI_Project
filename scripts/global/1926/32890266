<p>I have a dataframe <code>df</code> that has some <code>float</code>, <code>int</code> and <code>datetime</code> columns. I want an other dataframe <code>res</code> that should have only one column that's value is <code>df.dtypes</code>. And I want to sort this <code>res</code> dataframe but I get wrong results in Python 3.4.3 (pandas 0.16.2). My code is:</p>  <pre><code>data=[dt.datetime.strptime('16Sep2012','%d%b%Y'),11,12.2,22\     ,dt.datetime.strptime('16Sep2013','%d%b%Y'),22.2,33\     ,dt.datetime.strptime('16Sep2014','%d%b%Y')\     ,dt.datetime.strptime('16Sep2015','%d%b%Y'),33.2]  df=pd.DataFrame([data]*10) res=pd.DataFrame(df.dtypes,columns=['type'])  res              type 0  datetime64[ns] 1           int64 2         float64 3           int64 4  datetime64[ns] 5         float64 6           int64 7  datetime64[ns] 8  datetime64[ns] 9         float64  res.sort('type')              type 1           int64 4  datetime64[ns] 3           int64 6           int64 5         float64 2         float64 0  datetime64[ns] 7  datetime64[ns] 8  datetime64[ns] 9         float64 </code></pre>  <p>If I generate <code>res2</code> "manually" with strings than sorting works perfectly:</p>  <pre><code>strings=['datetime64[ns]','int64','float64','int64'\     ,'datetime64[ns]','float64','int64','datetime64[ns]'\     ,'datetime64[ns]','float64']  res2=pd.DataFrame(strings,columns=['type'])  res2              type 0  datetime64[ns] 1           int64 2         float64 3           int64 4  datetime64[ns] 5         float64 6           int64 7  datetime64[ns] 8  datetime64[ns] 9         float64  res2.sort('type')              type 8  datetime64[ns] 4  datetime64[ns] 7  datetime64[ns] 0  datetime64[ns] 2         float64 5         float64 9         float64 1           int64 3           int64 6           int64 </code></pre>  <p>Is there a bug or what did I wrong? How can I sort this correctly? In Python 2.7.10 (pandas 0.16.2), sorting <code>res</code> gives this result (of course sorting <code>res2</code> works perfectly):</p>  <pre><code>res.sort('type')              type 1           int64 3           int64 6           int64 2         float64 5         float64 9         float64 7  datetime64[ns] 8  datetime64[ns] 0  datetime64[ns] 4  datetime64[ns] </code></pre>  <p>Thanks!</p>