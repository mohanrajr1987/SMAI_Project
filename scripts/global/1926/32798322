<p>I am learning the Python data model. I have read <a href="http://www.cafepy.com/article/python_types_and_objects/python_types_and_objects.html" rel="nofollow">this article</a>.</p>  <p>In <a href="http://stackoverflow.com/questions/31995472/python-3-how-can-object-be-instance-of-type">this question</a> @poke answered how the built-in function <code>isinstance</code> works. It explained:</p>  <pre><code>&gt;&gt;&gt; isinstance(type, object) #Because type.__base__==object True &gt;&gt;&gt; isinstance(object, object) True </code></pre>  <p>So my question is why <code>type.__base__==object</code>? and <code>issubclass(object,object)==True</code> when <code>object.__bases__==()</code> ?</p>  <p>Is it just for keeping unification of "everything is a instance of <code>object</code>"?</p>