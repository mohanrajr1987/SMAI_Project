<pre><code>int power(int first,int second) {     int counter1 = 0;     long ret = 1;      while (counter1 != second){         ret *= first;         counter1 += 1;     }     return ret; }   int main(int argc,char **argv) {      long one = atol(argv[1]);     long two = atol(argv[2]);     char word[30];     long finally;      printf("What is the operation? 'power','factorial' or 'recfactorial'\n");     scanf("%20s",word);      if (strcmp("power",word) == 0){         finally = power(one,two);         printf("%ld\n",finally);         return 0;     }   } </code></pre>  <p>This function is intended to do the <em>"power of"</em> operation like on the calculator, so if I write: <code>./a.out 5 3</code> it will give me 5 to the power of 3 and print out 125</p>  <p>The problem is, in cases where the numbers are like: <code>./a.out 20 10</code>, 20 to the power of 10, I expect to see the result of: <code>1.024 x 10^13</code>, but it instead outputs <code>797966336</code>.</p>  <p>What is the cause of the current output I am getting? </p>  <p>Note: I assume that this has something to do with the <code>atol()</code> and <code>long</code> data types. Are these not big enough to store the information? If not, any idea how to make it run for bigger numbers?</p>