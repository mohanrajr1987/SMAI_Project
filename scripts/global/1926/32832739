<p>I was able to determine the type of an object created using prototypes by using the <code>instanceof</code> operator, but now I was trying to create objects using the JSON or literal notation.</p>  <p>I need to determine the type of the object returned by a function, but I don't know how. I have searched for some time, but no method works.</p>  <p>Basically, my situation is the following. I have the following function <code>App</code>, which returns an object literal:</p>  <pre><code>function App(){     return {         // properties and methods     } } </code></pre>  <p>And then I want to inherit (parasitic inheritance) from <code>App</code> in the following way:</p>  <pre><code>function SpecialApp(){     var a = new App();     a.newProperty = "Hello";     // adding more properties and methods     return a; } </code></pre>  <p>Now, I need to determine the type of the object returned by <code>App</code> and by <code>SpecialApp</code> which would essentially be the name of the functions that return the object (I guess), or at least I would like to be able to differentiate their types, and in general to differentiate any two different object literals, and I would like to be able to also know their types. How can I achieve this?</p>  <p>I am using EcmaScript 5.</p>