<p>I'm getting inconsistent results when converting <code>Date</code>s to <code>LocalDate</code>s, around the year 200. Using the following code to do the conversion:</p>  <pre><code>  private LocalDate toLocalDate(Date localDate)   {     return LocalDateTime.ofInstant(localDate.toInstant(), ZoneId.systemDefault()).toLocalDate();   } </code></pre>  <p>My <code>ZoneId.systemDefault()</code> is <code>Africa/Harare</code>, which matches the <code>CAT</code> used in the test. The test case I run is</p>  <pre><code>SimpleDateFormat simpleDateFormat = new SimpleDateFormat("EEE MMM dd HH:mm:ss zzz yyyy", Locale.US); String dateString = "Tue Jan 01 00:00:00 CAT 200"; String dateString2 = "Tue Jan 01 00:00:00 CAT 201"; String dateString3 = "Wed Dec 31 00:00:00 CAT 200";  System.out.println(toLocalDate(simpleDateFormat.parse(dateString))); System.out.println(toLocalDate(simpleDateFormat.parse(dateString2))); System.out.println(toLocalDate(simpleDateFormat.parse(dateString3))); </code></pre>  <p>My expected output for this would be </p>  <pre><code>0200-01-01 0201-01-01 0200-12-31 </code></pre>  <p>Or, if not that, at least consistently incorrect values. The actual results are</p>  <pre><code>0199-12-31 0201-01-01 0200-12-31 </code></pre>  <p>So it seems that the first one is being rolled back slightly, possibly the two hours corresponding to the <code>CAT</code> timezone? But why does this only happen on the one case? Doing the same experiment with the year 2000 does not produce the same error.</p>