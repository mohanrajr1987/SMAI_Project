<p>My data is multi-dimensional with approximately 7 million records. I want to optimize my queries which will be some range queries on timestamp and on these dimensions. For example:</p>  <pre><code>Let the records be of the format (in json form)     {         _id  : 123,         colA : A1,         colB : B4,         colC : C6,         colD : D2         time : "1992-12-13 12:24:43"     }  SELECT * FROM mytable WHERE colA = A1 AND colB = B1 AND colC = C1 AND time &gt; "1990-12-12 00:00:00"   </code></pre>  <p>As far as i could understand, an r*tree or X-tree index would be a perfect option for my use case. Compound indexes cannot be used as the queries are not predetermined. Individual index on each will require intersection which is again a costly operation especially when done for a large number of dimensions.</p>  <p>But i couldn't any suitable nosql database for the same. Most of the spatial databases support only 2-dimensional data. Others are OLAP databases which usually are optimized for bulk non-transactional inserts.</p>  <p>Is there any high performance no-sql database that supports such indexes or such functionality for a large number of dimensions? </p>  <p>Note: NoSQL is preferable as my number of dimensions may vary with each record. But suggestions are welcomed for SQL as well. MySQL supports such a functionality in its <code>MYISAM</code> engine but it is not transactional and has table level locking, limiting availability.</p>