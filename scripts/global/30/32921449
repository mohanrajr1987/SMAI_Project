<p>I have to make an invoice system where the invoices have to be stored for 10 years. What will be the best approach to store the invoices?</p>  <p><strong>1. An SQL database:</strong></p>  <pre><code>Ex: </code></pre>  <ul> <li><p>Table Client (Code, Name, Address, Tel...) </p>  <p>-Table Product (Part_Number, Description, Price...)</p>  <p>-Table Invoice (Invoice_No, Client_code, Product, Quantity...)</p></li> </ul>  <p>The Invoice products will be tracked by the unique invoice number.:</p>  <pre><code>Invoice_No | Client_Code | Product | Quantity  000000001 | Bob_025445 | Shoes...| 7  000000001 | Bob_025445 | Shirt......| 17  000000002 | Susan_22111| Hat.......| 1  000000001 | Bob_025445 | Boots ...| 1 </code></pre>  <p><strong>2. Save Invoice to file:</strong> Serialize class to file:</p>  <pre><code>    public class Invoice implements Serializable {     private String invoiceNr;     private Date invoiceDate;      private Client client;     private List&lt;products&gt; products;      ...     } </code></pre>  <p>Serialize as 00000001.inv, 00000002.inv... and deserialize for further consulting, print, etc...  Saving to file I can generate an XML, but I will have the same problems as in serialization case. First model is easier for generating reports for each detail, and fast, but, in 10 years, with only 10 invoices/day and only 10 items each invoice, the Invoice table will be pretty big ... </p>  <p>Second model seems better, but, if I want to generate a report about "Who bought shoes" for example, the program will have to iterate each file, witch is very slow.</p>  <p>So, please help me with any suggestion or third idea. Witch is the best practice? </p>  <p>Thank you!</p>