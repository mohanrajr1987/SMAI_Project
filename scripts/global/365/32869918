<p>I am receiving below error.</p>  <pre><code>Fatal error from Post: A JSONObject text must begin with '{' at 1 [character 2 line 1] 2015-09-30 09:51:55,256 ERROR [STDERR] (http-8443-6) org.json.JSONException: A JSONObject text must begin with '{' at 1 [character 2 line 1] </code></pre>  <p>I am very much sure that json what i am receving is in propper format. Please correct me if i am doing any wrong.And before it is going into try block the URL is printing for infinity loop and gettign the error </p>  <pre><code>    String url = request.getRequestURL().toString();     System.out.println(url);   org.apache.tomcat.util.net.AprEndpoint] (http-8443-Acceptor) Maximum number of threads (200) created for connector with address null and port 8443 </code></pre>  <p>Below is the code i am trying to get the json object,</p>  <pre><code> public void doPost(HttpServletRequest request, HttpServletResponse response)         throws ServletException, IOException {      System.out.println("hi from Post");     String url = request.getRequestURL().toString();     System.out.println(url);      try {          InputStream is = new URL(url).openStream();          System.out.println("InputStream Post: " + is);         BufferedReader rd = new BufferedReader(new InputStreamReader(is,Charset.forName("UTF-8")));          System.out.println("BufferedReader Post: " + rd);          String jsonText = readAll(rd);         System.out.println("jsonText Post: " + jsonText);          JSONObject json = new JSONObject(jsonText);         System.out.println("json Post" + json.toString());      } catch (Exception e) {         System.out.println("Fatal error from Post: " + e.getMessage());         e.printStackTrace();     } finally {         // method.releaseConnection();     }     System.out.println("Bye from Post"); }  }  private static String readAll(Reader rd) throws IOException {     StringBuilder sb = new StringBuilder();     int cp;     while ((cp = rd.read()) != -1) {         sb.append((char) cp);     }     System.out.println(sb.toString());     return sb.toString(); } </code></pre>