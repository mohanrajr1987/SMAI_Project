<p>I am new to OpenGL and wanted to learn using it for some 2d game i wanted to rewrite with 3d graphics. Therefore, I started reading tuts on how to use it with Pythhon and installed PyOpenGL.</p>  <p>My problem is that my program displaying a simple cube with a 120-fps-restriction only runs at 25 fps. I figured out that all the performance loss lies in the OpenGL part, but I could not figure out where exactly.</p>  <p>My questions are: - is it normal for OpenGL to run that slow with Python? - is my old notebook part of the problem?</p>  <p>Here is the code I used for displaying the cube:</p>  <pre><code>def draw(self):     glBegin(GL_QUADS)#info for OGL: treat following code as surface drawing code     for surface in self.surfaces:         x = 0         for vertex in surface:             x+=1             glColor3fv(self.colors[x])             glVertex3fv(self.verticles[vertex])     glEnd()      glBegin(GL_LINES) #info for OGL: treat following code as line drawing code     for edge in self.edges:         for vertex in edge:             glVertex3fv(self.verticles[vertex]) #pass each verticle in the verticles list to glVertex3fv, which creates edges     glEnd() #info for OGL:no more code incoming </code></pre>  <p>Any help is greatly appreciated.</p>