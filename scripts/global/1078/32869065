<p>In Java, I can create an enum that takes an integer as follows:</p>  <pre><code>public enum MyEnum {     FOO(1), BAR(4), BAZ(8);      private     int value;      MyEnum(int value) {         this.value = value;     }      public     int getValue() {         return value;     } } </code></pre>  <p>How do I do the same in Swift (version 2.0)?  My guess was:</p>  <pre><code>public enum MyEnum {     case FOO(1)     case BAR(4)     case BAZ(8)      public     let value: Int      init(value: Int) {         self.value = value     } } </code></pre>  <p>but attempting to compile this gives the following errors:</p>  <pre><code>Expected type Expected ',' separator Expected type Expected ',' separator Expected type Expected ',' separator Enums may not contain stored properties </code></pre>  <p>(the first two on the line "case FOO(1)", the second two on "case BAR(4)", the third two on "case BAZ(8)" and the final error on the line "let value: Int")</p>  <p>How can I fix this Swift code to create an enum that is equivalent to the one in Java?</p>  <p>Many thanks</p>