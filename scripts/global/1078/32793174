<p>I have a macro such as </p>  <p><code>#define ascii_to_3bit(c) c &amp; 0x60 - 1</code></p>  <p>I have tried to replace it with this:</p>  <pre><code>constexpr const std::uint8_t ascii_to_3bit(char c) {     return c &amp; 0x60 - 1; } </code></pre>  <p>I am using it like this:</p>  <pre><code>enum class Column {     A = ascii_to_3bit('a'),     B = ascii_to_3bit('b'),     C = ascii_to_3bit('c'),     D = ascii_to_3bit('d'),     E = ascii_to_3bit('e'),     F = ascii_to_3bit('f'),     G = ascii_to_3bit('g'),     H = ascii_to_3bit('h') }; </code></pre>  <p>It works fine as a macro but dies with "function call must have a constant value with a constant expression" when it is a function.</p>  <p>Is it possible? Compiler is whatever VS2015 ships.</p>