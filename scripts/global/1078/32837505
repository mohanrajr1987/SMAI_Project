<p>I have an abstract class Sensor, which is extended by multiple <code>Device</code> sub-classes. Each sub-class defines an enum. These enums can be different for each Sub-class instance. These enums are used to define a <code>status</code> instance variable. I would like to find a way to define the getter method <code>getStatus()</code> in the parent (abstract) class so that I won't have to reapeat the same lines of code in every subclass..</p>  <p>E.g.:</p>  <pre><code>abstract class Sensor {     // here I would have liked to declare a "status" variable to hold enum values from subclass     ....... status;      Sensor() {}      public String getStatus() {         // return the status defined in the subclass         return status.name();     } } class Device extends Sensor {     enum Status { ON, OFF };      Device() {         super.status = Status.ON;  // store enum value into variable defined in superclass     } } class Device2 extends Sensor {     enum Status { OPEN, CLOSED, LOCKED };      Device2() {         super.status = Status.OPEN;     } } </code></pre>