<p>I am trying to create an <code>MSBuild</code> project file in order to build an application. One of the steps in this process is to create .exe file. I have decided to use <code>launch4j</code> for it. <code>Launch4j</code> needs an XML configuration file in order to work and it is possible to pass that through command line.</p>  <p>I am having a problem when I try to update an element in the configuration file. It seemd to be simple and clear so I have decided to use <code>MSBuild.ExtensionPack.Xml.XmlFile</code> task for this job.</p>  <p>My target which executes <code>XmlFile</code> task</p>  <pre><code>&lt;Target Name="Java"&gt;     &lt;Error Condition="!Exists('$(GitLocation)git.exe')"  Text="Git is not installed" ContinueOnError="false"/&gt;      &lt;!-- create directory if it does not exist and clone project from the repository --&gt;     &lt;Exec Command='mkdir $(RepositoryLocation) %26 "$(GitLocation)git.exe" clone $(GitRemoteLocation) $(RepositoryLocation)'           ContinueOnError="false"           WorkingDirectory="."           ConsoleToMSBuild="true"           Condition="!Exists('$(RepositoryLocation)')"/&gt;      &lt;!-- if the folder already exists, try to update --&gt;     &lt;Exec Command='"$(GitLocation)git.exe" pull origin $(branch)'           ContinueOnError='false'           WorkingDirectory='$(RepositoryLocation)' /&gt;      &lt;SetEnvironmentVariableTask Name="JAVA_HOME" Value="$(JAVA_PATH)" Condition="Exists('$(JAVA_PATH)')"/&gt;      &lt;!-- build Production Manager --&gt;     &lt;Exec Command='"$(Maven)" clean install -DskipTests=true'           ContinueOnError='false'           WorkingDirectory='$(RepositoryLocation)$(ProductionManager)' /&gt;      &lt;!-- copy .jar file to the setup location --&gt;     &lt;Copy SourceFiles='$(RepositoryLocation)$(ProductionManager)\target\$(ProductionManagerOutput)'           DestinationFolder='$(RepositoryLocation)$(ProductionManagerSetup)' /&gt;      &lt;!-- copy all libraries to the setup location --&gt;     &lt;Copy        SourceFiles='@(ProductionManagerFiles)'       DestinationFiles="@(ProductionManagerFiles -&gt; '$(RepositoryLocation)$(ProductionManagerSetup)\lib\%(RecursiveDir)%(Filename)%(Extension)')" /&gt;      &lt;!-- update jar and outfile elements of launch4jconfig--&gt;     &lt;MSBuild.ExtensionPack.Xml.XmlFile TaskAction="UpdateElement" File="$(RepositoryLocation)$(Launch4jConfigPath)" XPath="/launch4jConfig/jar" InnerText="$(RepositoryLocation)$(ProductionManagerSetup)$(ProductionManagerOutput)"/&gt;     &lt;MSBuild.ExtensionPack.Xml.XmlFile TaskAction="UpdateElement" File="$(RepositoryLocation)$(Launch4jConfigPath)" XPath="/launch4jConfig/outfile" InnerText="$(RepositoryLocation)$(ProductionManagerSetup)$(ProductionManagerExe)"/&gt;      &lt;!-- execute launch4j and create .exe file--&gt;     &lt;!--&lt;Exec Command='"$(Launch4j)launch4jc.exe" $(RepositoryLocation)$(Launch4jConfigPath)'           ContinueOnError='false'           WorkingDirectory='$(RepositoryLocation)$(ProductionManagerSetup)' /&gt;--&gt;   &lt;/Target&gt; </code></pre>  <p>It works good and it really updates the selected element but it changes the xml file completely. E.g. Config.xml -> before parsing</p>  <pre><code>&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;config&gt;     &lt;headerType&gt;gui&lt;/headerType&gt;     &lt;jar&gt;...&lt;/jar&gt;     &lt;outfile&gt;...&lt;/outfile&gt;     ...     &lt;manifest&gt;&lt;/manifest&gt;      &lt;icon&gt;&lt;/icon&gt;     ... &lt;/config&gt; </code></pre>  <p>Config.xml -> after parsing</p>  <pre><code>&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;config&gt;     &lt;headerType&gt;gui&lt;/headerType&gt;     &lt;jar&gt;...&lt;/jar&gt;     &lt;outfile&gt;...&lt;/outfile&gt;     ...     &lt;manifest&gt;     &lt;/manifest&gt;      &lt;icon&gt;     &lt;/icon&gt;     ... &lt;/config&gt; </code></pre>  <p>As you can see open and close tags are not on the same line after parsing and I causes an exception</p>  <p><code>launch4j: Manifest doesn't exist.</code> and by that I am not able to create .exe file</p>  <p>My question, would it be somehow possible to update only choosen elements and the rest of it leave like in the original file?</p>  <p>Is there any other solution or workaround for this?</p>  <p>Thanx in advance</p>