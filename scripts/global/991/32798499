<pre><code>(define (sort list length loop1 loop2 temp) (cond ((&gt;= loop1 length)         (list))      ((&lt; loop1 length)         (cond ((&gt;= loop2 length)                 (set! loop1 (+ loop1 1))                 (set! loop2 (+ loop1 1)))             ((&lt; loop2 length)                 (cond ((&gt; (list-ref list loop1) (list-ref list loop2)))                     (set-car! temp (list-ref list loop1))                     (list-set! list loop1 (list-ref list loop2))                     (list-set! list loop2 temp)                     (set-car! temp '())                 )                 (set! loop2 (+ loop2 1))             )         )         (sort list length loop1 loop2 temp)) ) </code></pre>  <p>)</p>  <p>Hello, this is a scheme recursive function of a tail recursive function. There seems to be a problem with the cond part because it starts to get stuck in a loop. There's probably a syntax error cause the line of codes seemed to work individually when I tried it in the terminal. </p>