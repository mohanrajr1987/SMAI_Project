<p>I have defined Church numeral zero and some other standard functions on church numerals according to Wikipedia definitions as following:</p>  <pre><code>(define n0 (λ (f x) x))  (define newtrue   (λ(m n) m))  (define newfalse   (λ(m n) n))  (define iszero   (λ(m) (m (λ(x) newfalse) newtrue)))  (define ifthenelse   (λ(a b c) (a b c))) </code></pre>  <p>Using these, I write a recursion loop as:</p>  <pre><code>(((λ(r) (λ(n) (ifthenelse (iszero n) n ((r r) n))))    (λ(r) (λ(n) (ifthenelse (iszero n) n ((r r) n))))) n0) </code></pre>  <p>Now for argument <code>n0</code> as above, this should return <code>n0</code>, without going into recursion. But it doesn't. Why?</p>  <p>Note 1: This recursion loop works perfectly fine with ordinary numerals and ordinary functions:</p>  <pre><code>(((λ(r) (λ(n) (if (= 0 n) n ((r r) n))))    (λ(r) (λ(n) (if (= 0 n) n ((r r) n))))) 0) </code></pre>  <p>This returns <code>0</code> as it should.</p>  <p>Note 2: Functions <code>ifthenelse</code>, <code>iszero</code>, <code>newtrue</code>, <code>newfalse</code> also work fine on their own.</p>