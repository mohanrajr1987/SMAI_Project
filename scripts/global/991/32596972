<p>I just wanted to know, can i create a function in racket which can eliminate the last occurrence of an element in a list, for example,</p>  <pre><code>&gt;(last-without   '(a b  a  (c e) d)    'e)  =  (a b a (c) d) &gt;(last-without   '(p q  p (r p) q e p r)   'p) = (p q  p (r p) q e r) </code></pre>  <p>Also can this be done by defining a membership testing for nested lists by generalizing built-in member that can be used to set up <em>last-without</em> recursive calls, without using redundant reverses. </p>