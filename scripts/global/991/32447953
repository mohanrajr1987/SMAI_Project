<pre><code>1. (define (rev1 ls) (foldr g '() (map f ls)))  2. (define (rev2 ls) (foldl g '() (map f ls)))  </code></pre>  <p>i need to define f and g such that both rev1 and rev2 produce the reverse of the given list ls where other definition are as follows </p>  <pre><code>(define (foldl op z ls)     (if (null? ls)         z         (foldl op (op z (car ls)) (cdr ls))))   (define (snoc x y) (cons y x))  (define (foldr op z ls)      (if (null? ls)         z         (op (car ls) (foldr op z (cdr ls))))) </code></pre>  <p>I am not sure how to define f and g in such way both 1 and 2 produce the reverse of list</p>