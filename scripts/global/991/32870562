<p>I have trouble with coming up the running time of a function which calls other functions. For example, here is a function that convert the binary tree to a list:</p>  <pre><code>(define (tree-&gt;list-1 tree)   (if (null? tree)   ’()   (append (tree-&gt;list-1 (left-branch tree))           (cons (entry tree)           (tree-&gt;list-1 (right-branch tree)))))) </code></pre>  <p>The explanation is T(n) = 2*T(n/2) + O(n/2) because procedure append takes linear time.  Solving above equation, we get T(n) = O(n * log n).</p>  <p>However, the cons is also a procedure that combines two element. In this case it goes though all the entry node, why don't we add another O(n) in the solution?</p>  <p>Thank you for any help.</p>