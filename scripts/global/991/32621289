<p>My question is how can i print the elements of a list two times, the code i have tried is given below</p>  <pre><code>(define duplicate-list (lambda (mylist n) (cond ((null? mylist) '())        ((&lt; n 2) (cons (car mylist)                      (duplicate-list mylist (+ n 1))))       (else         (duplicate-list (cdr mylist) 0)))))  (define duplicate  (lambda (mylist) (duplicate-list mylist 0))) </code></pre>  <p>The problem in this code is that, it works fine only when i give it a list as input, this fails to work when i give it an input of a nested list.</p>  <pre><code>&gt;(duplicate '(a 1 b 2 c 3 r x)) -&gt;  a a 1 1 b b 2 2 c c 3 3 r r x x &gt;(duplicate '( (a 1) b ((c)) 2)) -&gt;((a 1) (a 1) b b ((c)) ((c)) 2 2) </code></pre>  <p>Whereas, the expected outcome needed should be</p>  <pre><code>(duplicate '( (a 1) b ((c)) 2 z 3) = ( (a a 1 1) b b ((c c)) 2 2 z z 3 3)  </code></pre>