<p>My recursive version looks like</p>  <pre><code>(struct node (val left right) #:transparent)  (define t3 (node 3 '() '())) (define t4 (node 4 '() '())) (define t5 (node 5 '() '())) (define t2 (node 2 t4 t5)) (define t1 (node 1 t2 t3)) ; ;     ----- 1 ----- ;    |             | ; -- 2 --          3 ;|       | ;4       5  (define (countv tree)   (if (null? tree)       0       (+ (node-val tree)          (countv (node-left tree))          (countv (node-right tree)))))  (countv t1) </code></pre>  <p>And CPSed version</p>  <pre><code>(define (countk tree k)   (if (null? tree)       (k 0)       (countk (node-left tree)               (λ (lval)                 (countk (node-right tree)                         (λ (rval)                           (+ (node-val tree) lval rval)))))))  (countk t1 (λ (x) (node-val x))) </code></pre>  <p>The result of <code>countv</code> was <code>15</code> as expected, while <code>countk</code> got <code>4</code>.</p>