<p>I am trying to compress a string by turning it in to letters and numbers. Example:</p>  <p><code>INPUT: AAAAbbWWWW</code></p>  <p><code>OUTPUT: A4-b2-W4</code></p>  <p>Here is the problem I am running in to:</p>  <p>When I run it with the query "aaaaaaa", I get "a7".</p>  <p>When I run it with the query "aaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbb", I get "a12-b2-b2-b2-b2-b2-b2-b2-b2-b2-b2-b2-b2-b2-b2".</p>  <p>My code is</p>  <pre><code>List&lt;Character&gt; chars = new ArrayList&lt;Character&gt;();     for (int i = 0; i &lt; toCompress.length(); i++) {         chars.add(toCompress.charAt(i));     }     List&lt;String&gt; bits = new ArrayList&lt;String&gt;();     for (int i = 0; i &lt; chars.size(); i++) {         char toMatch = chars.get(i);         int matching = 1;         for (int dontuse = i; dontuse &lt; chars.size(); dontuse++) {             int x = dontuse + 1;             if (x &gt;= chars.size()) {                 continue;             }             if (chars.get(x) == toMatch &amp;&amp; (x - 1 == matching)) {                 matching++;             }         }         if (!bits.contains(toMatch + "" + matching)) {             bits.add(toMatch + "" + (matching + 1));             i = i + matching;         }     }     String compressed = "";     for (int y = 0; y &lt; bits.size(); y++) {         if (y == (bits.size() - 1)) {             compressed += bits.get(y);         } else {             compressed += bits.get(y) + "-";         }     }     return compressed; </code></pre>  <p>Can anyone tell me how to stop it from only counting to two in every segment but the first?</p>