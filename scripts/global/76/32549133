<p>I am working with a simple compression algorithm which works as follows:</p>  <pre><code>for each 32-byte block of input:     if a single byte appears many (&gt; 5?) times:         remove every instance of the byte from the block         add a header containing the byte &amp; 32 bits describing where it was removed from </code></pre>  <p>For example, this algorithm might compress:</p>  <pre><code>00 01 00 02 00 03 00 04 00 05 00 06 00 07 00 08 00 09 00 0a 00 0b 00 0c 00 0d 00 0e 00 0f 00 10 </code></pre>  <p>into:</p>  <pre><code>00 aa aa aa aa 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f 10 </code></pre>  <p>Here the <code>aa</code> bytes, with alternating set and reset bits, indicate that the value <code>00</code> should be alternated with values read from the compressed data stream.</p>  <p>Has anyone seen this algorithm before? Does it have a well-known name?</p>