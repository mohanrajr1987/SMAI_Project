<p>I have some functions that take a lowercase letter of the English alphabet as input and return True or False.</p>  <p>There are 2^26 such possible functions.  Below are some functions and their 26-bit representations:</p>  <p>00000000000000000000000001 (z only) 01010101010101010101010101 (even letters only) 10000000000000000000000000 (a only) 10001000100000100000100000 (vowels only) 10000001000000000000000100 (a, h, x only)</p>  <p>What I would like to do is score these functions for perceived randomness, i.e. how arbitrary do they seem to a human?  Does there seem to be a pattern, or did I just pick some letters randomly?</p>  <p>I am thinking the score might be based on quantifying the minimum information you would need to describe the pattern to someone else, or the size of the pattern string when compressed.</p>  <p>Is there an algorithm that would be suited to this?  And can it incorporate extra information a human might also know in advance, e.g. "aeiou" belong to the "vowels" class, "gjpqy" belong to the "low-hanging" class, "bdfhijklt" belong to the "tall" class?</p>