<p>I've just completed a lab for college, the lab asked me to create an interface <code>IHasVolume</code> with a <code>Volume</code> method and then to create a class, <code>Sphere</code>, that implemented the interface and by default it's method. I then had to create a <code>Test</code> and call the method in my class polymorphically via a reference to the interface. </p>  <p>snippet of my code:</p>  <pre><code>IHasVolume i = new Sphere { Radius = 2 }; </code></pre>  <p>I also had to make a collection of Spheres and call the various methods </p>  <pre><code>IHasVolume[] collection = { new Sphere(4), new Sphere(6), new Sphere(9), new Sphere(10), };          foreach(IHasVolume s in collection)         {             Console.WriteLine("Volume: " + s.Volume());             Console.WriteLine("Radius: " + s.ToString());         }  </code></pre>  <p>Now I'm not sure I was actully been asked to make the array of type <code>IHasVolume</code>, But I did and it worked, I'm confused as to why it worked though, Sphere is not a subclass of <code>IHasVolume</code>, or is it?</p>  <p>Could someone explain this to me please?</p>