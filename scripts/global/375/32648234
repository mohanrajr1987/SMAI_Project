<p><strong>Disclaimer:</strong> This description contains a lot of Qt specifics. They are not necessary to answer the question, I just wanted to give you the background.</p>  <p>I need to react on the <code>focusInEvent</code> of a <code>QTextEdit</code>. Unfortunately this is not available as a signal, that's why I need to subclass <code>QTextEdit</code>. Since this is the only change I need, I would like to use an anonymous subclass</p>  <p>Like this:</p>  <pre><code>myTextEdit =new QTextEdit(){             void focusInEvent(){      //code here      } }; </code></pre>  <p>This is the code I would write in Java, it doesn't compile in c++. All following code is within the constructor of a custom <code>QWidget</code>. The <code>QTextEdit</code> is contained in this widget and should be initialized in its constructor.</p>  <p>Strangely this code compiles:</p>  <pre><code>class MyTextEdit:protected QTextEdit{     void focusInEvent(); }; auto myTextEdit=new MyTextEdit(); </code></pre>  <p>but is useless, since I can't assign an instance of <code>myTextEdit*</code> to a pointer to <code>QTextEdit</code>. Somehow polymorphism fails. This code doesn't compile:</p>  <pre><code>class MyTextEdit:protected QTextEdit{         void focusInEvent();     }; QTextEdit* myTextEdit=new MyTextEdit(); </code></pre>  <p>The compiler error is:</p>  <blockquote>   <p>/home/lars/ProgrammierPraktikum/moleculator/implementation/Moleculator/gui_elements/editor.cpp:40:   error: 'QTextEdit' is an inaccessible base of   'Editor::Editor(std::shared_ptr)::MyTextEdit'        QTextEdit* myTextEdit=new MyTextEdit();</p> </blockquote>  <p><strong>Actual question:</strong></p>  <p>How do I create an anonymous subclass that is compatible to pointers of its superclass ?                              </p>