<p>I know how virtual function is used to achieve RT polymorphism .By using base class reference and storing derived class object in it.And then calling the overridden method using this reference. But Is this also true?</p>  <pre><code>class Base {  public:  void show();  {   cout &lt;&lt; "Base class\t";  } }; class Derived:public Base {  public:  void show()  {   cout &lt;&lt; "Derived Class";  } }  int main() {  Base b;       //Base class object  Derived d;     //Derived class object  d.show();   // is this run time polymorphism?? } </code></pre>  <p>//Output : Derived class</p>