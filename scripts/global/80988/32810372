<p>I just install grunt today, so far it is working and I really like it. I am using XSLT on my site, and I need to insert generated css/js with hash filename there. </p>  <p>I want to use <a href="https://github.com/tnory56/grunt-xslt" rel="nofollow">https://github.com/tnory56/grunt-xslt</a> but, I don't know the generated filenames - they are not static. How I can get the filename by selector and use it later in config.</p>  <p>Thanks for any hint, please ignore injector, I can not use it in XSLT</p>  <p>My config as follows:</p>  <pre><code>module.exports = function (grunt) {     grunt.initConfig({         pkg: grunt.file.readJSON('package.json'),         clean: [                     'libs/js/combined/combined.min.v-*.js',                      'combined.min.v-*.css'                       ],         concat: {             css: {                 src: [                     'style.css'                 ],                 dest: 'combined.css'             },             js: {                 src: [                     'libs/js/common.js'                 ],                 dest: 'libs/js/temp/combined.js'             }         },         cssmin: {             css: {                 src: 'combined.css',                 dest: 'combined.min.css'             }         },         uglify: {             js: {                 files: {                     'libs/js/temp/combined.min.js': ['libs/js/temp/combined.js']                 }             }         },         hashify: {         simple: {           options: {             basedir: '',              copy: true,              hashmap: 'hashify-hashmap.json'            },           files: [{             src: 'combined.min.css',              dest: 'combined.min.v-{{hash}}.css',            },           {             src: 'libs/js/temp/combined.min.js',             dest: 'libs/js/combined/combined.min.v-{{hash}}.js'           }]             }       },       injector: {             options: {             template : 'libs/xsl/main_domain/xhtml.xsl',             destFile : 'libs/xsl/main_domain/xhtml-generated.xsl'          },               local_dependencies: {           files: {                           'libs/xsl/main_domain/xhtml.xsl': ['libs/js/combined/combined.min.v-*.js', 'combined.min.v-*.css'],           }         }        },     });     grunt.loadNpmTasks('grunt-contrib-clean');     grunt.loadNpmTasks('grunt-contrib-concat');     grunt.loadNpmTasks('grunt-contrib-uglify');     grunt.loadNpmTasks('grunt-contrib-watch');     grunt.loadNpmTasks('grunt-contrib-cssmin');     grunt.loadNpmTasks('grunt-hashify');     grunt.loadNpmTasks('grunt-injector');        grunt.registerTask('default', ['clean', 'concat:css', 'cssmin:css', 'concat:js', 'uglify:js', 'hashify:simple', 'injector']); }; </code></pre>  <p>Update: it seems grunt-xslt is not working even with their example, so I need another solution (template system compatible with XML)</p>  <p>Next what I tried (not XML compatible, but I think there can be workaround for this) is grunt-template, but as I though {{hash}} is not evaluated.</p>  <pre><code>'template': {     'process-html-template': {         'options': {             'data': {                 'js_file': 'libs/js/combined/combined.min.v-{{hash}}.js',             }         },         'files': {             'tmp/xhtml.xsl': ['libs/xsl/main_domain/xhtml.xsl']         }     } } </code></pre>