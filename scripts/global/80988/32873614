<p>I have a grunt task with requirejs and am running the optimizer.</p>  <p>I load a lot of external files which are not always needed at run time, usually I only need a handful of core files. Then based on user decisions I load certain files during run time.</p>  <p>Ex:  </p>  <pre><code>define(["backbone",     'text!data/filePaths.json'],     function(Backbone,   filePaths) {         'use strict';          return Backbone.Model.extend({              initialize: function(){                 // parse the file paths, there could be a hundred here                 this.filePaths = JSON.parse(filePaths);             },              // dynamically add a file via this function call             addFile: function(id){                 var self = this;                  return new Promise(function(resolve, reject){                           // load files dynamically based on the id passed in                     require([self.filePaths[id].path], function(View){                         resolve(new View());                     });                   });             }          });      }  ); </code></pre>  <p>the file paths json might look like this:</p>  <pre><code>"ONE": {     "name": "BlueBox",     "path": "views/box/Blue" }, "TWO": {     "name": "RedBox",     "path": "views/box/Red" }, etc... </code></pre>  <p>The issue is that this does not work with the optimizer for me.</p>  <p>When I run my app with the optimized file I get:</p>  <pre><code>Uncaught Error: undefined missing views/box/Red </code></pre>  <p><strong>Update:</strong></p>  <pre><code>grunt.initConfig({     pkg: grunt.file.readJSON('package.json'),     requirejs: {         desktopJS: {             options: {                 baseUrl: "public/js/app",                 wrap: true,                 // Cannot use almond since it does not currently appear to support requireJS's config-map                 name: "../libs/almond",                 preserveLicenseComments: false,                 optimize: "uglify2",                 uglify2: {                     // mangle: false,                     // no_mangle: true,                     // stats: true,                     // "mangle-props": false,                     "max-line-len": 1000,                     max_line_length: 1000                 },                 uglify: {                     mangle: false,                     no_mangle: true,                     stats: true,                     "mangle-props": false,                     max_line_length: 1000,                     beautify: true                 },                 mainConfigFile: "public/js/app/config/config.js",                 include: ["init/DesktopInit"],                 out: "public/js/app/init/DesktopInit.min.js"             }         },         desktopCSS: {             options: {                 optimizeCss: "standard",                 cssIn: "./public/css/desktop.css",                 out: "./public/css/desktop.min.css"             }         }     }, </code></pre>  <p>Note: if I use the unoptimized version, everything works just fine.</p>