<p>The server PC is connected to Active Directory Network. The domain name is <code>TEST.NET</code>. I log in to the client machine as <code>TEST.NET\user</code>, go to my server's app which has <code>Windows Authentication</code> enabled <strong>only</strong>.</p>  <p>In my code I do the following:</p>  <pre><code>    Request.LogonUserIdentity.Name                        // &lt;-- The value is TEST\user     ActiveDirectory.Domain.GetComputerDomain().ToString() // &lt;-- The value is TEST.NET </code></pre>  <p>I was expecting to get on the call <code>Request.LogonUserIdentity.Name</code> <code>TEST.NET\user</code>. I am trying to match the values to make sure the domain is correct. Why am I getting different domain names here? How can I get full domain name from <code>Request.LogonUserIdentity</code>?</p>  <p><strong>Update</strong></p>  <p>Meanwhile, I was researching and tried the following ways to retrieve info about logged in user:</p>  <pre><code>    Request.ServerVariables["LOGON_USER"];               // &lt;-- The value is TEST\user     Request.ServerVariables["REMOTE_USER"];              // &lt;-- The value is TEST\user     Request.ServerVariables['AUTH_USER']                 // &lt;-- The value is TEST\user     Request.ServerVariables["UNMAPPED_REMOTE_USER"];     // &lt;-- The value is TEST\user     WindowsIdentity.GetCurrent().Name;                   // &lt;-- The value is NT Authority\NETWORK SERVICE     HttpContext.Current.User.Identity.Name;              // &lt;-- The value is TEST\user      HttpContext.Current.Request.LogonUserIdentity.Name;  // &lt;-- The value is TEST\user </code></pre>  <p>None of these would retrieve TEST.NET as domain name.</p>