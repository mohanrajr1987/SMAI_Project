<p>I'm somewhat confused regarding this new architecture having just upgraded to 10 and started looking for the first time at "Universal Windows Apps." I was kind of interested in generally focusing my development of my class library where it would be compatible with standards for the Windows App Store as it would be nice to make my code as portable as possible whether or not I intend to use it for "Windows Apps."  I see no real sense in writing unportable code if I don't have to.</p>  <p>I'm confused about this section in the "App Certification Requirements" by Microsoft:</p>  <p><em>3.12.3 <strong>If your app contains Windows Runtime components,</strong> they must conform to the Windows Runtime type system</em></p>  <p><em>In particular, all Windows Runtime types:</em></p>  <p>What is a "Windows Runtime component"?  And what do they mean "if your app contains them?"</p>  <p>...</p>  <p><strong><em>Must be sealed unless the type is a runtime class marked as composable.</em></strong></p>  <p><strong><em>Must compose an unsealed system class, if the type is a composable runtime class.</em></strong></p>  <p>What do these two things mean?  What is a "composable runtime class?" Does this mean I can't use polymorphism?</p>  <p>... - <a href="https://msdn.microsoft.com/en-us/library/windows/apps/Hh694083.aspx#acr_changelog" rel="nofollow">SOURCE</a></p>  <p>Sorry if I sound stupid here, I just am unfamiliar with this stuff.</p>