<p>I am coding a FMX Metropolis UI application and trying to assign two field values of type string to the Item.Title member of TListBox by LiveBindings technology (using expression engine).</p>  <p>When I use a TBindList in the following way:</p>  <pre><code>object BindList1: TBindList   Category = 'Lists'   ControlComponent = ListBox1   SourceComponent = BindSourceDB1   FormatExpressions = &lt;     item       ControlExpression = 'Text'       SourceExpression =         'FieldByName("name1").Text + " " + Field' +         'ByName("name2").Text'     end&gt;   FormatControlExpressions = &lt;&gt;   ClearControlExpressions = &lt;&gt; end  </code></pre>  <p>It assigns the 'name1 name2' string to the member <code>Text</code> but I fail to set the <code>ListItemStyle := MetropolisUI</code> as there is no such property in TBindList class</p>  <p>If I use <code>TLinkFillControlToField</code></p>  <pre><code>object LinkFillControlToField2: TLinkFillControlToField       Category = 'Quick Bindings'       Control = ListBox1       Track = True       FillDataSource = BindSourceDB1       FillDisplayFieldName = 'name1'       AutoFill = True       BufferCount = -1       AutoBufferCount = False       FillExpressions = &lt;&gt;       FillHeaderExpressions = &lt;&gt;       FillBreakGroups = &lt;&gt;     end </code></pre>  <p>it lets me to assign <code>ListItemStyle</code> to <code>MetropolisUI</code>, but there is only one field that I can access with <code>FillDisplayFieldName</code> property and there is no <code>SourceExpression</code> field to assign <code>'FieldByName("name1").Text + " " + FieldByName("name2").Text'</code> to it.</p>  <p>I tried to guess context of <code>Item.Text</code> member of <code>TListBox</code> from <code>TBindList</code> but I did not manage to. I studied Delphi samples but there is no Metropolis TListBox and it seems to act in a different way than the common one. Does anybody have any ideas how to find the solution for this issue?</p>