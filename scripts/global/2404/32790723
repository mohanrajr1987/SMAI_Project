<p>I have a APT processor which generates a file to instantiate the first Type parameter of class and inject it into the file. (Viewmodels) However if the second type parameter of the class is a generated file then my processor never finds this annotated class.</p>  <p>Example:</p>  <pre><code>@ContainsViewModel public class MyActivity extends ViewModelActivity&lt;MyViewModel, GeneratedClass&gt;{  //The GeneratedClass in this case is a SubClass of ViewDataBinding for the Android databinding library         @InjectHere public void injectMethod(MyViewModel injected){       } } </code></pre>  <p>In the above example, the GeneratedClass will cause this class to never show up in </p>  <pre><code>public boolean process(Set&lt;? extends TypeElement&gt; annotations, RoundEnvironment roundEnv) {         roundEnv.getElementsAnnotatedWith(ViewModelView.class)// does not have MyActivity } </code></pre>  <p>This seems to be because the GeneratedClass never gets generated until the last pass of my process. I can tell by doing, </p>  <pre><code>roundEnv.getRootElements() </code></pre>  <p>However, when I finally see the GeneratedClass show up, the roundEnv refuses to provide any elements with my ContainsViewModel annotation. Any ideas as to go about dealing with this? Thanks.</p>