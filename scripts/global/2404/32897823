<p>I am trying to use the <a href="https://code.google.com/p/reflections/" rel="nofollow">Reflections API</a> but am finding it hard to get back the classes using a custom annotation.</p>  <p>I pass in a list of URLs from a directory; stepping through the code it appears to find the class that has the annotation.</p>  <pre><code>URLClassLoader urlClassLoader = new URLClassLoader(plugins.toArray(new URL[plugins.size()]), null);              Reflections reflections = new Reflections(new ConfigurationBuilder()                     .setUrls(ClasspathHelper.forClassLoader(urlClassLoader))                     .setScanners(                             new SubTypesScanner(false),                             new TypeAnnotationsScanner())); </code></pre>  <p>But the final piece of code where I need the class that contains the annotation always returns and empty set. Am I doing anything obviously wrong?</p>  <pre><code>classes = reflections.getTypesAnnotatedWith(Column.class, true); </code></pre>  <p>Here is the annotation class;</p>  <pre><code>@Target(ElementType.TYPE) @Retention(RetentionPolicy.RUNTIME) public @interface Column {     boolean load() default false;     Class loaderClass();     Class criteriaClass();     String indicator();     String columnName(); } </code></pre>  <p>It seems the point of failure of me is actually;</p>  <pre><code>return Sets.newHashSet(concat(forNames(annotated, loaders()), forNames(classes, loaders()))); </code></pre>  <p>The loaders method returns null. Both the annotated and classes Iterables are filled out.</p>