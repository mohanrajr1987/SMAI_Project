<p>Here is the information about my development environment:</p>  <p>Microsoft Visual Studio Community 2015</p>  <p>.NET Framework 4.6</p>  <p>ASP.NET MVC   assembly System.Web.Mvc  Version=5.2.3.0</p>  <p>MongoDB.Driver 2.0.1.27</p>  <p>Mongodb 3.0.6</p>  <p>Within my C# application, I have the following code that retrieves a MongoDB database reference:</p>  <pre><code> public class MongoDBConnectionManager  {       public IMongoDatabase getMongoDB() {              var client = new MongoClient("mongodb://localhost:27017");             IMongoDatabase iMgDb = client.GetDatabase("foo");             IMongoCollection&lt;BsonDocument&gt; UserDetails =              iMgDb.GetCollection&lt;BsonDocument&gt;("Users");             return iMgDb;      } // end of public IMongoDatabase getMongoDB()    } // end of public class MongoDBConnectionManager </code></pre>  <p>Here is the POCO class that represent a User Business Entity:</p>  <pre><code> using MongoDB.Bson.Serialization.Attributes;   public class UserModel  {      public object _id { get; set; } //MongoDb uses this field as identity.     [BsonId]    public int ID { get; set; }     [Required]    [BsonRepresentation(MongoDB.Bson.BsonType.String)]    public string UserName { get; set; }     [Required]    //[DataType(DataType.Password)]    [BsonRepresentation(MongoDB.Bson.BsonType.String)]    public string Password { get; set; }     [Required]    // [DataType(DataType.EmailAddress)]    [BsonRepresentation(MongoDB.Bson.BsonType.String)]    public string Email { get; set; }      [BsonRepresentation(MongoDB.Bson.BsonType.String)]    public string PhoneNo { get; set; }     [BsonRepresentation(MongoDB.Bson.BsonType.String)]    public string Address { get; set; }   } </code></pre>  <p>Here is the DAO C# class that uses the Mongo DB Connection Manager Class:</p>  <pre><code>   public class DAO    {         public int insertNewUser(UserModel um)        {          MongoDBConnectionManager mgoDBCntMng = new MongoDBConnectionManager();          IMongoDatabase database = mgoDBCntMng.getMongoDB();          IMongoCollection &lt;BsonDocument&gt; UserDetails = database.GetCollection&lt;BsonDocument&gt;("Users");          UserDetails.InsertOneAsync(um);           return 0;       }   } </code></pre>  <p>The problem that I'm facing is with the following line of code in the DAO class:</p>  <pre><code>  UserDetails.InsertOneAsync(um); </code></pre>  <p>Visual Studio Community 2015 displays the following error:</p>  <pre><code>  cannot convert from 'UserModel' to MongoDB.Bson.BsonDocument </code></pre>  <p>I believe the error has something to do with somehow translating the  UserModel POCO into MongoDB's Bson format.  Therefore, in my UserModel POCO, I used the use space called MongoDB.Bson.Serialization.Attributes because I thought we needed to use MongoDB Annotations.  However, it still failed to solve the problem.</p>  <p>Could someone please tell me how to correct the problem?</p>