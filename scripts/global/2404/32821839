<p>I am using Spring Boot to create a micro service, and all is well, except for a couple of minor annoyances.</p>  <p>Autowiring in my test classes, I am getting the following warnings on @Autowired annotations:</p>  <blockquote>   <p>Autowired members must be defined in the valid spring   bean(@Component/@Service,etc.) Checks that auto wired members are   defined in valid Spring bean (@Component|@Service|...).</p> </blockquote>  <p>this is using the following test class</p>  <pre><code>@RunWith(SpringJUnit4ClassRunner.class) @SpringApplicationConfiguration(classes = Application.class) public class MyRecordTest {      public static final String NUMBER = "ABC/123456";      @Autowired     private MyFactory factory;      @Autowired     private Marshaller marshaller;      ... } </code></pre>  <p>where my Application configuration class is defined as</p>  <pre><code>@SpringBootApplication public class Application {     public static void main(String[] args) {         SpringApplication.run(Application.class, args);     }      @Bean     public Marshaller getMarshaller() {         Jaxb2Marshaller marshaller = new Jaxb2Marshaller();         marshaller.setPackagesToScan("com.my.classes");         return marshaller;     } } </code></pre>  <p>and MyFactory has the @Component annotation:</p>  <pre><code>@Component public class MyFactory {     ... } </code></pre>  <p>How can I resolve this?</p>  <p>Also, standing out like a sore thumb, the only uncovered line in my application is the SpringApplication.run line in the public static void main method:</p>  <pre><code>public static void main(String[] args) {     SpringApplication.run(Application.class, args); } </code></pre>  <p>How can I get this covered or ignored?</p>