<p>I'm following the 22.1. Implementing Custom Injection Provider paragraph</p>  <p><a href="https://jersey.java.net/documentation/latest/user-guide.html#deployment" rel="nofollow">https://jersey.java.net/documentation/latest/user-guide.html#deployment</a></p>  <p>I defined my classes as below:</p>  <pre><code>public class PrincipalConfig extends ResourceConfig {       public PrincipalConfig() {         packages("com.vex.klopotest.secured,com.klopotek.klas.auth.injection");                  register(new MyBinder());     } } </code></pre>  <p>Where MyBinder is :</p>  <pre><code>Public class MyBinder extends AbstractBinder implements Factory&lt;KasPrincipal&gt; {   @Override protected void configure() {      bindFactory(this).to(MyInjectable.class).in(RequestScoped.class);                     bind(KasPersistenceDaoInjectionResolver.class)          .to(new TypeLiteral&lt;InjectionResolver&lt;KasPersistenceDaoAnnot&gt;&gt;(){})          .in(Singleton.class);      }      @Override     public MyInjectable provide() {     // TODO Auto-generated method stub         return new MyInjectable();     }      @Override     public void dispose(MyInjectable instance) {         // TODO Auto-generated method stub      } } </code></pre>  <p>and this is my simple annotation:</p>  <pre><code>@Retention(RetentionPolicy.RUNTIME) @Target(ElementType.FIELD) public @interface MyAnnot {  } </code></pre>  <p>i wanto to use the annotation in my res service:</p>  <pre><code>@Path("modelORA") public class ModelRetrieverORA {     @Context    SecurityContext securityContext;      @Context     private UriInfo uriInfo;      @MyAnnot         private Myinjectable Principal; </code></pre>  <p>in my web.xml i deployed Jersey servlet container (am i wrong) and javax.ws.rs.Application by this configuration code:</p>  <pre><code>&lt;servlet&gt;     &lt;servlet-name&gt;com.my.package.injection.PrincipalConfig&lt;/servlet-name&gt; &lt;/servlet&gt;  &lt;servlet-mapping&gt;     &lt;servlet-name&gt;com.my.package.injection.PrincipalConfig&lt;/servlet-name&gt;     &lt;url-pattern&gt;/rest&lt;/url-pattern&gt; &lt;/servlet-mapping&gt; </code></pre>  <p>Going into debug mode i see that when invoking my rest service the provide method is never called... indeed is always null.</p>  <p>Where am i wrong? I m working on a jboss Wildfly 9.0 and using Jersey 2.21 library</p>