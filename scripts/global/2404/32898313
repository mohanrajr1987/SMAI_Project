<p>Suppose that I have a class, and in this class, I have an instance of some object that implements MyInterface, which is annotated by @MyAnnotation</p>  <p>In my annotation compiler, I get a list of Elements that are annotated by @MyAnnotation</p>  <pre><code>@Override public boolean process(Set&lt;? extends TypeElement&gt; annotations, RoundEnvironment roundEnv) {     Set&lt;? extends Element&gt; elements = roundEnv.getElementsAnnotatedWith(MyAnnotation.class);      for (Element element : elements) {         // How can I check if the class that `element` represents, implements my interface?     }     ... } </code></pre>  <p>I understand that I could have a list of classes that implement that interface, and then check if the class that the element represents is one of those classes, but obviously this solution isn't ideal</p>  <p>Does anyone know if this is possible?</p>