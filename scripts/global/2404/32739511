<p>I am implementing EHcache in my project and i have written a method that will remove all entries from the cache. The method works fine, here's the code snippet:</p>  <pre><code> public void removeEntriesFromCache(String cacheName){     CacheManager.getInstance.getCache(cacheName).removeAll(); } </code></pre>  <p>I am eventually going to expose this method as a rest service so that user could call the service along with cache name that needs to be invalidated. However, i would want to be able to do the same using @CacheEvict. I know i can do this:</p>  <pre><code> @CacheEvict(name ="myCache" , allEntries=true) public void removeEntriesFromCache(){  } </code></pre>  <p>But, this method will remove entries from just one cache , in this case it will remove all cache entries from "myCache". I want to be able to resolve the cache name dynamically at runtime as specified by the user.</p>  <p>Is it possible to achieve something like this:</p>  <pre><code>@CacheEvict(name ="${cacheName}" , allEntries=true) public void removeEntriesFromCache(String cacheName){  } </code></pre>  <p><strong>OR</strong></p>  <pre><code>@CacheEvict(name ="#cacheName" , allEntries=true) public void removeEntriesFromCache(String cacheName){  } </code></pre>  <p>Your suggestions would be welcome.</p>  <p>Thanks</p>