<p>I am using Java's <code>LinkedList</code>, and as far as I know, there is no <code>LinkedList.next(int);</code>, but there is <code>ListIterator.next()</code>, which comes into play via <code>LinkedList.listIterator()</code>. However, as I figured out: using <code>ListIterator</code> to walk over the elements (which takes O(n) time) will fail after you delete all of them (a constant-time operation on the deletion itself, but O(n) to get to the element).</p>  <p>Trying to delete some k &lt;= n elements the straightforward way, which is something like:</p>  <pre><code>if (list.get(++index).equals(elementToRemove)) {     list.remove(index); } </code></pre>  <p>is an O(n^2) operation, as each of the n <code>get()</code>s is O(n).</p>  <p>Is there any way to, in linear time, walk through the <code>LinkedList</code> and delete the elements that should go?</p>