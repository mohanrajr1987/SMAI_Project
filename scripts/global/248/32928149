<p>I'd like to calculate <strong>P<sub>s</sub> <code>mod</code> K</strong> where <strong>P<sub>s</sub></strong> is the total number of unique permutations of elements in a set <strong>S</strong>. The problem is, the set <strong>S</strong> can have repetitions, so <strong>P<sub>s</sub> = n! / (f<sub>1</sub>!f<sub>2</sub>! ... f<sub>n</sub>!)</strong>, where <strong>n</strong> is the number of elements, and denominator the product of factorial of frequencies of each element in <strong>S</strong>.  </p>  <p>The integer <strong>n</strong> can be assumed significantly large, say around <code>10^6</code>, and wouldn't likely fit in a <code>uint64_t</code>. Is it even possible to calculate <strong>P<sub>s</sub> <code>mod</code> K</strong> without resorting to an arbitrary precision library? If yes, are there any fast methods to calculate it?</p>