<p>I got this to work without using underscore, but as an extra challenge I'm trying to convert Roman Numerals to Arabic numbers using underscore.  Below is my attempt.  It works, except for in the case of the "next" number being greater than the "current" one. I'm really not sure why, but when I check for if(next>= num), that if block is not even being executed?</p>  <pre><code>var DIGIT_VALUES = {   I: 1,   V: 5,   X: 10,   L: 50,   C: 100,   D: 500,   M: 1000 };  var translateRomanNumeral = function(roman) {   // if it's not in the digit values object, return null   for (var i = 0; i &lt; roman.length; i++) {      if (!(roman[i] in DIGIT_VALUES)) {       return null;     }    }   //with underscore:  var romanTranslated =  reduce(roman, function(memo, letter, i) {     var prev = DIGIT_VALUES[roman[i - 1]];     var num = DIGIT_VALUES[letter];     var next = DIGIT_VALUES[roman[i + 1]];     if (next === undefined || next &lt;= num) {       return memo + num;     } </code></pre>  <hr>  <p>This is not being executed for some reason:</p>  <pre><code>    if (next &gt;= num) {       var diff = num - prev;       console.log(diff);       return memo + (diff - prev);     }   }, 0);   // grab the first one    //1   // console.log(num); return romanTranslated;   };  console.log(translateRomanNumeral("LXIV")); //returns 66 ---&gt; should return 64 console.log(translateRomanNumeral("CI")); //working --&gt; returns 101 console.log(translateRomanNumeral("MMMMCCL")); // working ---&gt; returns 4250. //works! </code></pre>