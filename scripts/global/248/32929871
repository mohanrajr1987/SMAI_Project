<p>I am trying to put n players having different skill point(ranging from 100-3000) into r teams such that overall skill in each team is as close as possible to every other team.</p>  <p>I first sorted the players in descending order of skill points and top r players were put into each team. Now the team with lowest skill point(iterating and calculating sum) gets the top player remaining.</p>  <p>For eg.</p>  <ul> <li>A 600</li> <li>B 550</li> <li>C 400</li> <li>D 250</li> <li>E 220</li> <li>F 200</li> <li>G 150</li> <li>H 140</li> </ul>  <p>For 2 teams, result will be:</p>  <ul> <li>Team A{600,250,220,150}= 1220</li> <li>Team B{550,400,200,140}= 1290</li> </ul>  <p>In another approach each team gets a player from top and a player from bottom.</p>  <ul> <li>Team A{600,140,400,200}=1340</li> <li>Team B{550,150,250,220}=1170</li> </ul>  <p>So here 1st approach was better, but for different set of data sometimes approach 2 is optimum and sometimes approach 1 is optimum.</p>  <p>Is there any specific algorithm to do this? I tried to read Microsoft's TrueSkill algorithm, but it was way too complex.</p>