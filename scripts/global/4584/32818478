<p>The Problem: I have a view controller, that holds two variables, without which the controller isn't able to work. So, by concept, those variables are mandatory or non-optional. </p>  <p>However, I declared them optional, which results in guard statement in the first lines of nearly every single method. The reason for making them optional is:</p>  <ul> <li>I'm not able to give them reasonable default values, they need to be set from outside during initialization</li> <li>I initialize the controller with <code>storyboard?.instantiateViewControllerWithIdentifier</code> so there is no way (as far as I know) to define my own initializer which takes the necessary values. This would, obviously my favorite solution.</li> <li>I don't want to make them non-optional just by declaration (!), to avoid runtime problems, that could be solved by them compiler</li> </ul>  <p>Variable declaration:</p>  <pre><code>    var dataSource : MyDataSource?     var cellAndHeaderManager: MyCellAndHeaderManager? </code></pre>  <p>Typical method start:</p>  <pre><code>    guard let cellAndHeaderManager = cellAndHeaderManager else {return UICollectionReusableView()}     let header = cellAndHeaderManager.headerForSection(collectionView, indexPath: indexPath)     guard let dataSource = dataSource else {return header} </code></pre>  <p>Initialization:</p>  <pre><code>     if let newController = storyboard?.instantiateViewControllerWithIdentifier("MyViewController") as? MyCollectionViewController {             newController.dataSource = dataSource             newController = cellAndHeaderManager         } </code></pre>  <p>What I'd like to do:</p>  <pre><code>newController = MyCollectionViewController(dataSource, cellAndHeaderManager) </code></pre>  <p>Any ideas?</p>