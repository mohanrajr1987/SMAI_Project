<p>I'm writing a program that counts the number of evens, odds and zeros in a user-defined integer.  Strangely, the compiler won't compile at all. It says "error: variable number might not have been initialized".</p>  <p>What doesn't make sense is, as far as I can tell, this loop will guarantee <code>number</code> ALWAYS is initialized. I know I can easily shut up the compiler by initializing at the declaration. I've always been told though it's usually a bad idea to initialize at declaration to help avoid logic errors. However my biggest scare/confusion in this is I don't know why it doesn't like it. If there is an exception, it will be caught before <code>validInput = true</code> ever happens, won't it? So then when the loop gets to the check, it'll restart since <code>validInput</code> will still be <code>false</code>. This isn't even a warning or anything; it's a hard-stop error. What am I missing or not seeing?</p>  <p>I've read other cases regarding if-checks, and this is different than where it's in a check that may or may not pass. This loop will ALWAYS pass eventually unless the program exits early somehow (in which case it won't reach the for-loop anyway). If this is a duplicate, can someone point me to the directly-related answer that I couldn't find? Thanks!</p>  <pre><code>public static void main( String[] args ) {     long number;     boolean validInput = false;     String numStr;     Scanner input = new Scanner(System.in);      do     {         System.out.print("Please enter an integer:  ");         numStr = input.next();          try {             number = Long.parseLong(numStr);             validInput = true;         } catch (NumberFormatException e) {             System.out.print("That's not an integer. ");         }     } while (!validInput);       // Break each digit up by dividing by powers of 10.     int evens = 0, odds = 0, zeros = 0;     for (long temp = number; temp &gt; 0; temp /= 10)     {         int digit = (int)(temp % 10);          if (digit == 0)         {             zeros++;             System.out.println(digit + " is a zero digit.");         }         else if (digit % 2 == 0)         {             evens++;             System.out.println(digit + " is an even digit.");         }         else         {             odds++;             System.out.println(digit + " is an odd digit.");         }     }      String evenStr = " even " + ((evens == 1) ? "digit" : "digits");     String oddStr = " odd " + ((odds == 1) ? "digit" : "digits");     String zeroStr = (zeros == 1) ? " zero" : " zeros";      System.out.println(number + " has " + evens + evenStr + ", " + odds + oddStr + ", and "             + zeros + zeroStr + "."); } </code></pre>