<p>So every object has the default initializer method, <code>-init</code></p>  <p>If you need your object to be instantiated with properties, you would write something like<br> <code>-initWithProperty1:(Property1*)prop1 andProperty2:(Property2*)prop2</code>  </p>  <p>This would be called like this:<br> <code>[[SomeClass alloc]initWithProperty1:(Property1*)prop1 andProperty2:(Property2*)prop2]</code></p>  <p>I always thought this was called a factory method (is that correct?)</p>  <p>But then I stumbled across this SO question: <a href="http://stackoverflow.com/questions/7046073/how-to-write-an-objective-c-convenience-constructor">How to write an Objective-C convenience constructor</a></p>  <p>Where it looks like a "convenience constructor" is the same thing as a factory method?  But maybe a convenience constructor specifically uses a class method as the initializer?  so it seems like a convenience constructor would look like this:<br> <code>+someClassWithProperty1:(Property1*)prop1 andProperty2:(Property2*)prop2</code> and would be called like:<br> <code>[SomeClass someClassWithProperty1:(Property1*)prop1 andProperty2:(Property2*)prop2];</code></p>  <p>Does anybody know what the terminology should actually be?  Are the two terms, "Factory Method" and "Convenience Constructor" the same thing in this context?</p>