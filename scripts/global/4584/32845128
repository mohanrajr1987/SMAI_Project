<p>This question is about subclassing a class that has a factory method. I can't get the subclass to work properly.</p>  <p>I have a class Car. I want it to return a Car instance <em>only</em> if it is capable of making a trip of a specified distance, given also its fuel consumption and fuel capacity. I made a class (factory) method for this. </p>  <p>It does exactly what I want when I call the factory method from my view controller to instantiate a car (code is shown further down).</p>  <pre><code>@interface Car : NSObject @end  @implementation Car - (instancetype) init    { return [super init]; }  + (Car *) carWithFuelConsumption:(double)miles_per_gallon                         andGallonsInTank:(double)gallons                            forTripLength:(double)miles_to_go  { if (miles_per_gallon * gallons) &gt; miles_to_go) {       Car *goodCar = [[self alloc] init];       return goodCar; } else {        return nil; } </code></pre>  <p>Now I need to have trucks also, for which I need to keep track of their cargo capacity. I made Truck a subclass of Car. </p>  <pre><code>@interface Truck : Car @property (double) cargoCapacityLbs; @end  @implementation Truck - (instancetype) init {     self = [super init];   if (self) {     self.cargoCapacity= 2000.0;   }     return self; } </code></pre>  <p>In my view controller I can instantiate a car just fine:</p>  <pre><code>Car *car1 = [Car carWith... 20 ...5 ... 60]; //5 gallons enough for 60 miles Car *car2 = [Car carWith... 20 ...5 ... 90];  /// car2 is nil, 5 gallons NOT enough for 60 miles at 20 miles per gallon. </code></pre>  <p>But a truck gets me </p>  <p>A) a compiler warning</p>  <pre><code> Truck *t1 = [Car carWith... 20 ...5 ... 60]; //5 gallons enough for 60 miles  **incompatible pointer types assigning to Truck from Car** </code></pre>  <p>Same thing if I change Car to Truck, like this:</p>  <pre><code>Truck *truck1 = [Truck carWith... 20 ...5 ... 60]; //5 gallons enough for 60 miles </code></pre>  <p>B) AND a crash when trying to access truck1.cargoCapacityLbs</p>  <pre><code>cargoCapacityLbs ..unrecognized selector sent to instance &lt;....&gt;** </code></pre>  <p>I think there is something fundamental I am not understanding about subclassing. I've tried calling the factory method directly in the Truck initialization method, no luck.</p>  <p>I am thinking of rewriting the Car class, to not use a factory method, but that seems bad because then the validation can't be done in the Car class, and would have to be done in the view controller. </p>  <p>Any suggestions?</p>