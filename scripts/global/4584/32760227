<p>I am trying to write a console application that would create and populate the authentication database for the web application. It should be the part of the deployment routine. The following code partly works:</p>  <pre><code>using System.Web.Management; using System.Web.Security;  namespace InitAspnetdbAppRolesAndUsers {     class Program     {         static string SQLServerName = @"COMPUTER\SQLINSTANCE";         static string ASPNETdbName = "aspnetdb";          static void Main(string[] args)         {             // Create the aspnetdb database.             SqlServices.Install(SQLServerName, ASPNETdbName, SqlFeatures.All);              // Set the application.             Membership.ApplicationName = "my_app";              const string adminRoleName = "Administrator";             const string adminUserName = "admin";             const string adminPassword = "adminPa$$word1234";              Roles.Enabled = true;              if (!Roles.RoleExists(adminRoleName))                 Roles.CreateRole(adminRoleName);              if (Membership.GetUser(adminUserName) == null)                 Membership.CreateUser(adminUserName, adminPassword);              if (!Roles.IsUserInRole(adminUserName, adminRoleName))                 Roles.AddUserToRole(adminUserName, adminRoleName);         }     } } </code></pre>  <p>The <code>SqlServices.Install(SQLServerName, ASPNETdbName, SqlFeatures.All);</code> is executed and the <code>aspnetdb</code> empty database is created without problems. However, the <code>Roles.Enabled = true;</code> crashes with (not exact English wording, translated)...</p>  <pre><code>Unhandled exception: System.InvalidOperationException: The method can be called only during initialization phase of the application, before it is launched. Declare the method that will be called in the phase using the attribute PreApplicationStartMethodAttribute.    in System.Web.Compilation.BuildManager.ThrowIfPreAppStartNotRunning()    in System.Web.Security.Roles.set_Enabled(Boolean value)    in InitAspnetdbAppRolesAndUsers.Program.Main(String[] args)  in D:\ASP_NET_snippets\InitAspnetdbAppRolesAndUsers\Program.cs:line 23 </code></pre>  <p>Can the <code>PreApplicationStartMethodAttribute</code> be added also for a <strong>console application</strong>? If yes, how can this be done? Is there any other way to populate the <code>asbnetdb</code> database? The goal is to set the names, other properties, etc. that were extracted from some other database</p>