<p>I have two beans (class A and class B) defined in an XML file. When I start them, the DefaultListableBeanFactory creates the instance of class A first, then the instance of class B. Then I copy the classes into a separate package and make some minor modifications. When I start the classes from the new package, the DefaultListableBeanFactory creates the instance of class B first, then the instance of class A. Why did Spring change the initialization order? It doesn't seem to be random (i.e. in the old package always class A is started first, in the new package always class B is started first). I can (and probably should) add a "depends-on" tag to the definition of class B to ensure consistent start order, but I'd like to know why it worked in the old package.</p>