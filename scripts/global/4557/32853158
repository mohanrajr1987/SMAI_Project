<p>In .NET's version of C++, we can declare a class in the following way:</p>  <pre><code>ref class CoolClass {   public:       String^ GetName()       { return name;}        void SetName(String^ n)       {name = n;}    private:       String^ name;  } </code></pre>  <p>When we create a class this way, instances of the class will be created and managed on the managed heap with the clr's garbage collector. </p>  <p>Now, lets say that I created 2 instances of the animal class.</p>  <pre><code>Animal cat; Animal ^dog = gcnew Animal(); </code></pre>  <p>Both of these classes operate exactly the same. Is there any real important difference between creating instances of classes one way or the other? They both SHOULD be managed code right? The first way seems so much easier and prevents me from having to use the "->" operator. </p>