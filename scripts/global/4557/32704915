<p>I am trying to create a native C++ class called <code>MyNativeClass</code> that can be used by non-managed code. The member functions of <code>MyNativeClass</code> are implemented using managed code. In addition, the managed code needs a <code>System::Numerics::BigInteger</code> object, but when I attempt to add a <code>System::Numerics::BigInteger bi_</code> field to <code>MyNativeClass</code>, I get</p>  <blockquote>   <p>error C3265: cannot declare a managed 'bi_' in an unmanaged 'MyNativeClass'</p> </blockquote>  <p>Here is a simplified code listing which demonstrates what I am trying to achieve:</p>  <p><code>mynativeclass.h</code></p>  <pre><code>class MyNativeClass {     //...  public:     MyNativeClass();     //...  private:     System::Numerics::BigInteger bi_;      //... }; </code></pre>  <p><code>mynativeclass.cc</code></p>  <pre><code>MyNativeClass::MyNativeClass()     : bi_(BigInteger::Zero) {     //... } </code></pre>  <p>I am not sure why this is not allowed.</p>  <p>Is there a way to do this?</p>