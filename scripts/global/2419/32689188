<p>this question is based on my <a href="http://stackoverflow.com/questions/30025627/tsql-view-with-cross-apply-and-pivot">Previous Question</a>. I need to extend the query so that I can incorporate two other tables (running on another server instance).</p>  <p>In this <a href="http://sqlfiddle.com/#!6/12c82/4">Fiddle</a> I added those two tables: </p>  <pre><code>CREATE TABLE LookUp  ([docID] varchar(10), [docType] varchar(100), [PartNumber] varchar(100), [internalID] varchar(100)); INSERT INTO LookUp  ([docID],[docType],[PartNumber], [internalID]) VALUES   ('D0305415', 'docTypeSub', 'X0455', null),   ('D0157632', 'docTypeMain', null, 'XY05570-XY05571'),   ('D0181511', 'docTypeMain',null, 'XY05572-XY05573'),   ('D0157633', 'docTypeMain', null, 'XY06380-XY06381'),   ('D0156037', 'docTypeSub', 'X0326', null),   ('D0151874', 'docTypeMain', null, 'XY05345');  CREATE TABLE Links   ([docIDTop] varchar(10), [docIDBottom] varchar(10)); INSERT INTO Links   ([docIDTop],[docIDBottom]) VALUES   ('D0157632', 'D0305415'),   ('D0181511', 'D0305415'),   ('D0157633', 'D0305415'),   ('D0151874', 'D0156037'); </code></pre>  <p>Regarding the output I need to display the new <strong>internalID</strong> column in a <strong>comma-separated column</strong> based on the <strong>PartNumber</strong> column.</p>  <p>This is the query that outputs the correct data:</p>  <pre><code> select c.docType AS c_docTypeSub, c.docID AS C_docID, c.PartNumber AS C_PartNumber ,   b.docIDTop AS B_docIdTop, b.docIDBottom AS B_docIdBottom,  a.*   FROM LookUp a, Links b, LookUp c  WHERE a.docType = 'docTypeMain'   and a.docID = b.docIDTop and b.docIDBottom = c.docID   and c.docType = 'docTypeSub'  ; </code></pre>  <p>My problem is to put those pieces together so that I can get the <strong>InternalID</strong> to show in my old query below:</p>  <pre><code>---------------- -- OLD Query --  ---------------- WITH CTE_no_nums AS ( SELECT  docID,         CASE             WHEN PATINDEX('%[0-9]%',column1) &gt; 0                 THEN SUBSTRING(column1,0,PATINDEX('%[0-9]%',column1))             ELSE column1         END AS cols,         COALESCE(column2,column3) AS vals FROM miscValues WHERE       column2 IS NOT NULL         OR  column3 IS NOT NULL ), CTE_Pivot     AS     (     SELECT docID,partNumber,prio,[length],material     FROM CTE_no_nums     PIVOT     (         MAX(vals) FOR cols IN (partNumber,prio,[length],material)     ) pvt )  SELECT  A.docId + ' # ' + B.vals AS [DocID # Plant],         A.docID,         A.partNumber,         A.prio,         B.vals AS Plant,         A.partNumber + '#' + A.material + '#' + A.[length] AS Identification,         A.[length],         SUBSTRING(CA.colors,0,LEN(CA.colors)) colors --substring removes last comma FROM CTE_Pivot A INNER JOIN CTE_no_nums B     ON      A.docID = B.docID         AND B.cols = 'Plant' CROSS APPLY (   SELECT vals + ','                  FROM CTE_no_nums C                  WHERE   cols = 'Color'                      AND C.docID = A.docID                  FOR XML PATH('')              ) CA(colors)             ; </code></pre>  <p>Hope you can show me how this can be achieved. If something is unclear feel free to ask. And no, I'm not in charge of the data structure :-)</p>  <p>Thank you.</p>