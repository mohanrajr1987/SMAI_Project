<p>I know this has been asked <a href="http://stackoverflow.com/a/13245457/1584140">earlier</a> also, but it seems that I'm unable to apply solutions to my requirement</p>  <p>I need a to apply PIVOT such that this Table(generated from joins):</p>  <pre><code>    Category    |   Tag     |   Title     ----------------------------------     First       |   Tag 1   |   Article 1     Second      |   Tag 2   |   Article 1     Third       |   Tag 4   |   Article 1     First       |   Tag 1   |   Article 2     Second      |   Tag 4   |   Article 2     Third       |   Tag 5   |   Article 2     First       |   Tag 1   |   Article 5     Third       |   Tag 7   |   Article 5     First       |   Tag 8   |   Article 7 </code></pre>  <p>Becomes:</p>  <pre><code>    Title       |   First   |   Second  |   Third     ---------------------------------------------     Article 1   |   Tag 1   |   Tag 2   |   Tag 4     Article 2   |   Tag 1   |   Tag 4   |   Tag 5     Article 5   |   Tag 1   |   NULL    |   Tag 7     Article 7   |   Tag 8   |   NULL    |   NULL     </code></pre>  <p>Here is my Query:</p>  <pre><code>    declare         @cols nvarchar(max),         @stmt nvarchar(max)      select @cols = isnull(@cols + ', ', '') + '[' + T.CategoryTypeTitle + ']' from (select  CategoryTypeTitle from CategoryTypes) as T      Select @stmt = '     select Distinct * from     (         Select           C.CategoryTypeTitle,          A.* from Articles A          Join         ArticleToTags AT on AT.ArticleID = A.ArticleID         Join         Tags T on T.CategoryID = AT.CategoryID         Join         CategoryTypes C on C.CategoryTypeID = T.CategoryTypeID     ) src     PIVOT     (         Count(Title) --**I need Tag Names (i.e. "Tag 1, Tag 2") instead of getting count or max etc**         for [CategoryTypeTitle] in ('+ @cols +')     ) as piv     '     Exec sp_executesql @stmt = @stmt </code></pre>