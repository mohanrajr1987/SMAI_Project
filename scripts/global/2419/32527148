<p>Trying to get an output like the below:</p>  <pre><code>| UserFullName | JAVA   | DOTNET | C      | HTML5  | |--------------|--------|--------|--------|--------| |     Anne San |        |        |        |        | |   John Khruf |      1 |      1 |        |      1 | |    Mary Jane |      1 |        |        |      1 | |  George Mich |        |        |        |        | </code></pre>  <blockquote>   <p>This shows the roles of a person. A person could have 0 or N roles. When a person has a role, I am showing a flag, like '1'.</p> </blockquote>  <hr>  <p>Actually I have 2 blocks of code:</p>  <p><strong>Block #1:</strong> The tables and a simple output which generates more than 1 rows per person.</p>  <p><a href="http://sqlfiddle.com/#!3/845cc/4" rel="nofollow">SQL Fiddle</a></p>  <p><strong>MS SQL Server 2008 Schema Setup</strong>:</p>  <pre><code>CREATE TABLE AvailableRoles  (   id int identity primary key,    CodeID varchar(5),    Description varchar(500),  );  INSERT INTO AvailableRoles (CodeID, Description) VALUES ('1', 'JAVA'), ('2', 'DOTNET'), ('3', 'C'), ('4', 'HTML5');  CREATE TABLE PersonalRoles  (   id int identity primary key,    UserID varchar(100),    RoleID varchar(5),  );  INSERT INTO PersonalRoles (UserID, RoleID) VALUES ('John.Khruf', '1'), ('John.Khruf', '2'), ('Mary.Jane', '1'), ('Mary.Jane', '4'), ('John.Khruf', '4');   CREATE TABLE Users  (   UserID varchar(20),    EmployeeType varchar(1),   EmployeeStatus varchar(1),   UserFullName varchar(500),  );  INSERT INTO Users (UserID, EmployeeType, EmployeeStatus, UserFullName) VALUES ('John.Khruf', 'E', 'A', 'John Khruf'), ('Mary.Jane', 'E', 'A', 'Mary Jane'), ('Anne.San', 'E', 'A', 'Anne San'), ('George.Mich', 'T', 'A', 'George Mich'); </code></pre>  <p><strong>Query 1</strong>:</p>  <pre><code>SELECT   A.UserFullName,   B.RoleID FROM   Users A LEFT JOIN PersonalRoles B ON B.UserID = A.UserID WHERE   A.EmployeeStatus = 'A' ORDER BY   A.EmployeeType ASC,   A.UserFullName ASC </code></pre>  <p><strong>Results:</strong></p>  <pre><code>| UserFullName | RoleID | |--------------|--------| |     Anne San | (null) | |   John Khruf |      1 | |   John Khruf |      2 | |   John Khruf |      4 | |    Mary Jane |      1 | |    Mary Jane |      4 | |  George Mich | (null) | </code></pre>  <hr>  <p><strong>Block #2:</strong> An attempt to convert the rows into columns to be used in the final result</p>  <p><a href="http://sqlfiddle.com/#!3/845cc/4" rel="nofollow">SQL Fiddle</a></p>  <p><strong>MS SQL Server 2008 Schema Setup</strong>:</p>  <pre><code>CREATE TABLE AvailableRoles  (   id int identity primary key,    CodeID varchar(5),    Description varchar(500),  );  INSERT INTO AvailableRoles (CodeID, Description) VALUES ('1', 'JAVA'), ('2', 'DOTNET'), ('3', 'C'), ('4', 'HTML5'); </code></pre>  <p><strong>Query 1</strong>:</p>  <pre><code>SELECT   * FROM (   SELECT CodeID, Description   FROM AvailableRoles ) d PIVOT (   MAX(CodeID)   FOR Description IN (Java, DOTNET, C, HTML5) ) piv </code></pre>  <p><strong>Results:</strong></p>  <pre><code>| Java   | DOTNET | C     | HTML5  | |--------|--------|-------|--------| |      1 |      2 |     3 |      4 | </code></pre>  <hr>  <p>Any help in mixing both blocks to show the top output will be welcome. Thanks.</p>