<p>I am trying to get some file attributes and data from approx 2000 gsheets in a google drive folder and append them into a new gsheet. I am using this to generate a MailChimp list with unique url links for a customized spreadsheet for each company. I googled all day and found some solutions here and a few other places (e.g <a href="http://googlescriptreference.com/category/drive-file-iterator-getcontinuationtoken/" rel="nofollow">http://googlescriptreference.com/category/drive-file-iterator-getcontinuationtoken/</a> and <a href="http://stackoverflow.com/questions/22365681/correct-usage-of-driveapp-continuefileiteratorcontinuationtoken">Correct usage of DriveApp.continueFileIterator(continuationToken)</a>). I tried implementing the code and adjusting it to my needs but I am new to google scripting so it's been trial and error all day. Unsurprisingly I ran into the max execution time problem and sort of figured out how to add the continuation token. Its finally writing data into the new spreadsheet but I've been able to accidentally duplicate the data. </p>  <p>I would be really grateful if anybody could take a look at what I have and suggest what I need to do to make this more robust. Also any advice on how to do this better would be awesome. (I know the getRange is expensive but I couldn't figure out a better way)</p>  <p>Thanks</p>  <p><div class="snippet" data-lang="js" data-hide="false"> <div class="snippet-code"> <pre class="snippet-code-js lang-js prettyprint-override"><code>function listFilesInFolder() {    var userProperties = PropertiesService.getUserProperties();   var continuationToken = userProperties.getProperty('LOG_ALL_FILES_CONTINUATION_TOKEN');   var start = new Date();   var end = new Date();   var maxTime = 1000*60*4.5; // Max safe time, 4.5 mins      if (continuationToken == null) {     // first time execution, get all files from Drive    id = ''               // id of ExportedFiles folder    var folder = DriveApp.getFolderById(id);         // set folder variable    var files = folder.getFiles();    var sheet = SpreadsheetApp.getActiveSheet();     // set open sheet as active and clear any data   sheet.clear();        sheet.appendRow(["Email","Permittee", "PermitteeFN", "PermitteeLN", "PermitteeTitle", "LinkURL"]);  // add headers   } else {     // not the first time, pick up where we left off     var files = DriveApp.continueFileIterator(continuationToken);   }      var sheet = SpreadsheetApp.getActiveSheet();      while (files.hasNext() &amp;&amp; end.getTime() - start.getTime() &lt;= maxTime) {     var file = files.next();      name = file.getName();                                                      // and the unique URL for each file     var sheet2 = SpreadsheetApp.openById(file.getId()).getSheets()[0];       Permittee = sheet2.getRange("C2").getValue();       PermitteeFN = sheet2.getRange("D2").getValue();       PermitteeLN = sheet2.getRange("E2").getValue();       PermitteeTitle = sheet2.getRange("F2").getValue();       LinkURL = file.getUrl();     data = [name, Permittee,PermitteeFN,PermitteeLN,PermitteeTitle,LinkURL];     // combine the variables into the data variable and append to next row in spreadsheet    sheet.appendRow(data);  end = new Date();   }      // Save your place by setting the token in your user properties   if(files.hasNext()){     Browser.msgBox("Timed Out. Run script again");     var continuationToken = files.getContinuationToken();     userProperties.setProperty('LOG_ALL_FILES_CONTINUATION_TOKEN', continuationToken);        } else {     // Delete the token     PropertiesService.getUserProperties().deleteProperty('LOG_ALL_FILES_CONTINUATION_TOKEN');     Browser.msgBox("Completed");   }   };</code></pre> </div> </div> </p>