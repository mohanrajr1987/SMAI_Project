<p>I am trying to compile Json.Net on Visual Studio 2008, targeting .NET 2.0 or .NET 3.5.  With either target, I'm getting similar errors:</p>  <p>Targeting .NET 2.0:</p>  <pre><code>Error   1    The type arguments for method  'Newtonsoft.Json.Utilities.LinqBridge.Enumerable.Select&lt;TSource,TResult&gt; (System.Collections.Generic.IEnumerable&lt;TSource&gt;,  Newtonsoft.Json.Serialization.Func&lt;TSource,TResult&gt;)'  cannot be inferred from the usage. Try specifying the type arguments explicitly. C:\Json70r1\Source\Src\Newtonsoft.Json\Converters\XmlNodeConverter.cs   260 35  Newtonsoft.Json.Net20 </code></pre>  <p>On .NET 3.5 :</p>  <pre><code>Error   1   The type arguments for method  'System.Linq.Enumerable.Select&lt;TSource,TResult&gt; (System.Collections.Generic.IEnumerable&lt;TSource&gt;,  System.Func&lt;TSource,TResult&gt;)' cannot be  inferred from the usage. Try specifying  the type arguments explicitly.       C:\Json70r1\Source\Src\Newtonsoft.Json\Converters\XmlNodeConverter.cs    260 35  Newtonsoft.Json.Net35 </code></pre>  <p>NOTE:  I'm using the existing project files named: Newtonsoft.Json.Net20.sln and Newtonsoft.Json.Net35.sln, respectively</p>  <p>I want to say I read somwhere that this issue has to do with VS 2008 (Json.NET wasn't relevant there, however).</p>  <p>Is it possible to compile Json.NET in VS 2008, or do I need a newer compiler to generate the .dll targeted at 2.0.  </p>  <p>The included .dll for 2.0 works fine for us, but I need to modify some functionality so I need the source.</p>