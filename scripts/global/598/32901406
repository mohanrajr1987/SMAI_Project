<p>I have the following markup representing a <code>bootstrap</code> tab-element:</p>  <pre><code>&lt;div id="someDivID"&gt;      &lt;!-- Nav tabs --&gt;     &lt;ul class="nav nav-tabs" role="tablist"&gt;         &lt;li&gt;&lt;a href="#"&gt;Tab 1&lt;/a&gt;&lt;/li&gt;         &lt;li&gt;&lt;a href="#"&gt;Tab 2&lt;/a&gt;&lt;/li&gt;         &lt;li&gt;&lt;a href="#"&gt;Tab 3&lt;/a&gt;&lt;/li&gt;     &lt;/ul&gt;      &lt;div class="tab-content"&gt;         &lt;div role="tabpanel" class="tab-pane active" id="theTabContent"&gt;         &lt;/div&gt;     &lt;/div&gt; &lt;/div&gt; </code></pre>  <p>I bind the click-event as follows in <code>javascript</code>/<code>jQuery</code></p>  <pre><code>var $theDiv = $("#someDivId"); $theDiv.on("click", "ul li a", handleClickEvent); </code></pre>  <p>Because of the content of the tab is rendered/added dynamically later I'll have e.g. a <code>bootstrap</code> dropdown inside the #theTabContent div: (taken from the docs)</p>  <pre><code>&lt;div class="dropdown"&gt;     &lt;button class="btn btn-default dropdown-toggle" type="button" id="dropdownMenu1" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true"&gt;Dropdown&lt;/button&gt;     &lt;ul class="dropdown-menu" aria-labelledby="dropdownMenu1"&gt;         &lt;li&gt;             &lt;a href="#"&gt;Action&lt;/a&gt;         &lt;/li&gt;         &lt;li&gt;             &lt;a href="#"&gt;Another action&lt;/a&gt;         &lt;/li&gt;         &lt;li&gt;             &lt;a href="#"&gt;Something else here&lt;/a&gt;         &lt;/li&gt;         &lt;li&gt;             &lt;a href="#"&gt;Separated link&lt;/a&gt;         &lt;/li&gt;     &lt;/ul&gt; &lt;/div&gt; </code></pre>  <p>Because of the nested ul>li>a the <code>handleClickEvent</code> function is called when changing the value of the dropdown (which is obviously not intended). How can I get around this behaviour?</p>  <p>And what (if any) would be the difference between</p>  <pre><code>$theDiv.on("click", "ul li a", handleClickEvent); </code></pre>  <p>and</p>  <pre><code>$theDiv.find("ul li a").on("click", handleClickEvent); </code></pre>  <p>?</p>  <p>Obviously the second one (find) will only catch the intented click of the tab-anchor. Sorry to ask. But, I don't get the point here.</p>