<p>I'm designing an EAV database based on MySQL and the question is related to indices where I'm not very strong. </p>  <p>I'd like to speed up join queries and would be very greateful if you could help. </p>  <p>The purpose of the database is to hold a variety of tables from external sources. Each source is a datasource. A datasource may have multiple entities, i.e. tables. Each entity has multiple rows. A row has multiple attributes. </p>  <p>Well, these are the basic tables and an er diagram</p>  <p>Represents a an external data source <pre><code> CREATE TABLE <code>datasource</code> (   <code>id</code> int(10) unsigned NOT NULL AUTO_INCREMENT,   <code>type_id</code> int(10) unsigned NOT NULL,   <code>name</code> varchar(255) COLLATE utf8_unicode_ci NOT NULL,   <code>code</code> varchar(255) COLLATE utf8_unicode_ci NOT NULL,   <code>description</code> varchar(255) COLLATE utf8_unicode_ci NOT NULL,   <code>created_at</code> timestamp NOT NULL DEFAULT '0000-00-00 00:00:00',   <code>updated_at</code> timestamp NOT NULL DEFAULT '0000-00-00 00:00:00',   PRIMARY KEY (<code>id</code>),   UNIQUE KEY <code>datasource_type_id_unique</code> (<code>type_id</code>),   UNIQUE KEY <code>datasource_code_unique</code> (<code>code</code>),   CONSTRAINT <code>datasource_type_id_foreign</code> FOREIGN KEY (<code>type_id</code>) REFERENCES <code>datasource_type</code> (<code>id</code>) ON UPDATE CASCADE ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci; </pre></code></p>  <p>Represents a table of an external data source <pre><code> CREATE TABLE <code>entity</code> (   <code>id</code> int(10) unsigned NOT NULL AUTO_INCREMENT,   <code>datasource_id</code> int(10) unsigned NOT NULL,   <code>timestamp_attribute_id</code> int(10) unsigned DEFAULT NULL,   <code>name</code> varchar(255) COLLATE utf8_unicode_ci NOT NULL,   <code>description</code> varchar(255) COLLATE utf8_unicode_ci NOT NULL,   <code>code</code> varchar(255) COLLATE utf8_unicode_ci NOT NULL,   <code>external_pk</code> varchar(255) COLLATE utf8_unicode_ci NOT NULL, #not used   <code>created_at</code> timestamp NOT NULL DEFAULT '0000-00-00 00:00:00',   <code>updated_at</code> timestamp NOT NULL DEFAULT '0000-00-00 00:00:00',   PRIMARY KEY (<code>id</code>),   KEY <code>entity_datasource_id_foreign</code> (<code>datasource_id</code>),   KEY <code>entity_timestamp_attribute_id_foreign</code> (<code>timestamp_attribute_id</code>),   CONSTRAINT <code>entity_datasource_id_foreign</code> FOREIGN KEY (<code>datasource_id</code>) REFERENCES <code>datasource</code> (<code>id</code>) ON DELETE CASCADE ON UPDATE CASCADE,   CONSTRAINT <code>entity_timestamp_attribute_id_foreign</code> FOREIGN KEY (<code>timestamp_attribute_id</code>) REFERENCES <code>attribute</code> (<code>id</code>) ON UPDATE CASCADE ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci; </pre></code></p>  <p>A field of an external table <pre><code> CREATE TABLE <code>attribute</code> (   <code>id</code> int(10) unsigned NOT NULL AUTO_INCREMENT,   <code>entity_id</code> int(10) unsigned NOT NULL,   <code>data_type_id</code> int(10) unsigned NOT NULL, #a reference to the table with used data types: int, varchar etc. Records of the table contain names of the value tables and models.   <code>name</code> varchar(255) COLLATE utf8_unicode_ci NOT NULL,   <code>description</code> varchar(255) COLLATE utf8_unicode_ci NOT NULL,   <code>code</code> varchar(255) COLLATE utf8_unicode_ci NOT NULL,   <code>handler</code> varchar(255) COLLATE utf8_unicode_ci NOT NULL DEFAULT '',   <code>deletable</code> tinyint(1) NOT NULL DEFAULT '1',   <code>created_at</code> timestamp NOT NULL DEFAULT '0000-00-00 00:00:00',   <code>updated_at</code> timestamp NOT NULL DEFAULT '0000-00-00 00:00:00',   PRIMARY KEY (<code>id</code>),   KEY <code>attribute_entity_id_foreign</code> (<code>entity_id</code>),   KEY <code>attribute_data_type_id_foreign</code> (<code>data_type_id</code>),   CONSTRAINT <code>attribute_data_type_id_foreign</code> FOREIGN KEY (<code>data_type_id</code>) REFERENCES <code>data_type</code> (<code>id</code>) ON DELETE CASCADE ON UPDATE CASCADE,   CONSTRAINT <code>attribute_entity_id_foreign</code> FOREIGN KEY (<code>entity_id</code>) REFERENCES <code>entity</code> (<code>id</code>) ON DELETE CASCADE ON UPDATE CASCADE ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci; </pre></code></p>  <p>A row of an external table. Used to join fields of one external row <pre><code> CREATE TABLE <code>entity_row</code> (   <code>id</code> int(10) unsigned NOT NULL AUTO_INCREMENT,   <code>datasource_id</code> int(10) unsigned NOT NULL,   <code>entity_id</code> int(10) unsigned NOT NULL,   <code>external_id</code> varchar(255) COLLATE utf8_unicode_ci NOT NULL,   <code>created_at</code> timestamp NOT NULL DEFAULT '0000-00-00 00:00:00',   <code>updated_at</code> timestamp NOT NULL DEFAULT '0000-00-00 00:00:00',   PRIMARY KEY (<code>id</code>),   UNIQUE KEY <code>entity_row_unique_index</code> (<code>datasource_id</code>,<code>entity_id</code>,<code>external_id</code>), #used either to update existing or inser a new record when syncing with an external data source   KEY <code>entity_row_entity_id_foreign</code> (<code>entity_id</code>),   CONSTRAINT <code>entity_row_datasource_id_foreign</code> FOREIGN KEY (<code>datasource_id</code>) REFERENCES <code>datasource</code> (<code>id</code>) ON DELETE CASCADE ON UPDATE CASCADE,   CONSTRAINT <code>entity_row_entity_id_foreign</code> FOREIGN KEY (<code>entity_id</code>) REFERENCES <code>entity</code> (<code>id</code>) ON DELETE CASCADE ON UPDATE CASCADE ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci; </pre></code></p>  <p>An example of a value table. Actually I have a few for most common data types: int, decimal, text etc <pre><code> CREATE TABLE <code>value_int</code> (   <code>id</code> int(10) unsigned NOT NULL AUTO_INCREMENT,   <code>datasource_id</code> int(10) unsigned NOT NULL,   <code>entity_id</code> int(10) unsigned NOT NULL,   <code>attribute_id</code> int(10) unsigned NOT NULL,   <code>row_id</code> int(10) unsigned NOT NULL,   <code>value</code> int(11) NOT NULL,   <code>created_at</code> timestamp NOT NULL DEFAULT '0000-00-00 00:00:00',   <code>updated_at</code> timestamp NOT NULL DEFAULT '0000-00-00 00:00:00',   PRIMARY KEY (<code>id</code>),   UNIQUE KEY <code>value_int_entity_id_attribute_id_row_id_unique</code> (<code>entity_id</code>,<code>attribute_id</code>,<code>row_id</code>),   KEY <code>value_int_datasource_id_foreign</code> (<code>datasource_id</code>),   KEY <code>value_int_attribute_id_foreign</code> (<code>attribute_id</code>),   KEY <code>value_int_row_id_foreign</code> (<code>row_id</code>),   KEY <code>value_int_value_index</code> (<code>value</code>),   CONSTRAINT <code>value_int_attribute_id_foreign</code> FOREIGN KEY (<code>attribute_id</code>) REFERENCES <code>attribute</code> (<code>id</code>) ON DELETE CASCADE ON UPDATE CASCADE,   CONSTRAINT <code>value_int_datasource_id_foreign</code> FOREIGN KEY (<code>datasource_id</code>) REFERENCES <code>datasource</code> (<code>id</code>) ON DELETE CASCADE ON UPDATE CASCADE,   CONSTRAINT <code>value_int_entity_id_foreign</code> FOREIGN KEY (<code>entity_id</code>) REFERENCES <code>entity</code> (<code>id</code>) ON DELETE CASCADE ON UPDATE CASCADE,   CONSTRAINT <code>value_int_row_id_foreign</code> FOREIGN KEY (<code>row_id</code>) REFERENCES <code>entity_row</code> (<code>id</code>) ON DELETE CASCADE ON UPDATE CASCADE ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci; </pre></code></p>  <p>I also have some sort of ORM to build queries for the EAV structure. In the example below it generates a SQL code which joins two entities - here I join patients and clinics where they are filed</p>  <p><pre><code> SELECT <code>entity_row</code>.<code>id</code> AS <code>internal_row_id</code>,  <code>entity_row</code>.<code>external_id</code> AS <code>external_row_id</code>,  <code>clinics</code>.<code>internal_row_id</code> AS <code>clinics.internal_row_id</code>,  <code>clinics</code>.<code>external_row_id</code> AS <code>clinics.external_row_id</code>, </p>  <p><code>value_varchar_NameFirst</code>.<code>value</code> AS <code>NameFirst</code>,  <code>value_varchar_NameLast</code>.<code>value</code> AS <code>NameLast</code>,  <code>value_int_a_ID_Clinic</code>.<code>value</code> AS <code>a_ID_Clinic</code>,  <code>clinics</code>.<code>ClinicName</code> AS <code>ClinicName</code>,  <code>clinics</code>.<code>a__IDPK_Clinic</code> AS <code>a__IDPK_Clinic</code></p>  <p>FROM <code>entity_row</code></p>  <p>LEFT JOIN <code>value_varchar</code> AS <code>value_varchar_NameFirst</code> ON <code>value_varchar_NameFirst</code>.<code>entity_id</code>='1' AND <code>value_varchar_NameFirst</code>.<code>attribute_id</code>='3' AND <code>value_varchar_NameFirst</code>.<code>row_id</code>=<code>entity_row</code>.<code>id</code> LEFT JOIN <code>value_varchar</code> AS <code>value_varchar_NameLast</code> ON <code>value_varchar_NameLast</code>.<code>entity_id</code>='1' AND <code>value_varchar_NameLast</code>.<code>attribute_id</code>='4' AND <code>value_varchar_NameLast</code>.<code>row_id</code>=<code>entity_row</code>.<code>id</code> LEFT JOIN <code>value_int</code> AS <code>value_int_a_ID_Clinic</code> ON <code>value_int_a_ID_Clinic</code>.<code>entity_id</code>='1' AND <code>value_int_a_ID_Clinic</code>.<code>attribute_id</code>='5' AND <code>value_int_a_ID_Clinic</code>.<code>row_id</code>=<code>entity_row</code>.<code>id</code></p>  <p>INNER JOIN ( SELECT <code>entity_row</code>.<code>id</code> AS <code>internal_row_id</code>,  <code>entity_row</code>.<code>external_id</code> AS <code>external_row_id</code>,  <code>value_varchar_ClinicName</code>.<code>value</code> AS <code>ClinicName</code>,  <code>value_int_a__IDPK_Clinic</code>.<code>value</code> AS <code>a__IDPK_Clinic</code></p>  <p>FROM <code>entity_row</code></p>  <p>LEFT JOIN <code>value_varchar</code> AS <code>value_varchar_ClinicName</code> ON <code>value_varchar_ClinicName</code>.<code>entity_id</code>='3' AND <code>value_varchar_ClinicName</code>.<code>attribute_id</code>='40' AND <code>value_varchar_ClinicName</code>.<code>row_id</code>=<code>entity_row</code>.<code>id</code> LEFT JOIN <code>value_int</code> AS <code>value_int_a__IDPK_Clinic</code> ON <code>value_int_a__IDPK_Clinic</code>.<code>entity_id</code>='3' AND <code>value_int_a__IDPK_Clinic</code>.<code>attribute_id</code>='173' AND <code>value_int_a__IDPK_Clinic</code>.<code>row_id</code>=<code>entity_row</code>.<code>id</code></p>  <p>WHERE <code>entity_row</code>.<code>entity_id</code>='3' ) AS <code>clinics</code> ON <code>value_int_a_ID_Clinic</code>.<code>value</code> = <code>clinics</code>.<code>a__IDPK_Clinic</code></p>  <p>WHERE <code>entity_row</code>.<code>entity_id</code>='1'</p>  <p>LIMIT 500 </pre></code></p>  <p>EXPLAIN:</p>  <pre><code> +----+-------------+--------------------------+--------+------------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------+---------+--------------------------------------------------------+------+-------------+ | id | select_type | table                    | type   | possible_keys                                                                                                                | key                                                | key_len | ref                                                    | rows | Extra       | +----+-------------+--------------------------+--------+------------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------+---------+--------------------------------------------------------+------+-------------+ |  1 | PRIMARY     |                | ALL    | NULL                                                                                                                         | NULL                                               | NULL    | NULL                                                   |   37 | NULL        | |  1 | PRIMARY     | value_int_a_ID_Clinic    | ref    | value_int_entity_id_attribute_id_row_id_unique,value_int_attribute_id_foreign,value_int_row_id_foreign,value_int_value_index | value_int_value_index                              | 4       | clinics.a__IDPK_Clinic                                 |    4 | Using where | |  1 | PRIMARY     | entity_row               | eq_ref | PRIMARY,entity_row_entity_id_foreign                                                                                         | PRIMARY                                            | 4       | chc_datastore.value_int_a_ID_Clinic.row_id             |    1 | Using where | |  1 | PRIMARY     | value_varchar_NameFirst  | eq_ref | value_varchar_entity_id_attribute_id_row_id_unique,value_varchar_attribute_id_foreign,value_varchar_row_id_foreign           | value_varchar_entity_id_attribute_id_row_id_unique | 12      | const,const,chc_datastore.value_int_a_ID_Clinic.row_id |    1 | NULL        | |  1 | PRIMARY     | value_varchar_NameLast   | eq_ref | value_varchar_entity_id_attribute_id_row_id_unique,value_varchar_attribute_id_foreign,value_varchar_row_id_foreign           | value_varchar_entity_id_attribute_id_row_id_unique | 12      | const,const,chc_datastore.value_int_a_ID_Clinic.row_id |    1 | NULL        | |  2 | DERIVED     | entity_row               | ref    | entity_row_entity_id_foreign                                                                                                 | entity_row_entity_id_foreign                       | 4       | const                                                  |   37 | NULL        | |  2 | DERIVED     | value_varchar_ClinicName | eq_ref | value_varchar_entity_id_attribute_id_row_id_unique,value_varchar_attribute_id_foreign,value_varchar_row_id_foreign           | value_varchar_entity_id_attribute_id_row_id_unique | 12      | const,const,chc_datastore.entity_row.id                |    1 | NULL        | |  2 | DERIVED     | value_int_a__IDPK_Clinic | eq_ref | value_int_entity_id_attribute_id_row_id_unique,value_int_attribute_id_foreign,value_int_row_id_foreign                       | value_int_entity_id_attribute_id_row_id_unique     | 12      | const,const,chc_datastore.entity_row.id                |    1 | NULL        | +----+-------------+--------------------------+--------+------------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------+---------+--------------------------------------------------------+------+-------------+ </code></pre>  <p>ER diagram of the basic tables is here: <a href="http://imgur.com/Ita5sE5" rel="nofollow">http://imgur.com/Ita5sE5</a></p>  <p>If you could point out on my mistakes or offer any ammendments it would be great.</p>  <p>The database contains about 5 millions rows in the entity_row table</p>  <p>Thanks</p>