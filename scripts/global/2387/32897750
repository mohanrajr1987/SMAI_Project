<p>So cool story:  We used the <a href="https://www.nartac.com/Products/IISCrypto/" rel="nofollow">IIS Crypto Tool</a> to lock out older SHA1 key exchange algorithms on our IIS server so when users visit our site, Chrome won't <a href="http://security.stackexchange.com/questions/83831/google-chrome-your-connection-to-website-is-encrypted-with-obsolete-cryptograph">complain about obsolete encryption</a></p>  <p>Worked great.  But, it turns out our web app sometimes needs to make web service calls to a third-party.  Turns out this third party hasn't updated their own crypto policy, and we need to use a sha1 key exchange with them.  </p>  <p>In a cool twist, we learned that configuring IIS with the above tool also impacts key exchange when we act as a client, calling the third party -- so our calls out to the web service fail because we cannot negotiate a key exchange.</p>  <p>Is there a way that I can programmatically configure the acceptable key exchange when I go to make an http request (preferably locally, so that I am only applying the policy to my outbound connection, not to inbound connections hitting our web server)? </p>