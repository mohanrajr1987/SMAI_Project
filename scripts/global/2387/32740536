<p>I wonder what the canonical approach to generating keys using KDFs is on Android. The JCA provides a <code>SecretKeyFactory</code>, outlined in <a href="http://stackoverflow.com/questions/4513433/deriving-a-secret-from-a-master-key-using-jce-jca">this post</a>, where the method would look like</p>  <pre><code>public byte[] deriveKey(String password, byte[] salt, int keyLen) {     SecretKeyFactory kf = SecretKeyFactory.getInstance("PBKDF2WithHmacSHA1");     KeySpec specs = new PBEKeySpec(password.toCharArray(), salt, 1024, keyLen);     SecretKey key = kf.generateSecret(specs);     return key.getEncoded(); } </code></pre>  <p>It doesn't specify the number of rounds, however. Is this the canonical approach?</p>