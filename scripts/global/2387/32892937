<p>So I have a kind of interesting issue. I have a field in my data store which must take exactly 160 bits of information. Some users will choose to make this data encrypted, some won't, so some of those 160 bit fields will be ciphertext some will be plaintext. A boolean will indicate which one the user is using. The important thing here is that I need this field to be exactly 160 bits long. However, a 128-bit cipher will mean I have to put in 256 bits in as plaintext, which is fine, just use a buffer string, but this means that the output is 256 bits when what is stored must be exactly 160 bits. And I can't simply cut off the ciphertext or that would mess up the decryption. So how can I use a 128-bit block cipher like AES (note it MUST be a 128 bit block cipher, I can't change that) to encrypt 160 bits into 160 bits such that it can be decrypted back into the original 128 bits.</p>  <p><strong>Just a note: The field in the database must stay exactly 160 bits. No this can not change. The size of the blocks can not change either (it's going to be a 128-bit cipher no matter what). No we can't store it in a different field if it is ciphertext then if it was plain text, it must be the same 160 bit field.</strong></p>