<p>I'm trying to make a chat program in Java with encrypted messages(you can send encrypted message and when you receive message you have to  decrypt it). I found this code for decryption and encryption:</p>  <pre><code>import java.security.Key; import javax.crypto.Cipher; import javax.crypto.spec.SecretKeySpec; import sun.misc.*; import java.io.BufferedReader; import java.io.FileReader;  public class test { private static String algorithm = "AES/CBC/PKCS5Padding"; private static byte[] keyValue=new byte[]      {'0','2','3','4','5','6','7','8','9','1','2','3','4','5','6','7'};// your key  // Performs Encryption public static String encrypt(String plainText) throws Exception {         Key key = generateKey();         Cipher chiper = Cipher.getInstance(algorithm);         chiper.init(Cipher.ENCRYPT_MODE, key);         byte[] encVal = chiper.doFinal(plainText.getBytes());         String encryptedValue = new BASE64Encoder().encode(encVal);         return encryptedValue; }  // Performs decryption public static String decrypt(String encryptedText) throws Exception {         // generate key         Key key = generateKey();         Cipher chiper = Cipher.getInstance(algorithm);         chiper.init(Cipher.DECRYPT_MODE, key);         byte[] decordedValue = new BASE64Decoder().decodeBuffer(encryptedText);         byte[] decValue = chiper.doFinal(decordedValue);         String decryptedValue = new String(decValue);         return decryptedValue; }  //generateKey() is used to generate a secret key for AES algorithm private static Key generateKey() throws Exception {         Key key = new SecretKeySpec(keyValue, algorithm);         return key; } </code></pre>  <p>So the encryption function works well:</p>  <pre><code>public void send(String text) {     try {         test test = new test();         String textTS = chat.AES.test.encrypt(text);         OUT.println(ClientGUI.UserName + ": " + textTS);         OUT.flush();         Client_GUI.TF_Message.setText("");     } catch (Exception e) {         e.printStackTrace();     } } </code></pre>  <p>But I can't really receive message, I think the problem is in key generation, I never save key which I used to encrypt message and trying to decrypt it with new key, but if the problem in that how can I send the key? The code for receive function:</p>  <pre><code>public void receive() {     try {         if (INPUT.hasNext()) {             String MESSAGE = INPUT.nextLine();             String dMessage = chat.AES.test.decrypt(MESSAGE);             System.out.println(dMessage);             if (MESSAGE.contains("#?!")) {                 String TEMP1 = MESSAGE.substring(3);                 TEMP1 = TEMP1.replace("[", "");                 TEMP1 = TEMP1.replace("]", "");                  String[] CurrentUsers = TEMP1.split(", ");                  Client_GUI.JL_ONLINE.setListData(CurrentUsers);             } else {                 Client_GUI.TA_CONVERSATION.append(MESSAGE + "\n");             }         }     } catch (Exception e) {         e.printStackTrace();     } } </code></pre>