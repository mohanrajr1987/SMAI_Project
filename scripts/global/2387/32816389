<p>Encryption and Decryption successful when encrypt with public key and decrypt with private key : </p>  <p><strong>C# encryption with public key(Successful)</strong></p>  <pre><code>   public string EncryptData(string data) {          RSACryptoServiceProvider rsa = new RSACryptoServiceProvider();         rsa.FromXmlString(xml); //public key          var cipher = rsa.Encrypt(Encoding.UTF8.GetBytes(data), false);          return Convert.ToBase64String(cipher );     } </code></pre>  <p><strong>Java decryption with private key(Successful)</strong></p>  <pre><code>public static void decrypt() throws Exception{     byte[] modulusBytes = Base64.getDecoder().decode(mod);     byte[] dByte = Base64.getDecoder().decode(d);      BigInteger modulus = new BigInteger(1, (modulusBytes));     BigInteger exponent = new BigInteger(1, (dByte));      RSAPrivateKeySpec rsaPrivKey = new RSAPrivateKeySpec(modulus, exponent);     KeyFactory fact = KeyFactory.getInstance("RSA");     PrivateKey privKey = fact.generatePrivate(rsaPrivKey);      Cipher cipher = Cipher.getInstance("RSA/ECB/PKCS1Padding");     cipher.init(Cipher.DECRYPT_MODE, privKey);      byte[] cipherData = Base64.getDecoder().decode(cipherByte);     byte[] plainBytes = cipher.doFinal(cipherData);       System.out.println(new String(plainBytes)); }  </code></pre>  <p><strong>Problem is Here</strong></p>  <p>When c# encrypt with private key and java decrypt with public key bad padding error occur:</p>  <p><strong>C# encryption with private key(Fail)</strong></p>  <pre><code>public stringEncryptData(string data) {          RSACryptoServiceProvider rsa = new RSACryptoServiceProvider();         rsa.FromXmlString(xml); //private key          var cypher = rsa.Encrypt(Encoding.UTF8.GetBytes(data), false);          return  Convert.ToBase64String(cypher);     } </code></pre>  <p><strong>java decryption with public key (Fail)</strong></p>  <pre><code>public static void decryptPublic() throws Exception{      byte[] modulusBytes = Base64.getDecoder().decode(mod);     byte[] expBytes = Base64.getDecoder().decode(exp);      BigInteger modulus = new BigInteger(1, (modulusBytes));     BigInteger exponent = new BigInteger(1, (expBytes));      RSAPublicKeySpec pubKey = new RSAPublicKeySpec(modulus, exponent);     KeyFactory fact = KeyFactory.getInstance("RSA");     PublicKey publicKey = fact.generatePublic(pubKey);     Cipher cipher = Cipher.getInstance("RSA/ECB/PKCS1Padding");     cipher.init(Cipher.DECRYPT_MODE, publicKey );       byte[] cipherData = Base64.getDecoder().decode(cipherByte);     byte[] plainBytes = cipher.doFinal(cipherData);      System.out.println(new String(plainBytes)); }  </code></pre>  <p>I understand public key should use to do encryption and private key for decryption.But in my situation, i need to sent out public key to mutiple clients for decryption on a text encrypted by its private key. Text should be non readable by others except client. Can anyone see what problem on my code, or suggest a better solution to my problem.</p>