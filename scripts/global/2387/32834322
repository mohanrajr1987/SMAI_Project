<p>I'm working on a javascript function to encrypt and store passwords on the browser using a 6 digit PIN. While this could easily be brute forced, the server side code prevents this by locking out the account after 3 incorrect attempts.</p>  <p>The example below using AES, only decrypts to plain text when the pin/key is correct. This allows the attacker to try the 99,9999 combinations and pick out the only plain text result, bypassing the server side restrictions.</p>  <p>Can someone recommend a javascript crypto function/library that always decrypts to plain text, even with the incorrect key?</p>  <p><div class="snippet" data-lang="js" data-hide="false"> <div class="snippet-code"> <pre class="snippet-code-js lang-js prettyprint-override"><code>var encrypted = CryptoJS.AES.encrypt("password:abcdefg", "pin:123456"); $('#1').text(encrypted);   var decryptedCorrect = CryptoJS.AES.decrypt($('#1').text(), "pin:123456") $('#3').text(decryptedCorrect.toString(CryptoJS.enc.Utf8));  var decryptedInCorrect = CryptoJS.AES.decrypt($('#1').text(), "pin:112233") $('#4').text(decryptedInCorrect.toString(CryptoJS.enc.Utf8));</code></pre> <pre class="snippet-code-html lang-html prettyprint-override"><code>&lt;script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"&gt;&lt;/script&gt; &lt;script src="http://crypto-js.googlecode.com/svn/tags/3.1.2/build/rollups/aes.js"&gt;&lt;/script&gt;  &lt;div&gt;   Encrypted text: &lt;span id="1"&gt;&lt;/span&gt; &lt;/div&gt; &lt;br /&gt; &lt;div&gt;   Decrypted with correct pin: &lt;span id="3"&gt;&lt;/span&gt; &lt;/div&gt; &lt;br /&gt; &lt;div&gt;   Decrypted with incorrect pin: &lt;span id="4"&gt;&lt;/span&gt; &lt;/div&gt; (Ideally the above should be some plain text value)</code></pre> </div> </div> </p>