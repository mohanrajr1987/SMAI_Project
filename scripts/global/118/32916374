<p>I'd like to add DBLookupComboboxes to certain columns in a DBGrid. There is a nice article on About.com on how to do this <a href="http://delphi.about.com/od/usedbvcl/l/aa101403b.htm" rel="nofollow">here</a>. The problem is that with a table having many columns, if you select from the DBLookupCombobox in one column and then try to scroll left, the combobox will move left too as shown in the included images. How can the About.com code can be changed to prevent this behavior? A web search showed two others complaining of the exact same problem with no solution. Note that I want to use a DBLookupCombobox to show a name but enter the id, so using a simple picklist will not do.</p>  <p><a href="http://i.stack.imgur.com/uo8UC.gif" rel="nofollow"><img src="http://i.stack.imgur.com/uo8UC.gif" alt="using combobox"></a> <a href="http://i.stack.imgur.com/Qmxvu.gif" rel="nofollow"><img src="http://i.stack.imgur.com/Qmxvu.gif" alt="scroll left"></a></p>  <pre><code>procedure TForm1.DBGrid1ColExit(Sender: TObject); begin   if DBGrid1.SelectedField.FieldName = DBLookupComboBox1.DataField then     DBLookupComboBox1.Visible := False end;  procedure TForm1.DBGrid1DrawColumnCell(Sender: TObject; const Rect: TRect;   DataCol: Integer; Column: TColumn; State: TGridDrawState); begin   if (gdFocused in State) then   begin     if (Column.Field.FieldName = DBLookupComboBox1.DataField) then     with DBLookupComboBox1 do     begin       Left := Rect.Left + DBGrid1.Left + 2;       Top := Rect.Top + DBGrid1.Top + 2;       Width := Rect.Right - Rect.Left;       Width := Rect.Right - Rect.Left;       Height := Rect.Bottom - Rect.Top;        Visible := True;     end;   end end;  procedure TForm1.DBGrid1KeyPress(Sender: TObject; var Key: Char); begin   if (key = Chr(9)) then Exit;    if (DBGrid1.SelectedField.FieldName = DBLookupComboBox1.DataField) then   begin     DBLookupComboBox1.SetFocus;     SendMessage(DBLookupComboBox1.Handle, WM_Char, word(Key), 0);   end end;  procedure TForm1.FormCreate(Sender: TObject); begin  with DBLookupComboBox1 do  begin    DataSource := DataSource1; // -&gt; AdoTable1 -&gt; DBGrid1    ListSource := DataSource2;    DataField   := 'resource_id'; // from AdoTable1 - displayed in the DBGrid    KeyField  := 'id';    ListField := 'resource_name; id';     Visible    := False;  end;   DataSource2.DataSet := AdoQuery1;   AdoQuery1.Connection := AdoConnection1;  AdoQuery1.SQL.Text := 'SELECT id,resource_name FROM resources';  AdoQuery1.Open; end; </code></pre>