<p>Simple code:</p>  <pre><code>procedure TForm1.Button1Click(Sender: TObject);   //var   //h: tIdHTTP;   //SSL: TIdSSLIOHandlerSocketOpenSSL; begin   h.IOHandler := SSL;   SSL.SSLOptions.Method := sslvTLSv1_2;   SSL.SLLOptions.SSLVersion := [sslvTLSv1_2]; //must be set automatically after SetMethod, but just to be sure   h.Get('https://www.deviantart.com/users/login'); end; </code></pre>  <p>That simple code gives me an error:</p>  <blockquote>   <p>Error connecting with SSL.<br>   error:14094410:SSL routines:ssl3_read_bytes:sslv3 alert handshake failure</p> </blockquote>  <p>I use Delphi XE3 and OpenSSL 1.0.2b libs. I can't figure it out, looking into sources, there is strings in connection initiation that disable not used versions:</p>  <pre><code>if not (sslvSSLv2 in SSLVersions) then begin   SSL_CTX_set_options(fContext, SSL_OP_NO_SSLv2); end; if not (sslvSSLv3 in SSLVersions) then begin   SSL_CTX_set_options(fContext, SSL_OP_NO_SSLv3); end; if not (sslvTLSv1 in SSLVersions) then begin   SSL_CTX_set_options(fContext, SSL_OP_NO_TLSv1); end; </code></pre>  <p>But sslv3 operations still getting in somehow. Doesn't look like a component's bug. Something library internal, or indy doesn't consider something when setting up parameters?</p>  <p>Or it's actually me, who didn't notice something important? I really hope I don't need to go through a hell named "indy components update".</p>  <p>Test on (tried all methods including TLS1.2) <code>https://www.deviantart.com/users/login</code></p>  <pre><code>Resolving hostname www.deviantart.com. Connecting to 54.230.96.81. Handshake Start: before/connect initialization Connect Loop: before/connect initialization Connect Loop: SSLv3 write client hello A fatal Read Alert: handshake failure Connect Failed: SSLv3 read server hello A ERROR: Error connecting with SSL. error:14094410:SSL routines:ssl3_read_bytes:sslv3 alert handshake failure </code></pre>  <ul> <li>for SSL3 and TLS1/1.1/1.2 result is identical;</li> <li>for SSLv23 answers SSL23_GET_SERVER_HELLO:sslv3 alert handshake failure;</li> <li>for SSLv2 doesn't answer;</li> </ul>  <p>Test on similar resource (TLS1.2 ONLY) <code>https://files.yande.re/image/da9afa6d9ca43a9f154fad69f76adb85.jpg</code></p>  <pre><code>Resolving hostname files.yande.re. Connecting to 5.39.10.56. Handshake Start: before/connect initialization Connect Loop: before/connect initialization Connect Loop: SSLv3 write client hello A Connect Loop: SSLv3 read server hello A Connect Loop: SSLv3 read server certificate A Connect Loop: SSLv3 read server key exchange A Connect Loop: SSLv3 read server done A Connect Loop: SSLv3 write client key exchange A Connect Loop: SSLv3 write change cipher spec A Connect Loop: SSLv3 write finished A Connect Loop: SSLv3 flush data Connect Loop: SSLv3 read server session ticket A Connect Loop: SSLv3 read finished A Handshake Done: SSL negotiation finished successfully Connect Exit: SSL negotiation finished successfully </code></pre>  <p>My WireShark tests:</p>  <ul> <li>Indy: <code>http://imgur.com/BZ84Cl3</code> (response is handshake failure);</li> <li>Firefox: <code>http://imgur.com/pkYJvnO</code> ;</li> <li>Response to Firefox request: <code>http://imgur.com/M9ni3TV</code> ;</li> </ul>