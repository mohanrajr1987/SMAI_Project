<p>My objective of my programs is to implement a proxy server that can be connected by a single client and would only allow http request. </p>  <p><strong>The Requirements</strong> </p>  <ol> <li>To create a C based client-server architecture using sockets</li> <li>The proxy server should be able to accept and service single client's http requests</li> </ol>  <hr>  <p>Code </p>  <p>client.c</p>  <pre><code>    #include &lt;stdio.h&gt;     #include &lt;sys/types.h&gt;     #include &lt;sys/socket.h&gt;     #include &lt;netinet/in.h&gt;     #include &lt;netdb.h&gt;     #include &lt;string.h&gt;     #include &lt;stdlib.h&gt;       int main(int argc, char *argv[]){  int sockfd, portnum, n; struct sockaddr_in serv_addr; struct hostent *server;  char buffer[256]; if(argc &lt; 3){   fprintf(stderr, "usage %s hostname port\n", argv[0]);   exit(1); } portnum = atoi(argv[2]); sockfd= socket(AF_INET, SOCK_STREAM, 0);  if(sockfd &lt;0){  perror("ERROR opening Socket");  exit(1); } server= gethostbyname(argv[1]); if(sockfd  == NULL){  fprintf(stderr,"ERROR, no such host\n");  exit(1); } bzero((char *) &amp;serv_addr, sizeof(serv_addr)); serv_addr.sin_family = AF_INET; bcopy((char *)server-&gt;h_addr,      (char *)&amp;serv_addr.sin_addr.s_addr,       server-&gt;h_length);  serv_addr.sin_port = htons(portnum);  if(connect(sockfd,(struct sockaddr *)&amp;serv_addr,sizeof(serv_addr)) &lt;0){  fprintf(stderr,"ERROR, on connecting");  exit(1); } printf("Please enter the Host name: "); bzero(buffer,256); fgets(buffer,255,stdin); n=write(sockfd,buffer,strlen(buffer)); if(n&lt;0){  printf("Error writing to socket");  exit(1); }  bzero(buffer,256); n=read(sockfd,buffer,255); if(n&lt;0){  printf("ERROR reading from socket");  exit(1); } printf("%s\n", buffer);       return 0;     } </code></pre>  <p>Proxy server.c</p>  <pre><code>    #include &lt;stdio.h&gt;     #include &lt;sys/types.h&gt;     #include &lt;sys/socket.h&gt;     #include &lt;netinet/in.h&gt;     #include &lt;arpa/inet.h&gt;     #include &lt;unistd.h&gt;     #include &lt;sys/wait.h&gt;     #include &lt;stdlib.h&gt;     #include &lt;netdb.h&gt;     #include &lt;string.h&gt;        int main(int argc, char *argv[]){  int sockfd, newsockfd, portnum, clilen; char buffer[256], hostname[256]; pid_t p_id; struct sockaddr_in serv_addr, cli_addr; int n, pid;  if(argc &lt; 2){     fprintf(stderr, "ERROR, NO PORT PROVIDED!\n");     exit(1); } sockfd = socket(AF_INET, SOCK_STREAM, 0);//socket is made  if(sockfd &lt; 0){     fprintf(stderr,"ERROR opening socket!!");     exit(1); } bzero((char *) &amp;serv_addr, sizeof(serv_addr)); portnum = atoi(argv[1]);//port num  serv_addr.sin_family = AF_INET; serv_addr.sin_addr.s_addr = htonl(INADDR_ANY); serv_addr.sin_port = htons(portnum);   if(bind(sockfd, (struct sockaddr*)&amp;serv_addr, sizeof(serv_addr)) &lt; 0){     fprintf(stderr,"ERROR on binding");     exit(1); }  if( listen(sockfd, 5) &lt; 0){  printf("ERROR ON LISTEN");  exit(1); }      // accept         clilen = sizeof(cli_addr);     do{  newsockfd = accept(sockfd, (struct sockaddr *) &amp;cli_addr, &amp;clilen); if(newsockfd&lt;0){     fprintf(stderr,"ERROR on accept\n");     exit(1); }      pid=fork();     if(pid==0){  bzero(buffer, 256); n= read(newsockfd, buffer, 255);  if(n&lt;0){//message from client  fprintf(stderr,"ERROR Reading from socket\n");  exit(1); }     strcpy(hostname, buffer); printf("Here is the hostname : %s\n", hostname);  //variables used for acsessing webserver? int sockwb, wbport, x; struct sockaddr_in webser_addr; struct hostent *wbhost; char webbuf[510];//sending to webserver  wbport =80;//port used to access web server       sockwb = socket(AF_INET, SOCK_STREAM, 0);     if(sockwb &lt;0){         printf("error opeing websocket\n");         exit(1);     }     wbhost= gethostbyname(hostname);     printf("%s", wbhost-&gt;h_name);     if(sockwb == -1){         printf("NO SUCH web HOST\n");         exit(1);     }     bzero((char*) &amp;webser_addr, sizeof(webser_addr));     webser_addr.sin_family = AF_INET;          bcopy((char *)wbhost-&gt;h_addr,                            (char *)&amp;webser_addr.sin_addr.s_addr,                    wbhost-&gt;h_length);                    webser_addr.sin_port = htons(wbport);        if(connect(sockwb,(struct sockaddr *)&amp;webser_addr,sizeof(webser_addr)) &lt; 0){         printf("error on web connecting\n");         exit(1);     }     bzero(webbuf,510);     strcpy(webbuf, "GET http://");     strcat(webbuf, hostname);     strcat(webbuf, " HTTP/1.1");      printf("%s\n", webbuf);     x=write(sockwb,webbuf,strlen(webbuf));     if(x&lt;0){         printf("error writing to web sock");         exit(1);     }        bzero(webbuf,510);     x=read(sockwb,webbuf,510);     if(n&lt;0){             printf("error reading from web socket");         exit(1);     }     n = write(newsockfd, webbuf,255 );//write back to client  if (n&lt;0){    fprintf(stderr,"ERROR WRITING to socket");    exit(1); }  printf("%s\n", webbuf); }//end of if pid==0  printf("closing client"); close(newsockfd);//closing client socket       }while(1);     return 0;     } </code></pre>  <hr>  <p>I have been able to implement a simple client-server exchange with sockets, my issue is with the Http request. I do have to access the web server through port 80 using the GET Method.</p>  <p>The way i have the input that the client is sending to the proxy server should be :     www.NAME.com</p>  <p>The server doesn't seem to doing anything after the initial connection to the client.</p>