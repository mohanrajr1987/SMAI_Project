<p>I want to create a Digital Clock in Java using SWT. I want the time in the window to be constantly updated. For this I am running a Thread.  After getting references from different websites, I came up with the programme given below. But I am getting invalid Thread Access Exception. As per my knowledge the invalid Thread Access exception in SWT is caused when one tries to create the Display thread outside the main method, but I created it inside the main method.</p>  <pre><code>public class DigitizedClock implements Runnable {  private static Display display; private static Shell shell;  public void test() throws Exception {     display.asyncExec(new Runnable() {          @Override         public void run() {             shell.setSize(260, 120);             Point size = null;             Calendar now = Calendar.getInstance();             int hrs = now.get(Calendar.HOUR_OF_DAY);             int min = now.get(Calendar.MINUTE);             int sec = now.get(Calendar.SECOND);             String time = hrs + " : " + min + " : " + sec;             RowLayout layout = new RowLayout();             shell.setLayout(layout);              Label label = new Label(shell, SWT.WRAP);             label.setText("Time:");             size = label.computeSize(SWT.DEFAULT, SWT.DEFAULT);             label.setSize(size);              Label labelOther = new Label(shell, SWT.WRAP);             labelOther.setText(time);             size = labelOther.computeSize(SWT.DEFAULT, SWT.DEFAULT);             labelOther.setSize(size);              shell.pack();             shell.open();             while (!shell.isDisposed()) {                 if (!display.readAndDispatch())                     display.sleep();             }             display.dispose();         }     }); }  @Override public void run() {     // TODO Auto-generated method stub     try {         test();     } catch (Exception e) {         // TODO: handle exception         System.out.println("Exception in thread's run() - " + e.toString());     } }  public static void main(String args[]) {      display = new Display();     shell = new Shell(display);     try {         Runnable digitizedClockRunnable = new DigitizedClock();         //Used ScheduledExecutorService to run the Runnable target          DigitizedClock every one second         ScheduledExecutorService exec = Executors                 .newSingleThreadScheduledExecutor();         exec.scheduleAtFixedRate(digitizedClockRunnable, 0, 1,                 TimeUnit.SECONDS);     } catch (Exception e) {         System.out.println("Exception in main" + e.toString());     } } </code></pre>