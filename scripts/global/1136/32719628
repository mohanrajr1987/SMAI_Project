<p>I mean a equivalent of AWT's <code>BufferedImage#getType()</code>, or something else which allows me to write a simple <code>isGrayscale()</code> method.</p>  <p>I'm using SWT because I need to read TIF images, which AWT cannot open.</p>  <p>My objective is to draw (with color) on arbitrary image, and if it is grayscale, I have to first create an RGB image and copy B&amp;W pixels in it before drawing. Knowing if the image is already RGB will save that transformation process.</p>  <hr>  <p>Final code, based on Alex's solution below</p>  <p>I used population standard deviation for finer control of RGB values.</p>  <pre><code>private static final double GRAY_LEVEL_STD_SIGMA = 2.4; public static boolean isShadowOfGray(RGB color) {     // pure shadow     if (color.red == color.green &amp;&amp; color.green == color.blue) {         return true;     }     // Standard deviation filter     double mean = (color.red + color.green + color.blue) / 3;     double std = Math.sqrt((         Math.pow(color.red - mean, 2) +          Math.pow(color.green - mean, 2) +          Math.pow(color.blue - mean, 2)) / 3);     return (std &lt; GRAY_LEVEL_STD_SIGMA); } </code></pre>  <p>By the way, i consider "direct" palette images to always be RGB (they do not contains direct values from getRGBs()). The solution code does not have a dedicated pixel loop for that kind of images.</p>