<p>I haven't coded in python in a long time, since 2.7 came out. I am trying to make a simple tic tac toe game, but if I try to reference a attribute in TicTacToe object. It throws a run time exception saying that TicTacToe has no such attribute. Any ideas?</p>  <pre><code>class TicTacToe(object):  def __init__(self):     '''     :return: TicTacToe object     '''     self.turn = 1     self.deckList = [Deck()]     self.player1 = Player()     self.player2 = Player() def validateInput(self, num):     if type(num) is not int:         print('Not an integer 0-8')         return      elif num &lt; 0 | num &gt; 8:         print('Not between 0-8')         return  def getUserInput(self, turn):     if turn == 1:         choice = input('Player 1: Enter 0-8\n')         #turn = 2     elif turn == 2:         choice = input('Player 2: Enter 0-8\n')         #turn = 1     return choice  def startGame(self):     player1Name = input('Player 1: Enter your name\n')     player2Name = input('Player 2: Enter your name\n')     self.player1.Player.setName(player1Name)     self.player2.Player.setName(player2Name)     player1Mark = input('Player 1: Enter your mark\n')     player2Mark = input('Player 2: Enter your mark\n')     if player1Mark == player2Mark:         print('You both cannot have the same mark\n')         return     else:         self.player1.setMark(player1Mark)         self.player2.setMark(player2Mark)      while True:  # Main loop         choice = self.getUserInput(self.turn) </code></pre>  <p>Main </p>  <pre><code>from TicTacToe import TicTacToe if __name__ == '__main__':     game = TicTacToe     game.startGame(game)     pass </code></pre>  <p>I have the other classes here, Player class and Deck(Board) class</p>  <pre><code>import numpy as np  class Deck(object):     def __init__(self):         """         :return: Deck         """         board = np.matrix([-1,-1,-1],[-1,-1,-1],[-1,-1,-1])         player1Choices = []         player2Choices = []      def __str__(self):         return self.board  class Player(object):  def __init__(self):     """     :return: A new Player     """     name = None     mark = None     statistics = [0, 0, 0]  # [Win, Tie, Lost]  def setName(self, name):     """     :param name: Set name of player     """     self.name = name def setMark(self, mark):     """     :param mark: Set mark of player     """     self.mark = mark def getScore(self):     """     :return: Statistics of player     """     score = ((self.statistics[0] * 2) + self.statistics[1] - self.statistics[2])     return score def __str__(self):     """     :return: String representation of values inside Player     """     return "Name: " + self.name + "\nMark: " + self.mark + "\nScore: " + self.getScore() + "\n" def __cmp__(self, player):     """     :param: A Player      :return: Winner     """     if self.getScore() &gt; player.getScore():         return self     elif self.getScore() &lt; player.getScore():         return player     else:         return None </code></pre>