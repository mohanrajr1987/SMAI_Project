<p>I am writting my own rest api for magento app. I want to get the custom product attr value. But the result is alway  value : N/A This mean I can't get the attributes value. I don't know why. Anyone can help? Many Thanks.</p>  <h1>The code is like follow. Thanks.</h1>  <pre><code>public function _getAditional(array $excludeAttr = array()) {     $data = array ();     $productId = ( int ) $this-&gt;getRequest ()-&gt;getParam ( 'productid' );     $product = Mage::getModel ( "catalog/product" )-&gt;load ( $productid );     $attributes = $product-&gt;getAttributes ();     //$attributes = Mage::getBlockSingleton('catalog/product_view_attributes')-&gt;getAdditionalData($product);     foreach ( $attributes as $attribute ) {         if ($attribute-&gt;getIsVisibleOnFront() &amp;&amp; !in_array($attribute-&gt;getAttributeCode(), $excludeAttr)) {             $value = $attribute-&gt;getFrontend()-&gt;getValue($product);                   if (!$product-&gt;hasData($attribute-&gt;getAttributeCode())) {                 $value = Mage::helper('catalog')-&gt;__('N/A');             } elseif ((string)$value == '') {                 $value = Mage::helper('catalog')-&gt;__('No');             } elseif ($attribute-&gt;getFrontendInput() == 'price' &amp;&amp; is_string($value)) {                 $value = Mage::app()-&gt;getStore()-&gt;convertPrice($value, true);             }              if (is_string($value) &amp;&amp; strlen($value)) {                 $data[$attribute-&gt;getAttributeCode()] = array(                     'label' =&gt; $attribute-&gt;getStoreLabel(),                     'value' =&gt; $value,                     'code'  =&gt; $attribute-&gt;getAttributeCode()                 );             }         }     }     return $data; </code></pre>  <h1>    }</h1>  <h1>And the ProductsController.php</h1>  <p>class Sunpop_RestConnect_ProductsController extends Mage_Core_Controller_Front_Action {     public function getcustomoptionAction() {         $baseCurrency = Mage::app ()->getStore ()->getBaseCurrency ()->getCode ();         $currentCurrency = Mage::app ()->getStore ()->getCurrentCurrencyCode ();         $productid = $this->getRequest ()->getParam ( 'productid' );         $product = Mage::getModel ( "catalog/product" )->load ( $productid );         $selectid = 1;         $select = array ();         foreach ( $product->getOptions () as $o ) {             if (($o->getType () == "field") || ($o->getType () == "file")) {                 $select [$selectid] = array (                         'option_id' => $o->getId (),                         'custom_option_type' => $o->getType (),                         'custom_option_title' => $o->getTitle (),                         'is_require' => $o->getIsRequire (),                         'price' => number_format ( Mage::helper ( 'directory' )->currencyConvert ( $o->getPrice (), $baseCurrency, $currentCurrency ), 2, '.', '' ),                         'price_type' => $o->getPriceType (),                         'sku' => $o->getSku (),                         'max_characters' => $o->getMaxCharacters ()                  );             } else {                 $max_characters = $o->getMaxCharacters ();                 $optionid = 1;                 $options = array ();                 $values = $o->getValues ();                 foreach ( $values as $v ) {                     $options [$optionid] = $v->getData ();                     if(null!==$v->getData('price') &amp;&amp; null!==$v->getData('default_price')){                         $options [$optionid]['price']=number_format ( Mage::helper ( 'directory' )->currencyConvert ( $v->getPrice (), $baseCurrency, $currentCurrency ), 2, '.', '' );                         $options [$optionid]['default_price']=number_format ( Mage::helper ( 'directory' )->currencyConvert ( $v->getDefaultPrice (), $baseCurrency, $currentCurrency ), 2, '.', '' );                     }</p>  <pre><code>                $optionid ++;             }             $select [$selectid] = array (                     'option_id' =&gt; $o-&gt;getId (),                     'custom_option_type' =&gt; $o-&gt;getType (),                     'custom_option_title' =&gt; $o-&gt;getTitle (),                     'is_require' =&gt; $o-&gt;getIsRequire (),                     'price' =&gt; number_format ( Mage::helper ( 'directory' )-&gt;currencyConvert ( $o-&gt;getFormatedPrice (), $baseCurrency, $currentCurrency ), 2, '.', '' ),                     'max_characters' =&gt; $max_characters,                     'custom_option_value' =&gt; $options              );         }          $selectid ++;         // echo "----------------------------------&lt;br/&gt;";     }     echo json_encode ( $select ); } public function getproductdetailAction() {     $productdetail = array ();     $baseCurrency = Mage::app ()-&gt;getStore ()-&gt;getBaseCurrency ()-&gt;getCode ();     $currentCurrency = Mage::app ()-&gt;getStore ()-&gt;getCurrentCurrencyCode ();     $productid = $this-&gt;getRequest ()-&gt;getParam ( 'productid' );     $product = Mage::getModel ( "catalog/product" )-&gt;load ( $productid );      $storeUrl = Mage::getBaseUrl(Mage_Core_Model_Store::URL_TYPE_MEDIA);      //$description =  nl2br ( $product-&gt;getDescription () );     $description =   $product-&gt;getDescription ();     $description = str_replace("{{media url=\"",$storeUrl,$description);     $description = str_replace("\"}}","",$description);      if ($product-&gt;getOptions ())         $has_custom_options = true;     else         $has_custom_options = false;     $addtionatt=$this-&gt;_getAditional();     $productdetail = array (             'entity_id' =&gt; $product-&gt;getId (),             'sku' =&gt; $product-&gt;getSku (),             'name' =&gt; $product-&gt;getName (),             'news_from_date' =&gt; $product-&gt;getNewsFromDate (),             'news_to_date' =&gt; $product-&gt;getNewsToDate (),             'special_from_date' =&gt; $product-&gt;getSpecialFromDate (),             'special_to_date' =&gt; $product-&gt;getSpecialToDate (),             'image_url' =&gt; $product-&gt;getImageUrl (),             'url_key' =&gt; $product-&gt;getProductUrl (),             'is_in_stock' =&gt; $product-&gt;isAvailable (),             'has_custom_options' =&gt; $has_custom_options,             'regular_price_with_tax' =&gt; number_format ( Mage::helper ( 'directory' )-&gt;currencyConvert ( $product-&gt;getPrice (), $baseCurrency, $currentCurrency ), 2, '.', '' ),             'final_price_with_tax' =&gt; number_format ( Mage::helper ( 'directory' )-&gt;currencyConvert ( $product-&gt;getSpecialPrice (), $baseCurrency, $currentCurrency ), 2, '.', '' ),             'storeUrl' =&gt; $storeUrl,             'symbol' =&gt; Mage::app ()-&gt;getLocale ()-&gt;currency ( Mage::app ()-&gt;getStore ()-&gt;getCurrentCurrencyCode () )-&gt;getSymbol () ,             'weight'=&gt;number_format($product-&gt;getWeight()),             'additional'=&gt;$addtionatt,             'description' =&gt; $description     );     echo json_encode ( $productdetail ); } public function getPicListsAction() {     $productId = ( int ) $this-&gt;getRequest ()-&gt;getParam ( 'product' );     $_product = Mage::getModel ( "catalog/product" )-&gt;load ( $productid );     $_images = Mage::getModel ( 'catalog/product' )-&gt;load ( $productId )-&gt;getMediaGalleryImages ();     $images = array ();     foreach ( $_images as $_image ) {         $images [] = array (                 'url' =&gt; $_image-&gt;getUrl (),                 'position' =&gt; $_image-&gt;getPosition ()          );     }     echo json_encode ( $images ); } public function _getAditional(array $excludeAttr = array()) {     $data = array ();     $productId = ( int ) $this-&gt;getRequest ()-&gt;getParam ( 'productid' );     $product = Mage::getModel ( "catalog/product" )-&gt;load ( $productid );     $attributes = $product-&gt;getAttributes ();     //$attributes = Mage::getBlockSingleton('catalog/product_view_attributes')-&gt;getAdditionalData($product);     foreach ( $attributes as $attribute ) {         if ($attribute-&gt;getIsVisibleOnFront() &amp;&amp; !in_array($attribute-&gt;getAttributeCode(), $excludeAttr)) {             $value = $attribute-&gt;getFrontend()-&gt;getValue($product);                   if (!$product-&gt;hasData($attribute-&gt;getAttributeCode())) {                 $value = Mage::helper('catalog')-&gt;__('N/A');             } elseif ((string)$value == '') {                 $value = Mage::helper('catalog')-&gt;__('No');             } elseif ($attribute-&gt;getFrontendInput() == 'price' &amp;&amp; is_string($value)) {                 $value = Mage::app()-&gt;getStore()-&gt;convertPrice($value, true);             }              if (is_string($value) &amp;&amp; strlen($value)) {                 $data[$attribute-&gt;getAttributeCode()] = array(                     'label' =&gt; $attribute-&gt;getStoreLabel(),                     'value' =&gt; $value,                     'code'  =&gt; $attribute-&gt;getAttributeCode()                 );             }         }     }     return $data; } </code></pre>  <h1>}</h1>