<p>Our system is running on Ubuntu, python 3.4, postgres 9.4.x and psycopg2.</p>  <p>We (will in the furture) split between <code>dev</code>, <code>test</code> and <code>prod</code> environments using schemas. I've create a convenience method for creating connections to our database. It uses json connection configuration files in order create the connection string. I want to configure the connection to use a particular schema for all following queries using the returned connection. I don't want my queries to have hardcoded schemas, because we should be able to easily switch between them depending on if we are in development, testing or production phase/environment.</p>  <p>Currently the convenience method looks like the following:</p>  <pre><code>def connect(conn_config_file = 'Commons/config/conn_commons.json'):     with open(conn_config_file) as config_file:             conn_config = json.load(config_file)      conn = psycopg2.connect(         "dbname='" + conn_config['dbname'] + "' " +         "user='" + conn_config['user'] + "' " +         "host='" + conn_config['host'] + "' " +         "password='" + conn_config['password'] + "' " +         "port=" + conn_config['port'] + " "     )     cur = conn.cursor()     cur.execute("SET search_path TO " + conn_config['schema'])      return conn </code></pre>  <p>It works fine as long as you give it time to execute the set <code>search_path</code> query. Unfortunately, if I'm too fast with executing a following query a race condition happens where the <code>search_path</code> isn't set. I've tried to force the execution with doing a <code>conn.commit()</code> before the <code>return conn</code>, however, this resets the <code>search_path</code> to the default schema <code>postgres</code> so that it doesn't use, say, <code>prod</code>. Suggestions at the database or application layer is preferable, however, I know we probably could solve this at the OS level too, any suggestions in that direction are also welcomed. </p>  <p>An example json configuration file looks like the following:</p>  <pre><code>{     "dbname": "thedatabase",     "user": "theuser",     "host": "localhost",     "password": "theusers_secret_password",     "port": "6432",     "schema": "prod" } </code></pre>  <p>Any suggestion is very appreciated.</p>