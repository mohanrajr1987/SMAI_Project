<p>I have an xml schema that defines the following types</p>  <pre><code>&lt;xsd:complexType name="visualElement" abstract="true"&gt;     &lt;xsd:attribute name="id" type="xsd:ID"&gt;&lt;/xsd:attribute&gt;     &lt;xsd:attribute name="style" type="xsd:string"&gt;&lt;/xsd:attribute&gt;        &lt;/xsd:complexType&gt;  &lt;xsd:complexType name="textElement"&gt;     &lt;xsd:complexContent&gt;         &lt;xsd:extension base="sa:visualElement"&gt;             &lt;xsd:attribute name="label" type="xsd:string" use="required" /&gt;                 &lt;/xsd:extension&gt;     &lt;/xsd:complexContent&gt; &lt;/xsd:complexType&gt;  &lt;xs:element name="text" type="textElement"/&gt; </code></pre>  <p>The issue is that this means we must define a text element as follows</p>  <pre><code>&lt;text id="myText" style="Fancy" label="This is the display text" /&gt; </code></pre>  <p>When what I really want to do is define it like this</p>  <pre><code>&lt;text id="myText" style="Fancy"&gt;     This is the display text here. &lt;/text&gt; </code></pre>  <p>my textElement Type should extend the visualElement Type as we are generating Java Classes with JAXB to parse the XML. And then using the JaxB CLasses inheritance to handle all visual elements in a similar manner.</p>  <p>Is there a way to structure the schema so that i can achieve the desired XML format while still inheriting the attributes from the visualElement type?</p>