<p>I have the following XSD snippet:</p>  <pre><code>&lt;xs:complexType name="JsonLayout"&gt;     &lt;xs:complexContent&gt;         &lt;xs:extension base="ns:LayoutTypeBase"&gt;             &lt;xs:sequence&gt;                 &lt;xs:element name="attribute" minOccurs="1" maxOccurs="unbounded"&gt;                     &lt;xs:complexType&gt;                         &lt;xs:attribute name="name" use="required" type="ns:nonEmptyString" /&gt;                         &lt;xs:attribute name="layout" use="required" type="ns:nonEmptyString" /&gt;                     &lt;/xs:complexType&gt;                 &lt;/xs:element&gt;             &lt;/xs:sequence&gt;         &lt;/xs:extension&gt;     &lt;/xs:complexContent&gt; &lt;/xs:complexType&gt; </code></pre>  <p>This extends LayoutTypeBase which is just empty:</p>  <pre><code>&lt;xs:complexType name="LayoutTypeBase" /&gt; </code></pre>  <p>In JsonLayout, I want to add a unique constraint to make sure they don't specify 2 attributes with the same name.</p>  <p>VS doesn't let me add a unique contraint anywhere here except for the inner element. But thats not going to hit the "collection", its going to hit the element itself right? And I need it to be on the "collection".</p>  <p>I tried wrapping the complexType in an element and shifting the name to the element and then I was able to add a unique constraint, but it didn't trigger an error when I had a dupe name:</p>  <pre><code>&lt;xs:element name="JsonLayout"&gt;     &lt;xs:complexType&gt;         &lt;xs:complexContent&gt;             &lt;xs:extension base="ns:LayoutTypeBase"&gt;                 &lt;xs:sequence&gt;                     &lt;xs:element name="attribute" minOccurs="1" maxOccurs="unbounded"&gt;                         &lt;xs:complexType&gt;                             &lt;xs:attribute name="name" use="required" type="ns:nonEmptyString" /&gt;                             &lt;xs:attribute name="layout" use="required" type="ns:nonEmptyString" /&gt;                         &lt;/xs:complexType&gt;                     &lt;/xs:element&gt;                 &lt;/xs:sequence&gt;             &lt;/xs:extension&gt;         &lt;/xs:complexContent&gt;     &lt;/xs:complexType&gt;     &lt;xs:unique name="jsonLayout.uniqueAttributeName"&gt;         &lt;xs:selector xpath="attribute" /&gt;         &lt;xs:field xpath="@name" /&gt;     &lt;/xs:unique&gt; &lt;/xs:element&gt; </code></pre>  <p>What's the correct xpath syntax here? Or am I doing it wrong?</p>  <p>Thanks!</p>