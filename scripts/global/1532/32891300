<p>In my Java (Maven) project I'm using <a href="https://jaxb.java.net/" rel="nofollow">JAXB 2.2.11</a> to rebuild instances of a class from an XML payload received by our servers. I have an <code>.xsd</code> schema defining the class, which works great in conjunction with JAXB to rebuild an instance of the type I want. The issue I'm having is that those payloads can (without any notice or warning) have extra elements which I don't really care about.</p>  <p>One of the places where those extra elements can appear is within an <code>xs:all</code> tag. I do like having the functionality of said <a href="http://www.w3schools.com/schema/el_all.asp" rel="nofollow"><code>xs:all</code></a> tag:</p>  <blockquote>   <p>The all element specifies that the child elements can appear in any   order and that each child element can occur zero or one time.</p> </blockquote>  <p>However, I don't want to get a parsing error while processing an XML payload that contains extra attributes. An <code>xs:any</code> tag inside the <code>xs:all</code> would work great, but it's not permitted in XSD 1.0 (according to <a href="http://www.w3schools.com/schema/el_sequence.asp" rel="nofollow" title="w3schools">w3schools</a> and this other <a href="http://stackoverflow.com/a/3367162/289011">SO answer</a>) and apparently, JAXB doesn't support XSD 1.1. Also, the way <code>JAXB</code> treats the <code>any</code> or the <code>anyAttribute</code> is very interesting, because it puts all the unknown nodes into a map, so I can log it saying <em>"Hey! We are receiving an attribute that we don't really care about as of now, but maybe you'll find it somehow useful in the future?"</em></p>  <p>I've read about <a href="https://xsom.java.net/" rel="nofollow">Xsom</a>, that supports XSD 1.1, but apparently, it doesn't return an <em>instance</em> of the class you want, but more generic set of hash-maps and lists, therefore losing my type checking, which is something I don't want to.</p>  <p>So... Is there any way of <em>pretending</em> to have an <code>xs:any</code> within an <code>xs:all</code>?</p>