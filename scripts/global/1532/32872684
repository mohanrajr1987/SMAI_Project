<p>I am porting some code to ASP.NET 5, and want to target DNX Core 5.0. However, I am having trouble locating the types that are required to validate an XML document against an XSD document.</p>  <p>Here is the code:</p>  <pre><code>var xsdStream = this.GetType().GetTypeInfo().Assembly.GetManifestResourceStream(xsdPath); using (XmlReader xsd = XmlReader.Create(xsdStream)) {     XmlSchemaSet schema = new XmlSchemaSet();     schema.Add(null, xsd);      XmlReaderSettings xmlReaderSettings = new XmlReaderSettings();      xmlReaderSettings.ValidationType = ValidationType.Schema;     xmlReaderSettings.Schemas.Add(schema);      using (XmlReader xmlReader = XmlReader.Create(xmlPath, xmlReaderSettings))     {         try         {             while (xmlReader.Read());         }         catch (Exception ex)         {             throw new Exception(string.Format(Resources.Messages.XmlValidationFailed, xmlPath), ex);         }     } } </code></pre>  <p>As you can see, all I want is to stop on the first error and throw an exception indicating what the error is.</p>  <p>The problems are:</p>  <ol> <li>The <code>XmlSchemaSet</code> class doesn't exist in the <code>System.Xml.Schema</code> namespace (or anywhere else I have found).</li> <li>The <code>XmlReaderSettings.ValidationType</code> and <code>XmlReaderSettings.Schemas</code> properties do not exist.</li> </ol>  <p>I checked the <a href="https://msdn.microsoft.com/en-us/library/bb387037.aspx" rel="nofollow">MSDN Documentation</a> which has a slightly different approach. However, as before <code>XmlSchemaSet</code> doesn't exist, and neither does <code>XDocument.Validate()</code>. I have also searched several of the <a href="https://github.com/aspnet" rel="nofollow">ASP.NET projects</a> for an example but can't seem to find any.</p>  <p>What facilities (if any) exist in DNX Core 5.0 to validate XML against an XSD? I would prefer to do this using streams if possible, but if absolutely necessary I will accept an approach that reads the entire documents into memory at once.</p>