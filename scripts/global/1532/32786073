<p>I am testing switching from .NET version 4.5.1 to 4.6 and ran into an NullReferenceExceptionin the xsd validation when using an unique constraint on an optional attribute.</p>  <pre><code>at System.Xml.Schema.KeySequence.ToString() at System.Xml.Schema.XmlSchemaValidator.EndElementIdentityConstraints(Object typedValue, String stringValue, XmlSchemaDatatype datatype) at System.Xml.Schema.XmlSchemaValidator.InternalValidateEndElement(XmlSchemaInfo schemaInfo, Object typedValue) at System.Xml.XsdValidatingReader.ProcessEndElementEvent() at System.Xml.XsdValidatingReader.ProcessElementEvent() at System.Xml.XsdValidatingReader.ProcessReaderEvent() at System.Xml.XsdValidatingReader.Read() at ConsoleApplication.Program.Main(String[] args) </code></pre>  <p>This is stripped code which runs when targeting v4.5.x but fails with a NullReferenceException when using 4.6. (Tested on Win7 with VS2013 and VS2015). Is this legal in xml? Even if not it should raise some XmlException.</p>  <p>Schema:</p>  <pre><code>&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"&gt;   &lt;xs:element name="Enumerations"&gt;     &lt;xs:complexType&gt;       &lt;xs:sequence&gt;         &lt;xs:element name="Enum" minOccurs="0" maxOccurs="unbounded"&gt;           &lt;xs:complexType&gt;             &lt;xs:attribute name="id" type="xs:string" use="optional"/&gt;           &lt;/xs:complexType&gt;         &lt;/xs:element&gt;       &lt;/xs:sequence&gt;     &lt;/xs:complexType&gt;     &lt;xs:unique name="unique_EnumId_contraint"&gt;       &lt;xs:selector xpath="Enum"/&gt;       &lt;xs:field xpath="@id"/&gt;     &lt;/xs:unique&gt;   &lt;/xs:element&gt; &lt;/xs:schema&gt; </code></pre>  <p>XML:</p>  <pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt; &lt;Enumerations&gt;   &lt;Enum /&gt;   &lt;Enum /&gt; &lt;/Enumerations&gt; </code></pre>  <p>C# code:</p>  <pre><code>var settings = new XmlReaderSettings(); settings.ValidationType = ValidationType.Schema; settings.Schemas.Add(null, "enumerations.xsd");  using (var xmlReader = XmlReader.Create("enumerations.xml", settings)) {     while (xmlReader.Read())     {         if (xmlReader.NodeType == XmlNodeType.Element)         {             Console.CursorLeft = xmlReader.Depth * 4;             Console.WriteLine(xmlReader.Name);         }     } } </code></pre>