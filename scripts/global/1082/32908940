<p>I am using <strong>Nimbus</strong> LnF. I have the following method to set the custom color when my TextField is <strong>disabled</strong>, and also add <strong>focusListener</strong> and <strong>mouseListener</strong> to change the TextField color (saying WHITE) when focus is gain or mouse is moved in. </p>  <p>I found the custom UIDefaults for the <strong>"TextField.disabled"</strong> color will disable (make it not work) the <strong>setBackground</strong>(), which are used to change the color when focus is gained and mouse is in. </p>  <p>I also tried <strong>"TextField[Disabled].backgroundPainter"</strong>. It is the same.</p>  <p>Why we set one custom color will disable another color setting?</p>  <pre><code>public void setBackgroundColorDisabled(Color bkgColor)     {         if (!isAddedListeners)         {             isAddedListeners = true;              if (RuntimeInfoMgr.getIsNimbus())             {                 UIDefaults thisFieldUIDefaults = new UIDefaults();                 thisFieldUIDefaults.put("TextField.disabled", bkgColor);                 putClientProperty("Nimbus.Overrides", thisFieldUIDefaults);                 putClientProperty("Nimbus.Overrides.InheritDefaults", false);             }              addFocusListener(new FocusListener()             {                 @Override                 public void focusGained(FocusEvent e)                 {                     setBackground(focusedColor);                 }                  /**                  * Invoked when a component loses the keyboard focus.                  */                 @Override                 public void focusLost(FocusEvent e)                 {                     setBackground(parentPanel.getBackground());                 }             });              addMouseListener(new MouseAdapter()             {                 @Override                 public void mouseEntered(MouseEvent e)                 {                     setBackground(focusedColor);                     if (isEditable)                     {                         setCursor(handCursor);                     }                 }                  @Override                 public void mouseExited(MouseEvent e)                 {                     if (!isEditable || !TableCompTextFieldLabel.this.isFocusOwner())                     {                         setBackground(parentPanel.getBackground());                     }                     if (isEditable)                     {                         setCursor(defaultCursor);                     }                 }             });         }     } </code></pre>