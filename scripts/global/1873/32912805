<p>I have created a HexagonButton by using Styles and ControlTemplates. At this moment the HexagonButton background is blue. </p>  <p>I would like to have possibility to set its background color at the moment of loading the button or at least when put it to the canvas. Unfortunaty when I put button to the canvas and try to change Background to other color for example to Red all effects connected to IsMouseOver, IsPressed do not work.</p>  <p>Is it possible to connect this </p>  <pre><code>&lt;Polygon x:Name="HexagonPolygon" Points="1,0 0.50046, 0.86576 -0.50046, 0.86576 -1,0 -0.50046,-0.86576 0.50046,-0.86576" Fill="{TemplateBinding Background}"  Stroke="{TemplateBinding Background}" StrokeThickness="2" Stretch="Uniform"/&gt; </code></pre>  <p>with this</p>  <pre><code>        &lt;Button Name ="OO" Width="100" Height="100"  Background ="Red" Canvas.Left="176" Canvas.Top="120" Click="Button_Click"/&gt; </code></pre>  <p>I don't really understand how I could solve my problem and need some advise to continue my attempts in right direction. Should I create a user control or something like that?</p>  <p>Or may be it is possible to solve this problem with DynamicResources, but how. </p>  <p>Here is the whole code.</p>  <pre><code>&lt;Window x:Class="ForthHexagonButtonWR.MainWindow"     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"     xmlns:d="http://schemas.microsoft.com/expression/blend/2008"     xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"     xmlns:local="clr-namespace:ForthHexagonButtonWR"     mc:Ignorable="d"     Title="MainWindow" Height="350" Width="525"&gt; &lt;Window.Resources&gt;      &lt;ResourceDictionary&gt;         &lt;RadialGradientBrush RadiusX="1" RadiusY="1" GradientOrigin="0.5,0.5" x:Key="HighlightBackground"  &gt;             &lt;GradientStop Color="White" Offset="0" /&gt;             &lt;GradientStop  Color="Blue" Offset=".6" /&gt;         &lt;/RadialGradientBrush&gt;          &lt;RadialGradientBrush RadiusX="1" RadiusY="1" GradientOrigin="0.5,0.5" x:Key="PressedBackground"&gt;             &lt;GradientStop Color="White" Offset="0" /&gt;             &lt;GradientStop  Color="Blue" Offset="1" /&gt;         &lt;/RadialGradientBrush&gt;          &lt;SolidColorBrush x:Key="DefaultBackground" Color="Blue" &gt;&lt;/SolidColorBrush&gt;         &lt;SolidColorBrush Color="Gray" x:Key="DisabledBackground"&gt;&lt;/SolidColorBrush&gt;          &lt;RadialGradientBrush RadiusX="1" RadiusY="1" GradientOrigin="0.5,0.5" x:Key="Border"&gt;             &lt;GradientStop Color="White" Offset="0" /&gt;             &lt;GradientStop Color="Blue" Offset="1" /&gt;         &lt;/RadialGradientBrush&gt;          &lt;!-- The style that applies the button control template. --&gt;         &lt;Style TargetType="{x:Type Button}" &gt;             &lt;Setter Property="Template" &gt;                 &lt;Setter.Value&gt;                     &lt;ControlTemplate TargetType="{x:Type Button}" &gt;                         &lt;Polygon x:Name="HexagonPolygon" Points="1,0 0.50046, 0.86576 -0.50046, 0.86576 -1,0 -0.50046,-0.86576 0.50046,-0.86576" Fill="{TemplateBinding Background}"  Stroke="{TemplateBinding Background}" StrokeThickness="2" Stretch="Uniform"/&gt;                     &lt;/ControlTemplate&gt;                 &lt;/Setter.Value&gt;             &lt;/Setter&gt;             &lt;Setter Property="BorderBrush" Value="{StaticResource Border}"&gt;&lt;/Setter&gt;             &lt;Setter Property="Background"  Value="{StaticResource DefaultBackground}"&gt;&lt;/Setter&gt;             &lt;Style.Triggers&gt;                 &lt;Trigger Property="IsMouseOver" Value="True"&gt;                     &lt;Setter Property="Background" Value="{StaticResource HighlightBackground}" /&gt;                 &lt;/Trigger&gt;                 &lt;Trigger Property="IsPressed" Value="True"&gt;                      &lt;Setter Property="Background" Value="{StaticResource PressedBackground}" /&gt;                 &lt;/Trigger&gt;                 &lt;Trigger Property="IsEnabled" Value="False"&gt;                     &lt;Setter Property="Background" Value="{StaticResource DisabledBackground}"&gt;&lt;/Setter&gt;                 &lt;/Trigger&gt;             &lt;/Style.Triggers&gt;         &lt;/Style&gt;     &lt;/ResourceDictionary&gt; &lt;/Window.Resources&gt;  &lt;Canvas&gt;     &lt;Button Name ="OO" Width="100" Height="100"  Canvas.Left="176" Canvas.Top="120" Click="Button_Click"/&gt;     &lt;Button Name ="O1" Width="100" Height="100"  Canvas.Left="176" Canvas.Top="34" Click="Button_Click"/&gt;     &lt;Button Name ="O2" Width="100" Height="100"  Canvas.Left="250" Canvas.Top="76" Click="Button_Click"/&gt;     &lt;Button Name ="O3" Width="100" Height="100"  Canvas.Left="251" Canvas.Top="162" Click="Button_Click"/&gt;     &lt;Button Name ="O4" Width="100" Height="100"  Canvas.Left="177" Canvas.Top="206" Click="Button_Click"/&gt;     &lt;Button Name ="O5" Width="100" Height="100"  Canvas.Left="103" Canvas.Top="162" Click="Button_Click"/&gt;     &lt;Button Name ="O6" Width="100" Height="100"  Canvas.Left="101" Canvas.Top="76" Click="Button_Click"/&gt; &lt;/Canvas&gt; </code></pre>  <p></p>