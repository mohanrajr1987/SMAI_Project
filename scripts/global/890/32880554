<p>I am trying to change a class attribute, which is styleClass in JSF terms for JSF components. To be more clear I am clicking on an anchor which in turn is supposed to toggle an image to an image that is checked (which is an image itself).  Making the class of the image element into "off" when the page loads is no problem; that is the desired result.</p>  <p>But what I am trying to is when I click on the link, the image element that is being contained, should switch out the images through the JSF/Java managed bean code (which it does); but the JavaScript that I coded should take care of changing the class name from "off" into "on" when the "-check" version of the image is shown, does not work. It seems as though when I switch out from  the regular image to a "-check" version of the image, JSF has some built-in JavaScript executing which negates/nullifies my JavaScript code to remove the "off" class name and add the "on" class name when I click on the link.</p>  <p>I understand that the switching of the images and the changing of the class name is done through 2 different methodologies, (JSF/Java &amp; JavaScript/jQuery) at the same time. I need the class name as a flag to store which elements are checked; and eventually use to display certain 3D models based on what's been "checked". Checking isn't done through check boxes, but shown through the changing of images inside the anchors for a particular UX effect.</p>  <p>I need the Java/JSF way of switching out the images, because the boolean values help with sending out information in an e-mail (describing what's been "checked").</p>  <p>The jQuery library version is 1.11.0.</p>  <p>Hopefully I explained this situation well; if not let me know how to change/clear up the post for everyone's convenience.</p>  <p>JSF</p>  <pre><code>&lt;h:panelGroup id="taTab" class="icon-choices taTab" layout="block"&gt;     &lt;p:commandLink actionListener="#{buildYourOwnView.toggleBestAthlete}" title="Best Athlete" update="taTab"&gt;         &lt;h:graphicImage library="images" name="#{buildYourOwnView.bestAthlete ? 'best-athlete.png' : 'best-athlete-check.png'}"  alt="Best Athlete"/&gt;     &lt;/p:commandLink&gt;     &lt;p:commandLink actionListener="#{buildYourOwnView.toggleResengine}" title="Res-Engine" update="taTab"&gt;         &lt;h:graphicImage library="images" name="#{buildYourOwnView.resengine ? 'res-engine-check.png': 'res-engine.png'}"  alt="Res-Engine"/&gt;     &lt;/p:commandLink&gt;  &lt;/h:panelGroup&gt; </code></pre>  <p>Java file</p>  <pre><code>package com.website.presentation;  import javax.faces.bean.ManagedBean; import javax.faces.bean.ViewScoped;  @ManagedBean @ViewScoped public class BuildYourOwnView {  private boolean bestAthlete=false; private boolean resengine=false;  /**  * Creates a new instance of BuildYourOwnView  */ public BuildYourOwnView() { }  public void toggleBestAthlete() {     bestAthlete = !bestAthlete; }  public void toggleResengine() {     resengine = !resengine; }  public boolean isBestAthlete() {     return bestAthlete; }  public void setBestAthlete(boolean bestAthlete) {     this.bestAthlete = bestAthlete; }  public boolean isResengine() {     return resengine; }  public void setResengine(boolean resengine) {     this.resengine = resengine; } </code></pre>  <p>}</p>  <p>JavaScript</p>  <pre><code>if($(this).parent(".taTab").children("a").children("img:not([class])")) {     $(this).parent(".taTab").children("a").children("img").addClass("off"); }  $(".icon-choices &gt; a").click(function() {     console.log("hello");     if($(this).parent().hasClass("taTab")) {          console.log("tag");         $(this).parent(".taTab").children("a").children("img").each(function() {             console.log("one each img iteration");              if($(this).parent(".taTab").children("a").children("img").hasClass("off")) {                 $(this).parent(".taTab").children("a").children("img").removeClass("off").addClass("on");                 console.log("Off to on");             }             else if ($(this).parent(".taTab").children("a").children("img").hasClass("on")) {                 $(this).parent(".taTab").children("a").children("img").removeClass("on").addClass("off");                 console.log("On to off");              }         });     } }); </code></pre>