<p>I'm studying EJB and JSF. Information collected from various sources (including SO) made me understand this three points:</p>  <ol> <li>Stateful Session Beans have nothing to do with the HTTP session.</li> <li>However, a SFSB can be injected into a session scoped managed bean to maintain conversational state that is related to the business logic of an application.</li> <li>Moreover, CDI makes it possible to store a SFSB directly in the HTTP session for use inside EL expressions.</li> </ol>  <p>What is unclear to me is what happens to the SFSB (directly or indirectly stored in the HTTP session) when:</p>  <ol> <li>The HTTP session expires or gets invalidated. I suppose that the SFSB, like any POJO left without references, would be garbage collected without waiting for it to timeout.</li> <li>The SFSB timeouts but some session scoped managed bean still has a reference to it.</li> <li>The @Remove method of the SFSB was called but some session scoped managed bean still has a reference to it.</li> <li>The managed bean is serialized by the container to save resources, eventually while the SFSB is in the passivated state.</li> <li>The managed bean is deserialized by the container to restore the HTTP session, eventually while the SFSB is in the passivated state. </li> </ol>