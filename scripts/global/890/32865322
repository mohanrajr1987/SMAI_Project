<p>I have read that JSF managed beans are Singleton in nature by default. I have a doubt regarding this. If I have two Java class A and B like this:</p>  <pre><code>class A {      private B b1;      private B b2;      private B b3;      here getters ans setters  }  class B {      String a;      getters and setters  } </code></pre>  <p>And My JSF faces-config.xml:</p>  <pre><code>    &lt;managed-bean&gt;                 &lt;managed-bean-name&gt;bean_A&lt;/managed-bean-name&gt;                 &lt;managed-bean-class&gt;...&lt;/managed-bean-class&gt;                 &lt;managed-bean-scope&gt;request&lt;/managed-bean-scope&gt;              &lt;managed-property&gt;                 &lt;property-name&gt;b1&lt;/property-name&gt;                 &lt;value&gt;#{bean_B}&lt;/value&gt;             &lt;/managed-property&gt;             &lt;managed-property&gt;                 &lt;property-name&gt;b2&lt;/property-name&gt;                 &lt;value&gt;#{bean_B}&lt;/value&gt;             &lt;/managed-property&gt;             &lt;managed-property&gt;                 &lt;property-name&gt;b3&lt;/property-name&gt;                 &lt;value&gt;#{bean_B}&lt;/value&gt;             &lt;/managed-property&gt;     &lt;/managed-bean&gt;      &lt;managed-bean&gt;                 &lt;managed-bean-name&gt;bean_B&lt;/managed-bean-name&gt;                 &lt;managed-bean-class&gt;...&lt;/managed-bean-class&gt;                 &lt;managed-bean-scope&gt;none&lt;/managed-bean-scope&gt;      &lt;/managed-bean&gt; </code></pre>  <p><strong>So In above scenario b1, b2 and b3 in class A, would refer to same object or container will manage to assign them three different objects?</strong></p>