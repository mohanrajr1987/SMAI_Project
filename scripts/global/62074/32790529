<p>I have a javascript project using RequireJS.  I have a <strong>d3-and-svg.js</strong> file, and here is a preview of it:</p>  <pre><code>var nodes = {     "at":   {id: "at", importance: 1, type: 'exercise', displayName: 'pigeonhole principal'},     "b":    {id: "b", importance: 8, type: "theorem", displayName: 'pigeonhole theorem'}, },     links = []  var width = $(window).width(),     height = $(window).height()  var force = d3.layout.force()     .nodes(nodes) // here is where the nodes go in     .links(links)     .size([width, height])     .charge(-400)     .linkStrength(0.2)     .gravity(0.05)     .on('tick', updateSVGNodeAndLinkPositions) </code></pre>  <p>I have modified my <strong>d3</strong> library to accept hashes, like so:</p>  <pre><code>force.nodes = function(x) {   if (!arguments.length) return nodes;   // setup helper function   function hash_to_array(hash) {     var array = [];     for( key in hash ){ if( hash.hasOwnProperty(key) ){       array.push( hash[key] );     }}     return array;   };   nodes = hash_to_array(x); // this means that .nodes() takes a HASH as input and uses the values   // nodes = x; // what it used to say   return force; }; </code></pre>  <p>And in my <strong>main.js</strong> file, I kickoff the d3 force animation, like so:</p>  <pre><code>d3AndSVG.processNewGraph(); </code></pre>  <p>and it WORKS!  It WORKS!  But the funny thing is, if I replace <code>nodes</code> with an empty hash in my <strong>d3-and-svg.js</strong> file, and then populate it via my <strong>main.js</strong> file instead, like so:</p>  <pre><code>d3AndSVG.nodes = {     "at":   {id: "at", importance: 1, type: 'exercise', displayName: 'pigeonhole principal'},     "b":    {id: "b", importance: 8, type: "theorem", displayName: 'pigeonhole theorem'}, } d3AndSVG.processNewGraph(); </code></pre>  <p>Then it does NOT work.  Why not?  The only thing I can think of is that the values of the hash are references, and <strong>d3-and-svg.js</strong> can't access them when they are in the other file.  But I am not sure about this, nor can I think of a good solution.</p>