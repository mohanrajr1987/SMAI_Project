<p>I have been facing a problem for several days. I have this index.html file : </p>  <pre><code>&lt;html&gt;  &lt;head&gt;&lt;/head&gt;  &lt;body ng-cloak&gt;   &lt;div id="myModule" data-ng-view&gt;    &lt;myDirective&gt;&lt;/myDirective&gt;   &lt;/div&gt;   &lt;script data-main="./scripts/require.config.js" src="./libs/require.js"&gt;&lt;/script&gt;  &lt;/body&gt; &lt;/html&gt; </code></pre>  <p><em>index.html</em></p>  <p>So, what is the problem ? Well, the "myDirective" directive does not work at all.</p>  <p>Because I am using RequireJS, I want to wait for the DOM to be fully loaded before manually bootstraping Angular :</p>  <pre><code>/// &lt;reference path="definitions/angular/angular.d.ts" /&gt; /// &lt;reference path="definitions/requirejs/require.d.ts" /&gt;  require.config( {     paths:  {         jquery:  "lib/vendor/jquery/jquery",         angular:  "lib/vendor/angular/angular",         domReady: "lib/vendor/requirejs/domReady"     },     shim:  {         "angular":  {exports:  "angular"}     },     deps: ['./bootstrap'] }); </code></pre>  <p><em>require.config.js</em></p>  <p>Okay so I set my paths and dependencies (bootstrap.js) and then, I ensure the DOM is fully loaded : </p>  <pre><code>/// &lt;reference path="definitions/requirejs/require.d.ts" /&gt; /// &lt;reference path="definitions/angular/angular.d.ts" /&gt;  define(["require", "angular", "app"], function (require: any, angular: any, app: any) {  console.log("Bootstrap script");   require(["domReady!"], function (document: any) {   app.appModule();   console.log("Bootstraping");   angular.bootstrap(document, ["MyModule"]);   console.log("Bootstrapping ok");  }); }); </code></pre>  <p><em>bootstrap.js</em></p>  <p>You can see here that I wait for the DOM to be ready to :  1- run my app.js file 2- bootstrap my application</p>  <p>So here is the last file :</p>  <pre><code>/// &lt;reference path="definitions/angular/angular.d.ts" /&gt;  import angular = require("angular"); import srv1 = require("./services/service1"); import srv2 = require("./services/service2"); import srv3 = require("./services/service3"); import myDrt = require("./directives/myDrt");  export var appModule: any; appModule = function(): void{     var app:  ng.IModule;      try {         console.log("Creating MyModule module");         app = angular.module("MyModule", []);         console.log("MyModule module created");     } catch (e) {         try {             console.log("MyModulemodule already created");             app = angular.module("MyModule");             console.log("MyModule module created");         } catch (e) {             console.log("MyModule module not created. Failure.");             console.error(e);         }     } finally {         try {             console.log("Creating service1");             app.service(srv1.service1.IID, ["$http", "$q", srv1.service1]);             console.log("Creating service2");             app.service(srv2.service2.IID, ["$http", srv2.service2]);             console.log("Creating service3");             app.service(srv3.service3.IID, [srv1.service1.IID, srv3.service3]);             app.factory(myDrt.MyDirective.IID, myDrt.MyDirective.factory());             console.log("Services and directives created");           } catch (e) {             console.log("Failure.");             console.error(e);         }      } }; </code></pre>  <p><em>app.js</em></p>  <p>Fact is, the MyDirective code is as following : </p>  <pre><code>/// &lt;reference path="../definitions/angular/angular.d.ts"&gt; import myCtrl = require("../controllers/myController");  export class MyDirective implements ng.IDirective {     static IID = "myDirective";      restrict = "E";     templateURL = "my-template.html";     controller = myCtrl.MyController.factory();     controllerAs = "myController";      static factory(): ng.IDirectiveFactory {         const directive = () =&gt; new MyDirective();         return directive;     } } </code></pre>  <p>Please also note that I am developping with TypeScript.</p>  <p>Your help would be very appreciated.</p>