<pre><code>package d;  import java.io.BufferedInputStream; import java.io.BufferedOutputStream; import java.io.BufferedReader; import java.io.BufferedWriter; import java.io.File; import java.io.FileInputStream; import java.io.FileNotFoundException; import java.io.FileOutputStream; import java.io.IOException; import java.io.InputStream; import java.io.InputStreamReader; import java.io.OutputStream; import java.io.OutputStreamWriter; import java.io.PrintStream; import java.io.RandomAccessFile; import java.net.ServerSocket; import java.net.Socket; import java.net.UnknownHostException;  import org.w3c.dom.Element;  import javax.net.SocketFactory; import javax.net.ssl.*;  import com.sun.net.ssl.*;  import java.security.Security; import java.util.Arrays;  //sock public class SockActions {     public final static int SOCKET_PORT = 13267;      // you may change this     public final static String SERVER = "127.0.0.1";  // localhost      public final static String RECEIVED_FILE = "c:\\s\\xmlCommandFileReceived.xml"; //xml file save by server     public final static String FILE_TO_SEND = "c:\\s\\xmlCommandFile.xml"; //xml file save by server     public final static String RECEIVED_IMG_FILE = "c:\\s\\image.jpg";  // you may change this       FileInputStream fis = null;     BufferedInputStream bis = null;     OutputStream os = null;     FileOutputStream fos = null;     BufferedOutputStream bos = null;     ServerSocket servsock = null;     SSLSocket sock;      SockActions() {//ssl setup         System.setProperty("javax.net.ssl.trustStore", "C:\\eclipseExport\\mykeystore");         SSLSocketFactory f = (SSLSocketFactory) SSLSocketFactory.getDefault();         try {             sock = (SSLSocket) f.createSocket(SERVER, SOCKET_PORT);         } catch (UnknownHostException e) {             e.printStackTrace();         } catch (IOException e) {             e.printStackTrace();         }       }       //UPPLOADS FILE TO CLIENT     public void upload() {         try {             System.out.println("Connecting...");             File myFile = new File("c:\\RHDSetup.log");             byte[] bytes = new byte[(int) myFile.length()];             BufferedInputStream bis = new BufferedInputStream(new FileInputStream(myFile));             bis.read(bytes, 0, bytes.length);             OutputStream os = sock.getOutputStream();             System.out.println("Sending RHDSetup.log (" + bytes.length + " bytes sent)");             os.write(bytes, 0, bytes.length);             os.write("*m1".getBytes());//Added headers for file type             os.write("$t0p".getBytes());//added stop string header              os.flush();             System.out.println("File sent successfully..");         } catch (FileNotFoundException e) {             e.printStackTrace();         } catch (IOException e) {             e.printStackTrace();         }      }       //file downloader     public int download() {         int fileType = 0;         try {             System.out.println("Connecting...");             byte[] bytes = new byte[1024 * 8];//size of bytes array             InputStream is = sock.getInputStream();//get socket stream             System.out.println("Receiving incoming file");             int bytesRead = 0;             int current = 0;             int totalBytes = 0;             byte[] cBytes = null;             BufferedOutputStream bos = null;             while (true) {                 bytesRead = is.read(bytes);//how many bytes were read                 current += bytesRead;                 if (new String(bytes).contains("1mag3")) {//header parser for image                     BufferedOutputStream bosi = new BufferedOutputStream(new FileOutputStream(new File(RECEIVED_IMG_FILE)));                     totalBytes = current - ("image".length());                     cBytes = Arrays.copyOfRange(bytes, 0, totalBytes);//copy bytes subtract 1mag3 bytes                     bosi.write(cBytes, 0, totalBytes);//save image                     System.out.println("Writing bytes to image file ...");                     bosi.flush();//output to file                     fileType = 1;//imae filetype is 1                     continue;                 }                 if (new String(bytes).contains("*m1")) {//check stop string                     totalBytes = current - "*m1".length();                     bos = new BufferedOutputStream(new FileOutputStream(new File(RECEIVED_FILE)));                     System.out.println("Writing bytes to xml file ...");                     bos.write(bytes, 0, totalBytes);//lll                     bos.flush();//output to file                     fileType = 2;//imae filetype is 1                     continue;                 }//exit loop if stop string found                 if (new String(bytes).contains("$t0p")) {//check stop string                     break;                 }             }             System.out.println("File downloaded (" + totalBytes + " bytes saved)");         } catch (FileNotFoundException e) {             e.printStackTrace();         } catch (IOException e) {             e.printStackTrace();         }         return fileType;     } } </code></pre>