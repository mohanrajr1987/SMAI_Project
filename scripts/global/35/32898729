<p>I am developing an application using Socket IO that needs to be scaled across multiple servers. This is being achieved through socket.io-redis, which essentially interconnects all of my servers running socket IO and treats Redis as a datastore that all of my servers/nodes running Socket IO publish messages from.</p>  <p>For better context, here is a diagram from MSDN that outlines my setup:</p>  <p><a href="http://i.stack.imgur.com/mqkp3.png" rel="nofollow"><img src="http://i.stack.imgur.com/mqkp3.png" alt="socketio setup"></a></p>  <p>Here's my issue:</p>  <p>If Client A sends a message only intended for Client C to receive, I feel it's a waste of bandwidth to publish a message to Client B and D. My idea is that I would, on the server-side, record user id's and their corresponding open socket id's. Then when a client sends a message, I would do do a lookup and find a user's socket id(s) and publish the messages. This seems fine and dandy as well as heavily reliant on a robust system to keep that table of user id's and socket id's up to date, but there are two questions I have about implementing this system:</p>  <p>1) Is it more memory efficient to emit messages to only relevant socket id's, rather than to an entire channel across every server? I realize that with 4 total clients, this problem is very small, but imagine if I had 2000 concurrent users across 2 servers. If 1 client sends a message intended for 2 clients, I imagine sending a message to 1997 other clients is more taxing than sending to just those 2 socket id's, unless "io.sockets.connected[socket_id].emit" is not efficient. Example below:</p>  <pre><code>socket.on('chat message', function(msg){     io.emit('chat message', msg); }); </code></pre>  <p>vs.</p>  <pre><code>for (i = 0; i &lt; relevant_sockets.length; i++) {      io.sockets.connected[relevant_sockets[i]].emit('chat message', msg); } </code></pre>  <p>2) Since I'm using multiple servers, are socket id's guaranteed to be unique? I'm hoping the redis module is handling this since it's entire purpose is to link processes and servers, but I just want to be sure.</p>  <p>Thanks ahead of time for any help.</p>