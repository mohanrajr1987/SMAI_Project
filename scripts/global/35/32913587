<p>So, I am creating a simple file transfer app. When I run it I get a Connection refused error. Now, there isn't a problem with the Firewall, because when I tried to run a sample code from the book I am following, it ran perfectly. The Server starts without error.</p>  <p>Server code:</p>  <pre><code>public class Server { final static int TRANSFER_PORT = 1215; final static int FILEINFO_PORT = 1216; static int filesize; static String filename;  public static void main(String[] args) throws IOException {     ServerSocket fileInfoSocket = new ServerSocket(FILEINFO_PORT);     try     {         System.out.println("Server Started");         Socket s = fileInfoSocket.accept();         System.out.println("Connected");         InputStream is = s.getInputStream();         DataInputStream dis = new DataInputStream(is);         filesize = dis.readInt();         filename = dis.readUTF();         s.close();     }     catch(IOException ioe)     {         System.out.println(ioe.getMessage());     }     System.out.println("File info received.");      ServerSocket fileTransferSocket = new ServerSocket(TRANSFER_PORT);     byte[] fileByteArray = new byte[filesize];     try     {         Socket s = fileTransferSocket.accept();         InputStream is = s.getInputStream();         BufferedInputStream bis = new BufferedInputStream(is);         bis.read(fileByteArray, 0, fileByteArray.length);         s.close();         FileOutputStream fos = new FileOutputStream(filename);         BufferedOutputStream bos = new BufferedOutputStream(fos);         bos.write(fileByteArray);         bos.flush();         bos.close();     }     catch(IOException ioe)     {         System.out.println(ioe.getMessage());     }     System.out.println("Transfer complete!"); } </code></pre>  <p>Client code:</p>  <pre><code>public class Client { final static int FILEINFO_PORT = 1216; final static int TRANSFER_PORT = 1215; final static String SERVER_ADDR = "localhost"; static int filesize; static String filename;  public static void main(String[] args) throws IOException {     if(args.length != 1)     {         System.out.println("Usage: Client filename");         return;     }      File file = new File(args[0]);     if(!file.isFile())     {         System.out.println("File not found!");         return;     }     filesize = (int) file.length();     filename = file.getName();      Socket fileInfoSocket = new Socket(SERVER_ADDR, FILEINFO_PORT);     try     {         OutputStream os = fileInfoSocket.getOutputStream();         DataOutputStream dos = new DataOutputStream(os);         dos.writeInt(filesize);         dos.writeUTF(filename);         dos.close();     }     catch(IOException ioe)     {         System.out.println(ioe.getMessage());     }      Socket fileTransferSocket = new Socket(SERVER_ADDR, TRANSFER_PORT);     try     {         OutputStream os = fileTransferSocket.getOutputStream();         BufferedOutputStream bos = new BufferedOutputStream(os);         FileInputStream fis = new FileInputStream(filename);         byte[] byteArray = new byte[filesize];         BufferedInputStream bis = new BufferedInputStream(fis);         bis.read(byteArray, 0, byteArray.length);         bos.write(byteArray);         bos.flush();         bos.close();     }     catch(IOException ioe)     {         System.out.println(ioe.getMessage());     } } </code></pre>  <p>Error on Terminal when Client is run:</p>  <pre><code>pratyush@SuperComputer:~/JP/NetworkFileTransfer/Server$ java Client "a.png" Exception in thread "main" java.net.ConnectException: Connection refused     at java.net.PlainSocketImpl.socketConnect(Native Method)     at     java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:345)     at     java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)     at     java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)     at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)     at java.net.Socket.connect(Socket.java:589)     at java.net.Socket.connect(Socket.java:538)     at java.net.Socket.&lt;init&gt;(Socket.java:434)     at java.net.Socket.&lt;init&gt;(Socket.java:211)     at Client.main(Client.java:54) </code></pre>