<p>I've got myself a bit confused here, so I'm looking for a bit of guidance.</p>  <p>Basically, I have an app which talks to an API and gather information on 'Tours'. The first request retrieves the 3 tours (ID and Name) and stores it in a database, the second request should then loop through the 3 tours (using the Tour Detail API endpoint) and get the information (including lon/lat details) of each tour.</p>  <p>Now, that works fine.</p>  <p>The problem I am having, is that each tour has it's own ID number. Unfortunately, the second and third tours are using the same ID number as the 1st when they go into the database.</p>  <p>So I'm guessing I'm not passing in the ID correctly.</p>  <p>Can anyone help to get this looping round properly?</p>  <p>Code below for the whole function....</p>  <pre><code>// get tours and add them to DB function loadTours() {      // get the species data     var loader = Titanium.Network.createHTTPClient({         timeout: 30000 /* in milliseconds */     });      loader.onload = function() {         // get the JSON response         var tours = JSON.parse(this.responseText);          var db = Ti.Database.open('myDB');         // truncate the tours table         db.execute('DELETE FROM tours');          for (var i = 0; i &lt; tours.length; i++) {              // Get the data from the feed             var tourID = tours[i].nid;             var tourTitle = tours[i].node_title.toUpperCase();              Ti.API.info(tourID + ' ' + tourTitle);               // check if images have been uploaded             if (tours[i].app_image.uri) {                 // removed             } else {                 var tourImageFullPath = "";             }               // add the tours to the SQL             db.execute('INSERT INTO tours (tourNID, tourName, tourImageURI) VALUES (?,?,?)', tourID, tourTitle, tourImageFullPath);              // lets do a loop through and insert the tour details             var getTourDetails = Titanium.Network.createHTTPClient({                 timeout: 30000 /* in milliseconds */             });              getTourDetails.onload = function() {                 var tourDetails = JSON.parse(this.responseText);                 db.execute('DELETE FROM tourdetails');                 for (var i = 0; i &lt; tourDetails.length; i++) {                     var tourNID = tourID;                     var tourSpeciesID = tourDetails[i].node_field_data_field_tour_item_nid;                     var tourType = tourDetails[i].node_field_data_field_tour_item_type;                      if (tourDetails[i].Latitude.length === 0){                         var tourLat = '';                     } else {                         var tourLat = tourDetails[i].Latitude;                     }                      if (tourDetails[i].Longitude.length === 0){                         var tourLon = '';                     } else {                         var tourLon = tourDetails[i].Longitude;                     }                      if (tourDetails[i].node_field_data_field_tour_item_type.length === 0){                         var tourItemType = '';                     } else {                         var tourItemType = tourDetails[i].node_field_data_field_tour_item_type;                     }                      var tourItemTitle = tourDetails[i].node_field_data_field_tour_item_title.toUpperCase();                     db.execute('INSERT INTO tourdetails (tourNID, tourItemID, tourLon, tourLat, tourItemTitle, tourItemType) VALUES (?,?,?,?,?,?)', tourNID, tourSpeciesID, tourLon, tourLat, tourItemTitle, tourItemType);                     Ti.API.info('TOUR: ' + tourNID + ' ' + tourSpeciesID + ' ' + tourLon + ' ' + tourLat + ' ' + tourItemTitle + ' ' + tourItemType);                 }             };              getTourDetails.open("GET", "https://www.myapi.com/tour?nid=" + tourID);              // change the loading message             MainActInd.message = 'Downloading Data';             // show the indicator             MainActInd.show();              getTourDetails.send();          }          // now load the map markers         getMapMarkers();      }; //onload - end the JSON fetch and process for species      // Sets the HTTP request method, and the URL to get data from     loader.open("GET", "https://www.myapi.com/tours");      // change the loading message     MainActInd.message = 'Downloading Data';     // show the indicator     MainActInd.show();      loader.onerror = function() {         // do something if an error         MainActInd.hide();         //alert('tours data error');          var errorDialog = Ti.UI.createAlertDialog({             message: 'We are having an issue importing the Tour data. Please try again later.',             title: 'Whoops'         });          errorDialog.show();       };      // Send the HTTP request     loader.send();  }; // end the get data function </code></pre>  <p>I've had to mask out  a few things for security reasons, but you should get the idea of what I'm trying to achieve!</p>  <p>Any help would be greatly appreciated!</p>  <p>Simon</p>