<p>In Titanium Studio, I'm developing an Android app. I have a TableView that has rows that overflow beyond the page's height. One column of the table has a label that I want to rotate 270 degrees so that the text in it is vertical.</p>  <p>I am rotating the text like this:</p>  <pre><code>tr = Ti.UI.create2DMatrix(); tr = tr.rotate(270);  var label = Titanium.UI.createLabel({     ...     ...     transform: tr }); </code></pre>  <p>However, this transform seems to only apply to labels that are in sight. When I scroll down the table, the labels in the table that were previously beyond the page's height are still horizontal. When I scroll back to the top of the table, the labels that <em>had</em> successfully rotated initially are back to being horizontal.</p>  <p>I tried using scroll, scrollend, dragstart, and dragend events to re-transform labels once they have been scrolled to, but this method does not consistently work. When it does work, it is ugly because the labels, when scrolled to, are initially horizontal, and the user can see the animation of them being transformed a few seconds later.</p>  <p>How can I avoid this and keep all of the labels rotated vertically from the start? Is there a better method of rotating labels?</p>  <p><strong>Additional thoughts</strong>: The thing I find the oddest is that the labels/text have been created else they would not appear when I scroll down the table. They are the proper color and size. If the color and size properties are being properly applied, then why would transform not be? I even tried changing</p>  <pre><code>transform: tr </code></pre>  <p>to</p>  <pre><code>transform: Ti.UI.create2DMatrix({rotate:270}) </code></pre>  <p>which I imagine is the same thing as</p>  <pre><code>transform: Ti.UI.create2DMatrix().rotate(270) </code></pre>  <p>which also did not work.</p>