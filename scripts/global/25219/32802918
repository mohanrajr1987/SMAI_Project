<p>Issues: </p>  <p>Text fields are not accepting characters.</p>  <p><code>shouldChangeCharactersInRange</code> not being called for all 3 text fields.</p>  <p>I have 3 delegate classes implemented just like in <code>main</code>. With all the methods implemented exactly as the delegate methods are implemented in <code>main</code>. All the other methods except <code>shouldChangeCharactersInRange</code> are called during run-time. The editbox simply isn't accepting any character. </p>  <pre><code>import UIKit  class ViewController: UIViewController , UITextFieldDelegate{      @IBOutlet weak var textField1: UITextField!     @IBOutlet weak var textField2: UITextField!     @IBOutlet weak var textField3: UITextField!      var t1Delegate : text1Delegate!     var t2Delegate : text2Delegate!     var t3Delegate : text3Delegate!      override func viewDidLoad() {                 t2Delegate = text2Delegate()         textField2.delegate = t2Delegate      }     override func viewDidAppear(animated: Bool) {         textField1.delegate = self         textField1.becomeFirstResponder()         t3Delegate = text3Delegate()         textField3.delegate = t3Delegate         super.viewDidLoad()        }     func textField (textField :  UITextField, shouldChangeCharactersInRange range:  NSRange, replacementString string:  String  )  -&gt;  Bool {         print("*. Should change text.")         return true;        }     // UITextField Delegates     func textFieldDidBeginEditing(textField: UITextField) {         print("*. TextField did begin editing method called")     }     func textFieldDidEndEditing(textField: UITextField) {         print("*. TextField did end editing method called")     }     func textFieldShouldBeginEditing(textField: UITextField) -&gt; Bool {         print("*. TextField should begin editing method called")         return true;     }     func textFieldShouldClear(textField: UITextField) -&gt; Bool {         print("*. TextField should clear method called")         return true;     }     func textFieldShouldEndEditing(textField: UITextField) -&gt; Bool {         print("*. TextField should end editing method called")         return true;     }      func textFieldShouldReturn(textField: UITextField) -&gt; Bool {         print("*TextField should return method called")         textField.resignFirstResponder();         return true;     } } </code></pre>