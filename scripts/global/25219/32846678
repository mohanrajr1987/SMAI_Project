<p>I'm using UITextField because I want to have a custom pop-up keyboard. However, I don't want the user to be able to change the insertion point or have access to the copy, paste menu.</p>  <p>I have found two useful stackoverflow questions, and attempted to implement them:</p>  <ul> <li><p><a href="http://stackoverflow.com/questions/866200/disable-magnifying-glass-in-uitextfield">Disable Magnifying Glass in UITextField</a></p>  <p><a href="http://stackoverflow.com/questions/616411/iphone-how-to-handle-touches-on-a-uitextview/8211944#8211944">(iPhone) How to handle touches on a UITextView?</a></p></li> </ul>  <p>I have removed the menu by subclassing the UITextField and implementing the method:</p>  <pre><code>- (BOOL)canPerformAction:(SEL)action withSender:(id)sender {     return NO; } </code></pre>  <p>However, I have failed to stop the field from being selected when the user double taps it:</p>  <p>I have tried removing the gestureRecognizers which I believe to be responsible for the selection behaviour, but with no success. So what am I doing wrong? </p>  <pre><code>@property (nonatomic, strong) MinimalTextField *inputText; ... @synthesize inputText; ...  - (void)viewDidAppear:(BOOL)animated {     [super viewDidAppear: animated];         NSLog(@"%ld gestureRecognizers initially ", (long)inputText.gestureRecognizers.count);      for (UIGestureRecognizer *gestureRecognizer in inputText.gestureRecognizers) {                 if ([gestureRecognizer isKindOfClass:[UITapGestureRecognizer class]]) {             UITapGestureRecognizer *tapGestureRecognizer = (UITapGestureRecognizer *)gestureRecognizer;             if ([tapGestureRecognizer numberOfTapsRequired] == 2) {                 NSLog(@"found &amp; removed: %@", tapGestureRecognizer);                 [inputText removeGestureRecognizer:tapGestureRecognizer];             }         }         if ([gestureRecognizer isKindOfClass:[UILongPressGestureRecognizer class]]) {             UILongPressGestureRecognizer *longPressGestureRecognizer = (UILongPressGestureRecognizer *)gestureRecognizer;             NSLog(@"found &amp; removed: %@", longPressGestureRecognizer);             [inputText removeGestureRecognizer:longPressGestureRecognizer];         }     }      NSLog(@"%ld gestureRecognizers remaining", (long)inputText.gestureRecognizers.count);      for (UIGestureRecognizer *gestureRecognizer in inputText.gestureRecognizers) {         NSLog(@"gestureRecognizer: %@", gestureRecognizer);     } } </code></pre>  <p>This code produces the following output, so I know it is working, but it fails to affect the double tap action.</p>  <pre><code>7 gestureRecognizers initially  found &amp; removed: &lt;UITextTapRecognizer: 0x7ff6086571f0; state = Possible; delaysTouchesEnded = NO; view = &lt;MinimalTextField 0x7ff608414b10&gt;; target= &lt;(action=oneFingerDoubleTap:, target=&lt;UITextInteractionAssistant 0x7ff608652de0&gt;)&gt;; numberOfTapsRequired = 2&gt; found &amp; removed: &lt;UILongPressGestureRecognizer: 0x7ff608658180; state = Possible; delaysTouchesEnded = NO; view = &lt;MinimalTextField 0x7ff608414b10&gt;; target= &lt;(action=twoFingerRangedSelectGesture:, target=&lt;UITextInteractionAssistant 0x7ff608652de0&gt;)&gt;&gt; found &amp; removed: &lt;UIVariableDelayLoupeGesture: 0x7ff608658a40; state = Possible; delaysTouchesEnded = NO; view = &lt;MinimalTextField 0x7ff608414b10&gt;; target= &lt;(action=loupeGesture:, target=&lt;UITextInteractionAssistant 0x7ff608652de0&gt;)&gt;&gt;  4 gestureRecognizers remaining gestureRecognizer: &lt;UITextTapRecognizer: 0x7ff608653960; state = Possible; delaysTouchesEnded = NO; view = &lt;MinimalTextField 0x7ff608414b10&gt;; target= &lt;(action=oneFingerTripleTap:, target=&lt;UITextInteractionAssistant 0x7ff608652de0&gt;)&gt;; numberOfTapsRequired = 3&gt; gestureRecognizer: &lt;UITextTapRecognizer: 0x7ff6086576e0; state = Possible; delaysTouchesEnded = NO; view = &lt;MinimalTextField 0x7ff608414b10&gt;; target= &lt;(action=twoFingerSingleTap:, target=&lt;UITextInteractionAssistant 0x7ff608652de0&gt;)&gt;; numberOfTouchesRequired = 2&gt; gestureRecognizer: &lt;UITapAndAHalfRecognizer: 0x7ff608657c70; state = Possible; view = &lt;MinimalTextField 0x7ff608414b10&gt;; target= &lt;(action=tapAndAHalf:, target=&lt;UITextInteractionAssistant 0x7ff608652de0&gt;)&gt;&gt; gestureRecognizer: &lt;UITextTapRecognizer: 0x7ff6086585f0; state = Possible; delaysTouchesEnded = NO; view = &lt;MinimalTextField 0x7ff608414b10&gt;; target= &lt;(action=oneFingerTap:, target=&lt;UITextInteractionAssistant 0x7ff608652de0&gt;)&gt;&gt; </code></pre>  <p>I have even tried adding the following code to my subclass of UITextField:</p>  <pre><code>- (BOOL)gestureRecognizerShouldBegin:(UIGestureRecognizer *)gestureRecognizer {     NSLog(@"Gesture should begin");     if ([gestureRecognizer isKindOfClass:[UIRotationGestureRecognizer class]])         NSLog(@"rotate");     if ([gestureRecognizer isKindOfClass:[UIPinchGestureRecognizer class]])         NSLog(@"pinch");     if ([gestureRecognizer isKindOfClass:[UITapGestureRecognizer class]]) {         NSLog(@"tap");         NSLog(@"numberOfTouches: %ld", (long)gestureRecognizer.numberOfTouches);     }     if ([gestureRecognizer isKindOfClass:[UIPanGestureRecognizer class]])         NSLog(@"pan");     if ([gestureRecognizer isKindOfClass:[UILongPressGestureRecognizer class]])         NSLog(@"long");     if ([gestureRecognizer isKindOfClass:[UISwipeGestureRecognizer class]])         NSLog(@"swipe");     return YES; } </code></pre>  <p>However, there is no property gestureRecognizer.numberOfTaps available, so how can I tell how often it has been tapped.</p>