<p>In my view controller:</p>  <pre><code>class FoodAddViewController: UIViewController, UIPickerViewDataSource, UITextFieldDelegate, UIPickerViewDelegate {      let TAG = "FoodAddViewController"      // Retreive the managedObjectContext from AppDelegate     let managedObjectContext = (UIApplication.sharedApplication().delegate as! AppDelegate).managedObjectContext      @IBOutlet weak var foodName: UITextField!      @IBOutlet weak var foodPortion: UITextField!      @IBOutlet weak var foodCalories: UITextField!      @IBOutlet weak var foodUnit: UILabel!      @IBOutlet weak var unitPicker: UIPickerView!      @IBOutlet weak var unitPickerViewContainer: UIVisualEffectView!      /*         unrelated code has been ommited     */     func validateAllTextFields(textFields: [UITextField] = [foodName as UITextField, foodPortion, foodCalories]) -&gt; Bool {          var result = true         for textField in textFields {             result = validateTextField(textField) &amp;&amp; result         }         return result     }      func validateTextField(textField: UITextField) -&gt; Bool{         let correctColor = UIColor.redColor().CGColor, normalColor = UIColor.blackColor().CGColor         var correct = true          if textField == foodPortion || textField == foodCalories{             if !Misc.isInteger(textField.text!){                 correct = false             }         }         if textField.text!.isEmpty {             correct = false         }          textField.layer.borderColor = correct ? normalColor : correctColor          return correct     } } </code></pre>  <p>I have a few textfields, and in my validateTextField can verify one at a time, and I want my validateAllTextFields be able to verify a give list of textfield by checking them one by one, if the list is not given, I want to check a given default list that contains all three textfield. </p>  <p>The code I imagine to be something like:</p>  <pre><code>func validateAllTextFields(textFields: [UITextField] = [foodName as UITextField, foodPortion, foodCalories]) -&gt; Bool {      var result = true     for textField in textFields {         result = validateTextField(textField) &amp;&amp; result     }     return result } </code></pre>  <p>However Xcode gives an error back:</p>  <blockquote>   <p>instance member cannot be used on type viewcontroller</p> </blockquote>  <p>What's the cause and how to fix?</p>