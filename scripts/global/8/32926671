<p>I have a text file:</p>  <pre><code>In 0 John 66 In 1 May 77 In 0 Eliz 88 Out 0 Out 0 </code></pre>  <p>I'm trying to parse this text file using scanf, and at the moment send the values after "In" to the add function, however I'm getting a seg fault when trying to do this.</p>  <p>I have some code here: A struct in a seperate header file:</p>  <pre><code>typedef Officer test;  typedef struct {     test tests[6];     int s; } copList; </code></pre>  <p>And this one:</p>  <pre><code>typedef struct {     char name[25];     int id; } Officer; </code></pre>  <p>Then I have my main method</p>  <pre><code>int main(void) {     FILE * ptr;     char buffer [500];     char * temp;     int pos;     int grade;     char * name;     copList * L;       ptr = fopen("test.txt","r");     if(ptr == NULL)          exit(1);       temp = malloc(sizeof(char)*10);     name = malloc(sizeof(char)*10);     L = malloc(sizeof(copList));      while(fgets(buffer,500,ptr) != NULL) {         sscanf(buffer,"%s %d %s %d\n",temp,&amp;pos,name,&amp;grade);         add(L-&gt;tests[pos],pos,L); //this gives me a seg fault     }       free(name);     free(temp);     free(L);     fclose(ptr);     return 0; } </code></pre>  <p>In a separate c file I have the add function.(Can't be changed)</p>  <pre><code>void add(Test b, int pos, copList * L) { //code to be added here later... } </code></pre>  <p>I've tried allocating different amounts of memory, but that didn't help. Also I noticed if I set a value to pos, in the while loop, before the add function call, I don't get a seg fault, but obviously that's not what I want, because the value wouldn't change. Any help would be much appreciated. </p>