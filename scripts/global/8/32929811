<p>I have been attempting to wrap my head around an idea that I am certain is possible, I just am not sure if I am going about it in the right way. My intention is to create an array and then fill it with as many values as the user wants. However my goal is to not use any defined value per se. I would like to be able to continue increasing it the amount of values it can contain indefinitely.</p>  <p>This is the test code I have been using to try and figure this out:</p>  <pre><code>#include &lt;stdio.h&gt; #include &lt;stdlib.h&gt;  int main(void) {         int i;         int Up;         int Ary[0];          printf("Please enter the number of integers you want to input: ");         scanf("%d", &amp;Up);         for(i = 0; i &lt; Up; i++)         {                 printf("Please enter a number: ");                 Ary[i] = (int) malloc(sizeof(int));                 scanf("%d", &amp;Ary[i]);         }         for(i = 0; i &lt; Up; i++)         {                 printf("%d ", Ary[i]);                 if(i % 10 == 0)                 {                         printf("\n");                 }         }         return 0; } </code></pre>  <p>This may be a poor way of attempting to figure this out and I may also be doing this is a completely wrong way; However I get a segmentation fault sometimes. If I use small values such as only entering 4 or 5 values it works fine, however if I enter 10 values it gives me a segmentation fault. If I enter 50 values, it lets me enter all 50 but gives me a segmentation fault after printing out the 41st value. </p>  <p>The code itself is simply a means to an end. Ultimately what I would like to know is how I can set up an array of anything that can have values added to it indefinitely while retaining previous values using dynamic memory allocation? </p>  <p><em>PS. I hope this defines my question well enough, however if it does not I would like to refine my question so it is more clear. Please make a comment if this is unclear and why.</em></p>