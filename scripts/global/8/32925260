<p>I was referring to NULL Pointer in <a href="http://stackoverflow.com/questions/3581585/whats-the-difference-between-a-null-pointer-and-a-void-pointer">What&#39;s the difference between a null pointer and a void pointer?</a> According to the post reply by @AnT, "Formally, each specific pointer type (int *, char * etc.) has its own dedicated null-pointer value"</p>  <p>I wrote simple program. But the pointer value is not fixed for integer or character. It changes sometimes. So how can we conclude that NULL pointer to int has a fixed value? Also the value of pointer is never 0.</p>  <pre><code> #include &lt;stdio.h&gt;  int main() {     int a;     char *ptr; // Declaring a pointer without initializing it     int *ptrToInt;      if(ptr)     {         printf("Pointer is not NULL\n");         printf("Value of pointer = %x\n",ptr);         printf("Value of pointer = %x\n",ptrToInt);     }     else     {         printf("Pointer is NULL\n");          printf("Value of pointer = %x",ptr);         printf("Value of pointer = %x\n",ptrToInt);     }     return 0; } </code></pre>