<p>I'm trying to send a struct which has one of the member as a dynamic array, but this array doesn't seem to be sent properly. Any suggestion on how to do this?</p>  <p>This is what I have:</p>  <pre><code>struct bar {     int a;     int b;     int* c; };  void defineMPIType(MPI_Datatype* newType, int cLen) {     int blockLengths[3] = {1, 1, cLen};     MPI_Datatype types[3] = {MPI_INT, MPI_INT, MPI_INT};     MPI_Aint offsets[3];      offsets[0] = offsetof(struct bar, a);     offsets[1] = offsetof(struct bar, b);     offsets[2] = offsetof(struct bar, c);        MPI_Type_create_struct(3, blockLengths, offsets, types, newType);     MPI_Type_commit(newType); }  void main(int argc, char* argv[]) {        MPI_Init(&amp;argc, &amp;argv);     int rank, p;     MPI_Comm_rank(MPI_COMM_WORLD, &amp;rank);     MPI_Comm_size(MPI_COMM_WORLD, &amp;p);      int cLen = argv[0];         MPI_Datatype MPI_BAR_TYPE;     defineMPIType(&amp;MPI_BAR_TYPE, cLen);      struct bar* msg = malloc(sizeof(*msg));      if (rank == 0)     {         msg-&gt;a = 1;         msg-&gt;b = 2;         msg-&gt;c =  malloc(sizeof(int) * cLen);;         for (int i = 0; i &lt; cLen; ++i)             msg-&gt;c[i] = i;         MPI_Send(msg, 1, MPI_BAR_TYPE, 1, 111, MPI_COMM_WORLD);      }     else     {         MPI_Status stat;                 MPI_Recv(msg, 1, MPI_BAR_TYPE, 0, 111, MPI_COMM_WORLD, &amp;stat);           }      printf("Rank %d has c = [", rank);     for (int i = 0; i &lt; cLen; ++i)         printf("%d, ", msg-&gt;c[i]);     printf("]\n");      free(msg);     MPI_Type_free(&amp;MPI_BAR_TYPE);     MPI_Finalize(); } </code></pre>  <p>Members <code>a</code> and <code>b</code> got sent properly, but <code>c</code> didn't.</p>