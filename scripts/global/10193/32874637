<p>I am trying to write a VBA script to automate moving things around in an spreadsheet that has a balance sheet imported from an accounting software.  The values on imported balance sheet start at row 5, column A has some text describing what the values of each row mean, and columns B and D have the amounts for each item.</p>  <p>The subtotals for each section and subsection of the balance sheet are on columns C and E. Each subtotal has is in a cell formatted with a solid upper border.</p>  <p>I would like to bring all these subtotals to the same columns as the values (i.e, columns B and D). I've tried to do this using the .Find method to search for cells with the specific format (cells with an upper border) and a Do loop to keep searching until I find all cells that should have a subtotal in it.</p>  <p>Notes:</p>  <ol> <li>I didn't use FindNext because it seems that it ignores format settings used in the preceding Find method, as described <a href="https://support.microsoft.com/en-us/kb/282151" rel="nofollow">here</a>.</li> <li>I tried to used the <a href="http://www.tushar-mehta.com/publish_train/xl_vba_cases/1001%20range.find%20and%20findall.shtml#_Using_the_SearchFormat" rel="nofollow">FindAll function described by Tushar Mehta</a> to go around this problem with FindNext, but it didn't find all cells with the specified format.</li> </ol>  <p>Here's the code. Any help is greatly appreciated!</p>  <pre><code>Sub FixBalanceSheet()   Dim LookFor As Range   Dim FoundHere As String 'Address of the cell that should contain a subtotal   Dim beginAt As Range, endAt As Range, rng As Range 'Set the ranges for the sum to get the subtotal   Dim place As String 'String with the address of a cell that will contain a subtotal   Dim WhereToLook As Range 'Range where subtotals are to be found    'Set workbook and worksheet   With Sheets("Sheet1")     Set WhereToLook = Range("A5:F100")     'Every cell containing a subtotal has an upper border. So, look for cells containing border!     With Application.FindFormat.Borders(xlEdgeBottom)         .LineStyle = xlContinuous         .ColorIndex = xlAutomatic         .TintAndShade = 0     End With     'Call search using .Find     Set LookFor = WhereToLook.Find(What:="", After:=Cells(5, 2), _         LookIn:=xlFormulas, LookAt:=xlPart, _         SearchOrder:=xlByRows, SearchDirection:=xlNext, _         MatchCase:=False, SearchFormat:=True)     If Not LookFor Is Nothing Then 'Test if a cell with a bottom border is found       'What happens when a subtotal cell is found:       FoundHere = LookFor.Address       Debug.Print "Found at: " &amp; Found       'Loop to set a range, sum values and put them in the right cell       Do        '% find out a range to calculate subtotals and put the value in the right cells  %'         'Call for next search         With Application.FindFormat.Borders(xlEdgeBottom)         .LineStyle = xlContinuous         .ColorIndex = xlAutomatic         .TintAndShade = 0         End With         Set LookFor = WhereToLook.Find(What:="", After:=endAt, SearchFormat:=True)         Debug.Print "LookFor now is: " &amp; LookFor.Address         Rem If LookFor.Address = Found Then ' Do not allow wrapped search           Rem Exit Do         Rem End If       Loop Until LookFor Is Nothing Or LookFor.Address = FoundHere ' Do not allow wrapped search     End If   End With End Sub </code></pre>