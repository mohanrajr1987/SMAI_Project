<p>I am taking an Operating Systems class, and the book provides this code.</p>  <pre><code>#include &lt;pthread.h&gt; #include &lt;stdio.h&gt;  void * mythread(void *arg) {    int m = (int) arg;    printf("%d\n", m);    return (void*) (arg + 1); }  int main(int argc, char *argv[]) {     pthread_t p;     int rc, m;     pthread_create(&amp;p, NULL, mythread, (void*) 100);     pthread_join(p, (void**) &amp;m);     printf("returned %d\n", m);     return 0; } </code></pre>  <p>The things I can't wrap my head around are: 1- How can you use "(void *) 100"?  2- Inside of the function mythread, is it possible to cast arg, which is a  void pointer, into an int. Is that code supposed to work like that? If so, can you please explain how? Here's the link to the source: <a href="http://pages.cs.wisc.edu/~remzi/OSTEP/threads-api.pdf" rel="nofollow">Chapter 27</a> page 5. Thanks in advance.</p>