<p>I have initially done some tests queuing a simple print from a pthread, like the following:</p>  <pre><code>int main(int argc, char **argv) {     pthread_t thread;     if ( pthread_create( &amp;thread, NULL, ThreadMain, NULL ) != 0 )         exit(1); }  void *ThreadMain( void *args ){      uv_work_t req;       while(1)     {                uv_queue_work(uv_default_loop(), &amp;req, print_callback, NULL   *after*/);         sleep(1);     } }  void print_callback (uv_work_t *req) {      printf("Queue_work SUCCESSFUL!!!!\n");        sleep(1);    } </code></pre>  <p>And the results were as expected...after running the program, the callback was successful and the message was printed.</p>  <p>So after this i tried to implement something more complex, instead of a print, i wanted to execute a read using <code>uv_fs_open</code>:</p>  <pre><code>void *ThreadMain( void *args ){      uv_work_t req;     const char *testFileName = "readfiletest.txt";     IORequest readReq1;       readReq1.mode = READMODE;     readReq1.fileName = testFileName;      req.data = (void*) &amp;readReq1;      while(1)     {                uv_queue_work(loop, &amp;req, executeIO_callback, NULL /*after*/);         sleep(3);     } }  void executeIO_callback (uv_work_t *req) {         int mode;     IORequest ioreq = *((IORequest*) req-&gt;data);      mode = ioreq.mode;      if(mode == READMODE)     {         printf("READ MODE\n\n");         uv_fs_open(uv_default_loop(), &amp;open_req, ioreq.fileName, O_RDONLY, 0, read_on_open);     }     else if (mode == WRITEMODE)     {         printf("WRITE MODE\n\n");         uv_fs_open(uv_default_loop(), &amp;open_req, ioreq.fileName, O_WRONLY | O_CREAT, S_IRWXO, write_on_open);     }     else         fprintf(stderr, "Requested I/O mode not supported\n");       sleep(1);    } </code></pre>  <p>So my problem begins in the <code>executeIO_callback</code>. Apparently, the program freezes after <code>uv_fs_open</code> but i don't understand why... The last thing to appear on the console is my <code>READMODE</code> print. It doesn't seem to be calling the <code>read_on_open</code> callback.</p>