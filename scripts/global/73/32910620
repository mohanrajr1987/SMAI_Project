<p>This is my first post so I hope it is clear enough. I am having a problem regarding cleaning my CSV files before I can read them into R and have spent the entire day trying to find a solution.</p>  <p>My data is supposed to be in the form of two columns. The first column is a timestamp consisting of 10 digits and the second an ID consisting of 11 or 12 Letters and numbers (the first 6 are always numbers). </p>  <p>For example:</p>  <pre><code>logger10    | 0821164100  |   010300033ADD 0821164523  |   010300033ADD 0821164531  |   010700EDDA0F0831102744 010700EDDA0F| </code></pre>  <p>would become:</p>  <pre><code>0821164100  |   010300033ADD 0821164523  |   010300033ADD 0821164531  |   010700EDDA0F 0831102744  |   010700EDDA0F </code></pre>  <p>(please excuse the lines in the middle, that was my attempt at separating the columns...).</p>  <p>The csv file seems to occasionally be missing a comma which means that sometimes one row will end up like this:</p>  <pre><code>0923120531,010300033ADD0925075301,010700EDD00A </code></pre>  <p>My hardware also adds the word <code>logger10</code> (or whichever number logger this is) whenever it restarts which gives a similar problem e.g. <code>logger10logger100831102744</code>. </p>  <p>I think I have managed to solve the logger text problem (see code) but I am sure this could be improved. Also, I really don't want to delete any of the data. My real trouble is making sure there is a line break in the right place after the ID and, if not, I would like to add one. I thought I could use regex for this but I'm having difficulty understanding it. </p>  <p>Any help would be greatly appreciated!</p>  <p>Here is my attempt:</p>  <pre><code>temp &lt;- list.files(pattern="*.CSV") #list of each csv/logger file for(i in temp){      #clean each csv     tmp&lt;-readLines(i) #check each line in file      tmp&lt;-gsub("logger([0-9]{2})","",tmp) #remove logger text     pattern &lt;- ("[0-9]{10}\\,[0-9]{6}[A-Z,0-9]{5,6}") #regex pattern ??     if (tmp!= pattern){          #I have no idea where to start here...      } } </code></pre>  <p>here is some raw data: logger01 0729131218,020700EE1961 0729131226,020700EE1961 0831103159,0203000316DB 0831103207,0203000316DB0831103253,010700EDE28C 0831103301,010700EDE28C 0831103522,010300029815 0831103636,010300029815 0831103657,020300029815</p>