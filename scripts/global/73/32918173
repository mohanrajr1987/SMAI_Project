<p>I'm developing a Rails web application. I want to have a button in my table view page. When the user clicks on that button, my application will open a csv file in a new page. But, the csv file that is to be opened does not exist yet. All I have got is a Rails variable "@csv" in my table view page. This "@csv" variable contain a string of text in csv format. (I don't know whether it is correct to call it a 'Rails' variable).</p>  <hr>  <p>Short question:</p>  <p>The below code open a new page, download the @csv variable as a csv file, and close that page.</p>  <pre><code>&lt;span style="float: right; display: inline;"&gt;     &lt;%= link_to "Export as CSV", {:action =&gt; "index", :format =&gt; :csv}, :target =&gt; '_blank', class: "btn btn-success", style: "float: right; display: inline;" %&gt; &lt;/span&gt; </code></pre>  <p>But what I want is to let it open a csv file containing the @csv variable content in a new page instead of just download it. WHy is it not doing that? How do I do that? </p>  <p>I'm using chrome. Does chrome and other browser automatically download csv?</p>  <p>Short question ends</p>  <hr>  <p>This is the code inside my table_controller.rb, when the index action is called from another view page called search, this controller will leads the user to the table view page with the @csv parameter:</p>  <pre><code>class TableController &lt; ApplicationController     def index         #Get the search terms 'q' first and store it in a variable called '@q'         @q = params[:q]          #create a file called fileName that stores the search term '@q'         fileName = "fileName"         out_file = File.new(fileName, "w")         out_file.puts(@q)         out_file.close          #run the search engine: the search engine read the search terms by accessing the fileName file and print output to the standard output         #we collect the standard output produced by the search engine using %x() and store it in a variable called @csv         @csv = %x(SearchEngine fileName)          #Then we deleted the fileName file, because the searchEngine program finished using the search term file         File.delete(fileName)          #depending on how I access this index action, I want to open it as a html or csv         respond_to do |format|             format.html             format.csv do                 send_data @csv, type: Mime::CSV, disposition: 'inline', filename: 'csv_search_results.csv'             end         end     end end </code></pre>  <p>This is the code in my table's index.html.erb, it has a link_to button. When I clicked the button, the chrome browser opens a new tab, save the @csv as a csv file automatically, and immediately close that new page. But, what I want the Chrome browser to do is open the @csv as a csv file in a new page. It's not doing that. I don't know why.</p>  <p>index.html.erb</p>  <pre><code>&lt;h1&gt;Search Results&lt;/h1&gt; &lt;table class="table table-striped table-bordered"&gt;      &lt;% @csv.each_line do |line| %&gt;         &lt;tr&gt;             &lt;% line.split(",").each do |f| %&gt;                 &lt;th&gt;&lt;%= f %&gt;&lt;/th&gt;             &lt;% end %&gt;         &lt;/tr&gt;     &lt;% end %&gt;   &lt;/table&gt;  &lt;span style="float: right; display: inline;"&gt;     &lt;%= link_to "Export as CSV", {:action =&gt; "index", :format =&gt; :csv}, :target =&gt; '_blank', class: "btn btn-success", style: "float: right; display: inline;" %&gt; &lt;/span&gt;  </code></pre>  <p>Thanks.</p>