<p>I am coding an IDS application which monitors suspicious actions of any process in the system.</p>  <p>I have got a kernel driver and I need to monitor system-wide if a process performs a remote winsock connection, grabbing the destination IP address (to check if it's a suspicius connection).</p>  <p>I did the same thing previously in user-level, by hooking winsock APIs like connect().</p>  <p>I was thinking about performing a kernel level hook, like a SSDT hook, on some kernel level functions which get called each time the connect() function is called by userlevel, but my attempts at researching the right kernel functions have been unsuccessful.</p>  <p>Could you kindly provide your suggestions on how you would monitor connections done by processes, from a kernel driver?</p>  <p>Are there some specific kernel functions which are called on a socket connection?</p>  <p>Are there some better ways to accomplish this without recurring to the unsupported SSDT hook method?</p>