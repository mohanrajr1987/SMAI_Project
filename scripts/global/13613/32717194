<p>My Meteor project is structured in packages only (there are several articles on the internet recommending and explaining on how to do this). I ran into a basic problem which I can not seem to solve. Here is the issue stripped down to a minimum test case:</p>  <p>I have two packages, 'one' and 'two' (created with 'meteor create --package' and added to the project subsequently) Package two holds a variable and exports this variable. Package one logs the contents of this variable to the console:</p>  <p>two.js:</p>  <pre><code>two_var = 'two' </code></pre>  <p>package.js (two):</p>  <pre><code>Package.describe({   name: 'two' });  Package.onUse(function (api) {   api.addFiles('two.js', 'client');   api.export('two_var', 'client') }); </code></pre>  <p>one.js:</p>  <pre><code>Meteor.startup(function() {     console.log(two_var) //two_var found, unexpected })  setTimeout(function () {     console.log(two_var) //two_var found, unexpected }, 3000)  console.log(two_var) //two_var not found, expected </code></pre>  <p>package.js (one):</p>  <pre><code>Package.describe({   name: 'one' });  Package.onUse(function(api) {   //api.use('two', 'client');  //not using two, but two_var found in certain situations   api.addFiles('one.js', 'client'); }); </code></pre>  <p>As you can see the variable from package two can be accessed in situations I would not expect so. Am I overlooking something or do I misunderstand the concept of the package?</p>