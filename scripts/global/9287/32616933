<p>I'm using JSoup to crawler pages. I usually need get all url's imagens inside a page or a piece of page and put then in a <code>ArrayList&lt;String&gt;</code>. Suposed the follow document:</p>  <pre><code>&lt;!DOCTYPE html&gt; &lt;html&gt;   &lt;head&gt;     &lt;meta charset="utf-8"&gt;     &lt;title&gt;News Page&lt;/title&gt;   &lt;/head&gt;   &lt;body&gt;     &lt;div class="news"&gt;       &lt;div class="new"&gt;         &lt;div class="image"&gt;           &lt;img src="../images/img01.jpg" /&gt;         &lt;/div&gt;         &lt;div class="info"&gt;           &lt;p class="title"&gt;             Grumpy wizards make toxic brew for the evil Queen and Jack.           &lt;/p&gt;         &lt;/div&gt;       &lt;/div&gt;       &lt;div class="new"&gt;         &lt;div class="image"&gt;           &lt;img src="../images/img02.jpg" /&gt;         &lt;/div&gt;         &lt;div class="info"&gt;           &lt;p class="title"&gt;             The quick brown fox jumps over the lazy dog.           &lt;/p&gt;         &lt;/div&gt;       &lt;/div&gt;       &lt;div class="new"&gt;         &lt;div class="image"&gt;           &lt;img src="../images/img03.jpg" /&gt;         &lt;/div&gt;         &lt;div class="info"&gt;           &lt;p class="title"&gt;             Pack my box with five dozen liquor jugs.           &lt;/p&gt;         &lt;/div&gt;       &lt;/div&gt;      &lt;/div&gt;   &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>I do it on this way:</p>  <pre><code>Document document = Jsoup.parse(html); Elements images = document.select(img);  ArrayList&lt;String&gt; binaryUrls = new ArrayList&lt;String&gt;(); for(Element image : images) {     binaryUrls.add(image.absUrl("src")); } </code></pre>  <p>And the result:</p>  <pre><code>['http//www.newssite.com/images/img01.jpg', 'http//www.newssite.com/images/img02.jpg', 'http//www.newssite.com/images/img03.jpg'] </code></pre>  <p>It works, but I want know if exists a short way, just with Jsoup to do it.</p>  <p>In a production envirioment we used Java 6, yet. If possible, I liked know a Java 6 mode and a Java 8 mode, with lambda.</p>