<p>I've encountered some very strange behaviour with my tableViewCells in a simple list application (iOS). </p>  <p><strong>This is the basic function of my working app  :</strong><br> TableView with 2 sections. First section (e.g. with 2 cells) is always visible. Second section can be shown/hidden with a custom button in the section header. I've created two classes (i.e. FirstSectionItem and SecondSectionItem) both with a boolean property "completed" and some other properties. </p>  <p>After compilations the app runs as expected. Tapping cells results in showing the checkmarks and tapping them again hides the checkmarks (=custom imageView). However after tapping some different cells (random order) or showing/hiding the second section the checkmark (ImageViews) tend to stay checked no matter how much I tap the cells. After a while every cell is checked and can't be unchecked but the boolean values still keep changing. </p>  <p><strong>Here's part of the code:</strong> </p>  <pre><code>@property NSMutableArray *sectionTitleArray; @property NSMutableDictionary *sectionContentDict; @property NSMutableArray *firstSectionItems; @property NSMutableArray *secondSectionItems; </code></pre>  <p>ViewDidLoad:</p>  <pre><code>- (void)viewDidLoad {      [super viewDidLoad];      if (!self.sectionTitleArray) {         self.sectionTitleArray = [NSMutableArray arrayWithObjects:@"section1", @"section2", nil];     }      self.firstSectionItems = [[NSMutableArray alloc] init];     self.secondSectionItems = [[NSMutableArray alloc] init];     [self loadInitialData];      self.sectionContentDict  = [[NSMutableDictionary alloc] init];      self.arraySection1 = [[NSMutableArray alloc] init];      for (int i = 0; i &lt; [self.firstSectionItems count]; i++)          {              FirstSectionItem *firstSectionItem = [self.firstSectionItem objectAtIndex:i];              [self.arraySection1 addObject:firstSectionItem.itemName];          }       self.arraySection2 = [[NSMutableArray alloc] init];      for (int i = 0; i &lt; [self.secondSectionItems count]; i++)         {              SecondSectionItem *secondSectionItem = [self.secondSectionItems objectAtIndex:i];              [self.arrayFuture addObject:secondSectionItem.itemName];         }      [self.sectionContentDict setValue:self.arraySection1  forKey:[self.sectionTitleArray objectAtIndex:0]];     [self.sectionContentDict setValue:self.arraySection2 forKey:[self.sectionTitleArray objectAtIndex:1]]; } </code></pre>  <p>CellForRowAtIndexPath:</p>  <pre><code>- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {       UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:@"ListPrototypeCell" forIndexPath:indexPath];       // ... cell content ...       NSArray *content = [self.sectionContentDict valueForKey:[self.sectionTitleArray objectAtIndex:indexPath.section]];       //... constraints ...       UIImage *checkmark = [UIImage imageNamed:@"checkmark.png"];      UIImage *noCheckmark = [UIImage imageNamed:@"transparent.png"];      UIImageView *imageView = [[UIImageView alloc] init];       if (indexPath.section==0){            FirstSectionItem *firstSectionItem = [self.firstSectionItems objectAtIndex:indexPath.row];              imageView.image = firstSectionItem.completed ? checkmark : noCheckmark;  }        if (indexPath.section==1){         if(self.sec2isTapped == YES){             SecondSectionItem *secondSectionItem = [self.secondSectionItems objectAtIndex:indexPath.row];             imageView.image = secondSectionItem.completed ? checkmark : noCheckmark;          }       }       [cell.contentView addSubview:imageView];       // ... more constraints    return cell; } </code></pre>  <p>didSelectRowAtIndexPath</p>  <pre><code>- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath {      [tableView deselectRowAtIndexPath:indexPath animated:NO];      if (indexPath.section ==0){         FirstSectionItem *tappedItem = [self.firstSectionItems objectAtIndex:indexPath.row];         tappedItem.completed = !tappedItem.completed;     }     if (indexPath.section ==1){          SecondSectionItem *tappedItem = [self.secondSectionItems objectAtIndex:indexPath.row];          tappedItem.completed = !tappedItem.completed;     }      [tableView beginUpdates];     [tableView reloadRowsAtIndexPaths:@[indexPath] withRowAnimation:UITableViewRowAnimationMiddle];     [tableView endUpdates];  } </code></pre>  <p>I've tried multiple approaches but none of them seem to work. I can't figure out what the problem is. </p>  <p>(I am new to objective C so some parts might seem a bit devious). </p>  <p>Thanks in advance.  </p>