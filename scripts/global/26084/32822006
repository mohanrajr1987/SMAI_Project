<p>I want to create a rounded image in my UITableViewCell, I have set the image height and width constraints to 80, and when i try to do:</p>  <pre><code>cell.avatarImage.layer.cornerRadius = cell.avatarImage.frame.size.width/2 cell.avatarImage.clipsToBounds = true </code></pre>  <p>My image is diamond shaped instead of a circle. I've checked the width and height for the image and instead of 80 it shows: 128 and 240.  I also want to add that if I use a constant value of cornerRadius to 40 it works perfectly.  Could someone explain to me why does it work one way and the frame.size method gives me a false result? Is there any way to get a circle image without having to use a constant value?</p>  <p>That's how I set the UIImageView size: <a href="http://i.stack.imgur.com/6cXXI.png" rel="nofollow">http://i.stack.imgur.com/6cXXI.png</a></p>  <p>EDIT:</p>  <p>I have a custom TableViewCell class </p>  <pre><code>class ContactTableViewCell: UITableViewCell {  @IBOutlet weak var nicknameLabel: UILabel! @IBOutlet weak var descriptionLabel: UILabel! @IBOutlet weak var avatarImage: UIImageView! </code></pre>  <p>}</p>  <p>And in TableViewController I call <em>cellForRowAtIndexPath</em> </p>  <pre><code>override func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -&gt; UITableViewCell {     let cell = tableView.dequeueReusableCellWithIdentifier("Cell", forIndexPath: indexPath) as! ContactTableViewCell      cell.nicknameLabel.text = "Nick"     cell.descriptionLabel.text = "Desc"     cell.avatarImage.backgroundColor = UIColor.redColor()     cell.avatarImage.layer.cornerRadius = cell.avatarImage.frame.size.width/2     cell.avatarImage.clipsToBounds = true     return cell } </code></pre>  <p>and when I try to call</p>  <pre><code>print(cell.avatarImage.frame.size.width) </code></pre>  <p>it returns value of 240.0</p>  <p>That's what I get when i take the frame.size value instead of setting a constant value <a href="http://i.stack.imgur.com/22t71.png" rel="nofollow">http://i.stack.imgur.com/22t71.png</a></p>