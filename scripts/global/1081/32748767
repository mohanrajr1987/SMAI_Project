<p>I am trying to make a GUI for a battleship game. One class is for creating the GUI itself and a second class is on top of it to manage the board in the game. My problem is that the JPanel creates twice once a mouse click happens (the mouse click is supposed to be where one is firing in the game and then marks that as a hit/miss). I'm not sure why it is creating twice. Is it because of the passing of a panel? Code below and a photo of what the code generates.</p>  <pre><code>import java.awt.BorderLayout; import java.awt.FlowLayout; import java.awt.event.ActionEvent; import java.awt.event.MouseEvent; import java.awt.event.MouseListener; import javax.swing.BorderFactory; import javax.swing.JApplet; import javax.swing.JButton; import javax.swing.JLabel; import javax.swing.JPanel;   public class BattleshipApplet extends JApplet implements MouseListener {     private final JButton playButton = new JButton("Play");     private final JLabel msgBar = new JLabel("Click Play to start game");     private BoardPanel panel;        public BattleshipApplet(){         playButton.addActionListener(this::playButtonClicked);           addMouseListener(this);     }      public void init(){         configureGui();     }      private void configureGui(){         setLayout(new BorderLayout());         JPanel buttons = new JPanel(new FlowLayout(FlowLayout.LEFT));         buttons.setBorder(BorderFactory.createEmptyBorder(0,5,0,0));         buttons.add(playButton);         add(buttons, BorderLayout.NORTH);         msgBar.setBorder(BorderFactory.createEmptyBorder(10,10,5,5));         add(createBoardPanel(), BorderLayout.CENTER);         add(msgBar, BorderLayout.SOUTH);     }      private BoardPanel createBoardPanel(){         panel = new BoardPanel();         return panel;     }      private void displayMessage(String msg){         msgBar.setText(msg);     }      private void playButtonClicked(ActionEvent event){         displayMessage("Play button clicked!");     }      public void mouseClicked(MouseEvent e) {         panel.mouseClickedAt(e.getX(), e.getY());         e.consume();     }       public void mouseEntered(MouseEvent e) {     }       public void mouseExited(MouseEvent e) {     }       public void mousePressed(MouseEvent e) {     }     public void mouseReleased(MouseEvent e) {     }    } </code></pre>  <p>The board class using JPanel</p>  <pre><code>[![import java.awt.Color; import java.awt.Graphics; import javax.swing.JPanel;   public class BoardPanel extends JPanel  {     int mx, my;     boolean rect1Clicked;     //gamePlay a;     public void init(){          rect1Clicked = false;      }      /***Your applet shall show the status of the board before and after      each shot, including the number of shots made and the status of      each place (no shot or hit/miss shot). ***/     public void paint(Graphics g){         boolean miss = false;           for (int i=0; i&lt;11; i++){              g.setColor(Color.blue);             g.drawLine(20,20+i*28, 300, 20+i*28);            }         for (int i=0; i&lt;11; i++)                g.drawLine(20+i*28,20,20+i*28,300);          //if inside board          if(rect1Clicked == true){             g.setColor(Color.green);             //aligns to square to check in computer board for hit/miss             int bx =(my-20)/28;             int by =(mx-20)/28;                //check hit on board             //if shot was a miss             if(miss == true ){                 //update to white                 g.setColor(Color.white);             }             //if shot was a hit             if(miss == false){                 //update to red                 g.setColor(Color.red);             }             //compare to line for fill             int fillx = mx/2;             int filly = my/2 ;             if(mx&lt;=47){                 fillx = 20;             }             if(mx&gt;47 &amp;&amp; mx&lt;=75){                 fillx = 48;             }             if(mx&gt;75 &amp;&amp; mx&lt;=103){                 fillx = 76;             }             if(mx&gt;103 &amp;&amp; mx &lt;=131){                 fillx = 104;             }             if(mx&gt;131 &amp;&amp; mx&lt;=159){                 fillx = 132;             }             if(mx&gt;159 &amp;&amp; mx&lt;=187){                 fillx = 160;             }             if(mx&gt;187 &amp;&amp; mx &lt;=215){                 fillx = 188;             }             if(mx&gt;215 &amp;&amp; mx &lt;=243){                 fillx = 216;             }             if(mx&gt;243 &amp;&amp; mx &lt;=271){                 fillx = 244;             }             if(mx&gt;271 &amp;&amp; mx&lt;=299){                 fillx = 272;             }             if(mx&gt;299){                 fillx = 300;             }             //y comparisons             if(my&lt;=47){                 filly = 20;             }             if(my&gt;47 &amp;&amp; my&lt;=75){                 filly = 48;             }             if(my&gt;75 &amp;&amp; my&lt;=103){                 filly = 76;             }             if(my&gt;103 &amp;&amp; my &lt;=131){                 filly = 104;             }             if(my&gt;131 &amp;&amp; my&lt;=159){                 filly = 132;             }             if(my&gt;159 &amp;&amp; my&lt;=187){                 filly = 160;             }             if(my&gt;187 &amp;&amp; my &lt;=215){                 filly = 188;             }             if(my&gt;215 &amp;&amp; my &lt;=243){                 filly = 216;             }             if(my&gt;243 &amp;&amp; my &lt;=271){                 filly = 244;             }             if(my&gt;271 &amp;&amp; my&lt;=299){                 filly = 272;             }             if(my&gt;299){                 filly = 300;             }               g.drawString("("+mx+","+my+")",mx,my);             //25 describes size of square              g.fillOval(fillx, filly, 25, 25);          }       }      public void game(BoardPanel p){         //while game plays     }       public void mouseClickedAt(int x, int y){          mx = x;         my = y;          //user clicked inside of board space         if(mx&gt;20 &amp;&amp; mx&lt;300 &amp;&amp; my&gt;20 &amp;&amp; my&lt;300){                     //send to board in MainBattleship             rect1Clicked = true;          }         //updates board         repaint();     }   }][1]][1] </code></pre>  <p>I am so lost, thank you for any help!</p>