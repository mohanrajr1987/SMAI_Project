<blockquote>   <p>I am creating a Chat Application using GCM . Now I have this activity main where I show the user list using ArrayAdapter and ListView . but to use Navigation Drawer , I have to use FragmentActivity . And now it shows "Cannot resolve setListAdapter(adapter)" . Show how to implement ListAdapter while using FragmentActivity to implement NavigationDrawer ?</p> </blockquote>  <pre><code>public class MainActivity extends FragmentActivity     implements NavigationDrawerFragment.NavigationDrawerCallbacks {  /**  * Fragment managing the behaviors, interactions and presentation of the navigation drawer.  */ private NavigationDrawerFragment mNavigationDrawerFragment;  /**  * Used to store the last screen title. For use in {@link #restoreActionBar()}.  */ private CharSequence mTitle;  private static final String TAG = "UserListActivity"; TextView content; Button refreshButton; private Intent intent; MessageSender messageSender; GoogleCloudMessaging gcm;  @Override protected void onCreate(Bundle savedInstanceState) {     super.onCreate(savedInstanceState);     setContentView(R.layout.activity_main);      mNavigationDrawerFragment = (NavigationDrawerFragment)             getSupportFragmentManager().findFragmentById(R.id.navigation_drawer);     mTitle = getTitle();      // Set up the drawer.     mNavigationDrawerFragment.setUp(             R.id.navigation_drawer,             (DrawerLayout) findViewById(R.id.drawer_layout));      content = (TextView)findViewById(R.id.output);     content.setText("Select user to chat:");     refreshButton = (Button)findViewById(R.id.refreshButton);     intent = new Intent(this, GCMNotificationIntentService.class);     registerReceiver(broadcastReceiver, new IntentFilter("com.mindstorm.userlist"));     messageSender = new MessageSender();     gcm = GoogleCloudMessaging.getInstance(getApplicationContext());     refreshButton.setOnClickListener(new View.OnClickListener() {         @Override         public void onClick(View arg0) {             // get user list             Bundle dataBundle = new Bundle();             dataBundle.putString("ACTION", "USERLIST");             messageSender.sendMessage(dataBundle, gcm);         }     });  }  private BroadcastReceiver broadcastReceiver = new BroadcastReceiver() {     @Override     public void onReceive(Context context, Intent intent) {         Log.d(TAG, "onReceive: " + intent.getStringExtra("USERLIST"));         updateUI(intent.getStringExtra("USERLIST"));     } };  private void updateUI(String userList) {     //get userlist from the intents and update the list      String[] userListArr = userList.split(":");      Log.d(TAG,"userListArr: "+userListArr.length+" tostr "+userListArr.toString());      //remove empty strings :-)     List&lt;String&gt; list = new ArrayList&lt;String&gt;();     for(String s : userListArr) {         if(s != null &amp;&amp; s.length() &gt; 0) {             list.add(s);         }     }     userListArr = list.toArray(new String[list.size()]);     ListView listview = (ListView)findViewById(android.R.id.list);      ArrayAdapter&lt;String&gt; adapter = new ArrayAdapter&lt;String&gt;(this,             android.R.layout.simple_list_item_1, userListArr);     listview.setListAdapter(adapter);  }  @Override protected void onListItemClick(ListView l, View v, int position, long id) {      super.onListItemClick(l, v, position, id);      // ListView Clicked item index     int itemPosition     = position;      // ListView Clicked item value     String  itemValue    = (String) l.getItemAtPosition(position);      content.setText("User selected: " +itemValue);       Intent i = new Intent(getApplicationContext(),             ChatActivity.class);     i.putExtra("TOUSER",itemValue);     startActivity(i);     finish(); }  @Override public void onNavigationDrawerItemSelected(int position) {     // update the main content by replacing fragments     FragmentManager fragmentManager = getSupportFragmentManager();     fragmentManager.beginTransaction()             .replace(R.id.container, PlaceholderFragment.newInstance(position + 1))             .commit(); }  public void onSectionAttached(int number) {     switch (number) {         case 1:             mTitle = getString(R.string.title_section1);             break;         case 2:             mTitle = getString(R.string.title_section2);             break;         case 3:             mTitle = getString(R.string.title_section3);             break;     } }  public void restoreActionBar() {     ActionBar actionBar = getSupportActionBar();     actionBar.setNavigationMode(ActionBar.NAVIGATION_MODE_STANDARD);     actionBar.setDisplayShowTitleEnabled(true);     actionBar.setTitle(mTitle); }   @Override public boolean onCreateOptionsMenu(Menu menu) {     if (!mNavigationDrawerFragment.isDrawerOpen()) {         // Only show items in the action bar relevant to this screen         // if the drawer is not showing. Otherwise, let the drawer         // decide what to show in the action bar.         getMenuInflater().inflate(R.menu.main, menu);         restoreActionBar();         return true;     }     return super.onCreateOptionsMenu(menu); }  @Override public boolean onOptionsItemSelected(MenuItem item) {     // Handle action bar item clicks here. The action bar will     // automatically handle clicks on the Home/Up button, so long     // as you specify a parent activity in AndroidManifest.xml.     int id = item.getItemId();      //noinspection SimplifiableIfStatement     if (id == R.id.action_settings) {         return true;     }      return super.onOptionsItemSelected(item); }  /**  * A placeholder fragment containing a simple view.  */ public static class PlaceholderFragment extends Fragment {     /**      * The fragment argument representing the section number for this      * fragment.      */     private static final String ARG_SECTION_NUMBER = "section_number";      /**      * Returns a new instance of this fragment for the given section      * number.      */     public static PlaceholderFragment newInstance(int sectionNumber) {         PlaceholderFragment fragment = new PlaceholderFragment();         Bundle args = new Bundle();         args.putInt(ARG_SECTION_NUMBER, sectionNumber);         fragment.setArguments(args);         return fragment;     }      public PlaceholderFragment() {     }      @Override     public View onCreateView(LayoutInflater inflater, ViewGroup container,                              Bundle savedInstanceState) {         View rootView = inflater.inflate(R.layout.fragment_main, container, false);         return rootView;     }      @Override     public void onAttach(Activity activity) {         super.onAttach(activity);         ((MainActivity) activity).onSectionAttached(                 getArguments().getInt(ARG_SECTION_NUMBER));     } } </code></pre>  <p>}</p>