<p>The following is the code of a simple tidal-transport model that I have included OpenMP to parallelize the computation:</p>  <pre><code>!$OMP PARALLEL SHARED(w, u, v, nthreads, chunk) PRIVATE(i, j, tid) do it = 1, itlast     !$OMP DO SCHEDULE(DYNAMIC, CHUNK)     do j = 2, nyw-1         do i = 2, nxw-1             w(i,j) = w(i,j) - rx*depth*(u(i,j) - u(i-1,j))                  &amp;                             - ry*depth*(v(i,j) - v(i,j-1))         end do     end do     !$OMP END DO     !$OMP SINGLE     call boudary_condition(it)     !$OMP END SINGLE     !$OMP DO SCHEDULE(DYNAMIC, CHUNK)     do j = 1, nyw         jv1 = j         if (jv1 .ge. nyw-1) jv1 = nyw-1         do i = 1, nxw-1             u(i,j) = u(i,j) - rxg*(w(i+1,j) - w(i,j))                       &amp;                         - constant*u(i,j)*sqrt((u(i,j)**2.) + (v(i,jv1)**2.))         end do     end do     !$OMP END DO     !$OMP DO SCHEDULE(DYNAMIC, CHUNK)     do j = 1, nyw-1         do i = 1, nxw             iu1 = i             if (iu1 .ge. nxw-1) iu1 = nxw-1             v(i,j) = v(i,j) - ryg*(w(i,j+1) - w(i,j))                       &amp;                         - constant*v(i,j)*sqrt((u(iu1,j)**2.) + (v(i,j)**2.))         end do     end do     !$OMP END DO     call transport_equation(chunk)     !$OMP MASTER             mtprint = it/ntserprint     if (ntserprint*mtprint .ne. it) goto 20         call timeseries(it) 20  continue     !$OMP END MASTER end do !$OMP END PARALLEL </code></pre>  <p>The problem is I don't always get the expected results. Using the same input file, I should always get the same results, but sometimes it produces NaN in the output file. I'm not quite understand why this happens. I'm using Intel Visual Fortran Composer XE 2013 on Windows 10 to compile and run the executable file.</p>