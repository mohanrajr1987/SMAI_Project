<p>I'm making an app in Ionic and there is something going wrong with the communication with the backend that is developed by my colleague with Cherry Pie.  Let me first explain the situation: The Ionic Android app first makes an <code>$http.get</code> to an url with an password and id. If those 2 match, the backend logs me ON. This means that it remembers that I have access to other url's. It does this with Sessions. </p>  <pre><code>http://wamp.bart.olen:1234/logon?clientId=3&amp;pwdHash=098f6bcd4621d373cade4e832627b4f6 </code></pre>  <p>So now I can make the second request:</p>  <pre><code>http://wamp.bart.olen:1234/configuration </code></pre>  <p>This request should give me some data the app needs. If i do the same requests, just in the browser-url-bar, in the same order, everything works just fine. The first GET in my app is no problem, it gives me a <code>"200"</code> <code>"OK"</code> . But the second GET, that does work in de browser-url-bar doesn't work in my Ionic app. It gives me following feedback: <code>'403'</code> <code>'Forbidden'</code>. So it is saying that i don't have logged on yet.</p>  <p>I don't know a thing about Cherry Py, thats my colleagues speciality ;) But I don't know if the problem is located at the backend or frontend.</p>  <p>Can someone please check my code to see if I missed something?  I think about the following options: - my code isn't correct ( although it does seem very correct to me ) - for some reason Ionic and Cherry Pie sessions don't work very well together.  - Maybe a bug in de backend? - I also thought that maybe my first GET didn't came before my second but I'm sure that I'm logged On first before I aske the second GET. - I also checkt if the GET url's were the same as i used in the browser bar.</p>  <p>Thanks. </p>  <p>My controller code:</p>  <pre><code> //first Get request    $scope.checkLogonGegevens = function(givenUrl, givenClientId, givenPassword){       $scope.newPassword = md5.createHash(givenPassword || '');       var promise = checkSettings.clientLogon(givenUrl, $scope.newPassword, givenClientId);       promise.then(          function(x) {              $scope.logonData = x;             $scope.vervangGivenVars(givenUrl, givenClientId , $scope.newPassword );             $scope.vraagConfiguration();          },          function(errorx) {             $log.error( errorx);             $log.error( errorx.status);          });       };     //some other functie that isn't important     $scope.vervangGivenVars = function(givenUrl, givenClientId, givenPassword){       $scope.givenUrl = window.localStorage['givenDeviceUrl'] = givenUrl;       $scope.givenClientId = window.localStorage['givenDeviceClientId'] = givenClientId;       $scope.givenPassword = window.localStorage['givenDevicePassword'] = givenPassword;    }     //second Get request    $scope.vraagConfiguration = function(){       var promise = checkConfiguration.clientConfiguration($scope.givenUrl);       promise.then(          function(x) {              $scope.configData = x;             $scope.modal.hide();          },          function(errorx) {             $log.error(errorx);          });       }; </code></pre>  <p>My service code:</p>  <pre><code>var modalConfigurationService = angular.module('modalConfigurationService', []);  modalConfigurationService.factory('checkSettings', function($http, $log ) {     return {       clientLogon: function(clientUrl, clientPassword, clientId) {          return $http.get( clientUrl + '/logon?clientId=' + clientId + '&amp;pwdHash=' + clientPassword);       }    } });  modalConfigurationService.factory('checkConfiguration', function($http, $log ) {     return {       clientConfiguration: function(clientUrl) {          return $http.get(clientUrl + '/configuration');       }    } }); </code></pre>