<p>Hi I am creating mobile native application that uses REST API endpoints to communicate with server side.<br> I have had previous experience developing native clients, but I have simple token (random generated string) stored in DB in the same table where user information is stored. So it is like sessions used in browser, but instead of cookies each request has token in the header.    </p>  <p>Recently I discoreved JWT token. It seems to be great way to secure endpoints which are private. You can request token from mobile client providing you pass + login and get generated token in response.<br> But the one important thing is that this token is not stored anywhere on the server, server verifies the token using secret word, which is private for the server like private key.<br> That's okay for secured endpoints, but what to do if I require user session, for example how do apps like Facebook, Amazon, Aliexpress ... work, they have ability to use the app without providing credentials, just navigating through the store, but require logining in when user want't to make purchase. And after that user session is kept for some time. This can be implemented with the JWT token without any problems, but when user need to logout, what to do in this case ? Token is not stored anywhere on the server, so how can I destroy this token, to make it invalid ? </p>  <p>If token is stored in the database, API is not stateless, as REST API should be.  So in general there is no way to keep user logged in in stateless API, am I right ?    </p>  <p>I have some ideas how to implement this using JWT token, but again this will not be stateless API, as I understand.</p>  <ol> <li>Create the list of expired tokens   </li> <li>Store JWT token in the database, but what is the purpose of self descriptive token (JWT) in this case if it is stored in the database, the main idea of JWT token to keep all information with token, as I know.</li> </ol>  <p>Please suggest what is the best way will be in this case, and correct me if I have mistaken.<br> Thanks.</p>