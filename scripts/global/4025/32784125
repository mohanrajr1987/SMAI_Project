<p>I am currently trying to wrap my head around the combobox widget used for dialogs providing a type-ahead feature because the data set which is loaded can be quite huge. Loading the remote data works fine, but the ComboBox is not filtering as required. Filtering the store apparently works, since console.info prints the expected result. The dropdown on the other hand does not remove filtered items. The view is not consistent with the store.</p>  <ol> <li>Loading remote data in the store ✓</li> <li>Filtering the store ✓</li> <li>Reflect changes in the store in the ComboBox's dropdown ✗</li> <li><p>Let the user select value if more than one hit is in the result, otherwise auto-select (not required).</p>  <pre><code>&lt;models     jcr:primaryType="cq:Widget"     autoSelect="{Boolean}false"     displayField="text"     enableKeyEvents="{Boolean}true"     hiddenName="selectedModel"     hideTrigger="{Boolean}"     lastQuery=""     mode="remote"     name="models"     triggerAction="query"     typeAhead="{Boolean}true"     valueField="value"     xtype="combo"&gt;     &lt;store             jcr:primaryType="nt:unstructured"             root="models"             totalProperty="results"             xtype="jsonstore"&gt;         &lt;api jcr:primaryType="nt:unstructured"&gt;             &lt;read                     jcr:primaryType="nt:unstructured"                     displayField="text"                     method="GET"                     url=".dataprovider.json"/&gt;         &lt;/api&gt;         &lt;fields                 jcr:primaryType="cq:WidgetCollection"                 displayField="text"&gt;             &lt;text                     jcr:primaryType="nt:unstructured"                     name="text"/&gt;             &lt;value                     jcr:primaryType="nt:unstructured"                     name="value"/&gt;         &lt;/fields&gt;     &lt;/store&gt;     &lt;listeners             jcr:primaryType="nt:unstructured"             beforequery="function(queryEvent) { delete queryEvent.combo.lastQuery; combo.store.clearFilter(); return true;}"             change="function(combo, newValue, oldValue) { delete combo.lastQuery; combo.store.clearFilter(); console.log('change', combo.store.getCount()); };"             keydown="function(combo, event) { delete combo.lastQuery; combo.store.filter('text', combo.getRawValue(), true, false); console.info('keydown', combo.store.getCount()); }"             /&gt; &lt;/models&gt; </code></pre></li> </ol>  <p>Any input would be highly appreciated. If using <code>mode="local"</code> and rendering the data into the page source would make a difference, I'd gladly change the implementation.</p>