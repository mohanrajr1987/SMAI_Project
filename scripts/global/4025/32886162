<p>I am trying to create a table with pagination, and it seems that it must be done using the Ext.data.Store. So I create one in the following way:</p>  <pre><code>    /*      createStore - setup an ExtJS dataStore and populate it using the view's collection      @param n/a      @return object store      */     createStore: function() {         var _this = this;         if (!this.store) {             this.store = Ext.create('Ext.data.Store', {                 pageSize: 3,                 data: _this.collection.toJSON()             });         }         return this.store;     }, </code></pre>  <p>The collention being passed as data (the <em>_this.collection.toJSON()</em>) is the following:</p>  <pre><code>    [       {         "id": 1,         "value": 12.34,         "currency": "eur",         "expirationDate": "Mon Jul 27 2016 12:01:11 GMT+0100 (WEST)",         "vendor": "banana",         "activationCode": 1234567890       },       {         "id": 2,         "value": 12.34,         "currency": "eur",         "expirationDate": "Mon Jul 27 2016 12:01:11 GMT+0100 (WEST)",         "vendor": "banana",         "activationCode": 1234567890       },       {         "id": 3,         "value": 12.34,         "currency": "eur",         "expirationDate": "Mon Jul 27 2016 12:01:11 GMT+0100 (WEST)",         "vendor": "banana",         "activationCode": 1234567890       },       {         "id": 4,         "value": 12.34,         "currency": "eur",         "expirationDate": "Mon Jul 27 2016 12:01:11 GMT+0100 (WEST)",         "vendor": "banana",         "activationCode": 1234567890       },       {         "id": 5,         "value": 12.34,         "currency": "eur",         "expirationDate": "Mon Jul 27 2016 12:01:11 GMT+0100 (WEST)",         "vendor": "banana",         "activationCode": 1234567890       },       {         "id": 6,         "value": 12.34,         "currency": "eur",         "expirationDate": "Mon Jul 27 2016 12:01:11 GMT+0100 (WEST)",         "vendor": "banana",         "activationCode": 1234567890       },       {         "id": 7,         "value": 12.34,         "currency": "eur",         "expirationDate": "Mon Jul 27 2016 12:01:11 GMT+0100 (WEST)",         "vendor": "banana",         "activationCode": 1234567890       },       {         "id": 8,         "value": 12.34,         "currency": "eur",         "expirationDate": "Mon Jul 27 2016 12:01:11 GMT+0100 (WEST)",         "vendor": "banana",         "activationCode": 1234567890       },       {         "id": 9,         "value": 12.34,         "currency": "eur",         "expirationDate": "Mon Jul 27 2016 12:01:11 GMT+0100 (WEST)",         "vendor": "banana",         "activationCode": 1234567890       },       {         "id": 10,         "value": 12.34,         "currency": "eur",         "expirationDate": "Mon Jul 27 2016 12:01:11 GMT+0100 (WEST)",         "vendor": "banana",         "activationCode": 1234567890       },       {         "id": 11,         "value": 12.34,         "currency": "eur",         "expirationDate": "Mon Jul 27 2016 12:01:11 GMT+0100 (WEST)",         "vendor": "banana",         "activationCode": 1234567890       },       {         "id": 12,         "value": 12.34,         "currency": "eur",         "expirationDate": "Mon Jul 27 2016 12:01:11 GMT+0100 (WEST)",         "vendor": "banana",         "activationCode": 1234567890       },       {         "id": 13,         "value": 12.34,         "currency": "eur",         "expirationDate": "Mon Jul 27 2016 12:01:11 GMT+0100 (WEST)",         "vendor": "banana",         "activationCode": 1234567890       },       {         "id": 14,         "value": 12.34,         "currency": "eur",         "expirationDate": "Mon Jul 27 2016 12:01:11 GMT+0100 (WEST)",         "vendor": "banana",         "activationCode": 1234567890       },       {         "id": 15,         "value": 12.34,         "currency": "eur",         "expirationDate": "Mon Jul 27 2016 12:01:11 GMT+0100 (WEST)",         "vendor": "banana",         "activationCode": 1234567890       },       {         "id": 16,         "value": 12.34,         "currency": "eur",         "expirationDate": "Mon Jul 27 2016 12:01:11 GMT+0100 (WEST)",         "vendor": "banana",         "activationCode": 1234567890       },       {         "id": 17,         "value": 12.34,         "currency": "eur",         "expirationDate": "Mon Jul 27 2016 12:01:11 GMT+0100 (WEST)",         "vendor": "banana",         "activationCode": 1234567890       },       {         "id": 18,         "value": 12.34,         "currency": "eur",         "expirationDate": "Mon Jul 27 2016 12:01:11 GMT+0100 (WEST)",         "vendor": "banana",         "activationCode": 1234567890       },       {         "id": 19,         "value": 12.34,         "currency": "eur",         "expirationDate": "Mon Jul 27 2016 12:01:11 GMT+0100 (WEST)",         "vendor": "banana",         "activationCode": 1234567890       },       {         "id": 20,         "value": 12.34,         "currency": "eur",         "expirationDate": "Mon Jul 27 2016 12:01:11 GMT+0100 (WEST)",         "vendor": "banana",         "activationCode": 1234567890       },       {         "id": 21,         "value": 12.34,         "currency": "eur",         "expirationDate": "Mon Jul 27 2016 12:01:11 GMT+0100 (WEST)",         "vendor": "banana",         "activationCode": 1234567890       }     ] </code></pre>  <p>However in the final result table ExtJS does not limit the result to only 3 results per page.</p>  <p><a href="http://i.stack.imgur.com/G6ieN.png" rel="nofollow"><img src="http://i.stack.imgur.com/G6ieN.png" alt="enter image description here"></a></p>  <p>I have searched <a href="http://docs.sencha.com/extjs/6.0/6.0.1-modern/#!/api/Ext.data.AbstractStore-cfg-pageSize" rel="nofollow">the documentation</a> and googled a lot and I have come to nowhere. I have also seen people using a <em>proxy</em> option to receive the data, and to perform modifications to the server in order to make the server support pagination.</p>  <p>I cannot do that here, the data I receive comes this way and this way it will be until the end because I cannot change the server. Moreover, it is <strong>wrong</strong> to change the backend server's logic because of front-end GUI details.</p>  <p>What can I do? This should be straight forward. The Store object has all the data it needs to display, it just needs to split it into pages, that is nothing out of this world, if the only way of doing this is by modifying the server then I don't know...</p>