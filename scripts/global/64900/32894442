<p>I have a function that is using a promise and calls another function when that promise fulfills. I'm trying to spy the function that executed in promise.then, however I can't get the expected calls.count() and I can't understand what I'm doing wrong.</p>  <pre><code>var MyClass = function() {};  MyClass.prototype.doSomething = function(id) {     var promise = this.check(id);      promise.then(function(result) {         this.make();     });      return promise; };  MyClass.prototype.make = function() {};  describe('when', function() {     var myClass;      beforeAll(function() {         myClass = new MyClass();     });      it('should', function(done) {         spyOn(myClass, 'check').and.callFake(function() {             return Promise.resolve();         });          spyOn(myClass, 'make');          myClass.doSomething(11)             .then(function() {                 expect(myClass.make.calls.count()).toEqual(1); // says it is called 0 times                 expect(myClass.check.calls.count()).toEqual(1); // says it is called 2 times                 done();             });     }); }); </code></pre>