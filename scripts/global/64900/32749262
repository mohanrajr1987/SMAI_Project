<p>I have this case where I think I want to have nested <code>it()</code> test cases in a Mocha test. I am sure this is wrong, and I don't see any recommendations to do what I am doing, but I don't really know of a better way at the moment -</p>  <p>basically, I have a "parent" test, and inside the parent test there's a forEach loop with all the "child" tests:</p>  <pre><code>it('[test] enrichment', function (done) {          var self = this;          async.each(self.tests, function (json, cb) {              //it('[test] ' + path.basename(json), function (done) {                  var jsonDataForEnrichment = require(json);                 jsonDataForEnrichment.customer.accountnum = "8497404620452729";                 jsonDataForEnrichment.customer.data.accountnum = "8497404620452729";                 var options = {                     url: self.serverURL + ':' + self.serverPort + '/event',                     json: true,                     body: jsonDataForEnrichment,                     method: 'POST'                 };                  request(options,function (error, response, body) {                     if (error) {                         cb(error);                     }                     else{                         assert.equal(response.statusCode, 201, "Error: Response Code");                         cb(null);                     }                  });              //});          }, function complete(err) {             done(err)         });      }); </code></pre>  <p>as you can see, two separate lines are commented out - I want to include them so that I can easily see the results of each separate test, but then I have this awkward situation of firing the callback for the test alongside the callback for async.each.</p>  <p>Has anyone seen this time of situation before and know of a good solution where the tester can easily see the results of each test in a loop?</p>