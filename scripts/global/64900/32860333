<p>I'm trying to write a test to grab the contents of a div and compare them with my expectation.</p>  <p>I know I can expect multiple results, so I've been trying to iterate over the results one at a time and concatenate them into one string which I can then compare against my expectation.</p>  <p>Code snippets below don't seem to work as expected. My console returns <code>"result to be returned: "</code> with no results before it returns <code>"result INSIDE while:  1"</code> and <code>"result INSIDE while:  1  2"</code>.</p>  <p>This doesn't make any sense to me... Hopefully i've explained well enough what i'm trying to do. The code isn't great at the moment because i've been chopping and changing bits to test what is happening. </p>  <p>A 'tl;dr' summary of what i'm hoping someone can help with :)</p>  <ul> <li>How can I iterate over each item returned by the <code>element.all</code> line and concatenate the values into a string for the function to return to my test?</li> <li>Can anyone help me understand why the if/else appears to be true when i has been set to 0 beforehand (I'm sure that <code>items.length</code> is 2 in this case)</li> <li>Can anyone point me to a good place to read up on promises? I have a feeling my poor understanding of promises is holding me back...</li> </ul>  <p><strong>Test:</strong></p>  <pre><code>var resultPage = require('../page/result.page.js'); var ExpectedArticle1Details = browser.params.articleInTransitInTransit[0]; var ExpectedArticle2Details = browser.params.articleNotCompliantPossibleDelay[0]; var ExpectedIDs = ' ' + ExpectedArticle1Details.TrackingID + '  ' + ExpectedArticle2Details.TrackingID  expect(resultPage.allTrackingIDsAreVisible()).toEqual(ExpectedIDs); </code></pre>  <p><strong>resultPage:</strong></p>  <pre><code>this.allTrackingIDsAreVisible = function () {     var result = "";     element.all(by.css(trackingIDs)).then(function (items) { var i = 0;       while (i &lt;= items.length) {         if (i === items.length) {           console.log("result to be returned: " + result);           return result;         }         else         {           items[i].getAttribute("innerHTML").then(function (value){result += value; console.log("result INSIDE while: " + result)})         }         i = i + 1;       }     })     }; </code></pre>