<p>I'm trying to unit test an example similar to the button click / focus example on this Angular page: <a href="https://docs.angularjs.org/error/" rel="nofollow">https://docs.angularjs.org/error/</a>$rootScope/inprog</p>  <p>However, when I try to catch the error using expect(...).toThrow(), the error is being thrown anyway.</p>  <p>Here is a plunker with an example: <a href="http://plnkr.co/edit/26wogXb2xv4dxUthM2n8" rel="nofollow">http://plnkr.co/edit/26wogXb2xv4dxUthM2n8</a></p>  <pre><code>  $rootScope.clickSecond = function() {     span[0].querySelector('[second]').click();   }    var span = $compile("&lt;span&gt;&lt;button first ng-click='clickSecond()'&gt;Dismiss&lt;/button&gt;&lt;button second ng-click='fail=true'&gt;Fail button&lt;/button&gt;")($rootScope);   function clickButton () {     span[0].querySelector('[first]').click();   }   expect(clickButton).toThrowError(/inprog/); </code></pre>  <p>When I wrap the programmatic clicks in angular.element(...).click(), this test does work. However, the specific library I'm testing that is triggering the events does not use jQuery or angular to do so.</p>  <p>Any hints on why I can't catch the exception? You can see the exception appear in the console. Why does it work with the jqLite wrapper?</p>