<p><sup>NB: Code reproduced from memory.</sup></p>  <p>I have a method generated by <a href="https://github.com/jrief/django-angular" rel="nofollow">djangoAngular</a> that has this signature in my service:</p>  <pre><code>angular.module('myModule') .service('PythonDataService',['djangoRMI',function(djangoRMI){      return {getData:getData};       function getData(foo,bar,callback){          var in_data = {'baz':foo,'bing':bar};          djangoRMI.getPythonData(in_data)          .success(function(out_data) {             if(out_data['var1']){                  callback(out_data['var1']);              }else if(out_data['var2']){                  callback(out_data['var2']);             }          }).error(function(e){             console.log(e)          });         }; }]) </code></pre>  <p>I want to test my service in Jasmine, and so I have to mock my <a href="https://github.com/jrief/django-angular" rel="nofollow">djangoAngular</a> method. I want to call through and have it return multiple datum.</p>  <p>This is (sort of) what I have tried so far, reproduced from memory:</p>  <pre><code>describe('Python Data Service',function(){     var mockDjangoRMI,     beforeEach(module('ng.django.rmi'));     beforeEach(function() {         mockDjangoRMI = {             getPythonData:jasmine.createSpy('getPythonData').and.returnValue({                 success:function(fn){fn(mockData);return this.error},                 error:function(fn){fn();return}             })         }         module(function($provide) {             $provide.provide('djangoRMI', mockDjangoRMI);        });    });    it('should get the data',function(){        mockData = {'var1':'Hello Stackexchange'};        var callback = jasmine.createSpy();        PythonDataService.getData(1,2,callback);        expect(callback).toHaveBeenCalled();    }) }) </code></pre>  <p>But when I put another <code>it</code> block in with a different value for <code>mockData</code>, only one of them is picked up.</p>  <p>I'm guessing that because of the order of operation something is not right with how I'm assigning <code>mockData</code>. How can I mock multiple datum into my djangoRMI function?</p>