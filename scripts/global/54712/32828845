<p>I would like to define some celery tasks. This is my <code>tasks.py</code> module:</p>  <pre><code>from celery import Celery   def create_celery_app(app):     celery = Celery(__name__, broker=app.config['CELERY_BROKER_URL'])     celery.conf.update(app.config)     TaskBase = celery.Task      class ContextTask(TaskBase):         abstract = True          def __call__(self, *args, **kwargs):             with app.app_context():                 return TaskBase.__call__(self, *args, **kwargs)      celery.Task = ContextTask     return celery   celery = create_celery_app(app)  # &lt;--- How to access app here?  @celery.task() def add_together(a, b):     return a + b </code></pre>  <p>The problem is, I have no access to the <code>app</code> here! My app is defined in my <code>wsgi.py</code> module (I am serving with <code>gunicorn</code>)</p>  <pre><code>from myproj.app import create_app  app = create_app() </code></pre>  <p>With <code>app.py</code> being:</p>  <pre><code>...  def create_app():     """     app = Flask(__name__)     ...     return app </code></pre>  <p>How can I access the <code>app</code> singleton instance, created in the <code>wsgi.py</code> module, from my <code>tasks.py</code>?</p>