<p>I have implemented this <code>login</code> function on <strong>views.py</strong></p>  <pre><code>@app.route('/login', methods=['GET', 'POST']) @oid.loginhandler def login():     if g.user is not None and g.user.is_authenticated():         return redirect(url_for('report'))     return render_template('login.html') </code></pre>  <p>it works well on my local machine, but when I deploy the application to the server I get the error</p>  <pre><code>File "/home/ubuntu/myapp/app/views.py", line 14, in oauth_authorize     if not current_user.is_anonymous(): TypeError: 'bool' object is not callable </code></pre>  <p>I also have implemented the <code>before_request</code></p>  <pre><code>@app.before_request def before_request():     g.user = current_user </code></pre>  <p>So, before entering the <code>/login</code>, <code>/before_request</code> is accessed and <code>g.user</code> have the current logged in or not logged in reference. What could be wrong? On local machine it works, and on remote machine it doesn't.</p>  <p>PS: the only tweak I made after deploying the application was changing the <code>host</code> on my <code>run.py</code> file to allow access to the application as follows</p>  <p><strong>run.py</strong></p>  <pre><code>#!flask/bin/python from app import app app.run(debug=True, host='0.0.0.0') </code></pre>