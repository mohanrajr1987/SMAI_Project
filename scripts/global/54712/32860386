<p>I'm learning Flask these days.</p>  <p>At first, I wrote whole codes in <code>main.py</code>, and started to split codes as code increase.</p>  <p>Everything was OK. But <code>@app.before_request</code> worked well when it in <code>main.py</code>, but stopped working after move this code into a separate module.</p>  <p>I spent many hours to catch the reason, but even imagined yet. :(</p>  <p><code>main.py</code> is here</p>  <pre><code>app = Flask(__name__) app.config.from_object(settings) db = SQLAlchemy()   @app.before_request def working():     from user.models import User     print '### called in main ###'     g.user = User.get_by_session()   if __name__ == '__main__':     db.init_app(app)     app.register_blueprint(frontend.views.blueprint)     app.register_blueprint(user.views.blueprint)     import frontend.helpers     app.run() </code></pre>  <p>and <code>frontend/helpers.py</code></p>  <pre><code>from flask import g from main import app from user.models import User  @app.before_request def not_working():     print '### called in frontend.helpers ###'     g.user = User.get_by_session() </code></pre>  <p>The result shows that <code>@app.before_request</code> in <code>frontend/helpers.py</code> not called.</p>  <pre><code>127.0.0.1 - - [30/Sep/2015 15:55:35] "GET /login HTTP/1.1" 200 - ### called in main ### </code></pre>  <p>How can I do this to work well?</p>