<p>I'm using a test unit to verify logins with Flask-Login. The purpose of this is to verify the behavior of a user whose credentials are incorrect:</p>  <pre><code>    def test_login_user(self):         '''test user login'''         user = User(email='teste@teste.com', pass='teste')         db.session.add(user)         db.session.commit()          response = self.app.post('/login', data={'email':              'teste@teste.com', 'pass': 'tste'}, follow_redirects=True)          print(response.get_data(), user.is_authenticated)         assert user.is_authenticated == True         self.assertEqual(response.status, "200 OK") </code></pre>  <p>The problem is that <code>assert user.is_authenticated</code> pass the test, even though the last assert fails:</p>  <pre><code>Traceback (most recent call last): File "./test.py", line 58, in test_login_user self.assertEqual(response.status, "200 OK") AssertionError: '401 UNAUTHORIZED' != '200 OK' - 401 UNAUTHORIZED + 200 OK </code></pre>  <p>Also, on class User, I'm extending UserMixin. Why doesn't user.is_authenticated returns False?</p>