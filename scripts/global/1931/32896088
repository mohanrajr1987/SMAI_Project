<p>I'm new to angularjs and trying to Unit Test my directive. I actually tested it in a fully-working browser session first because it seemed easier, but I wanted to get into unit testing because it's best practice.</p>  <p>In my browser session, my directive functions exactly as I expect it to. It creates a <code>&lt;select&gt;</code> tag that uses <code>ng-model</code> to bind to a property on the <code>$rootScope</code>.</p>  <p>However, when I test with Karma using Jasmine syntax (as the Angular docs recommend), I'm not able to get the model update on the <code>$rootScope</code> when I change the value of the <code>&lt;select&gt;</code> element.</p>  <p>Here's my Jasmine code. It's a snippet, but I assure you that the variables not explicitly defined in the below code are correctly defined using <code>$inject()</code>. I've tested them out to make sure they weren't screwing up:</p>  <pre><code>var el = $compile("&lt;my-directive my-model='myModel'&gt;&lt;/my-directive&gt;")($scope); //the 'my-model' value, 'myModel', gets assigned during the link phase to: //$scope.$root.fields[myModel] var $el = angular.element(el); $el.find('select').val('someVal'); $rootScope.$digest(); expect($scope.$root.fields[myModel]).toEqual("someVal"); </code></pre>  <p>The error that I get is:</p>  <pre><code>Expected '' to equal 'someVal' </code></pre>  <p>What am I doing wrong? Am I misunderstanding the <code>$digest()</code> phase? Or how <code>ng-model</code> works?</p>