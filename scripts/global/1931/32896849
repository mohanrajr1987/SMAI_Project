<p>Consider the following test:</p>  <pre><code>public function it_should_contain_a_list_of_investors_who_belong_to_one_or_more_investment() {     $this-&gt;createInvestment();      $investor = factory(User::class)-&gt;create([         'role_id' =&gt; 4     ]);      $response = $this-&gt;actingAs($investor)                      -&gt;call('GET', 'api/v1/investors?include=investments');      dd(json_decode($response-&gt;getContent()));     $this-&gt;assertNotEmpty(json_decode($response-&gt;getContent())); } </code></pre>  <p>Now consider the following action this test is calling:</p>  <pre><code>public function getAllInvestorsForCompany($slug) {     $users = $this-&gt;investorEntity-&gt;usersForCompany($slug);      $resource = new Collection($users, new InvestorTransformer, 'investor');     dd($_GET);     if (isset($_GET['include'])) {         $usersData = $this-&gt;manager-&gt;parseIncludes($_GET['include'])-&gt;createData($resource)-&gt;toArray();     } else {         $usersData = $this-&gt;manager-&gt;createData($resource)-&gt;toArray();     }      return response()-&gt;json($usersData); } </code></pre>  <p>Note the <code>dd</code>, the <code>$_GET</code> returns []</p>  <p>Lets do the same test in the browser: </p>  <pre><code>array:1 [â–¼   "include" =&gt; "investments.offering.company" ] </code></pre>  <p>Ok so in the browser I get back investments.offering.company, because that is what I am passing in as the <code>?include=</code> But in the test its like laravel ignores the ?include and moves on.</p>  <p>is this a default behaviour of laravel 5.1 tests and if so how do I shut it off?</p>