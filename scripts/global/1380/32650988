<p>I've been having some issues.</p>  <p>If I create test methods based on the following class:</p>  <pre><code>&lt;?php class Calc {     /**      * @assert (0, 0) == 0      * @assert (0, 1) == 1      */     public function add($a, $b)     {         return $a + $b;     } } </code></pre>  <p>... then I get:</p>  <pre><code>&lt;?php  /**  * Generated by PHPUnit_SkeletonGenerator on 2015-09-07 at 10:34:19.  */ require_once '../Calc.php'; class CalcTest extends PHPUnit_Framework_TestCase {      /**      * @var Calc      */     protected $object;      protected function setUp() {         $this-&gt;object = new Calc;     }      protected function tearDown() {      }      /**      * Generated from @assert (0, 0) == 0.      *      * @covers Calc::add      * @group production      */     public function testAdd() {         $this-&gt;assertEquals(                 0                 , $this-&gt;object-&gt;add(0, 0)         );     }      /**      * Generated from @assert (0, 1) == 1.      *      * @covers Calc::add      * @group production      * @group development      */     public function testAdd2() {         $this-&gt;assertEquals(                 1                 , $this-&gt;object-&gt;add(0, 1)         );     } } </code></pre>  <p>...and this is cool. It's works like a charme.</p>  <p>BUT if I want to use the annotation @assertRegExp(expectedRegex, string pattern) in another class:</p>  <pre><code>&lt;?php class RegexExample {      private $input;      public function __construct() {}      /**      * @assertRegExp ('/^[0-9]*$/', $this-&gt;object-&gt;setDigit('Mowgli'))      * @assertRegExp ('/^[0-9]*$/', $this-&gt;object-&gt;setDigit('79579534'))      */     public function setDigit($inp) {         $this-&gt;input= $inp;     } } </code></pre>  <p>... when I create test methods now the test class is generated, but it doesnt implement the test methods:</p>  <pre><code>&lt;?php  /**  * Generated by PHPUnit_SkeletonGenerator on 2015-09-18 at 13:22:27.  */ class RegexExampleTest extends PHPUnit_Framework_TestCase {      /**      * @var User      */     protected $object;      protected function setUp() {         $this-&gt;object = new User;     }      protected function tearDown() {      }      /**      * @covers User::setDigit      * @todo   Implement testSetDigit().      */     public function testSetDigit() {         // Remove the following lines when you implement this test.         $this-&gt;markTestIncomplete(                 'This test has not been implemented yet.'         );     } } </code></pre>  <p>The whole point is to get test methods like this one:</p>  <pre><code>public function testSetDigit() {         $this-&gt;assertRegExp(                 '/^[0-9]*$/'                 ,   $this-&gt;object-&gt;setDigit('Mowgli')         );     } </code></pre>  <p>... which works, but if I want to do fx n numbers af test methods I would rather use annotations in my respective object class than copy/paste and edit approach.</p>  <p>If I find a solution I'll post it here. </p>  <p>I'm a noob at phpunit, so could be a lame noob mistake I made. If so, sry in advance.</p>  <p>Thx in advance.</p>