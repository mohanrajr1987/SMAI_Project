<p>I am trying to configure test classes for my Symfony 2.7 project. I am testing a controller that uses doctrine for connecting to the data base.</p>  <p>I finally managed to do it extending KernelTestCase in order to avoid this Fatal error: Call to a member function "X" on a non-object. But here is the problem: I was triying to order my code and simplify 5 test functions into one by using a additionProvider:</p>  <pre><code>public function additionProvider() {     $first=$this-&gt;service-&gt;getTranslation("","en");     return array     (          'original not created' =&gt;array($first,"")     ); } </code></pre>  <p>and I want to use it like:</p>  <pre><code>    /**      * @dataProvider additionProvider      */     public function testGetTranslation($expected, $actual)     {         $this-&gt;assertEquals($expected, $actual);     } </code></pre>  <p>here is my setUp():</p>  <pre><code>public function setUp()     {     self::bootKernel();     $this-&gt;em = static::$kernel-&gt;getContainer()            -&gt;get('doctrine')            -&gt;getManager()             ;     $this-&gt;service = new \DictionaryBundle\Controller\UtilController($this-&gt;em);  } </code></pre>  <p>I tried to add the first test like this and the error appeared again, like if it couldn't access to the repository. So, is possible to use addittionProviders with repository functions? how?</p>  <p>Thanks!</p>