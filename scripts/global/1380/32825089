<p>Here is a Factory :</p>  <pre><code>namespace Maintenance\Factory\View\Helper;  use Zend\ServiceManager\FactoryInterface; use Zend\ServiceManager\ServiceLocatorInterface; use Maintenance\View\Helper\SousMenuContrat;  class SousMenuContratFactory implements FactoryInterface {     public function createService(ServiceLocatorInterface $serviceLocator)         {             $realServiceLocator = $serviceLocator-&gt;getServiceLocator();              $maiContratService = $realServiceLocator-&gt;get(                 'Maintenance\Service\Model\FMaiContratService'             );                 return new SousMenuContrat(                 $maiContratService             );         }    }  </code></pre>  <p>I have to write some PHPUnit tests, I began to do so :</p>  <pre><code>public function testCreateService()     {         $this-&gt;mockDriver = $this-&gt;getMock('Zend\Db\Adapter\Driver\DriverInterface');         $this-&gt;mockConnection = $this-&gt;getMock('Zend\Db\Adapter\Driver\ConnectionInterface');         $this-&gt;mockDriver-&gt;expects($this-&gt;any())-&gt;method('checkEnvironment')-&gt;will($this-&gt;returnValue(true));         $this-&gt;mockDriver-&gt;expects($this-&gt;any())-&gt;method('getConnection')-&gt;will($this-&gt;returnValue($this-&gt;mockConnection));         $this-&gt;mockPlatform = $this-&gt;getMock('Zend\Db\Adapter\Platform\PlatformInterface');         $this-&gt;mockStatement = $this-&gt;getMock('Zend\Db\Adapter\Driver\StatementInterface');         $this-&gt;mockDriver-&gt;expects($this-&gt;any())-&gt;method('createStatement')-&gt;will($this-&gt;returnValue($this-&gt;mockStatement));         $this-&gt;adapter = new Adapter($this-&gt;mockDriver, $this-&gt;mockPlatform);         $this-&gt;sql = new Sql($this-&gt;adapter);           $mockTableGateway = $this-&gt;getMock('Zend\Db\TableGateway\TableGateway', array(), array(), '', false);          $maiContratTable = $this-&gt;getMockBuilder('Maintenance\Model\BDD\FMaiContratTable')             -&gt;setMethods(array())             -&gt;setConstructorArgs(array($mockTableGateway, $this-&gt;adapter, $this-&gt;sql))             -&gt;getMock();           $smMock = $this-&gt;getMockBuilder('Zend\ServiceManager\ServiceManager')                        -&gt;setMethods(array('get'))                        -&gt;getMock();          $smMock-&gt;expects($this-&gt;at(0))             -&gt;method('get')             -&gt;with('Maintenance\Service\Model\FMaiContratService')             -&gt;will($this-&gt;returnValue(new FMaiContratService($maiContratTable)));          $factory = new SousMenuContratFactory();         $runner = $factory-&gt;createService($smMock);     } </code></pre>  <p>But I got some problems. This tells me : </p>  <blockquote>   <p>Call to undefined method Mock_ServiceManager_3ed93deb::getServiceLocator()</p> </blockquote>  <p>What have I misunderstood ? </p>  <p>Thanks !</p>