<p>I'm using a module (<a href="http://binaryjs.com/" rel="nofollow">BinaryJS</a>) to pass a video stored in a server to the browser (the client).</p>  <p>My goal is to play not the entire video, but a part.</p>  <p>What I've tried was </p>  <pre><code>//Creating the client var client = new BinaryClient('ws://localhost:9000/binary-endpoint')  //Inserting the video element in the body var video = document.createElement("video"); document.body.appendChild(video);  //Array where the arrayBuffers will be stored var parts =  [];  client.on('stream', function(stream,meta){   stream.on('data',function(data){       parts.push(data);   });   stream.on('end',function(){     video.src = (window.URL||window.webkitURL).createObjectURL(new Blob(parts.slice(0,500)));     $('video')[0].play();     $('video')[0].controls=true;   }) }); </code></pre>  <p>Note that, in order of achieve the goal, I've fed the <code>Blob</code> constructor with just a part of received data (<code>parts.slice(0,500)</code>).</p>  <p>The code above doesn't work, unless I feed the <code>Blob</code> with the whole received data - <code>new Blob(parts)</code>.</p>  <p>What is the better workaround to this problem?</p>  <p>I appreciate any help. </p>