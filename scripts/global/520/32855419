<p>I am new to GStreamer and have not been able to understand how to push a rtsp stream up to Wowza. </p>  <p><em>Background:</em> We are streaming from a Sony SNC-WR630 network camera. Unfortunately the camera was designed to be mounted from a ceiling and Sony provides no way to flip the stream. In our case, the camera must be mounted "upside-down" thus, the video stream is inverted. </p>  <p>We are currently using ffmpeg to flip the rtsp stream and send it up to Wowza but the solution is less than optimal and requires a dedicated PC to handle the transcoding. </p>  <p>GStreamer takes advantage of the GPU on a Raspberry PI2 which easily handles the video rotation. Unfortunately I can not figure out how to push the GStreamer flipped video stream up to Wowza.  </p>  <p>I can test/view the original stream via playbin: <code>gst-launch-1.0 playbin uri="rtsp://admin:admin@192.168.0.98:1026/media/video2"</code></p>  <p>The following rotates the stream and displays it via autovideosink: <code>gst-launch-1.0 rtspsrc location=rtsp://admin:admin@192.168.0.98:1026/media/video2 latency=0 ! decodebin ! videoflip method=2 ! videoconvert ! autovideosink -vvv</code></p>  <p>Partial output:</p>  <pre><code>Setting pipeline to PAUSED ... Pipeline is live and does not need PREROLL ... Progress: (open) Opening Stream Progress: (connect) Connecting to rtsp://admin:admin@192.168.0.98:1026/media/video2 Progress: (open) Retrieving server options Progress: (open) Retrieving media info Progress: (request) SETUP stream 0 /GstPipeline:pipeline0/GstRTSPSrc:rtspsrc0/GstRtpBin:manager: latency = 0 /GstPipeline:pipeline0/GstRTSPSrc:rtspsrc0/GstRtpBin:manager: ntp-sync = false /GstPipeline:pipeline0/GstRTSPSrc:rtspsrc0/GstRtpBin:manager: use-pipeline-clock = false /GstPipeline:pipeline0/GstRTSPSrc:rtspsrc0/GstRtpBin:manager: drop-on-latency = false /GstPipeline:pipeline0/GstRTSPSrc:rtspsrc0/GstRtpBin:manager: buffer-mode = Slave receiver to sender clock /GstPipeline:pipeline0/GstRTSPSrc:rtspsrc0/GstUDPSrc:udpsrc1: timeout = 5000000000 /GstPipeline:pipeline0/GstRTSPSrc:rtspsrc0/GstUDPSrc:udpsrc2.GstPad:src: caps = application/x-rtcp /GstPipeline:pipeline0/GstRTSPSrc:rtspsrc0/GstUDPSrc:udpsrc2: caps = application/x-rtcp Progress: (request) SETUP stream 1 /GstPipeline:pipeline0/GstRTSPSrc:rtspsrc0/GstUDPSrc:udpsrc3: timeout = 5000000000 /GstPipeline:pipeline0/GstRTSPSrc:rtspsrc0/GstUDPSrc:udpsrc4.GstPad:src: caps = application/x-rtcp /GstPipeline:pipeline0/GstRTSPSrc:rtspsrc0/GstUDPSrc:udpsrc4: caps = application/x-rtcp Progress: (open) Opened Stream Setting pipeline to PLAYING ... New clock: GstSystemClock Progress: (request) Sending PLAY request Progress: (request) Sending PLAY request Progress: (request) Sent PLAY request </code></pre>  <p>Can anybody provide a working rtsp or rtmp pipeline that pushes the rotated stream up to Wowza?</p>