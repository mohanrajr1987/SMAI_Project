<p>I have a REST GET API that is written using WCF library to return Stream of a specific requested file that is located on API server that hosts that web service application. The service works well if the size of the requested file is small; that is less than 100 MB.  But if file size is greater than > 100 MB, then the service returns 0 bytes without any logged information I can get the library method (saying, the "catch" block).</p>  <p>The library method (the class library project) returns Stream of needed file is</p>  <pre><code>public Stream GetFile(string fileId, string seekStartPosition=null)         {             _lastActionResult = string.Empty;             Stream fileStream = null;              try             {             Guid fileGuid;             if (Guid.TryParse(fileId, out fileGuid) == false)             {                 _lastActionResult = string.Format(ErrorMessage.FileIdInvalidT, fileId);             }             else             {                 ContentPackageItemService contentItemService = new ContentPackageItemService();                 string filePath = DALCacheHelper.GetFilePath(fileId);                  if (File.Exists(filePath))                 {                     fileStream = new FileStream(filePath, FileMode.Open, FileAccess.Read, FileShare.Read);                      long seekStart = 0;                     // if seek position is specified, move the stream pointer to that location                     if (string.IsNullOrEmpty(seekStartPosition) == false &amp;&amp; long.TryParse(seekStartPosition, out seekStart))                     {                         // make sure seek position is smaller than file size                         FileInfo fi = new FileInfo(filePath);                         if (seekStart &gt;= 0 &amp;&amp; seekStart &lt; fi.Length)                         {                             fileStream.Seek(seekStart, SeekOrigin.Begin);                         }                         else                         {                             _lastActionResult = string.Format(ErrorMessage.FileSeekInvalidT, seekStart, fi.Length);                         }                     }                 }                 else                 {                     _lastActionResult = string.Format(ErrorMessage.FileNotFoundT, fileId);                     Logger.Write(_lastActionResult,                         "General", 1, Constants.LogId.RESTSync, System.Diagnostics.TraceEventType.Error, System.Reflection.MethodBase.GetCurrentMethod().Name);                 }              }       }       catch(Exception ex)       {           Logger.Write(ex,"General", 1, Constants.LogId.RESTSync, System.Diagnostics.TraceEventType.Error, System.Reflection.MethodBase.GetCurrentMethod().Name);       }       return fileStream;      } </code></pre>  <p>API method on the client side project (where .svc file is):</p>  <pre><code>[WebGet(UriTemplate = "files/{fileid}")]         public Stream GetFile(string fileid)         {             ContentHandler handler = new ContentHandler();             Stream fileStream = null;             try             {                 fileStream = handler.GetFile(fileid);             }             catch (Exception ex)             {                 Logger.Write(string.Format("{0} {1}", ex.Message, ex.StackTrace), "General", 1, Constants.LogId.RESTSync, System.Diagnostics.TraceEventType.Error, System.Reflection.MethodBase.GetCurrentMethod().Name);                  throw new WebFaultException&lt;ErrorResponse&gt;(new ErrorResponse(HttpStatusCode.InternalServerError, ex.Message), HttpStatusCode.InternalServerError);             }              if (fileStream == null)             {                 throw new WebFaultException&lt;ErrorResponse&gt;(new ErrorResponse(handler.LastActionResult), HttpStatusCode.InternalServerError);             }              return fileStream;          } </code></pre>