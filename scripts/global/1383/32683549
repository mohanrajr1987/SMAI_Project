<p>In my app I have an imageview on screen "A" and a webview on screen "B".</p>  <p>On screen "A" I start an sync task in order to download and show a png file into the imageview.</p>  <p>On screen "B" I load some HTML info. in which the link to the same png on screen "A" is included. </p>  <p>The problem is that the same image looks different on both screens. When loaded in the imageview, the png looks way smaller than when it is loaded in the webview.</p>  <p>The height and the width of the imageview are set to wrap_content. There is no additional scaling or something similar. </p>  <p>Why is this happening?</p>  <p><strong>---EDIT---</strong></p>  <p><strong>screen "A" layout</strong></p>  <pre><code>    &lt;RelativeLayout     xmlns:android="http://schemas.android.com/apk/res/android"     android:orientation="vertical"     android:layout_width="match_parent"     android:layout_height="match_parent"     android:background="@drawable/background_repeat"&gt;        &lt;ImageView             android:id="@+id/logo_image_view"             android:layout_width="wrap_content"             android:layout_height="wrap_content"             android:layout_marginTop="16dp"             android:layout_gravity="center_horizontal"/&gt;  &lt;/RelativeLayout&gt; </code></pre>  <p><strong>screen "B" layout</strong></p>  <pre><code>    &lt;RelativeLayout      xmlns:android="http://schemas.android.com/apk/res/android"      android:layout_width="fill_parent"      android:layout_height="fill_parent"&gt;                   &lt;WebView                     android:layout_width="match_parent"                     android:layout_height="wrap_content"                     android:id="@+id/about_us_web_view"                     /&gt;  &lt;/RelativeLayout&gt; </code></pre>  <p><strong>screen "A" asyncTask</strong></p>  <pre><code>private class DownloadLogoTask extends AsyncTask&lt;ImageView, String, Bitmap&gt; {      private String urlString;      public DownloadLogoTask(String urlString) {         this.urlString = urlString;     }      @Override     protected Bitmap doInBackground(ImageView... imageViews) {          try {             URL url = new URL(urlString);             HttpURLConnection urlConnection = (HttpURLConnection)url.openConnection();             InputStream is = urlConnection.getInputStream();             Bitmap bitmap = BitmapFactory.decodeStream(is);              if(bitmap != null) {                 return bitmap;             }          } catch (Exception e) {          }         return null;     }      @Override     protected void onPostExecute(Bitmap result) {         if(result != null) {             logoImageView.setImageBitmap(result);         }     } } </code></pre>  <p><strong>screen "B" usage of the webView</strong></p>  <pre><code>aboutUsWebView.loadData(descriptionStr, "text/html", "UTF-8"); </code></pre>