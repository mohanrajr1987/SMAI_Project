<p>I have written a pyhton GUI application using wx.Python  Here below the code what it does on clicking start button in main frame it will launch a frame(MyForm) in separate thread where it print some text.What i need, on closing MyForm frame current child thread execution should terminate or kill and control should go back to main thread. All the code i have written in one module</p>  <pre><code>import wx, wx.html from threading import Thread import wx import control import sys  class Frame(wx.Frame):      def __init__(self,parent,id):         wx.Frame.__init__(self, None, -1, 'Sample frame', size=(750, 350))         self.panel = wx.Panel(self, -1)          '''         button &lt;start&gt; to start the script         '''         self.button_start = wx.Button(self.panel,-1,"Start",pos=(100,220),size=(100,40))         self.button_close = wx.Button(self.panel,-1,"Close",pos=(300,220),size=(100,40))          self.Bind(wx.EVT_BUTTON,self.click_start,self.button_start)         self.Bind(wx.EVT_BUTTON, self.OnClose,self.button_close)      def click_start (self,event):         self.MyTask()      def MyTask(self):         step_a = 1         step_b = 50          self.frame2 = MyForm().Show()         TestingThread(step_a, step_b)      def OnCloseWindow(self,event):         self.Close(True)      def OnClose(self, event):         dlg = wx.MessageDialog(self,              "Do you really want to close this application?",             "Confirm Exit", wx.OK|wx.CANCEL|wx.ICON_QUESTION)         result = dlg.ShowModal()         dlg.Destroy()         if result == wx.ID_OK:             self.Destroy()  class App(wx.App):      def __init__(self, redirect=True, filename=None):          wx.App.__init__(self, redirect, filename)      def OnInit(self):         self.frame = Frame(parent=None, id=-1)  #Create Frame         self.frame.Show()         return True      def OnExit(self):         self.Exit()  class TestingThread(Thread): """Test Worker Thread Class."""      def __init__(self,a, b):             """Init Worker Thread Class."""         Thread.__init__(self)          self.a = a         self.b = b         self.start()       def run(self):          self.res=control.main(self.a, self.b)  class RedirectText(object):     def __init__(self,aWxTextCtrl):         self.out=aWxTextCtrl      def write(self,string):         self.out.WriteText(string)  class MyForm(wx.Frame):      def __init__(self):         wx.Frame.__init__(self, None, wx.ID_ANY, "wxPython Log Redirect Box",size= (500,300))         self.Bind(wx.EVT_CLOSE, self.OnClose)         panel = wx.Panel(self, wx.ID_ANY)         log = wx.TextCtrl(panel, wx.ID_ANY, size=(500,300),                           style = wx.TE_MULTILINE|wx.TE_READONLY|wx.HSCROLL|wx.TE_NOHIDESEL)          sizer = wx.BoxSizer(wx.VERTICAL)         sizer.Add(log, 1, wx.ALL|wx.EXPAND, 5)          panel.SetSizer(sizer)          # redirect text here         redir=RedirectText(log)         sys.stdout=redir      def OnClose(self, event):          dlg = wx.MessageDialog(self,              "Do you really want to close this application?",             "Confirm Exit", wx.OK|wx.CANCEL|wx.ICON_QUESTION)         result = dlg.ShowModal()         dlg.Destroy()         if result == wx.ID_OK:             self.Destroy()             self.MakeModal(False)    if __name__ == '__main__':      app = App(redirect=False)     app.MainLoo </code></pre>