<p>I load a menu with filenames from which the user will be able to choose from.<br> If the file name contains an underscore character (_), the     </p>  <p><code>event.GetEventObject().GetLabel(event.GetId())</code>    </p>  <p>returns a value where any underscore character (_) is doubled up.<br> So a file name of <code>a_file.txt</code> becomes <code>a__file.txt</code><br> I can get around the problem by using    </p>  <p><code>event.GetEventObject().MenuItems[event.GetId()].GetLabel()</code>   </p>  <p>but not only do I not know if there are any repercussions of using this but I don't particularly want to trawl through 1000's of lines of code hunting for instances of this strange issue.<br> Does anyone have an explanation for this behaviour and how to avoid it?    </p>  <p>The demonstration code below illustrates the problem and the work around.<br> The tests are for a normal file name, a file name with spaces and a file name with an underscore.   </p>  <pre><code>import wx  class MenuProblem(wx.Frame):      def __init__(self, *args, **kwds):         self.frame=wx.Frame.__init__(self, *args, **kwds)         self.menubar = wx.MenuBar() #        self.statusbar = wx.StatusBar(self-1)         self.CreateStatusBar()         self.SetStatusText("Demonstration of wxPython")         menu1 = wx.Menu()         menu_item_1 = menu1.Append(wx.ID_OPEN, "&amp;File")         menu_item_2 = menu1.Append(wx.ID_EXIT, "&amp;Exit...")      #Build a list of things via another function or just a declaration         self.list_of_things = ["afilename.txt", "another filename.txt", "problem_filename.txt"]         list_used = wx.Menu()         thing_count = 0          for thing in self.list_of_things:             t1 = wx.MenuItem(list_used, thing_count, thing)             list_used.AppendItem(t1)             thing_count +=1          thing_end = wx.MenuItem(list_used,199,'End of List')         list_used.AppendItem(thing_end)          menu1.AppendMenu(wx.ID_FILE,'&amp;Problem Demo',list_used)         menu1.SetHelpString(wx.ID_FILE, 'Click problem_filename.txt to see the doubling of underscore')          self.menubar.Append(menu1, "&amp;File")         self.SetMenuBar(self.menubar)     # Create bindings for the Thing list         i_count = 0         for i in self.list_of_things:             self.Bind(wx.EVT_MENU, self.OnThingOpen, id=i_count)             i_count = i_count + 1         self.Bind(wx.EVT_MENU, self.OnThingEnd, id=199)         self.Bind(wx.EVT_MENU, self.OnClose, id=wx.ID_EXIT)         self.Show(True)      def OnThingOpen(self, event):         id_selected = event.GetId()         obj = event.GetEventObject()         print "Option        :", id_selected         print "Label returned:", obj.GetLabel(id_selected)         print "Now get the label in another way"         print "Label returned:", obj.MenuItems[id_selected].GetLabel()         print "From the range:"         for i in range(obj.MenuItemCount):             print "\t\t", obj.MenuItems[i].GetLabel()         print "."*50      def OnThingEnd(self, event):         id_selected = event.GetId()         obj = event.GetEventObject()         print "Option         :", id_selected         print "Label returned :",obj.GetLabel(id_selected)         print "Enabled", obj.IsEnabled(id_selected)         print obj.MenuItemCount         for i in range(obj.MenuItemCount):             print obj.MenuItems[i].GetLabel()      def OnClose(self, event):         self.Close()  if __name__ == '__main__':     app = wx.App()     MC=MenuProblem(parent=None, id=-1)     app.MainLoop()     </code></pre>  <p>EDIT:<br> It would seem that this is a bug in wxpython 2.8 (on Linux, perhaps other platforms) as the problem does not manifest itself using wxpython 3.0 on Windows. Information courtesy of @pss who tested the code for me.<br> The result being that I have indeed trawled through my code and used the work-around as detailed above.</p>