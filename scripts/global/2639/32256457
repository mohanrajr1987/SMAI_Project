<p>I want to create a matplot that will change its size as I change the size of the app window. I've tried to approach it by binding the EVT_SIZE to a function like this:</p>  <pre><code>        #binding to events         self.Bind(wx.EVT_SIZE, self.onSize) ... def onSize(self, event):         print self.GetClientSize()         self.noisePanel.changeSize(*self.GetClientSize()) .... def changeSize(self, x, y):             frameSize = np.divide([x,y], self.frame.MY_DPI)             self.figure.set_size_inches(frameSize, forward=True) </code></pre>  <p>And I see that it's going into the function. However, it's not updating. I have the sizes but the figure itself is not changing. </p>  <p>I've tried: </p>  <ul> <li>Using frame.Update()</li> <li>Using plt.show(), which opens up a NEW app window where I CAN change the size of the plot, but I want it in the original window.</li> <li>Using app.close</li> <li>Putting in forward = True. This didn't help even though it's from the documentation: "optional kwarg forward=True will cause the canvas size to be automatically updated; e.g., you can resize the figure window from the shell"</li> </ul>  <p>In addition, if I bind my EVT_SIZE to a function, the other GUI's do not rescale according to window size, which is frustrating. Here's an example: <a href="http://i.stack.imgur.com/XsypT.png" rel="nofollow"><img src="http://i.stack.imgur.com/XsypT.png" alt="Normal"></a></p>  <p>gets turned into...<a href="http://i.stack.imgur.com/WfbiB.png" rel="nofollow"><img src="http://i.stack.imgur.com/WfbiB.png" alt="enter image description here"></a></p>  <p>do you see how the status bar got really fat? In a normal situation where I didn't bind the EVT_SIZE the status bar would be smart enough to retain its size. </p>  <p>How should I approach this problem?</p>