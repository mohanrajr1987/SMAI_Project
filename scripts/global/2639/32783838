<p>The <a href="http://www.wxpython.org/docs/api/wx.ProgressDialog-class.html" rel="nofollow"><code>ProgressDialog</code></a> class allows passing the option <code>wx.PD_CAN_ABORT</code> which adds a "Cancel" button to the dialog. I need to rebind the event bound to this button, to make it <code>Destroy()</code> the dialog instead of just "making the next call to Update() [to] return False" as the class's documentation describes.</p>  <pre><code>class PortScanProgressDialog(object):      """Dialog showing progress of the port scan."""      def __init__(self):         self.dialog = wx.ProgressDialog(             "COM Port Scan",             PORT_SCAN_DLG_MSG,             MAX_COM_PORT,             style=wx.PD_CAN_ABORT | wx.PD_AUTO_HIDE)      def get_available_ports(self):         """Get list of connectable COM ports.          :return: List of ports that e.g. exist, are not already open,             that we have permission to open, etc.         :rtype: list of str         """         com_list = []         keep_going = True         progress_count = 0         for port_num in range(MIN_COM_PORT, MAX_COM_PORT + 1):             if not keep_going:                 break             port_str = "COM{}".format(port_num)             try:                 # Check if the port is connectable by attempting to open                 # it.                 t_port = Win32Serial(                     port_str, COMPATIBLE_BAUDRATE,                     bytesize=SerialThread.BYTESIZE,                     parity=SerialThread.PARITY,                     stopbits=SerialThread.STOPBITS, timeout=4)                 t_port.close()                 com_list.append(port_str)             finally:                 progress_count += 1                 # This returns a tuple with 2 values, the first of which                 # indicates if progress should continue or stop--as in                 # the case of all ports having been scanned or the                 # "Cancel" button being pressed.                 keep_going = self.dialog.Update(progress_count, msg)[0]         return com_list </code></pre>  <p>This class is used elsewhere in this fashion:</p>  <pre><code># Scan for available ports. port_scan_dlg = PortScanProgressDialog() ports = port_scan_dlg.get_available_ports() port_scan_dlg.dialog.Destroy() </code></pre>  <p>When an unhandled exception occurs in <code>get_available_ports()</code> the progress dialog will stay open (which is expected behaviour), but the problem is that when I hit "Cancel" the button is greyed and the window is not closed (clicking "X" also fails to close the window).</p>  <p>I'm trying to re-bind the "Cancel" button to a method that <code>Destroy()</code>s the dialog. How can I do this?</p>  <p>I'm aware of this <a href="http://stackoverflow.com/questions/5910193/is-wxpython-progressdialog-cancel-event-possible">workaround</a>, but I think it's cleaner to use <code>ProgressDialog</code> and modify it to my needs.</p>