<p>I have a GUI with buttons 'OK' and 'Cancel' clicking on which creates a child threads which pops up a dialog box saying 'OK/Cancel button is pressed'. Now when i click on OK button, i want child thread calling it must wait for another process(may be another dialogbox saying wait) and then must pop up message 'OK button is pressed'. I used wx.timer for childthread to wait but could not get it worked.</p>  <p>How to make a child thread pause and continue(like an interrupt) when the process is done?  Below find my trials!</p>  <pre><code>import wx, time from threading import Thread  ID_RUN = 101 ID_RUN2 = 102   class ChildThread_OK(Thread):     def __init__(self, myframe):     """Init Worker Thread Class."""         Thread.__init__(self)         self.myframe = myframe         self._want_abort = True      def run(self):         if self._want_abort is True:         self.waitevent()         wx.CallAfter(self.myframe.AfterRun, 'Ok button pressed')      def waitevent(self):         wx.CallAfter(self.myframe.message,"Oops!!there is another process running wait for it to finish. Closing this dialog box in 2s...")      def closeit(self, event):         self.dialogBox.Destroy()  class ChildThread_Cancel(Thread):     def __init__(self, myframe):         Thread.__init__(self)         self.myframe = myframe      def run(self):         wx.CallAfter(self.myframe.AfterRun, "Cancel button pressed")   class MyFrame(wx.Frame):     def __init__(self, parent, ID, title):         wx.Frame.__init__(self, parent, ID, title)         panel = wx.Panel(self, -1)         mainSizer = wx.BoxSizer(wx.HORIZONTAL)         mainSizer.Add(wx.Button(panel, ID_RUN, "OK"))         mainSizer.Add(wx.Button(panel, ID_RUN2, "Cancel"))          panel.SetSizer(mainSizer)         mainSizer.Fit(self)         wx.EVT_BUTTON(self, ID_RUN, self.onRun)         wx.EVT_BUTTON(self, ID_RUN2, self.onRun2)      def onRun(self, event):         self.child = ChildThread_OK(myframe=self)         self.child.daemon = True         self.child.start()      def onRun2(self, event):         self.child2 = ChildThread_Cancel(myframe = self)         self.child2.daemon = True         self.child2.start()      def AfterRun(self, msg):         dlg = wx.MessageDialog(self, msg, "Message", wx.OK | wx.ICON_INFORMATION)         dlg.ShowModal()         dlg.Destroy()      def message(self,msg):         dlg = wx.BusyInfo(msg)         time.sleep(5)  class MyApp(wx.App):     def OnInit(self):         frame = MyFrame(None, -1, "My GUI")         frame.Show(True)         frame.Centre()         return True  app = MyApp(0) app.MainLoop() </code></pre>