<p>I've the following code that I've extract from <a href="https://github.com/Fotolia/ovh-rest" rel="nofollow">ovh-rest</a> gem:</p>  <pre><code>method = :get @api_url = "https://api.ovh.com/1.0" @api_key, @api_secret, @consumer_key = "123456789", "abcdef", "ghijkl" endpoint = "/ip/123.456.678/" url = @api_url + endpoint uri = URI.parse(url) body = nil ts = Time.now.to_i.to_s sig = "$1$" + Digest::SHA1.hexdigest("#{@api_secret}+#{@consumer_key}+#{method.upcase}+#{url}+#{body}+#{ts}") request_uri = uri.path request_uri += '?' + uri.query if uri.query request = Net::HTTP.const_get(method.capitalize).new(request_uri) request["X-Ovh-Application"] = @api_key request["X-Ovh-Consumer"] = @consumer_key request["X-Ovh-Timestamp"] = ts request["X-Ovh-Signature"] = sig request["Content-type"] = "application/json" http = Net::HTTP.new(uri.host, uri.port) http.use_ssl = true response = http.request(request) JSON.parse(response.body) </code></pre>  <p>If I do everything step by step I've the following error:</p>  <pre><code>{   "errorCode": "QUERY_TIME_OUT",   "httpCode": "400 Bad Request",   "message": "Query out of time" }  </code></pre>  <p>But if I wait some seconds (variable duration) before doing <code>response = http.request(request)</code>, I've a successful request:</p>  <pre><code>{   "organisationId": "nil",   "country": "myCountry",   "routedTo": {     "serviceName": "somename"   },   "ip": "123.456.678/32",   "canBeTerminated": true,   "type": "failover",   "description": "nil" } </code></pre>  <p>I don't know if the problem comes from my server (ruby process to high for quick response) or if it's coming from somewhere else around.. </p>  <p><strong>Important note :</strong></p>  <p>This code was working like a charm but some days ago.. Stop working. </p>