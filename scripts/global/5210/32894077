<p>I have an app that has a Service that offloads photos that people are taking to the server. </p>  <p>Specifically, users are sent to the device's native camera to take a photo and then the photo is returned via intent to the app from which they "approve" it. </p>  <p>This act of approval saves it out to the file system and the Service comes along every x seconds, notices files awaiting offload and offloads them.</p>  <p>This all works fine.</p>  <p>However... in situations where there is bad connectivity but enough for the HTTP handshake, the app finds itself in a state where even though the offload is happening in a Service, at the point where the user is coming *back to my app from the photo taking (and Android is delivering the 4-8mb photo back to my approval Activity, my app hangs - sometimes long enough to provoke the "do you want to kill or wait" prompt.  Eventually (if you wait) it does succeed in making its way back to the app.</p>  <p>I've verified that this is Network related because when the connectivity is strong (or when the app is in airplane mode - so the upload just fails instantly) everything works perfectly smoothly.  The *only time this happens is when the offloader in the Service is hampered by a hinky connection.</p>  <p>So, my question is - what can I do about this?  Is there some way I can isolate the Service to not have a larger effect on the app? Is my solution to write a partner app that sits on the device and just looks to offload the files (would that even solve the problem?). </p>  <p><a href="https://www.dropbox.com/s/ly5pfu5n0v7vgvl/anr%20log%201.txt?dl=0" rel="nofollow">HERE</a> is the report I'm getting when the WAIT/KILL prompt is offered to the user. I'm not sure what to make of it.</p>