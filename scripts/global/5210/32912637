<p>I asked a related question earlier today on stackoverflow but due to both the complexity of the code (not being able to post it) and my own noviceness I wasn't able to really implement a solution from the answers given.</p>  <p>So my question now is, for a code such as:</p>  <pre><code>$http.get(ArbitraryInput).then(function (response) {$scope.data = response}); </code></pre>  <p>(you can substitute "then" with "success" above, I use "then" because success is deprecated according to the updated $http api)</p>  <p>How do I actually save the response object in $scope.data? From what I've been doing so far, $scope.data is "undefined" when I later typed in the code:</p>  <p>console.log($scope.data3);</p>  <p>Thanks!</p>  <p><strong>UPDATE ONE</strong></p>  <p>Apparently if I put console.log($scope.data); <strong>inside</strong> the console will display what I want for $scope.data. But if it is outside, it will remain "undefined" in the console. In other words:</p>  <pre><code>$http.get(ArbitraryInput).then(function (response) {$scope.data = response; console.log($scope.data);}); </code></pre>  <p>will return whatever sort of object response was. in the console, but</p>  <pre><code>$http.get(ArbitraryInput).then(function (response) {$scope.data = response;}); console.log($scope.data); </code></pre>  <p>will return "undefined" in the console.</p>