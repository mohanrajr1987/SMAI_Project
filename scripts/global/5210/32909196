<p>So I tried to run angular.toJson on two different objects. They're both arrays.</p>  <p>The difference however is that one is hardcoded and the other is returned by an $http call. When I run angular.toJson on the hardcoded array, it returns what I expect it to return; a string version of my array that can be passed as a JSON object to a restful API function. However when I run angular.toJson on the array returned by an $http call, it returns NULL.</p>  <p>The array from both</p>  <p>So in the HTML file:</p>  <p>Suppose:</p>  <pre><code>$scope.hardCodedArray = [{     item1 : "",     item2 : "",     item3 : "", }, {     item1 : "",     item2 : "",     item3 : "", }]; </code></pre>  <p>and</p>  <pre><code>http.get("SOMEURL").success(function (response) {$scope.httpReturnedArray = response.ARRAY;}); </code></pre>  <p>where the information at SOMEURL is:</p>  <pre><code>{"ARRAY":[{     item1 : "",     item2 : "",     item3 : "", }, {     item1 : "",     item2 : "",     item3 : "", }]} </code></pre>  <p>And the kicker here is that {{hardCodedArray}} and {{httpReturnedArray}} both return the same thing when printed out on in index.html. So my problem here is that:</p>  <pre><code>{{ angular.toJson($scope.hardCodedArray) }}  </code></pre>  <p>returns the string of the array as expected.</p>  <p>BUT!</p>  <pre><code>{{ angular.toJson($scope.httpReturnedArray) }} </code></pre>  <p>returns null.</p>  <p>Why is that? Any help would be greatly greatly appreciated. Thank you so much!</p>