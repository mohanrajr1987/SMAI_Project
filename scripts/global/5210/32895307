<p>I have a simple html page served from my local machine by an app running on port 8000, using the domain <code>appdev.my_company.com</code>.</p>  <p>The same app serves an API from the domain <code>appcenter.my_company.com</code>.</p>  <p>I have an endpoint in said API which sets a session cookie header that looks like this:</p>  <pre><code>Set-Cookie:gac_3_6e...="VC1_69...=="; Domain=.my_company.com; Path=/ </code></pre>  <p>I made an ajax request to said endpoint, from the static page, hoping that the cookie would be set since the domain is the same (only the subdomain differs):</p>  <pre><code>/* In http://appdev.my_company.com:8000 */ $.ajax({     url: "http://appcenter.my_company.com:8000/login/",     method: 'POST',     data: JSON.stringify(data),     success: function(){         console.log("logged in");     },     headers: {         "Content-Type": "application/json"     } }); </code></pre>  <p>But it doesn't.</p>  <p>The cookie needs to be associated in the browser window with the current domain, because we need to reload a plugin that picks up this cookie (the cookie comes from a thrid party server).</p>  <p>How can I get this cookie to be registered in the browser? If I look into the resources tab of the web console, no cookie shows up.</p>  <p>I took a look at <a href="http://tools.ietf.org/html/rfc6265#section-5.1.3" rel="nofollow">domain matching</a> of the <a href="http://tools.ietf.org/html/rfc6265" rel="nofollow">RFC6265</a>, and it appears this should work.</p>  <p>What can be wrong in this case?</p>