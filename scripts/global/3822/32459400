<p>I am going through Craig Walls <a href="https://www.manning.com/books/spring-in-action-fourth-edition" rel="nofollow">Manning Spring4 in Action</a>.</p>  <p>In Creating JSP views, he suggests,</p>  <blockquote>   <p>The <strong><em>InternalResourceViewResolver</em></strong> ultimately resolves logical view   names into <strong><em>instances</em></strong> of <strong><em>InternalResourceView</em></strong> that reference <strong><em>JSP files</em></strong>.   But if those <strong><em>JSP files are referencing JSTL tags</em></strong> for <strong><em>formatiing</em></strong> or   <strong><em>messages</em></strong>, then you may want to configure <strong><em>InternalResourceViewResolver</em></strong>    to resolve a <strong><em>JSTLView</em></strong> instead.</p> </blockquote>  <p>All that's needed to have <strong><em>InternalResourceView Resolver</em></strong> resolver <strong><em>JstlView</em></strong> instead of <strong><em>InternalResourceView</em></strong> is to set its <strong><em>viewClass</em></strong> property.</p>  <p>like this,</p>  <pre><code> @Bean     public ViewResolver viewResolver() {          InternalResourceViewResolver resolver =             new InternalResourceViewResolver();         resolver.setPrefix("/WEB-INF/views/");         resolver.setSuffix(".jsp");         resolver.setViewClass(org.springframework.web.servlet.view.JstlView.class);          return resolver;     } </code></pre>  <p>Why do I need to add this line</p>  <p><code>resolver.setViewClass(org.springframework.web.servlet.view.JstlView.class);</code></p>  <p>and what exactly is this class meant for?</p>  <p>Any suggestions?`</p>