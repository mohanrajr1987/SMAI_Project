<p>This is a proof of concept project in an attempt to use javascript to enable an event listener on a listbox and execute javascript drag and drop to the same listbox.</p>  <p>When executing the code, if I click on the listbox first, the javascript function tied to the event listener (pickupSticks) executes as is demonstrated by a couple of alert statements.</p>  <p>However, if I place some text in the first textbox and drag and drop it into the first listbox, my click event no longer fires.  The same thing happens if I use the actual button to move the data once.</p>  <p>The reason my javascript include is where it is, is that it seems as if the objects must be created before the addEventListener can find the listbox or an error is returned (not able to find object). </p>  <p>What confuses me is the apparent deactivation of the eventListener AND my javascript code after a successful drop. </p>  <p>DEFAULT.ASPX</p>  <pre><code>&lt;%@ Page Language="C#" AutoEventWireup="true" CodeFile="Default.aspx.cs" Inherits="_Default" %&gt;  &lt;!DOCTYPE html&gt; &lt;html xmlns="http://www.w3.org/1999/xhtml"&gt; &lt;head runat="server"&gt;     &lt;title&gt;Test D&amp;D and Click Event on listbox&lt;/title&gt; &lt;/head&gt; &lt;body&gt;     &lt;form id="form1" runat="server"&gt;         &lt;asp:ScriptManager ID="ScriptManager1" runat="server"&gt;&lt;/asp:ScriptManager&gt;         &lt;asp:UpdatePanel runat="server"&gt;         &lt;ContentTemplate&gt;         &lt;div&gt;         &lt;asp:Button ID="Button1" runat="server" Text="Button" OnClick="Button1_Click" /&gt;         &lt;asp:TextBox ID="TextBox2" draggable ="true"  ondragstart = "drag(event)" runat="server"&gt;&lt;/asp:TextBox&gt;          &lt;asp:TextBox ID="TextBox1" runat="server"&gt;&lt;/asp:TextBox&gt;          &lt;asp:ListBox ID="ListBox1" draggable="true" ondrop="drop(event)" ondragover="allowDrop(event)"  runat="server"&gt;&lt;/asp:ListBox&gt;          &lt;asp:ListBox ID="ListBox2" runat="server"&gt;&lt;/asp:ListBox&gt;          &lt;/div&gt;          &lt;/ContentTemplate&gt;          &lt;/asp:UpdatePanel&gt;    &lt;/form&gt;    &lt;script src = "dragndrop.js"&gt;&lt;/script&gt;    &lt;/body&gt;    &lt;/html&gt; </code></pre>  <p>Default.aspx.js looks like this:</p>  <pre><code>using System; //project compiles and executes without these libraries. //using System.Collections.Generic; //using System.Web; //using System.Web.UI; //using System.Web.UI.WebControls;  public partial class _Default : System.Web.UI.Page {     protected void Page_Load(object sender, EventArgs e)     {         if(!IsPostBack)         {             ListBox1.Items.Add("Apples");             ListBox1.Items.Add("Bananas");             ListBox1.Items.Add("Oranges");             TextBox2.Focus();         }     }     protected void Button1_Click(object sender, EventArgs e)     {         ListBox1.Items.Add(TextBox2.Text);         TextBox1.Text = ListBox1.Items.Count.ToString();         for (int i = 0; i &lt; ListBox1.Items.Count; i++)         {             ListBox2.Items.Add(ListBox1.Items[i]);         }         TextBox2.Text = "";         TextBox2.Focus();     }     protected void ListBox1_SelectedIndexChanged(object sender, EventArgs e)     {     //this fires only when adding an element to the listbox         TextBox2.Text = ListBox1.SelectedIndex.ToString();     } } </code></pre>  <p>dragNdrop.js:</p>  <pre><code>//dragNdrop.js  //add event listeners var mouseClick = document.getElementById("ListBox1"); mouseClick.addEventListener("click", pickupSticks, false); var mouseClick = document.getElementById("ListBox2"); mouseClick.addEventListener("click", pickupSticks, false);  //base functions function drag(ev) {            ev.dataTransfer.setData("text", ev.target.id);        }  function drop(ev) {     document.getElementById("Button1").click();     ev.preventDefault(); }  function allowDrop(ev) {     //get and store the target listbox id     ev.preventDefault();     var x = event.clientX, y = event.clientY,         elementMouseIsOver = document.elementFromPoint(x, y);     target = elementMouseIsOver.id;     document.getElementById("TextBox1").value = target; }  //special functions function pickupSticks() {     alert("PickupSticks");     var x = event.clientX, y = event.clientY,         elementMouseIsOver = document.elementFromPoint(x, y);     target = elementMouseIsOver.id;     document.getElementById("TextBox1").value = target;     alert(document.getElementById(target).selectedIndex); } </code></pre>