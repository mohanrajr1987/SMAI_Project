<p>I have a Collection Class which is a class which puts a <code>List&lt;Ingredient&gt;</code> object, the contents of the Ingredient object list is displayed in a <code>CheckListBox</code> using binding. </p>  <p>What I'm trying to do is when the user clicks on one of the List items the information in that particular item is copied into another list called <code>List&lt;Pizza&gt; myPizza</code>, which will then display on the list. The reason I want all the data to go into it is because once in the <code>List&lt;Pizza&gt; myPizza</code> I will do more things to the data.</p>  <p>I have tried to do this but doesn't seem to work, below is the <code>CollectionClass</code>, the windows form and the Ingredient Class. I didn't bother putting the Pizza Class as it is the same as the Ingredient Class  I know how to add it to the listbox using item, but I really want to add it to the List then add the List to the ListBox.</p>  <p>I hope this make sense, kind of new to programming. Thanks.</p>  <p><strong>Ingredient Class</strong>.</p>  <pre><code>public partial class Form1 : Form {     //List&lt;Ingredient&gt; myIngredient = new List&lt;Ingredient&gt;();     List&lt;Pizza&gt; myPizza = new List&lt;Pizza&gt;();     CollectionClass myCollections = new CollectionClass();      public Form1()     {         InitializeComponent();          myCollections.createList();          checkedListBoxIngredients.DataSource = new BindingSource(myCollections.myIngredient, null);         checkedListBoxIngredients.DisplayMember = "DisplayName";     }      private void checkedListBoxIngredients_ItemCheck(object sender, ItemCheckEventArgs e)     {         foreach (Pizza pizza in myPizza)         {             checkedListBoxIngredients.Items.Add(pizza.ToppingName);             checkedListBoxIngredients.Items.Add(pizza.UnitName);             checkedListBoxIngredients.Items.Add(pizza.Cost);             checkedListBoxIngredients.Items.Add(pizza.DescriptionName);         }          if (e.NewValue == CheckState.Checked)         {             yourPizza.DataSource = new BindingSource(myPizza, null);             yourPizza.DisplayMember = "DisplayName";         }     } } </code></pre>  <p><strong>Ingredient Class.</strong></p>  <pre><code>public class Ingredient {      public string ToppingName { get; set; }      public string UnitName { get; set; }      public int Cost { get; set; }      public string DescriptionName { get; set; }       public Ingredient(string pizzaToppingName, string pizzaToppingUnit, int pizzaCost, string pizzaDescription)      {          ToppingName = pizzaToppingName;          UnitName = pizzaToppingUnit;          Cost = pizzaCost;          DescriptionName = pizzaDescription;      }       public string DisplayName      {          get          {              return ToppingName + " $"+Cost;          }      }       public override string ToString()      {          return ToppingName;      }    } </code></pre>  <p><strong>CollectionClass.</strong></p>  <pre><code>public class CollectionClass {     public List&lt;Ingredient&gt; myIngredient = new List&lt;Ingredient&gt;();      public void createList()     {         myIngredient.Add(new Ingredient("Cheese", "grams", 3, "grab cheese and sprinkle on top of pizza"));         myIngredient.Add(new Ingredient("Olives", "grams", 2, "cut up olives and sprickle on pizza"));         myIngredient.Add(new Ingredient("Ham", "grams", 1, "spread cut up ham over pizza"));         myIngredient.Add(new Ingredient("Pineapple", "grams", 1, "spread cut up chunks over pizza"));         myIngredient.Add(new Ingredient("Pepperoni", "pieces", 1, "place slices on pepperoni on pizza"));         myIngredient.Add(new Ingredient("Onion", "handfuls", 1, "sprinkle cut up onion on pizza, try not to cry"));         myIngredient.Add(new Ingredient("Peppers", "grams", 1, "sprinkle cut up peppers on pizza"));         myIngredient.Add(new Ingredient("Anchovy", "grams", 1, "place on top of pizza"));         myIngredient.Add(new Ingredient("Mushrooms", "grams", 1, "put gently on top of pizza"));     }      public void displayList()     {         foreach (Ingredient ingred in myIngredient)             if (ingred != null)             {                 Console.WriteLine("{0} {1} ${2}.00, {3}",                     ingred.ToppingName, ingred.UnitName, ingred.Cost,                     ingred.DescriptionName);             }     } } </code></pre>