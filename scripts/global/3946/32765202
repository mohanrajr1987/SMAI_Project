<p>I have a problem with the SelectedItem of my ListBox. I want to put my selected item in the Highlighted property of my HealthDiseaseViewModel Here is my ViewModel:</p>  <pre><code>public class HealthDiseaseViewModel : ObservableCollection&lt;HealthDisease&gt; {     private string _feedBack;      HealthDiseaseDb _db = new HealthDiseaseDb();      public HealthDiseaseRetrieveSingleCommand RetrieveSingleCommand { get; set; }     public HealthDiseaseRetrieveManyCommand RetrieveManyCommand { get; set; }        public HealthDiseaseUpdateCommand UpdateCommand { get; set; }         public HealthDisease Entity { get; set; }     public HealthDisease Highlighted { get; set; }     public List&lt;HealthDisease&gt; EntityList { get; set; }      public HealthDiseaseViewModel()     {         RetrieveSingleCommand = new HealthDiseaseRetrieveSingleCommand(this);         RetrieveManyCommand = new HealthDiseaseRetrieveManyCommand(this);                UpdateCommand = new HealthDiseaseUpdateCommand(this);                Highlighted = new HealthDisease();          Entity = new HealthDisease();         RetrieveMany(Entity);     }      #region Methods      public void Retrieve(HealthDisease parameters)     {         Highlighted = _db.Retrieve(parameters);                 }      public void RetrieveMany(HealthDisease parameters)     {         EntityList = new List&lt;HealthDisease&gt;();          EntityList = _db.RetrieveMany(parameters);                IList&lt;HealthDisease&gt; toBeRemoved = Items.ToList();          foreach (var item in toBeRemoved)         {             Remove(item);         }          foreach (var item in EntityList)         {             Add(item);         }                }      public void Insert(HealthDisease entity)     {         bool doesExist = false;         if (_db.Insert(entity, SessionHelper.CurrentUser.Id, ref doesExist))         {             _feedBack = "Item Successfully Saved!";             RetrieveMany(new HealthDisease());         }         else if (doesExist)         {             _feedBack = "Item Already Exists!";         }         else         {             _feedBack = "Not All Fields Were Filled-In!";         }         MessageBox.Show(_feedBack, "Item Insertion");     }      public void Update(HealthDisease entity)     {         bool doesExist = false;          if (_db.Update(entity, SessionHelper.CurrentUser.Id, ref doesExist))         {             _feedBack = "Item Successfully Updated!";             RetrieveMany(new HealthDisease());         }         else if (doesExist)         {             _feedBack = "Item Already Exists!";         }         else         {             _feedBack = "Not All Fields Were Filled-In!";         }         MessageBox.Show(_feedBack, "Item Edition");     }      public void Delete(HealthDisease entity)     {         var answer = MessageBox.Show(String.Format("Are you sure you want to delete \n{0}?", entity.Name),          "Item Deletion", MessageBoxButtons.YesNo);          if (answer == DialogResult.No)         {             return;         }          if (_db.Delete(entity, SessionHelper.CurrentUser.Id))         {             _feedBack = "Item Successfully Deleted!";             RetrieveMany(new HealthDisease());         }          MessageBox.Show(_feedBack, "Item Deletion");     }        #endregion    } </code></pre>  <p>I bound the SelectedItem of my ListBox to Highlighted and I wanted that Highlighted.Name and Highlighted.Description to TextBlocks, but the TextBlocks doesn't show the SelectedItem. I can make a work around here by using SelectedItem.Name and SelectedItem.Description but the problem is it automatically updates the ListBox even if I didn't hit the save button yet. Using the object Highlighted will solve this but I've been spending hours of frustration now. Here is my markup. I omitted the SaveButton that is bound to UpdateCommand from my ViewModel</p>  <pre><code>&lt;Grid Name="MainGrid" Background="Aqua" MinWidth="500" MinHeight="400"        DataContext="{Binding Source={StaticResource HealthViewModel}}"&gt;      &lt;StackPanel Orientation="Vertical"&gt;         &lt;TextBlock Text="{Binding Path=Highlighted.Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"&gt;&lt;/TextBlock&gt;         &lt;ListBox x:Name="EntityListBox" Margin="10,0" Height="380"             ItemsSource="{Binding }"             DisplayMemberPath="Name"             SelectedItem="{Binding Path=Highlighted, Mode=TwoWay,                                     Converter={StaticResource ToHealthDiseaseConverter},                                     UpdateSourceTrigger=PropertyChanged}" /&gt;     &lt;/StackPanel&gt;    &lt;/Grid&gt; </code></pre>