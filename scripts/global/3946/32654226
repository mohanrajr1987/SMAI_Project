<p>I am trying to use a basic implementation of "FindVisualChild" for WPF in order to find a specific <code>Grid</code> that exists within a <code>DataTemplate</code> of a <code>ListBox</code>.</p>  <p>The implementation is as follows:</p>  <pre><code>private DependencyObject FindVisualChild&lt;T&gt;(DependencyObject obj, string name) {     Console.WriteLine(((FrameworkElement)obj).Name);     for (int i = 0; i &lt; VisualTreeHelper.GetChildrenCount(obj); i++)     {         DependencyObject child = VisualTreeHelper.GetChild(obj, i);         FrameworkElement fe = child as FrameworkElement;         //not a framework element or is null         if (fe == null) return null;         if(!string.IsNullOrEmpty(fe.Name))             Console.WriteLine(fe.Name);         if (child is T &amp;&amp; fe.Name.Equals(name, StringComparison.CurrentCultureIgnoreCase))             return child;         else         {             //Not found it - search children             DependencyObject nextLevel = FindVisualChild&lt;T&gt;(child, name);             if (nextLevel != null)                 return nextLevel;         }     }     return null; } </code></pre>  <p>My issue is that this code was working yesterday to find a <code>Grid</code> that I have defined in the <code>DataTemplate</code> with the name "MainTermServListGrid" as shown here:</p>  <pre><code>&lt;ListBox HorizontalAlignment="Stretch" Grid.Row="1" x:Name="TermServListBox" ItemsSource="{Binding TermServs}"&gt;     &lt;ListBox.ItemTemplate&gt;         &lt;DataTemplate&gt;             &lt;Grid x:Name="MainTermServListGrid"&gt;             //code here             &lt;/Grid&gt;         &lt;/DataTemplate&gt;     &lt;/ListBox.ItemTemplate&gt; &lt;/ListBox&gt; </code></pre>  <p>However, today when I try to use the same method to find that <code>Grid</code>, the result is always null. If I debug and step through the code, it looks like it is not even finding any of the items that exist within the <code>DataTemplate</code>.</p>  <p>I am calling the <code>FindVisualChild</code> method right after I populate the <code>ListBox</code> with items. Could it be that I am not waiting long enough and the window does not have enough time to finish initializing and presenting the new items in the list box before I am trying to find a specific child within that listbox?</p>  <p>If that is the case, would a simple call to <code>await Task.Delay(500)</code> work to give the UI enough time to finish loading? Or am I doing something totally wrong here?</p>