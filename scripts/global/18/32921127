<p>I am hoping someone can help me with some text manipulation, it's not my strong point and I'm coming up against an issue when trying to replace text in a file.</p>  <p>I have a Terraform file, what I wish to do is run a BASH script which collects user input and fills in the Terraform file. The format is as follows:</p>  <p><strong>Terraform.tf</strong></p>  <pre><code>variable "master_cpu" {default = } variable "master_mem" {default = } variable "master_count" {default = } variable "master_template" {default = ""} variable "master_datastore" {default = ""} variable "master_secondary_disk_size" {default = } variable "master_network_label" {default = ""} variable "master_gateway" {default = ""} variable "master_netmask" {default = ""} </code></pre>  <p><strong>Provisioner.sh</strong></p>  <pre><code>echo -n "How many vCPU's should these VM's have? [ENTER]:" read master_cpu echo -n "How much RAM would you like to allocate? [ENTER]:" read master_ram echo -n "Template name? Format: Folder/template [ENTER]:" read master_template echo -n "Please provide the datastore name. [ENTER]:" read master_dstore ... </code></pre>  <p>There are 2 issues here, first one is numbers aren't wrapped in double quotes but text is, so simply searching for <em>default = ""</em> in the Terraform file is of no use.</p>  <p>The other issue I've faced is with variables not expanding, for example:</p>  <pre><code>awk '{gsub("default = \"\"", "default = \"$vc_address\"", $0); print &gt; FILENAME}' terraform.tf </code></pre>  <p>Will produce: default = "$vc_address" and not use the IP captured on the command line.</p>  <p>If anyone could give me some pointers on how to efficiently do this in BASH, for both numbers and text I'd be really grateful.</p>