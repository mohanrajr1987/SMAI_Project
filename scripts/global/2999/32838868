<p>I know there are already a lot of questions to that topic but for some reason I can’t get my solution to work.</p>  <p>My controller method looks like this:</p>  <pre><code>[Route("[action]")] public void Test(Course course) {    //Here I want to write it in to database         } </code></pre>  <p>My Client like this:</p>  <pre><code>class Program {     public class Course     {         public String Names { get; set; }         public List&lt;Student&gt; Students { get; set; }     }     public class Student     {         public int ID { get; set; }         public string Name { get; set; }     }     static void Main()     {          RunAsync().Wait();     }      static async Task RunAsync()     {         using (var client = new HttpClient())         {             client.BaseAddress = new Uri("http://localhost:55847/");              Student bob = new Student { ID = 1, Name = "Bob" };             Course math = new Course { Names = "Math", Students = new List&lt;Student&gt;() };             math.Students.Add(bob);              var content = new StringContent(Newtonsoft.Json.JsonConvert.SerializeObject(math),Encoding.Default, "application/json");             var response = await client.PostAsync("ServiceApi/Test", content);             var responsecontent = await response.Content.ReadAsStringAsync();          }     } } </code></pre>  <p>When I run it the method in the controller gets called but the object stays null.  I thought it was a routing problem so I changed the route to [Route(“[action]/course”)] but then not even the method got called anymore. I would be grateful for any pointers. </p>