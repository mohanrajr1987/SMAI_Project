<p>I am trying to access Object properties from a Service in Angular JS that can be created on the fly. The logic implementation I am attempting goes like this:</p>  <ol> <li>In first Controller (Ctrl 1) I have a button and other input that when the user clicks, adds all this input to the Service, which stores it to an object. </li> <li>The results of the push to the Service in (1) gets updated in the second Controller (Ctrl 2).</li> </ol>  <p>So far I have the following: </p>  <pre><code>&lt;div id="second" ng-controller="SecondController"&gt;     &lt;label&gt;Press button to Generate a random number between 1-100:&lt;/label&gt;     &lt;button ng-click="generateRandom(100);"&gt;Generate&lt;/button&gt;     Shared Number: {{sharedNumber}} &lt;/div&gt;   &lt;div id="third" ng-controller="ThirdController"&gt;     This is the third Controller Division with:&lt;br&gt; mulder =::{{mulder}}::&lt;br&gt;     Or...aValuer = {{aValuer}}&lt;br&gt;     And a test case: {{scully.name}}     &lt;br&gt; Delta: {{delta}}&lt;br&gt;     &lt;br&gt;And finally, another Try {{anotherTry}}&lt;br&gt;      &lt;div&gt;         Looping through mulder keys...         &lt;div ng-repeat="(key,value) in tester"&gt;             {{key}} : {{value}}         &lt;/div&gt;     &lt;/div&gt; </code></pre>  <p>My JS File includes the following: </p>  <p>Service:</p>  <pre><code>myServiceModule.service('shareValue',[function(){     // obj     var myList = [];     // add new obj to stack     var addList = function(newObj){         popList();         myList.push(newObj);         }     // retrieve last obj from stack     var getList = function(){         return myList;     }     // ensure only one obj per stack     var popList = function(){         // clear out previous entries in sharedValue listing          if(myList.length&gt;0) // pop if not empty             myList.pop();     }     // func prototyping     return {         addList: addList,         getList: getList,         popList: popList     }; }]); </code></pre>  <p>My first controller is as follows (the input controller):</p>  <pre><code>myServiceModule.controller('SecondController',['$scope','randomizer', 'shareValue', function($scope,randomizer,shareValue){     // Initialize blank numbers     $scope.initialNumber = 0;     $scope.sharedNumber = 0;      console.log('Initial number in second controller: ' + $scope.initialNumber);     // Func called on ng-click event     $scope.generateRandom = function(rng){         // generate random number         console.log('called w/ ' + rng );         $scope.initialNumber = randomizer.genRan(rng);         console.log('Randomed: ' + $scope.initialNumber);         // update sharedNumber         $scope.sharedNumber = $scope.initialNumber;          // create temp obj for later expansion of other random items         var objTemp = {};         objTemp.number = $scope.sharedNumber;         objTemp["name"] = "Jeeves";         // send updated obj to shared service         $scope.aValue = shareValue.addList(objTemp);      } }]); </code></pre>  <p>And my second controller (the output/display controller) is: </p>  <pre><code>myServiceModule.controller('ThirdController',['$scope','shareValue', function($scope,shareValue){     // pull obj's from sharedService func     $scope.mulder = shareValue.getList();        $scope.aValuer = angular.isObject($scope.mulder);//(typeof($scope.mulder));     $scope.tester = $scope.mulder[0];     // test case     $scope.scully = {};     $scope.scully.name = 'Scully';     $scope.scully.seasons = 7;    }]); </code></pre>  <p>Randomizer is a dummy Service function to show dynamic JS to ensure that the output is definitely matching the current input.</p>  <pre><code>myServiceModule.service('randomizer',[function(){     this.genRan = function(range){         //console.log('inside genRan');         return (Math.floor(Math.random() * range) + 1 );      } }]); </code></pre>  <p>The problem is the second controller, accessing the object properties of the Service. I get no values when attempting to access the object returned by the service, i.e. when trying to do mulder.name I get no results or even mulder[0].name I get no results. According to typeof for the Service return value, AngularJS reports back that the returned type is both an Object AND an array. I've tried accessing each KEY in the returned object, but again, there are no results.</p>  <p>How do I access the object key values from a Service, when the key's are created dynamically inside a Controller?</p>