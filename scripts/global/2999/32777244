<p>Here is a minimal example, where two Unicode characters are returned from a Rails controller:</p>  <pre><code>class DummyController &lt; ActionController::Base   def index     data = "ðŸ˜€ â˜€"     render json: {       data: data,       bytes: data.bytes.map{ |byte| "$#{byte.to_s(16)}" }.join(",")     }.to_json   end end </code></pre>  <p>The first character is represented on 4 bytes (<code>$f0,$9f,$98,$80</code>), the other one is represented on 3 bytes (<code>$e2,$98,$80</code>) in a utf-8 character set. This is a response as received from a Rails application:</p>  <pre><code>$ curl -XGET http://localhost:3000/dummy {"data":"\uf600 \u2600","bytes":"$f0,$9f,$98,$80,$20,$e2,$98,$80"} </code></pre>  <p>As you can see the second character is converted to <code>\u2600</code> code, which is a valid representation of utf-8's <code>$e2,$98,$80</code> (i.e. it's the same character). However, the first character is converted to <code>\uf600</code>, which is an <strong>invalid</strong> representation of utf-8's <code>$f0,$9f,$98,$80</code> (i.e. it's <strong>not</strong> the same character).</p>  <p>How can I ensure that exactly the same characters that appear on the application side are also returned to a caller? Is it something browser-specific? Is my application code missing something? Do I need to add some extra request headers? Many thanks in advance for your help!</p>