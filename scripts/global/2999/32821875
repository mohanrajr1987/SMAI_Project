<pre><code>@Controller @RequestMapping("/authors") public class AuthorController {     @RequestMapping(value = "/{id}", method = RequestMethod.GET)     public Author getAuthor(         final HttpServletRequest request,         final HttpServletResponse response,         @PathVariable final String id)     {         // Returns a single Author by id         return null;     }      @RequestMapping(value = "/{id}/author-properties", method = RequestMethod.GET)     public AuthorProperties getAuthorProperties(         final HttpServletRequest request,         final HttpServletResponse response,         @PathVariable final String id)     {         // Returns a single Author's List of properties         return null;     }      @RequestMapping // How to map /authors/*/author-properties to this method ????     public List&lt;AuthorProperties&gt; listAuthorProperties(         final HttpServletRequest request,         final HttpServletResponse response)     {         // Returns a single Author's List of properties         return null;     } }  class Author {     String propertiesUri;     // other fields }  class AuthorProperties {     String authorUri;     // other fields } </code></pre>  <p>Basically I need:</p>  <ul> <li>/authors - listing all the authors</li> <li>/authors/123 - fetching author by id 123</li> <li>/authors/123/author-properties - fetching the AuthorProperties object for a 123 author</li> <li>/authors/*/author-properties - fetching List of AuthorProperties for all authors</li> </ul>  <p>When I tried</p>  <pre><code>@RequestMapping(value = "/*/author-properties", method = RequestMethod.GET) </code></pre>  <p>It was still mapping <code>/authors/*/author-properties</code> to getAuthorProperties method with path variable value as "*".</p>