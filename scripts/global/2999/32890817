<p>I am pretty new in Spring MVC and I have some problem trying to redirect to a controller method after that another controller method terminate its execution.</p>  <p>So I have the following situation. Into a controller class I have this method that correctly handle POST request toward the <strong>validaProgetti</strong> resource:</p>  <pre><code>@RequestMapping(value = "validaProgetti", method=RequestMethod.POST) public @ResponseBody String validaProgetti(@RequestBody List&lt;Integer&gt; checkedRowList) {      System.out.println("ID progetti da aggiornare: " + checkedRowList);      List&lt;Twp1007Progetto&gt; progettiDaValidare =  new ArrayList&lt;Twp1007Progetto&gt;();       for (int i=0; i&lt;checkedRowList.size(); i++) {         System.out.println("ID PROGETTO: " + checkedRowList.get(i));         progettiDaValidare.add(progettoService.getProgetto(checkedRowList.get(i)));     }       progettoService.validaProgetti(progettiDaValidare);      return "redirect:ricercaValidazione"; } </code></pre>  <p>So this method is correctly mapped and when the <strong>validaProgetti</strong> resource is called it is executed.</p>  <p>At the end of this method I don't return a view name that render a JSP page but I have to redirect to another method (that do something and render a JSP page). So, instead to return a view name, I redirect toward another resource:</p>  <pre><code>return "redirect:ricercaValidazione"; </code></pre>  <p>Then in the same controller class I have declared this method that handle request toward this <strong>ricercaValidazione</strong> resource:</p>  <pre><code>@RequestMapping(value = "ricercaValidazione", method=RequestMethod.POST) public String ricercaValidazione(@ModelAttribute ConsultazioneFilter consultazioneFilter, Model model, HttpServletRequest request) {      RicercaConsultazioneViewObject filtro = null;     try {         filtro = new ObjectMapper().readValue(request.getParameter("filtro"), RicercaConsultazioneViewObject.class);         filtro.setSelStatoProgetto(3);      // Progetti da validare     } catch (IOException e) {         logger.error(e);     }      consultazioneFilter = new ConsultazioneFilter(filtro);     model.addAttribute("consultazioneFilter", consultazioneFilter);      model.addAttribute("listaProgetti", new ListViewObject&lt;Twp1007Progetto&gt;(progettoService.getListaProgettiConsultazione(consultazioneFilter)) );      return "validazione/tabellaRisultati"; } </code></pre>  <p>The problem is that it can't work and after the redirection can't enter into the <strong>ricercaValidazione()</strong> method.</p>  <p>I think that maybe the problem is that this <strong>ricercaValidazione()</strong> method handle <strong>POST</strong> request toward the <strong>ricercaValidazione</strong> resource and the <strong>return "redirect:ricercaValidazione";</strong> maybe generate a <strong>GET</strong> request.</p>  <p>But I am not sure about it.</p>  <p>Why? What am I missing? How can I solve this issue?</p>  <p>Tnx </p>