<p>The maze is a challenging problem. The first step would be to read in the text file (in a 2-dimensional array). Make a method to output the maze so that you can keep calling it to see how you are progressing through. Remember to picture "yourself" in one spot in the maze and look for an exit first. Each method call is one step in the maze. Create a class called "Maze" that includes a recursive call to find a path through a given text maze. The first 2 lines in the text file represent the size of the maze and the the next 2 lines represent the starting location in the maze.</p>  <pre><code>import java.io.*; import java.util.*;  public class Maze { private String startingPoint; private String[][] maze; private String file; private String exit = "E"; private int numberOfRows; private int numberOfColumns; private int startingPointRow; private int startingPointColumn;  public Maze(String fileName) throws FileNotFoundException  {     file = fileName;     FileReader reader = new FileReader(file);     Scanner in = new Scanner(reader);      numberOfRows = Integer.parseInt(in.nextLine());     numberOfColumns = Integer.parseInt(in.nextLine());      startingPointRow = Integer.parseInt(in.nextLine());     startingPointColumn = Integer.parseInt(in.nextLine());      // while the input text file is not empty, read each line into the array     while (in.hasNext())     {         for (int x = 0; x &lt;= startingPointRow; x++)         {             for (int y = 0; y &lt;= startingPointColumn; y++)             {                 maze[x][y] = in.next();             }         }     }   if (maze[numberOfRows][numberOfColumns] == exit) // if the maze character is 'E', close the file reader   {      in.close();   } }  public void printMaze() // this method prints out the current position of the "maze runner" and the maze itself {     // while the character in the maze is not 'E' (which means 'Exit'), print the maze     while (maze[numberOfRows][numberOfColumns] != exit)     {         for (int a = 0; a &lt;= maze.length; a++)         {             for (int b = 0; b &lt;= maze.length; b++)             {                 System.out.println(maze[a][b]);             }             System.out.println();         }     } } </code></pre>  <p>}</p>