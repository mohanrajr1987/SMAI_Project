<p>I'm attempting to store arrays of integers that I read from a file (with a separate function) in a 2D array but I keep having issues with Segmentation fault. I know it's an issue with my pointers but I can't figure out exactly what I'm doing wrong. </p>  <p>Here is my function (takes an integer and compares it with an integer read from a file before storing it in my 2D array).</p>  <pre><code>int **getStopTimes(int stop_id) {  int **result = malloc(sizeof(*result));  char const* const fileName = "stop_times_test.txt";  FILE* txt = fopen(fileName, "r");  char line[256]; int count = 0;  while (fgets(line, sizeof(line), txt) != NULL) {             int *formattedLine = getStopTimeData(line); //getStopTimeData returns a pointer to an array of ints, memory is allocated in the function         if (formattedLine[1] == stop_id) {             result[count] = formattedLine;             count++;         }                            }        fclose(txt); return result;   } </code></pre>  <p>And my main: </p>  <pre><code>int main(int argc, char *argv[]) { int **niceRow = getStopTimes(21249); for (int i=0; i&lt;2; i++) { //Only looping 3 iterations for test purposes     printf("%d,%d,%d,%d\n",niceRow[i][0], niceRow[i][1], niceRow[i][2], niceRow[i][3]); } free(niceRow); return 0; } </code></pre>  <p>getStopTimeData function thats being called (Pulls certain information from an array of chars and stores/returns them in an int array): </p>  <pre><code>int *getStopTimeData(char line[]) { int commas = 0; int len = strlen(line); int *stopTime = malloc(4 * sizeof(*stopTime)); //Block of memory for each integer char trip_id[256]; //Temp array to build trip_id string char stop_id[256]; //Temp array to build stop_id string int arrival_time; //Temp array to build arrival_time string  int departure_time; //Temp array to build departure_time string  int counter;  for(int i = 0; i &lt;len; i++) {      if(line[i] == ',')  {         commas++;         counter = 0;         continue;     }     switch(commas) { //Build strings here and store them          case 0 :              trip_id[counter++] = line[i];              if(line[i+1] == ',') trip_id[counter] = '\0';             break;         case 1: //Convert to hours past midnight from 24hr time notation so it can be stored as int             if(line[i] == ':' &amp;&amp; line[i+3] == ':') {             arrival_time = (line[i-2]-'0')*600 + (line[i-1]-'0')*60 + (line[i+1]-'0')*10 + (line[i+2]-'0');              }                break;         case 2 :              if(line[i] == ':' &amp;&amp; line[i+3] == ':') {             departure_time = (line[i-2]-'0')*600 + (line[i-1]-'0')*60 + (line[i+1]-'0')*10 + (line[i+2]-'0');             }                    break;         case 3 :              stop_id[counter++] =  line[i];             if(line[i+1] == ',') stop_id[counter] = '\0';             break;     } } //Assign and convert to ints stopTime[0] = atoi(trip_id); stopTime[1] = atoi(stop_id); stopTime[2] = arrival_time; stopTime[3] = departure_time; return stopTime; } </code></pre>