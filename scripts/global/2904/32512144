<p>Decided to have a look at how a open source 2D Game done its lighting and this is the code.</p>  <pre><code>        private unsafe static void CreateLights()     {          for (int i = Lights.Count - 1; i &gt;= 0; i--)             Lights[i].Dispose();          Lights.Clear();          for (int i = 1; i &lt; LightSizes.Length; i++)         {             // int width = 125 + (57 *i);             //int height = 110 + (57 * i);             int width = LightSizes[i].X;             int height = LightSizes[i].Y;             Texture light = new Texture(Device, width, height, 1, Usage.None, Format.A8R8G8B8, Pool.Managed);              using (GraphicsStream stream = light.LockRectangle(0, LockFlags.Discard))             using (Bitmap image = new Bitmap(width, height, width*4, PixelFormat.Format32bppArgb, (IntPtr) stream.InternalDataPointer))             {                 using (Graphics graphics = Graphics.FromImage(image))                 {                     using (GraphicsPath path = new GraphicsPath())                     {                         path.AddEllipse(new Rectangle(0, 0, width, height));                         using (PathGradientBrush brush = new PathGradientBrush(path))                         {                             graphics.Clear(Color.FromArgb(0, 0, 0, 0));                             brush.SurroundColors = new[] {Color.FromArgb(0, 255, 255, 255)};                             brush.CenterColor = Color.FromArgb(255, 255, 255, 255);                             graphics.FillPath(brush, path);                             graphics.Save();                         }                     }                 }             }             light.Disposing += (o, e) =&gt; Lights.Remove(light);             Lights.Add(light);         }     } </code></pre>  <p>I wanted to give the game a more in depth feel to it, but to be honest, its a bit much for me to decipher. I was looking at an article <a href="http://www.c-sharpcorner.com/uploadfile/dbeniwal321/using-lineargradientbrush-and-pathgradientbrush-in-gdi/" rel="nofollow">Here</a> but am failing to implement said method into the source.</p>  <p>Could anyone shed some light on this (I will note, that the game only uses one light source, the only other instance of it is on game items / map objects in the GameScene.cs, only the intensity / radius and color is controlled here).</p>