<p>Our library <a href="http://apinatomy.org/home" rel="nofollow">ApiNATOMY</a> renders a tree-map to navigate a hierarchical space (like human anatomy, for instance). We used to use nested <code>&lt;div&gt;</code> elements for every tile, but the re-flow process was a constant source of slowdown. We've now switched to pure WebGL (Three.js), and got a remarkable performance boost.</p>  <p>However, this did lose us the convenience of HTML-like markup. It now requires 10-20 lines of code to draw a box, and another 10-20 to render some text. Having things stay centered when the box is re-sized is also a manual job, and I don't even dare dream of automatic line-breaks. Then there's the problem of <code>THREE.FontUtils</code> being an incredibly slow way to render text. I've found a way to do it with a <a href="http://stemkoski.github.io/Three.js/Texture-From-Canvas.html" rel="nofollow">separate canvas</a>, but that also requires a lot of manual code, and is more inflexible w.r.t. sizing.</p>  <p>So my question is: Is there some library of utility classes/functions to make these sorts of 2D jobs in Three.js easier and more robust? Alternatively, any general tips or references?</p>  <p>(Note: There will still be 3D aspects to ApiNATOMY, so a pure 2D renderer is not an option.)</p>