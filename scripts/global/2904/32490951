<p>I recently watched a YouTube video of Notch coding the game "Minicraft" from scratch for the Lundum Dare competition. The game is in Java, and what confused me is that he has a BufferedImage object that he modifies and draws to the screen like this:</p>  <pre><code>private BufferedImage img = new BufferedImage(WIDTH, HEIGHT, BufferedImage.TYPE_INT_RGB); private int[] pixels = ((DataBufferInt) image.getRaster().getDataBuffer()).getData(); </code></pre>  <p>then</p>  <pre><code>g.drawImage(img, extra parameters of the coordinates, etc); </code></pre>  <p>When I was learning how to use the Java Graphics object, I learned to separately draw all the things that I wanted on my screen like this:</p>  <pre><code>g.drawImage(player, ...); g.drawImage(background, ...); etc... </code></pre>  <p>But it seems he builds the BufferedImage based on what each of the individual parts look like (player, background, ...) and then just draws that only. What is the value in doing this? What is the difference between drawing one image instead of individually drawing all the images?</p>