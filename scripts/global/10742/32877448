<p>I'm trying to describe a database of political events and for simplicity, I manage <code>Person</code>s and <code>Party</code>s:</p>  <pre><code>class Person(Model):     name = TextField()  class Party(Model):     name = TextField() </code></pre>  <p>At the moment, I have a collection of "interesting facts" about people (with the "relatable" objects bolded):</p>  <blockquote>   <ul>   <li><strong>Bob Smith</strong> was the father of <strong>Andrew Smith</strong></li>   <li><strong>Andrew Smith</strong> was the first left-handed president.</li>   </ul> </blockquote>  <p>I can easily capture this like so:</p>  <pre><code>class Fact(Model):     people = ManyToManyField(Person)     description = TextField() </code></pre>  <p>However, now I want to expand my list:</p>  <blockquote>   <ul>   <li><strong>Bob Smith</strong> was the father of <strong>Andrew Smith</strong></li>   <li><strong>Andrew Smith</strong> was the first left-handed president.</li>   <li><strong>Andrew Smith</strong> and <strong>Mike Jones</strong> were the founders of the <strong>Left-Handed party</strong>.</li>   <li>The <strong>Left-Handed party</strong> later merged with the <strong>Sinister Party</strong> to create the <strong>Left-handedness coalition</strong></li>   </ul> </blockquote>  <p>Here we can see facts can related to people, parties or both.</p>  <p>It would be simple to create a <code>GenericRelation</code> with a <code>GenericForeignKey</code> if a fact only related to one thing, but I need a <code>GenericManyToMany</code> like this:</p>  <pre><code>class Fact(Model):     content_type = ForeignKey(ContentType, blank=True, null=True)     object_id = CharField(blank=True, null=True, max_length=256)     content_object = generic.GenericManyToMany('content_type', 'object_id')      description = TextField() </code></pre>  <p>Is this possible?</p>