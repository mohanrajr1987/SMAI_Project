<p>i am trying to link my <strong>comments</strong> model to the <strong>username</strong> field of the <strong>auth user</strong> model.<br> here is the <strong>code</strong></p>  <pre><code>from django.contrib.auth.models import User from django.db import models from urllib.parse import urlparse   class Posts(models.Model):     title = models.CharField(max_length=200)     url = models.URLField()     points = models.IntegerField(default=0)     moderator = models.ForeignKey(User, related_name="moderated_stories")     voters = models.ManyToManyField(User, related_name="liked_stories", blank=True)     created_at = models.DateTimeField(auto_now_add=True)     updated_at = models.DateTimeField(auto_now=True)      @property     def domain(self):             return urlparse(self.url).netloc      def __str__(self):             return self.title + " by " + self.moderator.username      class Meta:             verbose_name_plural = "stories"   class Comments(models.Model):      comment = models.TextField()     created_at = models.DateTimeField(auto_now_add=True)     user = models.ForeignKey(User, related_name="commented_on", to_field="username")     commented_on = models.ForeignKey(Posts, related_name="comments")      def __str__(self):             return self.comment + " by " + self.user      class Meta:             verbose_name_plural = "comments" </code></pre>  <p>but on executing queries it gives me following error:</p>  <pre><code>&gt;&gt;&gt; post = Posts.objects.get(id=2) &gt;&gt;&gt; post.comments.all() django.contrib.auth.models.DoesNotExist: User matching query does not exist. </code></pre>  <p>but when i execute query to serialize the data it works</p>  <pre><code>&gt;&gt;&gt; serializers.serialize('json', post.comments.all()) '[{"model": "news.comments", "pk": 1, "fields": {"comment": "Thanks for sharing the link :)", "commented_on": 2, "created_at": "2015-09-30T06:01:40.201Z", "user ": 1}}, {"model": "news.comments", "pk": 2, "fields": {"comment": "this is what i was looking for...!", "commented_on": 2, "created_at": "2015-09-30T06:02:17.4 97Z", "user": 4}}, {"model": "news.comments", "pk": 3, "fields": {"comment": "th anks for sharing !", "commented_on": 2, "created_at": "2015-09-30T06:02:43.971Z" , "user": 3}}]' </code></pre>  <p>but the serialized data still contains the <strong>PK</strong> of the user and not the <strong>username</strong>. what is wrong with this code?</p>