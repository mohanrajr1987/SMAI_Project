<p>This is my UserExtendedSerializer:</p>  <pre><code>class UserExtendedSerializer(serializers.ModelSerializer):      def __init__(self, *args, **kwargs):             super(UserExtendedSerializer, self).__init__(*args, **kwargs) # call the super()              for field in self.fields: # iterate over the serializer fields                 self.fields[field].error_messages['required'] = 'Enter a valid %s.'%field # set the custom error message                 self.fields[field].error_messages['invalid'] = 'Select a valid %s.'%field # set the custom error message     class Meta:         model = UserExtended         fields = ('country',) </code></pre>  <p>and this is the UserExtended model:</p>  <pre><code>class UserExtended(models.Model):     user = models.OneToOneField(User)     country = models.ForeignKey(Country) </code></pre>  <p>Now, when I try to create a user without entering a valid country, Django gives an error to the front end saying "Incorrect type. Expected pk value, received list". Where is this error message coming from? Because in my init function, I overrode the "invalid" error message to say "Select a valid country.", but that is not the message I receive.</p>  <p>Also, I opened up the shell and did</p>  <pre><code>repr(UserExtendedSerializer()) </code></pre>  <p>and the output was:</p>  <pre><code>UserExtendedSerializer():\n country = PrimaryKeyRelatedField(queryset.Country.objects.all()) </code></pre>  <p>So no Django validators were listed here either. How do I view all the validators for a specific model / model serializer field?</p>