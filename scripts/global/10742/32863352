<p>Say I have three Django Models:</p>  <ul> <li><code>User</code>,</li> <li><code>Staff</code> which is one-to-one with <code>User</code>,</li> <li><code>Thing</code> which is many-to-one with <code>Staff</code> on the 'owner' field.</li> </ul>  <p>Using a MySQL database, which of these performs better?</p>  <pre><code>Thing.objects.filter(owner=user.staff)  # A Thing.objects.filter(owner__user=user)  # B </code></pre>  <p>What about if I am checking that the <code>Thing</code> that I want is owned by a <code>User</code>:</p>  <pre><code>try:     Thing.objects.get(id=some_id, owner=user.staff)  # D     Thing.objects.get(id=some_id, owner__user=user)  # E except Thing.DoesNotExist:     return None else:     pass # do stuff  # Or F: thing = Thing.objects.get(id=some_id) if thing.owner.user != user:     return None pass # do stuff </code></pre>