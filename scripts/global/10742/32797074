<p>This is the model that I have defined:</p>  <pre><code>class Post(models.Model):     user = models.ForeignKey(MSUser)     upvote_count = models.IntegerField()     post_status = models.IntegerField(choices = POST_STATUS)     title = models.CharField(max_length=200,null = True,blank = True)     content = models.CharField(max_length=1000,null = False,blank = False)     created_at = models.DateTimeField(auto_now_add=True, null=True)     updated_at = models.DateTimeField(auto_now=True, null=True)      def __unicode__(self):         return self.content      def get_user(self):         return self.user.__unicode__()      def save(self, **kwargs):         super(Post, self).save(**kwargs) </code></pre>  <p>The view is as follows:</p>  <pre><code>class Post (View):     @method_decorator(csrf_exempt) # To be removed     def dispatch(self, request, *args, **kwargs): #         Placeholder for fine grained permission system to prevent unwarranted GET/POST/PUTS #          Check request.user properties (like group etc) and request.method  #             return HttpResponseForbidden()         return super(Post, self).dispatch(request, *args, **kwargs)      def get(request):         pass      def post(self, request):         responseMessage = {}          user = request.user          if user.is_authenticated():             title = request.POST.get('title', None)             content = request.POST.get('content', None)             if title is None or content is None:                 responseMessage['status'] = 'failure'                 responseMessage['message'] = 'Mandatory data is missing.'                 return HttpResponse(json.dumps(responseMessage))             else:                 newPost = Post(user = user,                                title = title,                                content = content,                                post_status = PS_CREATED,                                upvote_count = 0)                 newPost.save()                 responseMessage['status'] = 'success'                 responseMessage['message'] = 'Post created successfully'                 responseMessage['server_id'] = newPost.id                 return HttpResponse(json.dumps(responseMessage)) </code></pre>  <p>On sending a request from <code>Postman</code> I keep getting the following error:</p>  <pre><code>AttributeError: 'Post' object has no attribute 'save' </code></pre>  <p>Where am I going wrong?</p>