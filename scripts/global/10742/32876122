<p>I currently have two Models:</p>  <pre><code>class Blog(Model):   ...  class Entry(Model):    blog = models.ForeignKey(Blog)    capture_dt = models.DateTimeField() </code></pre>  <p>If I want <code>blog.entry_set</code> to be ordered by <code>capture_dt</code>, it seems like the best way to get this is adding a <code>Meta</code> class to the <code>Entry</code> model with ordering set to <code>ordering = ('capture_dt', )</code>.</p>  <p>Unfortunately this now changes the global sorting behavior of <code>Entry</code> as opposed to just how I sort when accessing it from the <code>Blog</code> model. Is there a way to set the ordering behavior on a backref per backref basis?</p>  <p>FWIW, SQLAlchemy supports this when declaring the relationship:</p>  <pre><code>class Blog(Base):     ...     entry_set = relationship("Entry", order_by="Entry.capture_dt") </code></pre>