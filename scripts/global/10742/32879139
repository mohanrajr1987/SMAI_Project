<p>Suppose I have 3 Django models:</p>  <p>mymodela/models.py:</p>  <pre><code>class MyModelA(models.Model):     my_int = models.IntegerField()     created_ts = models.DateTimeField() </code></pre>  <p>mymodelb/models.py:</p>  <pre><code>from mymodela.models import mymodela class MyModelB(models.Model):     my_int = models.IntegerField()     my_a = models.ForeignKey(MyModelA, related_name="MyModelB_a")     created_ts = models.DateTimeField() </code></pre>  <p>mymodelc/models.py:</p>  <pre><code>from mymodelb.models import MyModelB class MyModelC(models.Model):     my_int = models.IntegerField()     my_b = models.ForeignKey(MyModelB, related_name="MyModelC_b")     created_ts = models.DateTimeField() </code></pre>  <p>I have an instance of <code>MyModelA</code> called <code>a</code>. I would like to calculate this QuerySet:</p>  <pre><code>MyModelC.objects.filter(my_b__my_a=a).latest("created_ts") </code></pre>  <p>However, I need to calculate this queryset from within a method of <code>a</code>. And since <code>MyModelA</code> doesn't import <code>MyModelC</code>, I cannot do that directly. I need to follow the reverse links. But how can I follow the reverse links twice to get what I need? </p>