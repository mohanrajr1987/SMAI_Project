<p>Although there are a few questions on this topic, i would need some piece of advice in a more specific matter.</p>  <p>I am working on some project where i have to rename an entity. This implies saving a new object containing the old and the new name of the entity. This is how the soft works.</p>  <p>Now, what i have to do is check if a circular dependency is attempted when someone tries to rename an object. For example:</p>  <pre><code>A -&gt; B B -&gt; C C -&gt; A </code></pre>  <p>When someone tries to rename C into A, this should be signaled.</p>  <p>I am not sure how to approach this problem. My thought was to create a directed graph having the edges[A, B], [B, C], [C, A] and the apply some cycle detecting algorithms to find the circular dependencies (Tarjan or something).</p>  <p>Would that be efficient considering that the graph will not be connected? It is possible to have the aforementioned example and then: </p>  <pre><code>E -&gt; F H -&gt; J X -&gt; Y </code></pre>  <p>I will end up with a lot of unconnected edges and a few cycles maybe. Should i first find the smaller, connected graphs and apply whatever algorithm on each or is there a possibility to just add build the big one and apply the algorithm on it?</p>  <p>What is the fastest and recommended way to detect the circular dependencies for my example?</p>  <p>Thank you!</p>