<p>I'm trying to determin minimum bouding rect of a rotated rectangle. I tried a couple of samples like <a href="http://docs.opencv.org/master/db/dd6/classcv_1_1RotatedRect.html#gsc.tab=0" rel="nofollow">this</a> from RotatedRect reference or from <a href="http://docs.opencv.org/doc/tutorials/imgproc/shapedescriptors/bounding_rotated_ellipses/bounding_rotated_ellipses.html" rel="nofollow">this</a> tutorial about ellipses and bounding boxes. Nothing with satisfactory results. On the image bellow, yellow rectangle is the desired result.</p>  <p>Example data for my test:</p>  <pre><code>Image:     Width: 1500     Height: 843  RotatedRect:     Center:         X: 783.490417         Y: 433.673492     Size:         Width: 810.946899         Height: 841.796997     Angle: 95.4092407 </code></pre>  <p>Sample code:</p>  <pre><code>cv::RotatedRect r(cv::Point2f(783.490417, 433.673492),      cv::Size2f(810.946899, 841.796997),      95.4092407);  cv::Mat img = Mat::zeros(843, 1500, CV_8UC3);  cv::Rect rect  = r.boundingRect(); cv::ellipse(img, r, cv::Scalar(0, 0, 255)); // RED  Point2f vertices[4]; r.points(vertices);  for (int i = 0; i &lt; 4; i++)     line(img, vertices[i], vertices[(i + 1) % 4], Scalar(0, 255, 0)); // GREEN  rectangle(img, rect, Scalar(255, 0, 0)); // BLUE cv::imshow("Result", img); </code></pre>  <ul> <li><strong>RED</strong> - RotatedRect for which min bouding rect is calculated</li> <li><strong>BLUE</strong> - r.boundingRect()</li> <li><strong>GREEN</strong> - r.points()</li> <li><strong>YELLOW</strong> - desired result</li> </ul>  <p><a href="http://i.stack.imgur.com/2DewM.png" rel="nofollow"><img src="http://i.stack.imgur.com/2DewM.png" alt="![Test and desired result"></a></p>