<p>we have Visual Studio Ultimate 2013 with Nsight Tegra Visual Studio Edition (3.1) and we are developing an Android application with a native part, which requires <em>OpenCV</em>.</p>  <p>The build succeeds, but when running the application, the following exception is thrown.</p>  <p>The following classes could not be instantiated:   </p>  <pre><code>org.opencv.android.JavaCameraView. java.lang.ClassNotFoundException:   org.opencv.R$styleable </code></pre>  <p>Indeed, there is no such class in the <code>apk</code> file, since we are only including <code>'opencv library - 3.0.0.jar'</code> (Properties - Configuration properties - Ant Build - Additional Dependencies), which does not contain the resources.</p>  <p>Similar question was already asked, but that was specific to Android Studio (<a href="http://stackoverflow.com/questions/24098927/android-studio-opencv-jar-java-lang-classnotfoundexception-org-opencv-rstyle">Android Studio, OpenCV jar, java.lang.ClassNotFoundException: org.opencv.R$styleable</a>).</p>  <p>If I manually copy the <code>R*.class</code> files from opencv build directory to the jar, the application runs fine, but what is the correct way to include the opencv resources into our scenario?</p>  <p>The <em>OpenCV</em> jar is built using Eclipse. Is there perhaps a way to add the resources while building the jar?</p>  <p>Thanks, Simon</p>