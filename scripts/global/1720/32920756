<p>i am working on Hough Circles function. When I use this function, the processing speed is quite slow. For example, the real time video feeding will have lags of 1 seconds when i move the camera. Or even 10 seconds.  The code is as follows</p>  <pre><code>#include &lt;sstream&gt; #include &lt;string&gt; #include &lt;iostream&gt; #include &lt;vector&gt; #include "opencv2/highgui/highgui.hpp" #include "opencv2/imgproc/imgproc.hpp" #include &lt;opencv\cv.h&gt; #include &lt;opencv\highgui.h&gt; #include &lt;stdlib.h&gt; #include &lt;stdio.h&gt;  using namespace std; using namespace cv;   int main(int argc, char** argv) {      //Create a window for trackbars     namedWindow("Trackbar Window", CV_WINDOW_AUTOSIZE);      //Create trackbar to change brightness     int iSliderValue1 = 50;     createTrackbar("Brightness", "Trackbar Window", &amp;iSliderValue1, 100);      //Create trackbar to change contrast     int iSliderValue2 = 50;     createTrackbar("Contrast", "Trackbar Window", &amp;iSliderValue2, 100);      //Create trackbar to change param1 in HoughCircle     int param1 = 150;     createTrackbar("param1", "Trackbar Window", &amp;param1, 300);      //Create trackbar to change param2 in HoughCircle     int param2 = 200;     createTrackbar("param2", "Trackbar Window", &amp;param2, 300);      //Create trackbar to change min Radius in HoughCircle     int minR = 0;     createTrackbar("minRadius", "Trackbar Window", &amp;minR, 300);      //Create trackbar to change max Radius in HoughCircle     int maxR = 0;     createTrackbar("maxRadius", "Trackbar Window", &amp;maxR, 300);      //Debugging purpose     cout &lt;&lt; "All trackbars created" &lt;&lt; endl;      //Create a variable to store image     Mat src;     //Create video capture     VideoCapture capture;     //open video from either a file or webcam     //capture.open("C:\\Users\\Student-ID\\Downloads\\SPACe Mission IIIA\\GOPR0503.mp4");     capture.open(0);      //store whatever is captured to src     capture.read(src);      //set frame height     capture.set(CV_CAP_PROP_FRAME_HEIGHT, 240);     capture.set(CV_CAP_PROP_FRAME_WIDTH, 320);      //Debugging purpose     cout &lt;&lt; "Vidoe opened" &lt;&lt; endl;      if (!src.data) {         std::cout &lt;&lt; "ERROR:\topening image" &lt;&lt; std::endl;         return -1;     }      //Create window to display videos     cv::namedWindow("image1", CV_WINDOW_AUTOSIZE);       while (true){          capture.read(src);         //Code for changing Brightness and contrast         int iBrightness = iSliderValue1 - 50;         double dContrast = iSliderValue2 / 50.0;         src.convertTo(src, -1, dContrast, iBrightness);          //Debugging purpose         cout &lt;&lt; "1" &lt;&lt; endl;           //Create variable to store the processed image         Mat src_gray2;         //Convert the colour to grayscale         cvtColor(src, src_gray2, CV_BGR2GRAY);         //Smooth and blur the image to reduce noise         GaussianBlur(src_gray2, src_gray2, cv::Size(9, 9), 2, 2);          vector&lt;Vec3f&gt; circles;            //Change the param1 and 2 to double from integer         double dparam1 = param1 / 1.0;         double dparam2 = param2 / 1.0;          //Debugging purpose         cout &lt;&lt; "2" &lt;&lt; endl;          //Apply HoughCircle function         HoughCircles(src_gray2, circles, CV_HOUGH_GRADIENT,         2,   // accumulator resolution (size of the image / 2)         5,  // minimum distance between two circles         dparam1, // Canny high threshold         dparam2, // minimum number of votes         minR, maxR); // min and max radius          //Debugging purpose         cout &lt;&lt; "3" &lt;&lt; endl;             //Draw the circle         for (size_t i = 0; i &lt; circles.size(); i++)         {             Point center(cvRound(circles[i][0]), cvRound(circles[i][1]));             int radius = cvRound(circles[i][2]);             circle(src, center, 3, Scalar(0, 255, 0), -1, 8, 0);             // circle outline             circle(src, center, radius, Scalar(0, 0, 255), 3, 8, 0);             //Display words on top left hand corner             putText(src, "Circle Found", Point(0, 50), 1,2,Scalar(0, 255, 0),2);         }         //display video          imshow("image1", src);          //debugging purpose         cout &lt;&lt; "5" &lt;&lt; endl;          //delay to refresh the pic         cvWaitKey(33);      }     return 0; } </code></pre>  <p>So the debugging numbering stops at "2" for like 10 seconds before jump to 3. I was told before to increase the param1 and param2, but if i max both to 300 or even 200, no circles will be detected. Note: my circles are of various sizes, so we can forget about min and max radius</p>  <p>This amount of lag is too much for me, is there a way to improve the speed of processing with respect to the coding and others?</p>  <p>I am using OPENCV 3.0.0 C++ on Microsoft Visual Studio 2013, running Win 8 64bit system.</p>