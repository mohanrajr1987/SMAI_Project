<p>I'm trying to access multiple usb-cameras in openCV with MacOS 10.11. My goal is to connect up to 20 cameras to the pc via USB Quad-Channel extensions and take single images. I do not need to have live streaming.</p>  <p>I tried with the following code and I can take a single image from all cameras (currently only 3, via one usb controller).</p>  <p>The question is: does opencv stream a live video from the usb cameras all the time, or does grab() stores an image on the camera which can be retrieve with retrieve() ? </p>  <p>I couldn't find the information, wether opencv uses the grab() command on it's internal video buffer, or on the camera. </p>  <pre><code>int main(int argument_number, char* argument[]) {     std::vector&lt;int&gt; cameraIDs{0,1,2};     std::vector&lt;cv::VideoCapture&gt; cameraCaptures;     std::vector&lt;std::string&gt; nameCaptures{"a","b","c"};      //Load all cameras     for (int i = 0;i&lt;cameraIDs.size();i++)     {         cv::VideoCapture camera(cameraIDs[i]);         if(!camera.isOpened()) return 1;          camera.set(CV_CAP_PROP_FRAME_WIDTH, 640);         camera.set(CV_CAP_PROP_FRAME_HEIGHT, 480);         cameraCaptures.push_back(camera);     }      cv::namedWindow("a");     while(true) {         int c = cvWaitKey(2);         if(27 == char(c)){ //if esc pressed. grab new image and display it.             for (std::vector&lt;cv::VideoCapture&gt;::iterator it=cameraCaptures.begin();it!=cameraCaptures.end();it++)             {                 (*it).grab();             }              int i=0;             for (std::vector&lt;cv::VideoCapture&gt;::iterator it=cameraCaptures.begin();it!=cameraCaptures.end();it++)             {                 cv::Mat3b frame;                 (*it).retrieve(frame);                 cv::imshow(nameCaptures[i++], frame);             }         }     }      return 0; } </code></pre>