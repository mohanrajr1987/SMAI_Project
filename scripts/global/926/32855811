<p>Let's say I've such code</p>  <pre><code>public class Holded {     protected internal int holdedID = 0; }  public class Inventory : Holded {     public Inventory() { }      public void changeHoldedID()     {         this.holdedID = 100;     } }  public class Equipment : Holded {     public Equipment() { }      public void writeHoldedID()     {         Console.WriteLine("Holded ID is: {0}!", this.holdedID);     } }  public class Cargo : Holded {     public Cargo() { } } </code></pre>  <p>If I'd call changeHoldedID and then writeHoldedID, console will still output a string like "Holded ID is: 0!". Now what I want to achieve is to have same base class (Holded) in both of classes. So if I'd change holdedID from Inventory, Equipment's writeHoldedID function would output "Holded ID is: 100!". Thanks and regards!</p>  <p>@Edit: More detailed: I have a game. Each person is a character, that owns Equipment, Inventory and Cargo class. Each class contains about 20 slots for "items". Now the thing is, that if you try to move an item, for ex. from inventory, to equipment, and there's such index of item, then the item is "swapped" - goes holded, and now I may throw such holded item into Equipment, Inventory or Cargo. That's why I'm in need to share such class between Eq/Inv/Cargo.</p>