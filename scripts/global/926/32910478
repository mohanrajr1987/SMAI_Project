<p>Given the following two class types, that are both derived classed of the built in ValidationResult class:</p>  <pre><code>class ExamValidationResult : ValidationResult class ApplicationValidationResult : ValidationResult </code></pre>  <p>I'm using windows workflows to invoke a workflow that will eventually return a validation result:</p>  <pre><code>var validationResults = (List&lt;ValidationResult&gt;)workflowInvoker.Invoke(args)["Result"]; </code></pre>  <p>Once this is invoked it will return a list of both of the previous object types. E.G. (As it appears in Visual studio 2013, this is just one item in the list)</p>  <p><a href="http://i.stack.imgur.com/5hChl.png" rel="nofollow"><img src="http://i.stack.imgur.com/5hChl.png" alt="enter image description here"></a></p>  <p>The bottom four propertys in the object are default to the ValidationResult class, but you can see that the derived type is defined at the top.</p>  <p>This would look the exact same for the ApplicationValidationResult. So my question is how could I cast them back to their derived type with having to manually tell it. (Which I can't effectively do since the list will contain two different derived types.)</p>