<p><strong>Express Router</strong> the function I want to "inherit"/extend</p>  <pre><code>var proto = module.exports = function(options) {   var opts = options || {};    function router(req, res, next) {     router.handle(req, res, next);   }    // mixin Router class functions   router.__proto__ = proto;    router.params = {};   router._params = [];   router.caseSensitive = opts.caseSensitive;   router.mergeParams = opts.mergeParams;   router.strict = opts.strict;   router.stack = [];    return router; }; </code></pre>  <p>So the purpose would be to create my own function/class to extend this express router and override the <code>route</code> method to accept an extra parameter but also being able to call <code>super.route</code> of Express router</p>  <p>I've tried several ways, including <code>util.inherits</code> but nothing worked.</p>  <p>If possible please provide some explanations also</p>  <p>End goal is something like this:</p>  <pre><code>var testRouter = express.Router();  testRouter.route('/test-route', 'aaa' /* my extra param here */)     .get(controller.testWhatever) </code></pre>  <p>Being able to override the route method to add a new parameter but preserve the old functionality.</p>