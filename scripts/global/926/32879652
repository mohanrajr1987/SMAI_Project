<p>Here my code</p>  <p><strong>GeneralLesson.cs</strong>: it's just a .cs file, no .Designer.cs or .resx file</p>  <pre><code>public /*abstract*/ class GeneralLesson : Form {     public GeneralLesson()     {         this.StartPosition = SS.FrmStartPos;//If I want to change it later, I just change it here and all the children will get the change     }     protected override void OnFormClosing(FormClosingEventArgs e)     {         base.OnFormClosing(e);         if (e.CloseReason == CloseReason.WindowsShutDown) return;          SS.LearningDay = 0; //SS is my static class that hold the static variables.         SS.FrmMain.Show();     } } </code></pre>  <p><strong>SentLesson.cs</strong>: This is actually a windows form, with .Designer.cs and .resx file</p>  <pre><code>public partial class _Sent_Lesson : GeneralLesson {     public _Sent_Lesson()     {         InitializeComponent();                    richTextBox1.Text = "under construction";     }  } </code></pre>  <p>So it actually serves my purpose well. my SentLesson window inherits the constructor and OnFormClosing from GeneralLesson. But the problem is I can't design my SentLesson window any more, it shows as the picture below: <a href="http://i.stack.imgur.com/yBkby.jpg" rel="nofollow"><img src="http://i.stack.imgur.com/yBkby.jpg" alt="Object reference not set to an instance of an object."></a></p>  <p>Maybe I do it wrong. But I don't want to create GeneralLesson as a Window because I don't design any control on it, I just want to override some function like OnFormClosing or the Constructor. Is there any way I can do this without making GeneralLesson as a Window.</p>  <p>Thanks for reading.</p>