<p>I'm trying to figure out controller inheritance in AngularJS. I have a query view designed to pull from a database and display the result in a table. This query view can be used on its own but can also be used in another view.<br> My view functions fine when I do the following:  </p>  <pre><code>&lt;div class="container" ng-controller="parentCtrl"&gt;     &lt;h2&gt;Title&lt;/h2&gt;     &lt;div ng-include="'partials/queryView.html'" class="container" ng-controller="queryCtrl"&gt;&lt;/div&gt; &lt;/div&gt; </code></pre>  <p>However what I want to do is change the functionality of <code>queryCtrl</code> by inheriting the methods of <code>queryCtrl</code> and overwriting one of them that I want to act differently. What I tried in my <code>main.js</code> was this:  </p>  <pre><code>myApp.controller('childCtrl', ['$scope', '$controller', function ($scope, $controller) {     $controller('queryCtrl', {$scope: $scope});     $scope.more = $scope.go('/next/view'); }]); </code></pre>  <p>Based on instructions from here: <a href="http://stackoverflow.com/q/18461263/4591527">Can an AngularJS controller inherit from another controller in the same module?</a><br> However, what this does is immediately loads the next view. <code>$scope.more()</code> is a function defined in <code>queryCtrl</code> that behaves differently to what I'd like in the child controller, and <code>$scope.go()</code> is a routing function defined in the parent controller <code>parentCtrl</code>. What appears to be happening is that as I try to overwrite the function more from <code>queryCtrl</code>, the function with which I'm overwriting it is being executed without <code>$scope.more()</code> having any reason to execute.  </p>  <p>What am I doing wrong here, and how do I properly inherit the methods of a sibling controller like this?</p>