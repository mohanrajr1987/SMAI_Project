<p>I have a class named <code>Person</code> and it's subclass named <code>NewWorker</code>. Class <code>Person</code> has a <code>Person</code> object named <code>Spouse</code>, if this object is <strong>null</strong>, I cast <code>this</code> to <code>NewWorker</code> and call a method in subclass that returns a <code>double</code>, and if this object is not null, I do the same, <strong>plus</strong> I cast <code>Spouse</code> to <code>NewWorker</code> and call a method on it, add the two <code>double</code> values.</p>  <p><strong>The problem:</strong> I can cast <code>this</code> to NewWorker, but not <code>this.Spouse</code>. I get the following error:</p>  <pre><code>Exception in thread "main" java.lang.ClassCastException: Person cannot be cast to NewWorker at Person.getFamilyIncome(Lab4.java:127) at Lab4.main(Lab4.java:239) </code></pre>  <p><strong>Relevant code:</strong> <br> <strong>Person Class</strong></p>  <pre><code>class Person{  private Name personName; private Person Spouse = null;  public Person(String fullName){     this.personName = new Name(fullName); }  public void setSpouse(Person spouse){     this.Spouse = spouse; }  public void setSpouse(NewWorker spouse){     this.Spouse = spouse; }  public double getFamilyIncome(){      if(this.Spouse == null){         return ((NewWorker)this).getSalary();     } else {         //error occurs on this line         return ((NewWorker)this).getSalary() + ((NewWorker) this.Spouse).getSalary();     }  } </code></pre>  <p><strong>NewWorker class, extending Person</strong></p>  <pre><code>class NewWorker extends Person{  private static int howManyWorkers; private int workerNumber = 0; private MyDate dateJoiningCompany; private double Salary = 0.0; private NewWorker Supervisor = null;  public NewWorker(String name, String date, double salary){     super(name);     this.dateJoiningCompany = new MyDate(date);     this.Salary = salary;     this.workerNumber = howManyWorkers + 1;     ++howManyWorkers;  }  public double getSalary(){     return this.Salary;     }  } </code></pre>  <p>I've tried looking around some previous answers but couldn't understand what the problem was, any help is appreciated</p>  <p>Thanks in advance </p>  <p><strong>Edit:</strong> The solution was to change all instances of <code>((NewWorker)this).getSalary()</code> to <code>(this instanceof NewWorker ? ((NewWorker)this).getSalary() : this.getSalary())</code> where <code>this.getSalary()</code> just returns <code>0.0</code>.</p>  <pre><code>public double getFamilyIncome(){      if(this.Spouse == null){         return (this instanceof NewWorker ? ((NewWorker)this).getSalary() : this.getSalary());     } else {         return ((this instanceof NewWorker ? ((NewWorker)this).getSalary() : this.getSalary())) + (this.Spouse instanceof NewWorker ? ((NewWorker)this.Spouse).getSalary() : this.Spouse.getSalary());     }  } </code></pre>