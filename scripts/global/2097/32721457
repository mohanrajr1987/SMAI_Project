<p>This is making me quite confused, I'm implementing a custom iterator and I read here: <a href="http://en.cppreference.com/w/cpp/concept/InputIterator" rel="nofollow">http://en.cppreference.com/w/cpp/concept/InputIterator</a>, that the behavior of <code>*iter++</code> should first use the dereference operator, and then increment the returned value (which is copied), by 1.</p>  <p>I have in my custom iterator overriden both <code>operator*</code> and <code>operator++(int v)</code>, the problem is that <code>operator++(int v)</code> is called before <code>operator*</code> when I execute <code>*iter++</code>, which is the correct behavior, but not for what I want to do (I guess?).</p>  <p>If you read the link, you'll see that in the table, on the last row, it is said that if you execute <code>*iter++</code>, your implementation should first dereference, and then increment the result, which is not what is the default behavior.</p>  <p>I can't really seem to know what to do, any ideas?</p>  <p><strong>After understanding the answer, the title is misleading, sorry!</strong></p>  <p>Thanks,</p>  <p>Johan</p>