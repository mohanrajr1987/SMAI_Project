<p>I made this token iterator class that scans an input line by each character and creates <code>String</code>s. I am able to make the class read all the tokens and separate them, but I cannot get it to remove all the invalid/unwanted tokens in an input.</p>  <p>I tried doing something with <code>character.toString(counter)</code> so those characters are made into a string and then wrote if statements that when the token is not "not", "true" , "false" or "and" then discard it and go on to the next token. </p>  <pre><code>import java.util.Iterator;  public class Tokiter implements Iterator&lt;String&gt;{     private char counter = 0;     //input line to be tokenized     private String line;      // the next Token, null if no next Token     private String nextToken;          // implement     public TokIter(String line){         this.line = line;     }       @Override     // implement     public boolean hasNext() {          if (counter &gt;= line.length())             return false;         else if (line.charAt(counter) == ' ')         {             counter++;             return hasNext();         }          else             return true;     }       @Override     //implement     public String next() {         String s = "";         if (!hasNext())         {     //          System.out.println("Null");             return null;         }         else if( line.charAt(counter) == ('('))         {     //          System.out.println("Token");             s += line.charAt(counter);             counter++;             return s;         }         else if( line.charAt(counter) == (')'))         {        //          System.out.println("Token");             s += line.charAt(counter);             counter++;             return s;         }         else             s += line.charAt(counter);         counter++;         if (counter &gt;= line.length()){             return s;         }         while (Character.isLetter(line.charAt(counter)))         {             s += line.charAt(counter);             counter++;             if (counter &gt;= line.length()){                 return s;             }           }         return s;     }          @Override     public void remove() {         // TODO Auto-generated method stub         throw new UnsupportedOperationException();     }          // provided     public static void main(String[] args){         String line;         // you can play with other inputs on the command line         if(args.length&gt;0)             line = args[0];         // or do the standard test         else             line = " not random (true or false) ** whatever ";         System.out.println("line: [" + line + "]");         Tokiter tokIt = new Tokiter(line);         while(tokIt.hasNext()){             System.out.println("next token: [" + tokIt.next() + "]");         }     } } </code></pre>  <p>So for example when the program runs the input line <code>not random (true or false) ** whatever</code> the output will be:</p>  <pre class="lang-none prettyprint-override"><code>line: [  not random (true or false) ** whatever  ]     next token: [not]     next token: [(]     next token: [true]     next token: [or]     next token: [false]     next token: [)] </code></pre>