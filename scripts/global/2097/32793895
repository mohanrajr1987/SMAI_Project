<p>I've got a method that returns a list of hashmaps (the data comes from a ResultSet). While trying to use an iterator to loop through the data and convert it to a String array, I was finding that the code was not working - It seemed to be losing half of my array data while doing the loop.</p>  <p>When swapping it to use a for loop rather than an iterator, the data was not lost. I tried using both an <code>Iterator()</code> and <code>ListIterator()</code> to no avail</p>  <p>Here is my original code (that wasn't working):</p>  <pre><code>public String[][] getLayoutEdges() throws SQLException {     ArrayList&lt;String[]&gt; returnArray = new ArrayList&lt;&gt;();      List&lt;HashMap&gt; layoutEdges = db.getLayoutEdgesFromDatabase();     ListIterator&lt;HashMap&gt; edgesIterator = layoutEdges.listIterator();      while(edgesIterator.hasNext()) {         ArrayList&lt;String&gt; tmpList = new ArrayList&lt;&gt;();         tmpList.add(edgesIterator.next().get("fromnode").toString());         tmpList.add(edgesIterator.next().get("tonode").toString());         tmpList.add(edgesIterator.next().get("distance").toString());          String[] tmpStr = new String[tmpList.size()];         returnArray.add(tmpList.toArray(tmpStr));      }       String[][] rtn = new String[returnArray.size()][returnArray.size()];     return returnArray.toArray(rtn); } </code></pre>  <p>Here is the code that does work:</p>  <pre><code>public String[][] getLayoutEdges() throws SQLException {     ArrayList&lt;String[]&gt; returnArray = new ArrayList&lt;&gt;();      List&lt;HashMap&gt; layoutEdges = db.getLayoutEdgesFromDatabase();      for(HashMap tmp : layoutEdges) {         ArrayList&lt;String&gt; tmpList = new ArrayList&lt;&gt;();         tmpList.add(tmp.get("fromnode").toString());         tmpList.add(tmp.get("tonode").toString());         tmpList.add(tmp.get("distance").toString());          String[] tmpStr = new String[tmpList.size()];         returnArray.add(tmpList.toArray(tmpStr));     }      String[][] rtn = new String[returnArray.size()][returnArray.size()];     return returnArray.toArray(rtn); } </code></pre>  <p>Can anybody tell me why the iterator wasn't working? I'm okay with using a for loop, i just can't for the life of me work out why the original iterator code I wrote wasn't keeping all my data. Wondering if there's a step i'm missing or whether I was trying to use the wrong solution.</p>