<p>I have a piece of code that looks like this (in java) which uses org.apache.commons.io.IOUtils.lineIterator;</p>  <pre><code>LineIterator iterator = lineIterator(someFile, defaultCharset()); .... while(iterator.hasNext){  process(iterator); }  private String process(LineIterator iterator, SomeComplexClass someClass){  while(iterator.hasNext()){   //do something using iterator.nextLine()  } } </code></pre>  <p>This works perfectly if my input file has an empty last row.</p>  <pre><code>Input file: Line1 Line2 (nothing here. just empty line) </code></pre>  <p>But if I have my input file without an empty line, then lineIterator.hasNext() throws exception saying "java.lang.IllegalStateException: Stream already closed"</p>  <pre><code>Input file: Line1 Line2 //there is no empty line after this </code></pre>  <p>Is this a known behaviour of LineIterator? Please help me try to understand why is it happening like this.</p>  <p>Update: I don't see close() or LineIterator.closeQuietly(iterator) in the code. Can that cause the issue?</p>