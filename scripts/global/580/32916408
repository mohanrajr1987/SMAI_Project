<p>My purpose is to make a subroutine that takes a list of random 4-toops, sorts then non-destructively by the sum of each toop from largest to smallest, and returns the sorted list.</p>  <p>An example output should be:</p>  <pre><code>---- random 4-toops: toop 1: (93 97 78 77); 345 toop 2: (-1 82 92 -45); 128 toop 3: (62 25 -31 -4); 52 toop 4: (-77 -86 18 36); -109 toop 5: (-72 -96 -83 -6); -257 ---- random 4-toops sorted by sum: toop 1: (93 97 78 77); sum = 345 toop 2: (-1 82 92 -45); sum = 128 toop 3: (62 25 -31 -4); sum = 52 toop 4: (-77 -86 18 36); sum = -109 toop 5: (-72 -96 -83 -6); sum = -257 </code></pre>  <p>Here my Python variation of the code that is already working:</p>  <pre><code>def sort_random_4_toops_by_sum(toops):     summit = 0     s = []     for i in toops:         summit = 0         for d in xrange(0,4):             summit += i[d]         s.append(summit)     together = zip(toops, s)     sortedtog = sorted(together, key = lambda x: x[1],reverse=True)     toops = [x[0] for x in sortedtog]     return toops </code></pre>  <p>So I am stuck with this problem: In Python, I simply zipped my sum list and my tuples list together, and then sorted by the second element in each tuple, which is always the sum. Is there an equivalent function in perl that can sort according to the second element of a tuple? Here is my attempt so far. </p>  <pre><code>sub sort_random_4_toops_by_sum {      my ( @sorted_toops,@sorted_toops2, @sorted_toops_sums, @sortedtoops3 ) = @_;      @sorted_toops2 = map { [ $_, sum( @$_ ) ] } @sorted_toops;     @sorted_toops_sums = reverse sort { $a-&gt;[1] &lt;=&gt; $b-&gt;[1] } @sorted_toops2;      my @sortedtoops3 = map { $_-&gt;[0] } @sorted_toops_sums;      return \@sortedtoops3; } </code></pre>  <p>It is telling me this:</p>  <pre class="lang-none prettyprint-override"><code>Can't locate List/Tuples.pm in @INC </code></pre>  <p>The test code to generate the right output:</p>  <pre class="lang-perl prettyprint-override"><code>sub test_step_3 {      my $toops = gen_random_4_toops( 1, 100, 5 );      print "---- random 4-toops:\n";      my $tn = 1;     foreach ( @{ sort_random_4_toops_by_sum( @{$toops} ) } ) {         print "toop $tn:\t(@{$_}); " . sum( @{$_} ) . "\n";         $tn++;     }      print "---- random 4-toops sorted by sum:\n";      my $sorted_toops = sort_random_4_toops_by_sum( @{$toops} );      $tn = 1;     foreach ( @{$sorted_toops} ) {         print "toop $tn:\t(@{$_}); sum = " . sum( @{$_} ) . "\n";         $tn++;     } } </code></pre>