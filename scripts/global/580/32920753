<p>I released <a href="http://search.cpan.org/~mbethke/Net-NSCAng-Client-0.04/lib/Net/NSCAng/Client.pm" rel="nofollow"><code>Net::NSCAng::Client</code></a> a while ago and am getting a lot of test failures on OpenBSD. The reason for that is that the NSCAng protocol uses OpenSSL in preshared-key mode (RFC4279), something the folks at LibreSSL (default on OpenBSD now) have ripped out. However, they seem to have been hell-bent on doing this the most intransparent way: the include files have all the functions defined, just the shared library is missing the corresponding symbols, so compilation works fine but the tests fail.</p>  <p>There is a compatibility package on OpenBSD called eopenssl, and by testing for this first in Makefile.PL (using <code>ExtUtils::PkgConfig</code>) I can make it work <em>if</em> the compatibility library is installed. If it isn't, things still fail.</p>  <p>I could check for the CPP symbol OPENSSL_NO_PSK, but as the includes always come from LibreSSL, this fails even if linking with eopenssl would work fine. The only idea I have left is to try and have a test program run as part of the compilation phase as autoconf does it. Is that even possible with <code>ExtUtils::MakeMaker</code> (or something else -- I wouldn't mind switching the build system if necessary)?</p>