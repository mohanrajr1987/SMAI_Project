<p>I am new to xml. I have 10 XML files which contain some "squish report" as follows(<em>I am not looking for the answer just guidance on how I could approach it</em>):</p>  <pre><code>&lt;SquishReport&gt; &lt;test name="mat_tst_versions"&gt; &lt;prolog time="2015-06-16T13:49:54+02:00"/&gt; &lt;message type="FATAL" time="2015-06-16T13:50:54+02:00"&gt;     &lt;description&gt;&lt;![CDATA[Execution error]]&gt;&lt;/description&gt;     &lt;description type="DETAILED"&gt;&lt;![CDATA[squishrunner exited with code 3 when executing tst_start_app]]&gt;&lt;/description&gt; &lt;/message&gt; &lt;test name="tst_check_versions"&gt;     &lt;prolog time="2015-06-16T13:50:55+02:00"/&gt;     &lt;message line="274" type="LOG" file="C:\test\scripts\utilities.py" time="2015-06-16T13:50:59+02:00"&gt;         &lt;description&gt;&lt;![CDATA[is 64 bit windows version: True]]&gt;&lt;/description&gt;     &lt;/message&gt;                 &lt;message line="124" type="LOG" file="C:\test\mat_tst\tst_check_versions\test.py" time="2015-06-16T13:50:59+02:00"&gt;         &lt;description&gt;&lt;![CDATA[    path exists!]]&gt;&lt;/description&gt;     &lt;/message&gt;     &lt;message line="129" type="FAIL" file="C:\test\mat_tst\tst_check_versions\test.py" time="2015-06-16T13:50:59+02:00"&gt;         &lt;description&gt;&lt;![CDATA[expected version: 1.0.0.107]]&gt;&lt;/description&gt;     &lt;/message&gt;     &lt;verification line="132" type="" name="" file="C:\test\mat_tst\tst_check_versions\test.py"&gt;         &lt;result type="PASS" time="2015-06-16T13:50:59+02:00"&gt;             &lt;description&gt;version check test case passes!&lt;/description&gt;             &lt;description type="DETAILED"&gt;&lt;/description&gt;         &lt;/result&gt;     &lt;/verification&gt;     &lt;epilog time="2015-06-16T13:50:59+02:00"/&gt; &lt;/test&gt;         &lt;test name="tst_scheduler_1"&gt;     &lt;prolog time="2015-06-16T13:51:00+02:00"/&gt;     &lt;message line="62" type="LOG" file="C:\test\mat_tst\tst_scheduler_1\test.py" time="2015-06-16T13:51:00+02:00"&gt;         &lt;description&gt;&lt;![CDATA[count = 0]]&gt;&lt;/description&gt;     &lt;/message&gt;     &lt;message line="125" type="LOG" file="C:\test\scripts\start_stop.py" time="2015-06-16T13:51:06+02:00"&gt;         &lt;description&gt;&lt;![CDATA[duration of start of C: 5132ms]]&gt;&lt;/description&gt;     &lt;/message&gt;     &lt;message line="172" type="LOG" file="C:\test\mat_tst\tst_scheduler_1\test.py" time="2015-06-16T13:51:19+02:00"&gt;         &lt;description&gt;&lt;![CDATA[application name = C]]&gt;&lt;/description&gt;     &lt;/message&gt;     &lt;message line="184" type="LOG" file="C:\test\mat_tst\tst_scheduler_1\test.py" time="2015-06-16T13:51:19+02:00"&gt;         &lt;description&gt;&lt;![CDATA[start application: C]]&gt;&lt;/description&gt;     &lt;/message&gt;     &lt;message line="213" type="LOG" file="C:\test\mat_tst\tst_scheduler_1\test.py" time="2015-06-16T13:51:19+02:00"&gt;         &lt;description&gt;&lt;![CDATA[Scheduler Label exists]]&gt;&lt;/description&gt;     &lt;/message&gt;     &lt;message line="219" type="LOG" file="C:\test\mat_tst\tst_scheduler_1\test.py" time="2015-06-16T13:51:19+02:00"&gt;         &lt;description&gt;&lt;![CDATA[Scheduler Counter exists]]&gt;&lt;/description&gt;     &lt;/message&gt;     &lt;verification line="368" type="" name="" file="C:\test\mat_tst\tst_scheduler_1\test.py"&gt;         &lt;result type="FAIL" time="2015-06-16T13:52:01+02:00"&gt;             &lt;description&gt;different types elements&lt;/description&gt;             &lt;description type="DETAILED"&gt;&lt;/description&gt;         &lt;/result&gt;     &lt;/verification&gt;     &lt;verification line="369" type="" name="" file="C:\test\mat_tst\tst_scheduler_1\test.py"&gt;         &lt;result type="FAIL" time="2015-06-16T13:52:01+02:00"&gt;             &lt;description&gt;name_list= ['Scheduler', 'NCU', 'PLCSimAdv', 'simNCK', 'MCP']&lt;/description&gt;             &lt;description type="DETAILED"&gt;&lt;/description&gt;         &lt;/result&gt;     &lt;/verification&gt;     &lt;verification line="370" type="" name="" file="C:\test\mat_tst\tst_scheduler_1\test.py"&gt;         &lt;result type="FAIL" time="2015-06-16T13:52:01+02:00"&gt;             &lt;description&gt;typ_list= ['Scheduler', u'NCU', u'PLCSimAdv']&lt;/description&gt;             &lt;description type="DETAILED"&gt;&lt;/description&gt;         &lt;/result&gt;     &lt;/verification&gt;     &lt;message line="393" type="LOG" file="C:\test\mat_tst\tst_scheduler_1\test.py" time="2015-06-16T13:52:08+02:00"&gt;         &lt;description&gt;&lt;![CDATA[:840evoVC.lblClockCounter_Edit = 0]]&gt;&lt;/description&gt;     &lt;/message&gt;     &lt;verification line="411" type="" name="" file="C:\test\mat_tst\tst_scheduler_1\test.py"&gt;         &lt;result type="FAIL" time="2015-06-16T13:52:08+02:00"&gt;             &lt;description&gt;scheduler counter 1. read, n=0: Scheduler= 0&lt;/description&gt;             &lt;description type="DETAILED"&gt;&lt;/description&gt;         &lt;/result&gt;     &lt;/verification&gt;     &lt;verification line="414" type="" name="" file="C:\test\mat_tst\tst_scheduler_1\test.py"&gt;         &lt;result type="FAIL" time="2015-06-16T13:52:08+02:00"&gt;             &lt;description&gt;scheduler counter 2. read, n=0: Scheduler= 0&lt;/description&gt;             &lt;description type="DETAILED"&gt;&lt;/description&gt;         &lt;/result&gt;     &lt;/verification&gt;     &lt;message line="421" type="LOG" file="C:\test\mat_tst\tst_scheduler_1\test.py" time="2015-06-16T13:52:08+02:00"&gt;         &lt;description&gt;&lt;![CDATA[scheduler counter 1. read &lt; counter 2. read, n=0: Scheduler= 0]]&gt;&lt;/description&gt;     &lt;/message&gt;     &lt;message line="484" type="ERROR" file="C:\test\mat_tst\tst_scheduler_1\test.py" time="2015-06-16T13:52:29+02:00"&gt;         &lt;description&gt;&lt;![CDATA[Script Error]]&gt;&lt;/description&gt;         &lt;description type="DETAILED"&gt;&lt;![CDATA[LookupError: Object ':840evoVC.chkSchedule_CheckBox_2' not ready.]]&gt;&lt;/description&gt;     &lt;/message&gt;     &lt;epilog time="2015-06-16T13:52:29+02:00"/&gt; &lt;/test&gt; &lt;test name="tst_run_plc"&gt;     &lt;prolog time="2015-06-16T13:52:30+02:00"/&gt;     &lt;verification line="45" type="" name="" file="C:\test\mat_tst\tst_run_plc\test.py"&gt;         &lt;result type="FAIL" time="2015-06-16T13:52:30+02:00"&gt;             &lt;description&gt;user path folder already exists!&lt;/description&gt;             &lt;description type="DETAILED"&gt;&lt;/description&gt;         &lt;/result&gt;     &lt;/verification&gt;     &lt;message line="125" type="LOG" file="C:\test\scripts\start_stop.py" time="2015-06-16T13:52:34+02:00"&gt;         &lt;description&gt;&lt;![CDATA[duration of start of 840evoVC: 4263ms]]&gt;&lt;/description&gt;     &lt;/message&gt;     &lt;message line="54" type="LOG" file="C:\test\mat_tst_840evovc\tst_run_plc\test.py" time="2015-06-16T13:52:34+02:00"&gt;         &lt;description&gt;&lt;![CDATA[start ok, duration = 4263000]]&gt;&lt;/description&gt;     &lt;/message&gt;     &lt;message line="64" type="LOG" file="C:\test\mat_tst_840evovc\tst_run_plc\test.py" time="2015-06-16T13:52:34+02:00"&gt;         &lt;description&gt;&lt;![CDATA[application started: 840evoVC]]&gt;&lt;/description&gt;     &lt;/message&gt;     &lt;message line="78" type="LOG" file="C:\test\mat_tst_840evovc\tst_run_plc\test.py" time="2015-06-16T13:52:39+02:00"&gt;         &lt;description&gt;&lt;![CDATA[PLC Sim Advanced tmp user files are the expected files]]&gt;&lt;/description&gt;     &lt;/message&gt;     &lt;message line="263" type="LOG" file="C:\test\scripts\start_stop.py" time="2015-06-16T13:52:45+02:00"&gt;         &lt;description&gt;&lt;![CDATA[all applications are closed]]&gt;&lt;/description&gt;     &lt;/message&gt;     &lt;message line="87" type="LOG" file="C:\test\mat_tst_840evovc\tst_run_plc\test.py" time="2015-06-16T13:52:45+02:00"&gt;         &lt;description&gt;&lt;![CDATA[close application ok]]&gt;&lt;/description&gt;     &lt;/message&gt;     &lt;epilog time="2015-06-16T13:52:45+02:00"/&gt; &lt;/test&gt; &lt;test name="tst_app_resources"&gt;     &lt;prolog time="2015-06-16T13:52:47+02:00"/&gt;     &lt;message line="65" type="LOG" file="C:\test\mat_tst\tst_app_resources\test.py" time="2015-06-16T13:52:49+02:00"&gt;         &lt;description&gt;&lt;![CDATA[count:0]]&gt;&lt;/description&gt;     &lt;/message&gt;     &lt;message line="125" type="LOG" file="C:\test\scripts\start_stop.py" time="2015-06-16T13:52:53+02:00"&gt;         &lt;description&gt;&lt;![CDATA[duration of start: 4176ms]]&gt;&lt;/description&gt;     &lt;/message&gt;     &lt;message line="73" type="LOG" file="C:\test\mat_tst\tst_app_resources\test.py" time="2015-06-16T13:52:53+02:00"&gt;         &lt;description&gt;&lt;![CDATA[start ok, duration = 4176000]]&gt;&lt;/description&gt;     &lt;/message&gt;     &lt;message line="43" type="LOG" file="C:\test\scripts\win32utilities.py" time="2015-06-16T13:53:00+02:00"&gt;         &lt;description&gt;&lt;![CDATA[Application 840evovc only exists once]]&gt;&lt;/description&gt;     &lt;/message&gt;                 &lt;message line="138" type="ERROR" file="C:\test\mat_tst_\tst_app_resources\test.py" time="2015-06-16T13:53:30+02:00"&gt;         &lt;description&gt;&lt;![CDATA[Script Error]]&gt;&lt;/description&gt;         &lt;description type="DETAILED"&gt;&lt;![CDATA[LookupError: Object ':chkSchedule_CheckBox_2' not ready.             Called from:         C:\test\mat_tst\tst_app_resources\test.py: 82]]&gt;&lt;/description&gt;     &lt;/message&gt;     &lt;epilog time="2015-06-16T13:53:30+02:00"/&gt; &lt;/test&gt; &lt;test name="tst_reset"&gt;     &lt;prolog time="2015-06-16T13:53:32+02:00"/&gt;        &lt;message line="260" type="LOG" file="C:\test\scripts\start_stop.py" time="2015-06-16T13:56:12+02:00"&gt;         &lt;description&gt;&lt;![CDATA[Process exited.]]&gt;&lt;/description&gt;               &lt;/message&gt;     &lt;message line="263" type="LOG" file="C:\test\scripts\start_stop.py" time="2015-06-16T13:56:12+02:00"&gt;         &lt;description&gt;&lt;![CDATA[all applications are closed]]&gt;&lt;/description&gt;     &lt;/message&gt;     &lt;message line="284" type="LOG" file="C:\test\mat_tst\tst_reset\test.py" time="2015-06-16T13:56:12+02:00"&gt;         &lt;description&gt;&lt;![CDATA[application closed]]&gt;&lt;/description&gt;     &lt;/message&gt;     &lt;verification line="287" type="" name="" file="C:\test\mat_tst\tst_reset\test.py"&gt;         &lt;result type="PASS" time="2015-06-16T13:56:12+02:00"&gt;             &lt;description&gt;tst_reset_1 ok&lt;/description&gt;             &lt;description type="DETAILED"&gt;&lt;/description&gt;         &lt;/result&gt;     &lt;/verification&gt;     &lt;epilog time="2015-06-16T13:56:12+02:00"/&gt; &lt;/test&gt; &lt;epilog time="2015-06-16T13:56:13+02:00"/&gt; &lt;/test&gt;  &lt;/SquishReport&gt; </code></pre>  <p>Now I want to create another XML file which contains a summary of the XML files. What I need to have in new XML file just only the <code>&lt;/test&gt; &lt;/SquishReport&gt;</code> of each file and then a line link this</p>  <pre><code>&lt;result state= "Passed" href="link to the file"*.xml /&gt; </code></pre>  <p><code>"Passed"</code> if <code>&lt;result type="PASS"</code> otherwise <code>"NOT Passed"</code>.</p>  <p>In total what I expect in new XML file is:</p>  <pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt; &lt;summary&gt;   &lt;testcase name="name of testcase1"&gt;      &lt;result state= "Passed" href="link to file1"*.xml /&gt; (for the first file)      &lt;result state= "Passed" href="link to file2"*.xml /&gt; (for the second file)      ......   &lt;testcase/&gt;   &lt;testcase name="name of testcase2"&gt;      &lt;result state= "Passed" href="link to file1"*.xml /&gt; (for the first file)      &lt;result state= "Passed" href="link to file2"*.xml /&gt; (for the second file)      ......   &lt;testcase/&gt;   ....   &lt;testcase name="name of testcasen"&gt;      &lt;result state= "Passed" href="link to file1"*.xml /&gt; (for the first file)      &lt;result state= "Passed" href="link to file2"*.xml /&gt; (for the second file)      ......   &lt;testcase/&gt; &lt;summary/&gt; </code></pre>  <p><strong>Edit:</strong> Here is what I have so far:</p>  <pre><code>  sub FileCount { chdir( $dir ) or die "Couldn't go inside $dir directory, $!"; opendir(my $dh, $dir) or die "$0: $dir: $!\n"; while (my $file = readdir($dh)) {     # We only want files      next unless (-f "$dir/$file");     # Use a regular expression to find files ending in .xml      next unless ($file =~ m/$suff$/);       my $xml = XML::LibXML-&gt;load_xml(location =&gt; $file);      # Iterate the entries                                 for my $test ($xml-&gt;findnodes('/SquishReport/test/test')) {         my $name_test = $test-&gt;findvalue('@name');            # looks for if the results is OK or not         for my $result ($test-&gt;findnodes('./verification/result')) {             my $type_result = $result-&gt;findvalue('@type');             ### -----------------------------------------------------------------------              my $doc = XML::LibXML::Document-&gt;new('1.0', 'utf-8');              my $root = $doc-&gt;createElement("summary");              $root-&gt;setAttribute('testcase_name'=&gt; "$name_test");               for my $case_name (keys %tags) {                  my $tag = $doc-&gt;createElement($case_name);                  my $value = $tags{$case_name};                  $tag-&gt;appendTextNode($value);                  $root-&gt;appendChild($tag);              }              $doc-&gt;setDocumentElement($root);             ### -----------------------------------------------------------------------             print "$type_result = $value_result \n";             if (($type_result eq "WARNING") || ($type_result eq "FAIL") || ($type_result eq "ERROR") || ($type_result eq "FATAL")){                 $value_result = "OK";                 print "***********  $name_test is not OK *********** \n\n ";              }             else{                 $value_result = "NOT_OK";                 print "***********  $name_test is OK *********** \n\n ";             }         }         print "\n";      }     #}      print "$file\n";             $count = $count + 1; } closedir($dh);    my $filename = 'report.xml'; open(my $fh, '&gt;', $filename) or die "Could not open file '$filename' $!"; print $fh $doc-&gt;toString(); close $fh; </code></pre>