<p>I am trying to implement ReactCSSTransitionGroup and followed the example on the React website. I am using React 0.14-rc1 and for some reason the ReactCSSTransitionGroup component does not seem to have any affect. I am not even getting any errors on the console. my code:</p>  <pre><code>import React, { PropTypes } from 'react'; import ReactDOM from 'react-dom'; import classnames from 'classnames'; import Dropzone from 'react-dropzone'; import styles from './AddEventForm.css'; import withStyles from '../../../../../decorators/withStyles'; import Link from '../../../../../utils/Link'; import DateSelects from '../DateSelects'; import {StartDateSelect} from '../DateSelects'; import {EndDateSelect} from '../DateSelects'; import {EventTypeSelect} from '../DateSelects'; import ProfileStore from '../../../../../stores/ProfileStore'; import TimelineStore from '../../../../../stores/TimelineStore'; import TimelineDispatcher from '../../../../../dispatchers/TimelineDispatcher'; import TimelineActions from '../../../../../actions/TimelineActions'; import ReactCSSTransitionGroup from 'react-addons-css-transition-group';  let getProfileState = () =&gt; {   return {     profile: ProfileStore.getProfile()   }; }  let getTimelineState = () =&gt; {   return {     timeline: TimelineStore.getEvents()   }; }  class AddEventForm extends React.Component {    _onChange() {     this.setState(getTimelineState());   }    constructor() {     super();     this.state = {};     this.state.files = [];     this.state.profile = getProfileState();     this.state.timeline = getTimelineState();   }    componentDidMount() {     TimelineStore.addChangeListener(this._onChange.bind(this));   }    componentWillUnmount() {     TimelineStore.removeChangeListener(this._onChange.bind(this));   }    onDrop(files) {     console.log('Received files: ', files);     this.setState({       files: files     });   }    render() {      return(       &lt;ReactCSSTransitionGroup             transitionEnterTimeout={500}             transitionLeaveTimeout={500}             transitionName="EventForm"&gt;         &lt;form onSubmit={ TimelineActions.createEvent.bind(this) } id="addTimelineEventForm" className="AddTimelineEvent"&gt;           &lt;a className="AddTimelineEventCloseButton" onClick={ TimelineActions.closeModal.bind(this) }&gt;             &lt;i className="fa fa-times"&gt;&lt;/i&gt;           &lt;/a&gt;           &lt;h3&gt;Add Event&lt;/h3&gt;           &lt;div className="AddEventTitle TimelineFormField"&gt;             &lt;input ref="event_title"             className="TimelineInput" placeholder="Title" /&gt;           &lt;/div&gt;           &lt;div className="AddEventPlace TimelineFormField"&gt;             &lt;input ref="event_place"             className="TimelineInput" placeholder="Place" /&gt;           &lt;/div&gt;           &lt;div className="AddEventLocation TimelineFormField"&gt;             &lt;input ref="event_location"             className="TimelineInput" placeholder="Location" /&gt;           &lt;/div&gt;           &lt;div className="AddEventDescription TimelineFormField"&gt;             &lt;textarea ref="event_description"             rows="2" className="TimelineInput" placeholder="Description"&gt;&lt;/textarea&gt;           &lt;/div&gt;           &lt;StartDateSelect /&gt;           &lt;EndDateSelect /&gt;           &lt;EventTypeSelect /&gt;           &lt;div className="AddEventMedia TimelineFormField"&gt;             &lt;Dropzone className="Dropzone" activeClassName="DropzoneActive" ref="dropzone" multiple={true} disableClick={false} onDrop={this.onDrop.bind(this)}&gt;               &lt;div&gt;Try dropping some files here, or click to select files to upload.&lt;/div&gt;               {this.state.files.length &gt; 0 ?                &lt;div&gt;                 &lt;div&gt;{this.state.files.map((file) =&gt;                    &lt;div className="DropzoneUploadedImageContainer"&gt;                     &lt;img className="DropzoneUploadedImage" key={file.preview} src={file.preview} /&gt;                     &lt;br className="clear" /&gt;                   &lt;/div&gt; )}                 &lt;/div&gt;                 &lt;p className="DropzoneFileCount"&gt;{this.state.files.length} files&lt;/p&gt;               &lt;/div&gt; : null}             &lt;/Dropzone&gt;             &lt;p className="AddTimelineEventNote"&gt;Note: Images only, maximum 4 images and maximum file size is 2 MB&lt;/p&gt;             &lt;button type="submit" form="addTimelineEventForm" className="SaveEventButton btn btn-primary"&gt;Save&lt;/button&gt;             &lt;a onClick={ TimelineActions.closeModal.bind(this) } className="SaveEventButton btn btn-default"&gt;Cancel&lt;/a&gt;           &lt;/div&gt;         &lt;/form&gt;       &lt;/ReactCSSTransitionGroup&gt;     );   } }  export default AddEventForm; </code></pre>  <p>CSS:</p>  <pre><code>@keyframes scaleUp {   from {     opacity: 0;     transform:scale(0.2);   }    to {     opacity: 1;     transform: none;   } }  @keyframes scaleDown {   from {     opacity: 1;     transform:scale(1);   }    to {     opacity: 0;     transform:scale(0);   } }  .EventForm-enter {   opacity: 0.01; }  .EventForm-appear {   opacity: 0.01;   transition: scaleUp .5s ease-in; }  .EventForm-enter.EventForm-enter-active {   opacity: 1;   transform:scale(1); }  .EventForm-leave {   opacity: 0;   transition: scaleDown .5s ease-in; } </code></pre>  <p>Any idea what could be causing this?</p>