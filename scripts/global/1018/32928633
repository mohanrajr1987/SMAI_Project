<p>My question is basically, <em>"how can I obtain certain random values within a specific range more than random values outside the range?"</em></p>  <p>Allow me to demonstrate what I mean:</p>  <blockquote>   <p>If I were to, on a good amount of trials, start picking a variety of   random numbers from <em>1-10</em>, I should be seeing more numbers in the <em>7-10</em>   range than in the <em>1-6</em> range.</p> </blockquote>  <p>I tried a couple of ways, but I am not getting desirable results.</p>  <h1>First Function:</h1>  <pre><code>function getAverage(i)     math.randomseed(os.time())       local sum = 0;     for j = 1,i do         sum = sum + (1-math.random()^3)*10     end     print(sum/i) end  getAverage(500) </code></pre>  <p>I was constantly getting numbers only around 7.5, such as 7.48, and 7.52. Although this does indeed get me a number within my range, I don't want such strict consistancy.</p>  <h1>Second Function:</h1>  <pre><code>function getAverage(i)     math.randomseed(os.time())       local sum = 0;     for j = 1,i do         sum = sum + (math.random() &gt; .3 and math.random(7,10) or math.random(1,6))     end     print(sum/i) end  getAverage(500) </code></pre>  <p>This function didn't work as I wanted it to either. I primarily getting numbers such as <em>6.8</em> and <em>7.2</em> but nothing even close to <em>8</em>.</p>  <h1>Third Function:</h1>  <pre><code>function getAverage(i)     math.randomseed(os.time())       local sum = 0;     for j = 1,i do         sum = sum + (((math.random(10) * 2)/1.2)^1.05) - math.random(1,3)     end     print(sum/i) end  getAverage(500) </code></pre>  <p>This function was giving me slightly more favorable results, with the function consistently returning <em>8</em>, but that is the issue - <code>consistency</code>.</p>  <p><strong>What type of paradigms or practical solutions can I use to generate more random numbers within a specific range over another range?</strong></p>  <p><em>I have labeled this as Lua, but a solution in any language that is understandable is acceptable.</em></p>