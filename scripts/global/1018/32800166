<p>I'm having trouble on creating multiple Lua environments to run multiple similar scripts in the same lua_State. The program crashes with the following error</p>  <pre><code>PANIC: unprotected error in call to Lua API (attempt to index a nil value) </code></pre>  <p>Here's the Script.Compile and Script.runFunc methods:</p>  <pre><code>void Script::Compile() {     if (m_filename.IsEmpty()) return;      if (m_filename.Contains("res:")) {         astd::String file = m_filename.Replace("res:", "");         astd::String filecontent = AEIO::OpenTextFromAssetPack(file);         m_lua-&gt;RunString(filecontent);               } else {         m_lua-&gt;RunScript(m_filename);     }     m_id = astd::String("file") + astd::String(UID);     lua_setfield(m_lua-&gt;State(), LUA_REGISTRYINDEX, m_id.CStr());      UID++; }  void Script::runFunc(astd::String func) {     lua_State* state = m_lua-&gt;State();      // Weird behaviour during debug.     // The debugger goes back and forth on these 2 lines.     lua_getfield(state, LUA_REGISTRYINDEX, m_id.CStr());      lua_getfield(state, -1, func.CStr()); // CRASH!      if (lua_isfunction(state, -1)) {         lua_pcall(state, 0, 0, 0);     }      luabind::globals(state)["self"] = m_owner; } </code></pre>  <p>And this is the basic structure of the scripts:</p>  <pre><code>print("Script Created") --Gets printed before the error occurs.  function onInit()     print("Script Initialized") end  function onUpdate()     print("Script Update") end </code></pre>  <p>And it only fails when I call <code>runFunc("onInit")</code> or <code>runFunc("onUpdate")</code>.</p>  <p>Thanks in advance.</p>  <p>EDIT: I managed to make it work (finally):</p>  <pre><code>void Script::Compile() {     if (m_filename.IsEmpty()) return;      m_id = astd::String("file") + astd::String(UID);     auto L = m_lua-&gt;State();      if (m_filename.Contains("res:")) {         astd::String file = m_filename.Replace("res:", "");         astd::String filecontent = AEIO::OpenTextFromAssetPack(file);         m_lua-&gt;RunString(filecontent);               } else {         m_lua-&gt;RunScript(m_filename);     }      // IT WORKS!!!!!     lua_createtable(L, 0, 1);     lua_getglobal(L, "print");     lua_setfield(L, -2, "print");     lua_pushvalue(L, -1);     lua_setfield(L, LUA_REGISTRYINDEX, m_id.CStr());      lua_setfenv(L, -2);     lua_pcall(L, 0, 0, 0);      UID++; } </code></pre>