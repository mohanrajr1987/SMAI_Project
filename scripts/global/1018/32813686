<p>I'd like to pass an opaque data buffer from C to Lua without actually copying all the data (since it could be very large 100s of MBs or GBs). </p>  <p>More specifically, I have a C snippet that looks like this:</p>  <pre><code>uint8_t *buffer = // points to some memory size_t size = // size of the buffer </code></pre>  <p>My C program doesn't know the structure of the data in the buffer. It is completely oblivious to it. It will never touch this data for anything aside from calling the Lua function responsible for consuming this data.</p>  <p>My goal is to pass this buffer to Lua, which will then interpret the contents of the data and perform all kinds of actions based on it (the Lua code knows how to determine the structure of the data based on its contents or size). Furthermore, the Lua code will not modify the buffer (only read from it).</p>  <p>Below is some sample pseudocode of my ideal functionality:</p>  <pre><code>bool perform_action(lua_State *L, uint8_t *buffer, size_t size) {     // Pass buffer to lua    // call "process_buffer" function (written in Lua)    // get return from "process_buffer" function (a boolean)    // free(buffer);    // return the result above } </code></pre>  <p>This question, I think, is related to: <a href="http://stackoverflow.com/questions/15396067/lua-newbie-c-lua-how-to-pass-a-struct-buffer-to-lua-from-c">lua newbie : C-Lua How to pass a struct/buffer to lua from C?</a>. However, the solution in that thread is: "Use LuaJIT" which doesn't make any sense to me. </p>  <p>A potential solution is using:</p>  <pre><code>lua_pushlstring (L, buffer, size); </code></pre>  <p>but wouldn't this make a copy of the data? Is there a way to do this with zero-copy (since the data is quite large)?</p>  <p>Any help would be appreciated. Thanks!</p>