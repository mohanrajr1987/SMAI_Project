<p>I am using C API embedded with Lua. My goal is that: pass an array of integers into Lua and calculate their factorials, then the results are passed back to C and printed out.</p>  <p>To realize the goal, my C code is:</p>  <pre class="lang-c prettyprint-override"><code>#include &lt;lua.h&gt; #include &lt;lauxlib.h&gt; #include &lt;stdlib.h&gt; #include &lt;stdio.h&gt;  int main(void){   int status, result, i;   double fac;    lua_State *L;  // set Lua state   L = luaL_newstate();    luaL_openlibs(L);     status = luaL_loadfile(L, "factorial.lua");  // load the Lua script for factorial calculation   if (status) {     fprintf(stderr, "Couldn't load file: %s\n", lua_tostring(L, -1));     exit(1);   }    lua_newtable(L);      for (i = 1; i &lt;= 10; i++) {     lua_pushnumber(L, i);   /* Push the table index */     lua_pushnumber(L, i*2); /* Push the cell value */     lua_rawset(L, -3);      /* Stores the pair in the table */   }    lua_setglobal(L, "foo");    result = lua_pcall(L, 0, LUA_MULTRET, 0);   if (result) {     fprintf(stderr, "Failed to run script: %s\n", lua_tostring(L, -1));     exit(1);   }    // the following loop is for factorial print-out   while (lua_next(L, -1) != 0) {       fac = lua_tonumber(L, -1);     printf("%.0f\n", fac);     lua_pop(L, 1);   }    lua_close(L);        return 0; } </code></pre>  <p>And my Lua script is like:</p>  <pre class="lang-lua prettyprint-override"><code>-- this is the function to calculate the factorial function fact(n) if n == 0 then        return 1 else    return n * fact(n-1) end end  io.write("We calculate the factorial of the following numbers: \n")  return_table = {} for i = 1, #foo do  n = foo[i]  factorial_result = fact(n)  print(n)  table.insert(return_table, factorial_result) end  io.write("Here we show the results: \n") for i=1,10 do  return(return_table[i]) end </code></pre>  <p>The compilation goes well but when I run it on terminal, I got:</p>  <pre class="lang-none prettyprint-override"><code>We calculate the factorial of the following numbers: 2.0 4.0 6.0 8.0 10.0 12.0 14.0 16.0 18.0 20.0 Here we show the results: Segmentation fault (core dumped) </code></pre>  <p>I don't know why the result is like this. It seems that no problem with the passing from C to Lua but there is problem from Lua to C. Can anyone help me with this?</p>