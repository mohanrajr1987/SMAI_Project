<p>I have a problem with converting string encoding for preg_match. I have a source page in windows-1250. </p>  <p>I am using DOMDocument and XPath to get this text: <strong>"Nabídkový katalog na aukci dne 8. června 2014"</strong></p>  <p>Tried many ways and wasn't able to produce this output to be on input of preg_match. I want to extract date from this string. preg_match is not able to work properly with multibyte characters.</p>  <p>Best result was:</p>  <pre><code>echo 'htmlentities: ' . htmlentities($string) . "&lt;br&gt;\n"; // htmlentities: Nabídkový katalog na aukci dne 8. ÄŤervna 2014 </code></pre>  <p>I think one character encoding is broken, but it will appear correctly when viewed by web browser. </p>  <p>I could do something like this:</p>  <pre><code>$a = array('ÄŤ' =&gt; 'č'); </code></pre>  <p>But I need an universal solution.</p>  <p>Here is my test code:</p>  <pre><code>$url = 'http://numismatika.cz/web/Nummus-Praha/U064_Katalog/obsah.htm'; // &lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1250" /&gt;  $xpath = '/html/body/table//tr/td[2]/p[2]/font';  $html = @file_get_contents($url, FALSE); if ($html === FALSE) {     throw new Exception($url); }  $domDocument = new \DOMDocument(); if (!@$domDocument-&gt;loadHTML($html)) {     throw new Exception($url); }  $domXpath = new \DOMXPath($domDocument);  $element = $domXpath-&gt;query($xpath); if (isset($element-&gt;item(0)-&gt;textContent)) {      $string = $element-&gt;item(0)-&gt;textContent;      // Expected output: "Nabídkový katalog na aukci dne 8. června 2014"      echo 'Original: ' . $string . "&lt;br&gt;\n";     // Original: NabĂ­dkovĂ˝ katalog na aukci dne 8. ÄŤervna 2014      echo 'utf8_decode: ' . utf8_decode($string) . "&lt;br&gt;\n";     // utf8_decode: Nabídkový katalog na aukci dne 8. ?ervna 2014      echo 'iconv (windows-1250 to ISO-8859-1): ' . iconv('windows-1250', 'ISO-8859-1', $string) . "&lt;br&gt;\n";     // Notice: iconv(): Detected an illegal character in input string in C:\xampp\htdocs\testDateExtract.php on line 37     // iconv (windows-1250 to ISO-8859-1):      echo 'iconv (windows-1250 to ISO-8859-1//TRANSLIT): ' . iconv('windows-1250', 'ISO-8859-1//TRANSLIT', $string) . "&lt;br&gt;\n";     // iconv (windows-1250 to ISO-8859-1//TRANSLIT): NabA­dkovA" katalog na aukci dne 8. ÄTervna 2014      echo 'iconv (windows-1250 to ISO-8859-1//IGNORE): ' . iconv('windows-1250', 'ISO-8859-1//IGNORE', $string) . "&lt;br&gt;\n";     // iconv (windows-1250 to ISO-8859-1//IGNORE): Nab­dkov katalog na aukci dne 8. Äervna 2014      echo 'iconv (windows-1250 to ISO-8859-1//TRANSLIT//IGNORE): ' . iconv('windows-1250', 'ISO-8859-1//IGNORE', $string) . "&lt;br&gt;\n";     // iconv (windows-1250 to ISO-8859-1//TRANSLIT//IGNORE): Nab­dkov katalog na aukci dne 8. Äervna 2014      echo 'iconv (windows-1250 to ASCII): ' . iconv('windows-1250', 'ASCII', $string) . "&lt;br&gt;\n";     // Notice: iconv(): Detected an illegal character in input string in C:\xampp\htdocs\testDateExtract.php on line 56     // iconv (windows-1250 to ASCII):      echo 'iconv (windows-1250 to ASCII//TRANSLIT): ' . iconv('windows-1250', 'ASCII//TRANSLIT', $string) . "&lt;br&gt;\n";     // iconv (windows-1250 to ASCII//TRANSLIT): NabA-dkovA" katalog na aukci dne 8. "ATervna 2014      echo 'iconv (windows-1250 to ASCII//IGNORE): ' . iconv('windows-1250', 'ASCII//IGNORE', $string) . "&lt;br&gt;\n";     // iconv (windows-1250 to ASCII//IGNORE): Nabdkov katalog na aukci dne 8. ervna 2014      echo 'iconv (windows-1250 to ASCII//TRANSLIT//IGNORE): ' . iconv('windows-1250', 'ASCII//IGNORE', $string) . "&lt;br&gt;\n";     // iconv (windows-1250 to ASCII//TRANSLIT//IGNORE): Nabdkov katalog na aukci dne 8. ervna 2014      echo 'iconv("UTF-8", "ASCII//TRANSLIT", utf8_encode($string)): ' . iconv('UTF-8', 'ASCII//TRANSLIT', utf8_encode($string)) . "&lt;br&gt;\n";     // Notice: iconv(): Detected an illegal character in input string in C:\xampp\htdocs\testDateExtract.php on line 71     // iconv("UTF-8", "ASCII//TRANSLIT", utf8_encode($string)):      echo 'htmlentities: ' . htmlentities($string) . "&lt;br&gt;\n";     // htmlentities: Nabídkový katalog na aukci dne 8. ÄŤervna 2014      echo 'htmlspecialchars_decode(htmlentities($string), ENT_COMPAT): ' . htmlspecialchars_decode(htmlentities($string), ENT_COMPAT) . "&lt;br&gt;\n";     // htmlspecialchars_decode(htmlentities($string), ENT_COMPAT): Nabídkový katalog na aukci dne 8. ÄŤervna 2014      $regex = '([0-9]{1,2})[.]?[\s]*([0-9a-zúřěčáí]+)[.]?[\s]*([0-9]{4})';     echo 'preg_match /([0-9]{1,2})[.]?[\s]*([0-9a-zúřěčáí]+)[.]?[\s]*([0-9]{4})/: ' . preg_match('/' . $regex . '/', $string, $matches) . "&lt;br&gt;\n";     // preg_match /([0-9]{1,2})[.]?[\s]*([0-9a-zúřěčáí]+)[.]?[\s]*([0-9]{4})/: 0      $regex = '([\p{N}]{1,2})[.]?[\S]*([\p{N}\p{L}]+)[.]?[\S]*([\p{N}]{4})';     echo 'preg_match /([\p{N}]{1,2})[.]?[\S]*([\p{N}\p{L}]+)[.]?[\S]*([\p{N}]{4})/u: ' . preg_match('/' . $regex . '/u', $string, $matches, PREG_OFFSET_CAPTURE) . "&lt;br&gt;\n";     // preg_match /([\p{N}]{1,2})[.]?[\S]*([\p{N}\p{L}]+)[.]?[\S]*([\p{N}]{4})/u: 0 } </code></pre>