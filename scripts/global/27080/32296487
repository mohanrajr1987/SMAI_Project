<p>In my PHP code I've been using <code>[:space:]</code> and <code>[:print:]</code> for matching space and non-space characters respectively. I however came across one case where <code>preg_match</code> was unable to find a match even though it should have. Replacing <code>[:space:]</code> with <code>\s</code> solved the problem. Due to this I realized all my other uses of <code>[:space:]</code> in the code could fail unexpectedly at some point in the future and so embarked on replacing all of them with <code>\s</code>.</p>  <p>My question is why did <code>[:space:]</code> fail where <code>\s</code> worked? The original regexp was: </p>  <pre><code>'%\[/row\][[:space:]]+&lt;!-- related_products_section --&gt;[[:space:][:print:]]+&lt;!-- end_related_products_section --&gt;%m' </code></pre>  <p>which I changed into:</p>  <pre><code>'%\[/row\][\s]+&lt;!-- related_products_section --&gt;[\s[:print:]]+&lt;!-- end_related_products_section --&gt;%m' </code></pre>  <p>Another question arising is what is the non-posix equivalent of <code>[:print:]</code>?</p>