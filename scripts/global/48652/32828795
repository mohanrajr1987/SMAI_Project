<p>Please help me put an external image that listview with json. I've tried several mandeiras put an image in this listing and it still fails</p>  <pre><code>public class ListResult extends ListActivity { // Progress Dialog private ProgressDialog pDialog;  // Creating JSON Parser object JSONParser jParser = new JSONParser();  ArrayList&lt;HashMap&lt;String, String&gt;&gt; idiomsList;  // url to get the idiom list private static String url_search = "http://localhost/json/search3.php";  // JSON Node names private static final String TAG_SUCCESS = "success"; private static final String TAG_IDIOMS = "idioms"; private static final String TAG_NM_FANTASIA = "NM_FANTASIA"; private static final String TAG_ENDERECO = "ENDERECO"; private static final String TAG_CEP = "CEP"; private static final String TAG_FONE1 = "FONE1"; private static final String TAG_FONE2 = "FONE2"; private static final String TAG_FONE3 = "FONE3"; private static final String TAG_FAX = "FAX"; private static final String TAG_WEB_SITE = "WEB_SITE"; private static final String TAG_EMAILS = "EMAILS"; private static final String TAG_LOGOMARCA= "LOGOMARCA"; private static final String TAG_FACEBOOK = "FACEBOOK"; private static final String TAG_TWITTER = "TWITTER"; private static final String TAG_GOOGLEMAS = "GOOGLEMAS"; private static final String TAG_SELO300 = "SELO300"; private static final String TAG_MAPS = "MAPS"; private static final String TAG_URL_MAPS = "URL_MAPS"; private static final String TAG_SOBRE_EMPRESA = "SOBRE_EMPRESA"; private static final String TAG_APRESENTACAO = "APRESENTACAO"; private static final String TAG_DESCRICAO = "DESCRICAO";  // products JSONArray JSONArray idioms = null; //search key value public String searchkey;  @Override public void onCreate(Bundle savedInstanceState) {         super.onCreate(savedInstanceState);     setContentView(R.layout.activity_list_result);     Intent myIntent = getIntent();     // gets the arguments from previously created intent     searchkey = myIntent.getStringExtra("key");      // Hashmap for ListView     idiomsList = new ArrayList&lt;HashMap&lt;String, String&gt;&gt;();      // Loading idioms in Background Thread     new LoadIdioms().execute();      // Get listview     final ListView lv = getListView();      // on seleting single idioms     // to do something     lv.setOnItemClickListener(new OnItemClickListener() {          @Override         public void onItemClick(AdapterView&lt;?&gt; parent, View view,                                 int position, long id) {             String nome2 = ((TextView) view.findViewById(R.id.txtNome)).getText()                     .toString();             String endereco2 = ((TextView) view.findViewById(R.id.txtEndreco)).getText()                     .toString();             String cep = ((TextView) view.findViewById(R.id.txtCep)).getText()                     .toString();             String fone1 = ((TextView) view.findViewById(R.id.txtFone1)).getText()                     .toString();             String fone2 = ((TextView) view.findViewById(R.id.txtFone2)).getText()                     .toString();             String fone3 = ((TextView) view.findViewById(R.id.txtFone3)).getText()                     .toString();             String fax = ((TextView) view.findViewById(R.id.txtFax)).getText()                     .toString();             String website = ((TextView) view.findViewById(R.id.txtWebSite)).getText()                     .toString();             String emails = ((TextView) view.findViewById(R.id.txtEmails)).getText()                     .toString();             String facebook = ((TextView) view.findViewById(R.id.txtFacebook)).getText()                     .toString();             String twitter = ((TextView) view.findViewById(R.id.txtTwitter)).getText()                     .toString();             String googlemas = ((TextView) view.findViewById(R.id.txtGoogleMas)).getText()                     .toString();             String selo300 = ((TextView) view.findViewById(R.id.txtSelo300)).getText()                     .toString();             String maps = ((TextView) view.findViewById(R.id.txtMaps)).getText()                     .toString();             String url_maps = ((TextView) view.findViewById(R.id.txtUrlMaps)).getText()                     .toString();             String sobreempresa = ((TextView) view.findViewById(R.id.txtSobreEmpresa)).getText()                     .toString();             String apresentacao = ((TextView) view.findViewById(R.id.txtApresentacao)).getText()                     .toString();             String descricao = ((TextView) view.findViewById(R.id.txtDescricao)).getText()                     .toString();             String logomarca = ((TextView) view.findViewById(R.id.txtImg)).getText()                     .toString();                Intent intent = new Intent(ListResult.this, InformacoesActivity.class);             Bundle params = new Bundle();             params.putString("nome", nome2);             params.putString("end", endereco2);             params.putString("cep", cep);             params.putString("fone1", fone1);             params.putString("fone2", fone2);             params.putString("fone3", fone3);             params.putString("fax", fax);             params.putString("website", website);             params.putString("emails", emails);             params.putString("facebook", facebook);             params.putString("logomarca", logomarca);             params.putString("twitter", twitter);             params.putString("googlemas", googlemas);             params.putString("selo300", selo300);             params.putString("maps", maps);             params.putString("url_maps", url_maps);             params.putString("sobreempresa", sobreempresa);             params.putString("apresentacao", apresentacao);             params.putString("descricao", descricao);             intent.putExtras(params);             startActivity(intent);          }       });   }   /**  * Background Async Task to Load Idioms by making HTTP Request  * */ class LoadIdioms extends AsyncTask&lt;String, String, String&gt; {      /**      * Before starting background thread Show Progress Dialog      * */     @Override     protected void onPreExecute() {         super.onPreExecute();         pDialog = new ProgressDialog(ListResult.this);         pDialog.setMessage("Loading IDIOMS. Please wait...");         pDialog.setIndeterminate(false);         pDialog.setCancelable(false);         pDialog.show();     }      /**      * getting Idioms from url      * */     protected String doInBackground(String... args) {         // Building Parameters         List&lt;NameValuePair&gt; params = new ArrayList&lt;NameValuePair&gt;();         //value captured from previous intent         params.add(new BasicNameValuePair("keyword", searchkey));         // getting JSON string from URL         JSONObject json = jParser.makeHttpRequest(url_search, "GET", params);          // Check your log cat for JSON response         Log.d("Search idioms: ", json.toString());          try {             // Checking for SUCCESS TAG             int success = json.getInt(TAG_SUCCESS);              if (success == 1) {                 // products found                 // Getting Array of Products                 idioms = json.getJSONArray(TAG_IDIOMS);                  // looping through All Products                 for (int i = 0; i &lt; idioms.length(); i++) {                     JSONObject c = idioms.getJSONObject(i);                      // Storing each json item in variable                     String NM_FANTASIA = c.getString(TAG_NM_FANTASIA);                     String ENDERECO = c.getString(TAG_ENDERECO);                     String CEP = c.getString(TAG_CEP);                     String FONE1 = c.getString(TAG_FONE1);                     String FONE2 = c.getString(TAG_FONE2);                     String FONE3 = c.getString(TAG_FONE3);                     String FAX = c.getString(TAG_FAX);                     String WEB_SITE = c.getString(TAG_WEB_SITE);                     String EMAILS = c.getString(TAG_EMAILS);                     String FACEBOOK = c.getString(TAG_FACEBOOK);                     String TWITTER = c.getString(TAG_TWITTER);                     String GOOGLEMAS = c.getString(TAG_GOOGLEMAS);                     String SELO300 = c.getString(TAG_SELO300);                     String MAPS = c.getString(TAG_MAPS);                     String LOGOMARCA = c.getString(TAG_LOGOMARCA);                     String URL_MAPS = c.getString(TAG_URL_MAPS);                     String SOBRE_EMPRESA = c.getString(TAG_SOBRE_EMPRESA);                     String APRESENTACAO = c.getString(TAG_APRESENTACAO);                     String DESCRICAO = c.getString(TAG_DESCRICAO);                      // creating new HashMap                     HashMap&lt;String, String&gt; map = new HashMap&lt;String, String&gt;();                      // adding each child node to HashMap key =&gt; value                     map.put(TAG_NM_FANTASIA, NM_FANTASIA);                     map.put(TAG_ENDERECO, ENDERECO);                     map.put(TAG_CEP, CEP);                     map.put(TAG_FONE1, FONE1);                     map.put(TAG_FONE2, FONE2);                     map.put(TAG_FONE3, FONE3);                     map.put(TAG_FAX, FAX);                     map.put(TAG_WEB_SITE, WEB_SITE);                     map.put(TAG_EMAILS, EMAILS);                     map.put(TAG_FACEBOOK, FACEBOOK);                     map.put(TAG_TWITTER, TWITTER);                     map.put(TAG_GOOGLEMAS, GOOGLEMAS);                     map.put(TAG_SELO300, SELO300);                     map.put(TAG_MAPS, MAPS);                     map.put(TAG_LOGOMARCA, LOGOMARCA);                     map.put(TAG_URL_MAPS, URL_MAPS);                     map.put(TAG_SOBRE_EMPRESA, SOBRE_EMPRESA);                     map.put(TAG_APRESENTACAO, APRESENTACAO);                     map.put(TAG_DESCRICAO, DESCRICAO);                       // adding HashList to ArrayList                     idiomsList.add(map);                 }             } else {                 // no idioms found                 //do something             }         } catch (JSONException e) {             e.printStackTrace();         }          //return "success";         return null;     }       /**      * After completing background task Dismiss the progress dialog      * **/     protected void onPostExecute(String file_url) {         // dismiss the dialog after getting the related idioms         pDialog.dismiss();         // updating UI from Background Thread         runOnUiThread(new Runnable() {             public void run() {                  /**                  * Updating parsed JSON data into ListView                  * */                 ListAdapter adapter = new SimpleAdapter(                           ListResult.this, idiomsList,                         R.layout.list_view, new String[] { TAG_NM_FANTASIA, TAG_CEP, TAG_ENDERECO, TAG_FONE1, TAG_FONE2, TAG_FONE3                         , TAG_FAX, TAG_WEB_SITE, TAG_EMAILS, TAG_FACEBOOK, TAG_TWITTER, TAG_GOOGLEMAS, TAG_SELO300, TAG_MAPS, TAG_URL_MAPS, TAG_SOBRE_EMPRESA                         , TAG_APRESENTACAO, TAG_DESCRICAO, TAG_LOGOMARCA, },                         new int[] { R.id.txtNome, R.id.txtCep, R.id.txtEndreco, R.id.txtFone1, R.id.txtFone2, R.id.txtFone3, R.id.txtFax                                 , R.id.txtWebSite, R.id.txtEmails, R.id.txtFacebook, R.id.txtTwitter                                 , R.id.txtGoogleMas, R.id.txtSelo300, R.id.txtMaps                                 , R.id.txtUrlMaps, R.id.txtSobreEmpresa, R.id.txtApresentacao, R.id.txtDescricao, R.id.txtImg, });                  // updating listview                 setListAdapter(adapter);             }         });     } } </code></pre>