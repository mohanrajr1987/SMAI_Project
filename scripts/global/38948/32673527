<p>When i press findMe button it gives the error.I am using setRegion Method at two places. Firstly in viewDidLoad Method and secondly in func locationManager and getting an NSException reason is invalid region.</p>  <p><a href="http://i.stack.imgur.com/viAEm.png" rel="nofollow"><img src="http://i.stack.imgur.com/viAEm.png" alt="Screenshot of error"></a></p>  <p></p>  <pre><code>import UIKit import  MapKit import CoreLocation   class ViewController: UIViewController,CLLocationManagerDelegate {       @IBOutlet var myMap: MKMapView!      @IBAction func findMe(sender: AnyObject) {         manager.requestWhenInUseAuthorization()         manager.startUpdatingLocation()     }       @IBOutlet var longitude: UILabel!     @IBOutlet var latitude: UILabel!     @IBOutlet var heading: UILabel!     @IBOutlet var speed: UILabel!     @IBOutlet var address: UILabel!     @IBOutlet var altitude: UILabel!      var manager:CLLocationManager!       override func viewDidLoad() {         super.viewDidLoad()           let lat = NSString(string : places[activePlace]["lat"]!).doubleValue         let lon = NSString(string : places[activePlace]["lon"]!).doubleValue          var latitude:CLLocationDegrees = lat         var longitude:CLLocationDegrees = lon         var latDelta:CLLocationDegrees = 0.01         var lonDelta:CLLocationDegrees = 0.01         var span:MKCoordinateSpan = MKCoordinateSpanMake(latDelta, lonDelta)         var location:CLLocationCoordinate2D = CLLocationCoordinate2DMake(lat, lon)         var region:MKCoordinateRegion = MKCoordinateRegionMake(location, span)         myMap.setRegion(region, animated: true)          manager = CLLocationManager()         manager.delegate = self         manager.desiredAccuracy = kCLLocationAccuracyBest      }       func locationManager(manager:CLLocationManager ,didUpdateLocations locations:[AnyObject] ){          var userLocation:CLLocation = locations[0] as! CLLocation          var latitude:CLLocationDegrees = userLocation.coordinate.longitude          var longitude:CLLocationDegrees = userLocation.coordinate.latitude          var latDelta:CLLocationDegrees = 0.01          var lonDelta:CLLocationDegrees = 0.01          var span:MKCoordinateSpan = MKCoordinateSpanMake(latDelta, lonDelta)          var location:CLLocationCoordinate2D = CLLocationCoordinate2DMake(latitude, longitude)          var region:MKCoordinateRegion = MKCoordinateRegionMake(location, span)          myMap.setRegion(region, animated: true)          manager.stopUpdatingLocation()          CLGeocoder().reverseGeocodeLocation(userLocation, completionHandler:{(placemarks,error) in              if (error != nil){                 println("Error\(error)")             }else{                  let p = CLPlacemark(placemark:placemarks?[0] as! CLPlacemark)                  var subThoroughfare:String                  if(p.subThoroughfare != nil){                     subThoroughfare = p.subThoroughfare                 }else{                     subThoroughfare = ""                 }                  self.address.text = " \(subThoroughfare) \(p.thoroughfare) \n \(p.subLocality) \n \(p.subAdministrativeArea) \n \(p.postalCode) \n \(p.country) "                }          })       }      override func didReceiveMemoryWarning() {         super.didReceiveMemoryWarning()         // Dispose of any resources that can be recreated.     }   } </code></pre>