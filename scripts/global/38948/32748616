<p>I am making an app where the users make events that are visible as annotations on a map. I need the annotations to remove permanently once the current time is greater than the end time created by the user.  Right now the end time is given as a String then I compare it to the current time which I have converted into a String.  It always seems to work but once the several hours have gone by since the event was removed it always reappears. </p>  <p>Here is my current method: </p>  <pre><code>override func viewDidLoad() {     super.viewDidLoad()     //*********** Set up Time      let date = NSDate()     let formatter = NSDateFormatter()     formatter.timeStyle = .ShortStyle     let currentTimeString = formatter.stringFromDate(date)       //Return Short Time String     print("The time is \(currentTimeString)")        //*********** Set up Map **************      let lat = locationManager.location!.coordinate.latitude     let lon = locationManager.location!.coordinate.longitude       let location = CLLocationCoordinate2D(latitude: lat, longitude: lon)     let span = MKCoordinateSpanMake(0.70, 0.70)     let region = MKCoordinateRegionMake(location, span)     self.SpotterMap.setRegion(region, animated: true)      self.EventMap.delegate = self;     self.EventMap.showsUserLocation = true;      print ("****** Welcome in MapViewController")       let myGeoPoint = PFGeoPoint(latitude: lat, longitude:lon)      let radius = 40.0      print ("****** this is my geoPoint from map view controller: \(myGeoPoint)")       //MARK: *** let's look for Events ***      var nearArray : [CLLocationCoordinate2D] = []           PFQuery(className: "EventInfo")             .whereKey("location", nearGeoPoint: myGeoPoint, withinMiles: radius)     //(474)             .findObjectsInBackgroundWithBlock ({                 objects, error in                 if let proximityArray = objects as? [PFObject] {                     //                        println("****** here the proximity matches: \(proximityArray)")                     for near in proximityArray {                         //                            println("here they are \(near)")                          let position = near["spotlocation"] as? PFGeoPoint                          let locLat = position?.latitude       //this is an optional                         let locLong = position?.longitude     //this is an optional                         let SlocLocation = CLLocationCoordinate2D(latitude: locLat!, longitude: locLong!)                          nearArray.append(SlocLocation)                          if nearArray.isEmpty {                             print ("*** ERROR! No Spots close by ***")                         } else                         {                             for _ in nearArray {                                  let Start = near["starttime"] as! String                                 let End = near["endtime"] as! String                                 let Name = near["name"] as! String                                    let span = MKCoordinateSpanMake(0.40, 0.40)                                 let region = MKCoordinateRegionMake(SlocLocation, span)                                 self.EventMap.setRegion(region, animated: true)                                  // Sets the values of the annotation                                 let Annotation = CustomPointAnnotation()                                 Annotation.coordinate = SlocLocation                                 Annotation.title = Name                                 Annotation.subtitle = Start + " - " + End                                 Annotation.imageName = "Annotation.png"                                      self.EventMap.addAnnotation(Annotation)                                     let endTime = End                                  print(currentTimeString)                                  let TimeStr = endTime                                 formatter.timeStyle = .ShortStyle                                 let Time = formatter.dateFromString(TimeStr)                                  let dateFormater : NSDateFormatter = NSDateFormatter()                                 dateFormater.dateFormat = "h:mm ap"                                 let newTime = dateFormater.stringFromDate(Time!)                                  print("\(currentTimeString) to \(newTime)")                                  if currentTimeString &gt; newTime {                                        self.EventMap.removeAnnotation(Annotation)                                     print ("event removed")                                      }                               }                         }                     }                       }                 } </code></pre>  <p>`</p>  <p>If someone could please help me that would be awesome! Thanks!                                                                 </p>