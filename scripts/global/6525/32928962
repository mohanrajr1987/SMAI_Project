<p>I am learning clojure and I am having problem understanding this clojure code, so I have this partial function</p>  <pre><code> (def add-five (partial + 5)) </code></pre>  <p>When I run,</p>  <pre><code>(add-five 2)# I get 7 (add-five 2 5) # I get 12 </code></pre>  <p>For first, I give one argument; For second, I give two arguments. </p>  <pre><code>(map add-five [1 2 3 4 5]) </code></pre>  <p>this gives me </p>  <pre><code>(6 7 8 9 10) </code></pre>  <p>Here, I am assuming, add-five is being applied element of the list. However when I run,</p>  <pre><code>(reduce add-five [1 2 3 4 5]) </code></pre>  <p>, I have no idea what is happening?</p>  <pre><code> (reduce add-five [0]) #gives me zero  (reduce add-five [0 0]) #gives me five </code></pre>  <p>Can someone explain what happens what I run the reduce like above?</p>