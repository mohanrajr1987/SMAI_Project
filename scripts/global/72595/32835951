<p>I am using a TabLayout, a ViewPager, and a FragmentPagerAdapter in an AppCompatActivity. I need to manage configuration changes myself, but I also need to reinflate EVERYTHING on the pages on a configuration change. Not only is the fragment laid out differently between configurations, but even the tabs themselves are. My problem is that when I change configurations, the fragment is not re-inflating. If I scroll away to another fragment and then scroll back, it will re-inflate, but not on initial configuration change. Here's my activity</p>  <pre><code>public class MainActivity extends AppCompatActivity {     private Fragment1 mFragment1 = null;     private Fragment2 mFragment2 = null;     private Fragment3 mFragment3 = null;     private Fragment4 mFragment4 = null;     private TabLayout mTabs;     private ViewPager mViewPager;        @Override     protected void onCreate(Bundle inSavedInstanceState)     {         super.onCreate(inSavedInstanceState);         setContentView(R.layout.main_activity);          mFragment1 = new Fragment1();         mFragment2 = new Fragment2();         mFragment3 = new Fragment3();         mFragment4 = new Fragment4();          InflateTabs();     }        @Override     public void onConfigurationChanged(Configuration newConfig) {         super.onConfigurationChanged(newConfig);          int selectedTab = mViewPager.getCurrentItem();          setContentView(R.layout.main_activity);         InflateTabs();         mViewPager.setCurrentItem(selectedTab);     }        private void InflateTabs()     {         mTabs = (TabLayout)findViewById(R.id.tab_bar);          if(mViewPager != null)             mViewPager.removeAllViews();          mViewPager = (ViewPager) findViewById(R.id.pager);         final PagerAdapter adapter = new FragmentPagerAdapter(getSupportFragmentManager()) {             @Override             public Fragment getItem(int position) {                 switch (position) {                     case 0:                         return mFragment1;                     case 1:                         return mFragment2;                     case 2:                         return mFragment3;                     case 3:                         return mFragment4;                     default:                         return null;                 }             }              @Override             public int getCount() {                 return 4;             }         };          mViewPager.setAdapter(adapter);         GenerateTabs(mTabs, mViewPager);     } } </code></pre>  <p>And here's one of my fragments</p>  <pre><code>public class Fragment1 extends Fragment {     @Override     public View onCreateView(LayoutInflater inInflater, ViewGroup inContainer, Bundle inSavedInstanceState)     {         return Inflate(inInflater, inContainer, getResources().getConfiguration());     }        @Override     public void onConfigurationChanged(Configuration inNewConfiguration)     {         View newView = Inflate(getLayoutInflater(null), null, inNewConfiguration );         ViewGroup rootView = (ViewGroup) getView();=         rootView.removeAllViews();         rootView.addView(newView);     }        protected View Inflate(LayoutInflater inInflater, ViewGroup inContainer, Configuration inConfiguration)     {         View toReturn = inInflater.inflate(R.layout.local_fragment_layout, inContainer, false);          // set up the controls in this view         .         .         .          return toReturn;     } } </code></pre>