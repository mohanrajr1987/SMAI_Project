<p>I've Been Following this tutorial <a href="http://androidopentutorials.com/android-image-slideshow-using-viewpager/" rel="nofollow">Image Slide Using View Pager</a> but i cant make  the image View inside view pager fill the complete space inside view pager both horizontally and vertically. Any idea how to do this?</p>  <p>I've tried this one in my Page adapter</p>  <pre><code>mImageView.setAdjustViewBounds(true); mImageView.setScaleType(ImageView.ScaleType.FIT_CENTER); </code></pre>  <p>but still no luck :(</p>  <p>my Layout</p>  <pre><code>&lt;RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android" xmlns:tools="http://schemas.android.com/tools" android:layout_width="match_parent" android:layout_height="match_parent" android:padding="2dp" tools:context=".MainActivity" &gt;  &lt;RelativeLayout     android:id="@+id/img_slideshow_layout"     android:layout_width="fill_parent"     android:layout_height="wrap_content"     android:layout_marginTop="5dp"     android:background="@drawable/img_border" &gt;      &lt;android.support.v4.view.ViewPager         android:id="@+id/view_pager"         android:layout_width="match_parent"         android:layout_height="150dp" /&gt;      &lt;TextView         android:id="@+id/img_name"         android:layout_width="fill_parent"         android:layout_height="wrap_content"         android:layout_below="@+id/indicator"         android:background="#88343434"         android:ellipsize="end"         android:paddingBottom="2dp"         android:paddingLeft="5dp"         android:paddingRight="2dp"         android:paddingTop="2dp"         android:singleLine="true"         android:textColor="#ededed" /&gt;      &lt;apps.modisku.com.modisku.helper.CirclePageIndicator         android:id="@+id/indicator"         android:layout_width="fill_parent"         android:layout_height="wrap_content"         android:layout_below="@+id/view_pager"         android:padding="10dip" /&gt; &lt;/RelativeLayout&gt; </code></pre>  <p></p>  <pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt; &lt;RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android" xmlns:tools="http://schemas.android.com/tools" android:layout_width="match_parent" android:layout_height="match_parent" android:padding="3dp" &gt;  &lt;ImageView     android:id="@+id/image_display"     android:layout_width="match_parent"     android:layout_height="match_parent"     android:contentDescription="@string/txt_image_slider" /&gt;     &lt;/RelativeLayout&gt; </code></pre>  <p>My PageAdapter</p>  <pre><code>public class ImageSlideAdapter extends PagerAdapter {     ImageLoader imageLoader = ImageLoader.getInstance();     DisplayImageOptions options;     private ImageLoadingListener imageListener;     FragmentActivity activity;     List&lt;Product&gt; products;     HomeFragment homeFragment;      public ImageSlideAdapter(FragmentActivity activity, List&lt;Product&gt; products,                              HomeFragment homeFragment) {         this.activity = activity;         this.homeFragment = homeFragment;         this.products = products;         options = new DisplayImageOptions.Builder()                 .showImageOnFail(R.drawable.ic_error)                 .showStubImage(R.drawable.ic_launcher)                 .showImageForEmptyUri(R.drawable.ic_empty).cacheInMemory()                 .cacheOnDisc().showImageOnLoading(R.drawable.loadingicontransprant).build();          imageListener = new ImageDisplayListener();     }      @Override     public int getCount() {         return products.size();     }      @Override     public View instantiateItem(ViewGroup container, final int position) {         LayoutInflater inflater = (LayoutInflater) activity                 .getSystemService(Activity.LAYOUT_INFLATER_SERVICE);         View view = inflater.inflate(R.layout.vp_image, container, false);          ImageView mImageView = (ImageView) view                 .findViewById(R.id.image_display);          // mImageView.setLayoutParams(new ViewGroup.LayoutParams(mScreenWidth, ViewGroup.LayoutParams.WRAP_CONTENT));         mImageView.setAdjustViewBounds(true);         mImageView.setScaleType(ImageView.ScaleType.FIT_CENTER);         mImageView.setOnClickListener(new View.OnClickListener() {              @Override             public void onClick(View v) {                 Bundle arguments = new Bundle();                 Fragment fragment = null;                 Log.d("position adapter", "" + position);                 Product product = (Product) products.get(position);                 arguments.putParcelable("singleProduct", product);                  // Start a new fragment                 fragment = new ProductDetailFragment();                 fragment.setArguments(arguments);                  FragmentTransaction transaction = activity                         .getSupportFragmentManager().beginTransaction();                 transaction.replace(R.id.promofragment, fragment,                         ProductDetailFragment.ARG_ITEM_ID);                 transaction.addToBackStack(ProductDetailFragment.ARG_ITEM_ID);                 transaction.commit();             }         });         imageLoader.displayImage(                 ((Product) products.get(position)).getImageURL(), mImageView,                 options, imageListener);         container.addView(view);         return view;     }      @Override     public void destroyItem(ViewGroup container, int position, Object object) {         container.removeView((View) object);     }      @Override     public boolean isViewFromObject(View view, Object object) {         return view == object;     }      private static class ImageDisplayListener extends SimpleImageLoadingListener {          static final List&lt;String&gt; displayedImages = Collections                 .synchronizedList(new LinkedList&lt;String&gt;());          @Override         public void onLoadingComplete(String imageUri, View view,                                       Bitmap loadedImage) {             if (loadedImage != null) {                 ImageView imageView = (ImageView) view;                 boolean firstDisplay = !displayedImages.contains(imageUri);                 if (firstDisplay) {                     FadeInBitmapDisplayer.animate(imageView, 500);                     displayedImages.add(imageUri);                  }                }            }         }     } </code></pre>  <p><a href="http://i.stack.imgur.com/FeYHc.png" rel="nofollow"><img src="http://i.stack.imgur.com/FeYHc.png" alt="My Apps Screenshoot"></a></p>