<p>So I am scheduling a callback using</p>  <p><code>ioloop.IOLoop.instance().add_timeout(time, callback_func)</code></p>  <p>But my <code>callback_func</code> may throw <code>Exception</code> which I want to catch.</p>  <p>Tried whats suggested in <a href="http://stackoverflow.com/a/20661979/2341189">this answer</a> but doesn't seem to work. Or maybe I am not doing it the right way. Any help on this would be great.</p>  <p>Code is somewhat like this:</p>  <p><strong>start.py</strong></p>  <pre><code>class Start:     # ... other methods ...     @staticmethod     def initialize():         OtherClass.initialize()  def main():     Start.initialize()  if __name__ == "__main__":     main()  ioloop.IOLoop.instance().start() </code></pre>  <p><strong>other_class.py</strong></p>  <pre><code>class OtherClass:     @staticmethod     def initialize():         ioloop.IOLoop.instance().add_timeout(time, callback_func)      @staticmethod     def callback_func():         # Need to catch any exception which occurs here. </code></pre>