<p>I have several services that run correctly 99.9% of the time. However, they work with network and database and occasionally an error that I have not anticipated makes it into the code and causes the service to crash. In this instance, restarting the service usually fixes the problem.</p>  <p>My service creates a new thread where the main code is run. I have added error handling to the service class that catches and logs any unhandled exceptions from this thread. What I am wondering is if I can call OnStop and then OnStart from the service class to restart my service?</p>  <p>The code that I am using is in located in the same class as OnStart and OnStop. I have posted it below:</p>  <pre><code>private void ExceptionHandler(object sender, UnhandledExceptionEventArgs args)     {         log.Append("Fatal Exception:\n" + args.ExceptionObject);         eventLog.WriteEntry(log.ToString());         log = new StringBuilder();          OnStop();          if (numberOfCrashes++ &lt; 10)         {             Thread.Sleep(60000);             OnStart(null);              log.Append("The service has been restarted " + numberOfCrashes + " times.");             eventLog.WriteEntry(log.ToString());             log = new StringBuilder();         }     } </code></pre>