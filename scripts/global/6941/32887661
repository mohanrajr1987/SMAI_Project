<blockquote>   <p><em>Note</em>   This is not an exact code question its about algorithm writing and   before people close it down, stack overflow is also about algorithms,   coding them (and their problems) only comes next. And finding faster or   optimal code, happens later.. this Q is really about the earliest   phase of writing code.</p> </blockquote>  <p>I try to understand how image "blob" detection works.  I am looking for some code explanations, preferable in c#.  There are several methods I read about. The most simple one might be a binary kinda filter working on black and white images. As explained here (<a href="https://en.wikipedia.org/wiki/Connected-component_labeling" rel="nofollow">https://en.wikipedia.org/wiki/Connected-component_labeling</a></p>  <p>However that doesn't solve it for me.  My images are not black and white, they contain more variations (which i cannt split in 2). And I need to apply some rules at blob detection level that some colours belong to the same group only if they match some logic (based upon color info in that blob), despite being visual complete distinct. </p>  <p>I've looked at Aforge (and tested it) EmguCV, OpenCV, and I've seen examples of Matlab (but I don't have Matlab). However since my image data isn't that good for those filters, as I would later like to add even more extra visual logic / future detecting / color rules etc. </p>  <p>So then I red about people sometimes write their own blob filters and this is what I am now interested in. However besides the Wikipedia article I couldnt find some readable programmers material about this subject. I did find things for mathlab, and some heavy mathematical articles about blob / future detecting. What i am looking for are some "other" methods like the Wikipedia article showing some different approaches to blob detection, explained in code. So that i based on such knowledge can create one too.</p>  <p>If someone could point me to some article(s) where people describe  different filter method(s), and isnt about existing aforge/opencv etc. Then i gladly like to learn it.</p>