<p>I'm currently working on a way of generating a bunch of class objects and storing them within the array and executing a class function without having to go through each one. The context that I have put the problem in isn't the exact same way as what I'm doing but its too complex to explain for just the question</p>  <p>Let's say I have information stored in an array like this:</p>  <pre><code>x = [['dog', 1], ['cat',2]] </code></pre>  <p>The class will appear like this:</p>  <pre><code>class Animal(object):     def __init__(self, name, position):         self.name = name         self.position = position      def display(self):         print(self.name, self.position) </code></pre>  <p>So my objective is to take the information from the array and store them as objects into an empty array. The reason for this is to be able to call a function from all objects without having to repeat it for every object without iteration.</p>  <p>My issue below is that I'm appending them into the list but the object doesn't have a variable name attached to it. Is there a way to make the variable name <code>value[0]</code> which would be the name contained in <code>x</code>.</p>  <pre><code>empty = []  for value in x:     empty.append(Animal(value[0], value[1])) </code></pre>  <p>Then once that has stored properly to execute them would this following code work?</p>  <pre><code>for item in empty: item.display() </code></pre>  <p>I understand you shouldn't use this to print just the values, but I put it into this scenario to keep it simple in what to do with the class.</p>