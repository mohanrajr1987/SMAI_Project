<p>I am getting an error (<code>TypeError: 'node' object is not callable</code>) when I try to get my previous node. What am I doing wrong?</p>  <p>My Node Class:</p>  <pre><code>class node(object):     def __init__(self):         self.node=[]         self.info = None         self.prev = None         self.depth=-1         self.step = []     def prev(self):         return self.prev     def add(self):         node1=node()         self.node.append(node1)         node1.prev=self         return node1 </code></pre>  <p>My Code accessing <code>prev</code> (<code>last_node</code> should have a depth value of around 5):</p>  <pre><code>rev = last_node dep = rev.depth revPath = [None]*(dep*4) for g in range(0,dep):     revPath[dep - (g*4) - 1] = rev.step[3]     revPath[dep - (g*4) - 2] = rev.step[2]     revPath[dep - (g*4) - 3] = rev.step[1]     revPath[dep - (g*4) - 4] = rev.step[0]     rev = rev.prev() </code></pre>  <p>Additional info:</p>  <p>I am trying to traverse the tree backwards in order to see the path that was taken. The <code>step[]</code> value just grabs a few integers. The code also runs fine with everything except <code>prev</code> (i.e. If I take out the part to find the path taken, there is no issue).</p>