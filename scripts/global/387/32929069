<p>I am writing some tests that requires the calling program to give different error codes  e.g., test script is like</p>  <p>cpu_test.sh</p>  <pre><code>stress --cpu "$cpus" --timeout 30000 --verbose &gt;&gt; "$data" [ $? -ne 0 ] &amp;&amp; pass="fail" &amp;&amp; echo "ERROR: CPU stress test has failed" </code></pre>  <p>Now, I can't wait for 30000 seconds in my unit test. Hence I would like to to set the path to a fake 'stress' binary that would just return an error code:</p>  <pre><code>$cat stress  #!/bin/bash exit 1  </code></pre>  <p>but echo $? returns '0' instead of 1 hence I am never able to test the negative test cases.</p>  <p>A C solution would be : cat fio.c </p>  <pre><code>#include &lt;stdio.h&gt; int main() { return 1; } </code></pre>  <p>How do I make a shell script return the desired error code?</p>