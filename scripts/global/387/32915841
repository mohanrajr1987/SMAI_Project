<p>I'm currently working on an exercise that requires me to write a shell script whose function is to take a single command-line argument that is a directory. The script takes the given directory, and finds all the .jpgs in that directory and its sub-directories, and creates an image-strip of all the .jpgs in order of modification time (newest on bottom). </p>  <p>So far, I've written:</p>  <pre><code>#!bin/bash/  dir=$1 #the first argument given will be saved as the dir variable   #find all .jpgs in the given directory #then ls is run for the .jpgs, with the date format %s (in seconds) #sed lets the 'cut' process ignore the spaces in the columns #fields 6 and 7 (the name and the time stamp) are then cut and sorted by modification date #then, field 2 (the file name) is selected from that input #Finally, the entire sorted output is saved in a .txt file  find "$dir" -name "*.jpg" -exec ls -l --time-style=+%s {} + | sed 's/  */ /g' | cut -d' ' -f6,7 | sort -n | cut -d' ' -f2 &gt; jgps.txt </code></pre>  <p>The script correctly outputs the directory's .jpgs in order of time modification. The part that I am currently struggling on is how to give the list in the .txt file to the <code>convert -append</code> command that will create an image-strip for me (For those who aren't aware of that command, what would be inputted is: <code>convert -append image1.jpg image2.jpg image3.jpg IMAGESTRIP.jpg</code>with IMAGESTRIP.jpg being the name of the completed image strip file made up of the previous 3 images).</p>  <p>I can't quite figure out how to pass the .txt list of files and their paths to this command. I've been scouring the man pages to find a possible solution but no viable ones have arisen. </p>