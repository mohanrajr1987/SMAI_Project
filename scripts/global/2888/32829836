<p>How should i implement service activator to read specific number of bytes ?</p>  <p>My context.xml,</p>  <pre><code>&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;beans xmlns="http://www.springframework.org/schema/beans"     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:int="http://www.springframework.org/schema/integration"     xmlns:int-ip="http://www.springframework.org/schema/integration/ip"     xmlns:context="http://www.springframework.org/schema/context"     xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd         http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd         http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd         http://www.springframework.org/schema/integration/ip http://www.springframework.org/schema/integration/ip/spring-integration-ip.xsd"&gt;      &lt;int:annotation-config /&gt;      &lt;context:component-scan base-package="com.spring.integration.tcp" /&gt;  &lt;bean id="tcpDeserializer"     class="org.springframework.integration.ip.tcp.serializer.ByteArrayLengthHeaderSerializer"&gt;     &lt;property name="maxMessageSize" value="300" /&gt; &lt;/bean&gt;      &lt;int-ip:tcp-connection-factory id="tcpConnectionFactory" type="server" port="9070" using-nio="true" deserializer="tcpDeserializer" /&gt;      &lt;int:channel id="tcpRequestChannel" /&gt;      &lt;int-ip:tcp-inbound-gateway id="tcpInboundGateway" connection-factory="tcpConnectionFactory" request-channel="tcpRequestChannel" /&gt;      &lt;bean id="messageHandler" class="com.spring.integration.tcp.MessageHandler" /&gt;      &lt;int:service-activator id="tcpServiceActivator" input-channel="tcpRequestChannel" ref="messageHandler" method="receiveAndSend" /&gt;  &lt;/beans&gt; </code></pre>  <p>My message handler,</p>  <pre><code>package com.spring.integration.tcp;  import java.io.InputStream; import java.util.Arrays;   public class MessageHandler {     public byte[] receiveAndSend(final InputStream inputStream) throws Exception     {         int bytesToRead = 50;         final byte[] requestMessageBytes = new byte[bytesToRead];         int read = 0;         while (bytesToRead &gt; read)         {             final int c = inputStream.read(requestMessageBytes, read, bytesToRead - read);             if (c == -1)             {                  throw new Exception("EOF");             }             read += c;         }         System.out.println("server received - length [" + requestMessageBytes.length + "] bytes " + Arrays.toString(requestMessageBytes));         final byte[] responseMessageBytes = new byte[] { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 };         System.out.println("server sending - " + Arrays.toString(responseMessageBytes));         return responseMessageBytes;     } } </code></pre>  <p>I would like to read first 4 bytes and determine the incoming message length(from first 4 bytes) and then read message bytes whose length is specified by first 4 bytes.</p>  <p>After adding deserializer I get the following exception. Though i send a byte array of length 161.</p>  <pre><code>final byte[] data = new byte[] { 2,....}; </code></pre>  <p>Exception,</p>  <pre><code>Sep 28, 2015 7:03:28 PM org.springframework.integration.ip.tcp.connection.TcpNetConnection handleReadException SEVERE: Read exception localhost:54756:9070:a580527b-95bd-42c7-b1cc-e0726b433199 IOException:Message length 38159362 exceeds max message length: 300 </code></pre>  <p>Should the client be based on spring integration to be able to send a message to spring integration based server ?</p>