<p>I got a Server with a ClientHandle which accepts requests if there are some and i'd like to send data from Java to it. (the C++ client does work without any issues)</p>  <p>I have read the other posts about this but they didnt help me in any way. <a href="http://stackoverflow.com/questions/10611205/how-can-i-send-data-from-a-java-client-to-a-c-server">Post1</a>,<a href="http://stackoverflow.com/questions/15902898/java-client-and-a-c-server-send-and-receive-via-tcp-socket">Post2</a>,<a href="http://stackoverflow.com/questions/3950588/strings-and-character-encoding-in-c">Post3</a></p>  <pre><code>bool ClientHandle::getData(std::shared_ptr&lt;std::string&gt; ptr) {     int n;     ptr-&gt;clear();      char size[4];     n = recv(m_sock, size, sizeof(size), 0);      //check if retval passed     if (!checkRetValRecv(n))         return false;      //calc how much data     auto msgLen = atoi(size);     LOG_INFO &lt;&lt; "recv a message with size: " &lt;&lt; msgLen;      //create buffer for the data     auto buffer = new char[msgLen];      //read buffer     n = recv(m_sock, buffer, msgLen, 0);      //check retval if it passes     if (!checkRetValRecv(n))         return false;     ptr-&gt;append(buffer, msgLen);     LOG_INFO &lt;&lt; "Message: " &lt;&lt; *ptr;      delete[] buffer;      return true; } bool ClientHandle::checkRetValRecv(const int&amp; n) {     if (n == SOCKET_ERROR)     {         size_t err = WSAGetLastError();         if (err == WSAECONNRESET)         {             LOG_ERROR &lt;&lt; "Failed to recv! Disconnecting from client: " &lt;&lt; "Connection reset by peer.";         }         else         {             LOG_ERROR &lt;&lt; "Disconnecting from client. WSAError: " &lt;&lt; err;         }         m_connected = false;         return false;     }      if (n == 0)     {         LOG_INFO &lt;&lt; "Client disconnected.";         m_connected = false;         return false;     }     return true; } </code></pre>  <p>Now i would like to write a Java client for this to send data but i cant even send the size of the incoming data.</p>  <pre><code>public class JClient{     String m_host;     int m_port;     Socket m_sock;     OutputStreamWriter m_out;      BufferedReader m_in;      public JClient(String host, int port)     {         m_host = host;         m_port = port;     }      private void connect() throws IOException     {         m_sock = new Socket(m_host, m_port);         m_out = new OutputStreamWriter(m_sock.getOutputStream());         m_in = new BufferedReader(new InputStreamReader(m_sock.getInputStream()));     }      private void close() throws IOException     {         m_sock.close();     }      public void send(String json) throws IOException {         this.connect();         m_out.write(json.length());         m_out.flush();         m_out.write(json);         m_out.flush();          //wait for result         m_in.read();         this.close();     } } </code></pre>  <p>If i try to send Data like so: </p>  <pre><code>JClient client = new JIMClient("localhost", 6060); String toSend = "{\"hello\":\"someJson\"}"; try {     client.send(toSend); } catch (IOException e) {     e.printStackTrace(); } </code></pre>  <p>I do not receive anything usefull. <code>recv a message with size: 0</code> , <code>Client disconnected.</code></p>  <p>The send method does not work. I already tried other Streams and using a different encoding, which i guess is the reason for this. So the Question is how do i resolve this issue with the encoding here? I'd like to leave the C++ client as it is if possible or get it to some kind of standart.</p>