<p>I am having a problem with my connection. I have an Arduino server and an Android client. </p>  <p>I can send info to the server with the PrintWriter class but I can't get back info with the BufferedReader.</p>  <p>Server Code in Arduino:</p>  <pre><code>byte mac[] = {0x00, 0xAA, 0xBB, 0xCC, 0xDE, 0x02}; IPAddress ip(192, 168, 1, 4); EthernetServer server(80); //Inicia o servidor Ethernet na porta 80 String leitura, temperatura; String on = "ON"; String off = "OFF"; String cs = "consulta"; int temp, estado; String est;  void setup()  {    pinMode(5,OUTPUT); //LED para verificar servidor ligado   pinMode(7,OUTPUT); //LED para verificar client available   pinMode(6,OUTPUT); //LED comandado por Android    Serial.begin(9600); //Inicia a comunicacao com a porta serie (baud rate =  9600)   Ethernet.begin(mac, ip); //Inicia a conexÃ£o Ethernet como servidor   server.begin();    //Imprimir o IP do servidor   Serial.print("IP do servidor: ");   Serial.println(Ethernet.localIP()); }  void loop()  {   //listen for incoming clients   EthernetClient client = server.available();   leitura="";  if (client) //Havendo novo cliente: {   Serial.println("Nova ligacao");   digitalWrite(7, HIGH);   while (client.connected()) //enquanto houver conexao {   if (client.available())    {          char c = client.read(); //le caracter a caracter ate chegar ao fim da string      leitura += c;       if (leitura == cs)       {       estado = digitalRead(6);       client.println(estado);       Serial.println("\nTEMP:\n");       Serial.println(estado);       break;       }        }  if (leitura == on) {   digitalWrite(6,HIGH); //Liga LED } if (leitura == off) {   digitalWrite(6,LOW);  //Desliga LED } if (leitura.startsWith("tp",0)) {   Serial.print("Entrou\n");   temperatura=leitura.substring(2,5);   temp = temperatura.toInt();   analogWrite(5, temp); }}   delay(1); client.stop(); //Termina ligacao ao cliente digitalWrite(7,LOW); leitura=""; Serial.println("\nLigacao terminada\n"); }} </code></pre>  <p>Client code in Android:</p>  <pre><code>public class MainActivity extends Activity  {  //Variáveis globais int erro = 0; int estado_luz = 0; int progresso = 0; String off = new String("OFF"); String on = new String("ON"); String prg; String dados = null; PrintWriter out = null; BufferedReader in = null; Socket sock = null;  public void VerEstado() { (new Thread()  {     public void run()     {         try         {             sock = new Socket("192.168.1.4", 80); //Cria socket de ligação             out = new PrintWriter(sock.getOutputStream(), true); //Para enviar ao servidor             in = new BufferedReader(new     InputStreamReader(sock.getInputStream())); //Para receber do servidor               textToServer = "consulta"; //Escreve na string             out.print(textToServer); //Envia string para o server             out.close();              dados = in.readLine();              erro = 0;             in.close();             sock.close();             return;         }         catch (IOException ioexception)         {             erro = 1;         }     } }).start(); }  @Override protected void onCreate(Bundle savedInstanceState)  {     super.onCreate(savedInstanceState);     setContentView(R.layout.activity_main);      VerEstado(); //Chamada da função VerEstado     while (dados == null)     {     }      Toast.makeText(getApplicationContext(), dados, Toast.LENGTH_SHORT).show(); } } </code></pre>  <p>So when i send the out.print, the server correctly enters the "<strong>if (leitura == cs)</strong>" condition, confirmed in the serial monitor. </p>  <p>Problem: It should then send the variable "estado" to the client with "<strong>client.println(estado)</strong>", and the client should save it in the "<strong>dados = in.readLine()</strong>", wich he doesn't because dados is always showing NULL. Note: "dados" is declared as a global string, right in the beginning of the program, so it should keep the value on the main function.</p>  <p>What am I doing wrong?? Any help would be great.</p>  <p>P.s. sorry for bad formatting, I'm new here.</p>