<p>I'm trying to make my own Chat Program per TCP-Connection. This actually is my second one, but I restarted because of the old program being stuffed with unused code and non-working fixes. The problem I have now is, that the StreamReader, which should read the received package, just crashes my program. (Not Responding) My Project uses a MessageSender Function, and a Receiver function. Sender:</p>  <pre><code>    Public Shared Function MessageSender(ByVal Message As String, ByVal IP As String, ByVal CommandChar As Char, ByVal Sender As String) 'Sends a message to the Input-IP      Dim SW As IO.StreamWriter 'Sends messages to the Input-IP      If CommandChar = ChrW(6) Then 'If the Command Char is a message-defining Char         Try             Dim Client As New Net.Sockets.TcpClient(IP, 32447) 'The client the message is sent to              SW = New IO.StreamWriter(Client.GetStream()) 'Tells the StreamWriter to send the message to the defined receiver client             SW.WriteLine(CommandChar)             SW.WriteLine(Sender &amp; ": " &amp; Message) 'Sends the Message          Catch ex As Exception 'If any Exception occurs              Return False 'Returns "False"          End Try      Else 'If the Command Char is a command-defining Char      End If      Return True 'Returns True End Function </code></pre>  <p>Receiver (Timer, updated every 0.1s)</p>  <pre><code>Private Sub ListenerCheckup(sender As Object, e As EventArgs) Handles ListenerChecker.Tick      If Listener.Pending = True Then 'If the listener received a package          MessageLine1 = "" 'Sets the value of the string "MessageLine1" to Nothing         MessageLine2 = "" 'Sets the value of the string "MessageLine2" to Nothing         Client = Listener.AcceptTcpClient 'Defines this client to be the receiving client          Using MessageReader As New IO.StreamReader(Client.GetStream()) 'Defines the StreamReader reading the received message              MessageLine1 = Convert.ToString(MessageReader.ReadLine) 'Sets the value of the string "Message" to the received message             MessageLine2 = Convert.ToString(MessageReader.ReadLine)             MessageReader.Close()          End Using '"Undefines" the StreamReader reading the received message          Message = MessageLine1 &amp; vbCrLf &amp; MessageLine2         Console.WriteLine(Message)          My.Computer.FileSystem.WriteAllText(InstallFolder &amp; "\CurMsg.dat", Message, False) 'Saves the message into a file called "CurMsg.dat"          Using SR As New IO.StreamReader(InstallFolder &amp; "\CurMsg.dat") 'Defines the StreamReader reading the saved message              FChar = ChrW(SR.Read) 'Sets the value of the Char "FChar" to the value of the first Char in the saved message             SR.ReadLine() 'Commands the StreamReader to read another line, required to read the message in the next step              If FChar = ChrW(2) Then 'If the message is a Userdata-Request              ElseIf FChar = ChrW(3) 'If the message is a Userdata-Answer              ElseIf FChar = ChrW(4) 'If the message is an Online-Check Request              ElseIf FChar = ChrW(5) 'If the message is an Online-Check Answer              ElseIf FChar = ChrW(6) 'If the message is a Chat Message                  Message = SR.ReadLine() 'Sets the value of the string "Message" to the saved chat message                 Chat.AppendText(Message) 'Appends the string "Message" to the Chat-Box                 Message = "" 'Resets the string "Message"                  SR.Close() 'Closes the currently opened StreamReader                 My.Computer.FileSystem.DeleteFile(InstallFolder &amp; "\CurMsg.dat") 'Deletes the saved message              Else 'If the message is an Unknown Message Type                  FChar = ChrW(0)                 Message = ""              End If          End Using '"Undefines" the StreamReader reading the saved message      End If  End Sub </code></pre>  <p>The sender works perfectly, as debugging showed: The Receiving client received a package. But when I debug to the Line <code>MessageLine1 = Convert.ToString(MessageReader.ReadLine)</code> the program doesn't respond anymore.</p>