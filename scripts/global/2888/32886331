<p>I am facing a strange behaviour of the RabbitMQ server (under ubuntu server 14.04.3 LTS).</p>  <p>The client is a MQTT implementation based on lwip v1.3.2 on a tiny MCU (Cortex-M3). When my client connects the server using its IPv4 address, it works and the client-server TCP socket has correct [PSH+ACK], [ACK] sequence.</p>  <p>But when the client connects via my router (NAT active on port 1883), I get the following sequence (on the server side).</p>  <p>server tcpdump port 1883:</p>  <pre><code>7     2015-10-01 12:24:30.962080    192.168.1.1    192.168.1.97    TCP    121   55061→1883 [PSH, ACK] Seq=1 Ack=1 Win=2920 Len=67 8     2015-10-01 12:24:30.962101    192.168.1.97    192.168.1.1    TCP    54    1883→55061 [ACK] Seq=1 Ack=68 Win=29200 Len=0 11    2015-10-01 12:24:30.968867    192.168.1.97    192.168.1.1    TCP    58    1883→55061 [PSH, ACK] Seq=1 Ack=68 Win=29200 Len=4 12    2015-10-01 12:24:30.971556    192.168.1.1    192.168.1.97    TCP    60    55061→1883 [ACK] Seq=68 Ack=5 Win=2916 Len=0 13    2015-10-01 12:24:30.989599    192.168.1.1    192.168.1.97    TCP    92    55061→1883 [PSH, ACK] Seq=68 Ack=5 Win=2916 Len=38 14    2015-10-01 12:24:31.171216    192.168.1.97    192.168.1.1    TCP    58    [TCP Retransmission] 1883→55061 [PSH, ACK] Seq=1 Ack=68 Win=29200 Len=4 15    2015-10-01 12:24:31.171411    192.168.1.1    192.168.1.97    TCP    60    [TCP Dup ACK 12#1] 55061→1883 [ACK] Seq=106 Ack=5 Win=2916 Len=0 </code></pre>  <p>Note that it happens only with the <strong>lwip</strong> based client; I have tested successfully using the mqtt module under node.js.</p>  <p>DOes anyone has an idea what what is wrong in the format of the packets sent?</p>  <p>Thanks, Dan.</p>