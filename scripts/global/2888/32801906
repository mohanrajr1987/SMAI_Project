<p>I'm writing a two way chat in C, but what I'd really like to do is have the chat server print the ip of the host when it starts up.  My code thus far looks like this:</p>  <pre><code>#include&lt;stdio.h&gt; //printf #include&lt;sys/types.h&gt; #include&lt;netinet/in.h&gt; #include&lt;sys/socket.h&gt; #include&lt;arpa/inet.h&gt;  #define PORT 8888   //The port on which to listen for incoming data void error(char *msg) {     perror(msg);     exit(1); } int main(void) {     struct sockaddr_in serv_addr, cli_addr;     int sockfd, newsockfd, n;     socklen_t cli_len;     char buffer[512];     char message[512];      //create a socket     sockfd=socket(AF_INET, SOCK_STREAM, 0);     if (sockfd &lt; 0)         error("ERROR OPENING SOCKET");      // zero out the structure     bzero((char *) &amp;serv_addr, sizeof(serv_addr));      serv_addr.sin_family = AF_INET;     serv_addr.sin_port = htons(PORT);     serv_addr.sin_addr.s_addr = INADDR_ANY;      //bind socket to port     if (bind(sockfd, (struct sockaddr *) &amp;serv_addr,         sizeof(serv_addr)) &lt; 0)             error("ERROR ON BINDING");      //keep listening for data     //inet_ntoa(serv_addr.sin_addr)     inet_ntop(AF_INET, &amp;serv_addr.sin_addr.s_addr, buffer, sizeof(serv_addr));     listen(sockfd,5);     printf("Listening on ip %s and port %d\n", buffer, ntohs(serv_addr.sin_port));     while(1)     {         cli_len = sizeof(cli_addr);         newsockfd = accept(sockfd, (struct sockaddr *) &amp;cli_addr, &amp;cli_len);         if (newsockfd &lt; 0) error("ERROR ON ACCEPT");          while(1)         {              bzero(buffer,512);             n = read(newsockfd,buffer,511);             if(n &lt; 0) error("ERROR READING FROM SOCKET");             printf("Friend: %s\n" , buffer);              //now reply             printf("Please enter the message: ");             bzero(buffer,512);             fgets(buffer,511,stdin);             n = write(newsockfd,buffer, strlen(buffer));             if (n &lt; 0) error("ERROR writing to socket");         }         close(newsockfd);     }     close(sockfd);     return 0; } </code></pre>  <p>Currently when I make and run it immediately prints</p>  <pre><code>Listening on ip 0.0.0.0 and port 8888 </code></pre>  <p>This really should be simple.  I realize that it's binding to all interfaces, so it's accurate that 0.0.0.0 is the ip.  </p>  <p>Is there any way to have it show a host ip?  Am I looking at pinging the DNS to lookup ip by hostname and then print that?  Any other suggestions?</p>  <p>Thanks</p>