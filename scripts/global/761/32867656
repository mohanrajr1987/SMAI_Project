<p>I'm using <a href="http://www.refinerycms.com/" rel="nofollow">RefineryCMS</a> as a rails CMS, it was working like a charm until I         followed the answer in <a href="http://stackoverflow.com/questions/21649909/how-to-add-a-lightbox-style-image-gallery-to-a-refinery-cms-website">this</a> question to get a simple image gallery functionality going. Now I'm getting the same error as shown on <a href="https://github.com/refinery/refinerycms/issues/2595" rel="nofollow">this</a> issue. I didn't change any of my rails code to introduce a link_to tag with a nil reference, however (there is a link_to image_tag line in the guide but I've commented that out and nothing changed), so it's happening in the autogenerated code I believe. Here's the full error I get when I login to refinery on my site:</p>  <pre><code>ActionController::UrlGenerationError in Refinery::Authentication::Devise::Admin::Users#index Showing /home/mpvoss/.rbenv/versions/2.2.1/lib/ruby/gems/2.2.0/bundler/gems/refinerycms-0a37f8090278/core/app/views/refinery/admin/_menu_item.html.erb where line #1 raised:  No route matches {:action=&gt;"index", :controller=&gt;"refinery/refinery/portfolio/admin/galleries", :locale=&gt;:en} Extracted source (around line #46):             44 message &lt;&lt; " missing required keys: #{missing_keys.sort.inspect}"     unless missing_keys.empty? 45 46 raise ActionController::UrlGenerationError, message 47 end 48 49 def clear  Trace of template inclusion: /home/mpvoss/.rbenv/versions/2.2.1/lib/ruby/gems/2.2.0/bundler/gems/refinerycms-0a37f8090278/core/app/views/refinery/admin/_menu.html.erb, /home/mpvoss/.rbenv/versions/2.2.1/lib/ruby/gems/2.2.0/bundler/gems/refinerycms-0a37f8090278/core/app/views/layouts/refinery/admin.html.erb </code></pre>  <p>Note: Just loading the website without logging into refinery works because it's not trying to load the menu code below that encounters the routing issue.</p>  <p>Okay, let's have a look at <strong>_menu.html.erb</strong></p>  <pre><code>&lt;%= link_to menu_item.title, refinery.url_for(menu_item.url),         :class =&gt; ("active" if menu_item.highlighted?(params)),         :id =&gt; "plugin_#{menu_item.name}" %&gt; </code></pre>  <p>This code just makes a menu bar for all the plugins. It can be commented out and refinery works (the error above goes away), but I need that menu bar to make changes to the website.</p>  <p><strong>What I've tried.</strong></p>  <ul> <li><p>I found a galleries_controller.rb in ~/.rbenv/versions/2.2.1/lib/ruby/gems/2.2.0/bundler/gems/refinerycms-portfolio-289b85b18771/app/controllers/refinery/portfolio/admin, which seems to be the controller the error was talking about. It didn't have an index action, so I added an empty action to see if that was the problem and nothing changed. The routes.rb for the ~/.rbenv/versions/2.2.1/lib/ruby/gems/2.2.0/bundler/gems/refinerycms-portfolio-289b85b18771/ gem is below</p></li> <li><p>Commenting out the portfolio gem in my Gemfile and running bundle install but I get the same error because the autogenerated code (referring to stuff like .rbenv/versions/2.2.1/lib/ruby/gems/2.2.0/bundler/gems/refinerycms-0a37f8090278/) is still getting executed (I use git for version control and make a clean clone of the project before these changes and it has the same problem because the autogenerated code is not part of the version control).  </p></li> <li>gem uninstall of the refinery-photo-gallery, refinerycms-page-images and refinerycms-portfolio gems I thought might be causing the problem </li> <li>I moved all the gems in ~/.rbenv/versions/2.2.1/lib/ruby/gems/2.2.0/bundler/gems/ out of that directory to see if a bundle install would regenerate fresh, clean gems but nothing changed.</li> </ul>  <p>None of these ideas has made a difference.  If any clarification is needed please just let me know. I've been stumped on this for a week and my Googling skills are failing me. Any help is really appreciated!</p>  <p><strong>~/.rbenv/versions/2.2.1/lib/ruby/gems/2.2.0/bundler/gems/refinerycms-portfolio-289b85b18771/routes.rb</strong></p>  <pre><code> Refinery::Core::Engine.routes.draw do    # Frontend routes   namespace :portfolio, :path =&gt; Refinery::Portfolio.page_url do     root :to =&gt; "galleries#index"     resources :galleries, :only =&gt; [:index, :show]   end    # Admin routes   namespace :portfolio, :path =&gt; '' do     namespace :admin, :path =&gt; Refinery::Core.backend_route do       scope :path =&gt; 'portfolio' do         resources :galleries, :except =&gt; :show do           get :children, :on =&gt; :member           post :update_positions, :on =&gt; :collection           resources :items, :except =&gt; [:show] do             post :update_positions, :on =&gt; :collection           end         end         resources :items do           post :update_positions, :on =&gt; :collection         end       end     end   end end </code></pre>  <p><strong>Gemfile</strong></p>  <pre><code>source 'https://rubygems.org'  # Bundle edge Rails instead: gem 'rails', github: 'rails/rails' gem 'rails', '4.2.3' # Use sqlite3 as the database for Active Record group :development, :test do   gem 'sqlite3' end # Use SCSS for stylesheets # Use Uglifier as compressor for JavaScript assets # Use CoffeeScript for .coffee assets and views # See https://github.com/rails/execjs#readme for more supported runtimes # gem 'therubyracer', platforms: :ruby  # Use jquery as the JavaScript library gem 'jquery-rails' # Turbolinks makes following links in your web application faster. Read more:     https://github.com/rails/turbolinks gem 'turbolinks' # Build JSON APIs with ease. Read more: https://github.com/rails/jbuilder gem 'jbuilder', '~&gt; 2.0' # bundle exec rake doc:rails generates the API under doc/api. gem 'sdoc', '~&gt; 0.4.0', group: :doc  # Use ActiveModel has_secure_password # gem 'bcrypt', '~&gt; 3.1.7'  # Use Unicorn as the app server # gem 'unicorn'  # Use Capistrano for deployment # gem 'capistrano-rails', group: :development  group :development, :test do   # Call 'byebug' anywhere in the code to stop execution and get a debugger     console   gem 'byebug'    # Access an IRB console on exception pages or by using &lt;%= console %&gt; in views   gem 'web-console', '~&gt; 2.0'    # Spring speeds up development by keeping your application running in the     background. Read more: https://github.com/rails/spring   gem 'spring' end  # Added by Matthew, Thin server gem 'faye' gem 'thin'  group :assets do   #gem 'sass-rails', '~&gt; 3.2.3'   gem 'coffee-rails', '~&gt; 4.1.0'   gem 'sass-rails', '~&gt; 5.0'   #gem 'coffee-rails', '~&gt; 3.2.1'   gem 'bootstrap-sass','~&gt; 3.1.1'   gem 'uglifier', '&gt;= 1.3.0'   #gem 'uglifier', '&gt;= 1.0.3' end    gem 'twitter-bootstrap-rails' gem 'refinerycms', git: 'https://github.com/refinery/refinerycms', branch: 'master' #gem 'refinerycms-page-images', '~&gt; 2.0.0' gem 'quiet_assets', group: :development #gem 'refinerycms-photo-gallery', '~&gt; 0.1.0' # Add support for searching inside Refinery's admin interface. gem 'refinerycms-acts-as-indexed', ['~&gt; 2.0', '&gt;= 2.0.0']  # Add support for Refinery's custom fork of the visual editor WYMeditor. gem 'refinerycms-wymeditor', ['~&gt; 1.0', '&gt;= 1.0.6'] gem 'refinerycms-portfolio', github: 'refinery/refinerycms-portfolio', branch:     'master' # The default authentication adapter gem 'refinerycms-authentication-devise', '~&gt; 1.0' </code></pre>