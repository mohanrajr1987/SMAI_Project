<p>Somehow, when I added a repo I accidentally locally merged branch <code>production</code> into <code>new_vagrant</code> (commit <code>b267acd</code>).</p>  <p>I tried to fix this by changing which branch <code>production</code> tracks against so that it was again <code>production</code> instead of <code>new_vagrant</code> (commit <code>f9490c5</code>).</p>  <p>Thinking I had things back to the way they should be, I created a new branch off production to begin doing my work. Finished, then committed and pushed <code>244126c</code> to remote.</p>  <p>Now every time I try to switch to <code>production</code> and pull the latest changes from remote <code>production</code> branch, I see my working copy load up with uncommitted files even though I never did any work on the <code>production</code> branch. I tried doing a hard reset to <code>9edeb28</code>, but that didn't fix it. I still see I need to push some commits to <code>production</code>.</p>  <p>So I tried reversing the commits <code>b267acd</code>, but I just get the error <code>Commit b267acd is a merge but no -m option was given</code>. Same error with <code>f9490c5</code>.</p>  <p>Screenshot of my tree for context: <a href="http://i.stack.imgur.com/fkvqG.png" rel="nofollow"><img src="http://i.stack.imgur.com/fkvqG.png" alt="messed up"></a></p>  <p>How do I undo this mess so I can sync successfully with the latest production changes?</p>  <p>Using SourceTree for most of my git work, BTW.</p>