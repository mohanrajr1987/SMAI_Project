<p>I have problem to bind dropdown list dynamically.I want if i select value from one dropdown we need to change value of another dropdown which is in same row.</p>  <p>I want to fill Size dropdown on Series dropdown change. But when I select Series then Size not binding until grid reload.</p>  <p>Can you please help me.</p>  <p>Below is the code which <code>enter code here</code></p>  <pre><code>/*---------------------------------------------------------------------- Rendering Grid -----------------------------------------------------------------------*/ function RenderGridDetails(Data) {     jQuery("#list1").jqGrid('GridUnload');     jQuery("#list1").jqGrid({         datatype: "local",         colNames: ['BT_ID', 'SR_No', 'BOM_ID', 'Type','Series','Size', 'Item Code', 'Short Desc', 'Long Desc', 'Unit', 'Drg.No', 'Rev.No.', 'Qty',         'Limit', 'Compulsory', 'Edit', 'Status'],         colModel: [         { name: 'BT_ID', index: 'BT_ID', align: "left", stype: 'text', hidden: true },         { name: 'SR_No', index: 'SR_No', align: "left", stype: 'text', hidden: true },         { name: 'BOM_ID', index: 'BOM_ID', align: "left", stype: 'text', hidden: true },         {             name: 'Type_ID', index: 'Type_ID', width: 80, align: "left", stype: 'text', editable: true, edittype: "select", editrules: { required: true, message: "required" },             editoptions: {                 value: htmltype,                 class: "ddl",                 dataInit: function (e) {                     $(e).attr('disabled', 'disabled');                 }             }         },         {             name: 'Series_ID', index: 'Series_ID', width: 180, align: "left", editable: true, edittype: "select",             editrules: { required: true, message: "required" },             editoptions: {                 value: htmlSeries,                 dataEvents: [                 {                     type: 'change',                     fn: function (e) {                         var row = jQuery(e.target).closest('tr.jqgrow');                         var rowId = row.attr('id');                         var ret = jQuery("#list1").jqGrid('getRowData', rowId);                         FillTemplateSize($("#" + rowId + "_Series_ID").val(), rowId);                     }                 }                 ]             }         },         {             name: 'Size_ID', index: 'Size_ID', width: 180, align: "left", editable: true, edittype: "select",             editrules: { required: true, message: "required" },             editoptions: {                 value: htmlSize,                 dataEvents: [                 {                     type: 'change',                     fn: function (e) {                         var row = jQuery(e.target).closest('tr.jqgrow');                         var rowId = row.attr('id');                         //GetCodeforTran($(e.target).val(), 57, rowId);                     }                 }                 ]             }         },         {             name: 'Item_Code_ID', index: 'Item_Code_ID', width: 180, align: "left", editable: true, edittype: "select",             editrules: { required: true, message: "required" },             editoptions: {                 value: htmlcode,                 dataEvents: [                 {                     type: 'change',                     fn: function (e) {                         var row = jQuery(e.target).closest('tr.jqgrow');                         var rowId = row.attr('id');                         GetCodeforTran($(e.target).val(), 57, rowId);                     }                 }                 ]             }         },         { name: 'Short_desc', index: 'Short_desc', width: 80, align: "left", stype: 'text', editable: true, edittype: "text", editoptions: { readonly: 'readonly', class: "txt" } },         { name: 'Long_desc', index: 'Long_desc', width: 80, align: "left", stype: 'text', editable: true, edittype: "text", editoptions: { readonly: 'readonly', class: "txt" } },         {             name: 'Unit', index: 'Unit', width: 50, align: "left", stype: 'text', editable: true, edittype: "select", editrules: { required: true, message: "required" },             editoptions: {                 value: htmlunit,                 class: "ddl",                 dataInit: function (e) {                     $(e).attr('disabled', 'disabled');                 }             }         },         { name: 'Drg_No', index: 'Drg_No', width: 40, align: "left", stype: 'text', editable: true, edittype: "text", editoptions: { readonly: 'readonly', class: "txt" } },         { name: 'Rev_No', index: 'Rev_No', width: 40, align: "left", stype: 'text', editable: true, edittype: "text", editoptions: { readonly: 'readonly', class: "txt" } },         {             name: 'Qty', index: 'Qty', width: 20, align: "right", stype: 'text', edittype: "text", editable: true, editrules: { notEqualTo: 0, message: "required" },             editoptions: {                 maxlength: 3,                 class: "txtvalue",                 dataEvents: [                     {                         type: 'blur',                         fn: function (e) {                             var row = jQuery(e.target).closest('tr.jqgrow');                             var rowId = row.attr('id');                             var ret = jQuery("#list1").jqGrid('getRowData', rowId);                             var qty = $(e.target).val() == '' ? 0 : $(e.target).val(), limit = ret.Limit;                              if (parseInt(qty) &gt; parseInt(limit)  /*&amp;&amp; ($("#htxtOp").val() != '2')*/) {                                 alert("Qty is lessthan " + parseInt(limit) + " for " + $("#" + rowId + "_Type_ID option:selected").text() + " in bom template");                                 $(e.target).css('background', 'red').focus();                                 return false;                             }                             else {                                 $(e.target).css('background', 'white');                                 $(e.target).val() == '' ? $(e.target).val(0) : $(e.target).val();                                 return true;                             }                         }                     }                 ]             }         },         { name: 'Limit', index: 'Limit', width: 20, align: "right", stype: 'text' },         { name: 'Compulsory', sortable: false, width: 40, index: 'Compulsory', align: "left" },         { name: 'Editable', index: 'Editable', width: 20, align: "left", stype: 'text' },         { name: 'Status', index: 'Status', align: "left", stype: 'text', hidden: true }],         gridComplete: function () {             var count = jQuery('#list1').jqGrid('getGridParam', 'records')             for (var i = 1; i &lt;= count; i++) {                 jQuery('#list1').jqGrid('editRow', i, true);                 var ret = jQuery("#list1").jqGrid('getRowData', i);                 GetOldCodebasedonTypeforBOM($("#" + i + "_Type_ID").val(), $("#ddlSeries").val(), $("#ddlSize").val(), $("#ddlBrand").val());                  $("#" + i + "_Item_Code_ID").addClass("chosen-select").trigger("chosen:updated");                 if (ret.Editable == 'false') $("#" + i + "_Qty").prop("disabled", true); else $("#" + i + "_Qty").prop("disabled", false);             }         },         height: 120,         width: 1230,         gridview: true,         hoverrows: true,         authwidth: true,         //pager: '#TPagered',         loadtext: "Loadingâ€¦",         loadonce: false,         data: Data,         hidegrid: false,         pagerpos: 'none',         caption: "TEMPLATE",         beforeSelectRow: function (rowid) {             if (rowid !== lastSel) {                 $(this).jqGrid('restoreRow', lastSel);                 lastSel = rowid;             }             return true;         }     });//.navGrid('#TPagered', { edit: false, add: false, del: false, search: false, refresh: false }); }  //Filling Template sizes function FillTemplateSize(SeriesId,id) {     $.ajax({         type: "POST",         contentType: "application/json; charset=utf-8",         url: "../ComboFill.aspx/FillSize",         data: "{Series_ID:" + SeriesId + "}",         dataType: "json",         success: function (data) {             htmlSize = '';             htmlSize = '0:Select Size';             $.each(data.d, function (key, value) {                 htmlSize += ";" + value.Id + ":" + value.Name;             });             $("#" + id + "_Size_ID").val(htmlSize);         },         error: function (result) { }     }); } </code></pre>  <p>Thanks in advance.</p>