<p>I have the following code:</p>  <pre><code>&lt;cfquery name="somequery1" datasource="somedsn"&gt;     SELECT somecolumn1, somecolumn2, somecolumn3      FROM sometable      WHERE someid = &lt;cfqueryparam cfsqltype="cf_sql_integer" value="1"&gt; &lt;/cfquery&gt;  &lt;cfquery name="somequery2" dbtype="query"&gt;     SELECT *     FROM somequery1 &lt;/cfquery&gt; </code></pre>  <p>My code manager says I need to change the Query of Query to:</p>  <pre><code>&lt;cfquery name="somequery2" dbtype="query"&gt;     SELECT somecolumn1, somecolumn2, somecolumn3      FROM somequery1 &lt;/cfquery&gt; </code></pre>  <p>Can someone explain why I would need to redefine the column references in the Query of Query? Surely, the wildcard operator takes care of this. </p>  <p>Is there any technical or performance gain to redefining the column references in the SELECT clause of a Coldfusion Query of Queries? This assumes that the column references have already been explicitly set in the database query that is supplied to the Query of Queries.</p>  <p>I believe the use of the wildcard operator makes the code cleaner and easier to update, because any changes to the column references only need to be done once.</p>