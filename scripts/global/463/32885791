<p>Hey guys i am stuck at a point .I have a situation where i need to upload the scaled image in different folder for example :- 1(small).jpg on small folder , 1(medium).jpg on medium folder and 1.jpg on uploads folder. Right now the code below is uploading all 3 images on different folders but the files are blob files.How to get the scaled image . (edited the code)</p>  <pre><code>&lt;cfset destinationDirectory = expandpath('/file_uploader/uploads')&gt; &lt;cfset counter = 1&gt;   &lt;cfset uniqueFileName = ""&gt;   &lt;cfset destinationFilePath = ""&gt;  &lt;cfset smallfile = ""&gt;   &lt;cfset mediumfile =""&gt;   &lt;cfset mainfile= ''&gt;  &lt;cfscript&gt;     variables.validMimeTypes =  {'image/jpeg': {extension: 'jpg'}                                 ,'image/png': {extension: 'png'}                                 ,'image/png': {extension: 'gif'}                                 }; &lt;/cfscript&gt;   &lt;cftry&gt;          &lt;cfset cnt= 1&gt;       &lt;cfset file_name = #qqfilename#&gt;         &lt;cfset file_size = #qqtotalfilesize#&gt;      &lt;!--- If a file with the same name already exists at the destination ---&gt;     &lt;cfif fileExists(destinationDirectory &amp; "/" &amp; file_name)&gt;            &lt;!--- Loop up to 100 times to try create a unique file_name ---&gt;                  &lt;cfset destinationFilePath = destinationDirectory &amp; "/" &amp; counter &amp; "_" &amp; file_name&gt;            &lt;!--- Loop up to 100 times to try create a unique filename ---&gt;               &lt;cfloop condition="counter LT 100"&gt;                     &lt;cfset destinationFilePath = destinationDirectory &amp; "/" &amp; counter &amp; "_" &amp; file_name&gt;                      &lt;cfif fileExists(destinationFilePath)&gt;                           &lt;cfset counter++&gt;                     &lt;cfelse&gt;                           &lt;cfset uniqueFileName = "IMG" &amp; counter &amp; "_" &amp; file_name&gt;                           &lt;cfbreak/&gt;                     &lt;/cfif&gt;               &lt;/cfloop&gt;      &lt;!--- Filename does not already exist at the destination ---&gt;     &lt;cfelse&gt;           &lt;cfset uniqueFileName = "IMG" &amp; "_" &amp; file_name&gt;           &lt;cfset destinationFilePath = destinationDirectory &amp; "/" &amp; file_name&gt;     &lt;/cfif&gt;             &lt;cfif len(trim(uniqueFileName))&gt;                     &lt;cfset session.cntr ++&gt;                     &lt;cfif  find("(small)",file_name) neq 0&gt;                         &lt;cfset smallfile = file_name&gt;                         &lt;cffile                                 action="upload"                                 destination="#UploadPath2#"                                 accept="#StructKeyList(variables.validMimeTypes)#"                                 nameconflict="#smallfile#"                                 &gt;                     &lt;cfelseif find("(medium)",file_name) neq 0&gt;                         &lt;cfset mediumfile = file_name&gt;                         &lt;cffile                                 action="upload"                                 filefield="qqfile"                                 destination="#UploadPath1#"                                 accept="#StructKeyList(variables.validMimeTypes)#"                                 nameconflict="#uniqueFileName#"                                 &gt;                      &lt;cfelse&gt;                         &lt;cfset mainfile= file_name&gt;                         &lt;cffile                                 action="upload"                                 filefield="qqfile"                                 destination="#destinationFilePath#"                                 accept="#StructKeyList(variables.validMimeTypes)#"                                 nameconflict="#uniqueFileName#"                                 &gt;                     &lt;/cfif&gt;                      &lt;CFSET local.response['success'] = true &gt;                     &lt;CFSET local.response['type'] = 'xhr' &gt;                     &lt;CFSET local.response['obj'] = session.cntr &gt;               &lt;cfelse&gt;                     &lt;CFSET local.response['error'] = 'Unable to move the file and create a unique file_name at the destination'&gt;             &lt;/cfif&gt;     &lt;cfoutput&gt;         #serializeJSON(local.response,true)#     &lt;/cfoutput&gt;               &lt;cfabort/&gt;   &lt;cfcatch type="any"&gt;          &lt;cfoutput&gt; #serializeJSON(session.cntr,true)# &lt;/cfoutput&gt;     &lt;cfabort/&gt; &lt;/cfcatch&gt; &lt;/cftry&gt; </code></pre>  <p>below is the UI page </p>  <pre><code> &lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt;      &lt;meta charset="utf-8"&gt;      &lt;meta name="viewport" content="width=device-width, initial-scale=1"&gt;      &lt;!-- jQuery      ====================================================================== --&gt;      &lt;script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js"&gt;&lt;/script&gt;      &lt;!-- Fine Uploader Gallery CSS file      ====================================================================== --&gt;      &lt;link href="../file_uploader/includes/fine-uploader-gallery.css" rel="stylesheet"&gt;       &lt;!-- Fine Uploader JS file      ====================================================================== --&gt;      &lt;script src="../file_uploader/includes/all.fine-uploader.js"&gt;&lt;/script&gt;     &lt;script src="../file_uploader/includes/all.fine-uploader.min.js"&gt;&lt;/script&gt;      &lt;script src="../file_uploader/includes/jquery.fine-uploader.js"&gt;&lt;/script&gt;     &lt;script src="../file_uploader/includes/jquery.fine-uploader.min.js"&gt;&lt;/script&gt;         &lt;!-- Fine Uploader Gallery template      ====================================================================== --&gt;      &lt;script type="text/template" id="qq-template-gallery"&gt;      &lt;div class="qq-uploader-selector qq-uploader qq-gallery" qq-drop-area-text="Drop files here"&gt;     &lt;div class="qq-total-progress-bar-container-selector qq-total-progress-bar-container"&gt;                  &lt;div role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" class="qq-total-progress-bar-selector qq-progress-bar qq-total-progress-bar"&gt;&lt;/div&gt;              &lt;/div&gt;              &lt;div class="qq-upload-drop-area-selector qq-upload-drop-area" qq-hide-dropzone&gt;                  &lt;span class="qq-upload-drop-area-text-selector"&gt;&lt;/span&gt;              &lt;/div&gt;              &lt;div class="qq-upload-button-selector qq-upload-button"&gt;                  &lt;div&gt;Upload a file &lt;/div&gt;              &lt;/div&gt;              &lt;span class="qq-drop-processing-selector qq-drop-processing"&gt;               &lt;span&gt;Processing dropped files...&lt;/span&gt;            &lt;span class="qq-drop-processing-spinner-selector qq-drop-processing-spinner"&gt;&lt;/span&gt;              &lt;/span&gt;              &lt;ul class="qq-upload-list-selector qq-upload-list" role="region" aria-live="polite" aria-relevant="additions removals"&gt;                  &lt;li&gt;                      &lt;span role="status" class="qq-upload-status-text-selector qq-upload-status-text"&gt;&lt;/span&gt;                      &lt;div class="qq-progress-bar-container-selector qq-progress-bar-container"&gt;                          &lt;div role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" class="qq-progress-bar-selector qq-progress-bar"&gt;&lt;/div&gt;                      &lt;/div&gt;                      &lt;span class="qq-upload-spinner-selector qq-upload-spinner"&gt;&lt;/span&gt;                      &lt;div class="qq-thumbnail-wrapper"&gt;                          &lt;img class="qq-thumbnail-selector" qq-max-size="120" qq-server-scale&gt;                      &lt;/div&gt;                      &lt;button type="button" class="qq-upload-cancel-selector qq-upload-cancel"&gt;X&lt;/button&gt;                      &lt;button type="button" class="qq-upload-retry-selector qq-upload-retry"&gt;                          &lt;span class="qq-btn qq-retry-icon" aria-label="Retry"&gt;&lt;/span&gt;                          Retry                      &lt;/button&gt;                       &lt;div class="qq-file-info"&gt;                          &lt;div class="qq-file-name"&gt;                              &lt;span class="qq-upload-file-selector qq-upload-file"&gt;&lt;/span&gt;                             &lt;span class="qq-edit-filename-icon-selector qq-edit-filename-icon" aria-label="Edit filename"&gt;&lt;/span&gt;                          &lt;/div&gt;                          &lt;input class="qq-edit-filename-selector qq-edit-filename" tabindex="0" type="text"&gt;                          &lt;span class="qq-upload-size-selector qq-upload-size"&gt;&lt;/span&gt;                          &lt;button type="button" class="qq-btn qq-upload-delete-selector qq-upload-delete"&gt;                              &lt;span class="qq-btn qq-delete-icon" aria-label="Delete"&gt;&lt;/span&gt;                          &lt;/button&gt;                          &lt;button type="button" class="qq-btn qq-upload-pause-selector qq-upload-pause"&gt;                              &lt;span class="qq-btn qq-pause-icon" aria-label="Pause"&gt;&lt;/span&gt;                          &lt;/button&gt;                          &lt;button type="button" class="qq-btn qq-upload-continue-selector qq-upload-continue"&gt;                              &lt;span class="qq-btn qq-continue-icon" aria-label="Continue"&gt;&lt;/span&gt;                          &lt;/button&gt;                      &lt;/div&gt;                  &lt;/li&gt;              &lt;/ul&gt;               &lt;dialog class="qq-alert-dialog-selector"&gt;                  &lt;div class="qq-dialog-message-selector"&gt;&lt;/div&gt;                  &lt;div class="qq-dialog-buttons"&gt;                      &lt;button type="button" class="qq-cancel-button-selector"&gt;Close&lt;/button&gt;                  &lt;/div&gt;              &lt;/dialog&gt;               &lt;dialog class="qq-confirm-dialog-selector"&gt;                  &lt;div class="qq-dialog-message-selector"&gt;&lt;/div&gt;                  &lt;div class="qq-dialog-buttons"&gt;                      &lt;button type="button" class="qq-cancel-button-selector"&gt;No&lt;/button&gt;                      &lt;button type="button" class="qq-ok-button-selector"&gt;Yes&lt;/button&gt;                  &lt;/div&gt;              &lt;/dialog&gt;               &lt;dialog class="qq-prompt-dialog-selector"&gt;                  &lt;div class="qq-dialog-message-selector"&gt;&lt;/div&gt;                  &lt;input type="text"&gt;                  &lt;div class="qq-dialog-buttons"&gt;        &lt;button type="button" class="qq-cancel-button-selector"&gt;Cancel&lt;/button&gt;                 &lt;button type="button" class="qq-ok-button-selector"&gt;Ok&lt;/button&gt;                  &lt;/div&gt;              &lt;/dialog&gt;          &lt;/div&gt;      &lt;/script&gt;       &lt;title&gt;Fine Uploader Gallery View Demo&lt;/title&gt; &lt;/head&gt; &lt;body&gt;       &lt;!-- Fine Uploader DOM Element      ====================================================================== --&gt;      &lt;div id="fine-uploader-gallery"&gt;&lt;/div&gt;       &lt;!-- Your code to create an instance of Fine Uploader and bind to the DOM/template      ====================================================================== --&gt;      &lt;script&gt;       var posturl = "../file_uploader/upload_file.cfm";       var t= 0;          var galleryUploader = new qq.FineUploader({              element: document.getElementById("fine-uploader-gallery"),              //debug: true,              autoUpload: false,              template: 'qq-template-gallery',              request:              {                // endpoint: '../file_uploader/upload_file.cfm?id=&lt;cfoutput&gt;#session.cntr#&lt;/cfoutput&gt;'                 endpoint: posturl              },              thumbnails:              {                  placeholders:                  {                      waitingPath: '../file_uploader/includes/placeholders/waiting-generic.png',                      notAvailablePath: '../file_uploader/includes/placeholders/not_available-generic.png'                  }              },              validation:              {                  allowedExtensions: ['jpeg', 'jpg', 'gif', 'png']              },              callbacks:          {                 onComplete: function(id, name, responseJSON , xhrOrXdr)                 {                          if (responseJSON.success)                         {                              t++;                          alert("success"+t);                          uploadSuccess: {                             endpoint: "../file_uploader/upload_file.cfm?id=1"                                 }                         }                 },                  onError: function(id, name, errorReason, xhrOrXdr)                 {                     alert(qq.format("Error on file number {} - {}.  Reason: {}", id, name, errorReason));                 }              },               scaling:              {                 //hideScaled: true,                 sizes:                 [                     {name: "small", maxSize: 100},                     {name: "medium", maxSize: 300}                 ]              }           });      &lt;/script&gt; &lt;/body&gt; &lt;/html&gt; </code></pre>