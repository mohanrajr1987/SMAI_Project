<p>OK guys.. I'm a little stumped on this one..</p>  <p>I have a table of items in locations that I am consolidating. The items are spread between different rows (like a warehouse). I have calculated what to send where, and the distance between the starting and ending position. </p>  <p>Now, I need to develop a report that starts with the shortest move, then from its FINISH location finds the next shortest move with a START location closest to the first moves FINISH location... so if I move obj A from warehouse row 20 to row 30, I want my next line to be the next closest move, probably in row 30, that is also the shortest distance. </p>  <pre><code>item | start_loc | end_loc | distance A    | 5         | 10      | 5 B    | 14        | 11      | 3 C    | 20        | 1       | 19 D    | 10        | 13      | 3 E    | 10        | 5       | 5 F    | 10        | 6       | 4 </code></pre>  <p>So the table above would be ordered</p>  <blockquote>   <p>D, B, F, A, E, C</p> </blockquote>  <p>Basically I want to optimize the amount of trips and spend the least amount of time empty handed..</p>  <p>Using ColdFusion and SQL to do this..</p>  <p>Edit from comments below: I'll try to clarify further.. The table above would be ordered D, B, F, A, E, C because:  D has the shortest distance - 3;  B is the next closes to D's end (13 --> 14);  F because move B ends at 11, 10 is the next closest row with a move, and F has the shortest move distance in that row; A bc F ends at 6, and A starts at 5;  E bc A ends at 10 and E starts on 10;  C because it is the most inconvenient (longest, nothing ends by it) so it's last</p>  <p><strong>UPDATE:</strong> I adapted the selected answer below to work with my tables etc.. however, it is skipping one of the rows, and I'm not sure why?</p>  <pre><code>    &lt;!-- Add some columns to the working table for calculations --&gt; &lt;cfquery name="updateWorking" datasource="planning" dbtype="obdc"&gt;      ALTER TABLE working     ADD move_distance FLOAT;      ALTER TABLE working     ADD start_loc FLOAT;      ALTER TABLE working     ADD finish_loc FLOAT;      ALTER TABLE working     ADD move_order INT;  &lt;/cfquery&gt; &lt;cfquery name="updateWorking2" datasource="planning" dbtype="obdc"&gt;      UPDATE working     SET start_loc = LEFT(Storage_Bin, 5)     WHERE marked_consolidate_loc IS NOT NULL;      UPDATE working     SET finish_loc = LEFT(marked_consolidate_loc, 5)     WHERE marked_consolidate_loc IS NOT NULL;      UPDATE working     SET move_distance = finish_loc - start_loc     WHERE marked_consolidate_loc IS NOT NULL;      UPDATE working     SET move_distance = ABS(move_distance)     where move_distance &lt; 0  &lt;/cfquery&gt;   &lt;!-- Query to show all the moves in order by distance, shortest first --&gt; &lt;cfquery name="report" datasource="planning" dbtype="obdc"&gt;     SELECT  id, Material, marked_consolidate, marked_consolidate_loc, marked_consolidate_su,             max_pallet, mixed_skid, Storage_Bin, Storage_Unit, move_distance, finish_loc, start_loc     FROM working     WHERE marked_consolidate IS NOT NULL     AND mixed_skid = 0     ORDER BY move_distance ASC &lt;/cfquery&gt; &lt;!-- What is the shortest move? Do it first --&gt; &lt;cfquery name="firstMove" datasource="planning" dbtype="obdc" maxRows="1"&gt;     Select id, Material, marked_consolidate, marked_consolidate_loc, marked_consolidate_su,             max_pallet, mixed_skid, Storage_Bin, Storage_Unit, move_distance, finish_loc, start_loc     FROM working     WHERE marked_consolidate IS NOT NULL     AND mixed_skid = 0     ORDER BY move_distance ASC, start_loc ASC &lt;/cfquery&gt;  &lt;!--- set the Move Number ---&gt; &lt;cfset moveNumber = 1&gt; &lt;!-- List to remember ID of moves that have been completed --&gt; &lt;cfset tripSequence = ''&gt;  &lt;!-- Update the first selection as the first move --&gt; &lt;cfquery name= "updateMove" datasource="planning" dbtype="obdc"&gt;     UPDATE working     SET move_order = #moveNumber#     WHERE id = #firstMove.id#; &lt;/cfquery&gt;  &lt;cfset moveNumber = moveNumber + 1&gt; &lt;cfset tripSequence = ListAppend(tripSequence, "#firstMove.id#")&gt; &lt;cfset lastMoveFinish = #firstMove.finish_loc#&gt;  &lt;!--- number of trips remaining ---&gt; &lt;cfset numberOfTrips = (report.recordCount) - 1&gt;  &lt;!-- Loop through the whole table --&gt; &lt;cfloop from="1" to="#numberOfTrips#" index="i"&gt;     &lt;!--- determine next move to compare to ---&gt;     &lt;cfloop query="report"&gt;         &lt;!--- Has it been moved already?---&gt;         &lt;cfif listContains(tripSequence, #report.id#)&gt;             &lt;!-- If so, continue to next row --&gt;             &lt;cfcontinue&gt;         &lt;/cfif&gt;         &lt;!-- If not, remember this one --&gt;         &lt;cfset nextLocationID = report.id&gt;         &lt;cfset nextLocationFinishLoc = report.finish_loc&gt;         &lt;cfset nextLocationDist = abs(lastMoveFinish - report.start_loc)&gt;     &lt;/cfloop&gt;      &lt;!--- compare this move with other moves, if the next one is shorter remember it ---&gt;     &lt;cfloop query="report"&gt;         &lt;!--- Has it been moved already? ---&gt;         &lt;cfif listContains(tripSequence, #report.id#)&gt;             &lt;cfcontinue&gt;         &lt;/cfif&gt;         &lt;!-- How far is this move from your current location? --&gt;         &lt;cfset nextLocationDistance = abs(lastMoveFinish - report.start_loc)&gt;         &lt;!-- If this move is closer to you than the one you selected above, remember it instead --&gt;         &lt;cfif nextLocationDistance LT nextLocationDist&gt;             &lt;cfset nextLocationID = report.id&gt;             &lt;cfset nextLocationFinishLoc = report.finish_loc&gt;             &lt;cfset nextLocationDist = abs(lastMoveFinish - report.start_loc)&gt;         &lt;/cfif&gt;     &lt;/cfloop&gt;      &lt;!-- once you have the closest move, remember it and update the column --&gt;     &lt;cfset tripSequence = ListAppend(tripSequence, nextLocationID)&gt;     &lt;!-- Update the move column --&gt;     &lt;cfquery name= "updateMove" datasource="planning" dbtype="obdc"&gt;         UPDATE working         SET move_order = #moveNumber#         WHERE id = #nextLocationID#;     &lt;/cfquery&gt;     &lt;!-- Increment the Move Number --&gt;     &lt;cfset moveNumber = moveNumber + 1&gt;      &lt;!--- set the ending of your last move ---&gt;     &lt;cfset lastMoveFinish = nextLocationFinishLoc&gt; &lt;/cfloop&gt;  &lt;!-- BELOW IS OUTPUT OF THE REPORT --&gt; &lt;body&gt;     &lt;!-- Build the report --&gt;     &lt;table border='1'&gt;         &lt;tr&gt;             &lt;th colspan="7"&gt;                 &lt;h2&gt;Consolidation Report&lt;/h2&gt;             &lt;/th&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;Move Order&lt;/td&gt;             &lt;td&gt;Current Loc&lt;/td&gt;             &lt;td&gt;Current SU&lt;/td&gt;             &lt;td&gt;Item Number&lt;/td&gt;             &lt;td&gt;Qty To Move&lt;/td&gt;             &lt;td&gt;Moved To Loc&lt;/td&gt;             &lt;td&gt;Moved To SU&lt;/td&gt;         &lt;/tr&gt;          &lt;!-- Query to show all the moves in order by distance, shortest first --&gt;         &lt;cfquery name="showReport" datasource="planning" dbtype="obdc"&gt;                 SELECT Material, marked_consolidate, marked_consolidate_loc, marked_consolidate_su,                         Storage_Bin, Storage_Unit, move_order                 FROM working                 WHERE marked_consolidate IS NOT NULL                 AND mixed_skid = 0                 ORDER BY move_order         &lt;/cfquery&gt;          &lt;cfloop query="showReport"&gt;             &lt;tr&gt;                 &lt;cfoutput&gt;                     &lt;td&gt;#showReport.move_order#&lt;/td&gt;                     &lt;td&gt;#showReport.Storage_Bin#&lt;/td&gt;                     &lt;td&gt;#showReport.Storage_Unit#&lt;/td&gt;                     &lt;td&gt;#showReport.Material#&lt;/td&gt;                     &lt;td&gt;#showReport.marked_consolidate#&lt;/td&gt;                     &lt;td&gt;#showReport.marked_consolidate_loc#&lt;/td&gt;                     &lt;td&gt;#showReport.marked_consolidate_su#&lt;/td&gt;                 &lt;/cfoutput&gt;             &lt;/tr&gt;         &lt;/cfloop&gt;     &lt;/table&gt;     &lt;cfoutput&gt;#tripSequence#&lt;/cfoutput&gt; &lt;body&gt; </code></pre>  <p>The output is a table with 49 rows.. however one of the rows Move Number is empty, and it skips Move Number: 48. Thoughts? </p>  <p>All rows are logically correct, it's just skipping 48 and not putting the Null row where it should be (logically would be around move 30).</p>