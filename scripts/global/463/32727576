<p>We've just upgraded to CF10, and I'm finishing up a library of "missing" utility functions (mostly iteration-related, like <code>map</code> and <code>reduce</code>). These functions should always be available on every page and in every component in the application. They are methods of a stateless component that's basically acting as a module or namespace.</p>  <p>I have taken after Underscore and its ilk by referring to the component as <code>_</code>. So, usage looks like <code>_.map(myArray, myCallback);</code>. My question is where I should put the <code>_</code> variable. I can start every page with <code>variables._ = new Shared.Components.Util.FunctionalUtil();</code>, but that's annoying and we're going to end up with a lot of useless copies. I'd like to have it declared globally and initialized no more than once per request.</p>  <p>ColdFusion's "global" scopes are: CGI, URL, Form, Cookie, Client. These are the scopes used for name resolution that share their values across a request. Of these, the CGI, URL, and Form scopes run the risk of collision and the Cookie scope actually stores data on the client; this leaves Client. However, components cannot be stored in Client scope. In fact, the only ones that seem to work are URL and Form, and Form doesn't always exist.</p>  <p>Now, stuffing a utility component into URL kind of seems like a questionable thing to do. Is there a saner alternative?</p>