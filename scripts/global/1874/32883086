<p>I have a textbox which has an animation but i want it to stop that animation if the textbox has text and start again if the textbox doesn't have text? But i'm not sure if this is possible as the animation is linked to another textbox? </p>  <p>TextBoxStyle1 is the animation.</p>  <p>TextBoxStyle2 is where the text input will be. </p>  <p>Here is my code; </p>  <pre><code> &lt;Window.Resources&gt;      &lt;BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" /&gt;     &lt;local:TextInputToVisibilityConverter x:Key="TextInputToVisibilityConverter" /&gt;      &lt;Storyboard x:Key="StoryboardBorder"&gt;         &lt;ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="border"&gt;             &lt;EasingColorKeyFrame KeyTime="0" Value="#FFABADB3"/&gt;             &lt;EasingColorKeyFrame KeyTime="0:0:0.6" Value="#FF00BCD4"/&gt;         &lt;/ColorAnimationUsingKeyFrames&gt;     &lt;/Storyboard&gt;       &lt;FontFamily x:Key="MainFont"&gt;Arial&lt;/FontFamily&gt;      &lt;SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/&gt;     &lt;SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FFC1C1C1"/&gt;     &lt;SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF00BCD4"/&gt;       &lt;Style x:Key="TextBoxStyle1" TargetType="{x:Type TextBox}"&gt;         &lt;Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/&gt;         &lt;Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/&gt;         &lt;Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/&gt;         &lt;Setter Property="FontFamily" Value="{StaticResource MainFont}"/&gt;         &lt;Setter Property="BorderThickness" Value="1"/&gt;         &lt;Setter Property="KeyboardNavigation.TabNavigation" Value="None"/&gt;         &lt;Setter Property="HorizontalContentAlignment" Value="Left"/&gt;         &lt;Setter Property="FocusVisualStyle" Value="{x:Null}"/&gt;         &lt;Setter Property="AllowDrop" Value="true"/&gt;         &lt;Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/&gt;         &lt;Setter Property="Stylus.IsFlicksEnabled" Value="False"/&gt;         &lt;Setter Property="Template"&gt;             &lt;Setter.Value&gt;                 &lt;ControlTemplate TargetType="{x:Type TextBox}"&gt;                     &lt;ControlTemplate.Resources&gt;                         &lt;Storyboard x:Key="StoryboardTextAnimation"&gt;                             &lt;DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="TextBox"&gt;                                 &lt;EasingDoubleKeyFrame KeyTime="0" Value="0"/&gt;                                 &lt;EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-23.333"/&gt;                             &lt;/DoubleAnimationUsingKeyFrames&gt;                             &lt;DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="TextBox"&gt;                                 &lt;EasingDoubleKeyFrame KeyTime="0" Value="1"/&gt;                                 &lt;EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.76"/&gt;                             &lt;/DoubleAnimationUsingKeyFrames&gt;                             &lt;DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="TextBox"&gt;                                 &lt;EasingDoubleKeyFrame KeyTime="0" Value="1"/&gt;                                 &lt;EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.76"/&gt;                             &lt;/DoubleAnimationUsingKeyFrames&gt;                             &lt;DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="TextBox"&gt;                                 &lt;EasingDoubleKeyFrame KeyTime="0" Value="0"/&gt;                                 &lt;EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-25.597"/&gt;                             &lt;/DoubleAnimationUsingKeyFrames&gt;                             &lt;ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="TextBox"&gt;                                 &lt;EasingColorKeyFrame KeyTime="0" Value="#FF8B8B8B"/&gt;                                 &lt;EasingColorKeyFrame KeyTime="0:0:0.2" Value="#FF00BCD4"/&gt;                             &lt;/ColorAnimationUsingKeyFrames&gt;                         &lt;/Storyboard&gt;                         &lt;Storyboard x:Key="StoryboardTextAnimation_Copy1"&gt;                             &lt;DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="TextBox"&gt;                                 &lt;SplineDoubleKeyFrame KeyTime="0" Value="-23.333"/&gt;                                 &lt;SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/&gt;                             &lt;/DoubleAnimationUsingKeyFrames&gt;                             &lt;DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="TextBox"&gt;                                 &lt;SplineDoubleKeyFrame KeyTime="0" Value="0.76"/&gt;                                 &lt;SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/&gt;                             &lt;/DoubleAnimationUsingKeyFrames&gt;                             &lt;DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="TextBox"&gt;                                 &lt;SplineDoubleKeyFrame KeyTime="0" Value="0.76"/&gt;                                 &lt;SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/&gt;                             &lt;/DoubleAnimationUsingKeyFrames&gt;                             &lt;DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="TextBox"&gt;                                 &lt;SplineDoubleKeyFrame KeyTime="0" Value="-25.597"/&gt;                                 &lt;SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/&gt;                             &lt;/DoubleAnimationUsingKeyFrames&gt;                             &lt;ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="TextBox"&gt;                                 &lt;SplineColorKeyFrame KeyTime="0" Value="#FF00BCD4"/&gt;                                 &lt;SplineColorKeyFrame KeyTime="0:0:0.2" Value="#FFC1C1C1"/&gt;                             &lt;/ColorAnimationUsingKeyFrames&gt;                         &lt;/Storyboard&gt;                      &lt;/ControlTemplate.Resources&gt;                      &lt;Border x:Name="border" SnapsToDevicePixels="True" BorderThickness="0,0,0,2" BorderBrush="Transparent"&gt;                         &lt;ScrollViewer x:Name="TextBox" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" RenderTransformOrigin="0.5,0.5" Content="Floating Label Text" Background="White" Margin="0,3.75,0,3.25"&gt;                             &lt;ScrollViewer.RenderTransform&gt;                                 &lt;TransformGroup&gt;                                     &lt;ScaleTransform/&gt;                                     &lt;SkewTransform/&gt;                                     &lt;RotateTransform/&gt;                                     &lt;TranslateTransform/&gt;                                 &lt;/TransformGroup&gt;                             &lt;/ScrollViewer.RenderTransform&gt;                         &lt;/ScrollViewer&gt;                     &lt;/Border&gt;                     &lt;ControlTemplate.Triggers&gt;                         &lt;Trigger Property="IsEnabled" Value="false"&gt;                             &lt;Setter Property="Opacity" TargetName="border" Value="0.56"/&gt;                             &lt;Setter Property="Text" Value="{x:Null}" /&gt;                          &lt;/Trigger&gt;                         &lt;Trigger Property="IsMouseOver" Value="true"&gt;                             &lt;Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/&gt;                         &lt;/Trigger&gt;                         &lt;Trigger Property="IsKeyboardFocused" Value="true"&gt;                             &lt;Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/&gt;                           &lt;/Trigger&gt;                          &lt;Trigger Property="IsKeyboardFocused" Value="False"&gt;                             &lt;Setter Property="Text" Value="{x:Null}" /&gt;                           &lt;/Trigger&gt;                           &lt;DataTrigger Binding="{Binding IsKeyboardFocusWithin, RelativeSource={RelativeSource AncestorType={x:Type Grid}}}"          Value="True"&gt;                              &lt;DataTrigger.EnterActions&gt;                                 &lt;BeginStoryboard Storyboard="{StaticResource StoryboardBorder}" /&gt;                                 &lt;BeginStoryboard Storyboard="{StaticResource StoryboardTextAnimation}" /&gt;                             &lt;/DataTrigger.EnterActions&gt;                              &lt;DataTrigger.ExitActions&gt;                                  &lt;BeginStoryboard Storyboard="{StaticResource StoryboardTextAnimation_Copy1}" /&gt;                             &lt;/DataTrigger.ExitActions&gt;                          &lt;/DataTrigger&gt;                       &lt;/ControlTemplate.Triggers&gt;                 &lt;/ControlTemplate&gt;             &lt;/Setter.Value&gt;         &lt;/Setter&gt;         &lt;Style.Triggers&gt;             &lt;MultiTrigger&gt;                 &lt;MultiTrigger.Conditions&gt;                     &lt;Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/&gt;                     &lt;Condition Property="IsSelectionActive" Value="false"/&gt;                 &lt;/MultiTrigger.Conditions&gt;                 &lt;Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/&gt;             &lt;/MultiTrigger&gt;         &lt;/Style.Triggers&gt;     &lt;/Style&gt;       &lt;SolidColorBrush x:Key="brushWatermarkForeground" Color="LightGray" /&gt;       &lt;SolidColorBrush x:Key="TextBox.MouseOver.Border2" Color="#FF7EB4EA"/&gt;     &lt;Style x:Key="TextBoxStyleNew" TargetType="{x:Type TextBox}"&gt;         &lt;Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/&gt;         &lt;Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/&gt;         &lt;Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/&gt;         &lt;Setter Property="BorderThickness" Value="1"/&gt;         &lt;Setter Property="KeyboardNavigation.TabNavigation" Value="None"/&gt;         &lt;Setter Property="HorizontalContentAlignment" Value="Left"/&gt;         &lt;Setter Property="FocusVisualStyle" Value="{x:Null}"/&gt;         &lt;Setter Property="AllowDrop" Value="true"/&gt;         &lt;Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/&gt;         &lt;Setter Property="Stylus.IsFlicksEnabled" Value="False"/&gt;         &lt;Setter Property="Template"&gt;             &lt;Setter.Value&gt;                 &lt;ControlTemplate TargetType="{x:Type TextBox}"&gt;                     &lt;ControlTemplate.Resources&gt;                         &lt;Storyboard x:Key="StoryboardAnimateText"/&gt;                     &lt;/ControlTemplate.Resources&gt;                     &lt;Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" BorderThickness="0,0,0,2" Margin="0,-5,0,0"&gt;                         &lt;ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/&gt;                     &lt;/Border&gt;                     &lt;ControlTemplate.Triggers&gt;                         &lt;Trigger Property="IsEnabled" Value="false"&gt;                             &lt;Setter Property="Opacity" TargetName="border" Value="0.56"/&gt;                         &lt;/Trigger&gt;                         &lt;Trigger Property="IsMouseOver" Value="true"&gt;                             &lt;Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border2}"/&gt;                             &lt;Setter Property="BorderThickness" TargetName="border" Value="0"/&gt;                         &lt;/Trigger&gt;                         &lt;Trigger Property="IsKeyboardFocused" Value="true"&gt;                             &lt;Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/&gt;                             &lt;Setter Property="BorderThickness" TargetName="border" Value="0"/&gt;                          &lt;/Trigger&gt;                     &lt;/ControlTemplate.Triggers&gt;                 &lt;/ControlTemplate&gt;             &lt;/Setter.Value&gt;         &lt;/Setter&gt;         &lt;Style.Triggers&gt;             &lt;MultiTrigger&gt;                 &lt;MultiTrigger.Conditions&gt;                     &lt;Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/&gt;                     &lt;Condition Property="IsSelectionActive" Value="false"/&gt;                 &lt;/MultiTrigger.Conditions&gt;                 &lt;Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/&gt;             &lt;/MultiTrigger&gt;         &lt;/Style.Triggers&gt;     &lt;/Style&gt;     &lt;Style x:Key="TextBlockStyle1" TargetType="{x:Type TextBlock}"&gt;         &lt;Setter Property="TextWrapping" Value="NoWrap"/&gt;         &lt;Setter Property="TextTrimming" Value="None"/&gt;     &lt;/Style&gt;     &lt;SolidColorBrush x:Key="TextBox.MouseOver.Border3" Color="#FF00BCD4"/&gt;     &lt;SolidColorBrush x:Key="TextBox.Focus.Border2" Color="#FF00BCD4"/&gt;       &lt;Style x:Key="TextBoxStyle2" TargetType="{x:Type TextBox}"&gt;         &lt;Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/&gt;         &lt;Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/&gt;         &lt;Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/&gt;         &lt;Setter Property="BorderThickness" Value="1"/&gt;         &lt;Setter Property="KeyboardNavigation.TabNavigation" Value="None"/&gt;         &lt;Setter Property="HorizontalContentAlignment" Value="Left"/&gt;         &lt;Setter Property="FocusVisualStyle" Value="{x:Null}"/&gt;         &lt;Setter Property="AllowDrop" Value="true"/&gt;         &lt;Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/&gt;         &lt;Setter Property="Stylus.IsFlicksEnabled" Value="False"/&gt;         &lt;Setter Property="Template"&gt;             &lt;Setter.Value&gt;                 &lt;ControlTemplate TargetType="{x:Type TextBox}"&gt;                     &lt;Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True"&gt;                         &lt;ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/&gt;                     &lt;/Border&gt;                     &lt;ControlTemplate.Triggers&gt;                         &lt;Trigger Property="IsEnabled" Value="false"&gt;                             &lt;Setter Property="Opacity" TargetName="border" Value="0.56"/&gt;                         &lt;/Trigger&gt;                         &lt;Trigger Property="IsMouseOver" Value="true"&gt;                             &lt;Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/&gt;                         &lt;/Trigger&gt;                         &lt;Trigger Property="IsKeyboardFocused" Value="true"&gt;                             &lt;Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/&gt;                           &lt;/Trigger&gt;                     &lt;/ControlTemplate.Triggers&gt;                 &lt;/ControlTemplate&gt;             &lt;/Setter.Value&gt;         &lt;/Setter&gt;         &lt;Style.Triggers&gt;             &lt;MultiTrigger&gt;                 &lt;MultiTrigger.Conditions&gt;                     &lt;Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/&gt;                     &lt;Condition Property="IsSelectionActive" Value="false"/&gt;                 &lt;/MultiTrigger.Conditions&gt;                 &lt;Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/&gt;             &lt;/MultiTrigger&gt;         &lt;/Style.Triggers&gt;     &lt;/Style&gt;    &lt;/Window.Resources&gt;    &lt;Grid Name="grid1" Focusable="True"&gt;      &lt;Grid x:Name="TextBoxes" Margin="23.75,0,-23.75,0"&gt;         &lt;TextBlock Margin="250.449,182.112,374.044,0"   Text="Hint Text" Foreground="{StaticResource brushWatermarkForeground}"                Visibility="{Binding ElementName=txtUserEntry, Path=Text.IsEmpty, Converter={StaticResource BooleanToVisibilityConverter}}" Height="19.725" VerticalAlignment="Top" Style="{DynamicResource TextBlockStyle1}" /&gt;         &lt;TextBox Name="txtUserEntry"  Background="Transparent" BorderBrush="#FFC1C1C1" Margin="250.449,182.112,352.952,0" Height="25.689" VerticalAlignment="Top" BorderThickness="0,0,0,2" Style="{DynamicResource TextBoxStyle2}" /&gt;         &lt;TextBox x:Name="textBox1" Text="Floating Label Text"   Height="25.689" VerticalAlignment="Top" Margin="250.449,182.112,352.952,0" Style="{DynamicResource TextBoxStyle1}" BorderThickness="1" Foreground="#FFC1C1C1" Background="White" BorderBrush="#FFC1C1C1"/&gt;     &lt;/Grid&gt;  &lt;/Grid&gt; </code></pre>  <p></p>