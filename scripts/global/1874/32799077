<p><a href="http://i.stack.imgur.com/TOQOW.png" rel="nofollow"><img src="http://i.stack.imgur.com/TOQOW.png" alt="enter image description here"></a></p>  <p>Above is the screenshot what I am try to achieve when user press generate i want to generate all possible combination in that order of keyword 1 + keyword 2 + keyword 3.</p>  <p>example in this case if user generate results should be</p>  <p>top knee brace top leg brace best knee brace best leg brace cat knee brace cat leg brace</p>  <p>depending on the text entered i trying to generate all possible combinations but stuck since I am not able to figure logic.</p>  <p>this what I have done so far </p>  <ol> <li><p>I created 3 different lists and add textbox lines to their appropriate list (list 1 contains - top,best,cat), (list 2 contains - knee, leg) and (list 3 contains - brace)</p></li> <li><p>created class which accepts three list parameters and try generate all possible combination using for loop and finally removing all duplicates but for loop logic is not working.</p></li> </ol>  <p>code-</p>  <pre><code>public List&lt;string&gt; CombineKeywords(List&lt;string&gt; keyword1, List&lt;string&gt; keyword2, List&lt;string&gt; keyword3)     {         List&lt;string&gt; combinedKeywords = new List&lt;string&gt;();          for (int entryKeyword1 = 0; entryKeyword1 &lt; keyword1.Count; entryKeyword1++)         {             combinedKeywords.Add(String.Concat(keyword1[entryKeyword1], " ", keyword2[entryKeyword1], " ", keyword3[entryKeyword1]));              for (int entryKeyword2 = 0; entryKeyword2 &lt; keyword2.Count; entryKeyword2++)             {                 combinedKeywords.Add(String.Concat(keyword1[entryKeyword1], " ", keyword2[entryKeyword2], " ", keyword3[entryKeyword1]));                  for (int entryKeyword3 = 0; entryKeyword3 &lt; keyword3.Count; entryKeyword3++)                 {                     combinedKeywords.Add(String.Concat(keyword1[entryKeyword1], " ", keyword2[entryKeyword1], " ", keyword3[entryKeyword3]));                 }             }         }          List&lt;string&gt; uniquecombinedKeywords = combinedKeywords.Distinct().ToList();         return uniquecombinedKeywords; </code></pre>