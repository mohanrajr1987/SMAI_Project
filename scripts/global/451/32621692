<p>I understand the differences between floating point and double...I think but I'm having issues with my code, and I have figured out the problem I just don't know how to fix it. So the assignment asks you to use a simple loop to add 0.01 + 0.02+0.03....+10,000,000, once using floating point numbers with double precision, and a second time the correct way. My issue becomes when I add using a floating point number it basically maxes out at around 200,000 which I remember the teacher talking about but I don't remember him talking about a way around it. Also for some reason my output is in scientific notation and I can't seem to get it into fixed point notation with 2 digits. I hope this makes sense.</p>  <p>Sorry I forgot to add what I have done.</p>  <pre><code>#include &lt;iostream&gt;; #include &lt;iomanip&gt;;  int main() {   float a;   double b;   float total = 0.0;   double total_b = 0.00;  for (a = 0.01;a &lt;= 100000.0;a += 0.01) { //Set at 100000 cause it won't add past 200000+     total = a + total; } std::cout &lt;&lt; std::setprecision(2); std::cout &lt;&lt; total &lt;&lt; "\n";  for (b = 0.01;b &lt;= 10000000.00;b += 0.01) {     total_b = b + total_b; }  std::fixed; std::cout &lt;&lt; std::setprecision(2)&lt;&lt; total_b; return 0; } </code></pre>  <p>My questions are how do I get my output not in scientific notation and with the floating point how do I set a floating point number to double precision? </p>