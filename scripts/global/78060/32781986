<h3>Edited:</h3>  <p>My search only yields results about how to not erase SharedPreferences or how to edit the preferences with some new value (like blank/null/0)</p>  <p>During my updates, some variables are renamed/replaced/moved...</p>  <p>So, suppose a update change, how do I enforce the google play updates request data changes on the preferences? I want that the user does not input old content if it exists, but, given a state that the whole prefference is to be dropped.</p>  <p>Example:</p>  <p>v1 "MainActivity".prefference = String "Name" Boolean "something"</p>  <p>v2 "MainActivity".prefference = String "Name" Char "something"</p>  <p>So, on update v2, the whole prefference should be maintained while something is to be dropped, then readded.</p>  <p>Using <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_PACKAGE_REPLACED" rel="nofollow">Intent."ACTION_PACKAGE_REPLACED"</a> then manually erasing everything on the application seems to be the way to go, as a "quick-fix", however is there a way to request that the application be uninstalled (and therefore any non-hard-disk files be forgotten), then installed again, and then requested to be run?</p>  <p>As far as I can tell, on Kitkat and above, new installs must be manually opened.</p>  <p>My project is currently on Beta phase, and updates here should be common. What I want is to ensure that the logs I receive are all the latest BUT if the application is not updated, then the log should have its old content...</p>