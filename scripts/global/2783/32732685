<p>Would like to know whether below is correct or not?</p>  <pre><code>UserTransaction ut = getUserTransaction(); ut.begin();      conn = dataSource.getConnection(); conn.setAutoCommit(false); stmt = conn.createStatement(); // perform statement query udpate here  // do i need to call conn.commit? or ut.commit will handle it implicitly? ut.commit(); </code></pre>  <p>I saw the code snippet in one of my company's project, I tested it and found some weird behavior, so I am not sure, should we explicitly call <code>conn.commit()</code>? or leave the <code>ut.commit()</code> handle all the transaction inside itself?</p>  <p>So it started to confuse me what we are supposed to put inside the <code>UserTransaction.begin()</code> and <code>UserTransaction.commit()</code>? Since it should be mostly SQL statement execution code inside, is it necessary to include <code>conn = dataSource.getConnection();</code> inside the block as well? so all the <code>statement</code> that generated by the specific <code>connection</code> will behave implicitly like we use <code>AutoCommit(false)</code>? What happen if we declare the that (<code>conn = dataSource.getConnection()</code>) outside of block? Will transaction-handling still working?</p>  <p>Anyone please share some knowledge on how <code>UserTransaction</code> work? I basically know how to use it, but no concrete idea what should I take note when I am using it.</p>