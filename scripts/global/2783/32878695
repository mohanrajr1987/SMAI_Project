<p>I ran into a bug in one part of my code when I'm trying to retrieve my connection string from web.config for opening connection.</p>  <p>This is my code:</p>  <pre><code>var dbcontext = new System.Data.Entity.DbContext(_conStr.Database.Connection.ConnectionString);             var conn = dbcontext.Database.Connection; ;             var connState = conn.State;    conn.Open(); </code></pre>  <p>After some investigation, I found the full error message as below in my SQL server log:</p>  <blockquote>   <p>Login failed for user 'sa'. Reason: Password did not match that for the login provided. [CLIENT: ]</p> </blockquote>  <p>When I debug, I found the source of error. Below is my complete data source as stated in web.config.</p>  <pre><code>data source=(localhost);initial catalog=Database1;integrated security=False;User id=sa;password=12345; </code></pre>  <p>The issue is when I call <code>_conStr.Database.Connection.ConnectionString</code> for my dbcontext in my code above. When I check the value of my connection string, I found out that the password is missing, so it return the following connection string value:     data source=(localhost);initial catalog=Database1;integrated security=False;User id=sa;</p>  <p>My password is missing in the return connection string value, but it's clearly listed in the web config. </p>  <p>After lots of investigation, I found the solution to make sure the password is there when I use ADO net connection property is to include <code>Persist Security Info=True</code> in my web.config. Then, my complete connection string can be called without any missing element. </p>  <p>This solve my earlier issue BUT I also found articles stated that <code>Persist Security Info</code> must not set the True for security purpose. </p>  <p>I had consulted my senior and he suggested to put remove the user Id and password from web.config, encrypt both user id and password value, and put them as an App Key, then modify the data source as below:</p>  <pre><code>data source=(localhost);initial catalog=Database1;integrated security=False;Persist Security Info=True;User id={0};password{1}; </code></pre>  <p>When I call the data source from my code behind, I should get the encrypted user id and password App Key, decrypt them, then use string.format as below to reformat the string value:</p>  <pre><code>string strConStr = string.Format(strConStr, strAppKeyUserId, strAppKeyPassword); </code></pre>  <p>Now my question is, is my senior suggestion a suitable method to cater for Persist Security Info=True? I feels like it's the same but can't really tell the exact impact by applying the suggested method or not. Either way, as long as I'm setting <code>Persist Security Info_True</code>, the password will return back to the connection. </p>  <p>Also, a side note, I can't use <code>System.Configuration.ConfigurationManager.ConnectionStrings["ConStr"].ConnectionString</code> because the code above locate inside a repository solution that doesn't have web.config, only app.config. I can only format the connection string value in my application and pass the complete connection string value into the method. </p>  <p>Please enlighten me on this. Thank you. </p>