<p>I have a function "save" used jdbcTemplate to insert a row and get the auto-increased key in my Spring-mvc(3.2) project.The table just like {id(auto-increased,PK),url}</p>  <pre><code>public String save(final String Url) {     // TODO Auto-generated method stub     final String sql ="insert into table(Url) values (?)";     String ret = null;     KeyHolder keyHolder = new GeneratedKeyHolder();      getJdbcTemplate().update(             new PreparedStatementCreator() {                 public PreparedStatement createPreparedStatement(Connection con) throws SQLException                 {                     PreparedStatement ps = getJdbcTemplate().getDataSource()                             .getConnection().prepareStatement(sql,new String[]{ "Url"});                     ps.setString(1, Url);                     return ps;                 }             }, keyHolder);     ret =  keyHolder.getKey().toString();      return ret; } </code></pre>  <p>when request invoke this function , it works correctly at first,however I found the mysql connection is not released,and save failed when the connection is over the  "&lt; property name="maxActive" value="10"/> " and executing command "mysql> show status like 'Threads_connected';" shows the value of Threads_connected is not reducing. Then I try to save the record like :</p>  <pre><code>    String sql ="insert into table(Url) values (?)";     Connection connection = null;     PreparedStatement preparedStatement = null;     ResultSet resultSet = null;     String index = null;     Map&lt;String,String&gt; map = new HashMap&lt;String, String&gt;();     try {         connection = getConnection();         preparedStatement = connection.prepareStatement(sql,Statement.RETURN_GENERATED_KEYS);         preparedStatement.setString(1,longUrl);         preparedStatement.executeUpdate();         resultSet = preparedStatement.getGeneratedKeys();         if (resultSet.next())             index = String.valueOf(resultSet.getInt(1));     } catch (SQLException e) {         e.printStackTrace();     } catch (Exception e) {         e.printStackTrace();     } finally {         //close resultSet, preparedStatement, connection         DBService.closeAll(resultSet, preparedStatement, connection);     }      return index; </code></pre>  <p>At this time，it works correctly，the connection number is changing，and will not arrive to the limit。 so,why does my jdbcTemplate can not release the connection?Thanks for all of your help.</p>