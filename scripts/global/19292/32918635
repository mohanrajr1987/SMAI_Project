<p>I have come up with my implementation of binary tree that ensures that all the fillable positions in a particular level are filled ( that is the number of nodes at level k must be 2^k before proceeding to the next level). Unfortunately I am getting segmentation fault. </p>  <pre><code>#include &lt;iostream&gt; #include &lt;math.h&gt; #define ll long long int using namespace std;  struct node {   int value=0;   node* left=NULL;   node* right=NULL;   int height=0;   int numnodes();    node()   {   }     node(int val,node* l=NULL,node* r=NULL) : value(val),left(l),right(r)  {}    int getheight();   node* operator=(node* n)  {   this-&gt;value=n-&gt;value;   this-&gt;right=n-&gt;right;   this-&gt;left=n-&gt;left;     }   }*binrooter;     int node::numnodes()    {     if(this-&gt;left==NULL &amp;&amp; this-&gt;right==NULL)    return 0;     return this-&gt;left-&gt;numnodes()+this-&gt;right-&gt;numnodes()+1;     }     int node::getheight()    {     return max(this-&gt;left-&gt;getheight(),this-&gt;right-&gt;getheight())+1;    }     node* insertbintree(node* binrooter,ll num) {   if(binrooter==NULL)  return new node(num);   if(binrooter-&gt;value==num)  return NULL;   if(binrooter-&gt;left==NULL)  {   cout&lt;&lt;"Inserting left"&lt;&lt;endl;   binrooter-&gt;left=new node(num);   }  else  if(binrooter-&gt;right==NULL)  {   cout&lt;&lt;"Inserting right"&lt;&lt;endl;   binrooter-&gt;right=new node(num);   }   else   {   int k=binrooter-&gt;getheight();   int numchild=pow(2,k);   if(binrooter-&gt;numnodes()==numchild-1)   numchild=pow(2,k+1);          if(binrooter-&gt;left-&gt;numnodes()&gt;numchild/2)   {    cout&lt;&lt;"Traversing right"&lt;&lt;endl;    binrooter-&gt;right=insertbintree(binrooter-&gt;right,num);    }    else   {    cout&lt;&lt;"Traversing left"&lt;&lt;endl;    binrooter-&gt;left=insertbintree(binrooter-&gt;left,num);    }    }     return binrooter;     }      void insertbintree(ll num)  {     binrooter=insertbintree(binrooter,num);   }       void print(node *root) {  if(root!=NULL) {  print(root-&gt;left);  cout&lt;&lt;root-&gt;value&lt;&lt;" ";  print(root-&gt;right); } }     int main()    {    ll num=0;   do    {   cout&lt;&lt;endl&lt;&lt;"Enter the element to be inserted or enter -1"&lt;&lt;endl;   cin&gt;&gt;num;   if(num==-1)  {   break;  }   insertbintree(num);   }  while(num!=-1);   cout&lt;&lt;"printing tree in sorted order"&lt;&lt;endl;  print(rooter);  } </code></pre>  <p>The problem is that if I try to insert more than 3 nodes, I get segmentation fault. I kind of figured out that the error lies somewhere in using the getheight() to insert in leftsubtree or rightsubtree, but I can't exactly pinpoint the error</p>