<pre><code>#include &lt;iostream&gt; #include &lt;vector&gt; #include &lt;algorithm&gt; #include &lt;string&gt; #include &lt;stack&gt; #include &lt;queue&gt; #include &lt;utility&gt; #include &lt;functional&gt; #include &lt;cmath&gt; #include &lt;climits&gt; using namespace std;  #define pb push_back #define mp make_pair #define ll long long    int main (void) {     int i,j,k,n;     int arr[500001];     long long ans[500001];     int val = INT_MIN;     cin&gt;&gt;n;     for ( i = 0; i &lt; n; i++ )     {         cin&gt;&gt;arr[i];         if (val &lt; arr[i])             val = arr[i];     }     long long count[500001];     for ( i = 0; i &lt; n; i++ )         count[arr[i]]++;     //int ans = INT_MIN;     ans[0] = 0;     ans[1] = count[1];     for ( i = 2; i &lt;= val; i++ )     {         ans[i] = max(ans[i-1],ans[i-2]+count[i]*i);     }     cout&lt;&lt;ans[val]&lt;&lt;"\n";     return 0; } </code></pre>  <p>So, I implemented this simple code, where in I declare 3 arrays and try to tweak a little bit according to my question (which is a separate thing altogether). But as soon as I start up this code, I am shown a segmentation fault. I don't know why? Why is it happening? I tried to run it through the debugger and it shows a possible error in the max function. Hence I made my own <code>maxi</code> function but it still shows a segmentation fault? </p>  <p>Edit: On using the debugger, it shows the following:</p>  <pre><code>template &lt;class _Tp, class _Compare&gt; inline _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR_AFTER_CXX11 const _Tp&amp; max(const _Tp&amp; __a, const _Tp&amp; __b, _Compare __comp) {     return __comp(__a, __b) ? __b : __a; } </code></pre>  <p><code>Thread 1: EXC BAD_ACCESS (code=2, address=0x7fff5f276154)</code></p>