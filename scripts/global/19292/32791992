<p>I'm writing a function that will copy the contents of a text file into an array of cstrings. The array of cstrings is initialized to one value, but as the text file may or may not have more words than the size of the array can fit, the array will be resized when it needs to. This code is what I have so far, I'm going for something as basic as possible without using strings or any related object/containers...just basic cstring arrays.</p>  <pre><code>void copy(ifstream&amp; in, char* w[], int s) {     int k = 1;     for (int i=0; i&lt;s; i++) {         in.getline(w[i], 40);         if (!in.eof())             k++;         if (k == s) {             char** A = new char* [2*s];             for(int j=0; j&lt;k; j++)                 A[j] = w[j];             delete[] w;             w = A;             s = s*2;         }     } } </code></pre>  <p>I'm getting a segmentation fault, my c++ knowledge is intermediate at best. I've narrowed it down to the last line, s = s*2. I am guessing one can't affect the for loop's parameters from within the for loop itself? Is there any other way to effectively do what the last line is doing without getting a segmentation fault?</p>