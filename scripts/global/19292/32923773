<p>I am to copy a file from the inputed source to the inputed destination. I am getting a segmentation fault error about 2 seconds after the destination is entered. The output file is created so <code>fopen()</code> is working.</p>  <p>I looked online and I see a lot of <code>c=getc(fp)</code>. I prefer <code>fread()</code> and <code>fwrite()</code> for this question because it's a little more basic.</p>  <h2>Code</h2>  <pre><code>#include &lt;stdio.h&gt; #include &lt;stdlib.h&gt; #include &lt;string.h&gt;  //void rmnewline(char *string); void remove_last_newline(char *str);  int main() {   char x[3];   x[0]='y';   int ch;    while(x[0]=='y'||x[0]=='Y')   {     char source[256], destination[256];     int *a;      printf("Enter a source file: ");     fgets(source, 256, stdin);     if (source[254] == '\n' &amp;&amp; source[255] == '\0') { while ( (ch = fgetc(stdin)) != EOF &amp;&amp; ch != '\n'); }     remove_last_newline(source);      printf("Enter a destination file: ");     fgets(destination, 256, stdin);     if (destination[254] == '\n' &amp;&amp; destination[255] == '\0') { while ( (ch = fgetc(stdin)) != EOF &amp;&amp; ch != '\n'); }     remove_last_newline(destination);      FILE *sp, *dp;      sp = fopen(source, "r");     if (sp == NULL) { printf("ERROR: Could not open source file."); exit(1); }     dp = fopen(destination, "w");     if (dp == NULL) { printf("ERROR: Could not open destination file."); exit(1); }     while(1)     {       fread(a, 1, 1, sp);       if (feof(sp))       break;       fwrite(a, 1, 1, dp);     }      fclose(sp);     fclose(dp);      printf("Run Again?(y/n):");     fgets(x, 2, stdin);     while ( (ch = fgetc(stdin)) != EOF &amp;&amp; ch != '\n');  }  }  /*void rmnewline(char *string) {     int i, l = strlen(string);      for(i=0; i&lt;=l; i++)     {       if(string[i] == '\0')          return;       if(string[i] == '\n')      {        string[i] == '\0';        return;      }   }  }*/  void remove_last_newline(char *str) {     if (*str == '\0') return; /* do nothing if the string is empty */     while(str[1] != '\0') str++; /* search for the end of the string */     if (*str == '\n') *str = '\0'; /* if the last character is newline, delete it */ } </code></pre>