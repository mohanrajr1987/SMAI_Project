<p>Recently, I'm practicing the strategy pattern in C++. Here is the code.</p>  <pre><code>#include &lt;iostream&gt;  using namespace std;  class Isquare { public:     virtual void draw()=0;        };  class circle:public Isquare { public:   void draw() {        cout&lt;&lt;"circle"&lt;&lt;endl;   } };  class rectangle:public Isquare { public:   void draw(){        cout&lt;&lt;"rectangle"&lt;&lt;endl;   }       };  class graph {   Isquare* ss; public:   graph() {     ss = 0;        }     void setGraph(Isquare* Is) {       ss = Is;         }   void draw(){       ss-&gt;draw();   }           };  int main(void) {      graph* GG;   GG-&gt;setGraph(new circle); } </code></pre>  <p>That is correct and no bugs in this code. But I also tried another way to implement it and the code is as below:</p>  <pre><code>#include &lt;iostream&gt;  using namespace std;  class Isquare { public:   virtual void draw()=0;        };  class circle:public Isquare { public:   void draw() {        cout&lt;&lt;"circle"&lt;&lt;endl;   } };  class rectangle:public Isquare { public:   void draw(){       cout&lt;&lt;"rectangle"&lt;&lt;endl;   }       };  class graph {   Isquare* ss; public:   graph(){      ss = 0;        }     void setGraph(Isquare* Is){      ss = Is;         }      void draw(){      ss-&gt;draw();   } };  int main(void) {      graph* GG;   circle _circle;    GG-&gt;setGraph(&amp;_circle);//why it core down???    } </code></pre>  <p>And I got the segmentation fault after I run it.... Why it cases segmentation fault? Thx!</p>