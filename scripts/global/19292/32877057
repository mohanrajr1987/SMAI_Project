<p>I have a function here that destroys an iterator acting on a sorted list. </p>  <pre><code>void SortedListDestroyTheIterator (SortedListIteratorPtr iter)  {     Node pt = NULL;     Node prev = NULL;     SortedListIteratorPtr walk;      walk = malloc(sizeof(struct SortedListIterator)+1);     SortedListPtr li = iter-&gt;list;      for(pt = li-&gt;start; pt!=NULL; pt = pt-&gt;next) //problem line of code     {         walk = pt-&gt;info;         //delete         if(walk==iter){             if(prev==NULL){                 li-&gt;start = li-&gt;start-&gt;next;             }             else             {                 prev-&gt;next = pt-&gt;next;             }         }         prev = pt;     }     free(iter); } </code></pre>  <p>I have figured out that a segmentation fault occurs with this assignment statement: <code>pt = li-&gt;start</code>. Now this line of code is creating a node that points to the starting node of the list. If I type in <code>li-&gt;start</code> it works, but once I add the assignment <code>pt=li-&gt;start</code> I get a segmentation fault. I do not understand why or how to fix this. </p>