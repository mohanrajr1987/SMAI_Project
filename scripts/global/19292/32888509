<p>If the OrderString is ”dcfbae”, it means d > c > f > b > a > e, unlike the lexicographic(dictionary) ordering where we have a > b > c > d > e > f. all are lower case alphabets.</p>  <p>I'm getting SEG FAULT..i know its somewhat related to pointers but i'm unable to figure it out.. here's my code :</p>  <pre><code>#include&lt;stdio.h&gt; #include&lt;stdlib.h&gt; #include&lt;math.h&gt; #include&lt;string.h&gt; #define MAX 1001 int min(int x,int y){     return (x&gt;y)?y:x; } int check(char a,char b,char *order){     int i,x,y;     for(i=0;i&lt;strlen(order);i++){         if(a==order[i])             x=i;         if(b==order[i])             y=i;     } if(x&gt;y)     return 1; else     return 0; } int compare(char *a,char *b,char *order){    int i=0,l1=strlen(a),l2=strlen(b);    for(i=0;i&lt;min(l1,l2);i++){        if(a[i]==b[i])           continue;        else{            if(check(a[i],b[i],order)==1)               return 1;            else               return 0;        }    } } void merge(int l,int r,int mid,char **string,char *order){     int size1=mid-l+1;     int size2=r-mid;     char a[size1][MAX],b[size2][MAX];     int i,j,k;     for(i=0;i&lt;size1;i++)        strcpy(a[i],string[l+i]);     for(i=0;i&lt;size2;i++)        strcpy(b[i],string[mid+1+i]);     i=0;     j=0;     k=0;     while(i&lt;size1 &amp;&amp; j&lt;size2){        if(compare(a[i],b[j],order)==0){           strcpy(string[k],a[i]);           i++;        }        else{           strcpy(string[k],b[j]);           j++;        }     k++;    }    while(i&lt;size1){       strcpy(string[k],a[i]);       i++;       k++;    }    while(j&lt;size2){       strcpy(string[k],b[j]);       j++;       k++;    }  }  void mergesort(int l,int r,char **string,char *order){       int mid=(l+r)/2;       if(l&lt;r){          mergesort(l,mid,string,order);          mergesort(mid+1,r,string,order);          merge(l,r,mid,string,order);       }     return ;  } int main(){     char order[MAX];     scanf("%s",order);     int T;     scanf("%d",&amp;T);     char string[T][MAX];     int i;     for(i=0;i&lt;T;i++)         scanf("%s",string[i]);     mergesort(0,T-1,string,order);     for(i=0;i&lt;T;i++)       printf("%s\n",string[i]);    return 0;    } </code></pre>  <p>i'm using mergesort algorithm.. thanks in advance :)</p>