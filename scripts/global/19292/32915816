<p>I'm writing a board game <a href="http://ow.ly/SXe31" rel="nofollow">detailed information</a>. I get segmentation fault just changing <code>problem_ch</code> from <code>' '</code>(space) to <code>'.'</code>. When I play by the moves and with <code>' '</code>, I don't get but when I play by the moves and with <code>'.'</code>I get.  I really and really don't understand what happening.</p>  <blockquote>   <p>Solved: Because of negative index, I get the segmentation fault. By   handling, It is solved.</p> </blockquote>  <p>Following moves:</p>  <pre><code>3d 2d 5f 2e 1e 4b 4c 4a 3b at 4b segmentation fault </code></pre>  <p>Code:</p>  <pre><code>void make_move(char board[][SIZE], size_t row, size_t col, char player) {     int rowdelta = 0;                     // Row increment     int coldelta = 0;                     // Column increment     size_t x = 0;                         // Row index for searching     size_t y = 0;                         // Column index for searching      // Identify opponent     char opponent = (player == player_ch) ? computer_ch : player_ch;      board[row][col] = player;             // Place the player counter      // Check all squares around this square for opponents counter     for(rowdelta = -1 ; rowdelta &lt;= 1 ; ++rowdelta)         for(coldelta = -1; coldelta &lt;= 1; ++coldelta)         {             // Donâ€™t check off the board, or the current square             if((row == 0 &amp;&amp; rowdelta == -1) || row + rowdelta &gt;= SIZE ||                (col == 0 &amp;&amp; coldelta == -1) || col + coldelta &gt;= SIZE ||                (rowdelta == 0 &amp;&amp; coldelta == 0))                 continue;              // Now check the square             if(board[row + rowdelta][col + coldelta] == opponent)             { // Found opponent so search in same direction for player counter                 x = row + rowdelta;           // Move to opponent                 y = col + coldelta;           // square                  for(;;)                 {                     x += rowdelta;              // Move to the                     y += coldelta;              // next square                       if(board[x][y] == problem_ch)      // If square is blank...                         break;                    // ...give up                      // If we find the player counter, go backward from here                     // changing all the opponents counters to player                     if(board[x][y] == player)                     {                         while(board[x -= rowdelta][y -= coldelta] == opponent) // Opponent?                             board[x][y] = player;                                // Yes, change it                          break;                      // We are done                     }                 }             }         } } </code></pre>