<p>How can I iterate thru the second maps second node and find duplicates?  With the code below I was expecting the second <strong>for loop</strong> to iterate 4 times since there are 4 Nodes in the outer map. However, after the first iteration of the second <strong>for loop</strong> I get a segfault. And Ideas?</p>  <pre><code>void xmlParser::SortAndGroupByKey() {     bool match = true;     std::map&lt;std::vector&lt;unsigned char&gt;, std::vector&lt;unsigned char&gt;&gt; tempMidNonceMap;      std::map&lt;std::vector&lt;unsigned char&gt;, std::vector&lt;unsigned char&gt;&gt;::iterator keyIt= m_mapMidNonceKey.begin()-&gt;second.begin();     //Iterate thru the second maps second element     for(std::map&lt;std::vector&lt;unsigned char&gt;, std::map&lt;std::vector&lt;unsigned char&gt;, std::vector&lt;unsigned char&gt;&gt;&gt;::iterator mapIt=m_mapMidNonceKey.begin(); mapIt != m_mapMidNonceKey.end(); ++mapIt)     {         //innerMapit points to the inner(2nd Map) map iterator         for(std::map&lt;std::vector&lt;unsigned char&gt;, std::vector&lt;unsigned char&gt;&gt;::iterator innerMapit= mapIt-&gt;second.begin(); innerMapit != mapIt-&gt;second.end(); ++innerMapit)         {             for(size_t i = 0; i &lt; innerMapit-&gt;second.size(); ++i)             {                 if(innerMapit-&gt;second[i] != keyIt-&gt;second[i]) //Do they match?                 {                     match = false;                     break;                 }             }             if(match)             {                 //Make a pair of the values                 tempMidNonceMap.insert(std::make_pair(mapIt-&gt;first,innerMapit-&gt;first));              }         }         //Check to see if the key already exists in the map if it does then only insert          if(!DuplicateKeyExists(keyIt-&gt;second))         {             this-&gt;m_mapKey.insert(std::make_pair(keyIt-&gt;second, tempMidNonceMap));         }         tempMidNonceMap.clear();         keyIt++;         match = true;     } } </code></pre>