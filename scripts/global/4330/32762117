<p>Me again... I've got some code that copies cells from a certain column (from sheet "Convertor") and pastes it into a different column (sheet "Unallocated"). These values (IDs) are then used as a reference point to move the rest of the cells for each row (record) into the correct position I need it in.</p>  <p>However I can't get the code to continuously copy the IDs into a blank row so that they don't overwrite the previous set. I think it's something to do with the line <code>Master.Cells(rowB, colB) = yourData</code> but I can't figure it out. I tried changing the <code>rowB</code> to be the same <code>xlUp</code> to find the last unused cell in the column (as with <code>lastA = Slave.Cells(Rows.Count, colA).End(xlUp).Row</code>), but I couldn't get it to work. Any ideas?</p>  <p>Current code:</p>  <pre><code>Private Sub CommandButton21_Click()  Dim colA As Integer, colB As Integer Dim rowA As Integer, rowB As Integer Dim Master As Worksheet, Slave As Worksheet 'declare both  Application.ScreenUpdating = False  Set Master = ThisWorkbook.Worksheets("Unallocated") Set Slave = ThisWorkbook.Worksheets("Convertor")  colA = 17  colB = 29   rowA = 1  rowB = 1   lastA = Slave.Cells(Rows.Count, colA).End(xlUp).Row 'This finds the last row of the data of the column FROM which i'm copying For x = rowA To lastA 'Loops through all the rows of A     yourData = Cells(x, colA)     Master.Cells(rowB, colB) = yourData     rowB = rowB + 1 'Increments the current line of destination workbook Next x 'Skips to next row  For j = 1 To 5000 '(the master sheet)      For i = 1 To 5000 '(the slave sheet) 'for first 1000 cells          If Trim(Master.Cells(j, 29).Value2) = vbNullString Then Exit For 'if ID cell is blank exit          If Master.Cells(j, 29).Value = Slave.Cells(i, 17).Value Then              If IsEmpty(Slave.Cells(i, 3)) Then Exit Sub              Master.Cells(j, 2).Value = Slave.Cells(i, 3).Value 'Move all other data based on the ID             Master.Cells(j, 8).Value = Slave.Cells(i, 4).Value             Master.Cells(j, 9).Value = Slave.Cells(i, 5).Value             Master.Cells(j, 10).Value = Slave.Cells(i, 6).Value             Master.Cells(j, 11).Value = Slave.Cells(i, 7).Value             Master.Cells(j, 12).Value = Slave.Cells(i, 8).Value             Master.Cells(j, 13).Value = Slave.Cells(i, 9).Value             Master.Cells(j, 4).Value = Slave.Cells(i, 10).Value             Master.Cells(j, 23).Value = Slave.Cells(i, 11).Value             Master.Cells(j, 24).Value = Slave.Cells(i, 12).Value             Master.Cells(j, 25).Value = Slave.Cells(i, 13).Value             Master.Cells(j, 26).Value = Slave.Cells(i, 14).Value             Master.Cells(j, 27).Value = Slave.Cells(i, 15).Value             Master.Cells(j, 28).Value = Slave.Cells(i, 16).Value              If Not IsEmpty(Slave.Cells(i, 3)) Then _             Slave.Cells(i, 3).EntireRow.Delete 'deletes row after it has been copied          End If     Next  Next  Application.ScreenUpdating = True  End Sub </code></pre>