<p>My code is below: </p>  <pre><code>int quads= m_quadrant.Length; int nElems = response.elems.Length;  for (int i = 0; i &lt; quads; i++) {     AvsData.VIT_ELEMS tempresp = new AvsData.VIT_ELEMS();     tempresp.elems = new AvsData.VIT[nElems];      for (int j = 0; j &lt; nElems; j++)     tempresp.elems[j] = response.elems[j];      if (quads &gt; 1 &amp;&amp; i == 0)     response.elems = new AvsData.VIT[quads * nElems];      // Set CITYCODE     SetAtom(CityFeatureName, CityLabelName, AtomType.CITYCODE, ref tempresp, m_quadrant[i]);      // Set POLATOM     SetAtom(this.PolFeatureName, this.PolLabelName, AtomType.POLATOM, ref tempresp, m_quadrant[i]);      // Set FIREATOM     SetAtom(this.FireFeatureName, this.FireLabelName, AtomType.FIREATOM, ref tempresp, m_quadrant[i]);                     int index = i * nElems;     tempresp.elems.CopyTo(response.elems, index);     nElems = tempresp.elems.Length;  } </code></pre>  <p>The elements in <code>response</code> are being overwritten every time the elements in <code>tempresp</code> change. </p>  <p>A very small example of what I want based on two quads and 1 original element:</p>  <p>Original: <code>response.elem[0] = {City, Police, Fire}</code></p>  <p>Return: <code>response.elem[0] = {City.North, Police.North, Fire.North, City.West, Police.West, Fire.West}</code></p>  <p>What I get:</p>  <p>Original: <code>response.elem[0] = {City, Police, Fire}</code></p>  <p>Return: <code>response.elem[0] = {City.West, Police.West, Fire.West, City.West, Police.West, Fire.West}</code></p>