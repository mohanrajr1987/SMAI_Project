<p>I'm working on a program to copy all files from one folder to the next. I don't need for it to be recursive. I'd like to enter the source and destination as the only arguments.</p>  <p>I've been trying to open the two folders and use write to copy everything but I cant seem to get it to work.  </p>  <pre><code>#include &lt;sys/stat.h&gt; #include &lt;sys/types.h&gt; #include &lt;dirent.h&gt; #include &lt;fcntl.h&gt; #include &lt;unistd.h&gt; #include &lt;stdio.h&gt; #include &lt;stdlib.h&gt; #include &lt;string.h&gt;  int main (int argc, char *argv[]) {    if (argc!=3)    {       printf("USAGE: programname source destination\n");       return 1;    }     DIR *srcPtr;     if (mkdir(argv[2],0777)&lt;0)    {       printf("Unable to create directory %s (probably it already exists)\n",argv[2]);    }    srcPtr=opendir(argv[1]);    if (srcPtr==NULL)    {       printf("BAD OPENDIR %s\n",argv[1]);       return 1;    }     struct dirent *dirPtr;    struct stat statbuff;    int fdSrc,fdDest;    char *path_copia;    char *sourceFileName;    unsigned int len_path_copia;    unsigned int len_sourceFileName;    unsigned char c;     while ( (dirPtr=readdir(srcPtr)) !=NULL)    {       len_sourceFileName = strlen(argv[1]);       len_sourceFileName += 1+strlen(dirPtr-&gt;d_name);       sourceFileName = malloc(len_sourceFileName*sizeof(char));       strcpy(sourceFileName,argv[1]);       strcat(sourceFileName,dirPtr-&gt;d_name);         if (S_ISREG(statbuff.st_mode)) {           len_path_copia=strlen(argv[2]);          len_path_copia+=1+strlen(dirPtr-&gt;d_name);           path_copia=(char *)malloc(len_path_copia*sizeof(char));           strcpy(path_copia,argv[2]);          strcat(path_copia,dirPtr-&gt;d_name);          printf("Copying %s in %s\n",sourceFileName,path_copia);          if ( (fdDest=open(path_copia,O_CREAT|O_TRUNC|O_WRONLY,(statbuff.st_mode &amp;S_IRWXU)|(statbuff.st_mode &amp;S_IRWXG)|(statbuff.st_mode &amp;S_IRWXO) ) ) &lt;0 )          {             printf("BAD OPEN %s\n",path_copia);             return 1;          }          if ( (fdSrc=open(sourceFileName,O_RDONLY))&lt;0 )          {             printf("BAD OPEN %s\n", sourceFileName);             return 1;          }          while (read(fdSrc,&amp;c,1)==1)          {             write(fdDest,&amp;c,1);          }          close(fdSrc);          close(fdDest);          free(path_copia);       }     }    closedir (srcPtr);    return 0; } </code></pre>