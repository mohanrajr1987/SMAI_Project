<p>this the logs of my android app,</p>  <pre><code>    10-02 18:11:47.949    1884-1490/? V/MediaPlayerService﹕ [120] notify (0x41bc7fc0) 10-02 18:11:47.949    1884-1490/? V/MediaPlayerService﹕ [120] notify (0x41bc7fc0, 5, 0, 0) 10-02 18:11:47.949    1884-1490/? V/MediaPlayerService﹕ [120] notify (0x41bc7fc0) 10-02 18:11:47.949    1884-1490/? V/MediaPlayerService﹕ [120] notify (0x41bc7fc0, 1, 0, 0) 10-02 18:13:40.669    1884-2175/? V/AudioPolicyManagerBase﹕ changeRefCount() stream 1, count 1 10-02 18:13:40.909    1884-2175/? V/AudioPolicyManagerBase﹕ changeRefCount() stream 1, count 0 10-02 18:13:48.689   1884-28397/? V/AudioPolicyManagerBase﹕ changeRefCount() stream 1, count 1 10-02 18:13:48.919   1884-28397/? V/AudioPolicyManagerBase﹕ changeRefCount() stream 1, count 0 10-02 18:14:23.939    1881-2006/? I/SurfaceFlinger﹕ id=152(34) createSurf 0x4284e7fc (1x1),1 flag=0, </code></pre>  <p>i want to complete a form and save it in sql lite data base.what's the wrong???</p>  <p>this is my code:</p>  <pre><code>public class MyActivity extends Activity   { private ListView listView; private AddVowAdapter adapter; private DataBaseClass classDB; private SQLiteDatabase sqlDB;  private ArrayList&lt;String&gt; vowId = new ArrayList&lt;String&gt;();  // vows id private ArrayList&lt;String&gt; vow_number = new ArrayList&lt;String&gt;(); //vows no private ArrayList&lt;String&gt; vow_vow = new ArrayList&lt;String&gt;(); //vows vow private ArrayList&lt;String&gt; vow_why = new ArrayList&lt;String&gt;(); //vows why private ArrayList&lt;String&gt; vow_start_day = new ArrayList&lt;String&gt;(); //vows start day private ArrayList&lt;String&gt; vow_start_month = new ArrayList&lt;String&gt;(); //vows start month private ArrayList&lt;String&gt; vow_start_year = new ArrayList&lt;String&gt;(); //vows start year private ArrayList&lt;String&gt; vow_finish_day = new ArrayList&lt;String&gt;(); //vows finish day private ArrayList&lt;String&gt; vow_finish_month = new ArrayList&lt;String&gt;(); //vows finish month private ArrayList&lt;String&gt; vow_finish_year = new ArrayList&lt;String&gt;(); //vows finish year private ArrayList&lt;String&gt; vow_statuse = new ArrayList&lt;String&gt;(); //vows statuae  private AlertDialog.Builder build;  // options for Edit/Delete    @Override public void onCreate(Bundle savedInstanceState) {     super.onCreate(savedInstanceState);     setContentView(R.layout.main);      listView = (ListView) findViewById(R.id.ListView);     classDB =new DataBaseClass(this);       //long item click listener for showing dialog EDIT &amp; Delete     listView.setOnItemLongClickListener(new AdapterView.OnItemLongClickListener() {         @Override         public boolean onItemLongClick(AdapterView&lt;?&gt; adapterView, View view,final int i,final long l) {             // creating dialog             build = new AlertDialog.Builder(MyActivity.this);             build.setMessage("بخب..." + vow_number.get(i) + " "                     + vow_vow.get(i) + " " +vow_why.get(i));             build.setTitle(" ");             build.setIcon(R.drawable.a);              //Delete             build.setPositiveButton("پاکش می کنم",                     new DialogInterface.OnClickListener() {                          public void onClick(DialogInterface dialog,                                             int which) {                              Toast.makeText(                                     getApplicationContext(),                                     vow_number.get(i) + " "                                             + vow_vow.get(i) + " "                                             + vow_why.get(i)                                             + vow_start_day.get(i) + vow_start_month.get(i) + vow_start_year.get(i)                                             + vow_finish_day.get(i) + vow_finish_month.get(i) + vow_finish_year.get(i)                                             + " پاک شد..", 3000).show();                              sqlDB.delete(                                     DataBaseClass.VOW_TABLE_NAME,                                     DataBaseClass.VOW_COLUMN_ID + "="                                             + vowId.get(i), null);                             displayData();                             dialog.cancel();                         }                     });              //Edit             build.setNegativeButton("ویرایشش می کنم",                     new DialogInterface.OnClickListener() {                          public void onClick(DialogInterface dialog,                                             int which) {                             Intent edit_intent = new Intent(getApplicationContext(), AddVowActifvity.class);                             edit_intent.putExtra("idIntent", vowId.get(i));                             edit_intent.putExtra("numberIntent", vow_number.get(i));                             edit_intent.putExtra("vowIntent", vow_vow.get(i));                             edit_intent.putExtra("whyIntent", vow_why.get(i));                             edit_intent.putExtra("start_dayIntent", vow_start_day.get(i));                             edit_intent.putExtra("start_monthIntent", vow_start_month.get(i));                             edit_intent.putExtra("start_yearIntent", vow_start_year.get(i));                             edit_intent.putExtra("finish_dayIntent", vow_finish_day.get(i));                             edit_intent.putExtra("finish_monthIntent", vow_finish_month.get(i));                             edit_intent.putExtra("finish_yearIntent", vow_finish_year.get(i));                             edit_intent.putExtra("vowUpdate", true);                             startActivity(edit_intent);                             dialog.cancel();                         }                     });             AlertDialog alert = build.create();             alert.show();              return true;         }     });   }   // vow statuse - http://stackoverflow.com/questions/12889820/spinner-in-a-listview-in-android public void AlertDialogStatuse(final int i) {     final CharSequence[] items = {"هنوز ادا نکردم.",                                    "در حال ادا کردنش هستم.",                                    "ادا کردم."};      AlertDialog.Builder builder = new AlertDialog.Builder(MyActivity.this);     builder.setTitle("وضعیت" + vow_number.get(i) + " "             + vow_vow.get(i) + " " +vow_why.get(i));     builder.setIcon(R.drawable.icon);       builder.setSingleChoiceItems(items, -1, new DialogInterface.OnClickListener() {         public void onClick(DialogInterface dialog, int item) {             Toast.makeText(getApplicationContext(), items[item], Toast.LENGTH_SHORT).show();         }     });      builder.setPositiveButton("ثبت",             new DialogInterface.OnClickListener() {                 public void onClick(DialogInterface dialog, int id) {                          Toast.makeText(MyActivity.this, "Success", Toast.LENGTH_SHORT).show();                 }             });     builder.setNegativeButton("لغو",             new DialogInterface.OnClickListener() {                 public void onClick(DialogInterface dialog, int id) {                  }             });     AlertDialog alert = builder.create();     alert.show(); }    //***************** Menu Button for adding VOW public boolean onCreateOptionsMenu(Menu menu) {     getMenuInflater().inflate(R.menu.add_vow, menu);     return true; } @Override public boolean onOptionsItemSelected(MenuItem item) {   super.onOptionsItemSelected(item);     switch(item.getItemId()){         case R.id.add_vow_menu:             Intent intent = new Intent(getApplicationContext(),AddVowActivity.class);             intent.putExtra("update",false);             startActivity(intent);             return true;         default:             return super.onOptionsItemSelected(item);     } }   @Override protected void onResume() {     displayData();     super.onResume(); }   private void displayData() {   //displays data from SQLite     sqlDB = classDB.getWritableDatabase();     Cursor mCursor = sqlDB.rawQuery("SELECT * FROM "+DataBaseClass.VOW_TABLE_NAME, null);      vowId.clear();     vow_number.clear();     vow_vow.clear();     vow_why.clear();     vow_start_day.clear();     vow_start_month.clear();     vow_start_year.clear();     vow_finish_day.clear();     vow_finish_month.clear();     vow_finish_year.clear();     if (mCursor.moveToFirst()) {         do {             vowId.add(mCursor.getString(mCursor.getColumnIndex(DataBaseClass.VOW_COLUMN_ID)));             vow_number.add(mCursor.getString(mCursor.getColumnIndex(DataBaseClass.VOW_COLUMN_NUMBER)));             vow_vow.add(mCursor.getString(mCursor.getColumnIndex(DataBaseClass.VOW_COLUMN_VOW)));             vow_why.add(mCursor.getString(mCursor.getColumnIndex(DataBaseClass.VOW_COLUMN_WHY)));             vow_start_day.add(mCursor.getString(mCursor.getColumnIndex(DataBaseClass.VOW_COLUMN_START_DAY)));             vow_start_month.add(mCursor.getString(mCursor.getColumnIndex(DataBaseClass.VOW_COLUMN_START_MONTH)));             vow_start_year.add(mCursor.getString(mCursor.getColumnIndex(DataBaseClass.VOW_COLUMN_START_YEAR)));             vow_finish_day.add(mCursor.getString(mCursor.getColumnIndex(DataBaseClass.VOW_COLUMN_FINISH_DAY)));             vow_finish_month.add(mCursor.getString(mCursor.getColumnIndex(DataBaseClass.VOW_COLUMN_FINISH_MONTH)));             vow_finish_year.add(mCursor.getString(mCursor.getColumnIndex(DataBaseClass.VOW_COLUMN_FINISH_YEAR)));          } while (mCursor.moveToNext());     }     AddVowAdapter adapter = new AddVowAdapter(this,vowId, vow_number ,vow_vow ,vow_why             , vow_start_day , vow_start_month , vow_start_year ,             vow_finish_day , vow_finish_month , vow_finish_year);     listView.setAdapter(adapter);     mCursor.close(); } </code></pre>  <p>}</p>  <p>AddVowActivity.class:</p>  <pre><code> public class AddVowActivity extends Activity {     private EditText addNUM;     private EditText addVOW ;     private EditText addWHY ;     private EditText s_addDay,f_addDay;     private EditText s_addMonth,f_addMonth;     private EditText s_addYear,f_addYear;      private Button insertBTN;     private Button deleteBTN;      private DataBaseClass classDB;     private SQLiteDatabase sqlDB;      private String idIntent;     private String numberIntent,vowIntent,whyIntent;     private String start_dayIntent,start_monthIntent,start_yearIntent;     private String finish_dayIntent,finish_monthIntent,finish_yearIntent; private Integer sday_int , smonth_int ,syear_int; private Integer fday_int,fmonth_int,fyear_int;  private boolean isUpdate;  public void onCreate(Bundle savedInstanceState) {     super.onCreate(savedInstanceState);     setContentView(R.layout.add_vow);      classDB = new DataBaseClass(this);      addNUM = (EditText) findViewById(R.id.addNum);     addVOW  = (EditText) findViewById(R.id.addVow);     addWHY = (EditText) findViewById(R.id.addWhy);      s_addDay= (EditText) findViewById(R.id.s_addDay);     s_addMonth = (EditText) findViewById(R.id.s_addMonth);     s_addYear = (EditText) findViewById(R.id.s_addYear);     f_addDay= (EditText) findViewById(R.id.f_addDay);     f_addYear = (EditText) findViewById(R.id.f_addYear);      insertBTN = (Button) findViewById(R.id.insert);     deleteBTN = (Button) findViewById(R.id.deleteBTN);       sday_int=Integer.parseInt(s_addDay.getText().toString());     smonth_int=Integer.parseInt(s_addMonth.getText().toString());     syear_int=Integer.parseInt(s_addYear.getText().toString());     fday_int=Integer.parseInt(f_addDay.getText().toString());     fmonth_int=Integer.parseInt(f_addMonth.getText().toString());     fyear_int=Integer.parseInt(f_addYear.getText().toString());      isUpdate=getIntent().getExtras().getBoolean("vowUpdate");     if(isUpdate){         idIntent=getIntent().getExtras().getString("id");         numberIntent=getIntent().getExtras().getString("number");         vowIntent=getIntent().getExtras().getString("vow");         whyIntent=getIntent().getExtras().getString("why");         start_dayIntent=getIntent().getExtras().getString("startDay");         start_monthIntent=getIntent().getExtras().getString("startMonth");         start_yearIntent=getIntent().getExtras().getString("startYear");         finish_dayIntent=getIntent().getExtras().getString("finishDay");         finish_monthIntent=getIntent().getExtras().getString("finishMonth");         finish_yearIntent=getIntent().getExtras().getString("finishYear");          addNUM.setText(numberIntent);         addVOW.setText(vowIntent);         addWHY.setText(whyIntent);         s_addDay.setText(start_dayIntent);         s_addMonth.setText(start_monthIntent);         s_addYear.setText(start_yearIntent);         f_addDay.setText(finish_dayIntent);         f_addMonth.setText(finish_monthIntent);         f_addYear.setText(finish_yearIntent);     }     insertBTN.setOnClickListener(new View.OnClickListener() {     @Override     public void onClick(View view) {        numberIntent=addNUM.getText().toString().trim();        vowIntent=addVOW.getText().toString().trim();        whyIntent=addWHY.getText().toString().trim();        start_dayIntent= s_addDay.getText().toString().trim();        start_monthIntent= s_addMonth.getText().toString().trim();        start_yearIntent= s_addYear.getText().toString().trim();        finish_dayIntent= f_addDay.getText().toString().trim();        finish_monthIntent= f_addMonth.getText().toString().trim();        finish_yearIntent= f_addYear.getText().toString().trim();          // checking for filling of edit text         if((numberIntent.length() &gt; 0) &amp;&amp; (vowIntent.length() &gt; 0) &amp;&amp; (whyIntent.length() &gt; 0)                 &amp;&amp;            (1&lt;= sday_int &amp;&amp; sday_int&lt;=31) &amp;&amp;  (1&lt;=fday_int &amp;&amp; fday_int&lt;=31)                  &amp;&amp;            (1&lt;=smonth_int &amp;&amp; smonth_int&lt;=12)  &amp;&amp;   (1&lt;=fmonth_int &amp;&amp; fmonth_int&lt;=12)                   &amp;&amp;            (1394&lt;=syear_int &amp;&amp; syear_int&lt;=1400)  &amp;&amp;  (1394&lt;=fyear_int &amp;&amp; fyear_int&gt;=1400)         ){             saveData();         }else{  // showing alert dialog for alerting             AlertDialog.Builder alertBuilder=new AlertDialog.Builder(AddVowActivity.this);             alertBuilder.setTitle("Invalid Data");             alertBuilder.setMessage("Please, Enter valid data");             alertBuilder.setPositiveButton("Ok", new DialogInterface.OnClickListener() {                  public void onClick(DialogInterface dialog, int which) {                     dialog.cancel();                 }             });             alertBuilder.create().show();         }     } });  }    private void saveData(){     sqlDB=classDB.getWritableDatabase();     ContentValues values=new ContentValues();      values.put(DataBaseClass.VOW_COLUMN_NUMBER,numberIntent);     values.put(DataBaseClass.VOW_COLUMN_VOW,vowIntent);     values.put(DataBaseClass.VOW_COLUMN_WHY,whyIntent);     values.put(DataBaseClass.VOW_COLUMN_START_DAY,start_dayIntent);     values.put(DataBaseClass.VOW_COLUMN_START_MONTH,start_monthIntent);     values.put(DataBaseClass.VOW_COLUMN_START_YEAR,start_yearIntent);     values.put(DataBaseClass.VOW_COLUMN_FINISH_DAY,finish_dayIntent);     values.put(DataBaseClass.VOW_COLUMN_FINISH_MONTH ,finish_monthIntent);     values.put(DataBaseClass.VOW_COLUMN_FINISH_YEAR,finish_yearIntent);      System.out.println("");     if(isUpdate)     {         //update database with new data         sqlDB.update(DataBaseClass.VOW_TABLE_NAME, values, DataBaseClass.VOW_COLUMN_ID + "=" + idIntent, null);     }else {         //insert data into database         sqlDB.insert(DataBaseClass.VOW_TABLE_NAME, null, values);     }     //close database     sqlDB.close();     finish(); } </code></pre>  <p>AddVowAdapter.class:</p>  <pre><code>public class AddVowAdapter extends BaseAdapter { private Context context; private ArrayList&lt;String&gt; VId; private ArrayList&lt;String&gt; Vnumber; private ArrayList&lt;String&gt; Vvow; private ArrayList&lt;String&gt; Vwhy; private ArrayList&lt;String&gt; Vstart_day; private ArrayList&lt;String&gt; Vstart_month; private ArrayList&lt;String&gt; Vstart_year; private ArrayList&lt;String&gt; Vfinish_day; private ArrayList&lt;String&gt; Vfinish_month; private ArrayList&lt;String&gt; Vfinish_year; private ArrayList&lt;String&gt; Vstatuse;  public ArrayList&lt;Integer&gt; selectedViewsPositions = new ArrayList&lt;Integer&gt;(); public Cursor dbCursor;  public AddVowAdapter(Context c , ArrayList&lt;String&gt; id, ArrayList&lt;String&gt; number, ArrayList&lt;String&gt; vow , ArrayList&lt;String&gt; why         , ArrayList&lt;String&gt; startDay , ArrayList&lt;String&gt; start_month , ArrayList&lt;String&gt; start_year         , ArrayList&lt;String&gt; finishDay , ArrayList&lt;String&gt; finish_month , ArrayList&lt;String&gt; finish_year ){     context=c;     VId=id;     Vnumber=number;     Vvow =vow;     Vwhy =why;     Vstart_day= startDay;     Vstart_month = start_month;     Vstart_year = start_year;     Vfinish_day = finishDay;     Vfinish_month = finish_month;     Vfinish_year = finish_year; }  @Override public int getCount() {     return VId.size(); }  @Override public Object getItem(int i) {     return null; }  @Override public long getItemId(int i) {     return 0; }  @Override public View getView(int i, View view, ViewGroup viewGroup) {     Holder mHolder;     LayoutInflater layoutInflater;     if (view == null) {         layoutInflater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);         view = layoutInflater.inflate(R.layout.vow_list_item, null);         mHolder = new Holder();         mHolder.txt_id = (TextView) view.findViewById(R.id.id);         mHolder.txt_VNumber = (TextView) view.findViewById(R.id.number_text);         mHolder.txt_VText = (TextView) view.findViewById(R.id.vow_text);         mHolder.txt_VWhy = (TextView) view.findViewById(R.id.why_text);         mHolder.txt_VS_day = (TextView) view.findViewById(R.id.start_day_text);         mHolder.txt_VS_month = (TextView) view.findViewById(R.id.start_month_text);         mHolder.txt_VS_year = (TextView) view.findViewById(R.id.start_year_text);         mHolder.txt_VF_day = (TextView) view.findViewById(R.id.finish_day_text);         mHolder.txt_VF_month = (TextView) view.findViewById(R.id.finish_month_text);         mHolder.txt_VF_year = (TextView) view.findViewById(R.id.finish_year_text);         view.setTag(mHolder);     } else {         mHolder = (Holder) view.getTag();     }     mHolder.txt_id.setText(VId.get(i));     mHolder.txt_VNumber.setText(Vnumber.get(i));     mHolder.txt_VText.setText(Vvow.get(i));     mHolder.txt_VWhy.setText(Vwhy.get(i));     mHolder.txt_VS_day.setText(Vstart_day.get(i));     mHolder.txt_VS_month.setText(Vstart_month.get(i));     mHolder.txt_VS_year.setText(Vstart_year.get(i));     mHolder.txt_VF_day.setText(Vfinish_day.get(i));     mHolder.txt_VF_month.setText(Vfinish_month.get(i));     mHolder.txt_VF_year.setText(Vfinish_year.get(i));       return view; }    public class Holder {     TextView txt_id;     TextView txt_VNumber;     TextView txt_VText;     TextView txt_VWhy;     TextView txt_VS_day;     TextView txt_VS_month;     TextView txt_VS_year;     TextView txt_VF_day;     TextView txt_VF_month;     TextView txt_VF_year; } </code></pre>  <p>DataBaseClass.class:</p>  <pre><code>public class DataBaseClass extends SQLiteOpenHelper { static String DATABASE_NAME = "user's vowes"; public static final String VOW_TABLE_NAME = "vowing"; public static final String VOW_COLUMN_ID = "idIntent"; public static final String VOW_COLUMN_NUMBER = "numberIntent"; public static final String VOW_COLUMN_VOW = "vowIntent"; public static final String VOW_COLUMN_WHY = "whyIntent"; public static final String VOW_COLUMN_START_DAY ="start_dayIntent"; public static final String VOW_COLUMN_START_MONTH ="start_monthIntent"; public static final String VOW_COLUMN_START_YEAR ="start_yearIntent"; public static final String VOW_COLUMN_FINISH_DAY ="finish_dayIntent"; public static final String VOW_COLUMN_FINISH_MONTH ="finish_monthIntent"; public static final String VOW_COLUMN_FINISH_YEAR ="finish_yearIntent";  public DataBaseClass(Context context) {     super(context, DATABASE_NAME, null, 1); }  @Override public void onCreate(SQLiteDatabase db) {     String CREATE_TABLE="CREATE TABLE "+VOW_TABLE_NAME+" " +             "("+VOW_COLUMN_ID+" INTEGER PRIMARY KEY, "+             VOW_COLUMN_NUMBER+" TEXT, "+             VOW_COLUMN_VOW+" TEXT , "+             VOW_COLUMN_WHY+" TEXT , "+             VOW_COLUMN_START_DAY+" TEXT , "+ VOW_COLUMN_START_MONTH+ " TEXT , " +  VOW_COLUMN_START_YEAR+ " TEXT , " +             VOW_COLUMN_FINISH_DAY+" TEXT , "+ VOW_COLUMN_FINISH_MONTH+ " TEXT , " +  VOW_COLUMN_FINISH_YEAR+ " TEXT , "          ;     db.execSQL(CREATE_TABLE); }  @Override public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {     db.execSQL("DROP TABLE IF EXISTS "+VOW_TABLE_NAME);     onCreate(db); } </code></pre>  <p>as i write before i want to gather some information  from user and after Insert BTN is click all data save in DB and show in MyActivity list view. its simply like something i explained before.</p>