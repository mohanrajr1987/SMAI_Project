<p>Hi I wrote simple phonebook app, and when I type id in form and click button for search record from database I have this exception</p>  <blockquote>   <p>javax.naming.NameNotFoundException: Name   [com.kamil.controller.PersonServlet/personDao] is not bound in this   Context. Unable to find [com.kamil.controller.PersonServlet].     org.apache.naming.NamingContext.lookup(NamingContext.java:819)     org.apache.naming.NamingContext.lookup(NamingContext.java:167)     org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:505)     org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:103)     org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:956)     org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:423)     org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1079)     org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:625)     org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:318)     java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)     java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)     org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)     java.lang.Thread.run(Unknown Source)</p> </blockquote>  <p>It's apepar only first time when I run app on server, next times i have statement: The requested resource is not available.</p>  <p>persistence.xml</p>  <pre><code>&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;persistence version="2.1" xmlns="http://xmlns.jcp.org/xml/ns/persistence" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd"&gt;     &lt;persistence-unit name="test"&gt;     &lt;provider&gt;org.hibernate.ejb.HibernatePersistence&lt;/provider&gt;     &lt;class&gt;com.kamil.model.Person&lt;/class&gt;     &lt;properties&gt;     &lt;property name="hibernate.connection.username" value="root"/&gt;     &lt;property name="hibernate.connection.password" value=""/&gt;     &lt;property name="hibernate.connection.driver_class" value="com.mysql.jdbc.Driver"/&gt;     &lt;property name="hibernate.connection.url" value="jdbc:mysql://localhost/phonebook?charsetEncoding=utf8"/&gt;     &lt;property name="hibernate.cache.provider_class" value="org.hibernate.cache.NoCacheProvider"/&gt;     &lt;property name="hibernate.dialect" value="org.hibernate.dialect.MySQLDialect"/&gt;      &lt;/properties&gt;     &lt;/persistence-unit&gt; &lt;/persistence&gt; </code></pre>  <p>web.xml</p>  <pre><code>&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0"&gt;   &lt;display-name&gt;test&lt;/display-name&gt;   &lt;welcome-file-list&gt;    &lt;welcome-file&gt;personinfo.jsp&lt;/welcome-file&gt;   &lt;/welcome-file-list&gt;   &lt;resource-ref&gt;         &lt;description&gt;DB Connection&lt;/description&gt;         &lt;res-ref-name&gt;ds/phonebook&lt;/res-ref-name&gt;         &lt;res-type&gt;javax.sql.DataSource&lt;/res-type&gt;         &lt;res-auth&gt;Container&lt;/res-auth&gt;     &lt;/resource-ref&gt; &lt;/web-app&gt; </code></pre>  <p>PersonServlet.java</p>  <pre><code> package com.kamil.controller;  import com.kamil.dao.PersonDaoLocal; import com.kamil.model.Person; import java.io.IOException; import javax.ejb.EJB; import javax.servlet.ServletException; import javax.servlet.annotation.WebServlet; import javax.servlet.http.HttpServlet; import javax.servlet.http.HttpServletRequest; import javax.servlet.http.HttpServletResponse;   @WebServlet(name = "PersonServlet", urlPatterns = {"/PersonServlet"}) public class PersonServlet extends HttpServlet {     @EJB     private PersonDaoLocal personDao;      protected void processRequest(HttpServletRequest request, HttpServletResponse response)             throws ServletException, IOException {         String action = request.getParameter("action");         String personIdStr = request.getParameter("personId");         int personId=0;         if(personIdStr!=null &amp;&amp; !personIdStr.equals("")){             personId=Integer.parseInt(personIdStr);             }         String firstname = request.getParameter("firstname");         String lastname = request.getParameter("lastname");         String numberStr = request.getParameter("number");         int number=0;         if(numberStr!=null &amp;&amp; !numberStr.equals("")){             number=Integer.parseInt(numberStr);         }         Person person = new Person(personId, firstname, lastname, number);          if("Add".equalsIgnoreCase(action)){             personDao.addPerson(person);         }else if("Edit".equalsIgnoreCase(action)){             personDao.editPerson(person);         }else if("Delete".equalsIgnoreCase(action)){             personDao.deletePerson(personId);         }else if("Search".equalsIgnoreCase(action)){             person = personDao.getPerson(personId);         }         request.setAttribute("person", person);         request.setAttribute("allPersons", personDao.getAllPersons());         request.getRequestDispatcher("personinfo.jsp").forward(request, response);     } </code></pre>  <p>Person.java</p>  <pre><code>package com.kamil.model;  import javax.persistence.Column; import javax.persistence.Entity; import javax.persistence.GeneratedValue; import javax.persistence.GenerationType; import javax.persistence.Id; import javax.persistence.NamedQueries; import javax.persistence.NamedQuery; import javax.persistence.Table;  @Entity @Table(name="person") @NamedQueries({@NamedQuery(name="Person.getAll",query="SELECT e FROM Person e")}) public class Person {     @Id     @GeneratedValue(strategy=GenerationType.AUTO)     @Column     private int personId;     @Column     private String firstname;     @Column     private String lastname;     @Column      private int number;     public int getPersonId() {         return personId;     }     public void setPersonId(int personId) {         this.personId = personId;     }     public String getFirstname() {         return firstname;     }     public void setFirstname(String firstname) {         this.firstname = firstname;     }     public String getLastname() {         return lastname;     }     public void setLastname(String lastname) {         this.lastname = lastname;     }     public int getNumber() {         return number;     }     public void setNumber(int number) {         this.number = number;     }     public Person(int personId, String firstname, String lastname, int number) {         super();         this.personId = personId;         this.firstname = firstname;         this.lastname = lastname;         this.number = number;     }      Person(){} } </code></pre>  <p>PersonDao.java</p>  <pre><code>package com.kamil.dao;  import com.kamil.model.Person; import java.util.List; import javax.ejb.Stateless; import javax.persistence.EntityManager; import javax.persistence.EntityManagerFactory; import javax.persistence.Persistence; import javax.persistence.PersistenceContext;   @Stateless public class PersonDao implements PersonDaoLocal {     @PersistenceContext     private EntityManagerFactory emf = Persistence.createEntityManagerFactory("test");     private EntityManager em = emf.createEntityManager();      @Override     public void addPerson(Person person) {         em.persist(person);     }      @Override     public void editPerson(Person person) {         em.merge(person);     }      @Override     public void deletePerson(int personId) {         em.remove(getPerson(personId));     }      @Override     public Person getPerson(int personId) {         return em.find(Person.class, personId);     }      @Override     public List&lt;Person&gt; getAllPersons() {         return em.createNamedQuery("Person.getAll").getResultList();     }  } </code></pre>  <p>PersonDaoLocal.java</p>  <pre><code>package com.kamil.dao;  import com.kamil.model.Person; import java.util.List; import javax.ejb.Local;   @Local public interface PersonDaoLocal {      void addPerson(Person person);      void editPerson(Person person);      void deletePerson(int personId);      Person getPerson(int personId);      List&lt;Person&gt; getAllPersons();  } </code></pre>  <p>personinfo.jsp</p>  <pre><code>&lt;%@page contentType="text/html" pageEncoding="UTF-8"%&gt; &lt;%@taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %&gt; &lt;!DOCTYPE html&gt; &lt;html&gt;     &lt;head&gt;         &lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8"&gt;         &lt;title&gt;Information&lt;/title&gt;     &lt;/head&gt;     &lt;body&gt;         &lt;h1&gt;Person  Information&lt;/h1&gt;         &lt;form action="./PersonServlet" method="POST"&gt;             &lt;table&gt;                 &lt;tr&gt;                     &lt;td&gt;Person ID&lt;/td&gt;                     &lt;td&gt;&lt;input type="text" name="personId" value="${person.personId}" /&gt;&lt;/td&gt;                 &lt;/tr&gt;                 &lt;tr&gt;                     &lt;td&gt;First Name&lt;/td&gt;                     &lt;td&gt;&lt;input type="text" name="firstname" value="${person.firstname}" /&gt;&lt;/td&gt;                 &lt;/tr&gt;                 &lt;tr&gt;                     &lt;td&gt;Last Name&lt;/td&gt;                     &lt;td&gt;&lt;input type="text" name="lastname" value="${person.lastname}" /&gt;&lt;/td&gt;                 &lt;/tr&gt;                 &lt;tr&gt;                     &lt;td&gt;Number&lt;/td&gt;                     &lt;td&gt;&lt;input type="text" name="number" value="${person.number}" /&gt;&lt;/td&gt;                 &lt;/tr&gt;                 &lt;tr&gt;                     &lt;td colspan="2"&gt;                         &lt;input type="submit" name="action" value="Add" /&gt;                         &lt;input type="submit" name="action" value="Edit" /&gt;                         &lt;input type="submit" name="action" value="Delete" /&gt;                         &lt;input type="submit" name="action" value="Search" /&gt;                     &lt;/td&gt;                                 &lt;/tr&gt;                         &lt;/table&gt;         &lt;/form&gt;                 &lt;br&gt;         &lt;table border="1"&gt;             &lt;th&gt;ID&lt;/th&gt;             &lt;th&gt;First Name&lt;/th&gt;             &lt;th&gt;Last Name&lt;/th&gt;             &lt;th&gt;Number&lt;/th&gt;             &lt;c:forEach items="${allPersons}" var="pers"&gt;                 &lt;tr&gt;                     &lt;td&gt;${pers.personId}&lt;/td&gt;                     &lt;td&gt;${pers.firstname}&lt;/td&gt;                     &lt;td&gt;${pers.lastname}&lt;/td&gt;                     &lt;td&gt;${pers.yearLevel}&lt;/td&gt;                 &lt;/tr&gt;             &lt;/c:forEach&gt;         &lt;/table&gt;       &lt;/body&gt; &lt;/html&gt; </code></pre>  <p><a href="https://github.com/kamilwrobel/Phonebook" rel="nofollow">View full project on github</a></p>