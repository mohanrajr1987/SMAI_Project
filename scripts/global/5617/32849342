<p>Today we had a problem with our web application when database was updated but web application was not restarted.<br> After investigation we found that during db update one user defined type was dropped and created again.<br> Type was not changed - it was just dropped and created again using the same sql statement as it was before.  </p>  <p>Following code can show this problem.<br> There is java.sql.SQLSyntaxErrorException "ORA-00902: invalid datatype" when second prepared statement is executed.  </p>  <pre><code>String str = "select * from MYTESTTABLE where test in (select column_value from TABLE (?) tmp)";  OracleConnection conn = null; Properties connectionProps = new Properties(); connectionProps.put("user", "user"); connectionProps.put("password", "pwd");  conn = (OracleConnection) DriverManager         .getConnection("conn", connectionProps);  Statement stmt = conn.createStatement(); stmt.execute("drop table mytesttable"); stmt.execute("create table MYTESTTABLE ( test NUMBER(22))"); System.out.println("Table MYTESTTABLE was created");  stmt.execute("drop type my_type"); System.out.println("Type my_type was dropped"); stmt.execute("create type my_type as table of NUMBER(22)"); System.out.println("Type my_type was created");  String[] northEastRegion = { "10022", "02110", "07399" };  oracle.sql.ARRAY arr1 = new oracle.sql.ARRAY(         oracle.sql.ArrayDescriptor.createDescriptor("MY_TYPE", conn),         conn, northEastRegion);  PreparedStatement ps = conn.prepareStatement(str); ps.setArray(1, arr1); ps.executeQuery();  stmt.execute("drop type my_type"); System.out.println("Type my_type was dropped"); stmt.execute("create type my_type as table of NUMBER(22)"); System.out.println("Type my_type was created");  oracle.sql.ARRAY arr2 = new oracle.sql.ARRAY(         oracle.sql.ArrayDescriptor.createDescriptor("MY_TYPE", conn),         conn, northEastRegion);  ps = conn.prepareStatement(str); ps.setArray(1, arr2); ps.executeQuery(); //java.sql.SQLSyntaxErrorException: ORA-00902: invalid datatype </code></pre>  <p>Why arr1 and arr2 are treated as different types?<br> As I understand the problem is that these types have different OID.<br> But in java code I work with these types only by name. I do not use OID.  </p>  <p>How to deal with this problem?<br> Should we always restart web application after update of DB? Even if structure of DB was not changed.<br> Or should we specify(hardcode) OID when we create MY_TYPE?<br> What is the correct way?</p>  <p><strong>UPDATE:</strong><br> It seems to me that I've found the answer and a bug in oracle.sql.ArrayDescriptor.<br> See my answer below.</p>