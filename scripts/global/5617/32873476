<p>I'm integrating Spring and Hibernate. For testing, I'm developing a simple login form. After configuring everything the Error displayed is - </p>  <blockquote>   <p>java.lang.UnsupportedOperationException:The application must supply   JDBC connections</p> </blockquote>  <p>I'm attaching code - hibernate.config.xml</p>  <pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt; &lt;!DOCTYPE hibernate-configuration SYSTEM "classpath://org/hibernate/hibernate-configuration-3.0.dtd"&gt; &lt;hibernate-configuration&gt; &lt;session-factory&gt;     &lt;property name="show_sql"&gt;true&lt;/property&gt;     &lt;property name="dialect"&gt;org.hibernate.dialect.MySQLDialect&lt;/property&gt;     &lt;property name="hibernate.show_sql"&gt;true&lt;/property&gt;     &lt;property name="hibernate.connection.autocommit"&gt;true&lt;/property&gt;     &lt;property name="hibernate.hbm2ddl.auto"&gt;update&lt;/property&gt;     &lt;mapping resource="loginCred.hbm.xml"/&gt;  &lt;/session-factory&gt; &lt;/hibernate-configuration&gt; </code></pre>  <p>dispatcher-servlet.xml</p>  <pre><code> &lt;beans xmlns="http://www.springframework.org/schema/beans"   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"  xsi:schemaLocation="http://www.springframework.org/schema/mvc           http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd                 http://www.springframework.org/schema/tx    http://www.springframework.org/schema/tx/spring-tx-3.1.xsd                      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd                 http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd                 http://www.springframework.org/schema/jdbc                 http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd"&gt;   &lt;mvc:annotation-driven /&gt; &lt;context:component-scan base-package="controller" /&gt; &lt;context:component-scan base-package="dao"/&gt; &lt;context:component-scan base-package="domain"/&gt;  &lt;bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"&gt;     &lt;property name="prefix" value="/WEB-INF/view/" /&gt;     &lt;property name="suffix" value=".jsp" /&gt; &lt;/bean&gt;   &lt;bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean"&gt;     &lt;property name="configLocation" value="classpath:hibernate.cfg.xml" /&gt;     &lt;property name="dataSource" ref="dataSource" /&gt; &lt;/bean&gt;  &lt;bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"&gt;     &lt;property name="location"&gt;         &lt;value&gt;classpath:database.properties&lt;/value&gt;     &lt;/property&gt; &lt;/bean&gt; &lt;bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource"&gt;     &lt;property name="driverClassName" value="${jdbc.driverClassName}"/&gt;     &lt;property name="url" value="${jdbc.url}"/&gt;     &lt;property name="username" value="${jdbc.username}"/&gt;     &lt;property name="password" value="${jdbc.password}"/&gt; &lt;/bean&gt; </code></pre>  <p></p>  <p>database.properties-</p>  <pre><code>jdbc.driverClassName=com.mysql.jdbc.Driver jdbc.url=jdbc:mysql://localhost:3306/test jdbc.username=root jdbc.password=root </code></pre>  <p>and the ERROR - </p>  <pre><code>        ERROR: HHH000299: Could not complete schema update java.lang.UnsupportedOperationException: The application must supply JDBC connections     at org.hibernate.engine.jdbc.connections.internal.UserSuppliedConnectionProviderImpl.getConnection(UserSuppliedConnectionProviderImpl.java:61)       at org.hibernate.tool.hbm2ddl.SuppliedConnectionProviderConnectionHelper.prepare(SuppliedConnectionProviderConnectionHelper.java:51)       at org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:219)       at org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:203)       at org.hibernate.internal.SessionFactoryImpl.&lt;init&gt;(SessionFactoryImpl.java:522)       at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1859)       at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1930)       at dao.loginDa.checkLogin(loginDa.java:23)       at controller.loginC.auth(loginC.java:29)       at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)       at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)       at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)       at java.lang.reflect.Method.invoke(Method.java:606)       at org.springframework.web.bind.annotation.support.HandlerMethodInvoker.invokeHandlerMethod(HandlerMethodInvoker.java:175)       at org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter.invokeHandlerMethod(AnnotationMethodHandlerAdapter.java:436)       at org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter.handle(AnnotationMethodHandlerAdapter.java:424)     at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:790)       at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:719)       at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:669)       at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:585)       at javax.servlet.http.HttpServlet.service(HttpServlet.java:643)       at javax.servlet.http.HttpServlet.service(HttpServlet.java:723)       at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)       at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)       at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)       at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)       at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)       at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:103)       at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)       at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:293)       at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:861)       at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:620)       at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)       at java.lang.Thread.run(Thread.java:745) </code></pre>  <p>Here is my Code for Validation of Login</p>  <pre><code>public boolean checkLogin(entityLogin login)  {     if(login.equals(null))     {         return false;     }     else     {         System.out.println("inside dao");          SessionFactory sFactory=new Configuration().configure().buildSessionFactory();         Session session=sFactory.openSession();          Query query=session.createQuery("from entityLogin where username='"+login.getUsername()+"' and password='"+login.getPassword()+"'");         List ls=query.list();           if(ls.isEmpty())         {             System.out.println("inside list if Empty");             return false;         }         else         {             System.out.println("inside list if All good");             return true;         }     } } </code></pre>