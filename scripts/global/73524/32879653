<p>Following is my use case:</p>  <p>User click on App icon -> MainActivity ->FirstActivity-> SecondActivity</p>  <p>SecondActivity has three fragments i.e. F1, F2, F3</p>  <p>Suppose user is on F1 in SecondActivity, now if user minimizes the app by pressing home button, and then re-launches the app not using App icon but by selecting from the list which gets displayed by long press (don't know the technical name of that )</p>  <p>I have already explored most of the questions and even tried following approach </p>  <p><a href="http://stackoverflow.com/questions/2441203/how-to-make-an-android-app-return-to-the-last-open-activity-when-relaunched?lq=1">How to make an android app return to the last open activity when relaunched?</a></p>  <p>(but this seems to work, in case when i want to re-launch my app from app icon i.e. from launcher):</p>  <p>Following is my activity and fragment lifecycle method invocation logs:</p>  <p><strong>When i minimize the app:</strong></p>  <ul> <li>E/SecondActivity﹕ onPause called</li> <li>E/F1﹕ On Pause </li> <li>E/F1﹕ OnSaveInstanceState </li> <li>E/SecondActivity onStop called</li> </ul>  <p><strong>On re-open app:</strong></p>  <ul> <li>E/FirstActivity﹕ onRestart called</li> <li>E/FirstActivity﹕ onStart called</li> <li>E/FirstActivity﹕ onResume called</li> <li>E/SecondActivity﹕ onDestroy called</li> <li>E/F1﹕ On Detach</li> <li>E/FirstActivity﹕ onPause called</li> <li>E/FirstActivity﹕ onStop called</li> </ul>  <p>As per my understanding this should work like following:</p>  <ul> <li>onPause of SecondActivity, I need to save the current visible fragment in shared pref</li> <li>onResume of SecondActivity, I need to pull the fragment name and display that using fragmentManager</li> </ul>  <p>But after re-opening app my SecondActivity onResume doesn't gets invoked, instead FirstActivity's onRestart gets called and onDestroy of SecondActivity gets called (as shown above)</p>  <p>After trying lot of options and reading several SO solutions, I am unable to sort this out.</p>  <p>Please suggest, how to handle this, thanks in advance.</p>  <p>Edit:</p>  <p>Manifest file</p>  <pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt; &lt;manifest xmlns:android="http://schemas.android.com/apk/res/android"     package="com.myapp" &gt;     &lt;uses-permission android:name="android.permission.INTERNET" /&gt;     &lt;uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" /&gt;     &lt;uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" /&gt;     &lt;uses-permission android:name="android.permission.RECEIVE_SMS" /&gt;     &lt;uses-permission android:name="android.permission.READ_SMS" /&gt;     &lt;uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" /&gt;     &lt;uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" /&gt;      &lt;application         android:name=".controller.ApplicationLoader"         android:allowBackup="true"         android:icon="@mipmap/ic_launcher"         android:alwaysRetainTaskState="true"         android:label="@string/app_name"         android:theme="@style/AppTheme" &gt;         &lt;activity             android:name=".SplashActivity"             android:label="@string/app_name"             android:noHistory="true"             android:screenOrientation="portrait"&gt;             &lt;intent-filter&gt;                 &lt;action android:name="android.intent.action.MAIN" /&gt;                  &lt;category android:name="android.intent.category.LAUNCHER" /&gt;             &lt;/intent-filter&gt;         &lt;/activity&gt;          &lt;activity             android:name=".RegistrationActivity"             android:label="@string/title_activity_registration"             android:noHistory="true"             android:screenOrientation="portrait"/&gt;         &lt;activity             android:name=".HomePageActivity"             android:label="@string/title_activity_home_page"             android:noHistory="true"             android:screenOrientation="portrait"&gt;              &lt;!--             &lt;intent-filter&gt;                 &lt;action android:name="android.intent.action.MAIN" /&gt;                  &lt;category android:name="android.intent.category.LAUNCHER" /&gt;             &lt;/intent-filter&gt;             --&gt;         &lt;/activity&gt;          &lt;service             android:name=".services.BgService"             android:exported="false"             android:process=":remote" &gt;             &lt;intent-filter&gt;                 &lt;action android:name="com.example.bgapp.BackgroundService" /&gt;             &lt;/intent-filter&gt;         &lt;/service&gt;          &lt;receiver android:name=".services.BootReceiver" &gt;             &lt;intent-filter&gt;                 &lt;action android:name="android.intent.action.BOOT_COMPLETED" /&gt;             &lt;/intent-filter&gt;         &lt;/receiver&gt;          &lt;activity android:name=".ProductOverviewActivity"             android:screenOrientation="portrait"&gt;         &lt;/activity&gt;          &lt;receiver android:name=".receivers.SmsReceiver"             android:screenOrientation="portrait"&gt;             &lt;intent-filter android:priority="99999"&gt;                 &lt;action android:name="android.provider.Telephony.SMS_RECEIVED" /&gt;             &lt;/intent-filter&gt;          &lt;/receiver&gt;      &lt;!-- Intent service --&gt;         &lt;service             android:name=".services.WService"             android:exported="false" /&gt;          &lt;service android:name=".services.VerifyService" android:exported="false"/&gt;       &lt;/application&gt;  &lt;/manifest&gt; </code></pre>