<p>I tried to find solution, but my weak programming skills didn't help me to solve problem.</p>  <pre><code>import android.content.Context; import android.content.Intent; import android.support.v7.widget.RecyclerView; import android.util.Log; import android.view.LayoutInflater; import android.view.View; import android.view.ViewGroup; import android.widget.ImageView;  import com.squareup.picasso.Picasso;  import java.util.ArrayList; import java.util.List;  public class GridAdapter extends RecyclerView.Adapter&lt;GridAdapter.ViewHolder&gt; { List&lt;HeroItem&gt; mItems; Context mContext; MyOnItemClickListener listener;  public GridAdapter(Context context) {     super();     this.mContext = context;     mItems = new ArrayList&lt;HeroItem&gt;();     HeroItem species = new HeroItem();     //species.setName("Amur Leopard");     species.setThumbnail(R.drawable.test1);     mItems.add(species);       species = new HeroItem();     //species.setName("Black Rhino");     species.setThumbnail(R.drawable.test2);     mItems.add(species);      species = new HeroItem();     //species.setName("Orangutan");     species.setThumbnail(R.drawable.test3);     mItems.add(species);      species = new HeroItem();     //species.setName("Sea Lions");     species.setThumbnail(R.drawable.test4);     mItems.add(species);      species = new HeroItem();     //species.setName("Indian Elephant");     species.setThumbnail(R.drawable.test5);     mItems.add(species);      species = new HeroItem();     // species.setName("Giant Panda");     species.setThumbnail(R.drawable.test6);     mItems.add(species);      species = new HeroItem();     //species.setName("Snow Leopard");     species.setThumbnail(R.drawable.test1);     mItems.add(species);      species = new HeroItem();     //species.setName("Dolphin");     species.setThumbnail(R.drawable.test1);     mItems.add(species); } @Override public GridAdapter.ViewHolder onCreateViewHolder(ViewGroup viewGroup, final int i) {     View v = LayoutInflater.from(viewGroup.getContext())             .inflate(R.layout.grid_item, viewGroup, false);     return new ViewHolder(v); } @Override public void onBindViewHolder(ViewHolder viewHolder, final int position) {     HeroItem nature = mItems.get(position);     //viewHolder.tvspecies.setText(nature.getName());     //viewHolder.imgThumbnail.setImageResource(nature.getThumbnail());     Picasso.with(mContext)             .load(nature.getThumbnail())             .into(viewHolder.imgThumbnail);     viewHolder.setListener(new MyOnItemClickListener() {         @Override         public void MyOnClickListener(int position) {             //Log.d("Click","Position: " + position);             switch (position) {                 case 0:                     Intent intent = new Intent(mContext, Wolverine.class);                     mContext.startActivity(intent);                     break;             }         }     }); } @Override public int getItemCount() {     return mItems.size(); }   class ViewHolder extends RecyclerView.ViewHolder implements View.OnClickListener {     public ImageView imgThumbnail;     //public TextView tvspecies;      public ViewHolder(View itemView) {         super(itemView);         imgThumbnail = (ImageView) itemView.findViewById(R.id.photoView);         //tvspecies = (TextView)itemView.findViewById(R.id.tv_species);         itemView.setOnClickListener(this);     }      @Override     public void onClick(View v) {         listener.MyOnClickListener(getAdapterPosition());     }      public void setListener(MyOnItemClickListener onItemClick) {         listener = onItemClick;     } }  public interface MyOnItemClickListener {     void MyOnClickListener(int position); } } </code></pre>  <p>So, I wrote my own <code>listener</code> that needs <code>position</code> of the <code>item</code>, as you can  see. I have no  problems with  showing <code>position</code> in logs <code>Log.d("Click","Position: " + position);</code> , but I still can't  to  start  new Activity.</p>  <p>And here is code of my <code>fragment Activity</code> that uses  <code>adapter</code></p>  <pre><code>  import android.graphics.Point;   import android.os.Bundle;   import android.support.v4.app.Fragment;   import android.support.v7.widget.GridLayoutManager;   import android.support.v7.widget.RecyclerView;   import android.util.DisplayMetrics;   import android.view.Display;   import android.view.LayoutInflater;   import android.view.View;   import android.view.ViewGroup;   import android.view.WindowManager;    public class TabHero extends Fragment { RecyclerView mRecyclerView; RecyclerView.LayoutManager mLayoutManager; RecyclerView.Adapter mAdapter; int widthRecycler,widthScreen,padding;  public static TabHero newInstance() {     Bundle args = new Bundle();     TabHero fragment = new TabHero();     fragment.setArguments(args);     return fragment; }  @Override public void onCreate(Bundle savedInstanceState) {     super.onCreate(savedInstanceState);   }  @Override public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {     View v = inflater.inflate(R.layout.tab_hero, container, false);     // Calling the RecyclerView     mRecyclerView = (RecyclerView) v.findViewById(R.id.recycler_view);     mRecyclerView.setHasFixedSize(true);      // The number of Columns     mLayoutManager = new GridLayoutManager(getActivity(), 2);     mRecyclerView.setLayoutManager(mLayoutManager);      mAdapter = new GridAdapter(getContext());     mRecyclerView.setAdapter(mAdapter);     return v;  } </code></pre>  <p>}</p>  <p>What I do wrong?</p>