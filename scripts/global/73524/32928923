<p>I am making a program to record goals in the main activity and display them in the second activity (displayCalendar Activity). Below shows the GoalCreate class which simply stores the inputs defined in the MainActivity class.</p>  <pre><code>public class GoalCreate implements Serializable {      String goalName = " ";     String goalDesc = " ";     String dataType = " ";     int dataValue = 0;     int radioSelect = 0;      private int[] dayofWeek = new int[6];     private int frequency = 0;      public GoalCreate(String a, String b, String c, int d, int e, int[] f, int g)     {         goalName = a;         goalDesc = b;         dataType = c;         dataValue = d;         radioSelect = e;         dayofWeek = f;         frequency = g;     }      public String getGoalName()     {         return goalName;     }     public String getGoalDesc()     {         return goalDesc;     }     public String  getDataType()     {         return dataType;     }     public String getDataValue()     {         return Integer.toString(dataValue);     }     public String getRadioSelect()     {         return Integer.toString(radioSelect);     }     public String getMonday()     {         return Integer.toString(dayofWeek[0]);     }     public String getTuesday() {         return Integer.toString(dayofWeek[1]);     }     public String getWednesday()     {         return Integer.toString(dayofWeek[2]);     }     public String getThursday()     {         return Integer.toString(dayofWeek[3]);     }     public String getFriday()     {         return Integer.toString(dayofWeek[4]);     }     public String getSaturday()     {         return Integer.toString(dayofWeek[5]);     }     public String getSunday()     {         return Integer.toString(dayofWeek[6]);     }     public String getFrequency()     {         return Integer.toString(frequency);     } } </code></pre>  <p>Below is the MainActivity Class:</p>  <pre><code>Public class MainActivity extends ActionBarActivity implements AdapterView.OnItemSelectedListener {      GoalCreate myGoal;     Spinner dataSpin, catSpin;     NumberPicker dataNP, np2;     Button goalBut;     CheckBox MonCB, TueCB, WedCB, ThuCB, FriCB, SatCB, SunCB;      int radioSelectNum = 0;     int[] week = new int[7];      @Override     protected void onCreate(Bundle savedInstanceState) {          super.onCreate(savedInstanceState);         setContentView(R.layout.activity_main);          //Creating the spinner         dataSpin = (Spinner) findViewById(R.id.data_type);         // Create an ArrayAdapter using the string array and a default spinner layout         ArrayAdapter&lt;CharSequence&gt; adapter = ArrayAdapter.createFromResource(this,                 R.array.data_type, android.R.layout.simple_spinner_item);         // Specify the layout to use when the list of choices appears         adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);         // Apply the adapter to the spinner         dataSpin.setAdapter(adapter);         dataSpin.setOnItemSelectedListener(this);          //Create the spinner for the category         catSpin = (Spinner) findViewById(R.id.category_type);         ArrayAdapter&lt;CharSequence&gt; adapter2 = ArrayAdapter.createFromResource(this, R.array.category_type, android.R.layout.simple_spinner_item);         adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);         catSpin.setAdapter(adapter2);         catSpin.setOnItemSelectedListener(this);          //Create the number picker         dataNP = (NumberPicker) findViewById(R.id.numberPicker);         np2 = (NumberPicker) findViewById(R.id.numberPicker2);         //Set the number pickers up         np2.setMinValue(1);         np2.setMaxValue(7);         dataNP.setMinValue(1);         dataNP.setMaxValue(1000);      }      public void sendGoal(View view)     {         final Context context = getApplicationContext();         goalBut = (Button) findViewById(R.id.button);         goalBut.setOnClickListener(new View.OnClickListener() {             public void onClick(View v) {                  // Perform action on click                 int idNumber = 1;                 int numberPick1 = dataNP.getValue();                 int numberPick2 = np2.getValue();                 int occurNum = 1;                 int dataSpec = 0;                 String idNum, goalName, goalDesc, goalCat, dataType;                 idNum = Integer.toString(idNumber) + " ";                  EditText goalText = (EditText)findViewById(R.id.goal_message);                 goalName = goalText.getText().toString() + " ";                 EditText descText = (EditText)findViewById(R.id.goal_description);                 goalDesc = descText.getText().toString() + " ";                 goalCat = catSpin.getSelectedItem().toString() + " ";                 dataType = dataSpin.getSelectedItem().toString() + " ";                 if (dataSpin.getSelectedItem().toString().equals("Numeric"))                 {                     dataSpec = numberPick1;                 }                 else                 {                     dataSpec = 1;                 }                 occurNum = numberPick2;                  myGoal = new GoalCreate(goalName,goalDesc, dataType, dataSpec, radioSelectNum, week,occurNum);              }         });          Intent intent = new Intent(context, DisplayCalender.class);         Bundle bundle = new Bundle();         bundle.putSerializable("goal",myGoal);         intent.putExtras(bundle);         startActivity(intent);     } </code></pre>  <p>Then finally, I want to be able to pass the myGoal that was defined by the user input in the MainActivity and pass it to the DisplayCalendar activity.</p>  <pre><code>public class DisplayCalender extends ActionBarActivity {  GoalCreate aGoal;  Spinner goalSpin;  @Override protected void onCreate(Bundle savedInstanceState) {     super.onCreate(savedInstanceState);     setContentView(R.layout.activity_display_calender);     int[] anArray = new int[6];      Intent intent = getIntent();     Bundle bundle = intent.getExtras();      aGoal = (GoalCreate) bundle.getSerializable("goal");      Toast toast = Toast.makeText(getApplicationContext(), aGoal.getGoalName(), Toast.LENGTH_LONG);     toast.show(); </code></pre>  <p>The code does not give me any errors. However, as soon as I attempt to pull the data from the serialized object that was passed to the DisplayCalendar activity, the app crashes.</p>  <p>Specifically, the crash occurs when attempting to show in the Toast the "aGoal.getGoalName()".</p>  <p>What am I doing incorrectly about the serialization?</p>  <p>I have been looking on StackOverFlow a lot for answers to my question and have implemented those options but they still do not work. I am not sure if there is something else I am doing improperly. Below is the output in the log:</p>  <pre><code>java.lang.NullPointerException             at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2395)             at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2453)             at android.app.ActivityThread.access$900(ActivityThread.java:173)             at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1303)             at android.os.Handler.dispatchMessage(Handler.java:102)             at android.os.Looper.loop(Looper.java:136)             at android.app.ActivityThread.main(ActivityThread.java:5579)             at java.lang.reflect.Method.invokeNative(Native Method)             at java.lang.reflect.Method.invoke(Method.java:515)             at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1268)             at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1084)             at dalvik.system.NativeStart.main(Native Method) </code></pre>  <p>Thank you for your help on this matter. </p>