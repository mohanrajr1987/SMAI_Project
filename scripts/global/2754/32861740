<p>There is a protocol:</p>  <pre><code>protocol Valuable {     func value() -&gt; Int } </code></pre>  <p>and a class which implements the protocol:</p>  <pre><code>class Value: Valuable {     private let v: Int      init(value: Int) {         v = value     }      func value() -&gt; Int {         return v     } } </code></pre>  <p>There is an array of Value objects stored in a variable of Any type:</p>  <pre><code>let any: Any = [Value(value: 1), Value(value: 2), Value(value: 3)] </code></pre>  <p>It is possible to cast Any to [Value]:</p>  <pre><code>let arrayOfValue = any as? [Value] // [1, 2, 3] </code></pre>  <p>Why it is not possible to case Any to [Valuable]?</p>  <pre><code>let arrayOfValuable = any as! [Valuable] // compiler error BAD INSTRUCTION let arrayOfValuable2 = any as? [Valuable] // nil </code></pre>