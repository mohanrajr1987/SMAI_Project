<p>Is there any way to force a <code>class</code> or <code>struct</code> in C# to point to a specific block of memory, as in a <code>MemoryStream</code> or an array of <code>byte</code>s? If so, is there also a way to call its constructor after casting? I realize that there is little <em>practicality</em> in this, and it's potentially <em>unsafe</em>; I'm just trying to understand the facets of the language. </p>  <p>Here is some demo C++ code of what I'm describing:</p>  <pre><code>#include &lt;stdio.h&gt; #include &lt;conio.h&gt;  // Don't worry about the class definition... as the name implies, it's junk class JunkClass { private:     int a;     int b;  public:     JunkClass(int aVal, int bVal) : a(aVal), b(bVal) { }     ~JunkClass() { }      static void *operator new(size_t size, void *placement){ return placement; } }; </code></pre>  <p>//..</p>  <pre><code>// Assuming 32-bit integer and no padding // This will be the memory where the class pointer is cast from unsigned char pBytes[] = { 0, 0, 0, 0, 0, 0, 0, 0 }; </code></pre>  <p>//..</p>  <pre><code>int main(void) {     // The next two lines are what I want to do in C#     JunkClass *pClass = (JunkClass *)pBytes; // Class pointer pointing to pBytes     pClass = new(pBytes) JunkClass(0x44332211, 0x88776655); // Call its constructor using placement new operator      // Verify bytes were set appropriately by the class     // This should print 11 22 33 44 55 66 77 88 to the console     unsigned char *p = pBytes;     for (int i = 0; i &lt; 8; i++)         printf("%02X ", *(p++));      // Call destructor     pClass-&gt;~JunkClass();     while (!_kbhit());     return 0; } </code></pre>