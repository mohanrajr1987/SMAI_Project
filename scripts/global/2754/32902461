<p>I've an interface generated at runtime.</p>  <p>I'm creating its implementation at runtime using a <a href="http://www.castleproject.org/projects/dynamicproxy/" rel="nofollow">DynamicProxy generator</a>. For example:</p>  <pre><code>Type generatedInterfaceType = UI.Helpers.ClassBuilderHelper.compileResultType(this.digitalInputs);  IInterceptor[] interceptors = new IInterceptor[1]; interceptors[0] = new Interceptors.Dynamic.ILinkedPropertiesInterceptor();  Type[] interfaces = new Type[1]; interfaces[0] = generatedInterfaceType;  object proxy =  DynamicExtensions.proxyGenerator.CreateClassProxyWithTarget(     target.GetType(),     interfaces,     target,     options,     interceptors ); </code></pre>  <p>Atfer the last sentence, <code>proxy.GetType()</code> backs me an <code>Castle.Proxies.DigitalInputProxy</code>. This type is created at runtime by Castle's <code>DynamicProxyGenerator</code> and it implements my interface also generated at runtime.</p>  <p>So after that:</p>  <pre><code>Type proxyType = proxy.GetType(); //proxyType is Castle.Proxies.DigitalInputProxy Type[] interfaces = proxyType.GetInterfaces(); Type myGeneratedInterface = interfaces[0]; // myGeneratedInterface is my generated interface. </code></pre>  <p>The problem is that I don't know how to convert <code>proxy</code> to my interface generated at runtime. I've tried:</p>  <pre><code>var dynamicTypeObject = Convert.ChangeType(proxy, myGeneratedInterface); </code></pre>  <p>It throws me an <code>InvalidCastException</code> telling me: <code>{"object must implement IConvertible"}</code>.</p>  <p>Some help?</p>