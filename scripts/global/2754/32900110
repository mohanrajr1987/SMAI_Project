<p>Actually, I want to track some statistics during a computation that takes a lot of time. Here is a reproducible example, even if it doesn't make sense for you, it's easier for me to start from here since I don't want to explain my whole problem and put my whole code. So there is a computation, a while loop that generate random numbers, it is supposed to take a lot of time. During this loop, I want to track some statistics. So I want to track what is the minimum so far, what is the maximum so far, the number of iteration so fart, etc... So it's easy to do it with a cat function. The problem is if I do it the regular way, for each iteration, it adds a new output. See the code :</p>  <pre><code>i=1 min=99 max=-99 while(i&lt;10000) {   x=rnorm( 1, 0, 2 )   if (x&lt;min)min=x   if (x&gt;max)max=x   cat("\niteration :",i)   cat("\nmin :",min)   cat("\nmax :",max)   i=i+1 } </code></pre>  <p>console view :</p>  <pre><code>  ...     iteration : 9997     min : -6.670651     max : 7.082235     iteration : 9998     min : -6.670651     max : 7.082235     iteration : 9999     min : -6.670651     max : 7.082235 </code></pre>  <p>To address this problem, it's possible to use the \r separator. It works well but it put the bunch of statistics I want to track on the same line. Here is the code :</p>  <pre><code>i=1 min=99 max=-99 while(i&lt;10000) {   x=rnorm( 1, 0, 2 )   if (x&lt;min)min=x   if (x&gt;max)max=x   cat("\riteration :",i, "min : ",min, "max : ", max)   i=i+1 } </code></pre>  <p>console view (almost good)</p>  <pre><code>iteration : 7747 (running) min :  -7.173628 (running) max :  7.713919988887 (running) </code></pre>  <p>My expected result is that I want to stack the statistics, I want to insert a line break inside the \r separator, like this :</p>  <pre><code>iteration : 4512 (running) min : -2.315584 (running) max : 3.215478 (running) </code></pre>  <p>When I add "\r" and "\n" separator in my code like this :</p>  <pre><code>i=1 min=99 max=-99 while(i&lt;10000) {   x=rnorm( 1, 0, 2 )   if (x&lt;min)min=x   if (x&gt;max)max=x   cat("\riteration :",i, "\nmin : ",min, "\nmax : ", max)   i=i+1 } </code></pre>  <p>It doesn't produce the expected result, at each iteration there is a line break! </p>  <pre><code>... min :  -8.344142  iteration : 9997  min :  -8.344142  iteration : 9998  min :  -8.344142  iteration : 9999  min :  -8.344142  max :  7.99123 </code></pre>  <p>For each iteration, it writes two lines in the console. My problem is that I want my code to produce only two lines for the whole loop but I want those lines be refreshed with the good values. Thanks for your help.</p>