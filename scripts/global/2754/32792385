<p>Could anyone explain why that happens?</p>  <pre><code>scala&gt; def as[T](v: Any) = Try(v.asInstanceOf[T]) as: [T](v: Any)scala.util.Try[T]  scala&gt; as[Int]("Hello") res0: scala.util.Try[Int] = Success(Hello)  scala&gt; res0.map(_ + 1) res1: scala.util.Try[Int] = Failure(java.lang.ClassCastException: java.lang.String cannot be cast to java.lang.Integer) </code></pre>  <p>It's not about boxing because you could use your own type instead of <code>Int</code> and it behaves the same way.</p>  <p>Doesn't seem to be about by-name parameter either, because you could replace <code>Try</code> with <code>Option</code> and it will be the same.</p>  <p>I'm guessing it's about erasure, but maybe somebody could give a detailed explanation?</p>