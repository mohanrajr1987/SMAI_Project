<pre><code>(gdb) break main Breakpoint 1 at 0x80483e4: file hello.c, line 6. (gdb) run Starting program: /PROG/1/a.out   Breakpoint 1, main () at hello.c:6 6       for(i=0;i&lt;10;i++)  (gdb) disassemble main Dump of assembler code for function main:    0x080483d4 &lt;+0&gt;:     push   ebp    0x080483d5 &lt;+1&gt;:     mov    ebp,esp    0x080483d7 &lt;+3&gt;:     sub    esp,0x8    0x080483da &lt;+6&gt;:     and    esp,0xfffffff0    0x080483dd &lt;+9&gt;:     mov    eax,0x0    0x080483e2 &lt;+14&gt;:    sub    esp,eax    0x080483e4 &lt;+16&gt;:    mov    DWORD PTR [ebp-0x4],0x0    0x080483eb &lt;+23&gt;:    cmp    DWORD PTR [ebp-0x4],0x9    0x080483ef &lt;+27&gt;:    jle    0x80483f3 &lt;main+31&gt;    0x080483f1 &lt;+29&gt;:    jmp    0x8048406 &lt;main+50&gt;    0x080483f3 &lt;+31&gt;:    mov    DWORD PTR [esp],0x80484e4       &lt;=this instruction 'doesn't have influence'    0x080483fa &lt;+38&gt;:    call   0x80482f0 &lt;printf@plt&gt;    0x080483ff &lt;+43&gt;:    lea    eax,[ebp-0x4]    0x08048402 &lt;+46&gt;:    inc    DWORD PTR [eax]    0x08048404 &lt;+48&gt;:    jmp    0x80483eb &lt;main+23&gt;    0x08048406 &lt;+50&gt;:    mov    eax,0x0    0x0804840b &lt;+55&gt;:    leave      0x0804840c &lt;+56&gt;:    ret     End of assembler dump.  (gdb) nexti 0x080483eb  6       for(i=0;i&lt;10;i++) (gdb) nexti 0x080483ef  6       for(i=0;i&lt;10;i++) (gdb) nexti 7           printf("Hello, World!\n"); (gdb) i r esp esp            0xbffff520   0xbffff520 (gdb) nexti 0x080483fa  7           printf("Hello, World!\n"); (gdb) i r esp esp            0xbffff520   0xbffff520 (gdb) nexti 0x08048402  6       for(i=0;i&lt;10;i++) (gdb) i r esp esp            0xbffff520   0xbffff520                         &lt;=esp stays the same all the time    (gdb) quit </code></pre>  <p>The instructions you see were build with gcc-3.3.6 (gcc -g hello.c), on a Gentoo system(i686). They affect the system to print 'Hello, World!' 10 times. </p>  <p>As you can see the <code>mov</code> instruction 'should' write the address 0x80484e4 in the register esp, but the command i r esp(info register esp) returns the same all the time. </p>  <p>I tried everything with different versions of gdb, I even tried it on different distros. However its the same all the time.</p>  <p>Thank you.</p>