<p>I have tried looking for similar bombs with similar assembly and I cant seem to find one. I am having trouble with this phase specifically what is going on at line &lt;70>. Here is my assembly and below are my findings:</p>  <pre><code>   0x00000000004011f1 &lt;+0&gt;: sub    $0x18,%rsp    0x00000000004011f5 &lt;+4&gt;: lea    0xc(%rsp),%rcx    0x00000000004011fa &lt;+9&gt;: lea    0x8(%rsp),%rdx    0x00000000004011ff &lt;+14&gt;:    mov    $0x402af1,%esi    0x0000000000401204 &lt;+19&gt;:    mov    $0x0,%eax    0x0000000000401209 &lt;+24&gt;:    callq  0x400cb0 &lt;__isoc99_sscanf@plt&gt;    0x000000000040120e &lt;+29&gt;:    cmp    $0x1,%eax    0x0000000000401211 &lt;+32&gt;:    jg     0x401218 &lt;phase_5+39&gt;    0x0000000000401213 &lt;+34&gt;:    callq  0x401785 &lt;explode_bomb&gt;    0x0000000000401218 &lt;+39&gt;:    mov    0x8(%rsp),%eax    0x000000000040121c &lt;+43&gt;:    and    $0xf,%eax    0x000000000040121f &lt;+46&gt;:    mov    %eax,0x8(%rsp)    0x0000000000401223 &lt;+50&gt;:    cmp    $0xf,%eax    0x0000000000401226 &lt;+53&gt;:    je     0x401254 &lt;phase_5+99&gt;    0x0000000000401228 &lt;+55&gt;:    mov    $0x0,%ecx    0x000000000040122d &lt;+60&gt;:    mov    $0x0,%edx    0x0000000000401232 &lt;+65&gt;:    add    $0x1,%edx    0x0000000000401235 &lt;+68&gt;:    cltq       0x0000000000401237 &lt;+70&gt;:    mov    0x402820(,%rax,4),%eax    0x000000000040123e &lt;+77&gt;:    add    %eax,%ecx    0x0000000000401240 &lt;+79&gt;:    cmp    $0xf,%eax    0x0000000000401243 &lt;+82&gt;:    jne    0x401232 &lt;phase_5+65&gt;    0x0000000000401245 &lt;+84&gt;:    mov    %eax,0x8(%rsp)    0x0000000000401249 &lt;+88&gt;:    cmp    $0xf,%edx    0x000000000040124c &lt;+91&gt;:    jne    0x401254 &lt;phase_5+99&gt;    0x000000000040124e &lt;+93&gt;:    cmp    0xc(%rsp),%ecx    0x0000000000401252 &lt;+97&gt;:    je     0x401259 &lt;phase_5+104&gt;    0x0000000000401254 &lt;+99&gt;:    callq  0x401785 &lt;explode_bomb&gt;    0x0000000000401259 &lt;+104&gt;:   add    $0x18,%rsp    0x000000000040125d &lt;+108&gt;:   retq enter code here </code></pre>  <p>I know that the function taking two integers. The first one entered is at rdx and the second one is at rcx. It then puts the first integer into eax &lt;39> after it makes sure two numbers were inputted.</p>  <p>&lt;43> It then takes the least significant bit of eax with a bitwise and and stores it in eax</p>  <p>&lt;46> the new value of eax is then stored in the original location of the first integer.</p>  <p>&lt;50> eax is compared with 15 and if its less than 15 the program continue</p>  <p>&lt;55,60> ecx and edx are now 0</p>  <p>&lt;65> we start a loop edx is the index and 1 is added to it before starting the loop.</p>  <p>&lt;70> I am not sure what exactly is happening here mov    0x402820(,%rax,4),%eax but i know that it is changing the value of eax</p>  <p>&lt;77> adds the summ of eax and ecx (im not sure how ecx ever gets a value as it was already set at 0 &lt;55> and there is no change up until this instruction </p>  <p>&lt;79>checks if eax = 15 if it doesnt the loop reruns</p>  <p>&lt;88>when eax is 15 it then checks if the loop counter edx has been run 15 times </p>  <p>&lt;93> compares the second int entered to ecx which i beleive eax would equal to eax from line &lt;77></p>  <p>any help or guidance is greatly appreciated.</p>