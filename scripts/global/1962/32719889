<p>I've used the eclipse adt or ds-5 plug-in debugging success！ Today, I try to use the command line ndk-gdb debugger encounter the following error,</p>  <pre><code>lpcdma:proj.android pengliu$ ndk-gdb-py -launch=org.cocos2dx.cpp.AppActivity Attached; pid = 5067 Listening on Unix socket debug-socket 806 KB/s (9560 bytes in 0.011s) 1613 KB/s (63664 bytes in 0.038s) 1780 KB/s (310652 bytes in 0.170s) GNU gdb (GDB) 7.6 Copyright (C) 2013 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later &lt;http://gnu.org/licenses/gpl.html&gt; This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law.  Type "show copying" and "show warranty" for details. This GDB was configured as "--host=x86_64-apple-darwin --target=arm-linux-android". For bug reporting instructions, please see: &lt;http://source.android.com/source/report-bugs.html&gt;. Warning: /private/tmp/ndktest/proj.android/../cocos2d/cocos/./../external/nslog: No such file or directory. Remote debugging from host 80.175.61.0 warning: Could not load shared library symbols for 93 libraries, e.g. libstdc++.so. Use the "info sharedlibrary" command to see the complete listing. Do you need "set solib-search-path" or "set sysroot"? 0x40104908 in __futex_syscall3 ()    from /private/tmp/ndktest/proj.android/obj/local/armeabi/libc.so (gdb) list main.cpp No symbol table is loaded.  Use the "file" command. (gdb) file obj/local/armeabi/libcocos2dcpp.so A program is being debugged already. Are you sure you want to change the file? (y or n) y Reading symbols from /private/tmp/ndktest/proj.android/obj/local/armeabi/libcocos2dcpp.so...done. (gdb) list main.cpp Function "main.cpp" not defined. (gdb) list main.cpp:20 15  } (gdb) list main.cpp:14 9    10  using namespace cocos2d; 11   12  void cocos_android_app_init (JNIEnv* env) { 13      LOGD("cocos_android_app_init"); 14      AppDelegate *pAppDelegate = new AppDelegate(); 15  } (gdb) b main.cpp:14 Cannot access memory at address 0x3603ac </code></pre>  <p>Help me, thank you! I've done tests on os x and win32。</p>