<p>I'm writing an application with a custom camera functionality. In it the picture taken from the device's camera is immediately shown to user with the question if it really needs to be saved. I'm using method:</p>  <pre><code>public final void takePicture (Camera.ShutterCallback shutter, Camera.PictureCallback raw, Camera.PictureCallback postview, Camera.PictureCallback jpeg) </code></pre>  <p>(<a href="http://developer.android.com/reference/android/hardware/Camera.html#takePicture%28android.hardware.Camera.ShutterCallback,%20android.hardware.Camera.PictureCallback,%20android.hardware.Camera.PictureCallback,%20android.hardware.Camera.PictureCallback%29" rel="nofollow">http://developer.android.com/reference/android/hardware/Camera.html#takePicture%28android.hardware.Camera.ShutterCallback,%20android.hardware.Camera.PictureCallback,%20android.hardware.Camera.PictureCallback,%20android.hardware.Camera.PictureCallback%29</a>) </p>  <p>According to the documentation this method pauses the preview immediately after the picture has been taken, which is exactly the feature I need. However, on Samsung devices the preview is not paused, which I assume is a bug in their camera drivers. I can reproduce the bug on Galaxy S3 (GT-I9300), and QA says they reproduce it on other Samsung devices too. On devices from other manufacturers this method works just as expected.</p>  <p>I tried manually pausing the preview in each of the <code>Camera.takePicture()</code> callbacks, but none of them is executed at precise time when the picture is taken. This leads to a noticable difference between the picture that user is asked to review and the picture that was actually taken, which is especially terrible when the picture was taken with flashlight enabled.</p>  <p>Is there any way to workaround this behaviour?</p>