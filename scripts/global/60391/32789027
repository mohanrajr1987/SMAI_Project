<p>I'm trying to get my app ready for the new Android M permissions changes and found some weird behaviour. My app uses the Camera intent mechanism to allow the user to get a picture form the camera. But in another activity needs to make use of the camera itself with Camera permission (because of a library dependency card.io that requires this).</p>  <p>However with M in the activity that only needs a camera intent when I try to launch the Camera intent I see the following crash (this does not happen if I remove the Camera permission from the Manifest),</p>  <pre><code>&gt; 09-25 21:57:55.260 774-8053/? I/ActivityManager: START u0 &gt; {act=android.media.action.IMAGE_CAPTURE flg=0x3000003 &gt; pkg=com.google.android.GoogleCamera &gt; cmp=com.google.android.GoogleCamera/com.android.camera.CaptureActivity &gt; (has clip) (has extras)} from uid 10098 on display 0 09-25 &gt; 21:57:55.261 774-8053/? W/ActivityManager: Permission Denial: starting &gt; Intent { act=android.media.action.IMAGE_CAPTURE flg=0x3000003 &gt; pkg=com.google.android.GoogleCamera &gt; cmp=com.google.android.GoogleCamera/com.android.camera.CaptureActivity &gt; (has clip) (has extras) } from null (pid=-1, uid=10098) with revoked &gt; permission android.permission.CAMERA 09-25 21:57:55.263 32657-32657/? &gt; E/ResolverActivity: Unable to launch as uid 10098 package &gt; com.example.me.mycamerselectapp, while running in android:ui 09-25 &gt; 21:57:55.263 32657-32657/? E/ResolverActivity: &gt; java.lang.SecurityException: Permission Denial: starting Intent { &gt; act=android.media.action.IMAGE_CAPTURE flg=0x3000003 &gt; pkg=com.google.android.GoogleCamera &gt; cmp=com.google.android.GoogleCamera/com.android.camera.CaptureActivity &gt; (has clip) (has extras) } from null (pid=-1, uid=10098) with revoked &gt; permission android.permission.CAMERA 09-25 21:57:55.263 32657-32657/? &gt; E/ResolverActivity:     at &gt; android.os.Parcel.readException(Parcel.java:1599) 09-25 21:57:55.263 &gt; 32657-32657/? E/ResolverActivity:     at &gt; android.os.Parcel.readException(Parcel.java:1552) 09-25 21:57:55.263 &gt; 32657-32657/? E/ResolverActivity:     at &gt; android.app.ActivityManagerProxy.startActivityAsCaller(ActivityManagerNative.java:2730) &gt; 09-25 21:57:55.263 32657-32657/? E/ResolverActivity:     at &gt; android.app.Instrumentation.execStartActivityAsCaller(Instrumentation.java:1725) &gt; 09-25 21:57:55.263 32657-32657/? E/ResolverActivity:     at &gt; android.app.Activity.startActivityAsCaller(Activity.java:4047) 09-25 &gt; 21:57:55.263 32657-32657/? E/ResolverActivity:     at &gt; com.android.internal.app.ResolverActivity$DisplayResolveInfo.startAsCaller(ResolverActivity.java:983) &gt; 09-25 21:57:55.263 32657-32657/? E/ResolverActivity:     at &gt; com.android.internal.app.ResolverActivity.safelyStartActivity(ResolverActivity.java:772) &gt; 09-25 21:57:55.263 32657-32657/? E/ResolverActivity:     at &gt; com.android.internal.app.ResolverActivity.onTargetSelected(ResolverActivity.java:754) &gt; 09-25 21:57:55.263 32657-32657/? E/ResolverActivity:     at &gt; com.android.internal.app.ChooserActivity.onTargetSelected(ChooserActivity.java:305) &gt; 09-25 21:57:55.263 32657-32657/? E/ResolverActivity:     at &gt; com.android.internal.app.ResolverActivity.startSelected(ResolverActivity.java:603) &gt; 09-25 21:57:55.263 32657-32657/? E/ResolverActivity:     at &gt; com.android.internal.app.ChooserActivity.startSelected(ChooserActivity.java:310) &gt; 09-25 21:57:55.263 32657-32657/? E/ResolverActivity:     at &gt; com.android.internal.app.ChooserActivity$ChooserRowAdapter$2.onClick(ChooserActivity.java:990) &gt; 09-25 21:57:55.263 32657-32657/? E/ResolverActivity:     at &gt; android.view.View.performClick(View.java:5198) 09-25 21:57:55.263 &gt; 32657-32657/? E/ResolverActivity:     at &gt; android.view.View$PerformClick.run(View.java:21147) 09-25 21:57:55.263 &gt; 32657-32657/? E/ResolverActivity:     at &gt; android.os.Handler.handleCallback(Handler.java:739) 09-25 21:57:55.263 &gt; 32657-32657/? E/ResolverActivity:     at &gt; android.os.Handler.dispatchMessage(Handler.java:95) 09-25 21:57:55.263 &gt; 32657-32657/? E/ResolverActivity:     at &gt; android.os.Looper.loop(Looper.java:148) 09-25 21:57:55.263 &gt; 32657-32657/? E/ResolverActivity:     at &gt; android.app.ActivityThread.main(ActivityThread.java:5417) 09-25 &gt; 21:57:55.263 32657-32657/? E/ResolverActivity:     at &gt; java.lang.reflect.Method.invoke(Native Method) 09-25 21:57:55.263 &gt; 32657-32657/? E/ResolverActivity:     at &gt; com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:726) &gt; 09-25 21:57:55.263 32657-32657/? E/ResolverActivity:     at &gt; com.android.internal.os.ZygoteInit.main(ZygoteInit.java:616) 09-25 &gt; 21:57:55.286 1159-1159/? I/Keyboard.Facilitator: onFinishInput() 09-25 &gt; 21:57:55.297 32657-32676/? E/Surface: getSlotFromBufferLocked: unknown &gt; buffer: 0xaec352e0 09-25 21:57:55.344 325-349/? V/RenderScript: &gt; 0xb3693000 Launching thread(s), CPUs 4 09-25 21:57:57.290 325-349/? &gt; E/Surface: getSlotFromBufferLocked: unknown buffer: 0xb3f88240 </code></pre>  <p>Is this a known problem with Android M? And more importantly how do I work around this?</p>  <p> in the manifest I have the following,</p>  <pre><code>&lt;uses-permission android:name="android.permission.CAMERA" /&gt; </code></pre>  <p>and this is the code I use to let the user click a pic with the Camera and/or select an image</p>  <pre><code>public static Intent openImageIntent(Context context, Uri cameraOutputFile) {      // Camera.     final List&lt;Intent&gt; cameraIntents = new ArrayList&lt;Intent&gt;();     final Intent captureIntent = new Intent(android.provider.MediaStore.ACTION_IMAGE_CAPTURE);     final PackageManager packageManager = context.getPackageManager();     final List&lt;ResolveInfo&gt; listCam = packageManager.queryIntentActivities(captureIntent, 0);     for(ResolveInfo res : listCam) {         final String packageName = res.activityInfo.packageName;         final Intent intent = new Intent(captureIntent);         intent.setComponent(new ComponentName(res.activityInfo.packageName, res.activityInfo.name));         intent.setPackage(packageName);         intent.putExtra(MediaStore.EXTRA_OUTPUT, cameraOutputFile);         cameraIntents.add(intent);     }      // Filesystem.     final Intent galleryIntent = new Intent();     galleryIntent.setType("image/*");     galleryIntent.setAction(Intent.ACTION_GET_CONTENT);      // Chooser of filesystem options.     final Intent chooserIntent = Intent.createChooser(galleryIntent, "Take or select pic");      // Add the camera options.     chooserIntent.putExtra(Intent.EXTRA_INITIAL_INTENTS, cameraIntents.toArray(new Parcelable[]{}));     return chooserIntent; } </code></pre>  <p>I call the <code>openImageIntent()</code> on a button click in my activity. When I do not have the CAMERA permission in my app it works fine, but with that added I get the exception posted above.</p>  <pre><code>    @Override     public void onClick(View v) {         Intent picCaptureIntenet = openImageIntent(MainActivity.this, getTempImageFileUri(MainActivity.this));         try {             startActivityForResult(picCaptureIntenet, 100);         } catch(Exception e) {             Toast.makeText(MainActivity.this, e.getMessage(), Toast.LENGTH_SHORT).show();         }     } </code></pre>  <p></p>