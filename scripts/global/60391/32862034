<p>I implementing custom camera view in my application with getting getOptimalSize as below.</p>  <pre><code> private Camera.Size getOptimalSize(List&lt;Camera.Size&gt; sizes, int w, int h) {      double screenratio = (double)h/w;      final double ASPECT_TOLERANCE = 0.05;     double targetRatio = (double) w / h;     if (sizes == null)         return null;     Camera.Size optimalSize = null;     double minDiff = Double.MAX_VALUE;     int targetHeight = h;     // Try to find an size match aspect ratio and size     for (Camera.Size size : sizes)     {          double ratio = (double) size.width / size.height;         if (Math.abs(ratio - targetRatio) &gt; ASPECT_TOLERANCE)             continue;         if (Math.abs(size.height - targetHeight) &lt; minDiff)         {             optimalSize = size;             minDiff = Math.abs(size.height - targetHeight);         }     }     // Cannot find the one match the aspect ratio, ignore the requirement      if (optimalSize == null)     {         minDiff = Double.MAX_VALUE;         for (Camera.Size size : sizes) {             if (Math.abs(size.height - targetHeight) &lt; minDiff)             {                 optimalSize = size;                 minDiff = Math.abs(size.height - targetHeight);             }         }     }      SharedPreferences previewSizePref;     if (camId == Camera.CameraInfo.CAMERA_FACING_BACK) {         previewSizePref = getSharedPreferences("PREVIEW_PREF",MODE_PRIVATE);     } else {         previewSizePref = getSharedPreferences("FRONT_PREVIEW_PREF",MODE_PRIVATE);     }      SharedPreferences.Editor prefEditor = previewSizePref.edit();     prefEditor.putInt("width", optimalSize.width);     prefEditor.putInt("height", optimalSize.height);      prefEditor.commit();       return optimalSize; } </code></pre>  <p>Its work very fine while creating perfect camera view in most devices.  There is two problem where I get stuck.</p>  <p><strong>1) In some devices camera view get zoomed out OR zoomed in</strong></p>  <p><strong>2) When I capture picture from back camera it get stretched.</strong></p>  <p>Here is my code for  <strong>surfaceChanged(SurfaceHolder holder, int format, int width,                                int height)</strong></p>  <pre><code>@Override public void surfaceChanged(SurfaceHolder holder, int format, int width,                            int height) {     // TODO Auto-generated method stub     if(previewing){         camera.stopPreview();         previewing = false;     }      // supported preview sizes     mSupportedPreviewSizes = camera.getParameters().getSupportedPreviewSizes();     if (camera != null){         try {             parameters = camera.getParameters();              camera.setDisplayOrientation(90);             final int deviceWidth = getResources().getDisplayMetrics().widthPixels;             final int deviceHeight = getResources().getDisplayMetrics().heightPixels;             myBestSize = getOptimalSize(mSupportedPreviewSizes,screenHeight,screenWidth);             bestWidth = myBestSize.width;             bestHeight = myBestSize.height;             if(myBestSize != null) {                  parameters.setPreviewSize((int)bestWidth,(int)bestHeight);                 if (parameters.getSupportedFocusModes().contains(                         Camera.Parameters.FOCUS_MODE_CONTINUOUS_PICTURE)) {                     parameters.setFocusMode(Camera.Parameters.FOCUS_MODE_CONTINUOUS_PICTURE);                 }                   tempHeight = (int)(screenWidth *(double)bestWidth/(double)bestHeight);                 android.widget.FrameLayout.LayoutParams params = new android.widget.FrameLayout.LayoutParams(screenWidth,tempHeight);                 surfaceView.setLayoutParams(params);                  parameters.setZoom(0);                 camera.setParameters(parameters);                 camera.setPreviewDisplay(surfaceHolder);                  camera.startPreview();                 previewing = true;             }         } catch (IOException e) {             // TODO Auto-generated catch block             e.printStackTrace();         }     } } </code></pre>  <p>So please suggest me the proper way to solve this two problem.</p>  <p>Thanks</p>