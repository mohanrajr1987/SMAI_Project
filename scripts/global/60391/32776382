<p>I have been trying to capture image with camera using the Camera API on Android (not using Camera2 on account of backport). Since most of the rear facing camera on Android are mounted in landscape mode, a need arises to rotate those images. Using the <code>postRotate(int degree)</code> method of <code>Matrix</code> class in Android in the Bitmap.createBitmap(...) method, a new bitmap is created which takes up more head space and if it is not allocated results in an OOM exception.</p>  <p>Since the specific application that I have been developing included to place overlay texts on the captured image, I had to ultimately draw the bitmap over to a canvas. Hence I decided to draw the same bitmap to the canvas instead of creating another one.</p>  <p>Following is the code that I have used in the <code>onDraw</code> method:</p>  <pre><code>Matrix mMatrix = new Matrix(); mMatrix.postRotate(90); mMatrix.postTranslate(mBitmapFile.getHeight(),0); canvas.drawBitmap(mBitmapFile,mMatrix,null); </code></pre>  <p>Can this approach be generalized to avoid rotation of the bitmap and the corresponding OOM exception in a generalized usecase also or does it have a flaw that would add further complications?</p>