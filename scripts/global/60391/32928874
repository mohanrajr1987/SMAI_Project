<p>I'm trying to implement 3-way video chat inside an Android app using the <a href="http://www.webrtc.org/native-code/android" rel="nofollow">WebRTC Native Code package for Android</a> (i.e. not using a WebView). I've written a signalling server using node.js and used the <a href="https://github.com/Gottox/socket.io-java-client" rel="nofollow">Gottox socket.io java client</a> library inside the client app to connect to the server, exchange SDP packets and establish a 2-way video chat connection.</p>  <p>However now I'm having problems going beyond that to a 3-way call. The AppRTCDemo app that comes with the WebRTC native code package demonstrates 2-way calls only (if a 3rd party attempts to join a room a "room full" message is returned).</p>  <p>According to <a href="http://stackoverflow.com/questions/21788218/webrtc-use-same-sdp-for-multiple-peer-connections">this answer</a> (which doesn't relate to Android specifically), I'm supposed to do it by creating multiple PeerConnections, so each chat participant will connect to the 2 other participants.</p>  <p>However, when I create more than one PeerConnectionClient (a Java class which wraps a PeerConection, which is implemented on the native side in libjingle_peerconnection_so.so), there is an exception thrown from inside the library resulting from a conflict with both of them trying to access the camera:</p>  <pre><code>E/VideoCapturerAndroid(21170): startCapture failed E/VideoCapturerAndroid(21170): java.lang.RuntimeException: Fail to connect to camera service E/VideoCapturerAndroid(21170):  at android.hardware.Camera.native_setup(Native Method) E/VideoCapturerAndroid(21170):  at android.hardware.Camera.&lt;init&gt;(Camera.java:548) E/VideoCapturerAndroid(21170):  at android.hardware.Camera.open(Camera.java:389) E/VideoCapturerAndroid(21170):  at org.webrtc.VideoCapturerAndroid.startCaptureOnCameraThread(VideoCapturerAndroid.java:528) E/VideoCapturerAndroid(21170):  at org.webrtc.VideoCapturerAndroid.access$11(VideoCapturerAndroid.java:520) E/VideoCapturerAndroid(21170):  at org.webrtc.VideoCapturerAndroid$6.run(VideoCapturerAndroid.java:514) E/VideoCapturerAndroid(21170):  at android.os.Handler.handleCallback(Handler.java:733) E/VideoCapturerAndroid(21170):  at android.os.Handler.dispatchMessage(Handler.java:95) E/VideoCapturerAndroid(21170):  at android.os.Looper.loop(Looper.java:136) E/VideoCapturerAndroid(21170):  at org.webrtc.VideoCapturerAndroid$CameraThread.run(VideoCapturerAndroid.java:484) </code></pre>  <p>This happens when initializing the local client even before attempting to establish a connection so it's not related to node.js, socket.io or any of the signalling server stuff.</p>  <p>How do I get multiple PeerConnections to share the camera so that I can send the same video to more than one peer?</p>  <p>One idea I had was to implement some kind of singleton camera class to replace VideoCapturerAndroid that could be shared between multiple connections, but I'm not even sure that would work and I'd like to know if there is a way to do 3-way calls using the API before I start hacking around inside the library.</p>  <p>Is it possible and if so, how?</p>