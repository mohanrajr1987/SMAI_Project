<p>I am trying to use ajax to call the findRiot method to get json data from inside c#, but when i run it, the website just seems to add "/test/findRiot" to the end of the localhost url and it does not run the method. What can I do to successfully run the method using ajax and get the json data?</p>  <p>Here is my ajax code:</p>  <pre><code>$.ajax({             url: "/test/findRiot",             type: 'POST',             data: "url=" + u,             dataType: 'json',             success: function (resp) {},             error:function(e){}        }); </code></pre>  <p>Here is my testController.cs code:</p>  <pre><code>namespace LolChamp.Controllers {     public class testController : Controller     {         public ActionResult Index()         {             return View();         }          [HttpPost]         public ActionResult findRiot(string url)         {             string text = "";             try             {                 using (var webClient = new System.Net.WebClient())                 {                     webClient.Encoding = Encoding.UTF8;                     var json2 = webClient.DownloadString("https://na.api.pvp.net/api/lol/na/v1.3/game/by-summoner/" +                         url + "/recent?api_key=---------");                     return Json(json2);                 }             }             catch (System.Exception e)             {                 text = "error";             }             return Json(new { json = text });         }     } } </code></pre>  <p>Here is my RouteConfig2.cs code:</p>  <pre><code>namespace LolChamp {     public class RouteConfig2     {         public static void RegisterRoutes(RouteCollection routes)         {             routes.IgnoreRoute("{resource}.axd/{*pathInfo}");              routes.MapRoute(                 name: "Default",                 url: "{controller}/{action}/{url}",                 defaults: new { Controller = "test", action = "Index" }             );         }         protected void Application_Start()         {             RegisterRoutes(RouteTable.Routes);         }     } } </code></pre>