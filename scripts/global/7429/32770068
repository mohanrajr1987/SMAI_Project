<p>I'm trying to figure out a way to capture all exceptions of a specific type that occur before the Render() method in the page lifecycle, store them and bypass the YSOD error handler. Then in an override of Render() do something like this:</p>  <pre><code>protected override void Render(HtmlTextWriter writer) {     if(ReqObjectException != null)     {         base.Render(writer);     }     else     {         Log.Error("Missing required object in Base Control", ReqObjectException, this);         writer.WriteLine("&lt;!--");         foreach(var exception in ReqObjectExceptions)         {             writer.WriteLine(ex.Message);         }         writer.WriteLine("--&gt;");     } } </code></pre>  <p>The idea here is that I have some dynamic controls that are added to a page and they occasionally required to have some data associated with them. Right now, if a content author forgets to attach the associated data, they get a YSOD and freak out.  The idea here is that the rest of the page continues to function, and there is a log entry and an HTML comment pointing to the problem. Maybe I'll create some warning dialog to let them know that there is something missing.</p>