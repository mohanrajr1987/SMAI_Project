<p>Often in my Backbone code I come across situations where I would be passing a closure to some function and lose context of 'this'.</p>  <p>My solution for some time had been to do what I had seen some others do:</p>  <pre><code>var self = this;  this.deferred.done(function () {     self.render(); }); </code></pre>  <p>Or actually I switched to <code>_this = this</code>, but that's beside the point. It works, but it feels ugly and I sometimes have to do it quite often. So I'm trying to figure out a better way to do this. I learned I could do this:</p>  <pre><code>this.deferred.done(function () {     this.render(); }.apply(this)); </code></pre>  <p>And I think I could also use Underscore to do this:</p>  <pre><code>this.deferred.done(_.bind(function () {     self.render(); }, this)); </code></pre>  <p>The <code>apply</code> method seems the most succinct but I feel like it has a side effect (I just don't know what it is yet).</p>  <p>Edit:</p>  <p>Take a look at this JSbin where I use apply similar to as I mentioned: <a href="http://jsbin.com/qobumu/edit?js,console" rel="nofollow">http://jsbin.com/qobumu/edit?js,console</a></p>  <p>It works, yet it throws an error at the same time. If I change the <code>apply</code> to <code>bind</code>, it works and doesn't throw an error.</p>