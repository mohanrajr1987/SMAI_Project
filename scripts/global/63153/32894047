<p>I have 2 models as </p>  <pre><code>var Info = Backbone.Model.extend({      defaults: {         name: '',         company: ''      },      initialize: function(){         console.log('Object of type Info created');      }, });  var Emp = Backbone.Model.extend({      defaults: {         empId: '',         empGroup: ''      },      initialize: function(){         console.log('Object of type Emp created');      } }); </code></pre>  <p>View is created as</p>  <pre><code>var model = new Info(); model.set({     name: 'John',     company: 'ABC' }); model.bind('change', function(){     model.save(); }); model.trigger('change');   var ViewClass = Backbone.View.extend({      _modelBinder: undefined,      initialize: function(){          this._modelBinder = new Backbone.ModelBinder();          this.render();      },      render: function(){          var template = _.template($('#App1').html());          this.$el.html(template);          var bindings = {              name: '[name=name]',              empId: '[name=empId]'          };          this._modelBinder.bind(model, this.el, bindings);  // this will bind for Info.       } }); </code></pre>  <p>HTML: </p>  <pre><code>&lt;script type="text/template" id="App1"&gt; &lt;div id="wrapper"&gt;     Name: &lt;input type="text" name="name" /&gt;&lt;br /&gt;     EmpId: &lt;input type="text" name="empId" /&gt; &lt;/div&gt; &lt;/script&gt; </code></pre>  <p>How can we bind for both Info and Emp Models ?  </p>