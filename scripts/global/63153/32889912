<p>So, the problem is next: I receive large collection of prices and there are prices for specific, let say, partners. Thus collection contains some kind of groups denoted by <code>partner_id</code>.</p>  <p>I filtering this collection (<em>using <code>collection.filter()</code> in <code>initialize</code> method</em>), to obtain different "format" of data for subsequent views.</p>  <pre><code>var BasePrices = new Collections.ProductPrices( // Creating the same collection type     this.model.get('prices').filter(function (m) { // But a bit narrowed         return ~~m.get('partner_id') === 0; // leaving prices without `partner_id`     }) ); </code></pre>  <p>Later I pass this newly done collection to the view that is managing the list of base prices.</p>  <p>The problem itself is that I'm <strong>subscribing on events</strong> of this newly done collection, but events of <strong>models that remained there</strong> after <code>.filter()</code> are <strong>firing their events to the old collection</strong> that lays under <code>this.model.get('prices')</code>, <strong>but newly added models firing</strong> their <strong>events correctly</strong> (<em>to the <code>BasePrices</code> collection</em>).</p>  <p>I couldn't understand why its happening so. I can presume that there is smth. related with reference of model to collection (<code>model.collection</code> property), but why it is not updated when I created brand new collection and how to solve the issue?</p>