<p><strong>EDIT: IMPORTANT NOTE this is using jQuery 1.7.2, and no it cannot be changed from this version</strong></p>  <p>I'm new to promises and trying to wrap my head around them. I'm trying to execute a series of functions in order, waiting for them to complete before creating some child views (this is in Backbone.js). Here's my code:</p>  <pre><code>initialize: function () {     console.log('AppView::initialized!');     var _this = this;      $.when( _this.processCookies() )         .then( _this.loadAdScripts() )         .then( _this.createChildViews() ); },  processCookies: function () {     var def = $.Deferred();     console.log('(1) PROCESS COOKIES');     return def.resolve(); },   /**  * Instantiates new instances of the child views.  */ createChildViews: function () {     var _this = this;     console.log('(4) CREATING CHILD VIEWS'); },  loadAdScripts: function () {      var _this = this,         def = $.Deferred();      $.when(         _this.insertScript({             name: 'example1',             async: false,             src: '//www.example.com/script1.js',         }),         _this.insertScript({             is_mobile: is_mobile,             name: 'example2',             async: true,             src: '//example.com/script2.js'         })     )     .done(function () {         console.log('(3) ALL SCRIPTS LOADED');         def.resolve();     }); },  insertScript: function (script) {     var def = $.Deferred(),         protocol = (document.location.protocol === 'https:' ? 'https:' : 'http:');      // dont script 2 on mobile.     if (script.name === 'example2' &amp;&amp; script.is_mobile) {         console.log('skipping script');         return def.resolve();     }      var promise = $.ajax({         dataType: 'script',         cache: false,         async: script.async,         url: protocol + script.src,     });      promise.done( function () {         console.log('(2) SINGLE SCRIPT LOADED');         return def.resolve();     });   }, </code></pre>  <p>So, the desired flow here is:</p>  <ol> <li>When the <code>processCookies()</code> function is completed,</li> <li>execute <code>loadAdScripts</code> function 2a. <code>insertScript()</code> fires, script 1 loads 2b. <code>insertScript()</code> fires, script 2 loads</li> <li>when BOTH scripts are finished, execute <code>createChildViews</code> function.</li> </ol>  <p>so, observing the <code>console.log()</code> placeholders in the code, I <em>expect</em> to see in my console:</p>  <pre><code>'(1) PROCESS COOKIES' '(2) SINGLE SCRIPT LOADED' '(2) SINGLE SCRIPT LOADED' '(3) ALL SCRIPTS LOADED' '(4) CREATING CHILD VIEWS' </code></pre>  <p><strong>however</strong> what I <em>actually</em> see is:</p>  <pre><code>'(1) PROCESS COOKIES' '(3) ALL SCRIPTS LAODED' '(4) CREATING CHILD VIEWS' '(2) SINGLE SCRIPT LOADED' '(2) SINGLE SCRIPT LOADED' </code></pre>  <p>What is wrong with my promises, and why are they not executing in the expected order?</p>