<p>So I have a model with default attributes set and a login page where I am storing the values of the username and password in to a collection.</p>  <pre><code>//collection var userProfileCollection = Backbone.Collection.extend({     model: UserProfileModel });  //Model var UserProfileModel = Backbone.Model.extend({     defaults: {         userName: "",         password: ""     } });  //View  var LoginRegisterView = Backbone.View.extend({             initialize: function() {                 this.render();               },             render: function() {              //loads the template containing the form             $("#loginPage").html(loginregisteruser_Template);              click event(){            var username = $("#username").val();            var password = $("#password").val();             //userProfileModel is set as a global since another view accesses the model's attributes and their values                 var userProfileColl = new userProfileCollection();                 userProfileModel.set("userName", username);                 userProfileModel.set("password", password);                 userProfileColl.add(userProfileModel);                  window.location = "#" //home } } });  //router var AppRouter = Backbone.Router.extend({  routes:{         'login': "login" }, login: function() {                  this.view = new LoginRegisterView({                     model: userProfileModel,                     el: $('#loginPage')                 });      }); </code></pre>  <p>So my question is whenever I refresh the login page, the view gets re-rendered and so the current values of the username and password which I still need to be displayed on the page, gets overridden by the defaults set in the model. How can I maintain the values of the username and password fields even when the view is re-rendered? I feel like I am missing something fundamental. I am new to Backbone.js. Thanks in advance</p>