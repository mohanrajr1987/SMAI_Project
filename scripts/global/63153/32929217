<p>The gist of this question is that If I use Backbone.js code to clean up my views (i.e. to prevent zombie views), then I am unable to set the element of a view if I click the back button in the browser, and therefore the view is getting rendered.</p>  <p>Details</p>  <p>I have a PostsView that displays a list of posts. In the constructor I call setElement and then render each member of the list using multiple PostListViews</p>  <pre><code>export class PostsView extends Backbone.View{       constructor(options){          this.setElement($('#main'), true)          super()          this.render()        }       addEachPost(model){        new PostListView({model: model });       }       render(){          this.collection.each(this.addEachPost, this);       } </code></pre>  <p>If I click one of the PostListViews, then the router loads that PostListView onto the page, and if I click the back button, it reloads the Posts view onto the page, but only if I haven't cleaned up the Posts view.For example, with this code, I can hit the back button and then another link and so on and it continues to load everything fine, but it'll eventually create zombies because I'm not cleaning up the views</p>  <p>Router</p>  <pre><code> export class MyRouter extends Backbone.Router{             constructor(options){               '': 'renderList',               'post/:id': 'showPost'            }            renderList(){              new PostsView({collection: this.collection)};            }            showPost(id){              //code ommitted              new PostView({model: modle})            }   } </code></pre>  <p>So, I introduced some oft-used code to prevent zombie views, but now if I do, when I hit the back button, the vi</p>  <p>Router code to clean up zombie</p>  <pre><code>changeView(view){      if (this.currentView){         this.currentView.close();      }      this.currentView = view;  } </code></pre>  <p>in the router, I then load views by calling</p>  <pre><code>         `this.changeView( new PostsView({collection: this.collection)});` </code></pre>  <p>However, if I do this, I can load the PostsView initially, but if I click one of the memebers of the list and then click back, the Posts view is not loading on the page. I noticed from inspecting the console that, in this situation, the <code>el</code> is not set to <code>#main</code>, which is why it's not getting onto the page. In the code where I don't clean up the zombie views, the <code>el</code> is set to <code>#main</code> if I hit the back button. So, by cleaning up the zombies, I've deleted the el and it's not getting set again because the constructor is not run when I hit the <code>back</code> button.</p>  <p>Question: is there some way to use the Router code that cleans up the zombie views, but at the same time to ensure that the constructor is run when I hit the back button in the browser?</p>