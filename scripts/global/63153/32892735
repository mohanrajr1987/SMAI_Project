<p>I have a <em>view.js</em> and a model called <em>user.js</em> </p>  <p><em>user.js</em>    : </p>  <pre><code>define( function ( require, exports, module ) {     "use strict";      var Backbone = require( 'backbone' );      return Backbone.Model.extend({         defaults: {             flush: false         },          doRejectBatch: function( batchId, flushToConveyer ){             this.functionName = 'doRejectBatch';             this.flush = flushToConveyer;              this.fetch({                 type: 'GET',                 url:'http://api.com/reject/' + id +'/rej',                 xhrFields: {                     withCredentials: true                 }             });         },          doPatchBatch: function( batchuuid ){             var patchData = {                 "status": "rejected",                 "jobs_to_conveyer": this.flush             };              this.fetch({                 type: 'PATCH',                  url: 'http://api.com/api/rej/' + uuid,                 contentType: 'application/json',                 data: JSON.stringify(patchData),                 xhrFields: {                     withCredentials: true                 }             })         }     }); } ); </code></pre>  <p>When a function is complete the <code>onSync</code> function in my <em>view.js</em> is called.</p>  <pre><code> onSync: function ( rawData, response ){          var msg = "Reject Request: successfull";          app.regionMessage.show(new  MessageView({             model: new Backbone.Model({                 msg_type: response[0].status,                 msg: msg             })         }));      }  }); </code></pre>  <p>How can I determine in the <em>view.js</em> <code>onSync</code> function which functions response is sent from the model? In other words was the <code>doRejectBatch</code> function used or is the response from the <code>doPatchBatch</code> function? Note that the view.js is actually the controller and not really a view</p>