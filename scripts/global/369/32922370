<p>I'm writing a bash script on Mac OSX 10.11 to automatically use dns-sd to "proxy" my Bonjour advertisements for AFP, SMB &amp; some printers when I connect to my VPN.</p>  <p>The basic gist of my script is I declare a number of arrays to later use when I call dns-sd. The array I'm having difficulty with being:</p>  <pre><code>SERVICE_TEXTS=( '' '' model=TimeCapsule8,119 model=Xserve 'txtvers=1 qtotal=1 pdl=application/vnd.hp-PCL,application/vnd.brother-hbp rp=duerqxesz5090 ty=Brother\ MFC-9120CN product=\(Brother MFC-9120CN\) adminurl=http://BRN001BA9243652.local./ priority=50 usb_MFG=Brother usb_MDL=MFC-9120CN Color=T Copies=T Duplex=F PaperCustom=T Binary=T Transparent=T TBCP=F' 'txtvers=1 qtotal=1 pdl=application/vnd.hp-PCL,application/vnd.brother-hbp rp=duerqxesz5090 ty="Brother MFC-9120CN" product="(Brother MFC-9120CN)" adminurl=http://BRN001BA9243652.local./ priority=75 usb_MFG=Brother usb_MDL=MFC-9120CN Color=T Copies=T Duplex=F PaperCustom=T Binary=T Transparent=T TBCP=F' 'txtvers=1 qtotal=1 pdl=application/vnd.hp-PCL,application/vnd.brother-hbp ty="Brother MFC-9120CN" product="(Brother MFC-9120CN)" adminurl=http://BRN001BA9243652.local./ priority=25 usb_MFG=Brother usb_MDL=MFC-9120CN Color=T Copies=T Duplex=F PaperCustom=T Binary=T Transparent=F TBCP=T' ) </code></pre>  <p>To determine whether I need to actually run dns-sd, I do:</p>  <pre><code>ifconfig ppp0 &amp;&gt;/dev/null </code></pre>  <p>Test ifconfig's return value with:</p>  <pre><code>if [ "$?" -eq "0" ]; then... </code></pre>  <p>Provided ppp0 exists, I loop through the length of my array, checking to see if dns-sd is currently running, and so on.</p>  <p>If dns-sd instances have been running but ppp0 is now unavailable, I kill them all by PID which I save, and check again in a few minutes.</p>  <p>I'm confident the rest of my code is performing what I desire, so I'll jump straight to the offending line, in hope the general idea is clear enough.</p>  <pre><code>dns-sd -P "${SERVICE_NAMES[$n]}" "${SERVICE_TYPES[$n]}" local ${SERVICE_PORTS[$n]} "${SERVICE_NAMES[$n]}.local" "${SERVICE_IPS[$n]}" ${SERVICE_TEXTS[$n]} &amp;&gt;/dev/null &amp; </code></pre>  <p>The man page for dns-sd shows this to be usage of -P, for clarity.</p>  <pre><code>dns-sd -P &lt;Name&gt; &lt;Type&gt; &lt;Domain&gt; &lt;Port&gt; &lt;Host&gt; &lt;IP&gt; [&lt;TXT&gt;...]              (Proxy) </code></pre>  <p>The problem I face is the behaviour of space characters in the last three SERVICE_TEXTS elements. Troubleshooting so far has been to do everything in the terminal to make sure I'm not missing something super obvious / going mad. Here's exactly what I type and exactly what's returned... Which works</p>  <pre><code>$ dns-sd -P "Brother MFC-9129CN" _ipp._tcp local 631 "Brother MFC-9120CN.local" 192.168.1.2 txtvers=1 qtotal=1 pdl=application/vnd.hp-PCL,application/vnd.brother-hbp rp=duerqxesz5090 ty=Brother\ MFC-9120CN product=\(Brother\ MFC-9120CN\) adminurl=http://BRN001BA9243652.local./ priority=50 usb_MFG=Brother usb_MDL=MFC-9120CN Color=T Copies=T Duplex=F PaperCustom=T Binary=T Transparent=T TBCP=F  Registering Service Brother MFC-9129CN._ipp._tcp.local host Brother MFC-9120CN.local port 631 TXT txtvers=1 qtotal=1 pdl=application/vnd.hp-PCL,application/vnd.brother-hbp rp=duerqxesz5090 ty=Brother\ MFC-9120CN product=\(Brother\ MFC-9120CN\) adminurl=http://BRN001BA9243652.local./ priority=50 usb_MFG=Brother usb_MDL=MFC-9120CN Color=T Copies=T Duplex=F PaperCustom=T Binary=T Transparent=T TBCP=F DATE: ---Sat 03 Oct 2015--- 21:11:40.927  ...STARTING... 21:11:41.818  Got a reply for record Brother MFC-9120CN.local: Name now registered and active 21:11:41.818  Got a reply for service Brother MFC-9129CN._ipp._tcp.local.: Name now registered and active </code></pre>  <p>When I use a variable in the command however (echo'd for clarity)... This happens</p>  <pre><code>$ echo ${SERVICE_TEXTS[4]} txtvers=1 qtotal=1 pdl=application/vnd.hp-PCL,application/vnd.brother-hbp rp=duerqxesz5090 ty=Brother\ MFC-9120CN product=\(Brother MFC-9120CN\) adminurl=http://BRN001BA9243652.local./ priority=50 usb_MFG=Brother usb_MDL=MFC-9120CN Color=T Copies=T Duplex=F PaperCustom=T Binary=T Transparent=T TBCP=F  $ dns-sd -P "Brother MFC-9129CN" _ipp._tcp local 631 "Brother MFC-9120CN.local" 192.168.1.2  ${SERVICE_TEXTS[4]}  Registering Service Brother MFC-9129CN._ipp._tcp.local host Brother MFC-9120CN.local port 631 TXT txtvers=1 qtotal=1 pdl=application/vnd.hp-PCL,application/vnd.brother-hbp rp=duerqxesz5090 ty=Brother\\\\ MFC-9120CN product=\(Brother MFC-9120CN\) adminurl=http://BRN001BA9243652.local./ priority=50 usb_MFG=Brother usb_MDL=MFC-9120CN Color=T Copies=T Duplex=F PaperCustom=T Binary=T Transparent=T TBCP=F DATE: ---Sat 03 Oct 2015--- 21:18:56.968  ...STARTING... 21:18:57.842  Got a reply for record Brother MFC-9120CN.local: Name now registered and active 21:18:57.842  Got a reply for service Brother MFC-9129CN._ipp._tcp.local.: Name now registered and active </code></pre>  <p>The problem being the section of element 4 which goes</p>  <pre><code>"...ty=Brother\ MFC..." </code></pre>  <p>dns-sd reports this as being</p>  <pre><code>"...ty=Brother\\\\ MFC..." </code></pre>  <p>You'll notice when I simply type the string rather than use the variable, dns-sd reports it with one "\".</p>  <p>Obviously four "\" doesn't do me any good... If I remove the "\", I still don't get the desired result because dns-sd thinks I'm describing a new key. I type</p>  <pre><code>"\\" </code></pre>  <p>to try and get a literal "\" and from memory dns-sd still receives four.</p>  <p>I've also played around with single and double quotes, including surrounding the variable in the call to dns-sd in double quotes but that adds backslashes to every single space. This makes dns-sd treat the TXT string as one key with one value, where the value contains spaces. This is significantly less useful than calling it without quotes, so I gave up on investigating that further.</p>  <p>So basically, it seems dns-sd receives none or four "\"... And it just needs one then everything will work perfectly...</p>  <p>Calling dns-sd and passing ${SERVICE_TEXTS[$n]} without quotes comes very close to the desired behaviour, but can not handle space characters in the "value" of the key-value pairs.</p>  <p>Any guidance here would be much appreciated! I've been pouring over the bash manual, searching stack exchange and trying everything I can think of to make this work for going on 4 hours now :(</p>