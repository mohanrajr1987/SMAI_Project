<p>I have a class like follow, with MyAnnotation:</p>  <pre><code>public class MyClass {      @MyAnnotation     public boolean bool;      public boolean getBool(){         return bool;     }      public voud setBool(boolean b){         bool = b;     } } </code></pre>  <p>It is possible to get the value of bool at runtime through the annotation?</p>  <p>EDIT:  this is that I was looking for:</p>  <pre><code>     public void validate(Object o) throws OperationNotSupportedException {            Field[] flds = o.getClass().getDeclaredFields();           for (Field field : flds) {              if (field.isAnnotationPresent(NotNull.class)) {                 String fieldName = field.getName();                 Method m;                 Object value;                  try {                    m = o.getClass().getMethod("get" + capitalize(fieldName), null);                    value = m.invoke(o, null);                    if (value == null) {                       throw new OperationNotSupportedException("Field '" + fieldName + "' must be initialized.");                    }                 } catch (Exception e) {                    e.printStackTrace();                 }              }           }        }    private String capitalize(final String line) {       return Character.toUpperCase(line.charAt(0)) + line.substring(1);    } </code></pre>