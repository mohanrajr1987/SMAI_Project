<p>I'm building a class at runtime and creating objects of that.</p>  <p>After that, I've several objects of this generated class.</p>  <p>So, I'd like to proxy these objects:</p>  <pre><code>IInterceptor[] interceptors = new IInterceptor[1]; interceptors[0] = new Interceptors.IEditableObjectInterceptor&lt;object&gt;();  return DynamicExtensions.proxyGenerator.CreateClassProxyWithTarget(baseType, target, options, interceptors); </code></pre>  <p>When I perform <code>CreateClassProxyWithTarget</code> it chrashes dumping me:</p>  <pre><code>Can not instantiate proxy of class: DynamicDigitalInput. Could not find a parameterless constructor. </code></pre>  <p>So, the message is clear. However, I've tried the next:</p>  <pre><code>System.Reflection.ConstructorInfo cInfo = baseType.GetConstructor(new Type[] { }); Assert.That(cInfo != null);  var constructor = baseType.GetConstructor(System.Reflection.BindingFlags.Instance | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,null, Type.EmptyTypes, null);  Assert.That(constructor != null);  object d = Activator.CreateInstance(baseType, new object[] {});  Assert.That(d != null); </code></pre>  <p>And it's work well. So I can get default constructors and instantiate a <code>DynamicDigitalInput</code> class object.</p>  <p>Where's the problem?</p>