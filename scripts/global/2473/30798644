<p>So, what I'm achieving is to prevent users to login to the site <strong>IF</strong> the current machine date is different from remote machine.</p>  <p>I've created a validation where checks and validates the machine with remote server's datetime. I've tried manual testing by changing my machine date manually and everything works fine.</p>  <p>The problem is, what if I want to test it by using selenium testing? I would say its just annoying to change my machine time manually everytime I want to run the test.</p>  <p>Here's my test function with an approach of changing default timezone (<em>but, it's not working</em>)</p>  <pre><code>public function testLogin1() {   date_default_timezone_set('America/Anchorage');    $testDate = getdate();    var_dump(date_default_timezone_get());   var_dump($testDate);    $this-&gt;login('user', 'pass');    sleep(3); }  public function testLogin2() {   date_default_timezone_set('Asia/Bangkok');    $testDate = getdate();    var_dump(date_default_timezone_get());   var_dump($testDate);    $this-&gt;login('user', 'pass');    sleep(3); } </code></pre>  <p>Is there any specific function where I can set global php DateTime / getdate() ?</p>  <p>Below is my TestTime class function.</p>  <pre><code>public static function isValid($currentDateTime) {  self::initRemoteServerDateTime(); self::initLatestUserActivityDateTime();  if (self::$remoteServerDateTime || self::$latestUserActivityDateTime) {   $refDate = (self::$remoteServerDateTime) ? self::$remoteServerDateTime : self::$latestUserActivityDateTime;    if ($currentDateTime-&gt;format('Y-m-d') == $refDate-&gt;format('Y-m-d')) {       return true;     }   }   return false; } </code></pre>  <p>And here is my action class where I call my TestTime function.</p>  <pre><code>$currentDateTime = new DateTime(); if (!TestTime::isValid($currentDateTime)) {   $errorMessage = 'Server\'s date and time is not set properly ['. $currentDateTime-&gt;format('j M Y H:i') .']. &lt;/br&gt;  Please contact your system administrator.';   throw new sfValidatorErrorSchema($this, array($this-&gt;getOption('username_field') =&gt; new sfValidatorError($this, $errorMessage))); } </code></pre>  <p>My action class is happening during the validation when user clicks the login button and submits the form.</p>  <p>Or, is there any different approach to do this?</p>