<p>I work on a Symfony1 application.</p>  <p>For part of the application we use the symfony admin generator which builds default actions and templates for a particular module.</p>  <p>The autogenerated action methods can be overridden in the child action class and the templates can be overridden, by making one with the same name in the module's template folder. Local templates are used instead of the autogenerated ones, which are stored in a cache folder (I assume this is normal symfony behaviour).</p>  <pre><code>apps/     my_app         modules/             post/                 actions/                     actions.class.php                 lib/                 templates/ ... cache/     my_app/         environment/             modules/                 autoPostcd /                     actions/                         actions.class.php                     lib/                     templates/                         indexSuccess.php                         _part_1.php                         _part_2.php </code></pre>  <p>I am currently working on a separate application that is not using the admin generator.</p>  <p>But I have 3 modules that do very similar things, that I would like to share.</p>  <p>I have all 3 actions extending the same custom action class so that they all implement the same methods and share the ones that are identical.</p>  <p>The problem that I am having is sharing the templates. The main templates and most of the partials can be reused as is.</p>  <pre><code>apps/     other_app/         lib/             printingActions.class.php         modules/             ticket/                 actions/                     actions.class.php                 lib/                 templates/                     printSuccess.php //exactly the same for all 3                     _part_1.php                     _part_2.php      //exactly the same for all 3                     _part_3.php             receipt/                 actions/                     actions.class.php                 lib/                 templates/                     printSuccess.php //exactly the same for all 3                     _part_1.php                     _part_2.php      //exactly the same for all 3                     _part_3.php             voucher/                 actions/                     actions.class.php                 lib/                 templates/                     printSuccess.php //exactly the same for all 3                     _part_1.php                     _part_2.php      //exactly the same for all 3                     _part_3.php </code></pre>  <p>What I would like to do is pull out the common ones so that each module and any future modules with a similar interface, only have to have the partials with module specific information.</p>  <p>This would be my ideal setup:</p>  <pre><code>apps/     other_app/         lib/             printingActions.class.php             printingCommonTemplates/                 printSuccess.php //exactly the same for all 3                 _part_2.php      //exactly the same for all 3         modules/             ticket/                 actions/                     actions.class.php                 lib/                 templates/                     _part_1.php                     _part_3.php             receipt/                 actions/                     actions.class.php                 lib/                 templates/                     _part_1.php                     _part_3.php             voucher/                 actions/                     actions.class.php                 lib/                 templates/                     _part_1.php                     _part_3.php </code></pre>  <p>I know this kind of thing can be done, since the admin generator does it, but after hours of digging, I can't find where exactly it does it.</p>  <p>Could someone point me in the right direction for this one? Ideally, if there is a fallback template setting that I can set for a particular module or a filter class that I can extend to do what I need?</p>