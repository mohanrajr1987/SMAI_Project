<p>We are trying to build a web application whose data updates in real-time. In order to do this we were thinking to use socket-io.</p>  <p>So the plan was:</p>  <ol> <li>A socket requests updates for a certain entity-type (say users) perhaps because it is displaying a list of users on the screen. </li> <li>Check permissions of socket (by using the userId) and (assuming that it is allowed to see users) add it to a users room.</li> <li>When another client changes the users view (Update, Insert or Delete) emit an event to the users room with the updated user attached.</li> </ol>  <p>However, we have run into a problem that we have not been able to solve:</p>  <p>How can we possibly know if another view has changed? Since our application pulls from views which are calculated objects, if a client updates viewA, it is totally possible that a row in viewB has changed as well (due to them sharing underlying tables). If there is a second client (socket) in the viewB room, it will not get its updated viewB entity and will go out of sync with the db.</p>  <p>Even if we stored in session a hash of views to underlying tables and used it to predict which views may have changed on update, we still wouldn't know which row specifically had changed?</p>  <p>Looking for ideas or approaches, all thoughts welcome. Thanks in advance.</p>