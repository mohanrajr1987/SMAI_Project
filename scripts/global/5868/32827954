<p>The line <code>&lt;%= link_to "Destroy", builder, :confirm =&gt; 'Are you sure?', :method =&gt; :delete %&gt;</code> show the error </p>  <p><strong>No Method- undefined method persisted?</strong></p>  <p>Builder(Experience) is a nested attribute in User that allows destroy of experience</p>  <p>I had added the persisted? method in User and Experience controller but still not working.</p>  <p><strong>View</strong></p>  <pre><code>&lt;%= form_for(@user) do |f| %&gt; &lt;%= f.fields_for :experiences do |builder| %&gt;     &lt;%= builder.text_field :title, class: 'form-control form-group' %&gt;     &lt;%= link_to "Destroy", builder, :confirm =&gt; 'Are you sure?', :method =&gt; :delete %&gt; &lt;% end %&gt; &lt;% end %&gt; </code></pre>  <p><strong>Experience Controller</strong> </p>  <pre><code>class ExperiencesController &lt; ApplicationController   def index     @experience = Experience.all   end def show     @experience = Experience.find(params[:id]) end def destroy     @experience = Experience.find(params[:id])     @experience.destroy     flash[:notice] = "Successfully destroyed experience."     redirect_to profile_path end def persisted?   true end end </code></pre>  <p><strong>Experience Model</strong></p>  <pre><code>class Experience &lt; ActiveRecord::Base     belongs_to :user     validates_presence_of :user end </code></pre>  <p><strong>User Model</strong></p>  <pre><code>class User &lt; ActiveRecord::Base     has_many :experiences     accepts_nested_attributes_for :experiences, reject_if: proc { |attributes| attributes['title'].blank? }, allow_destroy: true  end </code></pre>  <p><strong>Routes</strong></p>  <pre><code>experience GET    /experiences/:id(.:format)         experiences#show                      PATCH  /experiences/:id(.:format)            experiences#update                      PUT    /experiences/:id(.:format)         experiences#update                      DELETE /experiences/:id(.:format)         experiences#destroy </code></pre>