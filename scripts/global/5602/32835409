<p>My multiply logic is incorrect somewhere here. It seems that I am not accounting for when I have to add terms of the same degree I get from the result of multiplying the two polynomials.</p>  <pre><code>public Polynomial multiply(Polynomial p) {     if (p.poly == null || this.poly == null) {         Polynomial zero = new Polynomial();         zero.poly = new Node (0, 0, null);         return zero;     } else {          Polynomial retPol = new Polynomial();         retPol.poly = new Node(0, 0, null);          Node front = retPol.poly;         Node entered = p.poly;         Node thisPol = this.poly;          int high = Integer.MIN_VALUE;         int low = Integer.MAX_VALUE;          while (entered != null) {             thisPol = this.poly;               while (thisPol != null) {                 if (thisPol.term.degree + entered.term.degree &gt; high)                     high = thisPol.term.degree + entered.term.degree;                 if (thisPol.term.degree + entered.term.degree &lt; low)                     low = thisPol.term.degree + entered.term.degree;                  thisPol = thisPol.next;             }              entered = entered.next;         }          entered = p.poly;          Node create = front;         for (int i = low; i &lt;= high; i++) {              create.term.degree = i;             create.term.coeff = 0;              create.next = new Node (0, 0, null);             create = create.next;         }          entered = p.poly;          while (entered != null) {             thisPol = this.poly;               while (thisPol != null) {                 int degree = entered.term.degree + thisPol.term.degree;                 create = front;                  while (create != null) {                     if (create.term.degree == degree) {                         create.term.coeff = entered.term.coeff * thisPol.term.coeff;                     }                      create = create.next;                 }                  thisPol = thisPol.next;             }              entered = entered.next;         }          create = front;          while (create != null) {             if (create.term.degree == high) {                 create.next = null;                 create = create.next;             }             else                 create = create.next;         }          retPol.poly = front;          return retPol;     } } </code></pre>  <p>The answer I should be getting is: </p>  <p><code>32.0x^9 + 16.0x^8 + -16.0x^7 + -20.0x^6 + 52.0x^5 + 38.0x^4 + -6.0x^3 + -6.0x^2 + 9.0x + 27.0</code></p>  <p>but I'm actually getting: </p>  <p><code>32.0x^9 + 16.0x^8 + -16.0x^7 + -8.0x^6 + 16.0x^5 + 24.0x^4 + 12.0x^3 + -6.0x^2 + -9.0x + 27.0</code></p>  <p>It seems that the 3rd to 6th degree logic is incorrect. It's a logical error, I'm aware. I'm just not sure how to come to solution. I also know that who terms should be added for those incorrect degrees but instead it just looks like it's bypassing that and only displaying one.</p>  <p>Any hints would be appreciated. Thanks.</p>