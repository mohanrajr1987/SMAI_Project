<p>I keep getting this Segmentation Fault: 11 error and I don't know why. </p>  <p>My Code:</p>  <pre><code>typedef struct Node* NodePtr; struct Node {     NodePtr next;     void *val; };  struct List {     NodePtr head; }; typedef struct List* ListPtr;  int compare(void *one, void *two) {     if(*(int*)one &lt; *(int*)two)         return -1;     else if(*(int*)one &gt; *(int*)two)         return 1;      return 0; }  ListPtr create() {     ListPtr blah = malloc(sizeof(struct List));     memset(blah, 0, sizeof(struct List));      return blah; }  NodePtr scan(NodePtr head, void *obj) {     NodePtr previous, current;      previous = head;     current = head-&gt;next;      // Segmentation fault here!!      while(current != NULL &amp;&amp; (compare(curry-&gt;val, obj) == -1))     {         previous = current;         current = current-&gt;next;     }      return previous; }  int insert(ListPtr llist, void *obj) {     NodePtr newobj = malloc(sizeof(struct Node));     NodePtr prevNode, nextNode;      prevNode = search(llist-&gt;head, obj);     nextNode = prevNode-&gt;next;      if((nextNode == NULL) || (compare(nextNode-&gt;val, obj) != 0))     {         prevNode-&gt;next = newobj;         newobj-&gt;next = nextNode;          return 1;     }     else     {         free(newobj);     }      return 0; } </code></pre>  <p>I thought <code>head</code> was not allocated, so I added <code>malloc</code> in create for <code>blah-&gt;head</code>, but still no luck.</p>  <p>I think the error is here after some debugging: <code>current = head-&gt;next</code>.</p>  <p>Any help would be appreciated! Thank you for your time!</p>  <p>EDIT: How I call insert:</p>  <pre><code>int main(int argc, char *argv[]) {     ListPtr list = create();      int x = 2;     int *p = &amp;x;      while(*p != 0)     {         printf("\nEnter a number: ");         scanf("%d", p);          if(*p != 0)             insert(list, p);     }      return 0; } </code></pre>