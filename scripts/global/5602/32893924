<p>I am trying to sort  nodes by their first element and I keep switching different nodes' first elements with other nodes second and third elements.</p>  <pre> My goal:  1, 1, 1 -> 2, 2, 2 -> NULL  My actual outcome: 1, 2, 2 -> 2, 1, 1-> NULL </pre>  <p>I am getting really confused comparing the pointers and making sense of the sort before printing. My display function: </p>  <pre><code>void display() {     struct node *s, *ptr;     int value;     if (start == NULL)     {         cout&lt;&lt;"Try Again";     }      ptr = head;     cout&lt;&lt;"Elements of list are: ";     while (ptr != NULL)     {         for (s = ptr-&gt;next; s !=NULL; s = s-&gt;next)         {             if (ptr-&gt;x &gt; s-&gt;x)             {                 value = ptr-&gt;x, ptr-&gt;y, ptr-&gt;z;                 ptr-&gt;x, ptr-&gt;y, ptr-&gt;z = s-&gt;x, s-&gt;y, s-&gt;z;                 s-&gt;x, s-&gt;y, s-&gt;y = value;             }             cout&lt;&lt; ptr-&gt;x &lt;&lt;", "&lt;&lt; ptr-&gt;y &lt;&lt;", "&lt;&lt;ptr-&gt;z &lt;&lt; " -&gt; ";         }         ptr = ptr-&gt;next;     }     cout&lt;&lt;"NULL"; } </code></pre>