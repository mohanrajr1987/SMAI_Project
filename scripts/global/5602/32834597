<p>I am currently working on writing a method that adds two polynomials (given by 2 text files) together. So for example:</p>  <p>4.0x^5 + -2.0x^3 + 2.0x + 3.0</p>  <p>&amp;</p>  <p>8.0x^4 + 4.0x^3 + -3.0x + 9.0</p>  <p>would result in: 4.0x^5 + 8.0x^4 + 2.0x^3 - 1.0x + 12</p>  <p>Currently, my method creates a new polynomial object, but only adds the terms in which there is a degree match. So my output looks like this:</p>  <p>2.0x^3 - 1.0x + 12</p>  <p>It is missing the first two terms, because the degrees don't match up. Here is my code (important: Polynomial is initially constructed by Node poly = null; -- so the variable poly is a node that points to the front of the Linked List of the polynomial):</p>  <pre><code>public Polynomial add(Polynomial p) {      Polynomial answer = new Polynomial();       for (Node firstPoly = poly; firstPoly != null; firstPoly = firstPoly.next){         for (Node secondPoly = p.poly; secondPoly != null; secondPoly = secondPoly.next){             if (firstPoly.term.degree == secondPoly.term.degree){              answer = addToRear(answer, (firstPoly.term.coeff + secondPoly.term.coeff), firstPoly.term.degree, null);                     if (answer.poly.term.coeff == 0){                         answer.poly = null;                     }              }         }     }     return answer;  } </code></pre>  <p>I'm not asking anyone to solve this for me, but does anyone have any idea what I would do next to make sure the non-matching degrees get added? I've been trying to work it out on paper, but nothing is working out for various reasons. Here is the addToRear method just in case it'll be useful to you guys.</p>  <pre><code>private Polynomial addToRear(Polynomial p, float coeff, int degree, Node next){     if (p.poly == null){         p.poly = new Node(coeff, degree, null);          return p;     }      for (Node temp = p.poly; temp != null; temp = temp.next){         if (temp.next == null){             temp.next = new Node(coeff, degree, null);             return p;         }      }      return p; } </code></pre>  <p>Thank you.</p>