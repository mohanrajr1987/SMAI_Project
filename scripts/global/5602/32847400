<p>so the question reads:</p>  <pre><code>Create a Employee class which cannot be instantiated and has the following      fields:  • String name; • String ppsNumber; • int employeeNumber; • int numberOfEmployees; • protected double pay;  These data members are tracked using appropriate setter and getter methods.  Hourly employees are paid €15.00 per hour and commission based employees are paid  10% of the value of their sales figure. In the class you are required to appropriately  plan for a earnings method (double earnings() and ensure that the method must be implemented in  subclasses.  Create a HourlyEmployee class and a CommissionEmployee class that are derived from Employee. In each of these classes, create an overridden method named earnings.  Finally, you are required to test your classes using a client class and to  store the instances of employees into a LinkedList, using try/catch blocks where appropriate. </code></pre>  <p>I have most of the work done just getting stuck on the end of it, I've a few mistakes made somewhere in it, here it is:</p>  <pre><code>public abstract class Employee {      //private instances     private String name;     private String ppsNumber;     private int employeeNumber;     private int numberOfEmployees;     protected double earnings;     protected double pay;     protected double sales;  //default constructor public Employee(String name, String ppsNumber, int employeeNumber, int    numberOfEmployees, double earnings, double pay, double sales) {     name = "Not Given";     ppsNumber = "Not Givwn";     employeeNumber = 0;     numberOfEmployees = 0;     earnings = 0;     pay = 0;     sales = 0; }  //getters and setters public String getName(){     return name; }    public void setName(String name){     this.name = name; }  public String getPPSNumber(){     return ppsNumber; }    public void setPPSNumber(String ppsNumber){     this.ppsNumber = ppsNumber; }  public int getEmployeeNumber(){     return employeeNumber; }    public void setEmployeeNumber(int employeeNumber){     this.employeeNumber = employeeNumber; }  public int getNumberOfEmployees(){     return numberOfEmployees; }    public void setNumberOfEmployees(int numberOfEmployees){     this.numberOfEmployees = numberOfEmployees; }  public double getPay(){     return pay; }    public void setPay(double pay){     this.pay = pay; }  public double getEarnings(){     return earnings;  } public void setEarnings(double earnings){     this.earnings = earnings; }  public double getSales(){     return sales; } public void setSales(double sales){     this.sales = sales; }  //calculateEarnings method abstract double calculateEarnings();  //toString method @Override public String toString(){     return name + ppsNumber + getEmployeeNumber(); }  }//end class </code></pre>  <p>.</p>  <pre><code>import java.util.Scanner;  public class HourlyEmployee extends Employee {     public HourlyEmployee(){         super();             }      //constructor     public HourlyEmployee(String name, String ppsNumber, int employeeNumber, int numberOfEmployees, double earnings, double pay){         super(name, ppsNumber, employeeNumber, numberOfEmployees, earnings, pay,  pay);     }      //calculate earnings method     @Override     double calculateEarnings() {         //input hours worked to calculate earnings         Scanner input = new Scanner(System.in);         System.out.println("Enter Hours Worked: ");         pay = input.nextDouble();         //calculate earnings         earnings = pay * 15;         System.out.println("Employee's Earnings: " + earnings);         return earnings;      }//end method }//end class </code></pre>  <p>.</p>  <pre><code>import java.util.Scanner;  public class CommissionEmployee extends Employee {     public CommissionEmployee(){         super();     }      //constructor     public CommissionEmployee(String name, String ppsNumber, int employeeNumber, int numberOfEmployees, double earnings, double sales){         super(name, ppsNumber, employeeNumber, numberOfEmployees, earnings, sales, sales);     }      //calculate earnings methods     @Override     double calculateEarnings() {         //input sales value to calculate earnings         Scanner input = new Scanner(System.in);         System.out.println("Enter Sales Value: ");         sales = input.nextDouble();         //calculate earnings         earnings = sales * 0.1;         System.out.println("Employee's Earnings: " + earnings);         return earnings;      }//end method }//end class </code></pre>  <p>.</p>  <pre><code>import java.util.LinkedList; import java.util.Scanner; import java.util.List; import java.lang.ArrayIndexOutOfBoundsException; import java.util.InputMismatchException;  public class EmployeeTester {       public static void main(String[] args){              Scanner input = new Scanner(System.in);              int numberOfEmployees = 0;              while (numberOfEmployees == 0){                 try{                    System.out.print("Enter Number of Employees: ");                    numberOfEmployees = input.nextInt();                 } catch (InputMismatchException e) {                     System.out.println("Exception Thrown " + e);                 }                 input.nextLine();//clears input             }//end while              Employee[] employees = new Employee[numberOfEmployees];              //create linked list             List&lt;Employee&gt; employeeList = new LinkedList&lt;Employee&gt;();              //declare &amp; create an HourlyEmployee             employeeList.add(new HourlyEmployee());              for(int i=0; i&lt;employees.length; i++){                  String name;                 String ppsNumber;                 int employeeNumber;                 int x = 0;              System.out.print("Name: ");             name = input.next();             System.out.print("PPS Number: ");             ppsNumber = input.next();             System.out.print("Employee Number: ");             employeeNumber = input.nextInt();                   employeeList.get(x).setName(name);              x++; //increment x                   try{//if not using length to control loop                     employees[i].setName(name);                     employees[i].setPPSNumber(ppsNumber);                     employees[i].setEmployeeNumber(employeeNumber);                 } catch (ArrayIndexOutOfBoundsException e) {                     System.out.println("Array Index Out of Bounds");                 }              }//end for              //enhanced for loop             for(Employee element:employees){                 System.out.println(element.toString());                 System.out.println(element.calculateEarnings());             }                //declare &amp; create an CommissionEmployee             employeeList.add(new CommissionEmployee());              for(int i=0; i&lt;employees.length; i++){                  String name;                 String ppsNumber;                 int employeeNumber;                 int x = 0;              System.out.print("Name: ");             name = input.next();             System.out.print("PPS Number: ");             ppsNumber = input.next();             System.out.print("Employee Number: ");             employeeNumber = input.nextInt();                   employeeList.get(x).setName(name);              x++; //increment x                   try{//if not using length to control loop                     employees[i].setName(name);                     employees[i].setPPSNumber(ppsNumber);                     employees[i].setEmployeeNumber(employeeNumber);                 } catch (ArrayIndexOutOfBoundsException e) {                     System.out.println("Array Index Out of Bounds");                 }              }//end for              //enhanced for loop             for(Employee element:employees){                 System.out.println(element.toString());                 System.out.println(element.calculateEarnings());             }           }//end main() }//end class </code></pre>  <p>so originally my problem was i was when I ran the code it'll ask how many employees and will ask for name, pps number and employee number, then I get the error:</p>  <pre><code>Exception in thread "main" java.lang.NullPointerException at EmployeeTester.main(EmployeeTester.java:54) </code></pre>  <p>then I realized I forgot to add in constructors for hourlyemployees and commissionemployees, so I went an did that, now there's an error with the super class:</p>  <pre><code>public class HourlyEmployee extends Employee { public HourlyEmployee(){     super();         } </code></pre>  <p>the error reads</p>  <pre><code>Exception in thread "main" java.lang.Error: Unresolved compilation problem:  The constructor Employee() is undefined  at HourlyEmployee.&lt;init&gt;(HourlyEmployee.java:5) at EmployeeTester.main(EmployeeTester.java:31) </code></pre>  <p>and i still have the first problem, if anyone could help me to fix it and get the code running again that'd be great, thanks in advance</p>