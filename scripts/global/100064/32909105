<p>I am doing a small project with google map api, I am trying to locate all the interesting services around me. For exemple, i want to search "restaurant" then it will shows all the restaurant near me within my radius. Or i can also type "Store" into my search bar and it will shows all the store types within</p>  <p>Javascript framework that I am using Ionic framework, Angular JS and Google map API.</p>  <p>Here's the link, it won't shows the result since either you have to run it localhost or have an emulator to run it.</p>  <p><div class="snippet" data-lang="js" data-hide="false"> <div class="snippet-code"> <pre class="snippet-code-js lang-js prettyprint-override"><code>(function () {       var app = angular.module('app', ['ionic', 'ngCordova']);      app.controller('locationCtrl', function ($scope, $cordovaGeolocation, $ionicPlatform) {           $ionicPlatform.ready(function () {              var posOptions = {                 timeout: 10000,                 enableHighAccuracy: true             };             $cordovaGeolocation.getCurrentPosition(posOptions)                 .then(function (position) {                 $scope.coords = position.coords;                 // showMap(position.coords)                  //Get current coordination                 var latLng = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);                 var mapOptions = {                     center: latLng,                     zoom: 15,                     mapTypeId: google.maps.MapTypeId.ROADMAP                 };                  $scope.map = new google.maps.Map(document.getElementById("map"), mapOptions);                 google.maps.event.addListenerOnce($scope.map, 'idle', function () {                     var marker = new google.maps.Marker({                         map: $scope.map,                         animation: google.maps.Animation.DROP,                         position: latLng                     });                 })                 var input = document.getElementById('pac-input');                 var searchBox = new google.maps.places.SearchBox(input);                 $scope.map.controls.push(input);                  $scope.map.addListener('bounds_changed', function () {                     searchBox.setBounds($scope.map.getBounds());                 });                 var bounds = new google.maps.LatLngBounds();                 var markers = [];                 var infowindow;                 searchBox.addListener('places_changed', function () {                     var places = searchBox.getPlaces();                      if (places.length == 0) {                         return;                     } else {                         var infowindow = new google.maps.InfoWindow();                         var service = new google.maps.places.PlacesService($scope.map);                         var request = {                             location: latLng,                             radius: 500,                             types: [places.types]                         }                          service.nearbySearch(request, callback)                         $scope.map.fitBounds(bounds);                     }                 })                  function callback(results, status) {                     if (status == google.maps.places.PlacesServiceStatus.OK) {                         console.log(results)                         for (var i = 0; i &lt; results.length; i++) {                             createMarker(results[i]);                         }                     }                 }                  function createMarker(place) {                     var icon = {                         url: place.icon,                         size: new google.maps.Size(71, 71),                         origin: new google.maps.Point(0, 0),                         anchor: new google.maps.Point(17, 34),                         scaledSize: new google.maps.Size(25, 25)                     };                     var placeLoc = place.geometry.location;                     markers.push(new google.maps.Marker({                         map: $scope.map,                         icon: icon,                         position: place.geometry.location                     }));                      if (place.geometry.viewport) {                         // Only geocodes have viewport.                         bounds.union(place.geometry.viewport);                     } else {                         bounds.extend(place.geometry.location);                     }                      google.maps.event.addListener(markers, 'click', function () {                         infowindow.setContent(place.name);                         infowindow.open($scope.map, this);                     });                 }                  function clearMarker() {                     createMarker(null);                     markers = [];                 }             }, function (err) {                 console.log('getCurrentPosition error: ' + angular.toJson(err));             });          });     });      app.run(function ($ionicPlatform) {         $ionicPlatform.ready(function () {             // Hide the accessory bar by default (remove this to show the accessory bar above the keyboard             // for form inputs)             if (window.cordova &amp;&amp; window.cordova.plugins.Keyboard) {                 cordova.plugins.Keyboard.hideKeyboardAccessoryBar(true);             }             if (window.StatusBar) {                 StatusBar.styleDefault();             }         });     }) })();</code></pre> <pre class="snippet-code-css lang-css prettyprint-override"><code>/* Empty. Add your own CSS if you like */  html, body {     height: 100%;     margin: 0;     padding: 0; } #map {     height: 100%; } .controls {     margin-top: 10px;     border: 1px solid transparent;     border-radius: 2px 0 0 2px;     box-sizing: border-box;     -moz-box-sizing: border-box;     height: 32px;     outline: none;     box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3); } #pac-input {     background-color: #fff;     font-family: Roboto;     font-size: 15px;     font-weight: 300;     margin-left: 12px;     padding: 0 11px 0 13px;     text-overflow: ellipsis;     width: 300px; } #pac-input:focus {     border-color: #4d90fe; } .pac-container {     font-family: Roboto; } #type-selector {     color: #fff;     background-color: #4d90fe;     padding: 5px 11px 0px 11px; } #type-selector label {     font-family: Roboto;     font-size: 13px;     font-weight: 300; }</code></pre> <pre class="snippet-code-html lang-html prettyprint-override"><code>&lt;!DOCTYPE html&gt; &lt;link href="lib/ionic/css/ionic.css" rel="stylesheet"&gt; &lt;link href="css/style.css" rel="stylesheet"&gt; &lt;!-- ionic/angularjs js --&gt; &lt;script src="lib/ionic/js/ionic.bundle.js"&gt;&lt;/script&gt; &lt;!--Google places--&gt; &lt;script src="https://maps.googleapis.com/maps/api/js?key=API_KEY&amp;signed_in=true&amp;libraries=places"&gt;&lt;/script&gt; &lt;!-- cordova script (this will be a 404 during development) --&gt; &lt;script src="cordova.js"&gt;&lt;/script&gt; &lt;script src="lib/ngCordova/dist/ng-cordova.js"&gt;&lt;/script&gt; &lt;!-- your app's js --&gt; &lt;script src="js/app.js"&gt;&lt;/script&gt; &lt;/head&gt; &lt;body ng-app="app" ng-controller="locationCtrl"&gt;     &lt;ion-pane&gt;         &lt;ion-header-bar class="bar bar-header bar-assertive"&gt;              &lt;h1 class="title"&gt;{{ coords.latitude}}, {{coords.longitude}}&lt;/h1&gt;          &lt;/ion-header-bar&gt;         &lt;ion-content scroll="false"&gt;             &lt;div id="map" data-tap-disabled="true"&gt;&lt;/div&gt;         &lt;/ion-content&gt;         &lt;ion-footer-bar class="bar bar-footer bar-assertive"&gt;             &lt;input id="pac-input" class="controls" type="text" placeholder="Search Box"&gt;         &lt;/ion-footer-bar&gt;     &lt;/ion-pane&gt;     &lt;script type="text/javascript"&gt;              &lt;/script&gt; &lt;/body&gt;  &lt;/html&gt;</code></pre> </div> </div> </p>