<p>So a little bit of a background, I have this project and am working on Version 2 which involves adding in offline functionality. I am stuck to the following stack as changing it now would involve to much overhead:</p>  <p>Laravel API MYSQL Ionic</p>  <p>I have heard a lot about syncing using Pouch/CouchDB but unfortunately I can't change everything to use this stack. </p>  <p>I decided in my limited AngularJS/JS knowledge to use a HTTP Interceptor to intercept all requests, check if it is a POST/PUT request, check if the device is on/offline and either save the data in local storage or carry on with the request. This is where the issues begin. </p>  <p>Here is my APIInterceptor:</p>  <pre><code>App.factory('APIInterceptor', function ($q) {      return {         request: function (config) {              if(config.method == 'POST' || config.method == 'PUT')             {                 //Add data to localstorage                  //Exit without actually sending the request to the server.                 return $q.reject();             }              return config || $q.when(config);         }     }; }); </code></pre>  <p>As you can see I am returning <code>.reject()</code> but what I need is mimic the API response and pass back to my service as if the request was processed successfully so my app can carry on as normal. Essentially returning success, status code <code>200</code> after the data was stored in localstorage.</p>  <p>Any suggestions on how I can do this? </p>