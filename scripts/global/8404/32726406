<p>I have the following code.</p>  <pre><code>----HTML Part--- &lt;div id="Optimize" class="Div"&gt; Optimize &lt;/div&gt;    ----Jquery Part--- $('#Optimize').click(function() {    var form_data = new FormData();   form_data.append('action',"Opt"); var perlURL= "$code";   $.ajax({                 url:    perlURL,         data:   form_data,         type: 'post',         datatype: "script",         success: function(result) {         },          });         });  </code></pre>  <p>Once the user clicks on Optimization, the following jquery code will execute and display results to user. Now i need to insert a Spinner whenever user clicks Optimization to show that data is loading. Once data gets loaded, spinner should stop. So i have the two functions. If i insert those 2 functions, the Jquery code will look like this. </p>  <pre><code>$('#Optimize').click(function() {   startSpin(); // ------------------------START SPIN HERE---------------- var form_data = new FormData();   form_data.append('action',"Opt"); var perlURL= "$this_code";   $.ajax({                 url:    perlURL,         data:   form_data,         type: 'post',         datatype: "script",         success: function(result) {         stopSpin(); // --------------STOP SPIN HERE --------------         },  });         </code></pre>  <p>This code should work as expected. i.e. spinner should start as soon as user clicks on "Optimize". but it doesnot start. i get a feeling that it straight away performs execution in asynchronous manner. </p>  <p>How can i ensure that the user executes startSpin(); first and then the later part of the function ? </p>  <p>I have read about promise() and have tried various ways to perform both functions simultaneously. but couldnt succeed. </p>