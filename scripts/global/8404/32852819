<p>My alternative title: "Why does it take 3 clicks to fire an onclick event in IE10 for content-editable fields?"</p>  <p>I have a <code>&lt;div&gt;</code> that is set to <code>contenteditable='true'</code> and I need to track when a user clicks a child node. So I'm currently attaching an onclick handler to the top-level <code>&lt;div&gt;</code>, as was suggested in a different SO question, and then inferring the element that was clicked based on the document's current selection.</p>  <p>Something like:</p>    <pre><code>&lt;script&gt;     function onClickContentEditable(element) {         var selection = window.getSelection();         var commonAncestor = selection.getRangeAt(0).commonAncestorContainer;          var clickedElement = commonAncestor.parentNode;          // Do something with the child node that was clicked         return onFocus(clickedElement);     }; &lt;/script&gt; &lt;div contenteditable='true' onclick='onClickContentEditable(this)'&gt;     &lt;div id='subject'&gt;Dear Xena,&lt;/div&gt;     &lt;div id='body'&gt;You are scheduled for an appointment with Dr. Williams tomorrow.&lt;/div&gt; &lt;/div&gt; </code></pre>  <p>In Chrome, this works beautifully. In IE10 it does not. In fact, it takes three clicks to get the content-editable DIV to fire "onclick" once.</p>  <p>What's going on here?</p>  <p>Side note: IE10 will fire an "oncontrolselect" event on the initial click of the content-editable element. But the second click doesn't, even though it sets the selection. Which is dangerous because to the user, it appears they have set the cursor inside at that point.</p>