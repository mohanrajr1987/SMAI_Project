<p>my xslt returns closed tags - (category and description tags) when either of them is empty. In the below example, Title with return closed description tag while Title2 will return closed category tag. </p>  <p>I am feeding my source into an application and because there are closed tags with no opening, I do not get the expected result.</p>  <p><b>This is my input:</b></p>  <pre><code>    &lt;?xml version="1.0" encoding="utf-8"?&gt;     &lt;rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"&gt;     &lt;channel&gt;     &lt;title&gt;Title&lt;/title&gt;     &lt;description&gt;Description&lt;/description&gt;     &lt;link&gt;https://url/&lt;/link&gt;     &lt;language&gt;en-us&lt;/language&gt;     &lt;lastBuildDate&gt;Sun, 27 Sep 2015 21:07:40 GMT&lt;/lastBuildDate&gt;      &lt;image&gt;     &lt;title&gt;Title&lt;/title&gt;     &lt;width&gt;144&lt;/width&gt;&lt;height&gt;400&lt;/height&gt;     &lt;link&gt;https://url&lt;/link&gt;     &lt;url&gt;https://url&lt;/url&gt;     &lt;/image&gt;      &lt;item&gt;     &lt;title&gt;Title&lt;/title&gt;     &lt;link&gt;https://html&lt;/link&gt;     &lt;guid isPermaLink="true"&gt;https://html&lt;/guid&gt;     &lt;comments&gt;https://html&lt;/comments&gt;     &lt;pubDate&gt;Thu, 24 Sep 2015 16:01:42 GMT&lt;/pubDate&gt;     &lt;description&gt;&lt;![CDATA[]]&gt;&lt;/description&gt;     &lt;category&gt;headline,government,usa,spyware&lt;/category&gt;     &lt;/item&gt;      &lt;item&gt;     &lt;title&gt;Title2&lt;/title&gt;     &lt;link&gt;https://txt&lt;/link&gt;     &lt;guid isPermaLink="true"&gt;https://txt&lt;/guid&gt;     &lt;comments&gt;https://html&lt;/comments&gt;     &lt;pubDate&gt;Fri, 25 Sep 2015 06:54:51 GMT&lt;/pubDate&gt;     &lt;description&gt;DescritpionExist&lt;/description&gt;     &lt;category&gt;&lt;/category&gt;     &lt;/item&gt;      &lt;/channel&gt;     &lt;/rss&gt; </code></pre>  <p><b>Following is my XSLT:</b></p>  <pre><code>&lt;xsl:stylesheet version="1.0"     xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;     &lt;!--skips new lines and indents in--&gt;         &lt;xsl:output method="xml" indent="yes"/&gt;      &lt;!--if,error--&gt;     &lt;xsl:strip-space elements="*"/&gt;     &lt;xsl:template match="@* | node()"&gt;         &lt;xsl:copy&gt;             &lt;xsl:apply-templates select="@* | node()"/&gt;         &lt;/xsl:copy&gt;     &lt;/xsl:template&gt;      &lt;!--skips completely--&gt;     &lt;xsl:template match="channel/title"/&gt;     &lt;xsl:template match="channel/description"/&gt;     &lt;xsl:template match="channel/link"/&gt;     &lt;xsl:template match="channel/language"/&gt;     &lt;xsl:template match="channel/lastBuildDate"/&gt;     &lt;xsl:template match="image"/&gt;     &lt;xsl:template match="item/link"/&gt;      &lt;!--skips node if empty--&gt;     &lt;xsl:template match="item/title[not(child::node())]"/&gt;     &lt;xsl:template match="item/link[not(child::node())]"/&gt;     &lt;xsl:template match="item/guid[not(child::node())]"/&gt;     &lt;xsl:template match="item/comments[not(child::node())]"/&gt;       &lt;!--delimits values if seperated by comma--&gt;     &lt;xsl:template match="item/category[contains(.,',')]"&gt;           &lt;xsl:variable name="elementName" select="name(..)"/&gt;          &lt;xsl:call-template name="splitIntoElements"&gt;             &lt;xsl:with-param name="baseName" select="name(..)" /&gt;             &lt;xsl:with-param name="txt" select="." /&gt;             &lt;/xsl:call-template&gt;      &lt;/xsl:template&gt;      &lt;xsl:template name="splitIntoElements"&gt;         &lt;xsl:param name="baseName" /&gt;         &lt;xsl:param name="txt" /&gt;         &lt;xsl:param name="delimiter" select="','" /&gt;         &lt;xsl:param name="index" select="1" /&gt;          &lt;xsl:variable name="first" select="substring-before($txt, $delimiter)" /&gt;         &lt;xsl:variable name="remaining" select="substring-after($txt, $delimiter)" /&gt;          &lt;xsl:element name="{$baseName}-{$index}"&gt;             &lt;xsl:choose&gt;                 &lt;xsl:when test="$first"&gt;                     &lt;xsl:value-of select="$first" /&gt;                 &lt;/xsl:when&gt;                 &lt;xsl:otherwise&gt;                     &lt;xsl:value-of select="$txt" /&gt;                 &lt;/xsl:otherwise&gt;             &lt;/xsl:choose&gt;         &lt;/xsl:element&gt;              &lt;xsl:if test="$remaining"&gt;             &lt;xsl:call-template name="splitIntoElements"&gt;                 &lt;xsl:with-param name="baseName" select="$baseName" /&gt;                 &lt;xsl:with-param name="txt" select="$remaining" /&gt;                 &lt;xsl:with-param name="index" select="$index+1" /&gt;                 &lt;xsl:with-param name="delimiter" select="$delimiter" /&gt;             &lt;/xsl:call-template&gt;         &lt;/xsl:if&gt;     &lt;/xsl:template&gt; &lt;/xsl:stylesheet&gt; </code></pre>  <p><b>Skipping or removing empty fields did not help:</b></p>  <pre><code>&lt;xsl:template match="item/category[not(child::node())]"/&gt; &lt;xsl:template match="item/description[not(child::node())]"/&gt; </code></pre>  <p>nor this helped</p>  <pre><code>&lt;xsl:template match="*[normalize-space() = '']" /&gt; </code></pre>  <p>I even tried to exhaust if then clause to add an opening tag before the closing tag, but I was not able to get the result.</p>  <p>My output is:</p>  <pre><code>&lt;item&gt;              &lt;title&gt;Title&lt;/title&gt;              &lt;guid isPermaLink="true"&gt;http&lt;/guid&gt;              &lt;comments&gt;http&lt;/comments&gt;              &lt;pubDate&gt;Thu, 24 Sep 2015 01:54:35 GMT&lt;/pubDate&gt;              &lt;description/&gt;              &lt;item-1&gt;headline&lt;/item-1&gt;              &lt;item-2&gt;government&lt;/item-2&gt;              &lt;item-3&gt;privacy&lt;/item-3&gt;              &lt;item-4&gt;usa&lt;/item-4&gt;           &lt;/item&gt;           &lt;item&gt;              &lt;title&gt;Title2&lt;/title&gt;              &lt;guid isPermaLink="true"&gt;http&lt;/guid&gt;              &lt;comments&gt;comment&lt;/comments&gt;              &lt;pubDate&gt;Sat, 26 Sep 2015 03:14:57 GMT&lt;/pubDate&gt;              &lt;description&gt;Description&lt;/description&gt;              &lt;category/&gt;           &lt;/item&gt; </code></pre>  <p>Expected output should be:</p>  <pre><code>&lt;item&gt;          &lt;title&gt;Title&lt;/title&gt;          &lt;guid isPermaLink="true"&gt;http&lt;/guid&gt;          &lt;comments&gt;http&lt;/comments&gt;          &lt;pubDate&gt;Thu, 24 Sep 2015 01:54:35 GMT&lt;/pubDate&gt;          &lt;description&gt;&lt;description/&gt;          &lt;item-1&gt;headline&lt;/item-1&gt;          &lt;item-2&gt;government&lt;/item-2&gt;          &lt;item-3&gt;privacy&lt;/item-3&gt;          &lt;item-4&gt;usa&lt;/item-4&gt;       &lt;/item&gt;       &lt;item&gt;          &lt;title&gt;Title2&lt;/title&gt;          &lt;guid isPermaLink="true"&gt;http&lt;/guid&gt;          &lt;comments&gt;comment&lt;/comments&gt;          &lt;pubDate&gt;Sat, 26 Sep 2015 03:14:57 GMT&lt;/pubDate&gt;          &lt;description&gt;Description&lt;/description&gt;          &lt;category&gt;&lt;category/&gt;       &lt;/item&gt; </code></pre>