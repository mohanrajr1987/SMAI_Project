<p>I'm trying to introduce a version rollback within my .net web api application.</p>  <p>Right now I'm using RoutePrefix's on classes to define the version like so:</p>  <pre><code>[RoutePrefix('api/v1')] public class SomeController { </code></pre>  <p>(SomeController has some api endpoints on it)</p>  <p>Now I've written a custom ControllerSelector, which handles the rollback so that if someone requests api/v2/... it looks to see if v2 exists, and if it doesn't it looks for v1, etc.</p>  <p>I haven't been able to even test this though, because something blocks the routes prior to the call to ControllerSelector.  It's like .NET realizes what routes exist prior to calling the ControllerSelector, and decides not to call ControllerSelector because it doesn't think we want to handle the route.  It results in a 404.</p>  <p>Is there anyway for me to make routes get passed through properly to the ControllerSelector even if there are no controller classes that use RoutePrefixs and Route attributes to explicitly define those routes?</p>  <p><a href="http://i.stack.imgur.com/DUlX5.png" rel="nofollow"><img src="http://i.stack.imgur.com/DUlX5.png" alt="error response"></a></p>