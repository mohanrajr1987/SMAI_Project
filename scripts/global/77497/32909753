<p>A web job receives a message from a Topic and has to trigger process on the api server:</p>  <pre><code>/// &lt;summary&gt; /// Triggers an article word processing call on core api /// &lt;/summary&gt; /// &lt;param name="storageFilePath"&gt;&lt;/param&gt; /// &lt;returns&gt;&lt;/returns&gt; public async Task ProcessArticleWords(string storageFilePath) {     string url = string.Format("{0}", "/Api/Processor/ProcessArticleWords");     using (var client = new APIHttpClient(this._serviceHost))     {         client.Timeout = new TimeSpan(0, 15, 0);         var content = new FormUrlEncodedContent(new[]          {             new KeyValuePair&lt;string, string&gt;("", storageFilePath)         });         var response = await client.PostAsync(url, content);         if (!response.IsSuccessStatusCode)         {             var ae = new ApplicationException(string.Format("Call to /Api/Processor/ProcessArticleWords failed: {0} - {1}, {2}, {3}, {4}", response.StatusCode, response.Content, response.ReasonPhrase, response.RequestMessage, storageFilePath));             _exceptionManager.ExceptionManager.HandleException(                 ae, ExceptionPolicyNames.CoreApiExceptionPolicy);             throw ae;         }     } } </code></pre>  <p>As seen above, the Timeout is clearly set at 15 minutes. But as log shows, sometimes this call fails with an InternalServerError at the 3:50 mark. </p>  <pre><code>2015-10-02T14:04:47  PID[6168] Error       {"Result":"Failed","Text":"{\"CommandName\":\"write\",\"Version\":1,\"CorrelationId\":\"9bf373de-c9b6-46bb-ad28-6be4f9fa1c8e\",\"Payload\":\"\",\"Namespace\":\"\"}","Message":"Call to /Api/Processor/ProcessArticleWords failed: InternalServerError - System.Net.Http.StreamContent,  , Method: POST, RequestUri: '/Api/Processor/ProcessArticleWords', Version: 1.1, Content: System.Net.Http.FormUrlEncodedContent, Headers:\r\n{\r\n  Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGc\r\n  Content-Type: application/x-www-form-urlencoded\r\n  Content-Length: 176\r\n},","Processor":"ArticleDataWriteCommandListener","StartTime":"2015-10-02T14:00:57.2052171Z","Duration":"00:03:50.7084718"} </code></pre>  <p>The API server logs show no error so it's somewhere in the pipeline on the API server that this timeout occurs.</p>  <p>Is there a setting on the web application which limits request to a specific duration? I suspect something could be changed on the azure website configuration but I haven't found an answer which clearly addresses the issue I'm facing. Any thoughts?</p>  <p><strong>UPDATE 1</strong> I tried within the controller to prevent the error by sending data on the response Stream using a timer:</p>  <pre><code>TimerCallback keepAlive = null; AutoResetEvent are = new AutoResetEvent(false); Timer timer = null; var outstream = HttpContext.Current.Response.OutputStream; keepAlive = (evt) =&gt; {     var content = Encoding.UTF8.GetBytes("\r\n");     outstream.Write(content, 0, content.Length);     outstream.Flush(); }; timer = new Timer(keepAlive, are, 1000, 1000); </code></pre>  <p>I still get the error nonetheless. It might be that this idea just doesn't work... I'll keep looking for ideas.</p>