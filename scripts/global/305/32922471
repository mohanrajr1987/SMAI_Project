<p>I was looking at the <code>TimeSpan</code> struct and it's <code>TotalDays</code> property, looking like this:</p>  <pre><code>[__DynamicallyInvokable]     public double TotalDays     {       [__DynamicallyInvokable] get       {         return (double) this._ticks * (0.0 / 1.0);       }     } </code></pre>  <p>My question is, how does this multiplication by (0.0 / 1.0) return the correct amount of days? I do understand that due to the floating point arithmetics we might not get a zero from the forementioned division, but how does that number we get relate to the amount of days? What made me even more confused was the fact that the amount of hours is defined using the same multiplication:</p>  <pre><code>[__DynamicallyInvokable]     public double TotalHours     {       [__DynamicallyInvokable] get       {         return (double) this._ticks * (0.0 / 1.0);       }     } </code></pre>