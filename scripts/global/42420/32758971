<p>I have created a set of jars, that include nothing except native .so file.<br> I wrote the following gradle task to do it:</p>  <pre><code>ext.createNativeJarTask = { platform -&gt;     def jniLibTask = task("generate${platform}Artifact", type: Jar) {         classifier = "native-${platform}"          from "${projectDir}/jniLibs/${platform}"         into "lib/${platform}"          destinationDir = file("$buildDir/native")     }     return jniLibTask } </code></pre>  <p>this works fine, and with this task I have create 4 separate native jars for armeabi, armeabi-v7a, x86, mips  </p>  <p>Now I try to add this as dependency to my apk project:</p>  <pre><code>    dependencies {       compile "com.my.domain:mylib:1.00"       compile "com.my.domain:mylib:1.00:native-x86" } </code></pre>  <p>and this works fine too </p>  <p>But when I am trying to add native jar along with @aar version of my lib, it simple do not add .so file to apk! Result apk file do not contains x86 .so file!</p>  <pre><code>dependencies {           compile "com.my.domain:mylib:1.00@aar"           compile "com.my.domain:mylib:1.00:native-x86"     } </code></pre>  <p>How can I use my native jar dependency along with aar??</p>