<p>I'm using a native library for data processing, there are several files (model files which needed by the library) distributed with it, the api to initialize the library is something like this:</p>  <pre><code>void init(const string&amp; filepath, const string&amp; anotherFilepath); </code></pre>  <p>so I have to provide file paths of the model files, now I have two methods to get the <code>filepath</code>:</p>  <ol> <li>Put the files under <code>assets/</code> or <code>raw/</code> folder, and extract them to somewhere on the internal storage or SD card, then using the extracted files' path;</li> <li><p>Put the files under <code>libs/armeabi/</code> and rename them to <code>lib_filename.so</code>, so they will be treated as shared library, by the side effect, they can be located at:</p>  <pre><code>String filePath = getApplicationContext().getApplicationInfo().dataDir + "/lib/lib_filename.so"; </code></pre></li> </ol>  <p>This two methods works but they both seems unnatural:</p>  <ol> <li>The first one will waste a lot of storage when the files are large;</li> <li>The second one is just a trick so it's not reliable.</li> </ol>  <p>Any suggestions?</p>