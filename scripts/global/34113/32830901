<p>I'm trying cassandra-mesos framework on my local mesos cluster. My cluster has:</p>  <ul> <li>ip: 10.10.10.30 name: vcmms os: CentOs 6.7 {mesos-master, mesos-slave, marathon, zookeeper}</li> <li>ip: 10.10.10.31 name: vcmss1 os: CentOs 6.7 {mesos-slave}</li> <li>ip: 10.10.10.32 name: vcmss2 os: CentOs 6.7 {mesos-slave}</li> </ul>  <p>I'm using a restrictive security policy with iptables to avoid network attack.</p>  <p>The <code>iptable -L</code> on mesos-slaves:</p>  <pre><code>Chain INPUT (policy DROP)                                                                                                 target     prot opt source               destination                                                                      ACCEPT     tcp  --  anywhere             anywhere            tcp dpt:apani1 flags:FIN,SYN,RST,ACK/SYN                     ACCEPT     all  --  anywhere             anywhere            state RELATED,ESTABLISHED                                    ACCEPT     tcp  --  anywhere             anywhere            tcp dpt:ssh                                                  DROP       tcp  --  anywhere             anywhere            tcp flags:FIN,SYN,RST,PSH,ACK,URG/NONE                       DROP       tcp  --  anywhere             anywhere            tcp flags:!FIN,SYN,RST,ACK/SYN state NEW                     DROP       tcp  --  anywhere             anywhere            tcp flags:FIN,SYN,RST,PSH,ACK,URG/FIN,SYN,RST,PSH,ACK,URG    ACCEPT     all  --  anywhere             anywhere                                                                         ACCEPT     tcp  --  anywhere             anywhere            tcp dpt:ita-agent                                            ACCEPT     tcp  --  anywhere             anywhere            tcp dpts:31000:32000                                         ACCEPT     tcp  --  anywhere             anywhere            tcp dpts:afs3-fileserver:afs3-callback                       ACCEPT     tcp  --  anywhere             anywhere            tcp dpt:7199                                                 ACCEPT     tcp  --  anywhere             anywhere            tcp dpt:9042                                                 ACCEPT     tcp  --  anywhere             anywhere            tcp dpt:apani1                                                Chain FORWARD (policy ACCEPT)                                                                                             target     prot opt source               destination                                                                       Chain OUTPUT (policy ACCEPT)                                                                                              target     prot opt source               destination                                                                       Chain DOCKER (0 references)                                                                                               target     prot opt source               destination                                                                      </code></pre>  <p>my app.json:</p>  <pre><code>{   "id": "/cassandra/dev-test",   "instances": 1,   "cpus": 0.5,   "mem": 512,   "ports": [     0   ],   "uris": [     "http://mypublicstorage/cassandra-mesos-0.2.0-1.tar.gz",     "http://mypublicstorage/jre-7u76-linux-x64.tar.gz"   ],   "env": {     "MESOS_ZK": "zk://10.10.10.30:2181/mesos",     "JAVA_OPTS": "-Xms256m -Xmx256m",     "CASSANDRA_CLUSTER_NAME": "dev-test",     "CASSANDRA_ZK": "zk://10.10.10:2181/cassandra-mesos",     "CASSANDRA_NODE_COUNT": "3",     "CASSANDRA_RESOURCE_CPU_CORES": "2.0",     "CASSANDRA_RESOURCE_MEM_MB": "2048",     "CASSANDRA_RESOURCE_DISK_MB": "2048",     "CASSANDRA_HEALTH_CHECK_INTERVAL_SECONDS": "60",     "CASSANDRA_ZK_TIMEOUT_MS": "10000"   },   "cmd": "$(pwd)/jre*/bin/java $JAVA_OPTS -classpath cassandra-mesos-framework.jar io.mesosphere.mesos.frameworks.cassandra.framework.Main",   "healthChecks": [     {       "gracePeriodSeconds": 120,       "intervalSeconds": 30,       "maxConsecutiveFailures": 0,       "path": "/health/cluster",       "portIndex": 0,       "protocol": "HTTP",       "timeoutSeconds": 5     },     {       "gracePeriodSeconds": 120,       "intervalSeconds": 30,       "maxConsecutiveFailures": 3,       "path": "/health/process",       "portIndex": 0,       "protocol": "HTTP",       "timeoutSeconds": 5     }   ] } </code></pre>  <p>After submit app on marathon the framework is registered but health check failed. When I access to the page stats:"<a href="http://vcmms.domain:31329/health/cluster/report" rel="nofollow">http://vcmms.domain:31329/health/cluster/report</a>" the result it's:</p>  <pre><code>{   "healthy": false,   "results": [     {       "name": "nodeCount",       "ok": true,       "expected": 3,       "actual": 3     },     {       "name": "seedCount",       "ok": true,       "expected": 2,       "actual": 2     },     {       "name": "allHealthy",       "ok": false,       "expected": [         true,         true,         true       ],       "actual": [         true       ]     },     {       "name": "operatingModeNormal",       "ok": false,       "expected": [         "NORMAL",         "NORMAL",         "NORMAL"       ],       "actual": [         "NORMAL"       ]     },     {       "name": "lastHealthCheckNewerThan",       "ok": false,       "expected": [         1443544996737,         1443544996737,         1443544996737       ],       "actual": [         1443545237676       ]     },     {       "name": "nodesHaveServerTask",       "ok": true,       "expected": [         true,         true,         true       ],       "actual": [         true,         true,         true       ]     }   ] } </code></pre>  <p><strong>NOTE</strong>  When I disable all iptable restrictions all work fine, but I don't know the ports missing in my iptable rules that cause health check problems. </p>