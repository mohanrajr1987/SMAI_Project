<p>I currently have a table in cassandra called macrecord which looks something like this :</p>  <pre><code> macadd            | position | record | timestamp -------------------+----------+--------+---------------------  23:FD:52:34:DS:32 |        1 |      1 | 2015-09-28 15:28:59 </code></pre>  <p>However i now need to make queries which will use the timestamp column to query for a range. I don't think it is possible to do so without timestamp being part of the primary key (macadd in this case) i-e without it being a clustering key.</p>  <p>If i make timestamp as part of the primary key the table looks like below :</p>  <pre><code> macadd            | timestamp           | position | record -------------------+---------------------+----------+--------  23:FD:52:34:DS:32 | 2015-09-28 15:33:26 |        1 |      1 </code></pre>  <p>However now i cannot update the timestamp column whenever i get a duplicate macadd. </p>  <pre><code>update macrecord set timestamp = dateof(now()) where macadd = '23:FD:52:34:DS:32';  </code></pre>  <p>gives an error : </p>  <pre><code>message="PRIMARY KEY part timestamp found in SET part" </code></pre>  <p>I cannot think of an other solution in this case other than to delete the whole row if there is a duplicate value of macadd and then to insert a new row with an updated timestamp. </p>  <p>Is there a better solution to update the timestamp whenever there is a duplicate value of macadd or an alternative way to query for timestamp values in a range in my original table where only macadd is the primary key. </p>