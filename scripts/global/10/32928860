<p>I'm using a C++ game tutorial and I'm having trouble figuring out why my class object that I've created is giving me the error that "Expression must have class type". The object is called "menuEvent" and  when you hover over the variable, on the first line of the brief it says "sf::Event menuEvent" but then on the second line of the brief it says "Error:expression must have class type". It's contradicting itself in the same brief and I can't figure it out. I'm working in Visual Studio 2015 with C++ code. Any help would be extremely appreciated. Here's what I've got;</p>  <p>This piece is from one of my external dependencies documents;</p>  <pre><code>namespace sf { class Event { public: struct MouseButtonEvent {     Mouse::Button button; ///&lt; Code of the button that has been pressed     int x; ///&lt; X position of the mouse pointer, relative to the left of the owner window     int y; ///&lt; Y position of the mouse pointer, relative to the top of the owner window }; }; } </code></pre>  <p>Then this piece is from one of my source files;</p>  <pre><code>MainMenu::MenuResult MainMenu::HandleClick(int x, int y) { std::list&lt;MenuItem&gt;::iterator it;  for (it = _menuItems.begin(); it != _menuItems.end(); it++) {                sf::Rect&lt;int&gt; menuItemRect = (*it).rect;      if(menuItemRect.contains(sf::Vector2&lt;int&gt;(x,y)))         {             return it-&gt;action;         } }  return Nothing; }  MainMenu::MenuResult MainMenu::GetMenuResponse(sf::RenderWindow&amp; window) { sf::Event menuEvent;  while (true) {     window.pollEvent(menuEvent);     // The above line with menuEvent it reads as being of the sf::Event type      if (menuEvent.type == sf::Event::MouseButtonPressed)     {         //But the below line here when I hover over "menuEvent" it shows that it's of the sf::Event type, but then right below that it says "Error:expression must have class type".         return HandleClick(menuEvent.MouseButtonPressed.x , menuEvent.MouseButtonPressed.y);     }      if (menuEvent.type == sf::Event::Closed)     {         return Exit;     } } </code></pre>  <p>}</p>