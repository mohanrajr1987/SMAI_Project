<p>Here is the error I am receiving when running the project that I am using the DLL in: </p>  <p><a href="http://i.stack.imgur.com/hyRZq.png" rel="nofollow"><img src="http://i.stack.imgur.com/hyRZq.png" alt="No Entry Point error"></a></p>  <p>The odd thing is that this was working at one point. I took a break from this project for a while and now it is not working. Not much has changed besides changing a couple of the parameters.</p>  <p>My setup includes a project in which I build the DLL. This project is then used in a solution with another project that I use to test it. I followed this example: <a href="https://msdn.microsoft.com/en-us/library/ms235636.aspx" rel="nofollow">https://msdn.microsoft.com/en-us/library/ms235636.aspx</a> in which I also followed the first time and had it working, now it has stopped.</p>  <p>After realizing it seems to be only one of the functions that is causing the problem I have removed all of the extra code, tried renaming the function, removing everything in it and it is STILL not working.</p>  <p>You can see the function definitions and signatures to see how I am attempting to get this to work below</p>  <p>I have also tried using the "SCOREINTERFACECPP" macro I created on the function instead of the class and I get the same error.</p>  <p>In the project I am testing it in I added the DLL project as a reference and a dependent project, then imported the header file. The other functions I have in the dll (that I have removed from this code for simplicity sake) seem to be working.</p>  <p>Header:</p>  <pre><code>#ifdef SCOREINTERFACECPP_EXPORTS #define SCOREINTERFACECPP __declspec(dllexport)  #else #define SCOREINTERFACECPP __declspec(dllimport)  #endif  #include &lt;time.h&gt; #include &lt;queue&gt;  namespace ScoreInterfaceCPP {     class SCOREINTERFACECPP ScoreInterface     {      public:          ScoreInterface();         ~ScoreInterface();          static void SubmitLogin(const std::string &amp;displayName, const std::string &amp;password);          static void Shutdown();          static SIEvent* GetNextEvent();         static void ClearEvents();         static int GetEventCount();      private:          static std::queue&lt; SIEvent* &gt; mSIEvents;         static bool mGameIsAuthorized;         static std::string mGameName;          static std::string hexedKey;         static std::wstring mAddress;          static void SubmitEventString(std::string eventString);          static int SubmitWithNewThread(void* data);          static void PostMessage(std::string data, std::string iv);     }; } </code></pre>  <p>Source:</p>  <pre><code>#include &lt;sstream&gt;  #include &lt;SDL/SDL_thread.h&gt; #include &lt;boost/tokenizer.hpp&gt;  #include "ScoreInterfaceCPP.h" #include "Network.h"  using namespace ScoreInterfaceCPP;  /*     ScoreInterfaceCPP.h     Handles the sending and receiving of events. */  ScoreInterface::ScoreInterface() { }  ScoreInterface::~ScoreInterface() { }  void ScoreInterface::SubmitLogin(const std::string &amp;displayName, const std::string &amp;password) {        }  void ScoreInterface::SubmitEventString(std::string eventString) {        }  int ScoreInterface::SubmitWithNewThread(void* data) {        return 0; }  SIEvent* ScoreInterface::GetNextEvent() {        return NULL; }  int ScoreInterface::GetEventCount() {     return 0; }  void ScoreInterface::ClearEvents() { }  void ScoreInterface::Shutdown() { } </code></pre>  <p>Test file:</p>  <pre><code>#include "ScoreInterfaceCPP.h"  using namespace ScoreInterfaceCPP; using namespace std;  int _tmain(int argc, _TCHAR* argv[]) {     ScoreInterface si = ScoreInterface();      si.SubmitLogin("noplayer", "nopassword");      return 0; } </code></pre>