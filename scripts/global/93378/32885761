<p>I have the following validation method and the associated model class. I am getting the above mentioned error (Title of the Question) in my browser while clicking on the submit button for Create.</p>  <p>How can I resolve the particular issue?</p>  <p>Model Class</p>  <pre><code>public class LsystemFamily {     public int LsystemFamilyID { get; set; }     [Display (Name = "Family Name")]     [Remote("DuplicateFamilyName","LsystemFamilies",HttpMethod = "POST",ErrorMessage= "System Family Name already Exists",AdditionalFields= "LsystemFamilyID")]     //[Unique(ErrorMessage = "Family Name Already Exists")]     public string FamilyName { get; set; } </code></pre>  <p>Validation Method</p>  <pre><code>    public JsonResult DuplicateFamilyName(string FamilyName, int FamilyID)     {         //bool idExists = db.LsystemFamily.Any(id=&gt;id.LsystemFamilyID.Equals(FamilyID));         if (FamilyID == 0)         {             bool exists = db.LsystemFamily.Any(x =&gt; x.FamilyName == FamilyName);             //var name = db.LsystemFamily.Where(x =&gt; x.FamilyName.Equals(FamilyName, StringComparison.CurrentCultureIgnoreCase)).FirstOrDefault();             return Json(!exists,JsonRequestBehavior.AllowGet);         }         else         {             bool exists = db.LsystemFamily.Where(x =&gt; x.LsystemFamilyID != FamilyID).Any(x =&gt; x.FamilyName == FamilyName);             //var name = db.LsystemFamily.Where(x =&gt; x.FamilyName.Equals(FamilyName, StringComparison.CurrentCultureIgnoreCase) &amp;&amp; x.LsystemFamilyID != FamilyID).FirstOrDefault();             return Json(!exists, JsonRequestBehavior.AllowGet);         }     } </code></pre>  <p>The validation method is posted because I started getting the error only after adding the Json Validation.</p>  <p>EDIT : View</p>  <pre><code>&lt;h2&gt;Create&lt;/h2&gt; @using (Html.BeginForm())  { @Html.AntiForgeryToken()      @Html.ValidationSummary(true, "", new { @class = "text-danger" })     @Html.HiddenFor(model =&gt; model.LsystemFamilyID);              @Html.LabelFor(model =&gt; model.FamilyName, htmlAttributes: new { @class = "control-label col-md-2" })             @Html.EditorFor(model =&gt; model.FamilyName, new { htmlAttributes = new { @class = "form-control" } })             @Html.ValidationMessageFor(model =&gt; model.FamilyName, "", new { @class = "text-danger" })              @Html.LabelFor(model =&gt; model.DescriptionEN, htmlAttributes: new { @class = "control-label col-md-2" })             @Html.EditorFor(model =&gt; model.DescriptionEN, new { htmlAttributes = new { @class = "form-control" } })             @Html.ValidationMessageFor(model =&gt; model.DescriptionEN, "", new { @class = "text-danger" })               @Html.LabelFor(model =&gt; model.DescriptionDE, htmlAttributes: new { @class = "control-label col-md-2" })             @Html.EditorFor(model =&gt; model.DescriptionDE, new { htmlAttributes = new { @class = "form-control" } })             @Html.ValidationMessageFor(model =&gt; model.DescriptionDE, "", new { @class = "text-danger" })      &lt;div class="form-group"&gt;         &lt;div class="col-md-offset-2 col-md-10"&gt;             &lt;input type="submit" value="Create" class="btn btn-default" /&gt;         &lt;/div&gt;    &lt;/div&gt; @Html.ActionLink("Back to List", "Index")  @section Scripts { @Scripts.Render("~/bundles/jqueryval") } </code></pre>