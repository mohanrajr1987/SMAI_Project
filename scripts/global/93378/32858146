<p>I want to store values. I import to a table or somthing like this, the objetive is get these values I import and perform matematic operations with values I have actually with my database. Or there are another way to do that?</p>  <pre><code> [HttpPost]     public ActionResult Index(HttpPostedFileBase file)     {          var debt = from Employee in db.EmployeeList                   where Employee.Deuda.Equals("")                    select Employee;          DataSet ds = new DataSet();         if (Request.Files["file"].ContentLength &gt; 0)         {             string fileExtension =                                  System.IO.Path.GetExtension(Request.Files["file"].FileName);              if (fileExtension == ".xls" || fileExtension == ".xlsx")             {                 string fileLocation = Server.MapPath("~/Content/") + Request.Files["file"].FileName;                 if (System.IO.File.Exists(fileLocation))                 {                      System.IO.File.Delete(fileLocation);                 }                 Request.Files["file"].SaveAs(fileLocation);                 string excelConnectionString = string.Empty;                 excelConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;Data Source=" +                 fileLocation + ";Extended Properties=\"Excel 12.0;HDR=Yes;IMEX=2\"";                 //connection String for xls file format.                 if (fileExtension == ".xls")                 {                     excelConnectionString = "Provider=Microsoft.Jet.OLEDB.4.0;Data Source=" +                     fileLocation + ";Extended Properties=\"Excel 8.0;HDR=Yes;IMEX=2\"";                 }                 //connection String for xlsx file format.                 else if (fileExtension == ".xlsx")                 {                     excelConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;Data Source=" +                     fileLocation + ";Extended Properties=\"Excel 12.0;HDR=Yes;IMEX=2\"";                 }                 //Create Connection to Excel work book and add oledb namespace                 OleDbConnection excelConnection = new OleDbConnection(excelConnectionString);                 excelConnection.Open();                 DataTable dt = new DataTable();                  dt = excelConnection.GetOleDbSchemaTable(OleDbSchemaGuid.Tables, null);                 if (dt == null)                 {                     return null;                 }                  String[] excelSheets = new String[dt.Rows.Count];                 int t = 0;                 //excel data saves in temp file here.                 foreach (DataRow row in dt.Rows)                 {                     excelSheets[t] = row["TABLE_NAME"].ToString();                     t++;                 }                 OleDbConnection excelConnection1 = new OleDbConnection(excelConnectionString);                   string query = string.Format("Select * from [{0}]", excelSheets[0]);                 using (OleDbDataAdapter dataAdapter = new OleDbDataAdapter(query, excelConnection1))                 {                     dataAdapter.Fill(ds);                 }             }             if (fileExtension.ToString().ToLower().Equals(".xml"))             {                 string fileLocation = Server.MapPath("~/Content/") + Request.Files["FileUpload"].FileName;                 if (System.IO.File.Exists(fileLocation))                 {                     System.IO.File.Delete(fileLocation);                 }                  Request.Files["FileUpload"].SaveAs(fileLocation);                 XmlTextReader xmlreader = new XmlTextReader(fileLocation);                 // DataSet ds = new DataSet();                 ds.ReadXml(xmlreader);                 xmlreader.Close();             }              for (int i = 0; i &lt; ds.Tables[0].Rows.Count; i++)             {                 string conn = ConfigurationManager.ConnectionStrings["Database"].ConnectionString;                 SqlConnection con = new SqlConnection(conn);                 string query = "INSERT into Employee (dubt,FourtinithyDoubt,Interest) Values ('"                     + ds.Tables[0].Rows[i][0]                      + ds.Tables[0].Rows[i][1]                       + ds.Tables[0].Rows[i][2]                     //+ "," + 0                     //+ "," + 0                     + "')";                 con.Open();                 SqlCommand cmd = new SqlCommand(query, con);                 cmd.ExecuteNonQuery();                 con.Close(); </code></pre>