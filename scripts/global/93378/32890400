<p>I have the following view:</p>  <pre><code>@model Microsoft.AspNet.Identity.EntityFramework.IdentityRole @{     ViewBag.Title = Resources.Edit; }  &lt;h2&gt;@Resources.EditRole&lt;/h2&gt;  @Html.ActionLink(Resources.ListRoles, "Index") | @Html.ActionLink(Resources.ManageUserRoles, "ManageUserRoles") &lt;hr /&gt; &lt;div class="row"&gt;     &lt;div class="col-md-8"&gt;         &lt;section id="editRoleForm"&gt;             @using (Html.BeginForm("Edit", "Role", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))             {                 @Html.AntiForgeryToken()                 &lt;h4&gt;@Resources.Role&lt;/h4&gt;                 @Html.ValidationSummary(true, "", new { @class = "text-danger" })                 @Html.HiddenFor(model =&gt; model.Id)                 &lt;div class="form-group"&gt;                     @Html.LabelFor(m =&gt; m.Name, new { @class = "col-md-2 control-label" })                     &lt;div class="col-md-10"&gt;                         @Html.TextBoxFor(m =&gt; m.Name, new { @class = "form-control" })                         @Html.ValidationMessageFor(m =&gt; m.Name, "", new { @class = "text-danger" })                     &lt;/div&gt;                 &lt;/div&gt;                 &lt;div class="form-group"&gt;                     &lt;div class="col-md-offset-2 col-md-10"&gt;                         &lt;input type="submit" value="@Resources.Save" class="btn btn-default" /&gt;                     &lt;/div&gt;                 &lt;/div&gt;             }         &lt;/section&gt;     &lt;/div&gt; &lt;/div&gt; </code></pre>  <p>I also have the following two methods in my <code>RoleController</code>:</p>  <pre><code>        //         // GET: /Role/Edit/5         public ActionResult Edit(string Role)         {             var thisRole = context.Roles.Where(r =&gt; r.Name.Equals(Role, StringComparison.CurrentCultureIgnoreCase)).FirstOrDefault();              return View(thisRole);         }          //         // POST: /Role/Edit/5         [HttpPost]         public ActionResult Edit(FormCollection collection)         {             try             {                 var thisRole = context.Roles.Where(r =&gt; r.Id.Equals(collection["Id"])).FirstOrDefault();                 thisRole.Name = collection["Name"];                 context.SaveChanges();                 return RedirectToAction("Index");             }             catch             {                 return View();             }         } </code></pre>  <p>Originally, I was trying to use this method instead of the second one:</p>  <pre><code>    //     // POST: /Role/Edit/5     [HttpPost]     [ValidateAntiForgeryToken]     public ActionResult Edit(IdentityRole Name)     {         try         {             context.Entry(Name).State = System.Data.Entity.EntityState.Modified;             context.SaveChanges();              return RedirectToAction("Index");         }         catch         {             return View();         }     } </code></pre>  <p>But I never got it to work because the <code>Name</code> parameter was always <code>null</code> -which I still don't know why it happened, so if someone can explain it to me that'll be greatly appreciated. </p>  <p>I wrote then the other method since I saw the use of <code>FormCollection</code> in another example (to create roles) and it seems to work fine, at least it contains the information I need when I debug it. My issue is that although <code>collection["id"]</code> has the right Id for the Role I'm trying to edit, <code>context.Roles</code> is completely empty. This makes no sense to me given that when the first method is called (loading the View for the first time), this line</p>  <p><code>var thisRole = context.Roles.Where(r =&gt; r.Name.Equals(Role, StringComparison.CurrentCultureIgnoreCase)).FirstOrDefault();</code></p>  <p>returns the selected role (out of the several that exist and that I can see when I add to watch <code>context.Roles</code>). However, after the view is loaded, the textbox edited and the second method in the controller gets called, <code>context.Roles</code> has nothing in it. Why?</p>