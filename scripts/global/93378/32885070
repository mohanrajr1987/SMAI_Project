<p><strong>Short Version:</strong> I have an extension method that extends MVC 5's UrlHelper helper method. I want to pass in (string action, string controller, object routeValues) to this method, and use Url.Action("action", "controller", routeValues) inside it. I get an <code>ArgumentNullException</code> for <code>routeCollection</code> when I do this. What is the correct way of doing this so I don't get this exception?</p>  <p><strong>Long version</strong> I have the following extension method:</p>  <pre><code>public static string ActionToUrl(this UrlHelper url, string action, string controller, object routeValues)     {         Uri contextUri = HttpContext.Current.Request.Url;          var relativeContentPath = url.Action(action, controller, routeValues);          var baseUri = string.Format("{0}://{1}{2}", contextUri.Scheme,            contextUri.Host, contextUri.Port == 80 ? string.Empty : ":" + contextUri.Port);          return string.Format("{0}{1}", baseUri, VirtualPathUtility.ToAbsolute(relativeContentPath));     } </code></pre>  <p>The idea is, this method will return an absolute url path when used instead of the relative path that <code>Url.Action</code> returns.</p>  <p>However, I get an ArgumentNullException when I try using <code>Url.Action</code> inside this with the <code>RouteValueDictionary</code> overload: </p>  <blockquote>   <p>Value cannot be null. Parameter name: routeCollection</p> </blockquote>  <p>I don't get this exception if I use the simple (action, controller) overload.</p>  <p>I also tried constructing the <code>RouteValueDictionary</code> with its <code>RouteValueDictionary(object routeValues)</code> constructor and then sending it to <code>Url.Action</code> like:</p>  <pre><code>var routeValueDictionary = new RouteValueDictionary();  var relativeContentPath = url.Action(action, controller, routeValueDictionary); </code></pre>  <p>But I get the same error, so I know the problem is not the conversion from <code>object</code> to <code>RouteValueDictionary</code>.</p>  <p>what am I missing here?</p>  <p>EDIT: </p>  <p>The extension is actually working when I use it in a view. I get the exception when I'm calling this from a new UrlHelper in a service class. Why do I get this exception?</p>