<p>I'm very new to MVC 5 and web programming in general so please bear with me.</p>  <p>I have a view (used to manage user roles) where I have three separate forms, which I more or less copied and pasted from a tutorial. In the tutorial the fields for the forms were created in the following way:</p>  <pre><code>Username : @Html.TextBox("Username") </code></pre>  <p>Since I wanted the styling to work for them, I changed the code to look more like the default forms in the MVC 5 template, so it ended up looking like this:</p>  <pre><code>@Html.LabelFor(m =&gt; m.GetRolesUsername, new { @class = "col-md-2 control-label" })                     &lt;div class="col-md-10"&gt;                         @Html.TextBoxFor(m =&gt; m.GetRolesUsername, new { @class = "form-control" })                         @Html.ValidationMessageFor(m =&gt; m.GetRolesUsername, "", new { @class = "text-danger" })                     &lt;/div&gt; </code></pre>  <p>My model <code>ManageUserRolesViewModel</code> looks like this (note that at the top of my view I have <code>@model ManageUserRolesViewModel</code>):</p>  <pre><code>public class ManageUserRolesViewModel {     #region Assign Role     [Required]     [Display(Name = "Username", ResourceType = typeof(Resources))]     public string AssignRoleUsername { get; set; }      [Required]     [Display(Name = "RoleName", ResourceType = typeof(Resources))]     public string AssignRoleRole { get; set; }     #endregion      #region Get Roles     [Required]     [Display(Name = "Username", ResourceType = typeof(Resources))]     public string GetRolesUsername { get; set; }     #endregion      #region Unassign Role     [Required]     [Display(Name = "Username", ResourceType = typeof(Resources))]     public string UnassignRoleUsername { get; set; }      [Required]     [Display(Name = "RoleName", ResourceType = typeof(Resources))]     public string UnassignRoleRole { get; set; }     #endregion } </code></pre>  <p>Notice how I'm using annotations to load the name of the elements in the ViewModel directly from resources. I'm doing this for localization purposes, and the resources are returning strings in Spanish. <strong>I think this may be the root of my issue, but I'm not sure</strong>.</p>  <p>Then, in my controller I have the following method:</p>  <pre><code>        [HttpPost]         [ValidateAntiForgeryToken]         public ActionResult GetRoles(string UserName)         {             if (!string.IsNullOrWhiteSpace(UserName))             {                 ApplicationUser user = context.Users.Where(u =&gt; u.UserName.Equals(UserName, StringComparison.CurrentCultureIgnoreCase)).FirstOrDefault();                  ViewBag.RolesForThisUser = this.UserManager.GetRoles(user.Id);                 ViewBag.Roles = context.Roles.OrderBy(r =&gt; r.Name).ToList().Select(rr =&gt; new SelectListItem { Value = rr.Name.ToString(), Text = rr.Name }).ToList();             }              return View("ManageUserRoles");         } </code></pre>  <p>Now, here's what happens: if I use <code>Username : @Html.TextBox("Username")</code>, when the method <code>GetRoles()</code> gets called in the controler, the <code>UserName</code> parameter is there and the user is successfully loaded. If instead I use the </p>  <pre><code>@Html.LabelFor(m =&gt; m.GetRolesUsername, new { @class = "col-md-2 control-label" })                     &lt;div class="col-md-10"&gt;                         @Html.TextBoxFor(m =&gt; m.GetRolesUsername, new { @class = "form-control" })                         @Html.ValidationMessageFor(m =&gt; m.GetRolesUsername, "", new { @class = "text-danger" })                     &lt;/div&gt; </code></pre>  <p>when the method gets called, the <code>UserName</code> parameter is <code>null</code>.</p>  <p>My wild guess is that somewhere in the code MVC is looking for <code>UserName</code> or <code>Username</code> and finding <code>Usuario</code> instead, but I am not sure if this is true and in any case, I'd like to know how to solve the issue.</p>