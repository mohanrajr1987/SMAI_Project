<p>I have the following datamodel and its associated model classes. I have been removing dependencies to get it right, but I keep on getting this error.</p>  <p><strong>Datamodel</strong></p>  <p><a href="http://i.stack.imgur.com/SSIHr.png" rel="nofollow"><img src="http://i.stack.imgur.com/SSIHr.png" alt="Class diagram"></a></p>  <p>I can't find out why there is a cascading path in the model. I am afraid I will not be able to reduce the dependencies.</p>  <p><strong>Model Classes</strong></p>  <pre><code>public class DataFormat {     public int DataFormatID { get; set; }     [Display (Name = "Data Format Name")]     [Remote("DuplicateFormatName", "DataFormats", HttpMethod = "POST", ErrorMessage = "Data Format Name already Exists")]     public string FormatName { get; set; }     [Display (Name = "Data Format Type")]     public string FormatType { get; set; }     [Display (Name = "Precision Digits")]     public string PrecisionDigits { get; set; }     [Display (Name = "Scaling Digits")]     public string ScalingDigits { get; set; }     [Display (Name = "Description in German")]     public string DescriptionDE { get; set; }     [Display (Name = "Description in English")]     public string DescriptionEN { get; set; }     public DateTime CreatedOn { get; set; }     public DateTime ModifiedOn { get; set; }     public string CreatedBy { get; set;}     public string ModifiedBy { get; set; }      public virtual ICollection&lt;TcSet&gt; TcSets { get; set; } }  public class Lsystem {     public int LsystemID { get; set; }     [Display (Name = "System Name") ]     [Remote("DuplicateSystemName", "Lsystems", HttpMethod = "POST", ErrorMessage = "System Name already Exists")]     public string LsystemName { get; set; }     [Display (Name = "Material Number")]     public string MaterialNumber { get; set; }     public DateTime CreatedOn { get; set; }     public DateTime ModifiedOn { get; set; }     public string CreatedBy { get; set; }     public string ModifiedBy { get; set; }     [Display(Name = "Description in English")]     public string DescriptionEN { get; set; }     [Display(Name = "Description in German")]     public string DescriptionDE { get; set; }      public int LsystemFamilyID { get; set; }      public virtual LsystemFamily LsystemFamily { get; set; }     public virtual ICollection&lt;Option&gt; Options { get; set; } }  public class LsystemFamily {     public int LsystemFamilyID { get; set; }     [Display (Name = "Family Name")]     [Remote("DuplicateFamilyName","LsystemFamilies",HttpMethod = "POST",ErrorMessage= "System Family Name already Exists")]     public string FamilyName { get; set; }     public int LsystemCount { get; set; }     [Display ( Name = "Description in English")]     public string DescriptionEN { get; set; }     [Display (Name = "Description in German")]     public string DescriptionDE { get; set; }     public DateTime CreatedOn { get; set; }     public DateTime ModifiedOn { get; set; }     public string CreatedBy { get; set; }     public string ModifiedBy { get; set; }      public virtual ICollection&lt;Lsystem&gt; Lsystems { get; set; } }  public class Option {     public int OptionID { get; set;}     [Display (Name = "Option Type")]     public string OptionName { get; set; }     [Display (Name ="Description in English")]     public string DescriptionEN { get; set; }     [Display(Name = "Description in German")]     public string DescriptionDE { get; set; }     public DateTime CreatedOn { get; set; }     public DateTime ModifiedOn { get; set; }     public string CreatedBy { get; set; }     public string ModifiedBy { get; set; }      public int TechnicalCharacteristicID { get; set; }     public int LsystemID { get; set; }      public virtual ICollection&lt;OptionValue&gt; OptionValues { get; set; }     public virtual TechnicalCharacteristic TechnicalCharacteristic { get; set; }     public virtual Lsystem Lsystem { get; set; }    // public virtual ICollection&lt; SetValue&gt; SetValue { get; set; } }  public class OptionValue {     public int OptionValueID { get; set; }     [Display(Name = "Option Value")]     public string OptionVal { get; set; }      public int OptionID { get; set; }    // public int SetValueID { get; set; }      public virtual Option Option { get; set; }     public virtual ICollection&lt; SetValue&gt; SetValue { get; set; } }  public class SetValue {     public int SetValueID { get; set; }     [Display(Name = "Value")]     public string Value { get; set; }     [Display(Name="Internal")]     public bool Status { get; set; }      //public int LsystemID { get; set; }     //public int OptionID { get; set; }     public int TcSetID { get; set; }     public int OptionValueID { get; set; }      //public virtual Lsystem Lsystem { get; set; }     //public virtual Option Option { get; set; }     public virtual OptionValue OptionValue { get; set; }     public virtual TcSet TcSet { get; set; }  }  public class TcSet {     public int TcSetID { get; set; }     [Display (Name = "Technical characteristic Property name")]     public string SetName { get; set; }     [Display(Name = "PhysicalUnit")]     public string PhysicalUnit { get; set; }     [Display (Name = "Data Usage")]     public DataUsage DataUsage { get; set; }     [Display (Name = "Data Status")]     public DataStatus DataStatus { get; set; }     public DateTime CreatedOn { get; set; }     public DateTime ModifiedOn { get; set; }     [Display (Name = "Description in German")]     public string DescriptionDE { get; set; }     [Display (Name = "Description in English")]     public string DescriptionEN { get; set; }     public string CreatedBy { get; set; }     public string ModifiedBy { get; set; }      public int TechnicalCharacteristicID { get; set; }     public int DataFormatID { get; set; }      public virtual ICollection&lt;SetValue&gt; SetValues { get; set; }     public virtual DataFormat DataFormat { get; set; }     public virtual TechnicalCharacteristic TechnicalCharacteristic { get; set; } }  public class TechnicalCharacteristic {     public int TechnicalCharacteristicID { get; set; }     [Display (Name = "Technical Characteristic Name")]     public string TCName { get; set; }     [Display (Name = "Description in English")]     public string DescriptionEN { get; set; }     [Display (Name = "Description in German")]     public string DescriptionDE { get; set; }     public DateTime CreatedOn { get; set; }     public DateTime ModifiedOn { get; set; }     public string CreatedBy { get; set; }     public string ModifiedBy { get; set; }      public virtual ICollection&lt;TcSet&gt; TcSets { get; set; }     //public virtual ICollection&lt;Option&gt; Options { get; set; } } </code></pre>  <p>Now my error is between the tables Options and technicalCharacteristics. I had the error previosly with LSystem and SetVal &amp; Options.</p>  <p>What can be the workaround to get the task right? I have not tried fluent APIs.</p>