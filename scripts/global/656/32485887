<p>I have a couple of libraries that are built for Linux and windows. The Linux version builds via a <code>Makefile</code> in the root directory, and the Windows version is a Visual Studio 2010 project that uses the exact same source files. Platform-specific code is handled in a hardware abstraction layer header (<code>.h</code>) file which handles things like <code>strtok_s()</code> versus <code>strtok_r()</code>, Visual Studio's C89 limitations, etc.</p>  <p>In order to reduce the headache my devs have when dealing with SVN, I ran a batch script on a Linux box to convert the line endings for all the source <code>.c</code>, <code>.h</code>, and <code>.cpp</code> files to Linux (<code>LF</code>), set the svn property for line endings to "native" (ie: <code>svn propset eol-style:native</code>), and commited all the files in one large commit.</p>  <p>No issues on the Linux side of things, but whenever the Windows users check out the file (they are using TortoiseSVN), make changes, and generate the diff/patch, TortoiseSVN complains about inconsistent line endings. I verified with GVim on Windows, and it seems the files all have UNIX style (<code>LF</code>) line endings, but the portions of the file that was changed in Visual Studio has Windows style (<code>CR/LF</code>) line endings. </p>  <p>In Visual Studio, I've already manually saved the files as "Unix Line Ending" via the "Advanced Save Options" dialog, but this setting doesn't appear to persist after SVN commits, which leads me to suspect that no actual file options are saved in the Visual Studio project file (<code>.vcproj</code>) or solution file (<code>.sln</code>), but the encoding of the source file itself is just changed, and isn't preserved on our SVN server.</p>  <p>How can I just set-and-forget line endings for cross-platform projects like this, or get Visual Studio to stop messing up the files? It was to my understanding that setting the EOL-style to native meant that clients check out files in the system's native encoding, and it's stored in a "preferred" format on the SVN server, so I wouldn't have to deal with these issue.</p>  <p>Thank you.</p>