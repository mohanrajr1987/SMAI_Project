<p>I have a dropdown list a textbox and a gridview. the gridview is bounded base on the values in the dropdown. The gridview is filtered base on what is selected from the dropdown list and what is typed in the textbox. </p>  <p>I have two stored procedures  1. First one is a select statement from several tables. 2. the second one has two parameter that takes data from both dropdownlist and textbox  and then display info base on them. </p>  <p>Hence my gridview is bounded dynamically because each item in the dropdown are names of tables in my db with different column name.</p>  <p>hence my gidview has no item template or databoundfield too.</p>  <p>NOW I WANT TO BE ABLE TO EDIT ANY ROW IN THE GRIDVIEW. Please friends help </p>  <p>My data access layer class code</p>  <p>Protected Sub Page_Load(sender As Object, e As System.EventArgs) Handles Me.Load         If Not Page.IsPostBack Then             BindGVUILibrary()             txtSearch.Enabled = False         End If     End Sub</p>  <pre><code>Private Sub BindGVUILibrary()     Try         GVUILibrary.DataSource = BLL.spSelectAllLibraryBooks()         GVUILibrary.DataBind()      Catch ex As Exception         ScriptManager.RegisterStartupScript(Me, Me.[GetType](), "Message", "alert('Error occurred : " &amp; ex.Message.ToString() &amp; "');", True)     Finally      End Try End Sub  Protected Sub btnSearch_Click(sender As Object, e As EventArgs) Handles btnSearch.Click      Try         If DpLFilter.SelectedItem.Text = "BOOKS" Then             GVUILibrary.DataSource = BLL.FilterUILibrary(DpLFilter.SelectedItem.Text, txtSearch.Text.Trim())             GVUILibrary.DataBind()         ElseIf DpLFilter.SelectedItem.Text = "CASES" Then             GVUILibrary.DataSource = BLL.FilterUILibrary(DpLFilter.SelectedItem.Text, txtSearch.Text.Trim())             GVUILibrary.DataBind()         ElseIf DpLFilter.SelectedItem.Text = "STATUTES" Then             GVUILibrary.DataSource = BLL.FilterUILibrary(DpLFilter.SelectedItem.Text, txtSearch.Text.Trim())             GVUILibrary.DataBind()         ElseIf DpLFilter.SelectedItem.Text = "THESES" Then             GVUILibrary.DataSource = BLL.FilterUILibrary(DpLFilter.SelectedItem.Text, txtSearch.Text.Trim())             GVUILibrary.DataBind()         ElseIf DpLFilter.SelectedItem.Text = "JOURNALS" Then             GVUILibrary.DataSource = BLL.FilterUILibrary(DpLFilter.SelectedItem.Text, txtSearch.Text.Trim())             GVUILibrary.DataBind()         ElseIf DpLFilter.SelectedItem.Text = "LAW REPORTS" Then             GVUILibrary.DataSource = BLL.FilterUILibrary(DpLFilter.SelectedItem.Text, txtSearch.Text.Trim())             GVUILibrary.DataBind()         ElseIf DpLFilter.SelectedItem.Text = "REFERENCE MATERIALS" Then             GVUILibrary.DataSource = BLL.FilterUILibrary(DpLFilter.SelectedItem.Text, txtSearch.Text.Trim())             GVUILibrary.DataBind()         Else             GVUILibrary.DataSource = BLL.spSelectAllLibraryBooks()             GVUILibrary.DataBind()             txtSearch.Enabled = False         End If     Catch ex As Exception         ScriptManager.RegisterStartupScript(Me, Me.[GetType](), "Message", "alert('Anoda Error has occurred : " &amp; ex.Message.ToString() &amp; "');", True)      End Try  End Sub  Protected Sub GVUILibrary_PageIndexChanging(sender As Object, e As GridViewPageEventArgs) Handles GVUILibrary.PageIndexChanging      GVUILibrary.PageIndex = e.NewPageIndex     If DpLFilter.SelectedItem.Text = "&lt;&lt; Select Item &gt;&gt;" Then          BindGVUILibrary()         txtSearch.Enabled = False      Else          GVUILibrary.DataSource = BLL.FilterUILibrary(DpLFilter.SelectedItem.Text, txtSearch.Text.Trim())         GVUILibrary.DataBind()         txtSearch.Enabled = True         'txtSearch.Focus()      End If End Sub  Protected Sub DpLFilter_SelectedIndexChanged(sender As Object, e As EventArgs) Handles DpLFilter.SelectedIndexChanged     txtSearch.Enabled = True     txtSearch.Text = String.Empty     txtSearch.Focus()      Try         If DpLFilter.SelectedItem.Text = "BOOKS" Then             GVUILibrary.DataSource = BLL.FilterUILibrary(DpLFilter.SelectedItem.Text, txtSearch.Text.Trim())             GVUILibrary.DataBind()          ElseIf DpLFilter.SelectedItem.Text = "CASES" Then             GVUILibrary.DataSource = BLL.FilterUILibrary(DpLFilter.SelectedItem.Text, txtSearch.Text.Trim())             GVUILibrary.DataBind()          ElseIf DpLFilter.SelectedItem.Text = "STATUTES" Then             GVUILibrary.DataSource = BLL.FilterUILibrary(DpLFilter.SelectedItem.Text, txtSearch.Text.Trim())             GVUILibrary.DataBind()          ElseIf DpLFilter.SelectedItem.Text = "THESES" Then             GVUILibrary.DataSource = BLL.FilterUILibrary(DpLFilter.SelectedItem.Text, txtSearch.Text.Trim())             GVUILibrary.DataBind()          ElseIf DpLFilter.SelectedItem.Text = "JOURNALS" Then             GVUILibrary.DataSource = BLL.FilterUILibrary(DpLFilter.SelectedItem.Text, txtSearch.Text.Trim())             GVUILibrary.DataBind()          ElseIf DpLFilter.SelectedItem.Text = "LAW REPORTS" Then             GVUILibrary.DataSource = BLL.FilterUILibrary(DpLFilter.SelectedItem.Text, txtSearch.Text.Trim())             GVUILibrary.DataBind()          ElseIf DpLFilter.SelectedItem.Text = "REFERENCE MATERIALS" Then             GVUILibrary.DataSource = BLL.FilterUILibrary(DpLFilter.SelectedItem.Text, txtSearch.Text.Trim())             GVUILibrary.DataBind()          Else             GVUILibrary.DataSource = BLL.spSelectAllLibraryBooks()             GVUILibrary.DataBind()             txtSearch.Enabled = False         End If     Catch ex As Exception         ScriptManager.RegisterStartupScript(Me, Me.[GetType](), "Message", "alert('Anoda Error has occurred : " &amp; ex.Message.ToString() &amp; "');", True)      End Try  End Sub  Protected Sub GVUILibrary_RowEditing(sender As Object, e As GridViewEditEventArgs) Handles GVUILibrary.RowEditing     GVUILibrary.EditIndex = e.NewEditIndex     GVUILibrary.DataBind() End Sub  Protected Sub GVUILibrary_RowUpdating(sender As Object, e As GridViewUpdateEventArgs) Handles GVUILibrary.RowUpdating   End Sub  Protected Sub GVUILibrary_Sorting(sender As Object, e As GridViewSortEventArgs) Handles GVUILibrary.Sorting  End Sub  Protected Sub GVUILibrary_SelectedIndexChanged(sender As Object, e As EventArgs) Handles GVUILibrary.SelectedIndexChanged  End Sub  Protected Sub GVUILibrary_RowDeleting(sender As Object, e As GridViewDeleteEventArgs) Handles GVUILibrary.RowDeleting  End Sub </code></pre>