<p>I am inserting some data from the statistics package Stata into a Teradata database. Unfortunately dates and timestamps get mangled since Stata stores these as integers relative to a reference point of 01jan1960 00:00:00 and both get imported as FLOAT(53). The numeric conversions with FLOATS would be something like this:</p>  <pre><code>CAST(DATE '1960-01-01' + CAST(stata_dt AS INTEGER) AS DATE) AS stata2td_date CAST(DATE '1960-01-01' + CAST(stata_ts/86400000 AS INTEGER) AS TIMESTAMP(0)) + ((CAST(stata_ts MOD 86400000 AS INTEGER)/1000) * INTERVAL '00:00:01' HOUR TO SECOND) AS stata2td_timestamp </code></pre>  <p>My usual non-TD solution was to turn the Stata dates into strings, insert them as such, and then alter the column types: </p>  <pre><code>format date %tdCCYY-NN-DD; format time_stamp %tcCCYY-NN-DD_HH:MM:SS; tostring date time_stamp, usedisplayformat replace force; odbc insert, table("my_table") dsn("my_dsn") create sqlshow block odbc exec("ALTER TABLE my_table ALTER COLUMN time_stamp TIMESTAMP;"), dsn("my_dsn") odbc exec("ALTER TABLE my_table ALTER COLUMN date DATE;"), dsn("my_dsn") </code></pre>  <p>This is not possible in Teradata as far as I can tell. </p>  <p>One workaround is to predefine the table before inserting:</p>  <pre><code>odbc exec("CREATE MULTISET TABLE my_table (date DATE,time_stamp TIMESTAMP)"), dsn("my_dsn"); odbc insert, table("my_table") dsn("my_dsn") sqlshow block </code></pre>  <p>but this can be annoying when you have lots of variables to insert.</p>  <p>Is there some way to ALTER COLUMN or to convert the floats? </p>