<p>I'm having problems trying to run a stored procedure on MSSQL2000 using PHP PDO. I've tried all the combinations, but cant get any results apart from Invalid cursor state error.</p>  <p>The procedure is inside a database that is used by another application. I'm just reaching inside it to pull information out to display on PHP. So modifying the stored procedure (even to instead that SET NOCOUNT ON) is a no-no.</p>  <p>The stored procedure takes two arguments - a start and end date. There is also a RETURN_VALUE parameter.</p>  <p>I can run the following command in the SQL Query Analyzer and dumps rows of data fine:</p>  <pre><code>EXEC [availability_enquiry] '08-24-2015 0:0:0.000', '08-26-2015 0:0:0.000' </code></pre>  <p>Seems pretty straight forward, but when I try to code it and run it, I get nothin:</p>  <pre><code>$dbConn = null; $connectionString = sprintf('%s:Driver=%s;Server=%s;Database=%s;TrustedConnection=yes;', 'odbc', '{SQL Server Native Client 10.0}', 'mypc', 'testdb'); $dbConn = new PDO($connectionString, 'root', '123qew'); $dbConn-&gt;setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);  $sql = "EXEC [availability_enquiry] '08-24-2015 0:0:0.000', '08-26-2015 0:0:0.000'"; $stmt = $dbConn-&gt;query($sql, PDO::FETCH_ASSOC); $data = $stmt-&gt;fetch(); print_r($data);  </code></pre>  <p>I get an PDO Expection: 'Invalid cursor state' on the $stmt->fetch() line.</p>  <pre><code>$stmt = $dbConn-&gt;prepare($sql); $stmt-&gt;execute(); $data = $stmt-&gt;fetch(); print_r($data);  </code></pre>  <p>Still get an PDO Expection: 'Invalid cursor state'. Must be something to do with the fetch. Try something else:</p>  <pre><code>$data = array(); do {   $results[count($results)] = $stmt-&gt;fetchAll(PDO::FETCH_ASSOC); } while($stmt-&gt;nextRowset()); </code></pre>  <p>Still nothing!? Any ideas?</p>  <hr>  <p><strong>UPDATE1:</strong></p>  <p>Tried another method:</p>  <pre><code>$sql = "{CALL availability_enquiry (:startdate, :enddate)}"; $stmt = $dbConn-&gt;prepare($sql); $startdate = "2015-08-24T00:00:00"; $enddate = "2015-08-26T00:00:00"; $stmt-&gt;execute(array(   ':startdate'=&gt;$startdate,   ':enddate'=&gt;$enddate )); $data = $stmt-&gt;fetch(); print_r($data);  </code></pre>  <p>Also tried it as: </p>  <pre><code>$startdate = "2015-08-24T00:00:00"; $stmt-&gt;bindParam(':startdate', $startdate, PDO::PARAM_STR); $enddate = "2015-08-26T00:00:00"; $stmt-&gt;bindParam(':enddate', $enddate, PDO::PARAM_STR); $stmt-&gt;execute(); </code></pre>  <p>But both give me an 'Invalid character value for cast specification' error message. Tried it with my own and the newly suggested date format. </p>  <p>If I use the same format of the date that is inside the table that the stored procedure uses:</p>  <pre><code>$startdate = "2015-08-11 09:42:18.890"; </code></pre>  <p>I get an 'Invalid cursor state' error message. I'm hoping this is one step closer?</p>