<p>My company use's ODBC for data collection and the goal is to pull multiple sources of data into one place.  Currently (as shown below) I have a connection setup in the top of my controller that connects to the company provided ODBC connection. I pass the column names to an array list which is passed to a ViewBag. I do the same for the collection Data.  This ends up giving me a "flat array" with no index key's or anything to reference. </p>  <p><strong>myList</strong></p>  <p>array = Column Name[0], Column Name[1], Column Name[2]</p>  <p><strong>Data</strong></p>  <p>array = Row[0], Row[1], Row[2], Row[0], Row[1], Row[2], Row[0], Row[1], Row[2]</p>  <p>In order to output the data in a form that actually makes sense to my end user I do some hacking within my View to output data. I take a count of the data array in the above example it's 9. I count my cells to get my header row in the above example it's 3. I create a for loop and within it I iterate through to count the difference in my headers to the row's so I can get the ending row of data and reset the tr. My ending output is below for reference. </p>  <p><strong>[My Question]</strong></p>  <p>Is there a simpler way to use the <code>.Read()</code> command? And how do I add my data to a multi-dimensional array and output the content of each row's individual value?</p>  <p><strong><em>Output Index.html</em></strong></p>  <pre><code>&lt;table class="table table-hover table-bordered"&gt; &lt;tr&gt; &lt;th&gt;Column Name[0]&lt;/th&gt; &lt;th&gt;Column Name[1]&lt;/th&gt; &lt;th&gt;Column Name[2]&lt;/th&gt; &lt;/tr&gt; &lt;tbody&gt; &lt;tr&gt;&lt;td&gt;Row[0]&lt;/td&gt;&lt;td&gt;Row[1]&lt;/td&gt;&lt;td&gt;Row[2]&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;Row[0]&lt;/td&gt;&lt;td&gt;Row[1]&lt;/td&gt;&lt;td&gt;Row[2]&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;Row[0]&lt;/td&gt;&lt;td&gt;Row[1]&lt;/td&gt;&lt;td&gt;Row[2]&lt;/td&gt;&lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; </code></pre>  <p><strong><em>Controller - Project.cs</em></strong></p>  <pre><code>using System; using System.Collections.Generic; using System.Collections; using System.Linq; using System.Web; using System.Web.Mvc; using System.Data.Odbc; using System.Data.SqlClient;  namespace Project.Controllers { public class ODBC: Controller {     OdbcConnection DBConnection = new OdbcConnection("DSN=Server;UID=USER;PWD=PASS;DATABASE=DATA-MARKET");    public ActionResult Index()     {  DBConnection.Open();         OdbcCommand DbCommand = DBConnection.CreateCommand();         DbCommand.CommandText = "SELECT \"ID\", \"Request ID\", \"Service ID\", \"Summary\" FROM    dbo.\"Records\" WHERE (\"Status Rejected User\" IS NULL)";          OdbcDataReader DbReader = DbCommand.ExecuteReader();          int fCount = DbReader.FieldCount;         ArrayList myList = new ArrayList();           for (int i = 0; i &lt; fCount; i++)         {             myList.Add(DbReader.GetName(i));         }           ViewBag.Count = myList;          ArrayList data = new ArrayList();            while (DbReader.Read())         {             for (int i = 0; i &lt; fCount; i++)             {                 data.Add(DbReader.GetValue(i));             }         }            ViewBag.fCount = fCount;         DbReader.Close();         DbCommand.Dispose();         DBConnection.Close();         ViewBag.data = data;         return View();     } </code></pre>  <p><strong><em>View - Index.CSHTML</em></strong></p>  <pre><code>@model IEnumerable&lt;Project.Controllers.ODBCController&gt;  @{ ViewBag.Title = "Index"; var cell_count = @ViewBag.Count.Count; }  &lt;h2&gt;Index -&lt;/h2&gt; &lt;table class="table table-hover table-bordered"&gt; &lt;tr&gt;   @foreach( var ls in @ViewBag.Count){   &lt;th&gt;@ls&lt;/th&gt;  } &lt;/tr&gt; &lt;tbody&gt;         @for (int i = 0; i &lt; ViewBag.data.Count; i++) {     var cells = cell_count;     var item = ViewBag.data[i];      if ((i % cells) == 0)     {         @:&lt;tr&gt;     }      &lt;td&gt;         @item     &lt;/td&gt;      if (i == (ViewBag.data.Count - 1))     {         while ((i % cells) != 0)         {             @:&lt;td&gt;&lt;/td&gt;             i++;         }     }      if ((i % cells) == (cells - 1)) // aka: last row cell     {         @:&lt;/tr&gt;     } }      &lt;/tbody&gt;  &lt;/table&gt; </code></pre>