<p>I would like to use ODBC in c++. This line of code returns -2 <code>(rc=-2)</code>. I think it is an error code, but I dont know which error?</p>  <pre><code>rc=SQLBindParameter(hstmt,1,SQL_PARAM_INPUT,SQL_C_DEFAULT, SQL_SS_TABLE,10,0,TVPTableName,SQL_NTS,&amp;cbTVPTableNAme); </code></pre>  <p>I have written this block of code to extract the state, but it returns nothing:</p>  <pre><code>void extract_error(       char *fn,       SQLHANDLE handle,       SQLSMALLINT type)   {     SQLINTEGER i = 0;     SQLINTEGER native;     SQLWCHAR state[ 7 ];     SQLWCHAR text[256];     SQLSMALLINT len;     SQLRETURN ret;     fprintf(stderr,             "\n"             "The driver reported the following diagnostics whilst running "             "%s\n\n",             fn);      do     {       ret = SQLGetDiagRec(type, handle, ++i, state, &amp;native, text,       sizeof(text), &amp;len );       if (SQL_SUCCEEDED(ret))       printf("%s:%ld:%ld:%s\n", state, i, native, text);     }     while( ret == SQL_SUCCESS );   } </code></pre>  <p>Does some one know, what this code mean?</p>  <p>Here is my complete code:</p>  <pre><code>#include &lt;windows.h&gt;  #include &lt;stdlib.h&gt;  #include &lt;stdio.h&gt;   #include &lt;sql.h&gt;  #include &lt;sqlext.h&gt;  #include&lt;sqltypes.h&gt;     #include&lt;exception&gt; #include&lt;iostream&gt; #include&lt;stdio.h&gt;   #include "Debug\sqlncli.h"; int main() {     SQLHENV henv=SQL_NULL_HENV;     SQLHDBC hdbc=SQL_NULL_HDBC;     SQLHSTMT hstmt=SQL_NULL_HSTMT;     RETCODE rc;     SQLWCHAR dsn[30] = L"mssqltest"; //Name DNS    SQLWCHAR user[10] = L"di_test";    SQLWCHAR pass[10] = L"di_test";     SQLCHAR retValFName[256];    SQLCHAR retValLName[256];    SQLINTEGER cbLName,cbFName;    SQLLEN cName=0;     SQLCHAR *TVPTableName=(SQLCHAR *) "Person";      SQLINTEGER Arraycode[10]={214,524,635,879,124,951,357,845,236,438};    SQLCHAR Arrayname[10]={ 'P',  'C', 'A', 'G', 'd', 'S', 'R', 'U', 'Q'};      SQLLEN cbTVPTableNAme,cbArraycode[10],cbArrayname[10];     //This line is very important for working with TVP      // 10 is the number of values, which should be added to TVP     rc=SQLBindParameter(hstmt,1,SQL_PARAM_INPUT,SQL_C_DEFAULT, SQL_SS_TABLE,10,0,TVPTableName,SQL_NTS,&amp;cbTVPTableNAme);     extract_error(" ",hstmt,SQL_HANDLE_STMT); } </code></pre>