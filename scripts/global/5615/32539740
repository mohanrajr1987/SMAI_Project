<p>I want to try to use the Jetty client to built my dependency tree for my requests. Here is my code</p>  <pre><code>    public class Client {  static String host = "127.0.0.1";  static int port = 8081;  static ArrayList&lt;String&gt; childpath = new ArrayList&lt;String&gt;();  static ArrayList&lt;HeadersFrame&gt; myHeadersFrames = new ArrayList&lt;HeadersFrame&gt;(); public static void main(String[] args) throws Exception  {     HTTP2Client client = new HTTP2Client();     SslContextFactory sslContextFactory = new SslContextFactory(true);     System.out.println(sslContextFactory.getSecureRandomAlgorithm());     System.out.println(sslContextFactory.getSslKeyManagerFactoryAlgorithm());     //sslContextFactory.setSecureRandomAlgorithm("RSA");     //sslContextFactory.setKeyManagerPassword("changeit");     client.addBean(sslContextFactory);     client.start();        FuturePromise&lt;Session&gt; sessionPromise = new FuturePromise&lt;&gt;();     client.connect(sslContextFactory, new InetSocketAddress(host, port), new ServerSessionListener.Adapter(), sessionPromise);     Session session = sessionPromise.get(5, TimeUnit.SECONDS);      HttpFields requestFields = new HttpFields();     requestFields.put("User-Agent", client.getClass().getName() + "/" + Jetty.VERSION);      ArrayList&lt;Thread&gt; myThreads = new ArrayList&lt;Thread&gt;();       childpath.add("js/preloadjs.min.js");     childpath.add("js/preload-images.js");            childpath.add("js/director.js");     childpath.add("css/foundation.css");     childpath.add("css/infocard.css");     childpath.add("css/wine.css");          childpath.add("img/res/main-text.png");     childpath.add("index.html");      for(int id =0;id&lt;childpath.size();id++)     {         MetaData.Request metaData = new MetaData.Request("GET", new HttpURI("https://"+host+":"+port+"/"+childpath.get(id)), HttpVersion.HTTP_2, requestFields);     if(id == 7)     {         HeadersFrame headersFrame = new HeadersFrame(id+1, metaData, new PriorityFrame(0, 0, 256, false), true);          myHeadersFrames.add(headersFrame);     }     else {         HeadersFrame headersFrame = new HeadersFrame(id+1, metaData, new PriorityFrame(0, 8, 1, false), true);         //myPriorityFrames.add(priorityFrame);         myHeadersFrames.add(headersFrame);     }  }      final int count = childpath.size();       final Phaser phaser = new Phaser(childpath.size());       for(int i = 0; i &lt; count; i++) {           System.out.println("starting thread, id: " + i);           final Thread thread = new Thread(new Task(i, phaser,session,requestFields,childpath.get(i)));           thread.start();       }        //client.stop();  }   public static class Task implements Runnable {       //       private final int id;       private final Phaser phaser;       private final Session session;     private final HttpFields requestFields;     private final String childpathvalue;      public Task(int id, Phaser phaser,Session session,HttpFields requestFields,String childpathvalue) {           this.id = id;           this.phaser = phaser;           this.session = session;         this.requestFields = requestFields;         this.childpathvalue = childpathvalue;     }        @Override       public void run() {           phaser.arriveAndAwaitAdvance();           System.out.println("in Task.run(), phase: " + phaser.getPhase() + ", id: " + this.id);           PriorityFrame tempPriorityFrame = null;           System.out.println(myHeadersFrames.get(id).getPriority()+"streamID:"+myHeadersFrames.get(id).getStreamId());      session.newStream(myHeadersFrames.get(id), new Promise.Adapter&lt;Stream&gt;(), new Stream.Listener.Adapter()     {         @Override         public void onHeaders(Stream stream, HeadersFrame frame)         {             System.out.println(frame.getPriority());             System.out.println(frame.getStreamId());             System.err.println(frame+"https://"+host+":"+port+"/"+childpath.get(id));             //System.out.println();             if (frame.isEndStream())             {                 //System.out.println(phaser.);                 phaser.arrive();             }         }          @Override         public void onData(Stream stream, DataFrame frame, Callback callback)         {             System.err.println(frame+"https://"+host+":"+port+"/"+childpath.get(id));             callback.succeeded();             if (frame.isEndStream())                 phaser.arrive();         }          @Override         public Stream.Listener onPush(Stream stream, PushPromiseFrame frame)         {             System.err.println(frame+"https://"+host+":"+port+"/"+childpath.get(id));             phaser.register();             return this;         }     });      //phaser.awaitAdvance(phaser.arrive());   try {     phaser.awaitAdvanceInterruptibly(phaser.arrive(), 5, TimeUnit.SECONDS); } catch (InterruptedException e) {     // TODO Auto-generated catch block     e.printStackTrace(); } catch (TimeoutException e) {     // TODO Auto-generated catch block     e.printStackTrace(); }        }   }   </code></pre>  <p>}</p>  <p>And the results shows the first complete response is in random. But there are always a request being completed before other requests being sent. Just like this:</p>  <pre><code>HeadersFrame@101cce88#1{end=false}https://127.0.0.1:8081/css/infocard.css DataFrame@2580c31#1{length:1297,end=false}https://127.0.0.1:8081/css/infocard.css DataFrame@5599d511#1{length:1400,end=false}https://127.0.0.1:8081/css/infocard.css DataFrame@6311c8e1#1{length:103,end=true}https://127.0.0.1:8081/css/infocard.css HeadersFrame@548b7149#3{end=false}https://127.0.0.1:8081/js/preloadjs.min.js HeadersFrame@1670c66d#5{end=false}https://127.0.0.1:8081/js/director.js HeadersFrame@d5ab8ef#7{end=false}https://127.0.0.1:8081/img/res/main-text.png HeadersFrame@60613f65#9{end=false}https://127.0.0.1:8081/css/foundation.css HeadersFrame@6f6f1b19#11{end=false}https://127.0.0.1:8081/js/preload-images.js HeadersFrame@7f3ceb37#13{end=false}https://127.0.0.1:8081/css/wine.css HeadersFrame@27f9a9ff#15{end=false}https://127.0.0.1:8081/index.html DataFrame@4e8a3072#3{length:960,end=false}https://127.0.0.1:8081/js/preloadjs.min.js DataFrame@59aa5d69#3{length:1400,end=false}https://127.0.0.1:8081/js/preloadjs.min.js DataFrame@41d77038#3{length:1400,end=false}https://127.0.0.1:8081/js/preloadjs.min.js DataFrame@2b0b8fac#3{length:1400,end=false}https://127.0.0.1:8081/js/preloadjs.min.js DataFrame@341d331f#3{length:1400,end=false}https://127.0.0.1:8081/js/preloadjs.min.js DataFrame@3fd771e0#3{length:1400,end=false}https://127.0.0.1:8081/js/preloadjs.min.js  DataFrame@45fb9092#3{length:1400,end=false}https://127.0.0.1:8081/js/preloadjs.min.js ................ </code></pre>  <p>I just don't know why the result is like this. Can anyone helps me. Many Thanks.</p>