<p>I'm using cargo-maven2 plugin 1.4.8 to deploy my war files. One of my war file requires a h2db connection. It looks up to a JNDI datasource configuration say jdbc/connection. So what I'm doing is creating a dummy app with jetty-env.xml configuration having all the required datasource configuration &amp; then attempting to create the connection.</p>  <p><strong>pom.xml</strong></p>  <pre><code>&lt;project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"&gt;  &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;  &lt;groupId&gt;com.myapp.ecom&lt;/groupId&gt; &lt;artifactId&gt;integration-test-app&lt;/artifactId&gt; &lt;packaging&gt;war&lt;/packaging&gt; &lt;version&gt;1.0&lt;/version&gt; &lt;name&gt;integration-test&lt;/name&gt; &lt;dependencies&gt;             ...     ...     &lt;dependency&gt;         &lt;groupId&gt;javax.transaction&lt;/groupId&gt;         &lt;artifactId&gt;jta&lt;/artifactId&gt;         &lt;version&gt;1.1&lt;/version&gt;     &lt;/dependency&gt;             &lt;dependency&gt;         &lt;groupId&gt;com.h2database&lt;/groupId&gt;         &lt;artifactId&gt;h2&lt;/artifactId&gt;         &lt;version&gt;1.4.188&lt;/version&gt;     &lt;/dependency&gt;     &lt;dependency&gt;         &lt;groupId&gt;com.atomikos&lt;/groupId&gt;         &lt;artifactId&gt;transactions-hibernate3&lt;/artifactId&gt;         &lt;version&gt;3.8.0&lt;/version&gt;         &lt;exclusions&gt;             &lt;exclusion&gt;                 &lt;groupId&gt;org.hibernate&lt;/groupId&gt;                 &lt;artifactId&gt;hibernate&lt;/artifactId&gt;             &lt;/exclusion&gt;         &lt;/exclusions&gt;     &lt;/dependency&gt;              &lt;/dependencies&gt; &lt;build&gt;     &lt;plugins&gt;         &lt;plugin&gt;             &lt;groupId&gt;org.codehaus.cargo&lt;/groupId&gt;             &lt;artifactId&gt;cargo-maven2-plugin&lt;/artifactId&gt;             &lt;version&gt;1.4.16&lt;/version&gt;             &lt;executions&gt;                 &lt;execution&gt;                     &lt;id&gt;start-server&lt;/id&gt;                     &lt;phase&gt;pre-integration-test&lt;/phase&gt;                     &lt;goals&gt;                         &lt;goal&gt;start&lt;/goal&gt;                     &lt;/goals&gt;                 &lt;/execution&gt;                 &lt;execution&gt;                     &lt;id&gt;stop-server&lt;/id&gt;                     &lt;phase&gt;post-integration-test&lt;/phase&gt;                     &lt;goals&gt;                         &lt;goal&gt;stop&lt;/goal&gt;                     &lt;/goals&gt;                 &lt;/execution&gt;             &lt;/executions&gt;             &lt;configuration&gt;                 &lt;container&gt;                     &lt;containerId&gt;jetty7x&lt;/containerId&gt;                     &lt;zipUrlInstaller&gt;                       &lt;url&gt;http://download.eclipse.org/jetty/7.6.17.v20150415/dist/jetty-distribution-7.6.17.v20150415.zip&lt;/url&gt;                     &lt;/zipUrlInstaller&gt;                               &lt;/container&gt;                 &lt;configuration&gt;                     &lt;home&gt;${project.build.directory}/jetty-home&lt;/home&gt;                     &lt;properties&gt;                         &lt;cargo.jetty.createContextXml&gt;false&lt;/cargo.jetty.createContextXml&gt;                     &lt;/properties&gt;                     &lt;configfiles&gt;                         &lt;configfile&gt;                             &lt;file&gt;${project.basedir}/src/main/resources/db.properties&lt;/file&gt;                             &lt;todir&gt;webapps/integration-test/WEB-INF&lt;/todir&gt;                         &lt;/configfile&gt;                         &lt;configfile&gt;                         &lt;file&gt;${project.basedir}/src/main/resources/jetty-env.xml&lt;/file&gt;                             &lt;todir&gt;webapps/integration-test/WEB-INF&lt;/todir&gt;                         &lt;/configfile&gt;                     &lt;/configfiles&gt;                 &lt;/configuration&gt;                                                &lt;deployables&gt;                     &lt;deployable&gt;                         &lt;groupId&gt;com.myapp.ecom&lt;/groupId&gt;                         &lt;artifactId&gt;integration-test&lt;/artifactId&gt;                         &lt;type&gt;war&lt;/type&gt;                         &lt;properties&gt;                               &lt;context&gt;/dummy-integration-test-app&lt;/context&gt;                         &lt;/properties&gt;                      &lt;/deployable&gt;                                         &lt;deployable&gt;                         &lt;groupId&gt;com.myapp.ecom&lt;/groupId&gt;                         &lt;artifactId&gt;service-app&lt;/artifactId&gt;                         &lt;type&gt;war&lt;/type&gt;                         &lt;properties&gt;                               &lt;context&gt;/service-app&lt;/context&gt;                         &lt;/properties&gt;                                                    &lt;/deployable&gt;                  ...                  &lt;/deployables&gt;             &lt;/configuration&gt;                         &lt;/plugin&gt;     &lt;/plugins&gt; &lt;/build&gt; </code></pre>  <p><strong>jetty-env.xml</strong>    </p>  <pre><code>&lt;?xml version="1.0"?&gt; </code></pre>  <p></p>  <pre><code>&lt;New id="commonXaProperties" class="java.util.Properties"&gt;     &lt;Call name="setProperty"&gt;&lt;Arg&gt;user&lt;/Arg&gt;&lt;Arg&gt;&lt;SystemProperty name="db.username" /&gt;&lt;/Arg&gt;&lt;/Call&gt;     &lt;Call name="setProperty"&gt;&lt;Arg&gt;password&lt;/Arg&gt;&lt;Arg&gt;&lt;SystemProperty name="db.password" /&gt;&lt;/Arg&gt;&lt;/Call&gt;     &lt;Call name="setProperty"&gt;&lt;Arg&gt;URL&lt;/Arg&gt;&lt;Arg&gt;&lt;SystemProperty name="db.url" /&gt;&lt;/Arg&gt;&lt;/Call&gt; &lt;/New&gt;  &lt;New id="common" class="org.eclipse.jetty.plus.jndi.Resource"&gt;     &lt;Arg&gt;jdbc/common&lt;/Arg&gt;     &lt;Arg&gt;         &lt;New class="com.atomikos.jdbc.AtomikosDataSourceBean"&gt;             &lt;Set name="minPoolSize"&gt;2&lt;/Set&gt;             &lt;Set name="maxPoolSize"&gt;10&lt;/Set&gt;             &lt;Set name="xaDataSourceClassName"&gt;&lt;SystemProperty name="db.driver" /&gt;&lt;/Set&gt;             &lt;Set name="xaProperties"&gt;&lt;Ref id="commonXaProperties" /&gt;&lt;/Set&gt;             &lt;Set name="UniqueResourceName"&gt;Common&lt;/Set&gt;             &lt;Set name="MaxPoolSize"&gt;5&lt;/Set&gt;             &lt;Set name="testQuery"&gt;select 1 from dual&lt;/Set&gt;         &lt;/New&gt;     &lt;/Arg&gt; &lt;/New&gt;  &lt;!-- java:comp/UserTransaction --&gt; &lt;New id="tx" class="org.eclipse.jetty.plus.jndi.Transaction"&gt;     &lt;Arg&gt;         &lt;New class="com.atomikos.icatch.jta.UserTransactionManager"&gt;             &lt;Set name="transactionTimeout"&gt;120&lt;/Set&gt;         &lt;/New&gt;     &lt;/Arg&gt;     &lt;Call class="org.eclipse.jetty.plus.jndi.Transaction" name="bindToENC" /&gt; &lt;/New&gt; </code></pre>  <p></p>  <p><strong>db.properties</strong></p>  <pre><code>db.url=jdbc:h2:tcp://localhost/data/common  db.user=sa  db.password=  db.driver=org.h2.jdbcx.JdbcDataSource </code></pre>  <p>When I attempt to start with maven cargo:run I get the below exception</p>  <pre><code>08:29:23,505 |-INFO in ch.qos.logback.classic.joran.JoranConfigurator@65c90a26 - Registering current configuration as safe fallback point 2015-09-16 08:29:23.506:INFO:/integration-test:Initializing Spring root WebApplicationContext 2015-09-16 08:29:24.380:WARN:oejw.WebAppContext:Failed startup of context o.e.j.w.WebAppContext{/dummy-integration-test-app,file:/C:/integration-testing/trunk/target/integration-test-1.0/},C:\integration testing\trunk\target\integration-test-1.0.war org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transactionManager': Invocation of init method failed; nested excep tion is java.lang.IllegalStateException: **No JTA UserTransaction available - specify either 'userTransaction' or 'userTransactionName' or 'transactionManage r' or 'transactionManagerName'**         at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1553)         at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539)         at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:475)         at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:304)         at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:228)         at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:300)         at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:195)         at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:703)         at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:760)         at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:482)         at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:403)         at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306)         at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:106)         at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:746)         at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:238)         at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1240)         at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:689)         at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:482)         at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)         at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)         at org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:172)         at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)         at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)         at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)         at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:95)         at org.eclipse.jetty.server.Server.doStart(Server.java:281)         at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)         at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)         at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)         at java.lang.reflect.Method.invoke(Method.java:606)         at org.codehaus.cargo.container.jetty.internal.JettyExecutorThread.run(JettyExecutorThread.java:68) Caused by: java.lang.IllegalStateException: No JTA UserTransaction available - specify either 'userTransaction' or 'userTransactionName' or 'transactionManager' or 't ransactionManagerName'         at org.springframework.transaction.jta.JtaTransactionManager.checkUserTransactionAndTransactionManager(JtaTransactionManager.java:494)         at org.springframework.transaction.jta.JtaTransactionManager.afterPropertiesSet(JtaTransactionManager.java:436)         at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1612)         at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1549)         at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539)         at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:475)         at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:304)         at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:228)         at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:300)         at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:195)         at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:703)         at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:760)         at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:482)         at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:403)         at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306)         at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:106)         at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:746)         at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:238)         at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1240)         at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:689)         at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:482)         at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)         at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)         at org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:172)         at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)         at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)         at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)         at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:95)         at org.eclipse.jetty.server.Server.doStart(Server.java:281)         at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)         at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)         at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)         at java.lang.reflect.Method.invoke(Method.java:606)         at org.codehaus.cargo.container.jetty.internal.JettyExecutorThread.run(JettyExecutorThread.java:68) </code></pre>  <p>Am not able to figure out what I'm missing here. Any help would be much appreciated !</p>  <p>Thanks.</p>