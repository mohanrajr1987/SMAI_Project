<p>I've got this program and I'm trying to pass parameters with generics, but I'm getting the following error for every TA and TB after public static List:</p>  <p>"The type or namespace name 'TA' or 'TB' could not be found. Are you missing an assembly reference?"</p>  <p>I was using this tutorial on delegates and trying to make it work myself: <a href="http://www.velir.com/blog/index.php/2011/07/14/how-to-improve-code-reusability-using-c-delegates/" rel="nofollow">http://www.velir.com/blog/index.php/2011/07/14/how-to-improve-code-reusability-using-c-delegates/</a></p>  <p>The layout honestly looks fine to me, though judging by the errors it seems to be an issue of scope? Feedback would be much appreciated.</p>  <pre><code>  using System;   using System.Collections.Generic;    public class ListProcessor {     public delegate bool Acceptor&lt;in TA&gt;(TA obj);    public delegate TB Processor&lt;in TA, out TB&gt;(TA obj);     public static List&lt;TB&gt; ProcessList(     List&lt;TA&gt; objects,     Acceptor&lt;TA&gt; acceptor,     Processor&lt;TA, TB&gt; processor)  {      List&lt;TB&gt; newList = new List&lt;TB&gt;();     foreach (TA obj in objects)     {         if(!acceptor(obj))             {                 continue;             }         newList.Add(processor(obj));     }      return newList;      }  public static void Main() {     List&lt;string&gt; myList = new List&lt;string&gt;();       myList.Add("Carrot");     myList.Add("Fox");     myList.Add("albuquerque");      List&lt;string&gt; resultStrings = ListProcessor.ProcessList(         myList,         str =&gt; !str.Contains("c"),         str =&gt; str.Replace("a", "b"));         }    } </code></pre>