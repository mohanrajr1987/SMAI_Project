<p>I have a C# class <code>TreeViewHandler</code> which should execute all methods on a <code>TreeView</code> like adding, erasing nodes. This class takes in a constructor actual treeView</p>  <pre><code>private TreeView treeView; public TreeViewerHandler(TreeView treeView) {     this.treeView = treeView; }  public void AddStepAction(String step ) {     treeView.Nodes.Add(step.ToString()); } </code></pre>  <p><code>TreeViewHandler</code> object is then passed to another class, which simply calls</p>  <pre><code>treeViewHandler.AddStepAction("somestring"); </code></pre>  <p>Now this fails with exception:</p>  <blockquote>   <p>Additional information: Action being performed on this control is being called from the wrong thread. Marshal to the correct thread using Control.Invoke or Control.BeginInvoke to perform this action.</p> </blockquote>  <p>I found this <a href="http://www.codeproject.com/Articles/27719/Populating-TreeView-on-a-Background-Thread" rel="nofollow">http://www.codeproject.com/Articles/27719/Populating-TreeView-on-a-Background-Thread</a>, but since my structure is different I am struggling with where to add that <code>backroundWorker</code> and <code>invokeMethod</code> and where should I create delegate? No exact code necessary. </p>