<p>I need to access a view controller which is inside a NavigationController, which is inside a TabBarController, which is inside the Master section of a UISplitViewController.</p>  <p>I have a delegate method inside the UISplitViewController's detail section (Conferencing).  And Inside the SplitViewController's master section is a TabBarController with 2 view controllers(Accounts, Features).  One of the view controllers inside the tab bar implement the delegate from the detailed view controller(Conferencing).  </p>  <p>When I click on a button in my ConferencingVC, I call the delegate method.  The AccountsVC implements the delegate and then respond, but I don't think I have the pointer set to the view AccountsVC correctly</p>  <p><a href="http://i.stack.imgur.com/QgcWU.png" rel="nofollow"><img src="http://i.stack.imgur.com/QgcWU.png" alt="enter image description here"></a> ConferencingVC</p>  <pre><code>@protocol ConferencingVCDelegate &lt;NSObject&gt; @optional - (void)accountChanged; @end  @property (weak, nonatomic) id &lt;ConferencingVCDelegate&gt; delegate; </code></pre>  <p>and i call the delegate </p>  <pre><code>[self.delegate accountChanged]; </code></pre>  <p>AccountVC</p>  <p>Then I implement the delegate in AccountsVC. I try to get a pointer to the ConferencingVC SplitViewController's detail section by</p>  <pre><code>UIStoryboard *storyboard = [UIStoryboard storyboardWithName:@"Main" bundle:nil]; UISplitViewController *splitViewController = [storyboard instantiateViewControllerWithIdentifier:@"SPLIT_VC"]; ((ConferencingVC *)[[splitViewController viewControllers] objectAtIndex:1]).delegate = self; </code></pre>  <p>and </p>  <pre><code>- (void)accountChanged {     [self.tableView reloadData];      NSLog(@"conferenceVC delegate called"); } </code></pre>