<p>My solution consist of the following projects:</p>  <ul> <li>MainApp: main form that opens the rest of forms</li> <li>DeviceAcquisition1: controls acquisition of device1 and raises an event when data is read.</li> <li>DeviceAcquisition2: controls acquisition of device2 and raises an event when data is read</li> <li>Signal Monitoring: plots the data received from device1 or device2 (only one is connected and collecting data)</li> <li>Data Analysis: plots data collected</li> </ul>  <p>I want to subscript to the event from SignalMonitoring but I have the problem of circular references. This is what I am trying to do:</p>  <p>MainForm.cs</p>  <pre><code>private void btnCollectData_Click(object sender, EventArgs e) {     Device1BoardForm = new gUSBampBoard();     Device1BoardForm.ShowDialog();  } </code></pre>  <p>DeviceAcquisition1 and DeviceAcquisition2</p>  <pre><code> private void btnSignalMonitoring_Click(object sender, EventArgs e)     {         //Show new form        var signalMonitoringForm = new SignalMonitor();         signalMonitoringForm.Parent = this;         // Subscribe to event         DeviceAcq1.DataRead += signalMonitoringForm.OnDataRead;//CANNOT DO THAT!          signalMonitoringForm.ShowDialog();     } </code></pre>  <p>SignalMonitoring</p>  <pre><code>        public void OnDataRead(object source, RawdataEventArgs e)     {         if (e.rawData.Length &gt; 0)         {             AddData(e.rawData);         }     } </code></pre>  <p>However I cannot subscribe because DeviceAcqusition1 has the SignalMonitoring as reference and I cannot add DeviceAcquisition1 inside SignalMonitoring because then I have circular references. I need to load the form and subscribe to the delegate. How can I do it?</p>