<p>im currently struggeling using the fastdelegate lib. Im having a dll project which gives a client the opportunity to use different delgate approaches. Here is my testcode: (Note: if you need more info just tell me :) </p>  <pre><code>// basedelegates.h  #include "DelegateInterface.h" #include "fastdelegate.h"  class MFastDelegate : public AbstractDelegate     {     private:                     typedef std::shared_ptr&lt;IEvent&gt; IEventSharedPtr;         typedef fastdelegate::FastDelegate1&lt;IEventSharedPtr&gt; EventDelegate;          // stores a member function         EventDelegate boundFunc;      public:         // binds a member function using fastdelegate.h         void BindFunction(IEventListener* object, void (IEventListener::*func)(IEventSharedPtr));          // test         void BindOwnFunc();         // test          void DelegateTestFunc(IEventSharedPtr Data);      } </code></pre>  <p>I export a IDelegate class as a dll, and a factory can create different types of dll approaches, one is the MFastDelegate which a client wont see. So a client (which implements IEventListener) would call the Interface objectÂ´s BindFunc(...) and give his signature as params.</p>  <p>here is the cpp impl of bindfunc:</p>  <pre><code>void MFastDelegate::BindFunction(IEventListener* object, void(IEventListener::*func)(IEventSharedPtr))     {         boundFunc = fastdelegate::MakeDelegate(object, func);         return;     } </code></pre>  <p>compiling this gives:</p>  <pre><code>Error   1   error C2039: 'funcaddress' : is not a member of 'fastdelegate::detail::SimplifyMemFunc&lt;16&gt;::Convert::&lt;unnamed-type-u&gt;::&lt;unnamed-type-s&gt;'    d:\apps\somePath\fastdelegate\fastdelegate.h    489 1   ProjectName </code></pre>  <p>it seems that i have a problem with the clients signature, because when i test fastdelegates like this:</p>  <pre><code>void MFastDelegate::BindOwnFunc()     {         Delegate = fastdelegate::MakeDelegate(this, &amp;MFastDelegate::DelegateTestFunc);     }      void MFastDelegate::DelegateTestFunc(IEventSharedPtr Data)     {         //test     } </code></pre>  <p>this compiles fine.</p>  <p>Does someone has an idea what i do wrong?</p>  <p>best regards </p>  <p>Wallhalla</p>