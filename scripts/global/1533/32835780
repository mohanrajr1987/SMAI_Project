<p>I just wanted to clear up some confusion that I have with the delegate pattern that should be constructed when there are multiple UIViews and Subviews of these views. To make it clear, let's define some variables.</p>  <p>Let us define these objects as:</p>  <blockquote>   <ul>   <li>ViewController <code>A</code> </li>   <li>UIView <code>B</code></li>   <li>Subview <code>C</code></li>   </ul> </blockquote>  <p>Now, I understand how the delegation pattern works (I think), although I am unsure how to implement this pattern in nested UIViews. Some questions I have are: </p>  <p>Should <code>C</code> contain a delegate implemented by it's super view (<code>B</code>)? </p>  <p>And if yes, should <code>B</code> then pass this information to it's delegate ViewController (<code>A</code>)?</p>  <p>Here's a scenario, let's say <code>C</code> has a UITextView, this text view's height is determined by a string fetched from an API service. <code>B</code> does not have access to the API since this job should be done via the ViewController (<code>A</code>).</p>  <p>Should <code>C</code> then contain a delegate which points to:</p>  <blockquote>   <ol>   <li>The ViewController's (<code>A</code>) delegate implementation?</li>   <li>The UIView's (<code>B</code>) delegate implementation?</li>   <li>Other?</li>   </ol> </blockquote>  <p>If the answer is ( 2 ) then should <code>B</code> then call the ViewController (<code>A</code>) and pass this information via a chain of events?</p>  <p>Here's a small visual:</p>  <p><code>A &lt;IBDelegate&gt;</code> &lt;--- <code>B &lt;ICDelegate&gt;</code> &lt;--- <code>C</code> calls <code>Delegate.OnApiComplete(float height);</code></p>  <p>What is the "Delegate" in this case? (<code>ICDelegate</code> or <code>IBDelegate</code>). And what are the chain of events?</p>  <p>I am just trying to avoid any unnecessary logic to seep into the UIView's when the responsibility should be on the controller. </p>  <p>I understand that you can solve most of these scenario's with a shared object between UIViews, but when it comes to network services, these values need to be retrieved via some sort of callback.</p>  <p>I further clarification is needed, let me know. Any help is greatly appreciated.</p>