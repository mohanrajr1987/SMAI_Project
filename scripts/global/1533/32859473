<p>I'm trying to display download progress using HttpClient. For that I use <code>System.Progress&lt;T&gt;</code>. Code looks like this:</p>  <pre><code>long totalRead = 0L; var buffer = new byte[1024]; bool isMoreToRead = true; ulong total = (ulong)response.Content.Headers.ContentLength;  while (isMoreToRead) {     int read = await stream.ReadAsync(buffer, 0, buffer.Length);     if (read == 0)         isMoreToRead = false;     else     {         var data = new byte[read];         buffer.ToList().CopyTo(0, data, 0, read);         totalRead += read;         progress.Report((int) (totalRead*1d / total * 1d * 100) );     } } </code></pre>  <p>Assume subscribing looks like this:</p>  <pre><code>var progress = new Progress&lt;int&gt;(); progress.ProgressChanged += (sender, i) =&gt; Console.WriteLine(i); client.Download(file, progress).Wait(); </code></pre>  <p>But as a result, progress order is inconsistent, like this: 10, 20, 30, 70, 15, 90, 100, 80.</p>  <p>Is this a default delegate's behaviour, or there's another reason?</p>