<p>I have to work on a small react + typescript (1.6) application that edits slideshows.</p>  <p>So the app is simple. On the left i have a sidebar that renders all the existing slides and on click, it loads a canvas on the right where the user can edit the content.</p>  <p>Also, the user can mark the slide as "hidden" or remove it.</p>  <p>The code looks like this:</p>  <pre><code>renderSlide(item: SlideBaseModel.Slide, index: number): JSX.Element {     let cx = React.addons.classSet;     let _classes = cx({         "fa": true,         "fa-eye": !item.visible,         "fa-eye-slash": item.visible     });      return (         &lt;li className="slide-item"  draggable={true} onClick={this.onSlideClick.bind(this)} key={item.id}&gt;             &lt;div className="index"&gt;{index + 1}&lt;/div&gt;             &lt;div className="control remove" onClick={this.onRemoveSlideClick.bind(this)}&gt;                 &lt;i className="fa fa-times"&gt;&lt;/i&gt;             &lt;/div&gt;             &lt;div className="control toggle-visibility" onClick={this.onToggleSlideVisibility.bind(this)}&gt;                 &lt;i className={_classes}&gt;&lt;/i&gt;                 &lt;/div&gt;             &lt;SlideComponent                 type={item.type}                 title={item.title}                 visible={item.visible}                 content={item.content}                 path={item.path}/&gt;         &lt;/li&gt;); }  render() {     let _slides = this.state.slides.map(this.renderSlide, this);     let cx = React.addons.classSet;     let classes = cx({         "sidebar": true,         "sidebar-visible": this.props.visible     });      return (&lt;ul className={classes}&gt;             {_slides}             &lt;li className="slide-item slide-add" onClick={this.onAddSlideClick.bind(this) }&gt;&lt;/li&gt;         &lt;/ul&gt;); } </code></pre>  <p>Now, whenever I click on any of the methods bound onClick in the "renderSlide" method, the event isn't triggered.</p>  <p>I have tried with things like:</p>  <pre><code>onClick={(e) =&gt; {console.log(e)}} </code></pre>  <p>and the issue still occurs.</p>  <p>Instead of map i tried to create an array and fill it inside a forEach, but it's not working. If i call <code>this.renderSlide(this.state.slides[0])</code> inside the render method, the events work so it must be something related to the array.</p>  <p><strong>Additional pieces of code</strong></p>  <p><em>Slide props</em></p>  <pre><code>interface SlideProps {     type: Enums.SlideType;     title: string;     content?: string;     path?: string;     visible: boolean; } </code></pre>  <p><em>Generated JS code</em></p>  <pre><code>Sidebar.prototype.renderSlide = function (item, index) {     var itemData;     var cx = React.addons.classSet;     var _classes = cx({         "fa": true,         "fa-eye": !item.visible,         "fa-eye-slash": item.visible     });     return (React.createElement("li", {"className": "slide-item", "draggable": true, "onClick": this.onSlideClick.bind(this), "key": item.id}, React.createElement("div", {"className": "index"}, index + 1), React.createElement("div", {"className": "control remove", "onClick": this.onRemoveSlideClick.bind(this)}, React.createElement("i", {"className": "fa fa-times"})), React.createElement("div", {"className": "control toggle-visibility", "onClick": this.onToggleSlideVisibility.bind(this)}, React.createElement("i", {"className": _classes})), React.createElement(SlideComponent, {"type": itemData.type, "title": itemData.title, "visible": itemData.visible, "content": itemData.content, "path": itemData.path}))); }; Sidebar.prototype.render = function () {     var _slides = this.state.slides.map(this.renderSlide, this);     var cx = React.addons.classSet;     var classes = cx({         "sidebar": true,         "sidebar-visible": this.props.visible     });     return (React.createElement("ul", {"className": classes}, _slides, React.createElement("li", {"className": "slide-item slide-add", "onClick": this.onAddSlideClick.bind(this)}))); }; </code></pre>  <p>Thank you in advance for your help :)</p>  <hr>  <p><strong>UPDATE 1</strong></p>  <p>I tried to see if the EventPluginHub.putListener is called (and with what argument) for these elements, but it's not. I tried what Basarat suggested and the issue still occurs.</p>  <p>I fail to see the problem here. :(</p>