<p>What is the correct way to use <strong>Q</strong> promises with <strong>TypeScript 1.6</strong> if they are void?  That is, they don't represent a value.  For example:</p>  <pre><code>return Q.Promise&lt;void&gt;((resolve,reject) =&gt; {     resolve(); } </code></pre>  <p>or</p>  <pre><code>let deferred = Q.defer&lt;void&gt;(); deferred.resolve(); return deferred.promise; </code></pre>  <p>The call to <code>resolve()</code> gets the error:</p>  <pre><code>Supplied parameters do not match any signature of call target (parameter) resolve: (val: void | Q.IPromise&lt;void&gt;) =&gt; void </code></pre>  <p>Note, the following works:</p>  <pre><code>let deferred = Q.defer&lt;string&gt;(); deferred.resolve("Hello World"); return deferred.promise; </code></pre>  <p>Is this just a bug in the <a href="https://github.com/borisyankov/DefinitelyTyped/blob/master/q/Q.d.ts" rel="nofollow">DefinitelyTyped</a> typing (updated Aug 17, 2015 as of this writing) perhaps, or am I specifying it wrong?</p>