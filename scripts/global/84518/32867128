<p>First a little background on what I want to achieve. I have a service that requires some configuration before it gets injected and used. After doing some research I figured that having a provider for the service would be the best solution. So I implemented the provider according to <a href="http://www.timecockpit.com/devblog/2014/10/24/AngularJS-Provider-in-TypeScript" rel="nofollow">this example</a>. Even thought the Typescript compiler (I'm using typescript to compile my code into valid JavaScript) thinks it's ok√©, JavaScript does not recognize the function that's available through the provider to set some options.</p>  <p>My code looks as follows (some code has been left out or renamed for a reason)</p>  <pre><code>export interface ICustomServiceProvider extends ng.IServiceProvider {   setOptions(options: ICustomOptions): void;   $get($http, $window, $resource): ICustomService; }  class CustomServiceProvider implements ICustomServiceProvider {   private options: ICustomOptions;    public $get($http, $window, $resource) {     return new CustomService($http, $window, $resource);   }    public setOptions(options: ICustomOptions): void {     this.options = options;   } }  angular.module('custom', ['ngResource'])   .service('CustomService', CustomService)   .provider('CustomService', CustomServiceProvider); </code></pre>  <p>The problem occurs when using the provider in one of my unit tests (I'm using Karma with Mocka for testing) and calling the <code>setOptions</code> function. Which is done like this.</p>  <pre><code>describe('CustomService', function() {    var provider: ICustomServiceProvider;   var options: {hello: 'world'};    beforeEach(inject(function($injector: ng.auto.IInjectorService) {     provider = &lt;ICustomServiceProvider&gt; $injector.get('');   }));    it('CustomService provider test', function() {     provider.setOptions(options);   }); } </code></pre>  <p>When running this test Karma throws an error saying</p>  <blockquote>   <p>TypeError: provider.setOptions is not a function at Context.[anonymous]</p> </blockquote>  <p>Also the compiled JavaScript Visual Studio Code is giving me a green warning (I don't think it's a error) on the provider variable on the line <code>.provider('CustomService', CustomServiceProvider);</code></p>  <blockquote>   <p>Argument of type '() => void' is not assignable to parameter of type 'IServiceProvider'. Property '$get' is missing in type '() => void'.<br/>   (local var) CustomServiceProvider: () => void<br/>   Providers</p> </blockquote>  <p>I already spent hours on fixing this problem but cannot seem to find the solution. Any idea on how to fix this of what I'm doing wrong?</p>  <p>Thanks in advance.</p>  <p><strong>Edit (30-09-2015)</strong></p>  <p>The service I'm am talking about looks like this:</p>  <pre><code>export interface ICustomService {   // Some function definitions }  class CustomService implements ICustomService {   static $inject = ['$http', '$window', '$resource'];    constructor(httpService: ng.IHttpService, windowService: ng.IWindowService, resourceService: ng.resource.IResourceService, options: ICustomOptions) {     // Setting variables   } } </code></pre>