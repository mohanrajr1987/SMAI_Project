<p>I'm using TypeScript (1.6) with node under the --harmony flag, so I'd like to transpile the es6 module syntax to commonjs. </p>  <p>From what I can tell, I can't do this with TypeScript 1.6. If I set my target to es6, and module to commonjs, I get a TypeScript error -</p>  <blockquote>   <p>Cannot compile modules into 'commonjs', 'amd', 'system' or 'umd' when   targeting 'ES6' or higher.</p> </blockquote>  <p>Why won't TypeScript compile to commonjs with an ES6 target? I imagine a lot people want to do this since node doesn't support ES6 modules yet.</p>  <p>I'd thought the new moduleResolution compiler option might solve this issue, but it doesn't appear to do anything.</p>  <p>Currently, I'm having to use babel just to transpile the module syntax to commonjs, but I'd like to remove babel from my builds so I can take advantage of source maps.</p>  <p>Is there a way I can achieve this? NOTE: I do not want to transpile to ES5. I want my JS running as ES6 under the harmony flag. Thanks!</p>