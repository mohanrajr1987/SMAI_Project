<p>I have the following piece of code:</p>  <pre><code>class BasketManager {     private persistPromises: { [key: string]: ng.IPromise&lt;Basket.BasketModel&gt; } = {};      constructor(private $q: ng.IQService) {}      order(basket: Basket.BasketModel, simulate = false): ng.IPromise&lt;Basket.BasketModel&gt; {         return this.persistPromises[basket.basketId] = this.$q.when(this.persistPromises[basket.basketId] || basket).then(basket =&gt; {             return this.$http.post(url, {})                 .then((response:ng.IHttpPromiseCallbackArg&lt;API.Contracts.IBasketContract&gt;) =&gt; this.storeBasket(response.data, true))                 .catch((response:ng.IHttpPromiseCallbackArg&lt;any&gt;) =&gt; this.handleBasketErrorResponse(basket, response));         });     });      private storeBasket(data: API.Contracts.IBaseBasketContract, withItems = false): Basket.BasketModel {         /* ... */     }      private handleBasketErrorResponse(basket: Basket.BasketModel, response: ng.IHttpPromiseCallbackArg&lt;any&gt;): Basket.BasketModel {         /* ... */     } } </code></pre>  <p>When I try to compile it, I get this error message:</p>  <pre><code>TypeScript error: app/scripts/objectmanager/basketmanager.service.ts(100,60): error TS2453: The type argument for type parameter 'TResult' cannot be inferred from the usage. Consider specifying the type arguments explicitly.   Type argument candidate 'IBaseBasketContract' is not a valid type argument because it is not a supertype of candidate 'BasketModel'. </code></pre>  <p>100,60 is 7,56 in the above snippet.</p>  <p>I tried explicitly specifying the arguments for each and every variable, but that didn't help. What am I missing?</p>