<p>I have this table:</p>  <pre><code>CUSTOMER NAME   JOINED DATE Daniel          03/01/2013 Daniel          04/01/2013 Daniel          23/05/2013 Zack            27/06/2013 Zack            06/08/2013 Patricia        07/01/2015 John            08/05/2008 John            02/05/2013 John            23/05/2013 John            08/06/2015 Stephanie       16/04/2010 Stephanie       08/05/2012 Stephanie       28/09/2012 Stephanie       23/01/2013 Stephanie       28/03/2014 Elizabeth       18/04/2013 Elizabeth       22/04/2013 Elizabeth       25/04/2013 </code></pre>  <p>And I've looked and can't figure out how to return a query that removes the duplicates in [Customer Name] column but keeps the earliest date in the [Joined date] column belonging to the [customer name], see below for desired output:</p>  <p><code>customer name  Joined on</code></p>  <p><code>Daniel         03/01/2013  Zack           27/06/2013  Patricia       07/01/2015  John           08/05/2008  Stephanie      16/04/2010  Elizabeth      18/04/2013</code></p>  <p>I am new to sql and coding in general, I read somewhere that you can use a MIN(DATE) statment? or a case when statement to find this? but i'm still not sure:</p>  <p><code>select distinct [customer name], [joined date] from database.dbo.practise  where [status ] = 'live'   and [joined date] = (select min(joined date) from database.dbo.practise)</code></p>