<p>Is it possible to split variadic parameter into list of items and access them? below you can see example of what I want to achieve - first piece, is standard, simple example of using variadic parameters</p>  <pre><code>float sum() {     return 0; }  template&lt;typename ... Types&gt; float sum(float first, Types ... rest) {     return first + sum(rest...); } </code></pre>  <p>below, you can see what I'd like to do</p>  <pre><code>template&lt;typename ... Types&gt; float func(int first, Types ... rest) {     std::cout&lt;&lt;first&lt;&lt;std::endl;     for(auto item : rest)              cout&lt;&lt;rest&lt;&lt;std::endl; } </code></pre>  <p>I know I can print and do things recursively, but is there way to access params w/o recursion?</p>