<p>How can I at compile time create for example an std::array from a template parameter pack?</p>  <p>This shows what I need, but without a parameter pack.</p>  <pre><code>template&lt;typename T1, typename T2, typename T3&gt; struct ToInfoArray {     static constexpr std::array&lt;Info, 3&gt; value = { { T1::info, T2::info, T3::info } }; }; </code></pre>  <p><a href="http://cpp.sh/4rh5q" rel="nofollow">Live demo demonstrating the intended usage</a></p>  <p><strong>Bonus question:</strong> Would you use <code>std::array</code>, <code>array[]</code> or <code>std::initializer_list</code> as type for InfoArray?</p>