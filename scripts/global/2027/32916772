<p>I'm working through the Programming in C book and this part was added for HW, but I'm not sure how to display these quite like the code comments suggest. Below the comments in <code>output()</code>, I used this statement <code>printf("%d\t%d\n", students.id, students.score);</code>  but I'm not getting id and score correctly. This is what I'm not sure about. So it's getting generated and later printed in main, but not quite how it's supposed to. </p>  <p>Then I'm not sure how to find the minimum, max and avg scores in <code>summary()</code> because they are randomly generated. Would I just look at <code>students[i].id and students[i].score</code>?</p>  <pre><code>#include &lt;stdio.h&gt; #include &lt;stdlib.h&gt; #include &lt;math.h&gt; #include &lt;conio.h&gt; #include &lt;assert.h&gt;  struct student{     int id;     int score; };  struct student* allocate(){     /*Allocate memory for ten students*/     struct student* s = malloc(10 * sizeof(struct student));     assert (s != 0);     /*return the pointer*/     return s; }  void generate(struct student* students){     /*Generate random ID and scores for 10 students, ID being between 1 and 10,   scores between 0 and 100*/     int i;    for (i = 0; i &lt; 10; i++) {            students[i].id = (rand()%10+1);            students[i].score = (rand()%(100 - 0 + 1) + 0);            printf("%d, %d\n", students[i].id, students[i].score);    } }  void output(struct student* students){    /*Output information about the ten students in the format:    ID1 Score1               ID2 score2               ID3 score3               ...               ID10 score10*/    printf("%d\t%d\n", students.id, students.score);   }  void summary(struct student* students){     /*Compute and print the minimum, maximum and average scores of the ten    students*/ }  void deallocate(struct student* stud){    /*Deallocate memory from stud*/    free(stud); }  int main() {    struct student* stud = NULL;    /*call allocate*/    stud = allocate();    /*call generate*/    generate(stud);    /*call output*/    output(stud);    /*call summary*/    summary(stud);    /*call deallocate*/    deallocate(stud);    return 0; } </code></pre>  <p>An explanation on how to use <code>students[i].id and students[i].score</code> is what I really need help with because I've always had trouble using values created in one function, in another function.</p>