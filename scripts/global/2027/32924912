<p>I'm having trouble making a singly linked list. This linked list should receive  name, GPA, key --- generate nodes --- print --- de-allocate memory. However, it seems like there are errors in my code. But I can't find where they are. Could you tell me where the wrong code is if you find it?</p>  <p>unprocessed win32 exception error occurs whenever I input name, GPA, and key information for the second node.</p>  <pre><code>#include &lt;stdio.h&gt; #include &lt;stdlib.h&gt;  struct STUDENT {     char name[20];     float GPA;     int key;     struct STUDENT *next; };  void newnode(struct STUDENT *head, struct STUDENT *tail, struct STUDENT *preptr, struct STUDENT *curptr, int i) {     struct STUDENT *newitem;      newitem = (struct STUDENT*)malloc(sizeof(struct STUDENT));     if (newitem == (struct STUDENT*)NULL)     {         printf("No memory space available");     }      printf("Name?\n");     gets(newitem-&gt;name);     getchar();     printf("GPA?\n");     scanf("%f", &amp;(newitem-&gt;GPA));     getchar();     printf("Key?\n");     scanf("%d", &amp;(newitem-&gt;key));     getchar();      if (i == 0)     {         head = newitem;         tail = newitem;         curptr = newitem;     }     else     {         preptr = curptr;         tail = newitem;         curptr = newitem;         preptr-&gt;next = newitem;     } }  void main() {     int i;     struct STUDENT *head = NULL; //location of the first node     struct STUDENT *tail = NULL; //location of the last node     struct STUDENT *preptr = NULL; //previous     struct STUDENT *curptr = NULL; //current      for (i = 0; i &lt;= 9; i++)     {         newnode(head, tail, preptr, curptr, i);     }     curptr = head;     printf("name %s, GPA %f, key %d\n", curptr-&gt;name, curptr-&gt;GPA, curptr-&gt;key);     preptr = head;     curptr = curptr-&gt;next;      for (i = 0; i &lt;= 8; i++)     {         printf("name %s, GPA %f, key %d\n", curptr-&gt;name, curptr-&gt;GPA, curptr-&gt;key);         curptr = curptr-&gt;next;     }      curptr = head;     for (i = 0; i &lt;= 9; i++)     {         free(curptr);         curptr = curptr-&gt;next;     }      getchar();     getchar(); } </code></pre>