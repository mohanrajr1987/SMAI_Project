<p>I started to learn part where we return object as result from method, and i got a little bit stuck in here. And i would be grateful if anyone of you could help me. Here's the code from my book</p>  <pre><code>class Test {    int a;     Test(int i)    {       a=i;    }    Test increment()    {       Test privremeni = new Test(a+a);       return privremeni;    } } public class ReturnObject     {      public static void main(String[] args)       {       Test ob1 = new Test(2);       Test ob2;        ob2 = ob1.increment();       System.out.println("ob1.a: "+ob1.a);       System.out.println("ob2.a: "+ob2.a);        ob2 = ob2.increment();       System.out.println("ob2.a after second increment(): "+ob2.a);      }     } </code></pre>  <p>Confusing parts:</p>  <p>First: <code>Test ob2;</code> Here we don't create actual object, we only assign the reference of class Test to the object. After this object has value <code>null</code>. Right ?</p>  <p>Second: <code>ob2 = ob1.increment();</code> When we do this part <code>ob1.increment();</code> Then method increment() create new object called <code>privremeni</code> and return the reference of object <code>privremeni</code> and assign it to <code>ob2</code> ? </p>  <p>Third: <code>ob2 = ob2.increment()</code> We call again method <code>increment()</code> and it will increment again. So will <code>ob2</code> have the same reference as first time when we called <code>increment()</code> method or it will get new reference as we create new object again ?</p>  <p>I think i might have problem with understanding this because i still got some problems to understand part when we pass reference by value and i think that this part is really important in here.</p>  <p>If you could give me some more examples of this code to help me understand this i would be grateful.</p>