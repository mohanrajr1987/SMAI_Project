<p>I have been trying to debug an issue, and have been using <code>lldb</code> to view the values stored in the registers to help.</p>  <p>I have a quick question:</p>  <pre><code>(lldb) register read General Purpose Registers:        rbx = 0x0000618000a4fc60        rbp = 0x00007fff5fbfc690        rsp = 0x00007fff5fbfc670        r12 = 0x0000000000000000        r13 = 0x0000000101a53f00        r14 = 0x00006000000c04d0        r15 = 0x00007fff8468e0c0  libobjc.A.dylib`objc_msgSend        rip = 0x00007fff81a8faa1  Foundation`-[NSNotificationCenter postNotificationName:object:userInfo:] + 66 13 registers were unavailable.  (lldb) po $r13 &lt;NSClipView: 0x101a53f00&gt;  (lldb) po $rbx &lt;NSClipView: 0x101a53f00&gt; </code></pre>  <p>Why is it that even though the addresses at <code>$r13</code> and <code>$rbx</code> are totally different, when I <code>po</code> both, I end up with the same object?   Namely, the address stored at <code>$rbx</code> just prints out the value at <code>$r13</code></p>  <p>I am thinking that the address at <code>$rbx</code> is an address to a pointer (because it starts with 0x00006xxxxx?), which once dereferenced, points to the object located at the address at <code>$r13</code></p>  <p>So is <code>po</code> just smart, and recognizes when an address is a pointer address, and just automatically dereferences the pointer?</p>  <p>I also noticed there are 3 main types of addresses that I see.</p>  <pre><code> - 0x00006xxxxxxx   - 0x00007fffxxxx   - 0x000000xxxxxx </code></pre>  <p>I have an idea of what is what-- like I noticed that the 0x00006xxxxxxx addresses seem to be pointers to my application's objects?</p>  <p>But I really am not sure of anything</p>