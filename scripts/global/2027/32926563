<p>I am writing a program that is to convert infix to postfix and calculate the expression. For conversion I am using a link-list stack. The one problem I am having with the project is the fact that the stack heads can only be declared locally. The stack heads are a pointer to my stack struct that point to the first value in the link list stack. My linked list stack struct is globally declared.</p>  <p>So for example,</p>  <pre><code>int evaluate(param1,param2){ //declare my 1st stack head here //declare my 2nd stack head here. } </code></pre>  <p>I am using 2 stacks, 1 for value inputs and 1 for the character(operation inputs). I am just getting confused on how to access these stacks outside of the evaluate function. My instructor was hinting that we needed to use double pointer notation in calling other functions, I sort of understand the idea but would love if anyone could explain further.</p>  <pre><code>If I have a function  popstack(stack/*how do i call this parameter? is it **stack *stack   or &amp;stack*/) </code></pre>  <p>Basically I am confused on how to go about the pointer notation, whether it be pointer to pointer, or the adress of the pointer. </p>