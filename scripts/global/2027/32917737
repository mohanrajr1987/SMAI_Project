<p>I have been using pointers and malloc and I do not know how to use free() properly. I have a program that allows the user to add a record of data when they select a specific option. My program allows this function to happen only once and then I get a segfault. I do not think I am using free() properly and was hoping someone could point out my problem. I have the global variables:</p>  <pre><code>int records = 5; int access = 0;                  //initialize access counter to 0 int count = 0;  struct childrensBook *first;    //initialize first pointer struct childrensBook *last;     //initialize last pointer struct childrensBook *temp;     //initialize temp pointer </code></pre>  <p>I then have the start of my main function where I include predefined records:</p>  <pre><code>int main(void) {     last = (struct childrensBook *) malloc(records * sizeof(struct childrensBook));     //allocate memory to "last" pointer     first = last;             memcpy(last-&gt;title, "We're Going on a Bear Hunt", 27);                              //Beginning of all predefined Records     memcpy(last-&gt;author, "Michael Rosen", 14);     last-&gt;price = 7.99;     last++;                                                                             //incrememnts pointer     count = count + 1;                                                                  //begins counting of records      memcpy(last-&gt;title, "Goodnight Moon", 15);     memcpy(last-&gt;author, "Margaret Wise Brown", 20);     last-&gt;price = 8.99;     last++;                                                                             //incrememnts pointer     count = count + 1;                                                                  //adds 1 to record count      memcpy(last-&gt;title, "One Fish\n Two Fish\nRed Fish\n Blue Fish", 38);     memcpy(last-&gt;author, "Dr. Seuss", 10);     last-&gt;price = 8.99;     last++;                                                                             //incrememnts pointer     count = count + 1;                                                                  //adds 1 to record count      memcpy(last-&gt;title, "Snowmen At Night", 17);     memcpy(last-&gt;author, "Caralyn Buehner", 16);     last-&gt;price = 16.99;     last++;                                                                             //incrememnts pointer     count = count + 1;                                                                  //adds 1 to record count      memcpy(last-&gt;title, "Harold and the Purple Crayon", 29);     memcpy(last-&gt;author, "Crockett Johnson", 17);     last-&gt;price = 6.99 </code></pre>  <p>Below this is just my menu loop which I have not included. My problem lies in my add function where I am using free() which is here:</p>  <pre><code>   addRecord()                                                                          //Add Function {                                                            last=first;                                                                         //get pointer in correct position     memcpy(&amp;temp, &amp;last, records *sizeof(struct childrensBook));                        //use memcpy to copy info from last to temp      fprintf(stderr, "\nYou have added the record:\n==========================\nBook: %s\nWritten by: %s\nPrice: $%.2f\n", temp-&gt;title, temp-&gt;author,          temp-&gt;price);      temp++;      free(last);       //problem?? I have tried using free(first), free(last) and free(temp) and none work....     count = count + 1;  }//end addRecord </code></pre>  <p>I also have done it this way and it still does not work:</p>  <pre><code>            addRecord()                                                                                     //Add Function     {                                                            last=first;                                                                         //get pointer in correct position     temp = (struct childrensBook *) malloc(records * sizeof(struct childrensBook));      memcpy(&amp;temp, &amp;last, records *sizeof(struct childrensBook));                        //use memcpy to copy info from last to temp      fprintf(stderr, "\nYou have added the record:\n==========================\nBook: %s\nWritten by: %s\nPrice: $%.2f\n", temp-&gt;title, temp-&gt;author,          temp-&gt;price);      temp++;      free(last);     count = count + 1;  }//end addRecord </code></pre>