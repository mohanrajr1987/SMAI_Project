<p>I have two vectors of object. Something like:</p>  <pre><code>std::vector&lt;thing&gt; all_things; std::vector&lt;thing&gt; bad_things; </code></pre>  <p>I want to obtain a third vector that contains the <strong>good_things</strong>. In other words, every object in <strong>all_thing</strong> that is not belong to <strong>bad_things</strong>:</p>  <pre><code>std::vector&lt;thing&gt; good_things=subtract(all_things,bad_things); </code></pre>  <p>Any Ideas about how to implement <strong>subtract</strong> in most efficient  and standard way.</p>  <p>P.S the vectors can <strong>NOT</strong> be ordered because the class <strong>thing</strong> does not have any thing to be ordered by.  Thanks!</p>  <p>Edit: and I do not want to make any change to <code>all_things</code>. e.g.</p>  <pre><code>void substract(const std::vector&lt;thing&gt;&amp; a, const std::vector&lt;thing&gt;&amp; b); </code></pre>