<p>My question is very specific, and I can't seem to find a close enough question anywhere else to allow me to understand this.  Basically, I've found a solution to my problem, but I don't understand why it works.  I've come to it via a lot of research and then a lot of trial and error.</p>  <p>Short explanation: getting a two column MySQL database into an array in PHP then into javascript is resulting in an array of arrays of arrays.  I'm not understanding why it is 3 arrays deep and not 2.</p>  <p>Here is the long explanation with code examples:</p>  <p>I am getting all of my two column MySQL database via:</p>  <pre><code>     while ($row = $table-&gt;fetch_assoc()) {   // get the SQL data         $columnA[] = $row['columnA'];         // get columnA (array)         $columnB[] = $row['columnB'];         // get columnB (array)      }     $combinedData[] = [$columnA, $columnB];   // combine them in an array to split up later     echo json_encode($combinedData);          // send to javascript file via ajax </code></pre>  <p>I then send this to my javascript file, which does a <code>JSON.parse</code>:</p>  <pre><code>    $.ajax({     url: 'loader.php',    // the php code from above     type: "POST" }).done(function(data) {         console.log("columnA: "+JSON.parse(data)[0][0][0].toString());  //why [0][0][0] ... why 3 arrays deep?         console.log("columnB: "+JSON.parse(data)[0][1][0].toString());     } ); </code></pre>  <p>This is the ONLY way I've found I can get each individual cell output into my javascript.  Two things don't make sense to me though:</p>  <p>MY QUESTION:  <code>$combinedData</code> is an array of arrays, so why, when I get data from php into javascript, do I have to go 3 arrays in... <code>JSON.parse(data)[0][0][0]</code> ?</p>  <p>I understand the last array is the array of individual cells (<code>$columnA</code> from the php), and the 2nd one is the array of columns (<code>$combinedData</code> from the php).  Where is the first one coming from?</p>  <p>I also don't why I have to split $row and then recombine them.  If I just echo $row I can't (figure out how to) parse the data correctly in js.</p>