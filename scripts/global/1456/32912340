<p>I have a PacketInputStream class like this:</p>  <pre><code>public class PacketInputStream extends DataInputStream {      private static final Charset UTF8 = Charset.forName("UTF-8");      public PacketInputStream(InputStream myis) {         super(myis);     }      public String readString() throws IOException {         int length = readVarInt();         byte[] data = new byte[length];         readFully(data);         return new String(data, UTF8);     }      public int readVarInt() throws IOException {         int i = 0;         int j = 0;         while (true) {             int k = read();             if (k == -1)                 throw new IOException("End of stream");              i |= (k &amp; 0x7F) &lt;&lt; j++ * 7;              if (j &gt; 5)                 throw new IOException("VarInt too big");              if ((k &amp; 0x80) != 128)                 break;         }          return i;     }      public long readVarLong() throws IOException {         long varInt = 0;         for (int i = 0; i &lt; 10; i++) {             byte b = readByte();             varInt |= ((long) (b &amp; (i != 9 ? 0x7F : 0x01))) &lt;&lt; (i * 7);              if (i == 9 &amp;&amp; (((b &amp; 0x80) == 0x80) || ((b &amp; 0x7E) != 0)))                 throw new IOException("VarInt too big");             if ((b &amp; 0x80) != 0x80)                 break;         }          return varInt;     }      public byte[] readBytes() throws IOException {         return readBytes(readShort());     }      public byte[] readBytes(int length) throws IOException {         if (length &lt; 0)             throw new IOException("Invalid array length");         byte[] data = new byte[length];         readFully(data);         return data;     }  } </code></pre>  <p>And I have this code running:</p>  <pre><code>System.out.println("Logic data version (always 0) : " + is.readVarInt());         System.out.println("User ID: " + is.readVarLong());         System.out.println("Home ID: " + is.readVarLong()); </code></pre>  <p><code>is</code> is defined</p>  <p>Now the problem I am having is that it is always showing me 0 as the returned number.</p>  <p>Here is the first bit of the inputstream: <code>00000000000000030035C708000000030035C708010000004</code> Now as you can see it shouldn't be giving 0 each time for the first 3 so where is the error and how can I fix it?</p>  <p>Thanks :)</p>