<p>I'm having trouble extracting a bunch of doubles from a byte array. Using c I was able to do this:</p>  <pre><code>int16_t* data = (int16_t*)byte_array; double st = data[0]; //first two bytes should be st or 29811 double et = data[9]; //last two bytes should be et or 29797 double accX = data[1]; double accY = data[2]; double accZ = data[3; double gyroX = data[4]; ... &gt;&gt; st = 29811 &gt;&gt; et = 29797 </code></pre>  <p>But now I am trying to rewrite my code using java (android). The data I have coming is is correct because I can do:</p>  <pre><code>double s = data[0]; Log.i(TAG, "s: "+s); //ascii value for s is 115 &gt;&gt; s: 115 </code></pre>  <p>But I need to be able to pull out the data in between the st and the et which are I think are all doubles. I have tried something like this:</p>  <pre><code>double st = data[0]&amp;0xff&lt;&lt;8|data[1]; &gt;&gt; st: 115 </code></pre>  <p>Which didn't work. I don't have many other ideas, and don't know my low level byte manipulation very well.</p>