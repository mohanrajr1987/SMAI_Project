<p>Let's say I have the following code in java</p>  <pre><code>byte t = (byte) 0b10001000; byte z = 0b00000000; z = (byte) (t|z); </code></pre>  <p>You'd think the output would be 10001000, however it ends up being -1111000 in String representation, the - sign being the first 1 of course, making it 11111000. If I do the same code but with the last bit in z as a 1, e.g. 00000001, and I perform the same operation, I get -1110111, or 11110111. I figure this is due to some conversion issue with the negatively signed byte t. Is there any way to avoid this? Is there any way to have 10000000 work the same in an OR operation as 01000000?</p>