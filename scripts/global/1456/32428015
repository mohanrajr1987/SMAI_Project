<p>I am serializing my class to <code>bytes</code> and then I want to extract everything out of it while deserializing it. My class looks like this:</p>  <pre><code>public class DataWork {     private final String clientId;     private final String serverId;      public DataWork(final String clientId, final String serverId) {         this.clientId = clientId;         this.serverId = serverId;     }      public String getClientId() {         return clientId;     }      public String getServerId() {         return serverId;     }      @Override     public String toString() {         return "DataWork [clientId=" + clientId + ", serverId=" + serverId + "]";     } } </code></pre>  <p>And below is my serializer class where I am serializing my DataWork to bytes but I don't know how to extract everything out of it while deserializing it back? In general I want to get full DataWork object while deserializing it using the same bytes.</p>  <pre><code>public class DataSerializer implements QueueSerializer&lt;DataWork&gt; {      // here I need to deserialize     public DataWork deserialize(byte[] buffer) {         // don't know what should I do here?         // buffer will have my actual bytes of DataWork     }      // here I am serializing     public byte[] serialize(DataWork work) {         return work.toString().getBytes();     } } </code></pre>  <p>Now that means I need to serialize it in such a way so that I can extract everything out of it properly while deserializing.</p>