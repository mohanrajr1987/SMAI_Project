<p>I have a binary file that is in the following format where each word is 4 bytes long:</p>  <pre><code>add arg1 arg2 arg3 // where in this example it would store the value of arg1+arg2 in arg3 </code></pre>  <p>I'm having trouble however figuring out a way to read the file in a way to where the first 4 bytes is an opcode, and the next 8 through 16 bytes represent the next 3 words per line. Below is my current code which I have not gotten working yet.</p>  <pre><code>#define buflen 9000  char buf1[buflen];  int main(int argc, char** argv){ int fd; int retval;  if ((fd = open(argv[1], O_RDONLY)) &lt; 0) {     exit(-1); } fseek(fd, 0, SEEK_END); int fileSize = ftell(fd);   for (int i = 0; i &lt; fileSize; i += 4){     //first 4 bytes = opcode value     //next 4 bytes = arg1     //next 4 bytes = arg2     //next 4 bytes = arg3     retval = read(fd, &amp;buf1, 4); } } </code></pre>  <p>I'm not sure how I can get 4 bytes at a time and then evaluate them. Could anyone provide me with some help?</p>