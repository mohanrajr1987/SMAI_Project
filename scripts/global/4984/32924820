<p>I am using this gem (<a href="https://github.com/bluerail/twitter-bootstrap-rails-confirm" rel="nofollow">https://github.com/bluerail/twitter-bootstrap-rails-confirm</a>) to replace the standard browser confirmation dialogue box with a bootstrap modal, and it is working, however, there are no built-in callbacks for when the 'Confirm' or 'Cancel' buttons or selected, so I am trying to create my own.</p>  <p>I am currently disabling the original link when it is clicked to prevent the user from clicking it twice, however, if 'Cancel' is clicked on the confirmation dialogue box, the link needs to be re-enabled. This is what I tried:</p>  <pre><code>$('#confirmation_dialog').find('.cancel').on 'click', (e) -&gt;     console.log('cancel was clicked')     $('.disabled').removeClass('disabled') </code></pre>  <p>The issue is that this is not run when the 'Cancel' button/link is clicked.</p>  <p>When using the Chrome JS console, I have no problem finding the correct 'Cancel' button on the modal, and calling it using </p>  <pre><code>$('#confirmation_dialog').find('.cancel').click() </code></pre>  <p>which effectively cancels and closes the modal, however, my <code>on click</code> event is not triggered, so the button is not re-enabled.</p>  <p>This is the link that is on the page for the user to click:</p>  <pre><code>&lt;td&gt;&lt;%= link_to 'Cancel Appt', cancel_appointment_path(appointment), class: 'btn btn-default btn-xs btn-danger btn-disable-after-click', data: { confirm: "Are you sure you want to cancel the appointment?", commit: 'Yes', cancel: 'No' } %&gt;&lt;/td&gt; </code></pre>  <p>and this disables the button so it cannot be clicked twice by the user:</p>  <pre><code>$('.btn-disable-after-click').on 'click', (e) -&gt;     $(this).addClass('disabled') </code></pre>  <p>Any suggestions on what I'm doing wrong would be much appreciated, thanks!</p>