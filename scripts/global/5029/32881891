<p>I have a program using pthreads. I want add an interface using gtk2.0, but have a problem with drawing on window. When I call <code>g_signal_connect(G_OBJECT(window), "configure_event",G_CALLBACK(draw_things), NULL);</code> lines which I draw appear and at once disappear. If I move a window calling function  <code>gtk_window_move (GTK_WINDOW(widget), 10,10);</code> or by means of a mouse, lines appear. If I call <code>g_signal_connect(G_OBJECT(window), "expose_event", G_CALLBACK(draw_things), NULL);</code> my lines are displayed correctly, but buttons and labels are not displayed. My code looks like this:</p>  <pre><code>    int main(int argc, char *argv[]){          pthread_t tr1;         pthread_t tr2;         pthread_t *trs;         int rc = 0;         type j;         int16_t *id;         type Stop_Point;          GtkWidget *window;         GtkWidget *button;         GtkWidget *table;         GtkWidget *drawing_area;          g_thread_init (NULL);         gdk_threads_init ();         gdk_threads_enter ();         gtk_init (&amp;argc, &amp;argv);                  window = gtk_window_new (GTK_WINDOW_TOPLEVEL);         gtk_widget_set_size_request(window, width/1.6, height/1.33);         gtk_window_set_position(GTK_WINDOW(window), -1);          gtk_window_set_title (GTK_WINDOW (window), "Window");         g_signal_connect (G_OBJECT (window), "delete_event", G_CALLBACK (delete_event), NULL);         gtk_container_set_border_width (GTK_CONTAINER (window), 2);         table = gtk_table_new ( width/1.6, height/1.33, TRUE);         gtk_container_add (GTK_CONTAINER (window), table);          button = gtk_button_new_with_label ("next &gt;&gt;");         gtk_table_attach_defaults (GTK_TABLE (table), button, 1110, 1190, 750, 790);         gtk_widget_show (button);          button = gtk_button_new_with_label ("&lt;&lt; prev");         gtk_table_attach_defaults (GTK_TABLE (table), button, 1020, 1100 , 750, 790);         gtk_widget_show (button);          rc = pthread_create(&amp;tr1, NULL, tr1_func, &amp;id);         rc = pthread_create(&amp;Generator, NULL, tr2_func, &amp;Stop_Point);         trs = (pthread_t*)malloc(Num * sizeof(pthread_t));         for(j = 0; j &lt; Num; j++) {              rc = pthread_create(trs + j, NULL, trs_func, id + j);         }  //      g_signal_connect(G_OBJECT(window), "configure-event", GTK_SIGNAL_FUNC(draw_things), NULL);         g_signal_connect(G_OBJECT(window), "expose_event", G_CALLBACK(draw_things), NULL);         gtk_widget_show_all (window);         gtk_main ();          gdk_threads_leave ();          return 0; } </code></pre>  <p>Fnction for drawing looks like this</p>  <pre><code>gboolean draw_things(GtkWidget *widget, GdkEventExpose *event, gpointer data) {      GdkGC *gc;      gc=gdk_gc_new(GDK_DRAWABLE(widget-&gt;window));     gdk_gc_set_line_attributes(gc, 5, GDK_LINE_SOLID, GDK_CAP_ROUND, GDK_JOIN_ROUND);     gdk_draw_line(GDK_DRAWABLE(widget-&gt;window), gc, 5, 35, 1200, 35);     gdk_draw_line(GDK_DRAWABLE(widget-&gt;window), gc, 1170, 45, 1200, 35);     gdk_draw_line(GDK_DRAWABLE(widget-&gt;window), gc, 1170, 25 , 1200, 35); //    gtk_window_move (GTK_WINDOW(widget), 1,1);      return TRUE; } </code></pre>  <p>Any help is welcomed, because now I use "configure_event" and call <code>gtk_window_move (GTK_WINDOW(widget), 0,0);</code> every time when I need to draw the picture.</p>