<p>I don;t quite understand where I can throw this exception. </p>  <p>For instance, I'm implementing the <code>Future&lt;T&gt;</code> interface and don't want anyone calls the method:</p>  <p><a href="http://docs.oracle.com/javase/7/docs/api/java/util/concurrent/Future.html#get%28long,%20java.util.concurrent.TimeUnit%29" rel="nofollow">Future#get(long, TimeUnit)</a>. </p>  <p>So, can I just throw the <code>UnsupportedOperationException</code>?</p>  <pre><code>public T get(long timeout, TimeUnit unit){     throw new UnsupportedOperationException(); } </code></pre>  <p>The thing is the specification of the method doesn't say anything about throwing the Exception. The Exception, in turn</p>  <blockquote>   <p>throws to indicate that the requested operation is not supported.</p> </blockquote>  <p><a href="http://docs.oracle.com/javase/7/docs/api/java/lang/UnsupportedOperationException.html" rel="nofollow">Class UnsupportedOperationException</a></p>  <p>I mean, is it common to throw it if you don't want it to be called or it may be considered incorrect because not all methods've been implemented? In my specific case, I don't think that calling the method would make sense...</p>