<p>Why is it that this code can not cast to IDeletableNode from a generics list that requires that specific interface.</p>  <p>This code sample can not execute the IDeletableNode.Delete procedure no matter how I cast it.</p>  <pre><code>    unit DeletableGenericsTest;  interface  uses   Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,   Vcl.Controls, Vcl.Forms, Vcl.Dialogs, xmldom, XMLDoc, XMLIntf, Generics.Collections;  type    IDeletableNode = interface(IXMLNode)     ['{04D7A0C0-8E87-412B-BC55-230C7080D410}']     procedure Delete;   end;    INodeOfData = interface(IDeletableNode)      ['{368917D8-402F-4BA2-8BC5-B0DB51B1BAE9}']      function Get_MyKey : string;      property MyKey : string read Get_MyKey;   end;    TDeletableList&lt;T: IDeletableNode&gt; = class(TList&lt;T&gt;)      procedure DeleteAll;   end;    TNodeOfData = class(TXMLNode, INodeOfData)   protected      function Get_MyKey: string;   public      procedure Delete;   end;    TForm1 = class(TForm)   private     fListOfNodes : TDeletableList&lt;TNodeOfData&gt;;   public     { Public declarations }   end;   var   Form1: TForm1;  implementation  {$R *.dfm}  { TDeletableList&lt;T&gt; }  procedure TDeletableList&lt;T&gt;.DeleteAll; var index : Integer; begin    for index := Self.Count - 1 downto 0 do        Self[index].Delete; end;  { TNodeOfData }  procedure TNodeOfData.Delete; begin    // delete some stuff; end;  function TNodeOfData.Get_MyKey: string; begin    result := '123ABC'; end;  end. </code></pre>  <p>Is there something that I am missing here or is this correct?</p>