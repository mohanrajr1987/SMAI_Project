<p>Ok. So this is a very specific implementation of the remove() method in the iterator interface. So we have a Bag class that keeps tracks of the strings being added into an ArrayList defined inside. Let's call the instance field ArrayList stringHolder. Bag class implements Iterable and here's the question I need to answer: Define the remove method of the iterator interface. The method will reduce the number of instances of a particular string by one. Here's my attempt at doing it:</p>  <pre><code>@Override     public Iterator&lt;String&gt; iterator() {         return new Iterator&lt;String&gt;(){             private int pos;             @Override             public boolean hasNext() {                 return pos&lt;stringHolder.size();             }              @Override             public String next() {                 return stringHolder.get(pos++);             }              @Override             public void remove(){                 stringHolder.remove(pos--);             }          }; </code></pre>  <p>Is this right? Because wouldn't a call to remove if nothing has been added give an IndexOutOfBounds Exception. I'm just generally confused as to how one should go about implementing the remove() method. And since the method takes no parameter, how am I supposed to know what to remove? </p>