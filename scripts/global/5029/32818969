<p>I have a class called <code>Package</code>, in this class I have around 10 attributes, let's call them 1,2,3,4.. etc to 10. The types of these attributes are <code>strings</code>, <code>ints</code> and some <code>DateTimes</code>. When making a new object of Package sometimes I just need attribute 1, sometimes I need 5, 6 and 9, and sometimes I need 3 and 10 etc. </p>  <p>So just two examples: <code>new Package("bla", "bla bla",100)</code> or <code>new Package(2983)</code></p>  <p>I've <a href="http://www.csharp-station.com/Tutorial/CSharp/Lesson13" rel="nofollow">read</a>: </p>  <blockquote>   <p>An interface looks like a class, but has no implementation. The only   thing it contains are declarations of events, indexers, methods and/or   properties. The reason interfaces only provide declarations is because   they are inherited by classes and structs, which must provide an   implementation for each interface member declared.</p> </blockquote>  <p>Since there are no other methods in the class and just a constructor and attributes, is it better to use like 20 constructors or should I make an interface for this situation?</p>  <p><strong>EDIT:</strong> I should've probably mentioned that I also have some <code>enums</code> to 'kind of' determine what kind of <code>Package</code> it is.</p>