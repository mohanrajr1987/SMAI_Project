<p>Is there any way to use Qt5 style Signal &amp; Slot connection if the signals are declared in interfaces ?. </p>  <p>My Interfaces:</p>  <pre><code>class IMyInterfaces{ protected:     IMyInterfaces() {} //Prohibit instantiate interfaces public:     virtual ~IMyInterfaces(){}   signals:     virtual void notify_signal() =0; }; Q_DECLARE_INTERFACE(IMyInterfaces, "IMyInterfaces"); </code></pre>  <p>And a class which implements above interfaces:</p>  <pre><code>class MyClass : public QObject, public IMyInterfaces{     Q_OBJECT     Q_INTERFACES(IMyInterfaces) //Indicates interface implements public:     MyClass():QObject(){     }     ~MyClass(){}  signals:      void notify_signal(); }; </code></pre>  <p>In main program I would like to do something like this:</p>  <pre><code>IMyInterfaces * myObject = new MyClass(); //Connect signal using Qt5 style (This will introduce compilation errors) connect(myObject ,&amp;IMyInterfaces::notify_signal, otherObject, &amp;OtherClass::aSlot); </code></pre>  <p>The old style works but requires to cast to QObject:</p>  <pre><code>QObject::connect(dynamic_cast&lt;QObject *&gt;(m),SIGNAL(notify_signal()),other,SLOT(aSlot())); //This works but need to cast to QObject.  </code></pre>