<p>I'm new to Java, I'm trying to build something in Android Studio.  The point is to 'push' a value for TextView baseTickVar in class BaseScreen, from another PACKAGE, where the class CoreFunctionality resides. Each time the tickNumber increases I want that shown in the TextView, so it's not a one time setting of text.  </p>  <p>I have tried interfaces, but interfacing won't allow variables, only constants. I've tried TextView.setText from the CoreFunctionality package, but that gave a nullpointerException and declaring the TextView to counter that didn't seem to help. </p>  <pre><code>public class BaseScreen extends Activity implements View.OnClickListener {  @Override protected void onCreate(Bundle savedInstanceState) {     super.onCreate(savedInstanceState);     setContentView(R.layout.activity_base_screen);      // some irrelevant code here so i left it out.      TextView baseTickVar = (TextView)findViewById(R.id.baseTickVar);             baseTickVar.setText("1"); // just to not have it empty...  } </code></pre>  <p>Now I want to set value of baseTickVar with a variable from the other package CoreFunctionality</p>  <pre><code>public class CoreFunctionality extends Activity implements Runnable {  Thread tickThread = null; volatile boolean playingGalactic; long lastTick; public int tickNumber; int tickLength; TextView baseTickVar;  public void controlTicks() {      tickLength = 2000;     long timeThisTick = (System.currentTimeMillis() - lastTick);      long timeToWait = tickLength - timeThisTick;      if (timeToWait &gt; 0) {         try {             tickThread.sleep(timeToWait);         } catch (InterruptedException e) {         }     }     lastTick = System.currentTimeMillis(); }  @Override public void run() {      while (playingGalactic) {         controlTicks();         tickNumber++;         Log.i("Tick number ", "" + tickNumber);         updateTick();     } }  private void updateTick() {     // this is the whole point...     baseTickVar.setText("" + tickNumber); }  public void resume() {     playingGalactic = true;     tickThread = new Thread(this);     tickThread.start();  </code></pre>  <p>}</p>