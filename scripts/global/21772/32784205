<p>I've a TextView that will receive some html formatted text like:</p>  <pre><code>&lt;p class="p1"&gt;&lt;span class="s1"&gt;&lt;strong&gt;Name&lt;/strong&gt;&amp;nbsp; Mr. A&lt;/span&gt;&lt;/p&gt; &lt;p class="p1"&gt;&lt;span class="s1"&gt;&lt;strong&gt;Place:&lt;/strong&gt;&amp;nbsp; Somewhere over the rainbow...&lt;/span&gt;&lt;/p&gt; </code></pre>  <p>I'm using this code:</p>  <pre><code>CharSequence sequence = Html.fromHtml(html); SpannableStringBuilder strBuilder = new SpannableStringBuilder(sequence); text.setText(strBuilder); </code></pre>  <p>Ended up with:</p>  <blockquote>   <p>Name: Mr. A\n\nPlace: Somewhere over the rainbow\n\n</p> </blockquote>  <p>Problem, I don't want "\n\n" I just want one "\n", so I've done this:</p>  <pre><code>sequence = sequence.toString().replaceAll("\n\n", "\n"); </code></pre>  <p>Ended up with:</p>  <blockquote>   <p>Name: Mr. A\nPlace: Somewhere over the rainbow\n</p> </blockquote>  <p>And to remove the last "\n":</p>  <pre><code>try {     int i = sequence.toString().lastIndexOf("\n");     sequence = new StringBuilder(sequence).replace(i, i + 1, "").toString(); } catch (Exception e) {     e.printStackTrace(); } </code></pre>  <p>Ended up with:</p>  <blockquote>   <p>Name: Mr. A\nPlace: Somewhere over the rainbow</p> </blockquote>  <p>Perfect just like I wanted, but now all the HTML format is gone. How can I solve this situation?<br> Thanks.</p>  <p><strong>EDIT 1:</strong><br> User <strong>Bas van Stein</strong> suggested I should remove <code>StringBuilder</code>, but I didn't post all the code. So, I use a <code>StringBuilder</code> because if the text contains an <code>URL</code> I do something like this (complete code):</p>  <pre><code>CharSequence sequence = Html.fromHtml(html); sequence = sequence.toString().replaceAll("\n\n", "\n"); try {     int i = sequence.toString().lastIndexOf("\n");     sequence = new StringBuilder(sequence).replace(i, i + 1, "").toString(); } catch (Exception e) {     e.printStackTrace(); } SpannableStringBuilder strBuilder = new SpannableStringBuilder(sequence); URLSpan[] urls = strBuilder.getSpans(0, sequence.length(), URLSpan.class); for (URLSpan span : urls) {     makeLinkClickable(context, strBuilder, span, color); } text.setText(strBuilder); </code></pre>  <p>makeLinkClickable method:</p>  <pre><code>private void makeLinkClickable(final Context context, SpannableStringBuilder strBuilder, final URLSpan span, int color) {     int start = strBuilder.getSpanStart(span);     int end = strBuilder.getSpanEnd(span);     int flags = strBuilder.getSpanFlags(span);     strBuilder.setSpan(new ClickableSpan() {         @Override         public void onClick(View widget) {             ...         }     }, start, end, flags);     strBuilder.setSpan(new ForegroundColorSpan(color), start, end, Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);     strBuilder.removeSpan(span); } </code></pre>  <p><strong>EDIT 2:</strong><br> Ok so I figured out what is causing the loss of the format information, is the fact that I'm ignoring the <code>Spanned</code> text converted from <code>Html.fromHtml(html)</code>. I guess I'll have to remove the "\n\n" and the last "\n" without losing the <code>Spanned</code> object with all the <code>Span</code> styles, etc. Working on it...</p>