<p>I am getting objects in correct way but the JSON response is having recursive endless issues. </p>  <p>entity</p>  <pre><code>      @Entity       public class ListItem {           @Id           @GeneratedValue(strategy = GenerationType.IDENTITY)           private Long id;           private String name;           @ManyToOne (cascade = CascadeType.ALL, fetch = FetchType.EAGER )           private ListItem parentListItem;           @OneToMany (mappedBy ="parentListItem", cascade = CascadeType.ALL, fetch = FetchType.EAGER )           private List&lt;ListItem&gt; childListItemList;        } </code></pre>  <p>Dao</p>  <pre><code>      public ListItem getMenuListById(Long id){           ListItem listItem = em.find(ListItem.class, id);           log("from DAO, listItem parent name: "+ listItem.getName());           List&lt;ListItem&gt; listItemLevel2List = listItem.getChildListItemList();           recurse(listItemLevel2List);             return listItem;           }           public void recurse(List&lt;ListItem&gt; listItemList){           log("from DAO, level2 list item childres size: "+listItemList.size());           if(listItemList.size() &gt; 0){               for(ListItem listItem : listItemList){               log("from DAO, listItem name: "+ listItem.getName());               log(" -&gt; from DAO, listItem parent name: "+ listItem.getParentListItem().getName());               List&lt;ListItem&gt; level2List = listItem.getChildListItemList();               if(level2List.size() &gt; 0){                   recurse(level2List);               }               }           }           } </code></pre>  <p>controller</p>  <pre><code>      @GET           @Path("level1")           @Produces ("application/json")           public ListItem getMenuList(){           ListItem listItem = listItemService.getMenuListById(1L);           return listItem;           } </code></pre>  <p>console output: seems correct</p>  <pre><code>      from DAO, listItem parent name: Baby Changing       from DAO, level2 list item childres size: 6       from DAO, listItem name: Changing Mats         -&gt; from DAO, listItem parent name: Baby Changing       from DAO, listItem name: Nappy Stacker       -&gt; from DAO, listItem parent name: Baby Changing       from DAO, listItem name: Potty Training       -&gt; from DAO, listItem parent name: Baby Changing       07:10:37,576 INFO  [stdout] (default task-24) from DAO, listItem name: Nappies &amp; Wipes       -&gt; from DAO, listItem parent name: Baby Changing       07:10:37,576 INFO  [stdout] (default task-24) from DAO, listItem name: Baby Changing Bags       -&gt; from DAO, listItem parent name: Baby Changing       from DAO, listItem name: Changing Stations       -&gt; from DAO, listItem parent name: Baby Changing </code></pre>  <p>JSON output -- long recursion embedded objects in wrong way --</p>  <pre><code>      http://pastebin.com/bHwbN1yh  (using paste bin as its too long) </code></pre>  <p>Error</p>  <pre><code>      org.jboss.resteasy.spi.UnhandledException: Response is committed, can't handle exception        Caused by: com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: goo.entities.ListItem["parentListItem"]-&gt;goo.entities.ListItem["childListItemList"]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;goo.entities.ListItem["parentListItem"]        Caused by: java.lang.StackOverflowError           at java.lang.ClassLoader.defineClass1(Native Method) </code></pre>  <p><a href="http://i.stack.imgur.com/ocQRz.png" rel="nofollow"><img src="http://i.stack.imgur.com/ocQRz.png" alt="Database table - looks fine"></a></p>  <p>Database table - looks fine</p>  <p><a href="http://i.stack.imgur.com/Bzjk3.png" rel="nofollow"><img src="http://i.stack.imgur.com/Bzjk3.png" alt="json view of output - partial"></a></p>  <p>json view of output - partial</p>  <p>pom.xml (to see the libs I am using; just to be sure)</p>  <pre><code>    &lt;project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"&gt;          &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;          &lt;groupId&gt;goo&lt;/groupId&gt;         &lt;artifactId&gt;goo&lt;/artifactId&gt;         &lt;packaging&gt;war&lt;/packaging&gt;         &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;         &lt;name&gt;goo&lt;/name&gt;          &lt;build&gt;         &lt;finalName&gt;goo&lt;/finalName&gt;         &lt;plugins&gt;             &lt;plugin&gt;             &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;             &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;             &lt;version&gt;2.5.1&lt;/version&gt;             &lt;inherited&gt;true&lt;/inherited&gt;             &lt;configuration&gt;                 &lt;source&gt;1.7&lt;/source&gt;                 &lt;target&gt;1.7&lt;/target&gt;             &lt;/configuration&gt;             &lt;/plugin&gt;         &lt;/plugins&gt;         &lt;/build&gt;            &lt;dependencyManagement&gt;          &lt;dependencies&gt;             &lt;dependency&gt;             &lt;groupId&gt;org.glassfish.jersey&lt;/groupId&gt;             &lt;artifactId&gt;jersey-bom&lt;/artifactId&gt;             &lt;version&gt;${jersey.version}&lt;/version&gt;             &lt;type&gt;pom&lt;/type&gt;             &lt;scope&gt;import&lt;/scope&gt;             &lt;/dependency&gt;            &lt;/dependencies&gt;         &lt;/dependencyManagement&gt;          &lt;dependencies&gt;         &lt;dependency&gt;             &lt;groupId&gt;org.glassfish.jersey.containers&lt;/groupId&gt;             &lt;artifactId&gt;jersey-container-servlet-core&lt;/artifactId&gt;             &lt;!-- use the following artifactId if you don't need servlet 2.x compatibility --&gt;             &lt;!-- artifactId&gt;jersey-container-servlet&lt;/artifactId --&gt;         &lt;/dependency&gt;         &lt;!-- uncomment this to get JSON support         &lt;dependency&gt;             &lt;groupId&gt;org.glassfish.jersey.media&lt;/groupId&gt;             &lt;artifactId&gt;jersey-media-moxy&lt;/artifactId&gt;         &lt;/dependency&gt;         --&gt;         &lt;dependency&gt;             &lt;groupId&gt;org.glassfish.jersey.media&lt;/groupId&gt;             &lt;artifactId&gt;jersey-media-moxy&lt;/artifactId&gt;             &lt;version&gt;2.22&lt;/version&gt;         &lt;/dependency&gt;          &lt;dependency&gt;             &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;             &lt;artifactId&gt;jackson-annotations&lt;/artifactId&gt;             &lt;version&gt;2.6.2&lt;/version&gt;         &lt;/dependency&gt;           &lt;dependency&gt;             &lt;groupId&gt;javax&lt;/groupId&gt;             &lt;artifactId&gt;javaee-api&lt;/artifactId&gt;             &lt;version&gt;7.0&lt;/version&gt;             &lt;scope&gt;provided&lt;/scope&gt;         &lt;/dependency&gt;          &lt;!--&lt;dependency&gt;--&gt;             &lt;!--&lt;groupId&gt;org.jboss.ejb3&lt;/groupId&gt;--&gt;             &lt;!--&lt;artifactId&gt;jboss-ejb3-ext-api&lt;/artifactId&gt;--&gt;             &lt;!--&lt;version&gt;2.1.0&lt;/version&gt;--&gt;             &lt;!--&lt;scope&gt;provided&lt;/scope&gt;--&gt;         &lt;!--&lt;/dependency&gt;--&gt;          &lt;dependency&gt;             &lt;groupId&gt;org.hibernate&lt;/groupId&gt;             &lt;artifactId&gt;hibernate-core&lt;/artifactId&gt;             &lt;version&gt;${hibernate.version}&lt;/version&gt;             &lt;scope&gt;provided&lt;/scope&gt;            &lt;/dependency&gt;          &lt;dependency&gt;             &lt;groupId&gt;org.postgresql&lt;/groupId&gt;             &lt;artifactId&gt;postgresql&lt;/artifactId&gt;             &lt;version&gt;9.3-1103-jdbc41&lt;/version&gt;         &lt;/dependency&gt;          &lt;dependency&gt;             &lt;groupId&gt;com.sun.jersey&lt;/groupId&gt;             &lt;artifactId&gt;jersey-core&lt;/artifactId&gt;             &lt;version&gt;1.19&lt;/version&gt;         &lt;/dependency&gt;          &lt;dependency&gt;             &lt;groupId&gt;javax.xml.bind&lt;/groupId&gt;             &lt;artifactId&gt;jaxb-api&lt;/artifactId&gt;             &lt;version&gt;2.2.12&lt;/version&gt;         &lt;/dependency&gt;           &lt;/dependencies&gt;         &lt;properties&gt;         &lt;jersey.version&gt;2.21&lt;/jersey.version&gt;         &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;         &lt;jdk.version&gt;1.7&lt;/jdk.version&gt;         &lt;hibernate.version&gt;5.0.1.Final&lt;/hibernate.version&gt;         &lt;/properties&gt;     &lt;/project&gt; </code></pre>  <p><strong>Update</strong></p>  <p>I used <code>@JsonBackReference</code> and <code>@JsonManagedReference</code> annotations but it just ignores the childListIemList</p>  <pre><code>    @Entity     public class ListItem {         @Id         @GeneratedValue(strategy = GenerationType.IDENTITY)         private Long id;         private String name;         @JsonManagedReference         @ManyToOne (cascade = CascadeType.ALL, fetch = FetchType.EAGER )         private ListItem parentListItem;         @JsonBackReference         @OneToMany (mappedBy = "parentListItem",  cascade = CascadeType.ALL, fetch = FetchType.EAGER )         private List&lt;ListItem&gt; childListItemList; </code></pre>