<p>I've written a class that implements ClientResponseFilter.  I then .register() the filter with a Client.</p>  <p>Filter:</p>  <pre><code>public class MyFilter implements ClientResponseFilter {      public MyFilter() {         // Initialize some stuff     }      public void filter(ClientRequestContext requestContext, ClientResponseContext responseContext) throws IOException {         System.out.println("Hello filter");         // Do things         Client c = requestContext.getClient();         // Make a request using Client c     } } </code></pre>  <p>Client:</p>  <pre><code>public class MyApplication {      public static void main(String[] args) {         Client c = ClientBuilder.newBuilder().build();         c.register(&lt;other_classes/instances&gt;);         ...         c.register(new MyFilter());     } } </code></pre>  <p>I have a scenario where I want to reuse the Client from inside the filter to create another request.  I can get the original Client used from the ClientRequestContext .getClient() method, however because it has the filter registered it acts recursively.  I couldn't find anything in the documentation about de-registering an instance or class from the Client.  Any ideas?</p>