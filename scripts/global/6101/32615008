<p>How can I configure the Apache CXF <a href="http://svn.apache.org/repos/asf/cxf/trunk/rt/rs/security/cors/src/main/java/org/apache/cxf/rs/security/cors/CrossOriginResourceSharingFilter.java" rel="nofollow">CrossOriginResourceSharingFilter</a> without changing the source code (annotated class or beans.xml)?</p>  <p>In the JAX-RS-CORS example the configuration is hard-coded: </p>  <pre><code>@GET @CrossOriginResourceSharing(      allowOrigins = { "http://area51.mil:31415" },       allowCredentials = true,       exposeHeaders = { "X-custom-3", "X-custom-4" } ) @Produces("text/plain") @Path("/annotatedGet/{echo}") public String annotatedGet(@PathParam("echo") String echo) {     return echo; } </code></pre>  <p>I use beans.xml to configure the <code>allowOrigins</code> property:</p>  <pre><code>&lt;bean id="cors-filter" class="org.apache.cxf.rs.security.cors.CrossOriginResourceSharingFilter"&gt;     &lt;property name="allowOrigins"&gt;         &lt;list&gt;             &lt;value&gt;myserver1&lt;/value&gt;             &lt;value&gt;myserver2&lt;/value&gt;         &lt;/list&gt;     &lt;/property&gt; &lt;/bean&gt; </code></pre>  <p>I thought I could get the property from JNDI, but it is not allowed to add a <code>List</code> (see <a href="http://download.oracle.com/otndocs/jcp/servlet-2.5-mrel2-eval-oth-JSpec/" rel="nofollow">Servlet Specification 2.5</a>).</p>  <pre><code>&lt;bean id="cors-filter"     class="org.apache.cxf.rs.security.cors.CrossOriginResourceSharingFilter"&gt;     &lt;property name="allowOrigins"&gt;&lt;         &lt;jee:jndi-lookup jndi-name="CORS/origins"/&gt;     &lt;/property&gt; &lt;/bean&gt; </code></pre>  <p>What is the intended/preferred way to configure the CrossOriginResourceSharingFilter in a reusable WAR?</p>