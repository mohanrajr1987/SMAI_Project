<p><strong>Awaiting answers.</strong></p>  <p>I've a JAX-RS controller (Jersey 2.21 on WildFly 9.0).</p>  <pre><code>@Named @Path("v1/populateList/") public class PopulateDataController {      @EJB     ListItemService listItemService;      @GET     @Path("auto")     @Produces(MediaType.TEXT_PLAIN)     public String populateList(){         listItemService.populateList();         return "done";     } } </code></pre>  <p>The below <code>ListItemService</code> no-interface EJB is successfully injected in above JAX-RS controller.</p>  <pre><code>@Stateless public class ListItemService {      @EJB     ListItemDao listItemDao;      public void populateList(){         listItemDao.persist();     } } </code></pre>  <p>However, the below <code>ListItemDaoImpl</code> interface-EJB is not in turn injected in above no-interface EJB.</p>  <pre><code>@Stateless public class ListItemDaoImpl implements ListItemDao{      @PersistenceContext(unitName = "pu")     private EntityManager em;      public void persist(){         ListItem listItem = new ListItem();         listItem.setLevel(1);         listItem.setName("item1");         em.persist(listItem);     } } </code></pre>  <p>The <code>listItemDao</code> remains <code>null</code> in <code>populateList()</code> method of <code>ListItemService</code>, causing <code>NullPointerException</code>.</p>  <p>How is this caused and how can I solve it?</p>  <p><strong>--- Edit and update ---</strong></p>  <p>I tried to make a Singleton bean to run on startup (to check my app logic). It works fine without JAX RS. So its clear that the <strong>problem is not with EJB but JAX RS.</strong> (Do correct me if wrong)</p>  <pre><code>    @Singleton     @Startup     public class TestController {         @EJB         ListItemService listItemService;          @PostConstruct         void test(){         System.out.println("starting..........");         listItemService.populateList();         System.out.println("ending..........");         }      } </code></pre>