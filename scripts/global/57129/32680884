<p>As a proof-of-concept while teaching myself AngularJS, I'm attempting to emulate the functionality of the jQuery Fancybox plugin.  I'm writing it as a directive in coffeescript.</p>  <pre><code>getOffset = (element)-&gt;     rect = element.getBoundingClientRect()     doc = element &amp;&amp; element.ownerDocument     docElement = doc.documentElement      {         top: (rect.top + (window.pageYOffset || docElement.scrollTop) - (docElement.clientTop || 0)) + 'px',         left: (rect.left + (window.pageXOffset || docElement.scrollLeft) - (docElement.clientLeft || 0)) + 'px';     }  class ModalDialogController     constructor: ($scope, $element) -&gt;         @showDialog = false         @closeOnClick = @closeOnClick || true         @showClose = @showClose || true         @showOverlay = @showOverlay || true         @isCallout = @isCallout || false         @calloutPosition = @calloutPosition || 'auto'      show: (args) -&gt;         if args.event             @offset = getOffset(args.event.target)         if args.url             @src = args.url          @showDialog = true;      clickOverlay: -&gt;         if @closeOnClick             @showDialog = false;                hide: -&gt;         @showDialog = false;  baseScope = {     dcStyle: '@',     dcClass: '@',     show: '=dcShow',     hide: '=dcHide',     closeOnClick: '@dcCloseOnClick',     showClose: '@dcShowClose',     isCallout: '=dcIsCallout',     calloutPosition: '@dcCalloutPosition',     dcOnClose: '&amp;',     src: '@' }  angular.module 'dcModalDialogModule', [] .directive 'dcModalDialog', -&gt;     controller: ModalDialogController,     controllerAs: 'dcModalDialogCtl',     bindToController: true,     link: (scope, element, attrs)-&gt;,     replace: true,     transclude: true     scope: baseScope,     template: """ &lt;div ng-show="dcModalDialogCtl.showDialog"&gt;     &lt;div class="overlay" ng-click="dcModalDialogCtl.clickOverlay()" ng-show="dcModalDialogCtl.showOverlay"&gt;&lt;/div&gt;     &lt;div class="{{dcModalDialogCtl.dcClass}} callout-{{dcModalDialogCtl.calloutPosition}} dc-modal-dialog" style="{{dcModalDialogCtl.dcStyle}}" ng-style="{left: dcModalDialogCtl.offset.left ? dcModalDialogCtl.offset.left : null, top: dcModalDialogCtl.offset.top ? dcModalDialogCtl.offset.top : null}"&gt;         &lt;div ng-click="dcModalDialogCtl.hide()" ng-show="dcModalDialogCtl.showClose" class="close-button"&gt;&lt;i class="fa fa-times-circle-o"&gt;&lt;/i&gt;&lt;/div&gt;         &lt;ng-transclude&gt;&lt;/ng-transclude&gt;     &lt;/div&gt; &lt;/div&gt; """     .directive 'dcModalIframe', -&gt;     controller: ModalDialogController,     controllerAs: 'dcModalDialogCtl',     bindToController: true,     link: (scope, element, attrs)-&gt;,     replace: true,     scope: baseScope,     template: """ &lt;div ng-show="dcModalDialogCtl.showDialog"&gt;     &lt;div class="overlay" ng-click="dcModalDialogCtl.clickOverlay()" ng-show="dcModalDialogCtl.showOverlay"&gt;&lt;/div&gt;     &lt;div class="{{dcModalDialogCtl.dcClass}} callout-{{dcModalDialogCtl.calloutPosition}} dc-modal-dialog" ng-style="{left: dcModalDialogCtl.offset.left ? dcModalDialogCtl.offset.left : null, top: dcModalDialogCtl.offset.top ? dcModalDialogCtl.offset.top : null}"&gt;         &lt;div ng-click="dcModalDialogCtl.hide()" ng-show="dcModalDialogCtl.showClose" class="close-button"&gt;&lt;i class="fa fa-times-circle-o"&gt;&lt;/i&gt;&lt;/div&gt;         &lt;iframe ng-src="{{dcModalDialogCtl.src}}" class="{{dcModalDialogCtl.dcClass}} dc-modal-iframe" style="{{dcModalDialogCtl.dcStyle}}"&gt;&lt;/iframe&gt;     &lt;/div&gt; &lt;/div&gt; """ </code></pre>  <p>The directive should be inserted into the page as </p>  <pre><code>&lt;dc-modal-dialog dc-callout-position="bottom-right"&gt;&lt;p&gt;Hello World&lt;/p&gt;&lt;/dc-modal-dialog&gt; </code></pre>  <p>I would like to be able to add a button or hyperlink in the page that will then call the show() method and actually show the dialog, but I can't figure out how to bind it properly so that it gets called.  If I move the show function into the constructor, then it's called properly, but I get the feeling that's not how I'm supposed to define my functions.</p>