<p>I have a situation similar to <a href="http://stackoverflow.com/questions/4405336/how-to-copy-contents-of-one-canvas-to-another-canvas-locally">this question about copying data between canvases</a>, but in my case I think I'm running into issues with the canvas engine itself and I'd like some understanding/guidance on what I might be doing wrong. </p>  <p>I'm creating an offscreen canvas with the same width and height as the onscreen canvas. </p>  <pre><code>  @offscreenCanvas = document.createElement('canvas')    # assign same dimensions as onscreen canvas   @offscreenCanvas.width  = canvas.width   @offscreenCanvas.height = canvas.height </code></pre>  <p>Then I'm drawing from the offscreen canvas to the onscreen one like this:</p>  <pre><code># grab the width and height of the canvas { width, height } = @canvasElement { x, y } = offset  # copy image from layer into canvas @context.drawImage    @offscreenContext.canvas, -x, -y, width, height, -x, -y, width, height </code></pre>  <p>The offset is also the argument into a function which translates the "live" canvas context before all this drawing takes place. </p>  <pre><code>@context.save() @context.translate(@offset.x,@offset.y) @renderer.draw(world, @offset) @context.restore() </code></pre>  <p>In other words we're trying to grab the section of the offscreen context that corresponds to the translated offset of the on-screen context. </p>  <p>This has some issues. When the offset moves the 'camera' far from the origin, you encounter the 'edges' of the offscreen canvas.</p>  <p><a href="http://i.stack.imgur.com/3MuwW.png" rel="nofollow"><img src="http://i.stack.imgur.com/3MuwW.png" alt="visual indication of the problem with the edge of the offscreen canvas"></a></p>  <p>Note that when I do the same rendering operations against the onscreen canvas, the elements are fine. </p>  <p>It seems like the offscreen canvas isn't quite as good about handling drawing off its "edges" the same way the canvas is (silently ignores drawing commands outside of its defined region.) In other words, the offscreen canvas doesn't seem to reflect any drawing I've done above or to the left of <code>[0,0]</code> (or alternatively, below or to the right of <code>[width,height]</code>.) Are there ways of accommodating this? </p>  <hr>  <p>Things I've tried:</p>  <ul> <li>adjusting up the width and height of the offscreen canvas (this unfortunately seems to have a hard-to-predict impact on coordinates)</li> </ul>