<p>I have very strange issue. I use <code>jasmine 2.0</code>, <code>react 0.13.3</code>, <code>react-router 0.13.3</code> and other packages. I have a test suite and it can't <code>findRenderedDOMComponentWithTag()</code>. Please consider exact example:</p>  <pre><code>React = require('react') TestUtils = require('react/addons.js').addons.TestUtils ReactRouterContext = require('../../helpers/react_router_context_helper.coffee')  NewSession = require('../../../../app/coffee/components/sessions/new.coffee') subject = ReactRouterContext(NewSession)  describe 'NewSession', -&gt;   it 'should send the query after clicking on the button', -&gt;     instance = TestUtils.renderIntoDocument(&lt;subject /&gt;)     h3 = TestUtils.findRenderedDOMComponentWithTag(instance, 'h3') # can't find at least one h3 tag    it 'should render wrong login/password on error', -&gt;     pending()    it 'should process user after successful login', -&gt;     # localStorage     # alt.js     # redirect     pending() </code></pre>  <p>It seems very interesting because there's is alert method in component render function, but nothing is alerting</p>  <pre><code>React = require('react') ReactBootstrap = require('react-bootstrap')  Row = ReactBootstrap.Row Col = ReactBootstrap.Col Input = ReactBootstrap.Input Button = ReactBootstrap.Button  WebUtils = require('../../web_utils.coffee') SessionActions = require('../../actions/session_actions.coffee')  ErrorMessage = require('../error_message.coffee')  module.exports = React.createClass   contextTypes: router: React.PropTypes.func   getInitialState: -&gt;     { error_text: '' }   handleSubmit: (e) -&gt;     e.preventDefault()     WebUtils.query       path: 'sessions'       data: @getFormData()       type: 'POST'       callback: ((result) -&gt;         if result.status == 'success'           SessionActions.create(result)           @context.router.transitionTo('/')         else           @setState error_text: 'Неправильные логин и/или пароль'       ).bind(this)   getFormData: -&gt;     {       login: @refs.login.getValue(),       password: @refs.password.getValue()     }   render: -&gt;     alert 'hh'     &lt;form onSubmit={@handleSubmit}&gt;       &lt;Row&gt;         &lt;Col md={6} mdOffset={3} className='text-center'&gt;           &lt;h3&gt;Войти в систему&lt;/h3&gt;            { &lt;ErrorMessage text={@state.error_text} /&gt; if !!@state.error_text }            &lt;Input type='text' placeholder='Введите Ваш логин' ref='login' autoFocus /&gt;           &lt;Input type='password' placeholder='Пароль' ref='password' /&gt;           &lt;Button type='submit' bsStyle='success'&gt;Вход&lt;/Button&gt;         &lt;/Col&gt;       &lt;/Row&gt;     &lt;/form&gt; </code></pre>  <p>--</p>  <pre><code># react_router_context_helper.coffee React = require('react') objectAssign = require('object-assign')  module.exports = (Component, props, stubs) -&gt;   RouterStub = -&gt;   objectAssign RouterStub, {     makePath: -&gt;     makeHref: -&gt;     transitionTo: -&gt;     replaceWith: -&gt;     goBack: -&gt;     getCurrentPath: -&gt;     getCurrentRoutes: -&gt;     getCurrentPathname: -&gt;     getCurrentParams: -&gt;     getCurrentQuery: -&gt;     isActive: -&gt;     getRouteAtDepth: -&gt;     setRouteComponentAtDepth: -&gt;   }, stubs    React.createClass     childContextTypes:       router: React.PropTypes.func       routeDepth: React.PropTypes.number     getChildContext: -&gt;       {         router: RouterStub         routeDepth: 0       }     render: -&gt;       React.createElement Component, props </code></pre>