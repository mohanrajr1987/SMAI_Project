<p>Is it good style in Scala to "abuse" the unapply method for pattern matching? What I wanted to do, is matching an object against another, and constructing the other object. Since I am fairly new in Scala, I wound up with the following solution. But it doesnt seem really right to use the unapply methode like this, since it is intended as an extractor. Could someone please give me feedback on this?</p>  <pre><code> object Poker {     def unapply(hand: Hand): Option[Poker] = if(hand.countValueGroups().exists(_._2 == 4)) Some(new Poker(hand)) else None   }   val h = Hand("AC As AH Ad 2h")   h match {    case Poker(han) =&gt; println("POKER!!!"+han)    case _ =&gt; println("?????")  } </code></pre>