<p>In Scala we have a by-name-parameters where we can write</p>  <pre><code>def foo[T](f: =&gt; T):T = {    f // invokes f     } // use as: foo(println("hello")) </code></pre>  <p>I now want to do the same with an array of methods, that is I want to use them as: </p>  <pre><code>def foo[T](f:Array[ =&gt; T]):T = {     // does not work    f(0) // invokes f(0)              // does not work } foo(println("hi"), println("hello")) // does not work </code></pre>  <p>Is there any way to do what I want? The best I have come up with is:</p>  <pre><code>def foo[T](f:() =&gt; T *):T = {    f(0)() // invokes f(0)     } // use as: foo(() =&gt; println("hi"), () =&gt; println("hello")) </code></pre>  <p>or </p>  <pre><code>def foo[T](f:Array[() =&gt; T]):T = {     f(0)() // invokes f(0)     } // use as:  foo(Array(() =&gt; println("hi"), () =&gt; println("hello"))) </code></pre>