<p>What might be the most idiomatic way for turning any scala collection into an <code>Option</code> of the same collection, whereas when the collection is empty, the option would be <code>None</code> and otherwise just a <code>Some</code> of the original?</p>  <p>Oh, and without making scala create a memory copy of the entire collection for that humble conversion.</p>  <p><code>Option.apply</code> is suited for translating <code>null</code> to <code>Option</code> of type <code>None</code>, a nice legacy-wrangling utility, but useless for idiomatic scala seeking the following semantics:</p>  <pre><code>val some = Option(List(3,4,5)) val none = Option(List()) // seeking None, rather than Some(List()) here </code></pre>