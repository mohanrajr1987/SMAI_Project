<p><strong>Requirement</strong>: Let the user download a file when they click a button in the ReactJS page. The react application talks to loopback which then gets the file from GCS. I have a requirement to let the user download - .pdf, .doc, .docx, .txt and .html files.</p>  <p><strong>Problem</strong>: The below code works when I try to download .txt and .html files.  The others don't work. I can see the data coming across for .pdf, .doc, .docx to the browser but the applications don't display the data properly.</p>  <h3>In Loopback API:</h3>  <pre><code>var concat = require('concat-stream'); var gcloud = require('gcloud');  var gcs = gcloud.storage({   keyFilename : './keyfile.json',   projectId : 'PROJECT_ID' });  UploadActivity.downloadFilesFromGCS = function(ctx, res, cb){   var fileDetails = ctx.req.body;   var files = [];   var bucket = gcs.bucket(config.cloudStorage.for_download);    async.eachSeries(fileDetails, function(fileDetail, eachFileCB){     var fileName = "1999782_215_3_110669967104_Micth.doc";     var remoteFile = bucket.file(fileName);     remoteFile.createReadStream()       .pipe(concat(function(buffer){         var fileObj = {};         fileObj.name = fileDetail.fileName;          fileObj.data = buffer;         files.push(fileObj);         eachFileCB(null);       })     );   }, function(){     console.log('ending the response.');     cb(null, files);   }); } </code></pre>  <h3>In my Reactjs:</h3>  <pre><code>   var request = require('superagent');    .....     request     .post(api.BASE_URL + api.DOWNLOAD)     .set('Cross-Domain', 'true')     .set('Cache', 'false')     .type('json')     .send(fileDetails)     .end(function(err, res) {         if (res) {             var fileData = res.body.files[0];             //below works with text/plain             var file = String.fromCharCode.apply(null, new Uint16Array(fileData.data.data));             console.log(file);             var blob = new Blob([file], { type: 'application/msword' });             var resURL = window.URL.createObjectURL(blob);             var tempLink = document.createElement('a');             tempLink.href = resURL;             tempLink.setAttribute('download', fileData.name);             tempLink.click();         } else {             console.log('Something went wrong. Err: ' + err);         }     }); </code></pre>  <p>I understand this has to do with the way data is being sent across the wire and how it is being put back in the browser.  Any help is greatly appreciated.</p>