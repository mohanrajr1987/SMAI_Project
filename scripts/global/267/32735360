<p>I have a problem when I updated Xcode 7 and tested application on iOS 9.0 simulator. iOS 7, 8 is good. During hiding keyboard, trying to show alert view (<code>UIAlertView</code>) makes weird result.</p>  <p><strong>PROBLEM:</strong></p>  <p>I want and iOS 7,8 do:</p>  <p>hide keyboard -> show alert view -> dismiss alert view</p>  <p>iOS 9 do:</p>  <p>hide keyboard -> show alert view -> dismiss alert view -> show keyboard -> hide keyboard</p>  <p><strong>TRY:</strong></p>  <ul> <li><p>when i tried to insert below code, result is good but i think this is bad code. because 1 sec may not always good.</p>  <p>dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(1 * NSEC_PER_SEC)),          dispatch_get_main_queue(), ^{             // show alert         });</p></li> <li><p>And I tried to use <code>UIAlertController</code>. also good result is returned. but i have to consider iOS 7. i want to use <code>UIAlertView</code> too.</p></li> </ul>  <p><strong>Question:</strong></p>  <p>i wonder why only iOS 9 do this weird situation and is this problem related to <code>UIWindow</code>. or best solution..</p>  <p>(I'm not sure but know a little about that <code>UIAlertView</code> is added on  <code>_UIAlertControllerShimPresenterWindow</code> or <code>_UIModalItemHostingWindow</code>. UIAlertController is added on <code>UIWindow</code>. is right?)</p>  <p><strong>SOURCE:</strong></p>  <pre><code>#import &lt;UIKit/UIKit.h&gt; @interface ViewController : UIViewController @end  @interface ViewController () @end  UITextField *textField; UIButton *button;  @implementation ViewController  - (void)viewDidLoad {     [super viewDidLoad];      textField = [[UITextField alloc] initWithFrame:CGRectMake(50, 50, 150, 50)];     [textField setPlaceholder:@"placeholder"];     [textField setBackgroundColor:[UIColor redColor]];     [self.view addSubview:textField];      button = [[UIButton alloc] initWithFrame:CGRectMake(50, 100, 150, 50)];     [button setTitle:@"button" forState:UIControlStateNormal];     [button setBackgroundColor:[UIColor blueColor]];     [button addGestureRecognizer:[[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(buttonClicked)]];     [self.view addSubview:button];      [textField becomeFirstResponder];  }  - (void)buttonClicked {     [textField endEditing:YES];     UIAlertView *alertview = [[UIAlertView alloc] initWithTitle:@"title" message:nil delegate:self cancelButtonTitle:@"cancel" otherButtonTitles:nil, nil];     [alertview show]; }  @end </code></pre>