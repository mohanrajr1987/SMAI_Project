<p>I'm using :</p>  <ol> <li>apache-activemq-5.12.0</li> <li>spring-batch-core-3.0.5.RELEASE</li> <li>spring-jms-3.0.5.RELEASE</li> </ol>  <p>Here's my situation :</p>  <p>I have a job with 2 steps. The first step reads a DLQ (dead-letter queue) and writes all messages in the "default" queue (ie. DLQ.mail_queue > mail_queue). The second step reads the "default" queue and send the messages through a writer.</p>  <p>My problem :</p>  <p>If (and only if) the DLQ is empty, the second step can't find any message in the "default" queue, no matter how many there are.</p>  <p>My (simplified) job configuration :</p>  <pre><code>&lt;batch:job id="jobQueueOutMail"&gt;     &lt;batch:step id="ErrorReset" next="Send"&gt;         &lt;batch:tasklet transaction-manager="transactionManager"&gt;             &lt;batch:chunk commit-interval="1" reader="jmsDLQReader" writer="jmsDefaultQueueWriter" /&gt;         &lt;/batch:tasklet&gt;    &lt;/batch:step&gt;     &lt;batch:step id="Send"&gt;         &lt;batch:tasklet transaction-manager="transactionManager"&gt;             &lt;batch:chunk commit-interval="1" reader="jmsDefaultQueueReader" writer="mailSender" /&gt;         &lt;/batch:tasklet&gt;    &lt;/batch:step&gt; &lt;/batch:job&gt; </code></pre>  <p>My readers (with their own queues) :</p>  <pre><code>&lt;bean class="org.springframework.batch.item.jms.JmsItemReader"&gt;       &lt;property name="itemType" value="xx.xx.xx.Message"&gt;&lt;/property&gt;       &lt;property name="jmsTemplate"&gt;            &lt;bean class="org.springframework.jms.core.JmsTemplate" parent="jmsTemplate"&gt;                 &lt;property name="defaultDestination"&gt;                      &lt;bean class="org.apache.activemq.command.ActiveMQQueue"&gt;                           &lt;property name="physicalName" value="${batch.queue.mail.queue}"&gt;&lt;/property&gt;                     &lt;/bean&gt;                 &lt;/property&gt;            &lt;/bean&gt;       &lt;/property&gt;  &lt;/bean&gt; </code></pre>  <p>Here's what my <code>JmsTemplate</code> looks like :</p>  <pre><code>&lt;bean class="org.springframework.jms.core.JmsTemplate" id="jmsTemplate"&gt;     &lt;property name="connectionFactory"&gt;         &lt;bean class="org.apache.activemq.ActiveMQConnectionFactory"&gt;             &lt;property name="brokerURL" value="${batch.queue.broker.url}"&gt;&lt;/property&gt;             &lt;property name="redeliveryPolicy"&gt;                 &lt;bean class="org.apache.activemq.RedeliveryPolicy"&gt;                     &lt;property name="maximumRedeliveries" value="0"&gt;&lt;/property&gt;                 &lt;/bean&gt;             &lt;/property&gt;         &lt;/bean&gt;     &lt;/property&gt;     &lt;property name="messageConverter"&gt;         &lt;bean class="org.springframework.jms.support.converter.SimpleMessageConverter"&gt;&lt;/bean&gt;     &lt;/property&gt;     &lt;property name="receiveTimeout" value="10" /&gt;     &lt;property name="sessionTransacted" value="true" /&gt;     &lt;property name="sessionAcknowledgeModeName" value="CLIENT_ACKNOWLEDGE" /&gt; &lt;/bean&gt; </code></pre>  <p>My queue configuration (in activemq.xml) :</p>  <pre><code>&lt;policyEntry queue="&gt;" producerFlowControl="true" memoryLimit="1mb"&gt;     &lt;deadLetterStrategy&gt;         &lt;individualDeadLetterStrategy queuePrefix="DLQ." useQueueForQueueMessages="true" /&gt;     &lt;/deadLetterStrategy&gt; &lt;/policyEntry&gt; </code></pre>  <p>What I'm asking is : Is there any reason (parallel processing or locks) preventing a JmsItemReader from reading a ActiveMQQueue if this queue was just written to (even if it consisted of 0 message)? Is there something else I'm doing wrong?</p>  <p>Thanks a lot.</p>