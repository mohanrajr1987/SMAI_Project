<p>When creating a model with a <code>models.varchar(...)</code> field, a <code>varchar_pattern_ops</code> index is being created.</p>  <p>This is the table generated in postgresql</p>  <pre><code>              Table "public.logger_btilog"       Column      |           Type           | Modifiers  ------------------+--------------------------+-----------  md5hash          | text                     |   id               | integer                  | not null Indexes:     "logger_btilog_pkey" PRIMARY KEY, btree (id)     "logger_btilog_md5hash_6454d7bb20588b61_like" btree (md5hash varchar_pattern_ops) </code></pre>  <p>I want to remove that <code>varchar_pattern_ops</code> index in a migration, and add a hash index in that field.</p>  <p>I tried doing this:</p>  <pre><code># models.py class Btilog(models.Model):     md5hash = models.TextField(db_index=False)     [...] </code></pre>  <p>And in migration also foce adding <code>db_field=False</code></p>  <pre><code># 0013_migration.py # -*- coding: utf-8 -*- from __future__ import unicode_literals  from django.db import models, migrations   class Migration(migrations.Migration):      dependencies = [         ('logger', '0014_btilog_id'),     ]      operations = [         # this should remove all indexes for md5hash, but it does not work         migrations.AlterField(             model_name='btilog',             name='md5hash',             field=models.TextField(null=True, blank=True, db_index=False),         ),         migrations.RunSQL(             "create index logger_btilog_md5hash_hashindex on logger_btilog using hash(md5hash);",             "drop index logger_btilog_md5hash_hashindex;"         ), ] </code></pre>  <p>After running the migrations, this are the indexes in the database</p>  <pre><code>                              relation                              |  size    --------------------------------------------------------------------+---------  public.logger_btilog                                               | 7185 MB  public.logger_btilog_md5hash_6454d7bb20588b61_like                 | 1442 MB  public.logger_btilog_md5hash_hashindex                             | 1024 MB  public.logger_btilog_pkey                                          | 548 MB </code></pre>  <p>Note that <code>public.logger_btilog_md5hash_6454d7bb20588b61_like</code> is the index I want to delete. This index is being added automatically by django, see <a href="https://code.djangoproject.com/ticket/12234" rel="nofollow">this</a></p>  <p>More info on that index</p>  <pre><code>vtfx=# \d logger_btilog_md5hash_6454d7bb20588b61_like Index "public.logger_btilog_md5hash_6454d7bb20588b61_like"  Column  | Type | Definition  ---------+------+------------  md5hash | text | md5hash btree, for table "public.logger_btilog" </code></pre>  <p>Footnote: I'm not confused about the usage of a hash index, I only want to do <code>=</code> (strictrly equal) <code>where</code> searches in <code>md5hash</code> field, then (casually) a <code>hash</code> index would be the fastest and will occupy less space than a <code>btree</code> index (django's default)</p>