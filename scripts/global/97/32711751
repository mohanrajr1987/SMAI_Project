<p>I have a model called Article. This model has attribute called duration which is a string. The duration can be morning, afternoon, evening and night. </p>  <p>For example, article object looks like this:</p>  <pre><code>#&lt;Article id: 1, created_at: "2015-09-22 08:00:08", updated_at: "2015-09-22 08:00:08", duration: "morning"&gt; </code></pre>  <p>Since the duration has similar properties, I create a base class called duration and the inherited classes as morning, afternoon, evening and night. </p>  <p>In a duration there can be many articles. But a single article can have only one duration. So, I have <code>has_many</code> and <code>belongs_to</code> association:</p>  <pre><code>app/model/duration.rb class Duration &lt; ActiveRecord::Base   has_many :articles end  app/model/article.rb class Article &lt; ActiveRecord::Base   belongs_to :duration end </code></pre>  <p>Other inherited classes are:</p>  <pre><code>app/model/duration/morning.rb class Morning &lt; Duration end </code></pre>  <p>and so on for <code>afternoon.rb</code>, <code>evening.rb</code> and <code>night.rb</code>.</p>  <p>I already have the migration to create durations table. To add the field <code>type</code> to duration, I have a migration called <code>add_type_to_duration.rb</code></p>  <pre><code>AddTypeToDuration &lt; ActiveRecord::Migration   def change     add_column :durations, :type, :string   end  end </code></pre>  <p>I have another migration file called <code>add_duration_ref_to_articles.rb</code> to add reference</p>  <pre><code>class AddDurationRefToArticles &lt; ActiveRecord::Migration   def change     add_reference :articles, :duration, index:true   end end </code></pre>  <p>I have another migration to create the new durations in add_initial_durations.rb</p>  <pre><code>class AddInitialDurations &lt; ActiveRecord::Migration   def change     Morning.create     Afternoon.create     Evening.create     Night.create    end end </code></pre>  <p>Now I want to update the old data to adapt according to new migrations. So, I have another migration called <code>update_articles_to_have_duration.rb</code></p>  <pre><code>class UpdateArticlesToHaveDuration &lt; ActiveRecord::Migration   def change     morning = Duration.find_by_type("Morning")     Article.where(duration: "morning").find_each do |article|       article.update!(duration_id: morning.id)     end   end end </code></pre>  <p>Now when I run the migrations all the articles, that had <code>duration = morning</code>, now have <code>duration_id = nil</code>. However, when I run the last migration again with <code>rake db:migrate:redo step:1</code>, then articles have correct duration_id. I think somehow the migration is not run properly. However, I don't get any error while running them. Can anyone please let me know what am I doing wrong here?</p>  <p>Thanks for the help.</p>