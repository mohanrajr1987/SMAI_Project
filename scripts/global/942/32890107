<p>I like using the python logging module because it standardizes my application and easier to get metrics. The problem I face is, for every application (or file.py) I am keep putting this on top of my code.</p>  <pre><code>logger = logging.getLogger(__name__) if not os.path.exists('log'):     os.makedirs('log')  logName=time.strftime("%Y%m%d.log")     hdlr = logging.FileHandler('log/%s'%(logName))  logger.setLevel(logging.INFO) ch = logging.StreamHandler() ch.setLevel(logging.DEBUG) formatter = logging.Formatter('%(asctime)s - %(name)s - %(funcName)s %(levelname)s - %(message)s')  ch.setFormatter(formatter) hdlr.setFormatter(formatter)  logger.addHandler(ch) logger.addHandler(hdlr) </code></pre>  <p>This is tedious and repetitive. Is there a better way to do this? How do people log for a large application with multiple modules? </p>