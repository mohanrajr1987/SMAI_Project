<p>I have a lot of method calls that look like this:</p>  <pre><code>log.info("{}: Initiated", this); </code></pre>  <p>when I would rather they just looked like this:</p>  <pre><code>log.info("Initiated"); </code></pre>  <p>while still letting me know which instance logged the event and not just the class. If I create a convenience method  I lose location information, i.e. the logs show that the calling method is the convenience method and not the method from which it was called.</p>  <p>I considered extending <code>LoggerWrapper</code> but I still have to override a lot of methods and it seems like overkill for such a simple use case. It would also lead to an individual logger for each instance which seems like notable overhead.</p>  <p>An MDC seems close to what I want but as I understand it it only shows specific information for each thread, not for objects.</p>  <p>I feel like I'm missing something. Is there an easy way to do this? Isn't this a common requirement?</p>