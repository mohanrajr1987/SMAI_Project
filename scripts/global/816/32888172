<p>I am new at Yii framework and I am facing this problem that when i am creating search model to add filters and sorting, it's not working, i already have tried this solution <a href="http://stackoverflow.com/questions/32723132/yii2-activedataprovider-invalid-argument-supplied-for-foreach">Yii2 ActiveDataProvider - Invalid argument supplied for foreach()</a> and even generated the new models and controller but the result is same, it did not work.</p>  <p>Please have a look at the code and kindly tell me what i am doing wrong.</p>  <p>Controller</p>  <pre><code>namespace backend\controllers;  use Yii; use backend\models\Contacts; use backend\models\ContactsSearch; use yii\web\Controller; use yii\web\NotFoundHttpException; use yii\filters\VerbFilter;  /**  * ContactsController implements the CRUD actions for Contacts model.  */ class ContactsController extends Controller {     ...      /**      * Lists all Contacts models.      * @return mixed      */     public function actionIndex()     {         $searchModel = new ContactsSearch();         $dataProvider = $searchModel-&gt;search(Yii::$app-&gt;request-&gt;queryParams);          return $this-&gt;render('index', [             'searchModel' =&gt; $searchModel,             'dataProvider' =&gt; $dataProvider         ]);     }      ... } </code></pre>  <p>Model</p>  <pre><code>namespace backend\models;  use Yii; use backend\models\User;  /**  * This is the model class for table "user_contacts".  *  * @property string $id  * @property string $user_id  * @property string $contact_id  * @property string $created_on  * @property string $modified_on  *  * @property User $contact  * @property User $user  */ class Contacts extends \yii\db\ActiveRecord {     /**      * @inheritdoc      */     public static function tableName()     {         return 'user_contacts';     }      /**      * @inheritdoc      */     public function rules()     {         return [             [['user_id', 'contact_id'], 'integer'],             [['created_on', 'modified_on'], 'safe'],             [['user_id', 'contact_id'], 'unique', 'targetAttribute' =&gt; ['user_id', 'contact_id'], 'message' =&gt; 'The combination of User ID and Contact ID has already been taken.']         ];     }      /**     * @inheritdoc     */     public function attributeLabels()     {         return [             'id' =&gt; Yii::t('app', 'ID'),             'user_id' =&gt; Yii::t('app', 'User ID'),             'contact_id' =&gt; Yii::t('app', 'Contact ID'),             'created_on' =&gt; Yii::t('app', 'Created On'),             'modified_on' =&gt; Yii::t('app', 'Modified On')         ];     }      /**      * @return \yii\db\ActiveQuery      */     public function getContact()     {         return $this-&gt;hasOne(User::className(), ['id' =&gt; 'contact_id']);     }      /**      * @return \yii\db\ActiveQuery      */     public function getUser()     {         return $this-&gt;hasOne(User::className(), ['id' =&gt; 'user_id']);     }      /**      * @inheritdoc      * @return ContactsSearch the active query used by this AR class.      */     public static function find()     {         return new ContactsSearch(get_called_class());     } } </code></pre>  <p>Search model</p>  <pre><code>namespace backend\models;  use Yii; use yii\base\Model; use yii\data\ActiveDataProvider; use backend\models\Contacts;  /**  * ContactsSearch represents the model behind the search form about `backend\models\Contacts`.  */ class ContactsSearch extends Contacts {     /**      * @inheritdoc      */     public function rules()     {         return [             [['id', 'user_id', 'contact_id'], 'integer'],             [['created_on', 'modified_on'], 'safe']         ];     }      /**      * @inheritdoc      */     public function scenarios()     {         // bypass scenarios() implementation in the parent class         return Model::scenarios();     }      /**      * Creates data provider instance with search query applied      *      * @param array $params      *      * @return ActiveDataProvider      */     public function search($params)     {         $query = Contacts::find();          $dataProvider = new ActiveDataProvider([             'query' =&gt; $query         ]);          $this-&gt;load($params);          if(!$this-&gt;validate())         {             // uncomment the following line if you do not want to return any records when validation fails             // $query-&gt;where('0=1');             return $dataProvider;         }          $query-&gt;andFilterWhere([             'id' =&gt; $this-&gt;id,             'user_id' =&gt; $this-&gt;user_id,             'contact_id' =&gt; $this-&gt;contact_id,             'created_on' =&gt; $this-&gt;created_on,             'modified_on' =&gt; $this-&gt;modified_on         ]);          return $dataProvider;     } } </code></pre>  <p>View(index.php)</p>  <pre><code>echo GridView::widget([     'dataProvider' =&gt; $dataProvider,     'filterModel' =&gt; $searchModel,     'columns' =&gt; [         ['class' =&gt; 'yii\grid\SerialColumn'],          'id',         'user_id',         'contact_id',         'created_on',         'modified_on',          ['class' =&gt; 'yii\grid\ActionColumn']     ] ]); </code></pre>  <p>Error</p>  <pre><code>PHP Warning – yii\base\ErrorException Invalid argument supplied for foreach()  1. in F:\Files\Web\PHP\wamp\www\Php\sites\expenses\vendor\yiisoft\yii2\BaseYii.php at line 517  public static function configure($object, $properties) {     foreach ($properties as $name =&gt; $value) {         $object-&gt;$name = $value;     }      return $object; }   2. in F:\Files\Web\PHP\wamp\www\Php\sites\expenses\backend\models\Contacts.php at line 76 – yii\base\Object::__construct()  public static function find() {     return new ContactsSearch(get_called_class()); }    3. in F:\Files\Web\PHP\wamp\www\Php\sites\expenses\backend\models\ContactsSearch.php at line 43 – backend\models\Contacts::find()  public function search($params) {     $query = Contacts::find();      $dataProvider = new ActiveDataProvider([         'query' =&gt; $query     ]);      $this-&gt;load($params);      ... </code></pre>