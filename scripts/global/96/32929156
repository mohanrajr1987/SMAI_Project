<p>I'm completely new to ASP.NET, however after some struggle with basics and thanks to google I managed to set up a page to suit my needs.</p>  <p>Web Application is supposed to load data from XML file that I generate with another Windows application on localhost, display this data and allow users to search it.</p>  <p>This XML file has more than 50 MB and more than 120.000 entries.</p>  <p>I'm reading this XML file into dataset which then I bind to gridView.</p>  <p>Problem is :</p>  <ul> <li>When I load page first time it can take up to 30 seconds </li> <li>When I search data loading can take more than 10 seconds</li> </ul>  <p>How can I solve this ?  I tried StateView, however that results in "Ran out of Memory" exception. I did some research and it appears I can save this dataset in server cache, which would allow it to be instantly accessible to all users, without the need to reload XML every time for each user ?</p>  <p>This is my code at the moment, please let me know if something is bad since I have no idea about ASP.NET. Thanks.</p>  <pre><code> public DataSet ds = new DataSet();     public DataSet resultDS = new DataSet();     public bool searchListActive = false;     string _sortDirection = "";      protected void Page_Load(object sender, EventArgs e)     {         BindGrid();         if (!IsPostBack)         {             gridView_IndexData.PageSize = Convert.ToInt32(ddList_DataCount.SelectedItem.Value);             ViewState["searchListActive"] = false;             BindCB();         }          gridView_IndexData.PageSize = Convert.ToInt32(ddList_DataCount.SelectedItem.Value);     }        void BindGrid()     {         ds.ReadXml(Server.MapPath("~/lstData.xml"));         gridView_IndexData.DataSource = ds;         gridView_IndexData.DataBind();     }      void BindCB()     {         DataTable dt = ds.Tables[0].DefaultView.ToTable(true, "forumName");         var DR = dt.NewRow();         DR["forumName"] = "All forums";         dt.Rows.InsertAt(DR, 0);         dt.AcceptChanges();         ddList_Forum.DataSource = dt;         ddList_Forum.DataTextField = "forumName";         ddList_Forum.DataBind();     }        protected void btnSearchQuery_Click(object sender, EventArgs e)     {         resultDS = ds.Clone();          string searchQuery = "";          searchQuery = "TopicTitle LIKE '%" + tbSearchInput.Text + "%'";          if (tbSearchByUsername.Text.Length &gt; 0)         {             searchQuery += "AND UserName ='" + tbSearchByUsername.Text + "'";         }          if (ddList_Type.Text != "")         {             searchQuery += "AND Type ='" + ddList_Type.Text + ":'";         }          if (ddList_Forum.Text != "All forums")         {             searchQuery += "AND forumName ='" + ddList_Forum.Text + "'";         }           var results = ds.Tables[0].Select(searchQuery);         resultDS.Tables.Add();          foreach (DataRow dr in results)         {             resultDS.Tables[0].ImportRow(dr);         }          resultDS.AcceptChanges();         gridView_IndexData.DataSource = resultDS.Tables[0];         ViewState["searchListActive"] = true;         ViewState["resultDS"] = resultDS;         gridView_IndexData.DataBind();      }      protected void gridView_IndexData_Sorting(object sender, GridViewSortEventArgs e)     {         SetSortDirection(e.SortDirection.ToString());         ds.Tables[0].DefaultView.Sort = e.SortExpression + " " + _sortDirection;         gridView_IndexData.DataSource = ds.Tables[0];         gridView_IndexData.DataBind();     }      void SetSortDirection(string sortDirection)     {         if (sortDirection == "Descending")         {             _sortDirection = "DESC";         }         else         {             _sortDirection = "ASC";         }     }      protected void gridView_IndexData_PageIndexChanging(object sender, GridViewPageEventArgs e)     {         gridView_IndexData.PageIndex = e.NewPageIndex;         if ((bool)ViewState["searchListActive"] == true)         {             gridView_IndexData.DataSource = (DataSet)ViewState["resultDS"];         }         gridView_IndexData.DataBind();     } </code></pre>