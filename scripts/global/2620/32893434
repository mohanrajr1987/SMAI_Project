<p>I recently changed my form fields in my html. And changed abit in my servlet as per requesting parameters. I did not change anything in my mysql database or user class, or any other hibernate specifications. And now I'm suddenly getting this error?</p>  <p>I'm thinking it has something to do with my @Id being a string? But this worked fine for me before these changes. So It seems odd to me why it'll suddenly begin bugging me since I have not changed any hibernate relevant.</p>  <pre><code>org.hibernate.id.IdentifierGenerationException: ids for this class must be manually assigned before calling save(): com.Tooblo.User     org.hibernate.id.Assigned.generate(Assigned.java:34)     org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:101)     org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:189)     org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:132)     org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:58)     org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:774)     org.hibernate.internal.SessionImpl.persist(SessionImpl.java:747)     org.hibernate.internal.SessionImpl.persist(SessionImpl.java:752)     sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)     sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)     sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)     java.lang.reflect.Method.invoke(Unknown Source)     org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:338)     com.sun.proxy.$Proxy64.persist(Unknown Source)     com.Tooblo.DAOImplements.persist(DAOImplements.java:18)     com.Tooblo.eventHandler.createProfileIndividual(eventHandler.java:226)     com.Tooblo.eventHandler.doGet(eventHandler.java:70)     javax.servlet.http.HttpServlet.service(HttpServlet.java:622)     javax.servlet.http.HttpServlet.service(HttpServlet.java:729)     org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) </code></pre>  <p>My user class</p>  <pre><code>@Entity @Table(name="user") public class User {       @GeneratedValue(strategy=GenerationType.AUTO)      private long empId;      @Id     private String username;     private String firstname;     private String lastname;     private String organisation;     private String password;     private String email;      @ManyToMany( fetch = FetchType.LAZY, cascade = { CascadeType.PERSIST }  )     @JoinTable(             name = "user_marker",             joinColumns = {@JoinColumn(name = "username")},             inverseJoinColumns = {@JoinColumn(name = "marker_id")})     private Set&lt;Marker&gt; bookmarks = new HashSet&lt;&gt;();      public User() {      }      public User(String username, String password, String email) {         this.username = username;         this.password = password;         this.email = email;     } </code></pre>  <p>...Setters and getters ormitted.</p>  <p>my servlet method.</p>  <pre><code>        String username = request.getParameter("username");         String password = request.getParameter("password");         String email = request.getParameter("email");          User user = new User(username, password, email);          DAO.persist(user); </code></pre>  <p>And my persist method in my DAO</p>  <pre><code>@Override     public void persist(Object entity) {         session = HibernateUtil.getSessionFactory().getCurrentSession();             session.beginTransaction();         session.persist(entity);         session.getTransaction().commit();     } </code></pre>