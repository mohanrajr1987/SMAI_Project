<p>Well, I'm facing this problem about several tries, but not found the correct solution. </p>  <p>At the beginning the project was build with SpringRoo command line. The final log.roo file is:</p>  <pre><code>osgi install --url file:\\\D:\\driver\\postgresql-9.4-1201.jdbc4.jar osgi start --url file:\\\D:\\driver\\postgresql-9.4-1201.jdbc4.jar project --topLevelPackage net.hpclab.bichos --java 7 --projectName bichos persistence setup --database POSTGRES --provider HIBERNATE --userName postgres --password myPass123 database introspect --schema public --enableViews  database reverse engineer --schema public --package ~.domain web jsf setup --implementation ORACLE_MOJARRA web jsf all --package ~.jsf logging setup --level INFO  perform tests perform package perform eclipse exit </code></pre>  <p>The project was made using SpringRoo 1.3.1, Apache Maven 3.2.5, and Apache Tomcat 7.0.59; The deploy was successful, not presenting any of the mentioned error on Eclipse.</p>  <p>In this version, I could find this configuration files:</p>  <p>The persistence.xml file:</p>  <pre><code>&lt;?xml version="1.0" encoding="UTF-8" standalone="no"?&gt; &lt;persistence xmlns="http://java.sun.com/xml/ns/persistence" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="2.0" xsi:schemaLocation="http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd"&gt; &lt;persistence-unit name="persistenceUnit" transaction-type="RESOURCE_LOCAL"&gt;         &lt;provider&gt;org.hibernate.jpa.HibernatePersistenceProvider&lt;/provider&gt;         &lt;properties&gt;             &lt;property name="hibernate.dialect" value="org.hibernate.dialect.PostgreSQLDialect"/&gt;             &lt;!-- value="create" to build a new database on each run; value="update" to modify an existing database; value="create-drop" means the same as "create" but also drops tables when Hibernate closes; value="validate" makes no changes to the database --&gt;             &lt;property name="hibernate.hbm2ddl.auto" value="none"/&gt;             &lt;property name="hibernate.ejb.naming_strategy" value="org.hibernate.cfg.DefaultNamingStrategy"/&gt;             &lt;property name="hibernate.connection.charSet" value="UTF-8"/&gt;             &lt;!-- Uncomment the following two properties for JBoss only --&gt;             &lt;!-- property name="hibernate.validator.apply_to_ddl" value="false" /--&gt;             &lt;!-- property name="hibernate.validator.autoregister_listeners" value="false" /--&gt;         &lt;/properties&gt;     &lt;/persistence-unit&gt; &lt;/persistence&gt; </code></pre>  <p>And the applicationContext.xml:</p>  <pre><code>&lt;bean class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" id="dataSource"&gt;     &lt;property name="driverClassName" value="${database.driverClassName}"/&gt;     &lt;property name="url" value="${database.url}"/&gt;     &lt;property name="username" value="${database.username}"/&gt;     &lt;property name="password" value="${database.password}"/&gt;     &lt;property name="testOnBorrow" value="true"/&gt;     &lt;property name="testOnReturn" value="true"/&gt;     &lt;property name="testWhileIdle" value="true"/&gt;     &lt;property name="timeBetweenEvictionRunsMillis" value="1800000"/&gt;     &lt;property name="numTestsPerEvictionRun" value="3"/&gt;     &lt;property name="minEvictableIdleTimeMillis" value="1800000"/&gt;     &lt;property name="validationQuery" value="SELECT version();"/&gt;     &lt;/bean&gt;     &lt;bean class="org.springframework.orm.jpa.JpaTransactionManager" id="transactionManager"&gt;         &lt;property name="entityManagerFactory" ref="entityManagerFactory"/&gt;     &lt;/bean&gt;     &lt;tx:annotation-driven mode="aspectj" transaction-manager="transactionManager"/&gt;     &lt;bean class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" id="entityManagerFactory"&gt;         &lt;property name="persistenceUnitName" value="persistenceUnit"/&gt;         &lt;property name="dataSource" ref="dataSource"/&gt;     &lt;/bean&gt; </code></pre>  <p>Then it was migrated to Glassfish 4.0 using the Eclipse plug-in for Glassfish, but there were necessary to perform several changes, as where suggested in this Spring forum </p>  <p><a href="http://forum.spring.io/forum/spring-projects/roo/106107-deploying-a-roo-jpa-2-app-to-glassfish-3" rel="nofollow">http://forum.spring.io/forum/spring-projects/roo/106107-deploying-a-roo-jpa-2-app-to-glassfish-3</a></p>  <p>Applied changes:</p>  <p>applicationContext.xml:</p>  <pre><code>&lt;bean class="org.springframework.orm.jpa.JpaTransactionManager" id="transactionManager"&gt;     &lt;property name="persistenceUnitName" value="persistenceUnit"/&gt; &lt;/bean&gt; &lt;tx:annotation-driven mode="aspectj" transaction-manager="transactionManager"/&gt; &lt;tx:jta-transaction-manager userTransactionName="java:comp/UserTransaction" /&gt; &lt;jee:jndi-lookup id="entityManagerFactory" jndi-name="persistence/defaultFactory" expected-type="javax.persistence.EntityManagerFactory"/&gt; </code></pre>  <p>web.xml:</p>  <pre><code>&lt;!-- Header --&gt; &lt;web-app    xmlns="http://java.sun.com/xml/ns/javaee"             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"             version="3.0"             xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"&gt; . . .  &lt;persistence-unit-ref&gt;     &lt;persistence-unit-ref-name&gt;persistence/defaultFactory&lt;/persistence-unit-ref-name&gt;     &lt;persistence-unit-name&gt;persistenceUnit&lt;/persistence-unit-name&gt; &lt;/persistence-unit-ref&gt; </code></pre>  <p>persistence.xml:</p>  <pre><code>&lt;?xml version="1.0" encoding="UTF-8" standalone="no"?&gt; &lt;persistence    version="2.0"                 xmlns="http://java.sun.com/xml/ns/persistence"                 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"                 xsi:schemaLocation="http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd"&gt;     &lt;persistence-unit name="persistenceUnit" transaction-type="JTA"&gt;         &lt;provider&gt;org.hibernate.jpa.HibernatePersistenceProvider&lt;/provider&gt;         &lt;jta-data-source&gt;bichosDS&lt;/jta-data-source&gt;         &lt;properties&gt;             &lt;property name="hibernate.dialect" value="org.hibernate.dialect.PostgreSQLDialect"/&gt;             &lt;!-- value="create" to build a new database on each run; value="update" to modify an existing database; value="create-drop" means the same as "create" but also drops tables when Hibernate closes; value="validate" makes no changes to the database --&gt;             &lt;property name="hibernate.hbm2ddl.auto" value="none"/&gt;             &lt;property name="hibernate.ejb.naming_strategy" value="org.hibernate.cfg.DefaultNamingStrategy"/&gt;             &lt;property name="hibernate.transaction.jta.platform" value="org.hibernate.service.jta.platform.internal.SunOneJtaPlatform"/&gt;             &lt;property name="hibernate.connection.charSet" value="UTF-8"/&gt;             &lt;property name="hibernate.classloading.use_current_tccl_as_parent" value="false" /&gt;             &lt;!-- Uncomment the following two properties for JBoss only --&gt;             &lt;!-- property name="hibernate.validator.apply_to_ddl" value="false" /--&gt;             &lt;!-- property name="hibernate.validator.autoregister_listeners" value="false" /--&gt;         &lt;/properties&gt;     &lt;/persistence-unit&gt; &lt;/persistence&gt; </code></pre>  <p>And seems to deploy fine, but the error comes when I try to modify a record of any table from the web interface.</p>  <p>The complete stacktrace is:</p>  <pre><code>Warning:   This web container has not yet been started java.lang.IllegalStateException: This web container has not yet been started     at org.glassfish.web.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1652)     at org.glassfish.web.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1611)     at net.hpclab.bichos.domain.Author.toString(Author.java:53)     at java.text.MessageFormat.subformat(MessageFormat.java:1271)     at java.text.MessageFormat.format(MessageFormat.java:860)     at java.text.Format.format(Format.java:157)     at java.text.MessageFormat.format(MessageFormat.java:836)     at com.sun.el.util.MessageFactory.getArray(MessageFactory.java:91)     at com.sun.el.util.MessageFactory.get(MessageFactory.java:76)     at com.sun.el.lang.ELSupport.coerceToType(ELSupport.java:417)     at com.sun.el.ExpressionFactoryImpl.coerceToType(ExpressionFactoryImpl.java:77)     at com.sun.faces.facelets.tag.jsf.core.SetPropertyActionListenerHandler$SetPropertyListener.processAction(SetPropertyActionListenerHandler.java:209)     at javax.faces.event.ActionEvent.processListener(ActionEvent.java:88)     at javax.faces.component.UIComponentBase.broadcast(UIComponentBase.java:818)     at javax.faces.component.UICommand.broadcast(UICommand.java:300)     at javax.faces.component.UIData.broadcast(UIData.java:1108)     at javax.faces.component.UIViewRoot.broadcastEvents(UIViewRoot.java:790)     at javax.faces.component.UIViewRoot.processApplication(UIViewRoot.java:1282)     at com.sun.faces.lifecycle.InvokeApplicationPhase.execute(InvokeApplicationPhase.java:81)     at com.sun.faces.lifecycle.Phase.doPhase(Phase.java:101)     at com.sun.faces.lifecycle.LifecycleImpl.execute(LifecycleImpl.java:198)     at javax.faces.webapp.FacesServlet.service(FacesServlet.java:646)     at org.apache.catalina.core.StandardWrapper.service(StandardWrapper.java:1682)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:344)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:214)     at org.primefaces.webapp.filter.FileUploadFilter.doFilter(FileUploadFilter.java:78)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:256)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:214)     at org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter.doFilterInternal(OpenEntityManagerInViewFilter.java:180)     at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:256)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:214)     at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:316)     at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:160)     at org.apache.catalina.core.StandardPipeline.doInvoke(StandardPipeline.java:734)     at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:673)     at com.sun.enterprise.web.WebPipeline.invoke(WebPipeline.java:99)     at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:174)     at org.apache.catalina.connector.CoyoteAdapter.doService(CoyoteAdapter.java:357)     at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:260)     at com.sun.enterprise.v3.services.impl.ContainerMapper.service(ContainerMapper.java:188)     at org.glassfish.grizzly.http.server.HttpHandler.runService(HttpHandler.java:191)     at org.glassfish.grizzly.http.server.HttpHandler.doHandle(HttpHandler.java:168)     at org.glassfish.grizzly.http.server.HttpServerFilter.handleRead(HttpServerFilter.java:189)     at org.glassfish.grizzly.filterchain.ExecutorResolver$9.execute(ExecutorResolver.java:119)     at org.glassfish.grizzly.filterchain.DefaultFilterChain.executeFilter(DefaultFilterChain.java:288)     at org.glassfish.grizzly.filterchain.DefaultFilterChain.executeChainPart(DefaultFilterChain.java:206)     at org.glassfish.grizzly.filterchain.DefaultFilterChain.execute(DefaultFilterChain.java:136)     at org.glassfish.grizzly.filterchain.DefaultFilterChain.process(DefaultFilterChain.java:114)     at org.glassfish.grizzly.ProcessorExecutor.execute(ProcessorExecutor.java:77)     at org.glassfish.grizzly.nio.transport.TCPNIOTransport.fireIOEvent(TCPNIOTransport.java:838)     at org.glassfish.grizzly.strategies.AbstractIOStrategy.fireIOEvent(AbstractIOStrategy.java:113)     at org.glassfish.grizzly.strategies.WorkerThreadIOStrategy.run0(WorkerThreadIOStrategy.java:115)     at org.glassfish.grizzly.strategies.WorkerThreadIOStrategy.access$100(WorkerThreadIOStrategy.java:55)     at org.glassfish.grizzly.strategies.WorkerThreadIOStrategy$WorkerThreadRunnable.run(WorkerThreadIOStrategy.java:135)     at org.glassfish.grizzly.threadpool.AbstractThreadPool$Worker.doWork(AbstractThreadPool.java:564)     at org.glassfish.grizzly.threadpool.AbstractThreadPool$Worker.run(AbstractThreadPool.java:544)     at java.lang.Thread.run(Thread.java:745) </code></pre>  <p>Due the several changes and server restarts, I preferred to move the project to NetBeans 7.4, not for solve the problem but for better server administration.</p>  <p>All the entities has this configuration:</p>  <pre><code>@Entity @Table(schema = "public", name = "author") @Configurable @RooJavaBean @RooJpaActiveRecord(versionField = "", table = "author", schema = "public") @RooDbManaged(automaticallyDelete = true) @RooToString(excludeFields = {"authorRoles"}) public class Author implements Serializable {     @PersistenceContext     transient EntityManager entityManager;      public static final List&lt;String&gt; fieldNames4OrderClauseFilter = java.util.Arrays.asList("");      public static final EntityManager entityManager() {         EntityManager em = new Author().entityManager;         if (em == null) {             throw new IllegalStateException("Entity manager has not been injected (is the Spring Aspects JAR configured as an AJC/AJDT aspects library?)");         }         return em;     } } </code></pre>  <p>I'm almost sure that in the configuration files lies the solution, but my knowledge about beans and other JTA transactions are scant. I tried to modify several beans on the applicationContext file but get other errors (even the application won't deploy), and the experiment of 'Trial and Error' is not taken me to the solution.</p>  <p>I really appreciate your help, and thanks in advance.</p>