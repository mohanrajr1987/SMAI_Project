<p>I have the following configuration :<br> Almost 145 <code>MySQL</code> tables, some of which have millions of entries, and I have a search UI that could possibly search through all the tables depending on the criterias selected by the user.</p>  <p>Right now, I'm using native <code>SQL</code> queries to perform the searches (I use Hibernate though to map to my entities), however, as tables are expected to double in size, I'm really starting to get worried about the performances. Right now, some queries take a ridiculously long time.</p>  <p>I've heard about <code>Elasticsearch</code> and I have the following questions :<br> - Is it adapted for my situation?<br> - Is it possible to use <code>Elasticsearch</code> only for searches? And not storing my actual data? All the updates will still perform on MySQL (insert/update/delete, even though deletes are rare).<br> - I could use a "cluster" of <code>Elasticsearch</code> (I don't know the appropriate term), I mean I could install it on multiple machines if that would make it any faster.</p>  <p>Any possibilities to use <code>Elasticsearch</code> and still be able to map to my entities? </p>