<p>I'm relatively new to Java and right now I'm trying to find all occurrences of a substring in a string.</p>  <p>For example: searching "ababsdfasdfhelloasdf" for "asdf" would return [8,17] since there are 2 "asdf"'s, one at position 8 and one at 17. Searching "aaaaaa" for "aa" would return [0,1,2,3,4] because there is an "aa" at positions 0,1,2,3, and 4.</p>  <p>I tried this:</p>  <pre><code>public List&lt;Integer&gt; findSubstrings(String inwords, String inword) {     String copyOfWords = inwords;     List&lt;Integer&gt; indicesOfWord = new ArrayList&lt;Integer&gt;();     int currentStartIndex = niwords.indexOf(inword);     int indexat = 0;     System.out.println(currentStartIndex);     while (cthing1&gt;0) {         indicesOfWord.add(currentStartIndex+indexat);         System.out.println(currentStartIndex);         System.out.println(indicesOfWord);         indexat += cthing1;         copyOfWords = copyOfWords.substring(cthing1);         System.out.println(copyOfWords);         cthing1 = copyOfWords.indexOf(inword);     } </code></pre>  <p>but the more I try to fix my code the more screwed up it seems.</p>  <p>Note: I'm mainly a python programmer. In python what I'd do for this problem is</p>  <pre><code>indices = [m.start() for m in re.finditer(word, a.lower())] </code></pre>  <p>where "word" is the word I'm looking for and "a" is the string I'm searching through.</p>  <p>Is there some way I could fix my code so it works, or is there some unknown builtin or fix that allows me to do this?</p>