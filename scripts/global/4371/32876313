<p>Whenever I am given a 11-digit number (like 12345678901, 82344678971 etc.), I want to partition it into 4 parts as 5digits-4digits-1digit-1digit always. So:<br> 12345678901 ->  12345 6789 0 1<br> 82344674971 ->  82344 6749 7 1    </p>  <p>I saw a similar question in SOF but it uses regular blocks; namely same number of digits: <a href="http://stackoverflow.com/questions/4133377/splitting-a-string-number-every-nth-character-number">Splitting a string / number every Nth Character / Number?</a></p>  <p>I want a function that will take any 11-digit (long) integer as parameter, and will return as the above way; from where I could be able to get any block I want: For example, SplitInParts(1) will return 12345; SplitInParts(2) will return 6789; SplitInParts(3) will return 0; SplitInParts(4) will return 1. Similarly for 82344674971: 82344, 6749, 7, 1 respectively.</p>  <p>Being a novice in C#, I could not achieve how to perform the above via C#.</p>