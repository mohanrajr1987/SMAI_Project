<p>I have a noob question. I am using python 2.7.6 on a Linux system. </p>  <p>What I am trying to achieve is to use specific numbers in a list, which correspond to the last number in a <code>database</code> text file, to pull out the whole line in the <code>database</code> text file and print it (going to write the line to another text file later).</p>  <p>Code I am currently trying to use:</p>  <pre><code>reg = re.compile(r'(\d+)$')  for line in "text file database":     if list_line in reg.findall(line):         print line </code></pre>  <p>What I have found is that I can input a string like</p>  <pre><code>list_line = "9" </code></pre>  <p>and it will output the whole line of the corresponding database entry just fine. But trying to use the <code>list_line</code> to input strings one by one in a loop doesn't work. </p>  <p>Can anyone please help me out or direct me to a relevant source?</p>  <p>Appendix:</p>  <p>The text file <code>database</code> text file contains data similar to these:</p>  <pre><code>gnl Acep_1.0 ACEP10001-PA 1 gnl Acep_1.0 ACEP10002-PA 2 gnl Acep_1.0 ACEP10003-PA 3 gnl Acep_1.0 ACEP10004-PA 4 gnl Acep_1.0 ACEP10005-PA 5 gnl Acep_1.0 ACEP10006-PA 7 gnl Acep_1.0 ACEP10007-PA 6 gnl Acep_1.0 ACEP10008-PA 8 gnl Acep_1.0 ACEP10009-PA 9 gnl Acep_1.0 ACEP10010-PA 10 </code></pre>  <p>The search text file <code>list_line</code> looks similar to this:</p>  <pre><code>2 5 4 6 </code></pre>  <p>Updated original code:</p>  <pre><code>    #import extensions     import linecache      import re      #set re.compiler parameters     reg = re.compile(r'(\d+)$')      #Designate and open list file     in_list = raw_input("list input: ")      open_list = open(in_list, "r")      #Count lines in list file     total_lines = sum(1 for line in open_list)      print total_lines      #Open out file in write mode     outfile = raw_input("output: ")      open_outfile = open(outfile, "w")      #Designate db string     db = raw_input("db input: ")      open_db = open(db, "r")      read_db = open_db.read()       split_db = read_db.splitlines()      print split_db            #Set line_number value to 0     line_number = 0      #Count through line numbers and print line     while line_number &lt; total_lines:         line_number = line_number + 1         print line_number          list_line = linecache.getline(in_list, line_number)         print list_line          for line in split_db:             if list_line in reg.findall(line) :                 print line       #close files     open_list.close()      open_outfile.close()      open_db.close()  </code></pre>