<p>I have a large number of tests that run against a relational database via JDBC.  At the moment many of those test classes create their own schemas and schema objects (tables, etc).  We have also seen that for in-memory databases, each test is recreating the actual database instance.  All told the tests take way longer to run than they should.</p>  <p>So I want to move (as much as possible) the tests to use a number of predefined schemas and have some way to hook creating and dropping of these schemas to JUnit lifecycle.  I am initially thinking a Rule that tells which catalogs/schemas are in use by that test.  The Rule would then coordinate with some central registry to create the catalogs/schemas on first use and drop them after all tests are done.</p>  <p>Would that be a good way to go about this?  Would that be the best way?</p>  <p>Thanks</p>