<p>I am using the Spring Tool Suite (STS) 3.7 which uses an Eclipse Mars (4.5) as base.</p>  <p>In the STS it seems that the content assist is broken inside the implementation of a functional interface, but only in a single(!) file.</p>  <p>To reproduce the error I created the following code, where <code>BoundingBox</code> is my own class.</p>  <pre><code>  public static void foo()   {     BoundingBox b = new BoundingBox();   }    public static Specification&lt;TDtCall&gt; bar(final Optional&lt;BoundingBox&gt; bboxOpt)   {     return (root, query, cb) -&gt;     {       if (bboxOpt.isPresent())       {         BoundingBox bbox = bboxOpt.get();         return null;       } else       {         return null;       }     };   }    public static Specification&lt;TDtCall&gt; foobar(final Optional&lt;BoundingBox&gt; bboxOpt)   {     return new Specification&lt;TDtCall&gt;()     {       @Override       public Predicate toPredicate(Root&lt;TDtCall&gt; root, CriteriaQuery&lt;?&gt; query, CriteriaBuilder cb)       {         if (bboxOpt.isPresent())         {           BoundingBox bbox = bboxOpt.get();           return null;         } else         {           return null;         }       }     };    } </code></pre>  <p>The code completion works as expected in the <code>foo()</code> and <code>foobar()</code> methods. But not in the <code>bar()</code> method, see picture below.</p>  <p><a href="http://i.stack.imgur.com/WhIIs.png" rel="nofollow"><img src="http://i.stack.imgur.com/WhIIs.png" alt="Content assist does not return expected types."></a></p>  <p>The really strange behavior is, that if I copy the same code, to a class in the same package, the content assist also works for the <code>bar()</code> method.</p>  <p>To solve the problem I restarted STS and my PC several times, but I with no effect.</p>  <p>Does anybody know how to fix that behavior? Or should I open an STS or Eclipse bug?</p>