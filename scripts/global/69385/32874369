<p>I have a collection of <code>Employee</code> objects and need to turn it into a map of hyperlink widgets for presentation purposes.</p>  <p>For each employee, an entry is added to the result, with the key being an identifier (here a National Insurance number), and the value being the hyperlink widget. Here's a first attempt:</p>  <pre><code>static Map&lt;String, Hyperlink&gt; toHyperlinksByNIN(Collection&lt;Employee&gt; employees) {     return employees.stream()             .collect(Collectors.toMap(                     Employee::determineUniqueNINumber,                     employee -&gt; new Hyperlink(                           employee.getName(), employee.determineUniqueNINumber()))); } </code></pre>  <p>Unfortunately, this solution won't do, because the NI number is actually not part of the employee model, but needs to be fetched from an expensive remote service on every call to <code>Employee.determineUniqueNINumber</code>. This method is simply too costly to call more than once per employee record.</p>  <p>How can I obtain the desired <code>Map</code></p>  <ul> <li>doing a single pass through the collection using the Stream API,</li> <li>while applying the common part in the key/value mapping functions (<code>Employee.determineUniqueNINumber</code>) only once per stream element?</li> </ul>