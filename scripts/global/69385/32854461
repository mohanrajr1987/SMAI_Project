<p>Let's prefix this by my objects equals implementation is not how I need to filter so <code>distinct</code> itself does not work.</p>  <pre><code>class MyObject {   String foo;   MyObject( String foo ) {     this.foo = foo;   }   public String getFoo() { return foo; } }   Collection&lt;MyObject&gt; listA = Arrays.asList("a", "b", "c").stream().map(MyObject::new)         .collect(Collectors.toList());  Collection&lt;MyObject&gt; listB = Arrays.asList("b", "d").stream().map(MyObject::new)         .collect(Collectors.toList());   // magic </code></pre>  <p>How can I merge and deduplicate the lists so that the resulting list should be of MyObjects containing "a", "b", "c", "d"?</p>  <p>Note: This is a simplification of what methods we actually need to deduplicate, which are actually complex DTOs of entities loaded by hibernate, but this example should adequately demonstrate the objective.</p>