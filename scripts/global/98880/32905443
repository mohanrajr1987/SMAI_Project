<p>Using the solution provided in <a href="http://stackoverflow.com/a/32407543/5379015">http://stackoverflow.com/a/32407543/5379015</a> I tried to recreate the same query but using the programmatic syntax in stead of the dataframe api as follows:</p>  <pre><code>import org.apache.spark.{SparkContext, SparkConf} import org.apache.spark.sql.hive.HiveContext import org.apache.spark.sql.expressions.Window import org.apache.spark.sql.functions._  object HiveContextTest { def main(args: Array[String]) { val conf = new SparkConf().setAppName("HiveContextTest") val sc = new SparkContext(conf) val sqlContext = new HiveContext(sc) import sqlContext.implicits._  val df = sc.parallelize(   ("foo", 1) :: ("foo", 2) :: ("bar", 1) :: ("bar", 2) :: Nil ).toDF("k", "v")   // using dataframe api works fine  val w = Window.partitionBy($"k").orderBy($"v") df.select($"k",$"v", rowNumber().over(w).alias("rn")).show   //using programmatic syntax doesn't work  df.registerTempTable("df") val w2 = sqlContext.sql("select k,v,rowNumber() over (partition by k order by v) as rn from df") w2.show()    } } </code></pre>  <p>The first df.select($"k",$"v", rowNumber().over(w).alias("rn")).show works fine but the w2.show() results in Exception in thread "main" org.apache.spark.sql.AnalysisException: Couldn't find window function rowNumber;</p>  <p>Does anyone have any ideas as to how I can make this work with the programmatic syntax? Many thanks in advance.</p>