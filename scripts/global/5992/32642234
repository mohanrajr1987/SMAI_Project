<p>(Hopefully this doesn't get too complicated...)</p>  <p>I've built a third-party C++ library <code>libfoo</code> with both static (<code>libfoo.a</code>) and shared (<code>libfoo.so</code>) versions. The object files were created with -fPIC. <code>libfoo</code> has several global variables that are used to configure its behavior, and functions that rely on these globals, for simplicity function <code>func1()</code> which interacts with variable <code>global_a</code>.</p>  <p>I have built my C++ shared library <code>libbar</code> that I've statically linked to <code>libfoo.a</code>. This is done without the --whole-archive option. So I believe <code>libbar.so</code> includes all the symbols and definitions it needs from <code>libfoo.a</code>. This library calls functions from <code>libfoo</code> which uses global variables to control behavior. In this case, let's say it calls function <code>func1()</code>.</p>  <p>Finally, I have a C++ client program <code>baz</code> that dynamically links to both <code>libfoo.so</code> and <code>libbar.so</code>. This client also uses the same functions/global variables from <code>libfoo</code>. It modifies <code>global_a</code> and calls <code>func1()</code>.</p>  <p>In general, what will be the behavior of the client <code>baz</code> in this scenario? Is this sort of configuration something I should avoid, or is it OK? And what would happen if <code>libfoo.a</code> and <code>libfoo.so</code> are different versions?</p>  <p>For the global variables I was sort of expecting that the code in <code>libbar.so</code> would use its own copies, and any changes in <code>baz</code> would modify the copies in <code>libfoo.so</code>, but that's not what I see. When <code>baz</code> modifies <code>global_a</code>, the effect is seen in <code>libbar.so</code>. There wasn't any other abnormal behavior from client <code>baz</code> that I could tell.</p>  <p>I also tried linking <code>baz</code> with <code>libfoo.a</code>, and see the same (apparently correct) behavior.</p>  <p>Valgrind in either case has no shown any errors.</p>