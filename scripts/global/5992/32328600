<p>I am using Python 2.7. I want to store a variable so that I can run a script without defining the variable in that script. I think global variables are the way to do this although I am open to correction.</p>  <p>I have defined a global variable in <code>file1.py</code>:</p>  <pre><code>def init():     global tvseries     tvseries = ['Murder I Wrote','Top Gear'] </code></pre>  <p>In another file, <code>file2.py</code>, I can call this variable:</p>  <pre><code>import file1 file1.init() print file1.tvseries[0] </code></pre>  <p>If I edit the value of file1.tvseries (<code>file1.tvseries[0] = 'The Bill'</code>) in file2.py this is not stored. How can I edit the value of file1.tvseries in file2.py so that this edit is retained?</p>  <p><strong>EDIT: Provide answer</strong></p>  <p>Using <code>pickle</code>:</p>  <pre><code>import  pickle  try:     tvseries = pickle.load(open("save.p","rb")) except:     tvseries = ['Murder I Wrote','Top Gear']  print tvseries tvseries[0] = 'The Bill' print tvseries pickle.dump(tvseries,open("save.p", "wb")) </code></pre>  <p>Using <code>json</code>:</p>  <pre><code>import json  try:     tvseries = json.load(open("save.json"))     tvseries = [s.encode('utf-8') for s in tvseries] except:     tvseries = ['Murder I Wrote','Top Gear']  print tvseries tvseries[0] = str('The Bill') print tvseries json.dump(tvseries,open("save.json", "w")) </code></pre>  <p>Both these files return <code>['Murder I Wrote','Top Gear']['The Bill','Top Gear']</code> when run the first time and <code>['The Bill','Top Gear']['The Bill','Top Gear']</code> when run the second time.</p>