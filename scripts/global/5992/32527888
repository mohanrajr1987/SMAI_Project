<p>Here is an article about the subject <a href="http://www.dotnetperls.com/global-variables-aspnet" rel="nofollow">global-variables-aspnet</a></p>  <p>In a given example on page load there is an initialization of our static global variable:</p>  <pre><code>protected void Page_Load(object sender, EventArgs e) {     // 1.     // Get the current ImportantData.     string important1 = Global.ImportantData;      // 2.     // If we don't have the data yet, initialize it.     if (important1 == null)     {         // Example code.         important1 = DateTime.Now.ToString();         Global.ImportantData = important1;     }      // 3.     // Render the important data.     Important1.Text = important1; } </code></pre>  <p>And the commentary to it:</p>  <blockquote>   <p>Performance: Static fields are efficient in normal situations. You   will only have one copy of the data and there is no locking required.</p> </blockquote>  <p>My question is - why there is no double-null-check and no locking required? Am I missing something is ASP.NET multi-threading?</p>