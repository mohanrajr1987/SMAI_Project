<p>Given two headers <code>.h</code> and one <code>.c</code> files:</p>  <p>test.h:</p>  <pre><code>int a,b; </code></pre>  <p>socket.h:</p>  <pre><code>int a,b; </code></pre>  <p>test.c</p>  <pre><code>#include "test.h" #include "socket.h" int main() {   printf("%d, %d\n", a,b);   return 0; } </code></pre>  <p>compiling and executing <code>test.c</code> doesn't cause any errors although <code>test.c</code> includes each of variable <code>a</code> and <code>b</code> two times. </p>  <p>However, when I programmed <code>int a=1, b=2;</code> in <code>test.h</code> and <code>int a=2, b=3;</code> in <code>socket.h</code>, compilation error comes up:</p>  <pre><code>error: redefinition of `a` note: previous definition of `a` was here. </code></pre>  <p>Why it doesn't cause any errors although I re-declared global variables? and What's the difference between global variables with initialised value and those without any initialisation in this context?</p>