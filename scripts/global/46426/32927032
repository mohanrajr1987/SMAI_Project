<p>Is there a way to setup an icon for an HTML page using only 'http' and 'fs' modules for node.js (without express)?</p>  <p>I have index.html, main_page.css and favicon.ico files in my directory. </p>  <p>When the client connects, it receives index.html:</p>  <pre><code>&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt;   &lt;title&gt;Site&lt;/title&gt;   &lt;link rel="icon" href="favicon.ico" type="image/x-icon" /&gt;   &lt;link rel="stylesheet" type="text/css" href="css/main_page.css" /&gt; &lt;/head&gt; &lt;body&gt; &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>Then the server receives a request for .css file and sends it to the client. </p>  <p>The page is styled as it should be, so there is no reason to show the code.</p>  <p>The question is, why does the client ask for .css file by itself and doesn't ask for .ico?</p>  <p>This is the code on the server, that serves the files:</p>  <pre><code>var http = require('http'); var fs = require('fs');  http.createServer(function(req, res) {   switch (req.url) {     case '/': {       get_file('index.html', res);       break;     }     case '/css/main_page.css': {       get_file('css/main_page.css',res);       break;     }     case '/favicon.ico': {       get_file('favicon.ico', res);       break;     }     default: {       res.statusCode = 404;       res.end("Not found");     }   } }).listen(8081);  function get_file(path, res) { //dont mind my ROOT ;0   fs.readFile(ROOT + path, function(err, content) {     if(err) {       console.log(err.message);     } else {       console.log(path);       res.end(content);     }   }) } </code></pre>