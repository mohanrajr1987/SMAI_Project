<p>I hope I can do this.  Apparently it seems not.  I'm using <a href="https://www.npmjs.com/package/koa-controller" rel="nofollow">koa-controller</a> for the middleware.</p>  <p>I've got the following routes setup for one of my koa-controllers:</p>  <pre><code>'/cars/:carId/color/:colorId/tone/:toneId?': { to: 'car#find' },  '/cars/:carName/color/:colorName/tone/:toneName?': {to: 'car#findByCarNameAndCarColorAndCityTone'} </code></pre>  <p>We want to be able to allow the following ways to call to get a car:</p>  <pre><code>/cars/12/color/133/tone/44 /cars/accord/color/green/tone/light </code></pre>  <p>but problem I have is if I try to call the 2nd where we allow them to put in a name for the param, it hits the first route.  It doesn't know the difference whether the param is an id or it's a string.</p>  <p>I guess this might just be expected behavior but I'd also like to think that there would be some way with koa.js to avoid this and still allow these patterns and flexibility through the URI.</p>  <p>I do not want to allow the locating of a resource in the querystring.  It's just my preference.  I'd rather do it this way not by "?carName=accord&amp;color=green&amp;tone=light".  I just like finding the resource initially with the address part of the url (the uri).</p>  <p>Like is there a way to use a regex in the route to check if the param value is all chars like adding /^[a-zA-Z]*$/?  </p>  <p>I believe koa-controller which uses koa-router uses <a href="https://github.com/pillarjs/path-to-regexp#unnamed-parameters" rel="nofollow">path-to-regexp</a> possibly and if that is true (I assume) then I should be able to do this somehow...</p>  <p>I tried these but no luck:</p>  <pre><code>'/cars/:carName/^[a-zA-Z]*$//color/:colorName/^[a-zA-Z]*$//tone/:toneName/^[a-zA-Z]*$/?': {to: 'car#findByCarNameAndCarColorAndCityTone'}  '/cars/:carName^[a-zA-Z]*$/color/:colorName^[a-zA-Z]*$/tone/:toneName^[a-zA-Z]*$?': {to: 'car#findByCarNameAndCarColorAndCityTone'} </code></pre>