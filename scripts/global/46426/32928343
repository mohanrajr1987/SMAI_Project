<p>I am using Laravel as backbone of my web project. I want to create a notification system (like the Facebook does) for messages and notifications at the top. After reading, I found out that I can achieve what I try to do with Socket.io. However, I couldn't perfectly understand how to setup the logic.</p>  <p>Let's say there will be different types of notification types, such as:</p>  <ul> <li>UserX started following you,</li> <li>UserY wrote on your wall,</li> <li>UserZ sent you a message</li> </ul>  <p>First, as far as I understand, the socket.io setup on client side [<code>io.connect()</code>] should be called on every page (master.blade in my case). On the server side, when a user connects to the server, it requires 'channel' and 'message' parameters to complete communication cycle.</p>  <p>Here is where I get confused. How is the logic works for my case? I can understand the logic of public chat use, but couldn't figure out for notification system.</p>  <p>Is it like; are all these sending 'notification info data' function supposed to be triggered when inserting it to database; with unique channel name (maybe UID) and pre-set messages for pre-defined actions (eg. "UserX started following you")?</p>  <p>By that, I am planning to use Bootstrap drop-downs and appending the notification data in that drop-down with javascript.</p>