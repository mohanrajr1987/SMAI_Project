<p>I am working on a JavaScript web app that takes input from a user (the name of a musical artist) and outputs a list of related artists and their most popular song, as determined by the Spotify API. I initially had a rudimentary version of this functioning, but it would just post a list of all the related artists with a list of those related artists' most popular songs immediately above it, and I want the entire object to print out (artist plus most popular song).</p>  <p>I have a series of objects representing the artists that I received through the <a href="https://github.com/JMPerez/spotify-web-api-js" rel="nofollow">spotify-web-api-js</a> node module with Node.js and Browserify to make it function on the browser, uniquely identified by their Spotify ID. How can I loop through them if I don't know those IDs in advance before a user does a search so that I can properly push them into an object that I can then input to the DOM through jQuery's <code>append</code>? I've been trying to access them in various ways, but it doesn't seem to be working:</p>  <pre><code>s.getArtistRelatedArtists(originalArtistId, function(err, data) {    for (i = 0; i &lt; data.artists.length; i++)   {       console.log(data.artists[i].name);       relatedArtistsObject[data.artists[i].id] = {         name: data.artists[i].name,         songs: []       };       s.getArtistTopTracks(data.artists[i].id, "US", function (err, data2) {           if (relatedArtistsObject[data2.tracks[0].artists[0].id] !== undefined)           {           // console.log(data2.tracks[0].name); -- this outputs the song titles I want             relatedArtistsObject[data2.tracks[0].artists[0].id].songs.push(data2.tracks[0].name);            }       });   }  console.log(relatedArtistsObject);  // loop through this object and print it through the screen  for (k = 0; k &lt; relatedArtistsObject.length; k++)  {     console.log(relatedArtistsObject.id.songs[0].name);    $('#related-artist').append(relatedArtistsObject[k]);   }   //  $('#related-artist').append(relatedArtistsObject);  }); </code></pre>  <p>Here is a link to the full code (not functioning because it doesn't have Node.js/browserify enabled): <a href="https://jsfiddle.net/pmh04e99/" rel="nofollow">https://jsfiddle.net/pmh04e99/</a></p>  <p><a href="http://stackoverflow.com/a/31952281">This answer</a> is partially helpful, but doesn't apply here because the JSON output doesn't have a "name" field in the array I want to access. Instead, <code>songs</code> is an array of 1, and the content I want is within item <code>0</code>. My console.log output of the <code>relatedArtistsObject</code> looks like this, for example:</p>  <p><a href="http://i.stack.imgur.com/TS7ZS.png" rel="nofollow"><img src="http://i.stack.imgur.com/TS7ZS.png" alt="enter image description here"></a></p>  <p>How can I access these objects in the DOM through my code when I don't know the spotify IDs right now?</p>  <p>Note: I'm aware that i'm not error handling yet, but I want to be able to implement the main functionality first.</p>