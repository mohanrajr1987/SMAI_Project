<p>So I'm trying to read a text file (of unknown size) into a vector of vectors that are of my own defined type: <code>Vertex</code> (contains float x,y,z). So when all is said and done, each "row" in <code>coordpts</code> (variable for my vector of vectors) should represent a face of the object being read in and therefore should have several sets of xyz coordinates. </p>  <p>I'm working on the premise that each line in the file being read in represents a single face (of a cube, teapot, whatever object).</p>  <p>I know I should push back each set of three coordinates into a temporary vector, and then push that temporary vector back into <code>coordpts</code>, but I'm having trouble accessing the elements?</p>  <p>My code compiles when I do the above, but anytime I try to access an element I'm getting errors.</p>  <p><strong>Am I missing something obvious?</strong></p>  <p>I mostly just want to print out the data so that I can see if I've read it in correctly (also because I'll have to access it in other functions later on).</p>  <h3>Header file:</h3>  <pre><code>#include &lt;iostream&gt; // Definitions for standard I/O routines. #include &lt;fstream&gt; #include &lt;cmath&gt;    // Definitions for math library. #include &lt;cstdlib&gt; #include &lt;string&gt; #include &lt;vector&gt; #include &lt;list&gt;  using namespace std;  class Vertex { public:     Vertex() {};     float x, y, z; // float to store single coordinate. };  class Object : public Vertex { public:     Object() {};     vector&lt;vector&lt;Vertex&gt;&gt; coordpts; // vector of x, y, z floats derived from vertex class.     // vector&lt;Vertex&gt; coordpts; }; </code></pre>  <h3>Program file:</h3>  <p><sup>(I know main isn't there, I've included it in another file.)</sup></p>  <pre><code>#include "header.h" // Include header file.  Object object; string inputfile; fstream myfile;  void Raw::readFile() {      vector&lt;Vertex&gt; temp;      cout &lt;&lt; "Enter the name of the file: ";     cin &gt;&gt; inputfile;      myfile.open(inputfile);      if(myfile.is_open()) {         while(myfile &gt;&gt; object.x &gt;&gt; object.y &gt;&gt; object.z) {             temp.push_back(object);             object.coordpts.push_back(temp);         }     }      myfile.close();      cout &lt;&lt; object.coordpts[0] &lt;&lt; endl; }; </code></pre>