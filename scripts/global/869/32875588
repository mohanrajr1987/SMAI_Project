<p>I have a Powershell script that copies a worksheet (with a custom dual axis chart) from one workbook to another workbook and then populates the new copy with data. That portion of the script works fine but I am trying to change the data series in the existing chart and I do not know the fields to change the data series.</p>  <p>I can change the chart title and the legend labels of the existing chart with no issues. I have tried the <code>$ChartTemplate.SeriesCollection(1).Values</code> field and the <code>$ChartTemplate.SeriesCollection(1).XValues</code> with and with out the <code>$ChartTemplate.SeriesCollection().NewSeries.Invoke()</code> command and I have had no success.</p>  <p>Does anyone know the Powershell syntax to edit an existing data series of a custom dual axis line chart (<code>=SERIES(Template!$G$1,Template!$A$2:$A$112,Template!$G$2:$G$112,4</code>) ?</p>  <p>The following is my Powershell code which I have obtained from googling:</p>  <pre><code>$file1 = $global:ChartTemplateXlsx    # source's fullpath $file2 = $Path                        # destination's fullpath $xl = new-object -c excel.application  $xl.Visible = $False                  # dont display the spreadsheet $xl.displayAlerts = $false            # don't prompt the user $wb1 = $xl.workbooks.open($file1, $null, $true)   # open source, readonly $wb = $xl.workbooks.open($file2)      # open target workbook/worksheet $sh1_wb = $wb.sheets.item(1)          # 1st sheet in destination workbook $sheetToCopy = $wb1.sheets.item('Template')   # source sheet to copy $sheetToCopy.copy($sh1_wb)   # copy source sheet to destination workbook  $ws = $wb.ActiveSheet                        # set the worksheet  $ChartTemplate = $ws.chartobjects(1).chart   # obtain the existing chart $ChartTemplate.HasTitle = $true              # turn on chart title $ChartTemplate.ChartTitle.Text = "Test Chart" # set a new chart title  $ChartTemplate.SeriesCollection(1).Name = "=""Test01""" $ChartTemplate.SeriesCollection(2).Name = "=""Test02""" $ChartTemplate.SeriesCollection(3).Name = "=""Test03""" $ChartTemplate.SeriesCollection(4).Name = "=""Test04"""  $wb1.close($false)               # close source workbook w/o saving $wb.close($true)                 # close and save destination workbook $xl.quit() spps -n excel </code></pre>  <p>By the way, I am using a separate workbook with the chart so that users can create their own chart templates and then I will populate it with data.</p>