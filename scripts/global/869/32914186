<p>My plnkr: <a href="http://plnkr.co/edit/ymrqIOGTBqF6TVMTvC4T?p=preview" rel="nofollow">http://plnkr.co/edit/ymrqIOGTBqF6TVMTvC4T?p=preview</a></p>  <p><a href="http://i.stack.imgur.com/TTIuK.png" rel="nofollow"><img src="http://i.stack.imgur.com/TTIuK.png" alt="enter image description here"></a></p>  <p>Currently my nvd3 chart is based on their <strong>linePlusBarChart</strong> <a href="https://github.com/nvd3-community/nvd3/blob/gh-pages/examples/linePlusBarChart.html" rel="nofollow">https://github.com/nvd3-community/nvd3/blob/gh-pages/examples/linePlusBarChart.html</a></p>  <p>Problem is that in my real app I actually have much more bar tick data (4000+) so the bars get super thin and are hard to see, thus I need to instead use a Line Area graph instead. (This isn't apparent in my plnkr example because it's using a small fake sample size for the bar graph)</p>  <p>Has anyone else tried to accomplish this? Turning the Bars into an Line Area graph?</p>  <p>Code:</p>  <pre><code>var data =[     {         "key"    : "Price",         "color"  : "#4C73FF",         "values" : [[ 1443621600000 , 71.89],                      [ 1443619800000 , 75.51],                      [ 1443618000000 , 68.49],                      [ 1443616200000 , 62.72],                      [ 1443612600000 , 70.39],                      [ 1443610800000 , 59.77]]     },     {         "key"    : "Quantity",         "bar"    : true,         "values" : [[ 1136005200000 , 1],                     [ 1138683600000 , 2],                     [ 1141102800000 , 1],                     [ 1143781200000 , 0],                     [ 1146369600000 , 1],                     [ 1149048000000 , 0]]     } ];  nv.addGraph(function() {       var chart = nv.models.linePlusBarChart()           .margin({top: 20, right: 40, bottom: 50, left: 40})           .x(function(d,i) { return i })           .y(function(d) { return d[1] })           .color(d3.scale.category10().range());        chart.xAxis.tickFormat(function(d) {           var dx = data[0].values[d] &amp;&amp; data[0].values[d][0] || 0;           // return time in hours:           return d3.time.format('%I:%M')(new Date(dx));       });        chart.y1Axis           .tickFormat(d3.format(',f'));        chart.y2Axis           .tickFormat(function(d) { return '$' + d3.format(',f')(d) });        chart.bars.forceY([0]);       chart.lines.interactive(false);       chart.height(300);        d3.select('#chart svg')           .datum(data)           .transition().duration(500)           .call(chart);        chart.update();       nv.utils.windowResize(chart.update);        return chart;   }); </code></pre>