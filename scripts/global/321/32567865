<p>i found a Problem in my code and I'm not able to find out why it occurs or how to fix it.</p>  <p>I implemented a cross correlation algorithm using kissFFT and it all works fine, all the maths stuff seems to be working as expected. But after optimizing and cleaning up, I get runtime Errors from Windows which tell me the following:</p>  <p><Blockquote> Windows has triggered a breakpoint in testFFT.exe.</p>  <p>This may be due to a corruption of the heap, which indicates a bug in testFFT.exe or any of the DLLs it has loaded.</p>  <p>This may also be due to the user pressing F12 while testFFT.exe has focus.</p>  <p>The output window may have more diagnostic information.</blockquote></p>  <p>I found out, which data is the cause for that error. Here is the corresponding code:</p>  <pre><code>void CCorrelation::Correlate(double* signal1, int length1, double* signal2, int length2, double* result) { int nfft = 0;  CFft transform;  if(length1 &gt;= length2) {     nfft = length1 * 2; } else {     nfft = length2 * 2; }  double* signal1Temp = (double *)malloc(nfft*sizeof(double));  if (signal1Temp == NULL) { perror("Memory exception, not enough memory for 'signal1Temp'");  exit(EXIT_FAILURE);                        }  kiss_fft_cpx* signal1TempFFT = (kiss_fft_cpx *)malloc((nfft/2+1)*sizeof(kiss_fft_cpx));  if (signal1TempFFT == NULL) { perror("Memory exception, not enough memory for 'signal1TempFFT'");  exit(EXIT_FAILURE);                         }   double* signal2Temp = (double *)malloc(nfft*sizeof(double));  if (signal2Temp == NULL) { perror("Memory exception, not enough memory for 'signal2Temp'");  exit(EXIT_FAILURE);                         }  kiss_fft_cpx* signal2TempFFT = (kiss_fft_cpx *)malloc((nfft/2+1)*sizeof(kiss_fft_cpx));  if (signal2TempFFT == NULL) { perror("Memory exception, not enough memory for 'signal2TempFFT'");  exit(EXIT_FAILURE);                         }  kiss_fft_cpx* signalTempFFTConj = (kiss_fft_cpx *)malloc((nfft/2+1)*sizeof(kiss_fft_cpx));  if (signalTempFFTConj == NULL) { perror("Memory exception, not enough memory for 'signalTempFFTConj'");  exit(EXIT_FAILURE);                         }   kiss_fft_cpx* ResultTempFFT = (kiss_fft_cpx *)malloc((nfft/2+1)*sizeof(kiss_fft_cpx));  if (ResultTempFFT == NULL) { perror("Memory exception, not enough memory for 'ResultTempFFT'");  exit(EXIT_FAILURE);                         }   double* resultTemp = (double *)malloc(nfft*sizeof(double));  if (resultTemp == NULL) { perror("Memory exception, not enough memory for 'resultTemp'");  exit(EXIT_FAILURE);                         }  for(int i = 0; i&lt; nfft; i++) {     if(i &lt; length1)     {         signal1Temp[i] = signal1[i];      }     else     {         signal1Temp[i] = 0;      }      if(i &lt; length2)     {         signal2Temp[i] = signal2[i];      }     else     {         signal2Temp[i] = 0;      } }  kiss_fftr_cfg cfgFFT = transform.fftr_alloc(nfft, 0, 0, 0);  kiss_fftr_cfg cfgFFTi = transform.fftr_alloc(nfft, 1, 0, 0);   //Transformation transform.fftr(cfgFFT, signal1Temp, signal1TempFFT);  transform.fftr(cfgFFT, signal2Temp, signal2TempFFT);   for(int i = 0; i&lt;= nfft/2; i++) {     signalTempFFTConj[i].r = signal1TempFFT[i].r;     signalTempFFTConj[i].i = signal1TempFFT[i].i * (-1); }  for(int i = 0; i&lt;= nfft; i++) {     ResultTempFFT[i].r = signalTempFFTConj[i].r * signal2TempFFT[i].r - signalTempFFTConj[i].i * signal2TempFFT[i].i;     ResultTempFFT[i].i = signalTempFFTConj[i].r * signal2TempFFT[i].i + signalTempFFTConj[i].i * signal2TempFFT[i].r; }  transform.fftri(cfgFFTi,ResultTempFFT,resultTemp);  for(int i = 0; i&lt;nfft/2; i++) {     result[i] = resultTemp[nfft/2 + i]/nfft;     result[i + nfft/2] =  resultTemp[i]/nfft; }  free(signal1Temp); free(signal1TempFFT); free(signal2Temp); free(signal2TempFFT); free(signalTempFFTConj); free(ResultTempFFT); free(resultTemp);    } </code></pre>  <p>Everything compiles fine, no error occurs, but if I run a program using this method, I get the error mentioned above. It all works fine, if I comment the lines which free ResultTempFFT and resultTemp but without freeing it, my Memory is going to be pretty unhappy after several correlations.</p>  <p>My first thought was that I Change the adresses of the pointers anywhere, but saving These adresses right after allocating the Memory and free These saved pointers does not help.</p>  <p>I'm fairly new to Memory Management, so any help is highly appreciated. Thanks in advance.</p>  <p>Fux</p>