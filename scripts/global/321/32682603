<p>Here's a basic example:</p>  <pre><code>#include &lt;all the basic stuff&gt;  int main(void) {     char *name = (char *) malloc(2 * sizeof(char));     if(name == NULL) {         fprintf(stderr, "Error: Unable to allocate enough memory!\n");         return EXIT_FAILURE;     }     strcpy(name, "Bob Smith");     printf("Name: %s\n", name);     free(name);     return EXIT_SUCCESS; } </code></pre>  <p>Because I'm only allocating 2 bytes of information (2 chars), there should be some sort of error when I perform strcpy, right? This doesn't happen, instead it just copies the string over, prints it out, frees the memory and exits successfully. Why does this happen, and how can I use malloc correctly?</p>