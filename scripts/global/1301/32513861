<p>I have the following rewrite rule on an ASP.Net site to get IIS to act as a reverse proxy:</p>  <pre><code>&lt;rewrite&gt;     &lt;rules&gt;         &lt;rule name="AppReverseProxy" enabled="true" stopProcessing="true"&gt;             &lt;match url="([d|u|c]/.*)" /&gt;             &lt;action type="Rewrite" url="http://127.0.0.1:12949/{R:1}" /&gt;         &lt;/rule&gt;     &lt;/rules&gt; &lt;/rewrite&gt; </code></pre>  <p>So basically, anything at a path of <code>domain.com/u/*</code> <code>domain.com/d/*</code> or <code>domain.com/c/*</code> will get forwarded to the local server. This works fine, and as a rule I've had no issues until now.</p>  <p>I'm having the local server return a <code>301 Permanent Redirect</code> with a <code>Location</code> header set to a subdomain like: <code>subdomain.domain.com/somePath</code>. This subdomain points to an entirely different server. </p>  <p>The problem is that IIS is rewriting the <code>Location</code> header to look like <code>domain.com/somePath</code>, it's removing the subdomain completely. I confirmed that its an IIS issue by accessing the site at <code>domain.com:12949</code> and it redirects properly to the subdomain. How can I stop IIS from re-writing the <code>Location</code> header from the local server?</p>