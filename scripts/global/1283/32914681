<p>I have a client/server pair in which I have this messaging application to which i'm trying to add SSL support. The client/server normally use DataInputStream and DataOutputStream to send/receive their info, working with byte arrays (DataOutputStream.write(byte[]) and DataInputStream.readFully(byte[])). But for some reason, that doesn't work with SSL sockets. I've tried using DataOutputStream.writeUTF() and DataInputStream.readUTF() and it works. I even tried using other types of reader/writers like BufferedReader/BufferedWriter, and they work, but when I try to use bytes, it doesn't send anything. What's weirder is the fact that after checking the DataOutputStream.size() in both sides, they both print that they have sended data.</p>  <p>Server side:</p>  <pre><code>logger.info("Waiting to accept a new client socket"); clientSocket = (SSLSocket) serverSocket.accept();  logger.info("Socket accepted successfully"); DataOutputStream dataOutputStream=newDataOutputStream(clientSocket.getOutputStream()); DataInputStream dataInputStream=new DataInputStream(clientSocket.getInputStream());  logger.trace("Socket is going to read");  int data=dataInputStream.available(); byte[] message=new byte[data];  dataInputStream.readFully(message); logger.trace("Message received: {}",message);  logger.trace("Gonna respond"); if(message.length&gt;0){     dataOutputStream.write(message,0,message.length); }else{     String response=new String("wot?".getBytes(),"ASCII");     dataOutputStream.write(response.getBytes(),0,response.getBytes().length); } dataOutputStream.flush();  logger.trace("Chars written: {}",dataOutputStream.size()); </code></pre>  <p>Client side:</p>  <pre><code>SSLSocketFactory sslsocketfactory = (SSLSocketFactory)SSLSocketFactory.getDefault(); logger.trace("SSL Socket factory created"); javax.net.ssl.SSLSocket sslSocket = (javax.net.ssl.SSLSocket)sslsocketfactory.createSocket(url, port); logger.trace("SSL Socket created"); sslSocket.setSoTimeout(6000);  outputStream = sslSocket.getOutputStream(); inputStream=sslSocket.getInputStream();  DataOutputStream dataOutputStream=new DataOutputStream(outputStream); DataInputStream dataInputStream=new DataInputStream(inputStream); logger.trace("Input and output created");  //dataOutputStream.writeBytes(frame); //dataOutputStream.writeUTF(frame);  dataOutputStream.write(frame.getBytes(),0,frame.getBytes().length);  dataOutputStream.flush(); logger.trace("Frame {} sent",frame); logger.trace("Bytes sent: {}",dataOutputStream.size());  int data=dataInputStream.available(); byte[] messageRead = new byte[data]; dataInputStream.readFully(messageRead); </code></pre>  <p>Any help would be highly appreciated. I've been looking around and I don't know what else to try.</p>