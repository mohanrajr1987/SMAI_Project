<p>So im making this mmorpg game, with a tcp protocol... bare with my english please. </p>  <p>The problem is that when i move my packets start to delay...  That's because, when i move i press the up button, the game is running at 60fps  so is sending around 60 packets per second. Now if i send at least one packet per second it wont have any noticeable delay...</p>  <p>So i did implement client side prediction like gabriel explained here... <a href="http://www.gabrielgambetta.com/fast_paced_multiplayer.html" rel="nofollow">http://www.gabrielgambetta.com/fast_paced_multiplayer.html</a></p>  <p>that fixed my moving, still client is sending around 60 packets per second, so lets say i move up up up up up up and then i send a different kind of packet that can NOT be predicted, lets say for chatting, I write "done moving up" by the time the client have recieved all the moving packets and at the end recieve the chatPacket its too dam late. Now if i dont move and i send a chatPacket it will come back almost instant.</p>  <p>So the problem is that im sending to much data to the server</p>  <p>I guess my question is...</p>  <p>How can reduce the packets being send to the server when moving and still predict the server.</p>  <p>So i thought: </p>  <pre><code>&gt; *send 1 move packet only when the player is at a multiple of 32 (each tile is 32x32) &gt; *start moving the player toward the direction  &gt; *the server move the player 32pixels  &gt; *the client recieve the response and  move toward the position the server indicated. </code></pre>  <p>Now i can think ways the users might abuse this fault. Any brighter idea?</p>  <p>If you did not understand please feel free to ask, english is not my main language. Thank you for your time.</p>  <p>PS: when the player move i want the player to end up 32 pixels further always..so that he always end up in a tile</p>