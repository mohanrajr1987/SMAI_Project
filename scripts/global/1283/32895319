<p>I'm handling this problem here in company: We have different customers, that need different fields in the same table, but we do not want to have a table with 300 columns, which is inneficient, hard to use and so on. Example:</p>  <p>table_products have this fields: product_id, product_name, product_cost.</p>  <p>then, the first client 'X' needs the field product_registerid. the client 'Y' needs the field product_zipareaid.</p>  <p>That happens by different causes. Example: they are from different states, that have different rules.</p>  <p>At this moment we came up with this solution, which i don't like:  product_id, product_name, product_cost, product_personal. In this product_personal we have saved values like '{product_registerid:001;product_zipareaid:001-000131}'.</p>  <p>I came up with a theoretic solution: extend the table, and the sql will know when i do a query in the extended table, and shou me the column with the main table's column. Something like:</p>  <p>table_products with columns product_id, product_name, product_cost. table_products_x with column product_registerid. table_products_y with column product_zipareaid.</p>  <p>And the querys would return:</p>  <p>1. select * from table_products where product_registerid = 001: product_id, product_name, product_cost, product_registerid 1, iphone, 599, 001.</p>  <p>2. select * from table_products where product_zipareaid = 000-000110: product_id, product_name, product_cost, product_zipareaid 1, iphone, 599, 000-000110.</p>  <p>So, im accepting different suggestions for solving our problem. Thank you in advance!</p>