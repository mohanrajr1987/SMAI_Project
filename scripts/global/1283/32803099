<p>So I have a Java Client server application. When I am trying to send a single file to the server (using SSLSockets) it works fine (because the connection is closed straight after the byte array of the file is sent). Although, as soon as I try to send a second file inputStream reader loop hangs (probably receives more bytes after the transfer? IDK). I ll write the block of code slightly modified so the structures are visible underneath.</p>  <blockquote>   <p>client</p> </blockquote>  <pre><code>OutputStream = sslsocket.getOutputStream();  public void sendFile(Path pathOfFile){     byte[] bytesToSend = Files.readAllBytes(pathOfFile);     out.write(bytesToSend);     out.flush(); } </code></pre>  <blockquote>   <p>server</p> </blockquote>  <pre><code>public void receiver(File file){     InputStream in = sslsocket.getInputStream();      byte[] fileBytes = new byte[sslsocket.getReceiveBufferSize()];     int temp = 0;     while ((temp = in.read(fileBytes)) &gt; 0) { // stalls after a couple of reads         file.write(fileBytes , 0, temp);     } } </code></pre>  <p>so if I close the connection straight after the <code>sendFile</code> method everything works fine. But if I even run the client on debug and breakpoint straight after the <code>sendFile</code> method the server just freezes on the <code>read()</code> method of the <code>while</code> loop. What is going on??</p>