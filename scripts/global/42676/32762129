<p>I have a REST server which returns a <code>Link</code> HTTP header with a response to a PUT to indicate the URL of the newly-created entity:</p>  <pre><code>Link:&lt;entities/6&gt;; rel="created" </code></pre>  <p>Is there any possibility to read that link header with Restangular?</p>  <p>The only facility to intercept HTTP requests with Restangular I've met so far is to register a response interceptor in the app config:</p>  <pre><code>restangular.addResponseInterceptor(function (data, operation, what, url, response, deferred) {     console.log(response.headers())     return response.data; }); </code></pre>  <p>However, with above demo implementation in place, the only HTTP header which gets logged is <code>content-type</code>. Still, I can see in the browser development toolbar that a response comes indeed with many additional HTTP response headers, such as <code>Server</code>, <code>Date</code>, and the aforementioned <code>Link</code>.</p>  <p>Why do I not have access to the full array of HTTP response headers through <code>addResponseInterceptor()</code>? <strong>Is there any way to capture the HTTP response header in question using Restangular?</strong></p>  <p>Note: I don't search for an answer using HAL or any other special response body format. I would rather like to know whether I can use plain HTTP headers with Restangular or not (if not, I will probably resort to HAL or something).</p>