<p>I am trying to partition a <code>boost::range::transformed</code> adaptor:</p>  <pre><code>#include &lt;boost/range.hpp&gt; #include &lt;boost/range/algorithm/partition.hpp&gt; #include &lt;boost/range/algorithm/transform.hpp&gt; #include &lt;boost/range/any_range.hpp&gt; #include &lt;boost/range/adaptor/transformed.hpp&gt;  using boost::adaptors::transformed;  void foo() {     boost::any_range&lt;int,                      boost::forward_traversal_tag,                      int&amp;,                      std::ptrdiff_t&gt; r;      auto t = r | transformed( [](int) {return 0;} );     auto p = boost::range::partition(t, [](int) {return true;} );      std::vector&lt;int&gt; v;      auto t2 = r | transformed( [](int) {return 0;} );     auto p2 = boost::range::partition(t2, [](int) {return true;} ); } </code></pre>  <p>The compiler complains for <code>p1</code> and <code>p2</code> that it cannot find a function <code>__partition</code> which accepts a <code>boost::iterators__transform_iterator</code>. The complete error message is</p>  <pre><code>In file included from /opt/rh/devtoolset-3/root/usr/include/c++/4.9.2/algorithm:62:0,                  from /tmp/boost_1_59_0/boost/iterator/iterator_concepts.hpp:29,                  from /tmp/boost_1_59_0/boost/range/concepts.hpp:20,                  from /tmp/boost_1_59_0/boost/range/size_type.hpp:20,                  from /tmp/boost_1_59_0/boost/range/size.hpp:21,                  from /tmp/boost_1_59_0/boost/range/functions.hpp:20,                  from /tmp/boost_1_59_0/boost/range.hpp:18,                  from range_partition.cpp:1: /opt/rh/devtoolset-3/root/usr/include/c++/4.9.2/bits/stl_algo.h: In instantiation of ‘_BIter std::partition(_BIter, _BIter, _Predicate) [with _BIter = boost::iterators::transform_iterator&lt;boost::range_detail::default_constructible_unary_fn_wrapper&lt;foo()::&lt;lambda(int)&gt;, int&gt;, boost::range_detail::any_iterator&lt;int, boost::iterators::forward_traversal_tag, int&amp;, long int, boost::any_iterator_buffer&lt;64ul&gt; &gt;, boost::iterators::use_default, boost::iterators::use_default&gt;; _Predicate = foo()::&lt;lambda(int)&gt;]’: /tmp/boost_1_59_0/boost/range/algorithm/partition.hpp:34:65:   required from ‘typename boost::range_iterator&lt;C&gt;::type boost::range::partition(ForwardRange&amp;, UnaryPredicate) [with ForwardRange = boost::range_detail::transformed_range&lt;foo()::&lt;lambda(int)&gt;, boost::range_detail::any_range&lt;int, boost::iterators::forward_traversal_tag, int&amp;, long int&gt; &gt;; UnaryPredicate = foo()::&lt;lambda(int)&gt;; typename boost::range_iterator&lt;C&gt;::type = boost::iterators::transform_iterator&lt;boost::range_detail::default_constructible_unary_fn_wrapper&lt;foo()::&lt;lambda(int)&gt;, int&gt;, boost::range_detail::any_iterator&lt;int, boost::iterators::forward_traversal_tag, int&amp;, long int, boost::any_iterator_buffer&lt;64ul&gt; &gt;, boost::iterators::use_default, boost::iterators::use_default&gt;]’ range_partition.cpp:22:66:   required from here /opt/rh/devtoolset-3/root/usr/include/c++/4.9.2/bits/stl_algo.h:4509:43: error: no matching function for call to ‘__partition(boost::iterators::transform_iterator&lt;boost::range_detail::default_constructible_unary_fn_wrapper&lt;foo()::&lt;lambda(int)&gt;, int&gt;, boost::range_detail::any_iterator&lt;int, boost::iterators::forward_traversal_tag, int&amp;, long int, boost::any_iterator_buffer&lt;64ul&gt; &gt;, boost::iterators::use_default, boost::iterators::use_default&gt;&amp;, boost::iterators::transform_iterator&lt;boost::range_detail::default_constructible_unary_fn_wrapper&lt;foo()::&lt;lambda(int)&gt;, int&gt;, boost::range_detail::any_iterator&lt;int, boost::iterators::forward_traversal_tag, int&amp;, long int, boost::any_iterator_buffer&lt;64ul&gt; &gt;, boost::iterators::use_default, boost::iterators::use_default&gt;&amp;, foo()::&lt;lambda(int)&gt;&amp;, std::__iterator_traits&lt;boost::iterators::transform_iterator&lt;boost::range_detail::default_constructible_unary_fn_wrapper&lt;foo()::&lt;lambda(int)&gt;, int&gt;, boost::range_detail::any_iterator&lt;int, boost::iterators::forward_traversal_tag, int&amp;, long int, boost::any_iterator_buffer&lt;64ul&gt; &gt;, boost::iterators::use_default, boost::iterators::use_default&gt;, true&gt;::iterator_category)’           std::__iterator_category(__first));                                            ^ /opt/rh/devtoolset-3/root/usr/include/c++/4.9.2/bits/stl_algo.h:4509:43: note: candidates are: /opt/rh/devtoolset-3/root/usr/include/c++/4.9.2/bits/stl_algo.h:1462:5: note: template&lt;class _ForwardIterator, class _Predicate&gt; _ForwardIterator std::__partition(_ForwardIterator, _ForwardIterator, _Predicate, std::forward_iterator_tag)      __partition(_ForwardIterator __first, _ForwardIterator __last,      ^ /opt/rh/devtoolset-3/root/usr/include/c++/4.9.2/bits/stl_algo.h:1462:5: note:   template argument deduction/substitution failed: /opt/rh/devtoolset-3/root/usr/include/c++/4.9.2/bits/stl_algo.h:4509:43: note:   cannot convert ‘std::__iterator_category&lt;boost::iterators::transform_iterator&lt;boost::range_detail::default_constructible_unary_fn_wrapper&lt;foo()::&lt;lambda(int)&gt;, int&gt;, boost::range_detail::any_iterator&lt;int, boost::iterators::forward_traversal_tag, int&amp;, long int, boost::any_iterator_buffer&lt;64ul&gt; &gt;, boost::iterators::use_default, boost::iterators::use_default&gt; &gt;((*(const boost::iterators::transform_iterator&lt;boost::range_detail::default_constructible_unary_fn_wrapper&lt;foo()::&lt;lambda(int)&gt;, int&gt;, boost::range_detail::any_iterator&lt;int, boost::iterators::forward_traversal_tag, int&amp;, long int, boost::any_iterator_buffer&lt;64ul&gt; &gt;, boost::iterators::use_default, boost::iterators::use_default&gt;*)(&amp; __first)))’ (type ‘std::__iterator_traits&lt;boost::iterators::transform_iterator&lt;boost::range_detail::default_constructible_unary_fn_wrapper&lt;foo()::&lt;lambda(int)&gt;, int&gt;, boost::range_detail::any_iterator&lt;int, boost::iterators::forward_traversal_tag, int&amp;, long int, boost::any_iterator_buffer&lt;64ul&gt; &gt;, boost::iterators::use_default, boost::iterators::use_default&gt;, true&gt;::iterator_category {aka boost::iterators::detail::iterator_category_with_traversal&lt;std::input_iterator_tag, boost::iterators::forward_traversal_tag&gt;}’) to type ‘std::forward_iterator_tag’           std::__iterator_category(__first));                                            ^ /opt/rh/devtoolset-3/root/usr/include/c++/4.9.2/bits/stl_algo.h:1487:5: note: template&lt;class _BidirectionalIterator, class _Predicate&gt; _BidirectionalIterator std::__partition(_BidirectionalIterator, _BidirectionalIterator, _Predicate, std::bidirectional_iterator_tag)      __partition(_BidirectionalIterator __first, _BidirectionalIterator __last,      ^ /opt/rh/devtoolset-3/root/usr/include/c++/4.9.2/bits/stl_algo.h:1487:5: note:   template argument deduction/substitution failed: /opt/rh/devtoolset-3/root/usr/include/c++/4.9.2/bits/stl_algo.h:4509:43: note:   cannot convert ‘std::__iterator_category&lt;boost::iterators::transform_iterator&lt;boost::range_detail::default_constructible_unary_fn_wrapper&lt;foo()::&lt;lambda(int)&gt;, int&gt;, boost::range_detail::any_iterator&lt;int, boost::iterators::forward_traversal_tag, int&amp;, long int, boost::any_iterator_buffer&lt;64ul&gt; &gt;, boost::iterators::use_default, boost::iterators::use_default&gt; &gt;((*(const boost::iterators::transform_iterator&lt;boost::range_detail::default_constructible_unary_fn_wrapper&lt;foo()::&lt;lambda(int)&gt;, int&gt;, boost::range_detail::any_iterator&lt;int, boost::iterators::forward_traversal_tag, int&amp;, long int, boost::any_iterator_buffer&lt;64ul&gt; &gt;, boost::iterators::use_default, boost::iterators::use_default&gt;*)(&amp; __first)))’ (type ‘std::__iterator_traits&lt;boost::iterators::transform_iterator&lt;boost::range_detail::default_constructible_unary_fn_wrapper&lt;foo()::&lt;lambda(int)&gt;, int&gt;, boost::range_detail::any_iterator&lt;int, boost::iterators::forward_traversal_tag, int&amp;, long int, boost::any_iterator_buffer&lt;64ul&gt; &gt;, boost::iterators::use_default, boost::iterators::use_default&gt;, true&gt;::iterator_category {aka boost::iterators::detail::iterator_category_with_traversal&lt;std::input_iterator_tag, boost::iterators::forward_traversal_tag&gt;}’) to type ‘std::bidirectional_iterator_tag’           std::__iterator_category(__first)); </code></pre>  <p>I am quite lost and don't see a solution for this. Any help would be greatly appreciated.</p>