<p>I've been trying to decompress some .bz2 files on the fly and line-by-line so to speak as the files I'm dealing with are massive uncompressed (region of 100 GB uncompressed) so I wanted to add a solution that saves disk space.</p>  <p>I have no problems decompressing using files compressed with vanilla bzip2 but files compressed with pbzip2 only decompress the first bz2 stream it finds. This bugtracker relates to the problem: <a href="https://svn.boost.org/trac/boost/ticket/3853" rel="nofollow">https://svn.boost.org/trac/boost/ticket/3853</a> but I was lead to believe it was fixed past version 1.41. I've checked the bzip2.hpp file and it contains the 'fixed' version and I've also checked that the version of Boost used in the program is 1.59.</p>  <p>The code is here:</p>  <pre><code>cout&lt;&lt;"Warning bzip2 support is a little buggy!"&lt;&lt;endl;  //Open the file here trans_file.open(files[i].c_str(), std::ios_base::in |  std::ios_base::binary);  //Set up boost bzip2 compression boost::iostreams::filtering_istream in; in.push(boost::iostreams::bzip2_decompressor()); in.push(trans_file); std::string str;  //Begin reading while(std::getline(in, str)) {     std::stringstream stream(str);     stream&gt;&gt;id_f&gt;&gt;id_i&gt;&gt;aif;     /* Do stuff with values here*/ } </code></pre>  <p>Any suggestions would be great. Thanks!</p>