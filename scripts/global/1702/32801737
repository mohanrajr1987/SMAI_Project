<p>I need help adding a child ptree node to an existing ptree node that already contains a value. The problem I am facing is that I end up with a <code>current_module</code> nested within an existing <code>current_module</code></p>  <p>The way I am trying to achieve this is as follows:</p>  <pre><code>std::vector&lt;moduleStatus&gt; moduleStatii = {     {"mod1", "file1.TXT", 0x0002},      {"mod2", "file2.TXT", 0x0003} };  ptree pt; pt.add("status.session_id", sessionID); pt.put("status.start_time", timeStringUTC); pt.put("status.load_file", loadFile); pt.put("status.upload.estimated_loadtime", 1983); pt.put("status.upload.time_remaining", 1613);   // not finished - non-zero // for each over the modules... for (const auto&amp; next : moduleStatii) {     ptree moduleStatus;     moduleStatus.put("current_module", next.moduleName);     moduleStatus.put("current_module.current_file", next.currentFile);     moduleStatus.put("current_module.status_code", next.statusCode);     pt.add_child("status.upload.current_module", moduleStatus); } // this is overall status - operation in progress 0x0002 pt.put("status.status_code", ss.str()); write_xml(std::cout, pt, settings); </code></pre>  <p>Unfortunately, the output is as follows:</p>  <pre class="lang-xml prettyprint-override"><code>&lt;?xml version="1.0" encoding="utf-8"?&gt; &lt;status&gt;   &lt;session_id&gt;123&lt;/session_id&gt;   &lt;start_time&gt;Sat Sep 26 20:12:46 2015&lt;/start_time&gt;   &lt;load_file&gt;/tmp/filename.zip&lt;/load_file&gt;   &lt;upload&gt;     &lt;estimated_loadtime&gt;1983&lt;/estimated_loadtime&gt;     &lt;time_remaining&gt;0&lt;/time_remaining&gt;     &lt;current_module&gt;       mod1       &lt;current_file&gt;file1.TXT&lt;/current_file&gt;       &lt;status_code&gt;3&lt;/status_code&gt;     &lt;/current_module&gt;     &lt;current_module&gt;       mod2       &lt;current_file&gt;file2.TXT&lt;/current_file&gt;       &lt;status_code&gt;3&lt;/status_code&gt;     &lt;/current_module&gt;   &lt;/upload&gt;   &lt;status_code&gt;0x0002&lt;/status_code&gt; &lt;/status&gt; </code></pre>  <p>My live <a href="http://coliru.stacked-crooked.com/a/9b6c5e5199ffde77" rel="nofollow">demo</a> shows my current output as follows:</p>  <pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt; &lt;status&gt;   &lt;session_id&gt;123&lt;/session_id&gt;   &lt;start_time&gt;Sat Sep 26 20:23:38 2015&lt;/start_time&gt;   &lt;load_file&gt;/tmp/filename.zip&lt;/load_file&gt;   &lt;upload&gt;     &lt;estimated_loadtime&gt;1983&lt;/estimated_loadtime&gt;     &lt;time_remaining&gt;1613&lt;/time_remaining&gt;     &lt;current_module&gt;       &lt;current_module&gt;         mod1         &lt;current_file&gt;file1.TXT&lt;/current_file&gt;         &lt;status_code&gt;2&lt;/status_code&gt;       &lt;/current_module&gt;     &lt;/current_module&gt;     &lt;current_module&gt;       &lt;current_module&gt;         mod2         &lt;current_file&gt;file2.TXT&lt;/current_file&gt;         &lt;status_code&gt;3&lt;/status_code&gt;       &lt;/current_module&gt;     &lt;/current_module&gt;   &lt;/upload&gt;   &lt;status_code&gt;0x0002&lt;/status_code&gt; &lt;/status&gt; </code></pre>  <p>Unfortunately it contains an extra level of nesting that I cannot seem to avoid. The key thing to note is that there is a value associated with the <code>&lt;/current_module&gt;</code> - in the example <code>mod1</code> and <code>mod2</code>. </p>