<p>I'm trying to port a working <em>C++</em> code from <em>Windows/Visual C++ 2010</em> to <em>Linux (Ubuntu 12.04)</em> platform<sup>1</sup>.  </p>  <blockquote>   <p>The code is trying to access a static member variable using boost's <code>shared_ptr</code>. When I port this code to Linux, I get: <code>"undefined reference to Test::TYPE"</code>, even though it compiles and works fine on Windows.</p> </blockquote>  <p>Here is the test program which demonstrate the error:</p>  <pre><code>#include &lt;iostream&gt; #include &lt;boost/shared_ptr.hpp&gt;  class Test { public:     Test(int x, int y) : a_(x), b_(y) { }      void print() { std::cout &lt;&lt; "a_ : " &lt;&lt; a_ &lt;&lt; ", b_ : " &lt;&lt; b_ &lt;&lt;   std::endl; }      static const unsigned int TYPE = 5;  private:     int a_;     int b_; };  int main() {     boost::shared_ptr&lt;Test&gt; pTest(new Test(10, 20));     pTest-&gt;print();     std::cout &lt;&lt; "Test Type is: " &lt;&lt; pTest-&gt;TYPE &lt;&lt; std::endl;      return 0; }  </code></pre>  <p>I would like to know why GCC gives undefined reference for above code?  </p>  <p>Note: It works fine If I use a simple pointer instead of boost <code>shared_ptr</code> .</p>  <hr>  <p><sup>1. I'm using Ubuntu Linux 12.04, gcc version 4.6.4 and boost 1.44.</sup></p>