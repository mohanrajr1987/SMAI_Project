<p><strong>Edit for clarification:</strong>  Why this does not appear to be a normal null reference is the fact that I have already used this code in another form and have had no issue there. I could manually delete the file from my device and the file will just be replaced later. This should be handled by my try/catch statement where if the file does not exist it will initialize a new object for me. </p>  <p>Furthermore when I get the error in android studio upon running it, the error points directly at the              FileInputStream fis = openFileInput(FILENAME);</p>  <p>Another thing to note is that when I add an item to the object that I am trying to pass into gson I have no issues. The object is created and I have no issue whatsoever adding items to it. </p>  <p><strong>Furthermore as context</strong>, I have these two functions in an object class that manages my data for me. I create a single one of these objects as a DataManager and use these functions to save/load (among others) an object that contains all of my data within itself. </p>  <p>When I was putting the class together I had to add that the object class       extends Activity</p>  <p>Because I was getting the fileoutput and fileinput as red functions beforehand. However this seems very sketchy to me (and perhaps explains exactly why I am seeing this error...?)</p>  <p><strong>Original before edit:</strong> In my Android Studio application I've been trying my best to utilize gson and at present I am attempting to save a single object containing multiple attributes using gson.</p>  <p>However I just successfully managed to use this same gson code to put an ArrayList into a file. I could delete that file myself and everything would work just fine. However I am now trying to place an entire object in. </p>  <p>The error is: "java.lang.NullPointerException: Attempt to invoke virtual method 'java.io.FileOutputStream android.content.Context.openFileOutput(java.lang.String, int)' on a null object reference"</p>  <p>The code looks like the following:</p>  <pre><code>public void loadFromFile() {     try {         FileInputStream fis = openFileInput(FILENAME);         BufferedReader in = new BufferedReader(new InputStreamReader(fis));         Gson gson = new Gson();         // https://google-gson.googlecode.com/svn/trunk/gson/docs/javadocs/com/google/gson/Gson.html, 2015-09-23         Type objectType = new TypeToken&lt;StatisticsRecordObject&gt;() {}.getType();         recordObject = gson.fromJson(in, objectType);      } catch (FileNotFoundException e) {         recordObject = new StatisticsRecordObject();     } }   public void saveInFile() {     try {         FileOutputStream fos = openFileOutput(FILENAME, 0);          BufferedWriter out = new BufferedWriter(new OutputStreamWriter(fos));          Gson gson = new Gson();           gson.toJson(recordObject, out);         out.flush(); //same as fflush as before. Buffer must go. FLUSH AFTER WRITING.         fos.close();     } catch (FileNotFoundException e) {         // TODO Auto-generated catch block         recordObject = new StatisticsRecordObject();     } catch (IOException e) {         // TODO Auto-generated catch block         throw new RuntimeException(e);     } } </code></pre>