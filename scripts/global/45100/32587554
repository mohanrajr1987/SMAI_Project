<p>I'm trying to convert my object into String via GSON library.  I write like this: Gson().toJson(this) and <code>String</code> I receive is not full. This is my "this" object:</p>  <p><a href="http://i.stack.imgur.com/Skut4.png" rel="nofollow"><img src="http://i.stack.imgur.com/Skut4.png" alt="http://i.snag.gy/LgXrw.jpg"></a></p>  <p>As you can see, it has accuracy field(result -> tracks->points->accuracy) But when I execute this Gson().toJson(this), I got string without this field. What's wrong with it?</p>  <pre><code>{ "carId": 14, "closed": 1442409732, "commentEnd": "оо", "guid": "bbc329e4-65c5-4b16-91d5-45283ca9dcb7", "isDeleted": false, "lastUpdate": 0, "litersEnd": -23.1, "litersStart": -23.1, "number": 0, "odometrEnd": 25, "odometrStart": 44, "opened": 1442409723, "id": 0, "status": 2, "Tracks": [     {         "categoryId": 2,         "closed": 1442409729,         "commentEnd": "рр",         "distance": 0,         "guid": "aba4de4a-5bc7-49fc-a537-b8da3dd17783",         "opened": 1442409723,         "points": [             {                 "dateCreated": 1442409725,                 "guid": 579,                 "lat": 56.8408432,                 "lng": 53.2100482             }         ],         "id": 0,         "statusNumber": 2     } ], </code></pre>  <p>}</p>  <p>My class for Point object looked like that(just declaration of variables:</p>  <pre><code>@DatabaseTable(tableName = "points") public class Point implements Serializable {  @DatabaseField(generatedId = true) @SerializedName("guid") long id; @DatabaseField(foreign = true, columnName = "trackId") transient Track track; @DatabaseField double lat; @DatabaseField double lng; @DatabaseField long dateCreated; @DatabaseField transient float accuracy; //this field is faulty transient String provider;  public Point() {}  public Point(double lat, double lng, long dateCreated) {     this.lat = lat;     this.lng = lng;     this.dateCreated = dateCreated / 1000L; } </code></pre>  <p>}</p>  <p>and <strong>Point</strong> was a field of <strong>Track</strong> object which was a field of <strong>DrivingList</strong> object, which extended <strong>Uploadable</strong> abstract class in which I run this code:</p>  <pre><code>public abstract class Uploadable {  public String toJson() {     return new Gson().toJson(this); } </code></pre>