<p>I have a JSP page that runs a database query and serializes the results to JSON.   The object that I am serializing is this:</p>  <pre><code>class DataObject {     private int iTotalRecords;     private int iTotalDisplayRecords;     private String sEcho;     private ArrayList&lt;String&gt; columns;     private ArrayList&lt;ArrayList&lt;String&gt;&gt; data;     //getter and setter methods      public void setColumns( ArrayList&lt;String&gt; cols ) {         columns = cols;     }      public void setTotalDisplayRecords( int _numrecs ) {         iTotalDisplayRecords = _numrecs;     }      public void setTotalRecords( int _numrecs ) {         iTotalRecords = _numrecs;     }      public void setData( ArrayList&lt;ArrayList&lt;String&gt;&gt; _data ) {         data = _data;     }      public void setEcho( String _echo ) {         sEcho = _echo;     }      @Override     public String toString() {         return "DataObject [iTotalRecords=" + iTotalRecords +              ", iTotalDisplayRecords=" + iTotalDisplayRecords +              ", sEcho=" + sEcho +              ", columns=" + columns +             ", data=" + data + "]";     }      public DataObject() {         this.sEcho = "1";         this.iTotalDisplayRecords = 0;         this.iTotalRecords = 0;         this.columns = new ArrayList&lt;String&gt;();         this.data = new ArrayList&lt;ArrayList&lt;String&gt;&gt;();     } } </code></pre>  <p>I have simplified the page, the JSP (which still produces blank JSON) is shown below:</p>  <pre><code>String queryOvr = "select 'error' as Input_Parameters"; String sEcho = "0"; LOG.error("db_json_test.jsp - QUERY: " + queryOvr);  int rowCount=0; int totalCount=0; Statement stmt = null; ResultSet returnData = null; Connection conn = null; try {     conn = DatabaseUtilities.getConnection();  //proprietary connection pool of host application     stmt = conn.createStatement();     returnData = stmt.executeQuery(queryOvr);     ResultSetMetaData rsmd = returnData.getMetaData();     DataObject dObj = new DataObject();      ArrayList&lt;String&gt; headerRow = new ArrayList&lt;String&gt;();     int colCount = rsmd.getColumnCount();     // write column names     for (int i=0; i&lt;colCount; i++) {         String headerName = rsmd.getColumnName(i+1);         if ("".equals(headerName)) {             headerName = "Column-" + String.valueOf(i+1);         }         LOG.error("db_json_test.jsp - HEADER: " + headerName);         headerRow.add(headerName);     }     dObj.setColumns(headerRow);      // write data     ArrayList&lt;ArrayList&lt;String&gt;&gt; dataArray = new ArrayList&lt;ArrayList&lt;String&gt;&gt;();     while ( returnData.next() ) {         rowCount++;         ArrayList&lt;String&gt; dataRow = new ArrayList&lt;String&gt;();         for (int i=0; i&lt;colCount; i++){              String dbData = returnData.getString(i+1);             LOG.error("db_json_test.jsp - DATA: row: " + headerRow.get(i) + ", value: " + dbData);             dataRow.add(dbData);         }         dataArray.add(dataRow);         totalCount++;     }     dObj.setData(dataArray);      dObj.setEcho(sEcho);     dObj.setTotalRecords(totalCount);     dObj.setTotalDisplayRecords(rowCount);      LOG.error("db_json_test.jsp - OBJ: " + dObj.toString());     Type typeResults = new TypeToken&lt;DataObject&gt;(){}.getType();     Gson gson = new Gson();     String json = gson.toJson(dObj, typeResults);     LOG.error("db_json_test.jsp - JSON: " + json);      //gson.toJson(dObj, typeResults, response.getWriter());     response.setStatus(HttpServletResponse.SC_OK);     response.getWriter().write(json);     response.getWriter().flush();     response.getWriter().close(); } catch (Throwable t) {     LOG.error("db_json.jsp - Error: " + t.toString());     //t.printStackTrace();      response.setStatus(HttpServletResponse.SC_OK);     response.getWriter().write("{\"error\":\"" + t.toString() + "\"}");     response.getWriter().flush();     response.getWriter().close(); } </code></pre>  <p>When I look in the logs I can see that the DataObject instance is getting properly populated:</p>  <pre><code>783167943 30 Sep 2015 17:37:51,924 ERROR [http-8500-1] JSP            - db_json_test.jsp - QUERY: select 'error' as Input_Parameters 783167959 30 Sep 2015 17:37:51,940 ERROR [http-8500-1] JSP            - db_json_test.jsp - HEADER: Input_Parameters 783167959 30 Sep 2015 17:37:51,940 ERROR [http-8500-1] JSP            - db_json_test.jsp - DATA: row: Input_Parameters, value: error 783167959 30 Sep 2015 17:37:51,940 ERROR [http-8500-1] JSP            - db_json_test.jsp - OBJ: DataObject [iTotalRecords=1, iTotalDisplayRecords=1, sEcho=0, columns=[Input_Parameters], data=[[error]]] 783167959 30 Sep 2015 17:37:51,940 ERROR [http-8500-1] JSP            - db_json_test.jsp - JSON:  </code></pre>  <p>However when I go to serialize it using gson.toJson(dObj) I get a blank string.   I have tried specifying the type as shown in the example above to no different results.   Outside of the argument that I probably shouldn't be doing this in a JSP file, what am I missing here?</p>  <p>Worth noting is that the catch routine does return the error message as valid JSON, so the contentType and charset are getting properly set in the headers.</p>  <p>The following Java code DOES produce the expected JSON...</p>  <pre><code>public class gsonTest {      class DataObject {         private int iTotalRecords;         private int iTotalDisplayRecords;         private String sEcho;         private ArrayList&lt;String&gt; columns;         private ArrayList&lt;ArrayList&lt;String&gt;&gt; data;          // getter and setter methods          public void setColumns(ArrayList&lt;String&gt; cols) {             columns = cols;         }          public void setTotalDisplayRecords(int _numrecs) {             iTotalDisplayRecords = _numrecs;         }          public void setTotalRecords(int _numrecs) {             iTotalRecords = _numrecs;         }          public void setData(ArrayList&lt;ArrayList&lt;String&gt;&gt; _data) {             data = _data;         }          public void setEcho(String _echo) {             sEcho = _echo;         }          @Override         public String toString() {             return "DataObject [iTotalRecords=" + iTotalRecords                     + ", iTotalDisplayRecords=" + iTotalDisplayRecords                     + ", sEcho=" + sEcho                      + ", columns=" + columns                      + ", data=" + data + "]";         }          public DataObject() {             this.sEcho = "";             this.iTotalDisplayRecords = 0;             this.iTotalRecords = 0;             this.columns = new ArrayList&lt;String&gt;();             this.data = new ArrayList&lt;ArrayList&lt;String&gt;&gt;();         }     }      public static void main(String[] args) {         int totalCount = 0;         String sEcho = "1";         Gson gson = new Gson();         gsonTest tst = new gsonTest();          Type typeResults = new TypeToken&lt;DataObject&gt;(){}.getType();          DataObject obj = tst.new DataObject();          ArrayList&lt;String&gt; headerRow = new ArrayList&lt;String&gt;();         // write column names         int colCount = 2;         for (int i = 0; i &lt; colCount; i++) {             headerRow.add("Column-" + String.valueOf(i));         }         obj.setColumns(headerRow);          // write data         ArrayList&lt;ArrayList&lt;String&gt;&gt; dataArray = new ArrayList&lt;ArrayList&lt;String&gt;&gt;();         int rowCount = 0;         while (rowCount &lt; 20) {             ArrayList&lt;String&gt; dataRow = new ArrayList&lt;String&gt;();             for (int i = 0; i &lt; colCount; i++) {                 dataRow.add("Row-" + String.valueOf(rowCount) + ":Col-"                         + String.valueOf(i));             }             rowCount++;             dataArray.add(dataRow);             totalCount++;         }         obj.setData(dataArray);          obj.setEcho(sEcho);         obj.setTotalRecords(totalCount);         obj.setTotalDisplayRecords(rowCount);         String output = gson.toJson(obj,typeResults);         System.out.println(obj.toString());         System.out.println(output);     } } </code></pre>  <p>Here is the output:</p>  <blockquote>   <p>DataObject [iTotalRecords=20, iTotalDisplayRecords=20, sEcho=1,   columns=[Column-0, Column-1], data=[[Row-0:Col-0, Row-0:Col-1],   [Row-1:Col-0, Row-1:Col-1], [Row-2:Col-0, Row-2:Col-1], [Row-3:Col-0,   Row-3:Col-1], [Row-4:Col-0, Row-4:Col-1], [Row-5:Col-0, Row-5:Col-1],   [Row-6:Col-0, Row-6:Col-1], [Row-7:Col-0, Row-7:Col-1], [Row-8:Col-0,   Row-8:Col-1], [Row-9:Col-0, Row-9:Col-1], [Row-10:Col-0,   Row-10:Col-1], [Row-11:Col-0, Row-11:Col-1], [Row-12:Col-0,   Row-12:Col-1], [Row-13:Col-0, Row-13:Col-1], [Row-14:Col-0,   Row-14:Col-1], [Row-15:Col-0, Row-15:Col-1], [Row-16:Col-0,   Row-16:Col-1], [Row-17:Col-0, Row-17:Col-1], [Row-18:Col-0,   Row-18:Col-1], [Row-19:Col-0, Row-19:Col-1]]]           {"iTotalRecords":20,"iTotalDisplayRecords":20,"sEcho":"1","columns":["Column-0","Column-1"],"data":[["Row-0:Col-0","Row-0:Col-1"],["Row-1:Col-0","Row-1:Col-1"],["Row-2:Col-0","Row-2:Col-1"],["Row-3:Col-0","Row-3:Col-1"],["Row-4:Col-0","Row-4:Col-1"],["Row-5:Col-0","Row-5:Col-1"],["Row-6:Col-0","Row-6:Col-1"],["Row-7:Col-0","Row-7:Col-1"],["Row-8:Col-0","Row-8:Col-1"],["Row-9:Col-0","Row-9:Col-1"],["Row-10:Col-0","Row-10:Col-1"],["Row-11:Col-0","Row-11:Col-1"],["Row-12:Col-0","Row-12:Col-1"],["Row-13:Col-0","Row-13:Col-1"],["Row-14:Col-0","Row-14:Col-1"],["Row-15:Col-0","Row-15:Col-1"],["Row-16:Col-0","Row-16:Col-1"],["Row-17:Col-0","Row-17:Col-1"],["Row-18:Col-0","Row-18:Col-1"],["Row-19:Col-0","Row-19:Col-1"]]}</p> </blockquote>