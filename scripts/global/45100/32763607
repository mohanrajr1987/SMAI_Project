<p>I'm new to ArangoDB and trying to do a few very basic queries. I was successful to add vertices and edges, but the query retrieving edges always throws an exception. I tried a few different queries from the (very minimalistic) documentation and it always throws the same. Here is one of the queries:</p>  <pre><code>CursorEntity&lt;BaseDocument&gt; r = arangoDriver.graphGetEdges("MyGraph", BaseDocument.class, "Person/1"); while (r.iterator().hasNext()){     BaseDocument d = r.iterator().next();     System.out.println(d.getDocumentHandle()); } </code></pre>  <p>Or this one with the same exception:</p>  <pre><code>String query = "for i in GRAPH_EDGES(@graphName, @vertexId, {direction: 'outbound', edgeCollectionRestriction: 'Friends'}) return i";     Map&lt;String, Object&gt; bindVars = new MapBuilder().put("graphName", "MyGraph").put("vertexId", "Person/1").get();     CursorEntity&lt;PlainEdgeEntity&gt; result;     try {         result = arangoDriver.executeQuery(query, bindVars, PlainEdgeEntity.class ,true, 10); </code></pre>  <p>And here the exception:</p>  <pre><code>Exception in thread "main" com.google.gson.JsonSyntaxException: java.lang.IllegalStateException: Expected BEGIN_OBJECT but was STRING at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:176) at com.google.gson.Gson.fromJson(Gson.java:803) at com.google.gson.Gson.fromJson(Gson.java:868) at com.google.gson.Gson$1.deserialize(Gson.java:126) at com.arangodb.entity.EntityDeserializers$CursorEntityDeserializer.deserialize(EntityDeserializers.java:519) at com.arangodb.entity.EntityDeserializers$CursorEntityDeserializer.deserialize(EntityDeserializers.java:488) at com.google.gson.TreeTypeAdapter.read(TreeTypeAdapter.java:58) at com.google.gson.Gson.fromJson(Gson.java:803) at com.google.gson.Gson.fromJson(Gson.java:768) at com.google.gson.Gson.fromJson(Gson.java:717) at com.arangodb.entity.EntityFactory.createEntity(EntityFactory.java:109) at com.arangodb.BaseArangoDriver.createEntityImpl(BaseArangoDriver.java:270) at com.arangodb.BaseArangoDriver.createEntity(BaseArangoDriver.java:181) at com.arangodb.BaseArangoDriver.createEntity(BaseArangoDriver.java:219) at com.arangodb.impl.InternalCursorDriverImpl.executeQuery(InternalCursorDriverImpl.java:78) at com.arangodb.ArangoDriver.executeQuery(ArangoDriver.java:1877) at com.arangodb.ArangoDriver.graphGetEdges(ArangoDriver.java:4135) at x.y.z.database.arangodb.Arango.main(Arango.java:34) </code></pre>  <p>I almost think it is a bug? Maybe a problem with newest versions? Or do i miss something?</p>  <p>Using latest versions.. 2.6.8 and driver 2.5.7</p>  <p><strong>Update:</strong> if I use a nonexistent ID it returns zero results without exception and if i use an existing ID the same exception is thrown. that tells me that i used the right parameters, and the problem is most likely a bug..</p>