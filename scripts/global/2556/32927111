<p>I was messing around with using OCaml implementing some of the data structures in Chris Okasaki's Purely Functional Data Structures and came across this type definition:</p>  <pre><code> type tree = Node of int * int * tree list;; </code></pre>  <p>I didn't think it needed the tag as it wasn't a union type, so I tried eliminating the tag, however I got the following error:</p>  <pre><code># type tree = int * int * tree list;; Characters 5-33: type tree = int * int * tree list;;        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The type abbreviation tree is cyclic </code></pre>  <p>Why does this happen with two seemingly equivalent type definitions?</p>