<p>I did pattern matching, and it's working just fine:</p>  <pre><code>let rec unzip  l =      match l with     |[] -&gt; ([], [])     |(x,y)::tail -&gt;      let (first, second) = unzip tail in        (x::first, y::second) </code></pre>  <p>but how would I do this using map or fold right (tips only please don't tell me how to actually do it)</p>  <p>I was thinking something along the lines of:</p>  <pre><code>let unzip : ('a * 'b) list -&gt; 'a list * 'b list = let (first,second) = map (fun (x,y) -&gt; (x::first, y::second) );; </code></pre>  <p>but getting syntax error</p>