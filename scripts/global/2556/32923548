<p>In Python, if I wanted to use explicit functional-style programming to sum up a list, I could do</p>  <pre><code>&gt;&gt;&gt; import operator &gt;&gt;&gt; reduce(operator.add, [3, -1, 2]) 4 </code></pre>  <p>Mathematica, being closer to a pure functional language than Python, calls it <em><a href="https://en.wikipedia.org/wiki/Fold_%28higher-order_function%29" rel="nofollow">Fold</a></em> instead of <em>reduce</em>, but the outcome is the same.</p>  <pre><code>In[1]:= Fold[Plus, {3, -1, 2}] Out[1]= 4 </code></pre>  <p>So now, in Mathematica, if I wanted to get the result of the "fold" at every step during the iteration, I could use the function <em>FoldList</em>.</p>  <pre><code>In[2]:= FoldList[Plus, {3, -1, 2}] Out[2]= {3, 2, 4} </code></pre>  <p>How do I get such a list (or preferably an iterator) in Python?  In general, does this functional operation have a name?</p>