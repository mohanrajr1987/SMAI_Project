<p>Our production MySQL server refuses to return times in 24hr format, opting for 12hr instead. I searched SO and Google but all questions refer to formatting and I have no problems formatting.</p>  <p>A basic example;</p>  <pre><code>mysql&gt; SELECT FROM_UNIXTIME(1442987399); +---------------------------+ | FROM_UNIXTIME(1442987399) | +---------------------------+ | 2015-09-23 05:49:59       | +---------------------------+ 1 row in set (0.00 sec) </code></pre>  <p>Checking <a href="http://www.epochconverter.com/" rel="nofollow">http://www.epochconverter.com/</a> </p>  <blockquote>   <p>Your time zone: 9/23/2015, 3:49:59 PM GMT+10:00</p> </blockquote>  <p>Its not a time issue, it is actually 15:49 pm.</p>  <p>The thing is, even if I try to force a 24hr format it still wont do it ... </p>  <pre><code>mysql&gt; SELECT HOUR(DATE_FORMAT(FROM_UNIXTIME(1442987399), "%T")); +----------------------------------------------------+ | HOUR(DATE_FORMAT(FROM_UNIXTIME(1442987399), "%T")) | +----------------------------------------------------+ |                                                  5 | +----------------------------------------------------+ 1 row in set (0.00 sec) </code></pre>  <p>The interesting thing is that in 12hr it'd be 3, not 5. In 24hr it'd be 15. So, its not correct by either format.</p>  <p>Curiously, we're in a +10 timezone, could it be deducting 10hrs for some reason?</p>  <p>It doesn't matter what time the timestamp is... I've tested this across many, many timestamps and rows in the db.</p>  <p>All these queries work as expected on my local and dev servers. I'm not new to MySQL date functions. I am new to this problem though.</p>  <p><strong>On my local;</strong></p>  <pre><code>mysql&gt; SELECT HOUR(DATE_FORMAT(FROM_UNIXTIME(1442987399), "%T")); +----------------------------------------------------+ | HOUR(DATE_FORMAT(FROM_UNIXTIME(1442987399), "%T")) | +----------------------------------------------------+ |                                                 15 | +----------------------------------------------------+ 1 row in set (0.00 sec) </code></pre>  <p>Well aware that I can drop the DATE_FORMAT also, its only there for a fair comparison.</p>  <pre><code>mysql&gt; SELECT HOUR(FROM_UNIXTIME(1442987399)); +---------------------------------+ | HOUR(FROM_UNIXTIME(1442987399)) | +---------------------------------+ |                              15 | +---------------------------------+ 1 row in set (0.00 sec) </code></pre>  <p><strong>EDIT</strong></p>  <p>Thanks to @irina-avram it was a time_zone problem.</p>  <pre><code>mysql&gt; SHOW VARIABLES LIKE '%time_zone%'; +------------------+-------+ | Variable_name    | Value | +------------------+-------+ | system_time_zone | UTC   | | time_zone        | UTC   | +------------------+-------+ 2 rows in set (0.00 sec) </code></pre>