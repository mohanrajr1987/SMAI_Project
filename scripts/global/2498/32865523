<p>I have code like this all over my class:</p>  <pre><code>if (src.getTYPERECORD().getACT().equalsIgnoreCase("B")) </code></pre>  <p>Now it can crash if the getters return null, and for the team's Best Practices, I was asked to convert it into:</p>  <pre><code>if ("B".equalsIgnoreCase(src.getTYPERECORD().getACT())) </code></pre>  <p>I have come up with the following regex for search for the easier case of where I already had the value assigned to variable like act.equalsIgnoreCase("B"):</p>  <pre><code>(\w*).equalsIgnoreCase\("(\w*)"\) </code></pre>  <p>Replace with: </p>  <pre><code>"\2".equalsIgnoreCase(\1) </code></pre>  <p>Which works except for the cases mentioned above, AND this:</p>  <pre><code>tos.substring(1,1).equalsIgnoreCase("A") </code></pre>  <p>Could you please help come up with the search and replace regex to catch the two examples mentioned above? It would need to account for situations where the opening IF bracket is adjacent, and where there is a space like if ( src.... or if (src....</p>  <p>Thanks!</p>