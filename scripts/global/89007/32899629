<p>... ...</p>  <p><strong>UPDATE</strong></p>  <p><strong>HTML</strong></p>  <pre><code>&lt;my-directive ng-repeat="item in items = ( data | filter: {isExists: true})"&gt;     something &lt;/my-directive&gt; &lt;my-second-directive counter="{{items.length}}"&gt;&lt;/my-second-directive&gt; </code></pre>  <p><strong>JS</strong></p>  <pre><code>angular.module('directives') .directive('myDirective', function () {     ... }) .directive('mySecondDirective', function () {     return {         restrict: 'EA',         transclude: false,         replace: true,         scope: {             counter: '@'         },         template: '',         link: function (scope, element, attrs) {             alert(scope.counter);         }     }); </code></pre>  <p>Excuse me I've not described my question well. My first directive should be ngRepeated, with filter. But in my second directive, I would like to allow to show a counter, how many first directive is currently instantiated, because the user will be able to add and remove instances. So I would like to get the value of the items.length by fly with the second directive. But the link() method of the second directive is fired prior the ngRepeat, so the value of the counter will be an empty string.</p>  <p>Thanks in advance</p>  <p><strong>UPDATE 2</strong></p>  <pre><code>.directive('cardGroupHeader', function($templateCache){     return {         restrict: 'EA',         transclude: true,         replace: true,         require: '^cardGroup',         scope: {             cbiscounter: '=?',             cbcounter: '=?',             cbisarrow: '@?'         },         template: $templateCache.get('card-group-header-tpl.html'),         link: function(scope, $element, $attrs, cardGroupController) {             scope.rowId = cardGroupController.getCurrentId();             console.log(scope.cbcounter);              scope.toggle = function () {                 cardGroupController.toggle(scope.rowId)             }             angular.element(document).ready(function () {                 console.log(scope.cbcounter);             });              scope.$watch('scope.cbcounter', function (n, o) {                 if(n &amp;&amp; n != o) {                     console.log(n);                 }             });             //scope.cbcounter++;         }     }; }) </code></pre>  <p>HTML</p>  <pre><code>&lt;card-group-header cbiscounter="true" cbarrow="true" cbcounter="data.length"&gt;Waiting for Approval&lt;/card-group-header&gt;     &lt;card-group-row cbCollapsed="false"&gt;         &lt;card ng-repeat="approveItem in data = (approveItems | filter: {isApproved: false, isRejected: false})"&gt; </code></pre>  <p>TEMPLATE</p>  <pre><code>$templateCache.put('card-group-header-tpl.html', '&lt;div class="card-group-header" ng-click="toggle()"&gt;&lt;span ng-transclude&gt;&lt;/span&gt;&lt;span class="card-group-counter" ng-if="cbiscounter"&gt;{{cbcounter}}&lt;/span&gt;&lt;/div&gt;'); </code></pre>  <p>When I change the <code>data.length</code> to <code>2</code>, this is transferred well. If I use the <code>data.length</code> the <code>scope.cbcounter</code> is always undefined. In case of <code>2</code> I've got it back on the <code>console.log(scope.cbcounter);</code></p>