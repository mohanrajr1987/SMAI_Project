<p>I have the following html</p>  <pre><code>&lt;section class="result" ng-repeat="record in results | orderBy: sortRecordByTimestamp" ng-init="highlights(record)" ng-class="level"&gt;           &lt;!-- some stuff --&gt; &lt;/section&gt; </code></pre>  <p>My scope has <code>$scope.level = ''</code> on init. Functions are:</p>  <pre><code>function highlights(record) {    // will contain more logic   console.log('Highlighting...');   level(record);  } </code></pre>  <p>and </p>  <pre><code>function level(record) {    $scope.spreadsheet.forEach(function(row) {     if (row.Name.indexOf(record.event) &gt; -1) {       $scope.level = 'level' + row.Level;     }   });  } </code></pre>  <p>It correctly sets the <code>$scope.level</code> like it is supposed to, however, it is shared across all my results.</p>  <p>Isn't <code>ng-repeat</code> creating child scopes, with primitives being overwritten?</p>  <p><strong>EDIT:</strong></p>  <p>Changed the html:</p>  <pre><code>&lt;section class="result" ng-repeat="record in results | orderBy: sortRecordByTimestamp" ng-class="level(record)"&gt;   &lt;!-- code --&gt; &lt;/section&gt; </code></pre>  <p>and the js:</p>  <pre><code>$scope.level = function(record) {    $scope.spreadsheet.forEach(function(row) {     if (row.Name.indexOf(record.event) &gt; -1) {       console.log('Highlighting: level' + row.Level);       return 'level' + row.Level;     }   });  } </code></pre>  <p>It is logging correct values, however, ng-class is never set. Why?</p>  <p><strong>EDIT 2:</strong></p>  <p>To clarify what I am trying to do:</p>  <p><code>$scope.spreadsheet</code> contains data to compare to <code>record</code> data. Match can be found in 3 instances, each enumerated in <code>row.Level</code> depending on <code>row.Name</code>. So <code>level(record)</code> returns a css class of <strong>level1</strong>, <strong>level2</strong> or <strong>level3</strong>.</p>  <p>These have a <code>background: /* color */</code> property set to them. So each row that has <code>record.event</code> found in the <code>row.Name</code> (they don't match exactly, that's why no <code>===</code>) is colored based on which level of importance it is given.</p>  <p>The first time I tried to make the child scopes inherit the <code>$scope.level</code> property and determine it on element creation (that's why <code>ng-init</code>), then I made <code>$scope.level</code> a function that returns the level. However, it fires on ALL records with the result of the last iteration.</p>  <p>How do I make determining the level separate for each record?</p>