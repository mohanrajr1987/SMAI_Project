<p>Let's say we want to perform an "intricate series" of operations on a data.table using <code>{}</code> inside the <code>j</code> of a data.table, a la:</p>  <pre><code>data(mtcars) carName &lt;- row.names(mtcars) mtcars &lt;- data.table(mtcars) mtcars[, car_name := carName]  mtcars[, {   num_cars &lt;- length(unique(car_name))   avg_disp &lt;- mean(disp)   avg_hp &lt;- mean(hp)   eff &lt;- mpg/wt   data.table(num_cars, avg_disp, avg_hp,              avg_eff = mean(eff), median_eff = median(eff)) }, keyby = cyl] </code></pre>  <p>I understand that this can be performed in several steps:</p>  <pre><code>mtcars[, `:=`(num_cars = length(unique(car_name)),               avg_disp = mean(disp),               avg_hp = mean(hp),               eff = mpg/wt),        keyby = cyl]  mtcars[, `:=`(avg_eff = mean(eff), median_eff = median(eff)), keyby = cyl] mtcars[, .SD[1,list(num_cars, avg_disp, avg_hp, avg_eff, median_eff)],         keyby = cyl] </code></pre>  <p>But I'm interested in know what the most idiomatic way (read: best practices) way to perform this kind of thing is.</p>  <p>Is it generally frowned down upon to work inside <code>{}</code> in the <code>j</code> of a data.table?</p>