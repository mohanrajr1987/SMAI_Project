<p>I've been reading up on logging in Java and it seems like SLF4J is the way to go.</p>  <p>What I don't understand is why the logging object is obtained/initialized the way it is. </p>  <p>Why does</p>  <pre><code>private static final Logger logger = LoggerFactory.getLogger(App.class); </code></pre>  <p>need to be in every class?</p>  <ol> <li><p>Why not instead have just some static logger instance for all classes/class-instances? (What happens if I don't create new instances for every class?)</p></li> <li><p>Why do I need to pass the class object of the class the logger is being used in to the factory? Won't the logger have all of these details during runtime anyway? (What happens if I pass some different class object?)</p></li> </ol>