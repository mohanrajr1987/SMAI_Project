<p>I am asking for coding convention and the proper method for using a lock mechanism on properties and methods with in a class.</p>  <p>So for example I have two properties and two methods:</p>  <pre><code>public class FOO { private Guid uniqueIdentifier; object _syncuniqueIdentifier = new object(); public Guid UniqueIdentifier  {        get         {          lock(_syncuniqueIdentifier)         {         return uniqueIdentifier;         }             }     set      {           lock(_syncuniqueIdentifier)          {           uniqueIdentifier = value;          }               } }  private string userName; object _syncuserName = new object(); public string UserName  {        get         {          lock(_syncuserName)         {         return userName;         }             }     set      {           lock(_syncuserName)          {           userName = value;          }               } }  object _syncMyMethod = new object(); public void myMethod(object argument1, object argument2) {    lock(_syncMyMethod)    {    do work with argument1 and argument2    } }   } </code></pre>  <p>Am I using the correct pattern to implement threading or should I instead put a single object _syncLock and have all properties and methods lock on that object ? What is the coding standard for doing this ?</p>