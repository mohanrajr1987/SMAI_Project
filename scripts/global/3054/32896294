<p>This is kind of code golf but I don't feel it's off topic because the issue actually comes up often while I'm working, and keeping code concise and readable is very <em>on</em> topic.</p>  <pre><code>//$array = ['A' =&gt; 'FOO', 'B' =&gt; 'BAR']; //We don't necessarily know what this is  // :-) $variable = ( isset($array['A']) ) ? $array['A'] : NULL );  //We just want $variable to be NULL if the key isn't in the array </code></pre>  <p>The works fine but it gets very long with longer variable names etc, and it makes it hard to read big multi-dimensional arrays...</p>  <pre><code>[     'Foo' =&gt; 'Bar',     'Boo' =&gt; [          'FooBarMacFooBar' =&gt; ( isset($SomeOtherLongVariable['BooBarMcFooFar']) ) ? $SomeOtherLongVariable['BooBarMcFooFar'] : NULL )      ] ;  ] </code></pre>  <p>Aside from being ugly and hard to read, it's not compliant with the line width maximum (80?) of PSR-2.</p>  <p>The plane won't crash if I do this...</p>  <pre><code>[     'Foo' =&gt; 'Bar',     'Boo' =&gt; [          // THIS WILL THROW AND ERROR NOTICE IF THE KEY DOESN'T EXIST          'FooBarMacFooBar' =&gt; $SomeOtherLongVariable['BooBarMcFooFar']      ] ;  ] </code></pre>  <p>...but if the contents of the array is unknown, it will fill up the logs with error notices about "array key doesn't exist".</p>  <p>Is there a solution to this? (<em>besides</em> writing a helper function)</p>  <p>(...and besides using Ruby :-)</p>