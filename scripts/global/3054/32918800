<p>I've seen some boilerplate header file code for dealing with different OS's, like the following:</p>  <pre><code>#ifdef __WIN32     //windows #elif __linux     //linux #elif __unix     //all unix not captured above #endif </code></pre>  <p>If <code>__unix</code> catches all unices not captured by <code>__linux</code>, why not just use <code>__unix</code>? I'm assuming it's some sort of safeguard, like "if <code>__linux</code> isn't enough, use this".</p>  <p>However, there has to be some reason both are used, instead of just having a catch-all with <code>__unix</code> (once again, this assumption may be wrong).</p>  <p>What's the deal?</p>