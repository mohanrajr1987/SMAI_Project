<p>So, with this I make a VLA:</p>  <pre><code>int main() {     const size_t LEN = 200; // as I know it's read-onlyy     int array[LEN]; } </code></pre>  <p>So I enstablished that VLAs are not more requested in C1.. In the C99 today they are optional... For this motivaiton, to use that code is not advised.</p>  <p>But if I do this:</p>  <pre><code>#define MYLEN 100 int main() {     int xar[MYLEN]; } </code></pre>  <p>or</p>  <pre><code>int main() {     int xar[100];     const size_t MYLEN = sizeof(xar) / sizeof(int); } </code></pre>  <p>I think I have:</p>  <ul> <li>In the first case I have a constant variable in the compile time, but it's more logic and not typed.</li> <li>In the second case, a typed variable, (read-only)</li> </ul>  <p>But with it's more valid with the define directive as it's typical to C language.What do you suggest to use?</p>  <p>Anyway, the VLA can be used inside the main but it has not so sense.</p>