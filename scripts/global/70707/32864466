<p>I have used the following code for implementing facebook and google plus login in my ios app.Facebook is working fine. Tapping google plus signin button I am allowed to enter details through safari or google+ app. The problem is that first time it gets logged in successfully. When I tap signout or disconnect buttons on another view controller, I am not logging in again. The finishedWithAuth delegate is not called second time. Although I am again presented with the view to enter details.</p>  <p>Please help me. I have searched all over but no hope.</p>  <pre><code>import UIKit import FBSDKCoreKit import FBSDKLoginKit   class ViewController:   UIViewController,FBSDKLoginButtonDelegate,GPPSignInDelegate {  var signIn = GPPSignIn.sharedInstance() // @IBOutlet weak var signInButton: GPPSignInButton!  override func viewDidLoad() {     super.viewDidLoad()       signIn.shouldFetchGooglePlusUser = true     signIn.shouldFetchGoogleUserEmail = true     signIn.shouldFetchGoogleUserID = true      signIn.scopes.append(kGTLAuthScopePlusLogin)     signIn.scopes.append("profile")     signIn.delegate = self     signIn.trySilentAuthentication()      if FBSDKAccessToken.currentAccessToken() == nil {          print("Not logged in")      } else {          print("Logged in")      }   }     override func prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject?) { //        if segue.identifier == "idSegueContent" { //            contentViewController = segue.destinationViewController as! ContentViewController //        } }    func finishedWithAuth(auth: GTMOAuth2Authentication!, error: NSError!) {     print("\(error), \(auth)")      if ((error) != nil) {          print(error.localizedDescription)      } else {           print(signIn.userEmail)         print(signIn.userID)         self.performSegueWithIdentifier("loggedIn", sender: self)      }  }  func loginButton(fbLogin: FBSDKLoginButton!, didCompleteWithResult result: FBSDKLoginManagerLoginResult!, error: NSError!) {      if error == nil {         print("logged")         self.performSegueWithIdentifier("loggedIn", sender: self)      }else {          print(error.localizedDescription)     } }  func loginButtonDidLogOut(loginButton: FBSDKLoginButton!) {     print("logged out") }  // Action for facebook login button @IBAction func fbLoginAction(sender: AnyObject) {      let fbLoginManager : FBSDKLoginManager = FBSDKLoginManager()     fbLoginManager.logInWithReadPermissions(["email"], fromViewController: self) { (result, error) -&gt; Void in         let fbloginresult : FBSDKLoginManagerLoginResult = result         if(fbloginresult.grantedPermissions.contains("email"))         {             self.getFBUserData()  //                fbLoginManager.logOut()         }     }  }  // function to get data from facebook login func getFBUserData(){     if((FBSDKAccessToken.currentAccessToken()) != nil){         FBSDKGraphRequest(graphPath: "me", parameters: ["fields": "id, name, first_name, last_name, picture.type(large), email"]).startWithCompletionHandler({ (connection, result, error) -&gt; Void in             if (error == nil){                 let imageUrlDic: NSDictionary = (result.objectForKey("picture"))?.objectForKey("data") as! NSDictionary                 let imageUrl = imageUrlDic.objectForKey("url") as! String                 SingletonClass.sharedInstance.name = result.objectForKey("first_name") as! String                 SingletonClass.sharedInstance.userImage = imageUrl //                    print(result)                 self.performSegueWithIdentifier("loggedIn", sender: self)             }         })     } }   @IBAction func googlePlusLogin(sender: AnyObject) {      signIn.authenticate();  }  override func didReceiveMemoryWarning() {     super.didReceiveMemoryWarning() //         Dispose of any resources that can be recreated. }  } </code></pre>