<p>I'm trying to adapt <a href="http://stackoverflow.com/questions/7927750/specify-an-ssh-key-for-git-push-for-a-given-domain">Specify an SSH key for git push for a given domain</a> to my problem. The difference in my case is that I don't want to push to multiple domains, but always to the same domain as multiple (Git) users from one (Unix) account.</p>  <p><code>~/.ssh/config</code> is set up to have an entry for each user:</p>  <pre><code>Host git-as-bob   HostName git.domain.tld   User git   IdentityFile /home/shared/.ssh/id_rsa-bob   IdentitiesOnly yes  Host git-as-alice   HostName git.domain.tld   User git   IdentityFile /home/shared/.ssh/id_rsa-alice   IdentitiesOnly yes </code></pre>  <p>In one repository, I've made the necessary changes, and pushing works just fine (note: saying just <code>git push</code> is supposed not to work, that's what the first command is for. It wouldn't much matter though, because the default pubkey only has read access to the repositories).</p>  <pre><code>$ git remote set-url --push origin no_push $ git remote add origin-bob git@git-as-bob:/repository1.git $ git remote add origin-bob git@git-as-bob:/repository1.git </code></pre>  <p>Here, the following happens:</p>  <pre><code>$ git push origin-bob master Everything up-to-date </code></pre>  <p>In a second repository, I did the exact same thing, but the outcome is different:</p>  <pre><code>$ git push origin-bob master To git@git-as-bob:/repository2.git  ! [rejected]        master -&gt; master (fetch first) error: failed to push some refs to 'git@git-as-bob:/repository2.git' hint: Updates were rejected because the remote contains work that you do hint: not have locally. This is usually caused by another repository pushing hint: to the same ref. You may want to first integrate the remote changes hint: (e.g., 'git pull ...') before pushing again. hint: See the 'Note about fast-forwards' in 'git push --help' for details. </code></pre>  <p>Note that <code>git remote -v</code> returns virtually the same in both cases (i.e., the only difference is "repository1.git" vs. "repository2.git". Note also that prior to pushing, both repositories were in sync with origin. In the example shown here, there wasn't actually anything to push, but if there is, the same problem shows up.</p>  <p>If this is a sound approach, how could I troubleshoot it? If it is not, what would be the appropriate way of going about such a setup?</p>