<p>I am looking for a quick and dirty one-liner to sync only certain settings in remote config files. Need to preserve what's unique and sync generic settings. Example:</p>  <p>Config1.conf:</p>  <pre><code>HOSTNAME=COMP1 IP=10.10.13.10  LOCATION=SITE_A BUILDING=DEPT_IT ROOM=COMP_LAB1 </code></pre>  <p>Remote-Config2.txt:</p>  <pre><code>HOSTNAME=COMP2 IP=10.10.13.11  LOCATION=FOO BUILDING=BAR ROOM=BAZ </code></pre>  <p>I need to sync or copy replace only the <strong>bottom 3 lines</strong> over ssh. The line numbers are predictable, by the way. Always lines 4,5 and 6 in this case.</p>  <p>Here's a <strong>working</strong> idea that is missing one piece (a standard replacement for the non-standard utility I used to replace the vars in the local conf): </p>  <pre><code>for var in $(ssh root@10.10.8.12 'sed -n "4,6p" /etc/conf1.conf');do &lt;missing piece&gt; ${var/=*}=${var/*=} local-conf.conf; done </code></pre>  <p>So this uses variable expansion and a non-standard utility but needs like a sed or Perl routine to replace the info in the local conf. </p>  <p><strong>Update</strong><br /> The last line of code actually works. Tested and works! However -- the missing piece is a custom non-standard utility. I'm asking if someone can think of something, using standard Linux tools, to replace that. </p>  <p>One solution would be to take the left side and match, then replace the right side. This is basically what that utility does. Looks for the variable in the conf then sets it. Using variable expansion is one way (shown). </p>