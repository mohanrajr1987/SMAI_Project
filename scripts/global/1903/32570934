<p>I have such structure of entities: </p>  <pre><code>@XmlRootElement class Provider {      @OneToMany     Set&lt;ProviderService&gt; providerServices;      // other fields and properties  }  @XmlRootElement  class ProviderService  {      @ManyToOne     Provider provider;     @ManyToOne     Service service;      // other fields and properties  }  @XmlRootElement  class Service {      @OneToMany      Set&lt;ProviderService&gt; providerServices;      // other fields and properties  } </code></pre>  <p>How can I prevent JAXB from generating second (the same) Provider XML/JSON object when marshalling Provider entity? </p>  <pre><code>&lt;provider&gt;   &lt;!-- somthing --&gt;     &lt;provider-service&gt;      &lt;provider /&gt; &lt;!-- this repeats the same data as root provider UNWANTED --&gt;       &lt;!-- something --&gt;      &lt;service /&gt; &lt;!-- this is ok --&gt;    &lt;/provider-service&gt;  &lt;/provider&gt; </code></pre>  <p>Moreover using just @XmlTransient on Provider attribute in ProviderService isn't a solution as I will want to have this Provider element generated when marshalling Service entity as root element with list of its ProviderServices (in this case I don't want to have repeated nested Service entity data) </p>  <p>The best solution will be somthing like specifying on root entity @XmlExcludeNestedTypes({Provider.class}) on Provider and  @XmlExcludeNestedTypes({Service.class}) on Service class but I suppose such annotation doesn't exists? any workround for this solution maybe writing some customization of marshalling?  </p>