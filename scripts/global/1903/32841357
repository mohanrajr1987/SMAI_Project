<p>Trying to get a highscore list based on some input values. The database is old and integrated in different places so cannot change anything there.</p>  <p>I get an nice ordered list but it's <strong>when I'm trying to make users unique it doesn't care about my order anymore.</strong></p>  <p>What I'm doing when requesting data is in the order of</p>  <ol> <li>Game Id (many different game types)</li> <li>If dates (between these dates)</li> <li>Order by score and created timestamp</li> <li>Of what we got so far, now remove all duplicated rows based on email  <li>Get top 10</li> </ol>  <p>This is what I have.</p>  <pre><code>// Get current game based on id var query = db.GameResult.Where(w =&gt; w.GameId == gameId);  // Get playes after  if(request.DateStart.HasValue) {     query = query.Where(w =&gt; w.CreatedTime &gt;= request.DateStart); } // Get playes before if (request.DateEnd.HasValue) {     query = query.Where(w =&gt; w.CreatedTime &lt;= request.DateEnd); }  // Score &amp; created order by if (request.SortScoreDesc &amp;&amp; request.SortDateDesc) {     query = query.OrderByDescending(o =&gt; o.Score).ThenByDescending(o =&gt; o.CreatedTime); } else if (!request.SortScoreDesc &amp;&amp; !request.SortDateDesc) {     query = query.OrderBy(o =&gt; o.Score).ThenBy(o =&gt; o.CreatedTime); } else if (!request.SortScoreDesc &amp;&amp; request.SortDateDesc) {     query = query.OrderBy(o =&gt; o.Score).ThenByDescending(o =&gt; o.CreatedTime); } else if (request.SortScoreDesc &amp;&amp; !request.SortDateDesc) {     query = query.OrderByDescending(o =&gt; o.Score).ThenBy(o =&gt; o.CreatedTime); }  // Get unique users if (request.Unique) {     // CANNOT GET TO WORK     //query = query.GroupBy(o =&gt; o.Email).Select(r =&gt; r.FirstOrDefault()); }  query = query.Take(request.Rows);  List &lt;GameResult&gt; querylist = query.ToList(); </code></pre>