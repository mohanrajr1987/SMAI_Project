<p>I'm new to Symfony. I want to do collection of forms. I'm getging something like:</p>  <pre><code>class SkillType extends AbstractType public function getName() {     return 'skills_cfg'; } public function buildForm(FormBuilderInterface $builder, array $options) {     $builder         -&gt;add('name', 'text', array(         'label' = 'name'      ))         -&gt;add('name_short', 'text', array(             'label' =&gt; 'short name'         )); } </code></pre>  <p>}</p>  <p>And I get a Form where I want to use collection on that form is before:</p>  <pre><code>class AbsType extends AbstractType  { private $object;  public function __construct($object) {     $this-&gt;object = $object; }  public function getName() {     return ''; }  public function buildForm(FormBuilderInterface $builder, array $options) {     $builder         -&gt;add('row', 'collection', array(             'type' =&gt; $this-&gt;object,             'allow_add' =&gt; true,             'prototype' =&gt; true,         ))         -&gt;add('addMore', 'button', array(             'attr' =&gt; array(                 'value' =&gt; 'add more'             ),         ))         -&gt;add('submit', 'submit', array(             'attr' =&gt; array(                 'value'=&gt;'save',             ),             'label' =&gt; 'save'         )); } </code></pre>  <p>}</p>  <p>And in my controller i getting forms like that:  </p>  <pre><code>class InstallController extends Controller  {  public function indexAction($configPage, Request $request) {      $skillForm= $this-&gt;createForm(new AbsType(new SkillType()));     $SkillConfig=new SkillsCfg();     if($request-&gt;isMethod('POST')) {         $skillForm-&gt;handleRequest($request);             if ($skillForm-&gt;isValid()) {             $em=$this-&gt;getDoctrine()-&gt;getManager();             $em-&gt;persist($SkillConfig);             $em-&gt;flush();         }     }     return array(         'form' =&gt; $skillForm-&gt;createView(),         'page' =&gt; $configPage     ); } </code></pre>  <p>The entity and view looks like that: </p>  <pre><code>/**  * @var string  *  * @ORM\Column(name="name", type="string", length=30)  */ private $name;  /**  * @var string  *  * @ORM\Column(name="name_short", type="string", length=10)  */ private $nameShort; </code></pre>  <p>Of course i get getters and setters.</p>  <p>View:</p>  <pre><code>var emailCount = '{{ form.row|length }}';  jQuery(document).ready(function() { jQuery('#addMore').click(function(e) { e.preventDefault();  var emailList = jQuery('#fields-list');  // grab the prototype template var newWidget = emailList.attr('data-prototype'); // replace the "__name__" used in the id and name of the prototype // with a number that's unique to your emails // end name attribute looks like name="contact[emails][2]" newWidget = newWidget.replace(/__name__/g, emailCount); emailCount++;  // create a new list element and add it to the list var newLi = jQuery('&lt;li&gt;&lt;/li&gt;').html(newWidget); newLi.appendTo(emailList); }); })     &lt;/script&gt; {% endblock javascripts %} {% block body %}     {{ form_start(form) }}     &lt;ul id="fields-list"     data-prototype="{{ form_widget(form.row.vars.prototype)|e }}"&gt;         {% for newRow in form.row %}             &lt;li&gt;                 {{ form_errors(newRow) }}                 {{ form_widget(newRow) }}             &lt;/li&gt;         {% endfor %}     &lt;/ul&gt;     {{ form_end(form) }} {% endblock body %} </code></pre>  <p>And I get an error:</p>  <blockquote>   <p>An exception occurred while executing 'INSERT INTO skills_cfg (name,   name_short) VALUES (?, ?)' with params [null, null]:</p>      <p>SQLSTATE[23000]: Integrity constraint violation: 1048 Column 'name'   cannot be null</p> </blockquote>  <p>Why does it happen? And how do I solve it?</p>