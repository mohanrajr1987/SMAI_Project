<p>sorry for my english i'm french ! I'll try to explain my problem...</p>  <p><strong>Context</strong> I want to create matchs reports for a football game, each captain can add or delete players of his own team with stats (goals, assists, etc...).</p>  <p><strong>Problem</strong> Everything is working for one captain, I can add/delete players successfully recorded in database with only players of the team of the current captain. But, when the other want to do this, the subform show stats i've recorded previously but with the name of the team... And if I validate, the line in database is overridden with the name of the new player.</p>  <p>Example: I enter the result with my player "Player1" who scored twice ! When I save, everything gone perfectly saved in database. When I want to do the same as the second captain, with my player "Player2" who scores 1 goal. The line previously saved is overriden by the data of player2...</p>  <p><strong>Code</strong> Here is my code</p>  <p><strong>Controller simplified</strong></p>  <pre><code>    $em = $this-&gt;getDoctrine()-&gt;getManager();     $match = $em-&gt;getRepository('OCPlatformBundle:Matchs')-&gt;findOneById($id);     $form = $this-&gt;get('form.factory')-&gt;create(new MatchType(), $match);      $form-&gt;handleRequest($request);      //VERIF FEUILLE DE MATCH     foreach($match-&gt;getStatsplayer() as $player){             $player-&gt;setDefcleansheet(false);             $player-&gt;setGkcleansheet(false);             $player-&gt;setGame($match);             $player-&gt;setClub($user-&gt;getClub());     }      if ($form-&gt;isValid()) {         $em = $this-&gt;getDoctrine()-&gt;getManager();         $em-&gt;persist($match);          $em-&gt;flush(); </code></pre>  <p><strong>MatchType.php</strong></p>  <pre><code>public function buildForm(FormBuilderInterface $builder, array $options) {      $builder       -&gt;add('homescore', 'choice', array('choices'   =&gt; array(0,1,2,3,4,5,6,7,8,9,10,11,12)))       -&gt;add('awayscore', 'choice', array('choices'   =&gt; array(0,1,2,3,4,5,6,7,8,9,10,11,12)))       -&gt;add('statsplayer', 'collection', array(             'type'         =&gt; new StatsType(),             'allow_add'    =&gt; true,             'allow_delete' =&gt; true))       -&gt;add('save',      'submit')     ; } </code></pre>  <p><strong>StatsType.php</strong></p>  <pre><code>public function buildForm(FormBuilderInterface $builder, array $options) {     //Players to show is filtered with the querybuilder     $builder       -&gt;add('player', 'entity', array(         'class' =&gt; 'OCUserBundle:User',         'property' =&gt; 'username',         'query_builder' =&gt; function(\Doctrine\ORM\EntityRepository $er) {                 global $kernel;                 $user = $kernel-&gt;getContainer()-&gt;get('security.context')-&gt;getToken()-&gt;getUser();                 return $er-&gt;createQueryBuilder('q')                 -&gt;where('q.club = :pf')                 -&gt;orderBy('q.club', 'ASC')                 -&gt;setParameter('pf', $user-&gt;getClub());             },         'required' =&gt; true,          'label' =&gt; false,         ))       -&gt;add('goals', 'choice', array(                     'choices'   =&gt; array(0,1,2,3,4,5,6,7),                     'label' =&gt; 'goals', 'translation_domain' =&gt; 'FOSUserBundle', 'attr' =&gt; array(                 'placeholder' =&gt; 'goals'             )))       -&gt;add('assists', 'choice', array(                     'choices'   =&gt; array(0,1,2,3,4,5,6,7),                     'label' =&gt; 'assists', 'translation_domain' =&gt; 'FOSUserBundle', 'attr' =&gt; array(                 'placeholder' =&gt; 'assists'             ))) </code></pre>  <p>}</p>  <p>Thanks for your help !</p>  <p><strong>EDIT:</strong></p>  <p>My entities :</p>  <p><strong>Matchs.php</strong></p>  <pre><code>/** * Matchs * * @ORM\Table() * @ORM\Entity(repositoryClass="OC\PlatformBundle\Entity\MatchsRepository") */ class Matchs { /**  * @var integer  *  * @ORM\Column(name="id", type="integer")  * @ORM\Id  * @ORM\GeneratedValue(strategy="AUTO")  */ private $id;  /**  * @var integer  *  * @ORM\Column(name="competition", type="integer")  */ private $competition;   /**  * @var integer  *  * @ORM\Column(name="phase", type="integer")  */ private $phase;  /**  * @var \DateTime  *  * @ORM\Column(name="datemax", type="datetime")  */ private $datemax;  /**  * @ORM\ManyToOne(targetEntity="OC\PlatformBundle\Entity\Club")  * @ORM\Joincolumn(nullable=false)  */ private $home;  /**  * @ORM\ManyToOne(targetEntity="OC\PlatformBundle\Entity\Club")  * @ORM\Joincolumn(nullable=false)  */ private $away;  /**  * @var integer  *  * @ORM\Column(name="homescore", type="integer")  */ private $homescore;  /**  * @var integer  *  * @ORM\Column(name="awayscore", type="integer")  */ private $awayscore;  /**  * @var \DateTime  *  * @ORM\Column(name="dateevent", type="datetime")  */ private $dateevent;  /**  * @ORM\OneToMany(targetEntity="OC\PlatformBundle\Entity\Stats", mappedBy="game", cascade={"persist"})  * @Assert\Valid  */ private $statsplayer; </code></pre>  <p><strong>Stats.php</strong></p>  <pre><code>/** * Stats * * @ORM\Table() * @ORM\Entity(repositoryClass="OC\PlatformBundle\Entity\StatsRepository") * @UniqueEntity({"player","game"}) */ class Stats {     /**      * @var integer      *      * @ORM\Column(name="id", type="integer")      * @ORM\Id      * @ORM\GeneratedValue(strategy="AUTO")      */ private $id;  /**  * @ORM\ManyToOne(targetEntity="OC\UserBundle\Entity\User", cascade={"persist"})  * @ORM\JoinColumn(nullable=false)  */ private $player;  /**  * @ORM\ManyToOne(targetEntity="OC\PlatformBundle\Entity\Club")  * @ORM\JoinColumn(nullable=false)  */ private $club;  /**  * @ORM\ManyToOne(targetEntity="OC\PlatformBundle\Entity\Matchs", inversedBy="statsplayer", cascade={"persist"})  * @ORM\JoinColumns({  *  @ORM\JoinColumn(name="game_id", referencedColumnName="id")  * })  */ private $game;  /**  * @var integer  *  * @ORM\Column(name="goals", type="integer")  */ private $goals;  /**  * @var integer  *  * @ORM\Column(name="assists", type="integer")  */ private $assists;  /**  * @var boolean  *  * @ORM\Column(name="yellowcard", type="boolean")  */ private $yellowcard;  /**  * @var boolean  *  * @ORM\Column(name="redcard", type="boolean")  */ private $redcard;  /**  * @var boolean  *  * @ORM\Column(name="defcleansheet", type="boolean")  */ private $defcleansheet;  /**  * @var boolean  *  * @ORM\Column(name="gkcleansheet", type="boolean")  */ private $gkcleansheet; </code></pre>