<p>In my project, i'm using Spring MVC 4.1.6 for REST service + Spring Security 3.2.5 for Authentication and access control + AngularJS for one-page application style front-end. Having a problem with the routing integration.</p>  <p>I have a problem with the login page routing, which is made as the AngularJS ng-view element of the main static page (so it loads dynamically) => conciquently, it has it's <strong>route in AngularJS</strong></p>  <pre><code>$routeProvider.     when('/', {         templateUrl: '/view/Main.html',         controller: 'MainController'     }).     when('/user-login', {         templateUrl : '/view/user/user-login.jsp',         controller : 'user-loginController'     }); </code></pre>  <p>It is also defined as a login URL in <strong>Spring Security config</strong></p>  <pre><code>&lt;context:annotation-config/&gt;  &lt;!-- enable use-expressions --&gt; &lt;http auto-config="true" use-expressions="true"&gt;     &lt;headers&gt;         &lt;cache-control /&gt;     &lt;/headers&gt;      &lt;intercept-url pattern="/api/admin**" access="hasRole('ROLE_ADMIN')"/&gt;     &lt;intercept-url pattern="/api/items**" access="hasRole('ROLE_USER')"/&gt;     &lt;intercept-url pattern="/user**" access="hasRole('ROLE_USER')"/&gt;      &lt;!-- access denied page --&gt;     &lt;access-denied-handler error-page="/403"/&gt;      &lt;form-login             login-processing-url="/login/processing"             login-page="/user-login"             default-target-url="/"             authentication-failure-url="/user-login"             username-parameter="username"             password-parameter="password"             authentication-success-handler-ref="successHandler"             authentication-failure-handler-ref="failureHandler"/&gt;     &lt;logout logout-success-url="/api/user-login?logout"  delete-cookies="JSESSIONID"/&gt;     &lt;!-- enable csrf protection --&gt;     &lt;csrf/&gt; &lt;/http&gt; </code></pre>  <p>So, the <strong>problem is:</strong> The login page works ok. But, when the reuqest is handled by Spring security config (for example</p>  <pre><code>  &lt;intercept-url pattern="/user**" access="hasRole('ROLE_USER')"/&gt; </code></pre>  <p>)</p>  <p>and the user doesn't have this role, it is redirected to the login page '/user-login'.  But, in this case, some routing conflict occurs and i'm getting 'ERR_TOO_MANY_REDIRECTS.' error in browser, and it continiously keeps redirecting me to '/user-login' page like 20-30 times.</p>  <p>Any idea, how to solve this conflict? I tried to make just null Spring controller for 'user-login' but it doesn't helps </p>  <pre><code>@RequestMapping(value = "user-login", method = RequestMethod.GET) public String displayLoginPage() {     return null; } </code></pre>  <p>The only idea i have, is to separate login page from the one-page app to not use the angular routing for it, but that isn't a good option.</p>