<p>In the Android app I'm working on I am using RestTemplate to post a request to log in (Spring Security):   </p>  <pre><code>RestTemplate restTemplate = new RestTemplate();  HttpHeaders headers = new HttpHeaders(); headers.add("j_username", uname); headers.add("j_password", password); headers.add("submit", "Login"); HttpEntity&lt;String&gt; entity = new HttpEntity&lt;String&gt;(null, headers); ResponseEntity&lt;String&gt; reply = restTemplate.exchange(baseUrl + "/j_spring_security_check", HttpMethod.POST, entity, String.class); </code></pre>  <p>The reply: </p>  <pre><code>&lt;302 Found,{Date=[Wed, 30 Sep 2015 08:10:15 GMT], Server=[Apache-Coyote/1.1], Location=[http://192.168.100.81/rest/loginstatus;jsessionid=A63589BF9985296C42A8FC49C858F2AA], Content-Length=[0], Set-Cookie=[JSESSIONID=A63589BF9985296C42A8FC49C858F2AA; Path=/], Keep-Alive=[timeout=5, max=100], Connection=[Keep-Alive], X-Android-Sent-Millis=[1443600616746], X-Android-Received-Millis=[1443600616756]}&gt; </code></pre>  <p>As you can see, it is supposed to redirect to location, but it's not. I understand the default behaviour is to redirect only on GET requests. </p>  <p>How can I make this request follow the redirect? I've seen a lot of solutions using Apache's HttpClient, which is removed in API 23. </p>  <p>I guess a workaround is to post another request to the redirect location myself, but I hope there is a better solution.  </p>