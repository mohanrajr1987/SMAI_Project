<p>I have done a spring security with databbases tutorial by mkyong. Everything was working fine, but now when i'm  adding a new user to users and user_roles table and then logining on these accounts the sec:authorize with <code>access="hasRole('ROLE_USER')"</code> doesn't work and any data in sec:authorize tag isn't displayed.</p>  <p>There are spring-security settings</p>  <pre><code>&lt;beans:beans xmlns="http://www.springframework.org/schema/security"     xmlns:beans="http://www.springframework.org/schema/beans"      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"     xsi:schemaLocation="http://www.springframework.org/schema/beans     http://www.springframework.org/schema/beans/spring-beans-3.0.xsd     http://www.springframework.org/schema/security     http://www.springframework.org/schema/security/spring-security-3.2.xsd"&gt;      &lt;!-- enable use-expressions --&gt;     &lt;http auto-config="true" use-expressions="true"&gt;          &lt;intercept-url pattern="/admin**" access="hasRole('ROLE_ADMIN')" /&gt;          &lt;!-- access denied page --&gt;         &lt;access-denied-handler error-page="/403" /&gt;          &lt;form-login              login-page="/login"              default-target-url="/welcome"              authentication-failure-url="/login?error"              username-parameter="username"             password-parameter="password" /&gt;         &lt;logout logout-success-url="/login?logout"  /&gt;         &lt;!-- enable csrf protection --&gt;         &lt;csrf/&gt;     &lt;/http&gt;      &lt;!-- Select users and user_roles from database --&gt;     &lt;authentication-manager&gt;       &lt;authentication-provider&gt;         &lt;jdbc-user-service data-source-ref="dataSource"           users-by-username-query=             "select username,password, enabled from users where username=?"           authorities-by-username-query=             "select username, role from user_roles where username =?  " /&gt;       &lt;/authentication-provider&gt;     &lt;/authentication-manager&gt;  &lt;/beans:beans&gt; </code></pre>  <p>And there is mentioned code with sec:authorize block</p>  <pre><code>&lt;sec:authorize access="hasRole('ROLE_USER')"&gt;         &lt;!-- For login user --&gt;         &lt;c:url value="/j_spring_security_logout" var="logoutUrl" /&gt;         &lt;form action="${logoutUrl}" method="post" id="logoutForm"&gt;             &lt;input type="hidden" name="${_csrf.parameterName}"                 value="${_csrf.token}" /&gt;         &lt;/form&gt;         &lt;script&gt;             function formSubmit() {                 document.getElementById("logoutForm").submit();             }         &lt;/script&gt;          &lt;c:if test="${pageContext.request.userPrincipal.name != null}"&gt;             &lt;h2&gt;                 User : ${pageContext.request.userPrincipal.name} | &lt;a                     href="javascript:formSubmit()"&gt; Logout&lt;/a&gt;             &lt;/h2&gt;         &lt;/c:if&gt;       &lt;/sec:authorize&gt; </code></pre>  <p>I can check if user is logged in in Controller, but sec:authorize doesn't work in session in which newly created user is logged in:</p>  <pre><code>//this works if (!(auth instanceof AnonymousAuthenticationToken)) {             UserDetails userDetail = (UserDetails) auth.getPrincipal();             model.addObject("username", userDetail.getUsername());         } </code></pre>