<p>i try to use my own Authentication-Service to authenticate users by using spring-security but i have problems to autowire my authentication-service into my custom userdetailsservice.</p>  <p>First of all the application is running if i use this configuration for the authenticationManager:</p>    <pre><code>&lt;authentication-manager alias="authenticationManager"&gt;         &lt;authentication-provider&gt;             &lt;user-service&gt;                 &lt;user name="temporary" password="temporary" authorities="ROLE_ADMIN" /&gt;                 &lt;user name="user" password="user" authorities="ROLE_USER" /&gt;             &lt;/user-service&gt;         &lt;/authentication-provider&gt;     &lt;/authentication-manager&gt; </code></pre>    <p>I changed my spring-security config to this:</p>    <pre><code>&lt;beans:bean id="encoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" /&gt;      &lt;beans:bean id="userDetailsService" class="com.test.security.BMaxUserDetailsService" /&gt;      &lt;authentication-manager&gt;         &lt;authentication-provider user-service-ref="userDetailsService"&gt;             &lt;password-encoder ref="encoder" /&gt;                  &lt;/authentication-provider&gt;     &lt;/authentication-manager&gt; </code></pre>    <p>The server starts up again but cannot find my authenticationservice (Autowired exception). Ok, i extended the component-scan and now the authenticationservice can be found... but this service again needs JPA-Access... and this cannot be found. Hmm... then i realized that the applicationcontext cannot access beans of the dispatcher-servlet (only the other way round)... so i move all transaction and jpa stuff to the applicationcontext... all started up... but then i didn't have a transaction (don't know why)...</p>  <p>How do you usually solve this problem? I looked many different tutorials but i couldn't find a solution.</p>  <p>Here is my web.xml:</p>    <pre><code> &lt;!-- The definition of the Root Spring Container shared by all Servlets and Filters --&gt;     &lt;context-param&gt;         &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;         &lt;param-value&gt;             /WEB-INF/spring/root-context.xml             /WEB-INF/spring/spring-security.xml         &lt;/param-value&gt;     &lt;/context-param&gt;      &lt;!-- Creates the Spring Container shared by all Servlets and Filters --&gt;     &lt;listener&gt;         &lt;listener-class&gt;org.springframework.web.context.ContextLoaderListener&lt;/listener-class&gt;     &lt;/listener&gt;      &lt;!-- Processes application requests --&gt;     &lt;servlet&gt;         &lt;servlet-name&gt;appServlet&lt;/servlet-name&gt;         &lt;servlet-class&gt;org.springframework.web.servlet.DispatcherServlet&lt;/servlet-class&gt;         &lt;init-param&gt;             &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;             &lt;param-value&gt;                 /WEB-INF/spring/spring-servlet-context.xml                 /WEB-INF/spring/spring-rest.xml                 /WEB-INF/spring/spring-jpa.xml                 /WEB-INF/spring/spring-couchdb.xml                 /WEB-INF/spring/spring-jms.xml                 /WEB-INF/spring/spring-mail.xml             &lt;/param-value&gt;         &lt;/init-param&gt;         &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;     &lt;/servlet&gt;      &lt;servlet-mapping&gt;         &lt;servlet-name&gt;appServlet&lt;/servlet-name&gt;         &lt;url-pattern&gt;/&lt;/url-pattern&gt;     &lt;/servlet-mapping&gt;      &lt;!-- Security Stuff --&gt;     &lt;filter&gt;         &lt;filter-name&gt;springSecurityFilterChain&lt;/filter-name&gt;         &lt;filter-class&gt;org.springframework.web.filter.DelegatingFilterProxy&lt;/filter-class&gt;     &lt;/filter&gt;     &lt;filter-mapping&gt;         &lt;filter-name&gt;springSecurityFilterChain&lt;/filter-name&gt;         &lt;url-pattern&gt;/*&lt;/url-pattern&gt;     &lt;/filter-mapping&gt;      &lt;filter&gt;         &lt;filter-name&gt;csfrCookieFilter&lt;/filter-name&gt;         &lt;filter-class&gt;com.test.webservice.server.LaraCsfrCookieFilter&lt;/filter-class&gt;     &lt;/filter&gt;     &lt;filter-mapping&gt;         &lt;filter-name&gt;csfrCookieFilter&lt;/filter-name&gt;         &lt;url-pattern&gt;/*&lt;/url-pattern&gt;     &lt;/filter-mapping&gt; </code></pre>    <p>Here's my UserDetailsService:</p>    <pre><code>@Service public class BMaxUserDetailsService implements UserDetailsService{      private static Logger LOG = LoggerFactory.getLogger(BMaxUserDetailsService.class);      @Autowired     private AuthenticationService authenticationService;      @Override     public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {         try {             LOG.debug("LoadUserByUsername called for user '{}'. AuthenticationService: {}", username, authenticationService);             //load user from database             LoginDTO loginDTO = __findLogin(username); </code></pre>    <p>Spring-JPA.xml: </p>  <pre><code>&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;beans xmlns="http://www.springframework.org/schema/beans"     xmlns:jpa="http://www.springframework.org/schema/data/jpa"     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"     xmlns:tx="http://www.springframework.org/schema/tx"     xsi:schemaLocation="         http://www.springframework.org/schema/beans          http://www.springframework.org/schema/beans/spring-beans-3.2.xsd         http://www.springframework.org/schema/data/jpa         http://www.springframework.org/schema/data/jpa/spring-jpa.xsd         http://www.springframework.org/schema/tx         http://www.springframework.org/schema/tx/spring-tx.xsd"     default-autowire="byName"&gt;      &lt;!-- Directory to scan for repository classes --&gt;     &lt;jpa:repositories base-package="com.test.*.domain.repository" /&gt;      &lt;!-- jdbc.properties =&gt; used to put db-connection data to an own property-file --&gt;     &lt;bean id="domainPropertyConfigurer"         class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"&gt;         &lt;property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" /&gt;         &lt;property name="locations"&gt;             &lt;list&gt;                 &lt;value&gt;/WEB-INF/jdbc.properties&lt;/value&gt;             &lt;/list&gt;         &lt;/property&gt;     &lt;/bean&gt;     &lt;!--  Datasource configuration - which database we use, look for jdbc.properties to set this data --&gt;     &lt;bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource"&gt;         &lt;property name="driverClassName" value="${db.driver}" /&gt;         &lt;property name="url" value="${db.url}" /&gt;         &lt;property name="username" value="${db.username}" /&gt;         &lt;property name="password" value="${db.password}" /&gt;     &lt;/bean&gt;      &lt;bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"&gt;          &lt;property name="dataSource" ref="dataSource" /&gt;          &lt;property name="packagesToScan" &gt;             &lt;list&gt;                 &lt;value&gt;com.test.businessmaximizer.domain&lt;/value&gt;                 &lt;value&gt;com.test.product.domain&lt;/value&gt;                 &lt;value&gt;com.test.person.domain&lt;/value&gt;                 &lt;value&gt;com.test.textndocwizard.domain&lt;/value&gt;                 &lt;value&gt;com.test.email.domain&lt;/value&gt;                 &lt;value&gt;com.test.authentication.domain&lt;/value&gt;             &lt;/list&gt;         &lt;/property&gt;          &lt;property name="jpaVendorAdapter"&gt;             &lt;bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"&gt;                 &lt;property name="showSql" value="true" /&gt;                 &lt;property name="generateDdl" value="true" /&gt;             &lt;/bean&gt;         &lt;/property&gt;      &lt;/bean&gt;      &lt;!-- Transaction Manager configuration --&gt;     &lt;tx:annotation-driven transaction-manager="transactionManager"/&gt;      &lt;bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager" &gt;         &lt;property name="entityManagerFactory" ref="entityManagerFactory" /&gt;         &lt;property name="nestedTransactionAllowed" value="true" /&gt;     &lt;/bean&gt;  &lt;/beans&gt; </code></pre>    <p>Thanks everybody in advance for your time.</p>  <p>Update: I've tried to add the jpa and tx configuration to appcontext and servletcontext... server comes up without exceptions... but now it seems to be that i have two different tx-manager... so the users added in one context cannot be seen by the other context...</p>