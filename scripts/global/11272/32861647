<p>I have a RESTFul API that is secured by Spring Security using OAuth2 using resource owner credentials grant and JWT tokens. This scheme works perfectly fine when in comes to internal clients plus it was specifically chosen due to its stateless nature, now I would like to allow third party developers to integrate with my API , for that the above mentioned grant is not the best solution, instead an implicit and/or an authorization code scheme would be preferred.</p>  <p>After checking on different Spring Security samples I have seen that whenever an implicit or and authorization code is used, the authentication is state-full, Correct me if I am wrong but the OAuth2 spec does not specify that a session is needed in that step.</p>  <p>So my questions are:</p>  <ul> <li>Is it possible to configure a fully stateless authentication following those grant schemes?</li> <li>Is there a reason why all the samples are based on http session?</li> </ul>  <p>Best,</p>