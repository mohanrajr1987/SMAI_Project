<p>I'm trying to learn Spring security.</p>  <p>After going through some tutorial, I found that some of them use UserRole(s), while some use an UserAuthentication class that implements Authentication.  The one I tried to implement (and works) is to create a custom MyUserDetailsService that implements UserDetailsService, and grants authorities(roles?) like this : </p>  <pre><code>private List&lt;GrantedAuthority&gt; buildUserAuthority(Set&lt;UserRole&gt; userRoles) {         Set&lt;GrantedAuthority&gt; setAuths = new HashSet&lt;GrantedAuthority&gt;();          // Build user's authorities         for (UserRole userRole : userRoles) {             setAuths.add(new SimpleGrantedAuthority(userRole.getRole()));         }          List&lt;GrantedAuthority&gt; Result = new ArrayList&lt;GrantedAuthority&gt;(setAuths);          return Result;     } </code></pre>  <p>I want to know what's the difference between User Roles and GrantedAuthorities(for example while using @PreAuthorize(hasRole...) vs @PreAuthorize(hasAuthority...)), and if they do the same thing, why both exists? Or advantages of using one compared to another. </p>