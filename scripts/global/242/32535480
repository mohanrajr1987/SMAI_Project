<p>I have three business objects:</p>  <pre><code>public abstract class PayCaddyEntity : IPayCaddyEntity {     protected PayCaddyEntity()     {         if (IsPopulated &amp;&amp; string.IsNullOrWhiteSpace(Id))         {             Id = Guid.NewGuid().ToString();         }     }     ... } </code></pre>  <p>Where <code>PayCaddyEntity</code> basically just provides a common <code>Id</code> property and acts as a 'marker' I can use in generic constraints.</p>  <pre><code>public abstract class PayCaddyMessage : PayCaddyEntity {     public string Subject { get; set; }     public ApplicationUser Sender { get; set; }     public ApplicationUser Receiver { get; set; }     public DateTime? TimeSent { get; set; }     public DateTime? TimeReceived { get; set; } }  public class BetPaymentOffer: PayCaddyMessage {             public string Description { get; set; }     public int Amount { get; set; }     public bool PaymentAccepted { get; set; } } </code></pre>  <p>I have tried mapping them to a common view model as follows:</p>  <pre><code>Mapper.CreateMap&lt;PayCaddyMessage, BetPaymentOfferViewModel&gt;()     .Include&lt;BetPaymentOffer, BetPaymentOfferViewModel&gt;(); Mapper.CreateMap&lt;BetPaymentOffer, BetPaymentOfferViewModel&gt;(); </code></pre>  <p>and </p>  <pre><code>var offer = new BetPaymentOffer { Sender = GetCurrentUser() }; var model = Mapper.Map&lt;BetPaymentOfferViewModel&gt;(offer); </code></pre>  <p>The base class property set on the derived class is not mapped. In <code>model</code>, <code>Sender</code> is null. What am I doing wrong?</p>