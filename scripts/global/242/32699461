<p>I used to get mapping not found for favicon.ico so decided to deal with it. </p>  <p>Easiest thing for me was to add an action to a controller method,@RequestMapping("/favicon.ico"). </p>  <p>I no longer get these complaints ( although I don't request favicon.ico myself in an html file, I guess teh browser does this automatically ). </p>  <p><strong>When I visit <a href="http://localhost:8080/favicon.ico" rel="nofollow">http://localhost:8080/favicon.ico</a> the action gets hit!</strong></p>  <p>I add the following to my html file: </p>  <pre><code>&lt;link href="/favicon.ico" rel="icon" type="image/x-icon" /&gt; </code></pre>  <p>But the action never gets hit. </p>  <p>I've also tried </p>  <pre><code>&lt;link href="http://localhost:8080/favicon.ico" rel="icon" type="image/x-icon" /&gt; </code></pre>  <p>but action does not get hit. </p>  <p>I suspect this has to do with get/post request something, and when I request it from the browser manually, a get request is made. When from an html file something else, and Spring won't recognize this. </p>  <p>Please do not recommend me doing: </p>  <pre><code>&lt;mvc:resources mapping="/favicon.ico" location="/favicon.ico" /&gt; </code></pre>  <p>as I like to do it from my controller as I have some logic there. </p>  <p>Could there be some cache involved?</p>  <p>EDIT: </p>  <p>I should also mention that i keep getting a tomcat favicon instead. Can't see any info on a favicon.ico ever being requested.  Is tomcat supplying it by default and ignoring to hit/forward it to my action? </p>