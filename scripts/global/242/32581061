<p>I am trying to store a document 'doc' in which one of the field 'doc.value' can be of different type (float, string, object...). I know I can't have it indexed that way, but I just want it to be stored (no search on doc.value, the search will be based on other 'doc' fields).</p>  <p>My first idea was to use the 'index/_type' to deal with it, but it appears to be against good practices and even impossible with ES 2.0 (stated <a href="https://github.com/elastic/elasticsearch/pull/11812" rel="nofollow">here</a>). </p>  <p>I could use a 'dynamic:false' setting on 'doc' level and skip the 'value' field in my mapping declaration; but I need the dynamic behaviour for the other fields in 'doc'.</p>  <p>I could move the 'doc.value' field into a 'doc.inner.value' and set 'doc.inner' mapping as an object with 'dynamic:false'; but in that case; I would have to modify each document when I store them and retrieve them.</p>  <p>The last solution I see would be to create my own 'type' (like 'any_type') via a plugin and I would map 'doc.value' to this 'any_type'. But this solution is obviously not the road I would like to take...</p>  <p>So I was wondering what was the good solution for this problem, if there was any.</p>