<p>Now, before you scold me, I know there's a <strong>very</strong> similar question:</p>  <p><a href="http://stackoverflow.com/questions/21913837/best-data-structure-for-two-way-mapping">Best data structure for two way mapping?</a></p>  <p>In fact, I am looking for a data structure that will accomplish the same thing. Specifically, I have a string that should be mapped to another string, and that other string should also be mapped to the original string.</p>  <p>For instance:</p>  <pre><code>".jpg" -&gt; "image/jpeg" "image/jpeg" -&gt; ".jpg" </code></pre>  <p>The linked question suggest the use of some kind of hashmap or <code>Dictionary&lt;string,string&gt;</code> to accomplish this.</p>  <p>One would have a custom data type that will hold two dictionaries, each dictionary being one way of mapping. This will provide with O(1), but i find it <strong>not scalable at all</strong>.</p>  <p>Considering that I have a Dictionary with all the mappings from 200 MIME types to the associated file extension, I would need to create a similar one, with the same content but inversed. This is very prone to typos, or missing keys, and is a lot of duplicated code.</p>  <p>Although the linked question aims for a solution in <strong>Java</strong>, I am looking for a solution in <strong>C#</strong>.</p>  <p>Is there a .NET data structure that supports these kind of two way mapping between objects?</p>  <p>If there is not, how can I accomplish this without replicating code (as in the two dictionaries solution)?</p>