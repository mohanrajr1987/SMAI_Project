<p>How do we create domain class for the following scenario.</p>  <pre><code>CREATE TABLE station (   store_id integer NOT NULL,   pos_id integer NOT NULL,   CONSTRAINT pos_locations_pk PRIMARY KEY (store_id, pos_id) )  CREATE TABLE header (   id serial NOT NULL,   store_id integer NOT NULL,   pos_id integer NOT NULL,   ....   CONSTRAINT sales_transactions_pk PRIMARY KEY (id, store_id),   CONSTRAINT sales_transactions_pos_fk FOREIGN KEY (store_id, pos_id)       REFERENCES station (store_id, pos_id)  )  CREATE TABLE line_item (   id serial NOT NULL,   sale_id bigint NOT NULL,   store_id integer NOT NULL,   .....   CONSTRAINT transaction_lines_pk PRIMARY KEY (id, store_id),   CONSTRAINT transaction_lines_sale_fk FOREIGN KEY (sale_id, store_id)       REFERENCES header (id, store_id) ) </code></pre>  <p>I started as following for Station domain</p>  <pre><code>class Station {     int storeId     int posId      static mapping = {         table "station"         id composite: ['storeId', 'posId']         storeId column: 'store_id'         posId column: 'pos_id'     }    } </code></pre>  <p>and for header table</p>  <pre><code>class Header { int id Station station  static mapping = {     cache false     version false     table "header"      columns {         station {              column name: 'store_id'              column name: 'pos_id'         }     }     id composite: ['id', 'station.storeId'] // Where I have to use store_id alone from association column to be included as a part of composite key to header table } } </code></pre>  <p>and for line_item table </p>  <pre><code>class LineItem { int id Header header  static mapping = {     table "line_item"     columns {         header {             column name: 'sale_id'             column name: 'store_id'         }      }     id composite: ['id', 'header.station.storeId'] // something like this where I have to include store_id along from header table which instead from station table should be included as a part of composite key } } </code></pre>