<p>I am parsing in an html file that is 3mb and using Stanfords pos tagger with it, always failing because of OOM. If I have 1gb in the heap, it gives a heap error. If I have 7gb of heap it gives GC error(spend too much time gc'ing so throw error). I have tried changing the GC to allow more time to gc, as well as changing the GC implementation. So what I have observed is that changing the heap size does not resolve the oom error.</p>  <p>I have a main class which uses Stanfords API(tokenizes string and tags the word) and passes in an entire html page(a massive amount of numbers). When I run a heap dump, it says that java.lang.Thread has 700mb of retained heap. Almost all of the memory is inside a double[][] but I don't know how else to make use of this information to determine a memory leak. I have been trying to find a good MAT tutorial(memory analyzer tool for eclipse) but having difficulties finding a good resource...</p>  <p>here is a stack trace</p>  <pre><code>The thread java.lang.Thread @ 0xdb8acd90 main keeps local variables with total size 721,109,984 (86.33%) bytes.  The memory is accumulated in one instance of "double[][]" loaded by "&lt;system class loader&gt;". The stacktrace of this Thread is available. See stacktrace.    Keywords double[][]  Details Â»    *main   at java.lang.OutOfMemoryError.&lt;init&gt;()V (OutOfMemoryError.java:48)   at edu.stanford.nlp.tagger.maxent.TestSentence.stringTagsAt(I)[Ljava/lang/String; (TestSentence.java:732)   at edu.stanford.nlp.tagger.maxent.TestSentence.getApproximateScores(Ledu/stanford/nlp/tagger/maxent/History;)[D (TestSentence.java:393)   at edu.stanford.nlp.tagger.maxent.TestSentence.getScores(Ledu/stanford/nlp/tagger/maxent/History;)[D (TestSentence.java:370)   at edu.stanford.nlp.tagger.maxent.TestSentence.scoresOf([II)[D (TestSentence.java:713)   at edu.stanford.nlp.sequences.ExactBestSequenceFinder.bestSequence(Ledu/stanford/nlp/sequences/SequenceModel;[[D)Ledu/stanford/nlp/util/Pair; (ExactBestSequenceFinder.java:91)   at edu.stanford.nlp.sequences.ExactBestSequenceFinder.bestSequence(Ledu/stanford/nlp/sequences/SequenceModel;)[I (ExactBestSequenceFinder.java:31)   at edu.stanford.nlp.tagger.maxent.TestSentence.runTagInference()V (TestSentence.java:322)   at edu.stanford.nlp.tagger.maxent.TestSentence.testTagInference()Ljava/util/ArrayList; (TestSentence.java:312)   at edu.stanford.nlp.tagger.maxent.TestSentence.tagSentence(Ljava/util/List;Z)Ljava/util/ArrayList; (TestSentence.java:135)   at edu.stanford.nlp.tagger.maxent.MaxentTagger.tagSentence(Ljava/util/List;Z)Ljava/util/List; (MaxentTagger.java:998)   at edu.stanford.nlp.tagger.maxent.MaxentTagger.tagCoreLabelsOrHasWords(Ljava/util/List;Ledu/stanford/nlp/process/Morphology;Z)Ljava/util/List; (MaxentTagger.java:1788)   at edu.stanford.nlp.tagger.maxent.MaxentTagger$TaggerWrapper.apply(Ljava/lang/String;)Ljava/lang/String; (MaxentTagger.java:1291)   at edu.stanford.nlp.tagger.maxent.MaxentTagger.tagString(Ljava/lang/String;)Ljava/lang/String; (MaxentTagger.java:933)   at PageTagger.tagText(Ljava/lang/String;)Ljava/lang/String; (PageTagger.java:76)   at PageTagger.main([Ljava/lang/String;)V (PageTagger.java:40)* </code></pre>  <p><a href="http://i.stack.imgur.com/kETuq.jpg" rel="nofollow"><img src="http://i.stack.imgur.com/kETuq.jpg" alt="enter image description here"></a></p>  <p><a href="http://i.stack.imgur.com/LoZeG.jpg" rel="nofollow"><img src="http://i.stack.imgur.com/LoZeG.jpg" alt="enter image description here"></a></p>  <p><a href="http://i.stack.imgur.com/4AdIc.jpg" rel="nofollow"><img src="http://i.stack.imgur.com/4AdIc.jpg" alt="enter image description here"></a></p>  <p>Please let me know if I can provide any information.</p>