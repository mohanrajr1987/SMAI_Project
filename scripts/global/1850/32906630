<p>I need to write a class with Iterator that iterates over file and returns one line of the file each time <code>Iterator#next()</code> is invoked. The problem is that I don't know when the reference of the Iterator instance will become unreachable (and maybe <code>garbage-collected</code> some time after), so I cannot invoke <code>Scanner#close()</code>. </p>  <p>So the question is, if there is any way to invoke <code>Scanner#close()</code> after reference of Iterator instance becomes unreachable but before it is garbage-collected? </p>  <pre><code>public class FileWrapper implements Iterable&lt;String&gt; {      private File file;      @Override     public Iterator&lt;String&gt; iterator() {             return new Itr();     }      private class Itr implements Iterator&lt;String&gt; {          private Scanner scanner;          public Itr() {             scanner = new Scanner(file);         }          @Override         public boolean hasNext() {             return scanner.hasNextLine();         }          @Override         public String next() {             return scanner.nextLine();         }     } } </code></pre>