<p>I've got OOM in my javafx application. While investigating it I noticed some problems with releasing memory after hiding stages.</p>  <p>To reproduce prooblem I've created simple application almost without logic behind, that lead me to problem with tooltips.</p>  <p>I have POJO <code>Entity</code> with 2 string fields.  I have <code>main stage</code> with a button. On hitting the button I generate <code>list</code> of 100K Entities, create new <code>result stage</code>, pass the <code>list</code> and show it. <code>result stage</code> consists of TableView with 2 columns (to represent each <code>Entity</code>).</p>  <p>To reproduce the problem I repeat next steps manually several times:</p>  <ol> <li>hit the button on <code>main stage</code> </li> <li>close (alt+f4) <code>result stage</code> just after it was shown</li> </ol>  <p>If I use default <code>cellFactory</code> - there are no problems.  If I use custom <code>StringWithTooltip</code> as <code>cellFactory</code> I always receive OOM after 15-30 button hits.</p>  <p>VM arguments I've added to get OOM faster and to see GC work: <code>-Xmx100m -verbosegc</code></p>  <p>Did I miss anything that may cause the OOM?</p>  <p>Here is the code of <code>result stage</code>'s controller:</p>  <pre><code>public class EWController implements Initializable {     @FXML    private TableView&lt;Entity&gt; table;     @FXML    private TableColumn&lt;Entity, String&gt; name;     @FXML    private TableColumn&lt;Entity, String&gt; email;      public void init(List&lt;Entity&gt; list) {         table.getItems().setAll(list);         name.setCellValueFactory(new PropertyValueFactory&lt;Entity, String&gt;("name"));         email.setCellValueFactory(new PropertyValueFactory&lt;Entity, String&gt;("email"));         // OOM after uncommenting next 2 rows:         // name.setCellFactory(column -&gt; { return new StringWithTooltip(); });         // email.setCellFactory(column -&gt; { return new StringWithTooltip(); });     }      private class StringWithTooltip extends TableCell&lt;Entity, String&gt; {         public StringWithTooltip() {             super();         }         @Override         protected void updateItem(String item, boolean empty) {             super.updateItem(item, empty);             Tooltip tooltip = null;             if (item != null) {                 tooltip = new Tooltip(item);             }             setText(item);             setTooltip(tooltip);         }     }  } </code></pre>  <p>Sample <code>verbosegc</code> output with and without tooltips are below. Numbers between GC logs indicates the sequence number of button hit (i.e. without tooltips I clicked button 54 times, with tooltips I received OOM on 19th click)</p>  <pre><code>====== Tooltips NOT used ===================================== [GC (Allocation Failure)  23552K-&gt;3881K(88576K), 0.0189627 secs] 0 [GC (Allocation Failure)  27433K-&gt;20973K(88576K), 0.1159305 secs] 1 [GC (Allocation Failure)  44525K-&gt;36214K(88576K), 0.0892338 secs] 2 [GC (Allocation Failure)  59766K-&gt;55448K(91648K), 0.1613655 secs] [Full GC (Ergonomics)  55448K-&gt;12513K(98816K), 0.2432078 secs] 3 [GC (Allocation Failure)  39137K-&gt;35548K(98816K), 0.1097441 secs] 4 5 [GC (Allocation Failure)  62172K-&gt;55328K(83456K), 0.2345766 secs] [Full GC (Ergonomics)  55328K-&gt;11847K(83456K), 0.2388883 secs] 6 [GC (Allocation Failure)  22771K-&gt;21725K(91136K), 0.1834695 secs] [GC (Allocation Failure)  32989K-&gt;30598K(91136K), 0.0727801 secs] 7 [GC (Allocation Failure)  41862K-&gt;27087K(91136K), 0.0463354 secs] [GC (Allocation Failure)  38351K-&gt;37601K(91136K), 0.0639904 secs] 8 [GC (Allocation Failure)  48865K-&gt;32586K(91136K), 0.0395968 secs] 9 [GC (Allocation Failure)  43850K-&gt;40761K(91136K), 0.0582766 secs] [GC (Allocation Failure)  52025K-&gt;51010K(91136K), 0.0642809 secs] 10 [GC (Allocation Failure)  62217K-&gt;44917K(91136K), 0.0229006 secs] 11 [GC (Allocation Failure)  55821K-&gt;54640K(91136K), 0.1075090 secs] [GC (Allocation Failure)  65904K-&gt;62512K(91136K), 0.0708791 secs] [Full GC (Ergonomics)  62512K-&gt;15558K(91136K), 0.4142692 secs] 12 [GC (Allocation Failure)  26822K-&gt;23265K(91136K), 0.0290934 secs] [GC (Allocation Failure)  34529K-&gt;33855K(91136K), 0.0835239 secs] 13 [GC (Allocation Failure)  45119K-&gt;41344K(91136K), 0.0631958 secs] 14 [GC (Allocation Failure)  52608K-&gt;49360K(91136K), 0.1012270 secs] [GC (Allocation Failure)  60624K-&gt;59665K(91136K), 0.0638493 secs] 15 [GC (Allocation Failure)  70929K-&gt;53468K(91136K), 0.0172856 secs] 16 [GC (Allocation Failure)  64399K-&gt;63191K(91136K), 0.0786927 secs] [Full GC (Ergonomics)  63191K-&gt;21261K(91136K), 0.4322532 secs] [GC (Allocation Failure)  32525K-&gt;30531K(91136K), 0.0337464 secs] 17 [GC (Allocation Failure)  41795K-&gt;24328K(91136K), 0.0121279 secs] [GC (Allocation Failure)  35592K-&gt;34926K(91136K), 0.0467613 secs] 18 [GC (Allocation Failure)  46190K-&gt;42376K(91136K), 0.0753705 secs] 19 [GC (Allocation Failure)  53640K-&gt;50399K(91136K), 0.0670900 secs] [GC (Allocation Failure)  61663K-&gt;60704K(91136K), 0.0642809 secs] 20 [GC (Allocation Failure)  71968K-&gt;54600K(91136K), 0.0171721 secs] 21 [GC (Allocation Failure)  65864K-&gt;64024K(91136K), 0.0556619 secs] [Full GC (Ergonomics)  64024K-&gt;21092K(91136K), 0.3903899 secs] [GC (Allocation Failure)  32356K-&gt;30498K(91136K), 0.0657387 secs] 22 [GC (Allocation Failure)  41762K-&gt;24367K(91136K), 0.0136774 secs] [GC (Allocation Failure)  35631K-&gt;34933K(91136K), 0.0519895 secs] 23 [GC (Allocation Failure)  46197K-&gt;42323K(91136K), 0.0659914 secs] 24 [GC (Allocation Failure)  53587K-&gt;36149K(91136K), 0.0058305 secs] [GC (Allocation Failure)  47413K-&gt;46598K(91136K), 0.0413143 secs] 25 [GC (Allocation Failure)  57862K-&gt;54071K(91136K), 0.0679693 secs] 26 [GC (Allocation Failure)  65335K-&gt;63015K(91136K), 0.0655829 secs] [Full GC (Ergonomics)  63015K-&gt;21336K(91136K), 0.4326098 secs] [GC (Allocation Failure)  32600K-&gt;31222K(91136K), 0.0362259 secs] 27 [GC (Allocation Failure)  42486K-&gt;24988K(91136K), 0.0151512 secs] 28 [GC (Allocation Failure)  36252K-&gt;35480K(91136K), 0.0541130 secs] [GC (Allocation Failure)  46744K-&gt;42999K(91136K), 0.0602065 secs] 29 [GC (Allocation Failure)  54263K-&gt;36832K(91136K), 0.0071805 secs] [GC (Allocation Failure)  48096K-&gt;47362K(91136K), 0.0614661 secs] 30 [GC (Allocation Failure)  58626K-&gt;54891K(91136K), 0.0659517 secs] 31 [GC (Allocation Failure)  66155K-&gt;63363K(91136K), 0.0756944 secs] [Full GC (Ergonomics)  63363K-&gt;21620K(91136K), 0.4844076 secs] [GC (Allocation Failure)  32884K-&gt;31773K(91136K), 0.0428106 secs] 32 [GC (Allocation Failure)  43037K-&gt;25856K(91136K), 0.0197041 secs] 33 [GC (Allocation Failure)  36935K-&gt;35723K(91136K), 0.0596825 secs] [GC (Allocation Failure)  46987K-&gt;43675K(91136K), 0.0682849 secs] 34 [GC (Allocation Failure)  54939K-&gt;37479K(91136K), 0.0089385 secs] [GC (Allocation Failure)  48743K-&gt;48078K(91136K), 0.0632343 secs] 35 [GC (Allocation Failure)  59342K-&gt;55463K(91136K), 0.0651474 secs] 36 [GC (Allocation Failure)  66727K-&gt;63479K(91136K), 0.0988758 secs] [Full GC (Ergonomics)  63479K-&gt;21746K(91136K), 0.4613370 secs] [GC (Allocation Failure)  33010K-&gt;32187K(91136K), 0.0372642 secs] 37 [GC (Allocation Failure)  43451K-&gt;26107K(91136K), 0.0168700 secs] 38 [GC (Allocation Failure)  37371K-&gt;35531K(91136K), 0.0544786 secs] [GC (Allocation Failure)  46795K-&gt;44881K(91136K), 0.0754782 secs] 39 [GC (Allocation Failure)  56145K-&gt;38757K(91136K), 0.0206514 secs] [GC (Allocation Failure)  50021K-&gt;49324K(91136K), 0.0498769 secs] 40 [GC (Allocation Failure)  60588K-&gt;56673K(91136K), 0.0681874 secs] 41 [GC (Allocation Failure)  67937K-&gt;50560K(91136K), 0.0072549 secs] [GC (Allocation Failure)  61824K-&gt;61052K(91136K), 0.0415869 secs] 42 [GC (Allocation Failure)  72316K-&gt;68630K(91136K), 0.0844699 secs] [Full GC (Ergonomics)  68630K-&gt;12908K(91136K), 0.1623032 secs] 43 [GC (Allocation Failure)  24172K-&gt;22382K(91136K), 0.0449879 secs] [GC (Allocation Failure)  33628K-&gt;32196K(91136K), 0.0813459 secs] 44 [GC (Allocation Failure)  43460K-&gt;25937K(91136K), 0.0152217 secs] 45 [GC (Allocation Failure)  37113K-&gt;36297K(91136K), 0.0483640 secs] [GC (Allocation Failure)  47561K-&gt;43893K(91136K), 0.0632394 secs] 46 [GC (Allocation Failure)  55157K-&gt;37758K(91136K), 0.0074140 secs] [GC (Allocation Failure)  49022K-&gt;48271K(91136K), 0.0468568 secs] 47 [GC (Allocation Failure)  59535K-&gt;55801K(91136K), 0.1086634 secs] 48 [GC (Allocation Failure)  67065K-&gt;64088K(91136K), 0.0672658 secs] [Full GC (Ergonomics)  64088K-&gt;21629K(91136K), 0.4557041 secs] [GC (Allocation Failure)  32893K-&gt;31782K(91136K), 0.0381890 secs] 49 [GC (Allocation Failure)  43046K-&gt;25833K(91136K), 0.0165044 secs] 50 [GC (Allocation Failure)  36908K-&gt;35732K(91136K), 0.0617944 secs] [GC (Allocation Failure)  46996K-&gt;43692K(91136K), 0.0635165 secs] 51 [GC (Allocation Failure)  54956K-&gt;37528K(91136K), 0.0089468 secs] [GC (Allocation Failure)  48792K-&gt;48087K(91136K), 0.0753423 secs] 52 [GC (Allocation Failure)  59351K-&gt;55504K(91136K), 0.0641431 secs] 53 [GC (Allocation Failure)  66768K-&gt;63504K(91136K), 0.0677359 secs] [Full GC (Ergonomics)  63504K-&gt;21750K(91136K), 0.4832487 secs] ============================================================== ============================================================== ======== Tooltips used ======================================= [GC (Allocation Failure)  23552K-&gt;3881K(88576K), 0.0188126 secs] 0 [GC (Allocation Failure)  27433K-&gt;21414K(88576K), 0.0973424 secs] 1 [GC (Allocation Failure)  44966K-&gt;36824K(88576K), 0.1104175 secs] 2 [GC (Allocation Failure)  60376K-&gt;54988K(91648K), 0.1263563 secs] [Full GC (Ergonomics)  54988K-&gt;39833K(98816K), 0.6936682 secs] 3 [GC (Allocation Failure)  66457K-&gt;62428K(98816K), 0.1330000 secs] [Full GC (Ergonomics)  62428K-&gt;47352K(98816K), 0.6345553 secs] 4 5 [Full GC (Ergonomics)  73976K-&gt;37646K(98816K), 1.0567175 secs] 6 [GC (Allocation Failure)  64270K-&gt;58901K(83456K), 0.3199328 secs] [Full GC (Ergonomics)  58901K-&gt;45151K(83456K), 0.5323752 secs] 7 [GC (Allocation Failure)  56415K-&gt;52415K(91136K), 0.0339112 secs] [Full GC (Ergonomics)  52415K-&gt;38444K(91136K), 0.3316804 secs] [GC (Allocation Failure)  49708K-&gt;49069K(91136K), 0.0401740 secs] 8 [GC (Allocation Failure)  60333K-&gt;56046K(91136K), 0.0900182 secs] [Full GC (Ergonomics)  56046K-&gt;42352K(91136K), 0.3488993 secs] 9 [GC (Allocation Failure)  53616K-&gt;51866K(91136K), 0.0451662 secs] [Full GC (Ergonomics)  51866K-&gt;51556K(91136K), 0.5781257 secs] [GC (Allocation Failure)  62820K-&gt;61186K(91136K), 0.0370904 secs] [Full GC (Ergonomics)  61186K-&gt;46219K(91136K), 0.4835366 secs] 10 [GC (Allocation Failure)  57483K-&gt;53510K(91136K), 0.0307494 secs] [Full GC (Ergonomics)  53510K-&gt;39558K(91136K), 0.3732332 secs] [GC (Allocation Failure)  50822K-&gt;50215K(91136K), 0.0391421 secs] 11 [GC (Allocation Failure)  61479K-&gt;57328K(91136K), 0.1793001 secs] [Full GC (Ergonomics)  57328K-&gt;43543K(91136K), 0.5181719 secs] 12 [GC (Allocation Failure)  54807K-&gt;52376K(91136K), 0.0420448 secs] [GC (Allocation Failure)  63640K-&gt;62433K(91136K), 0.0748561 secs] [Full GC (Ergonomics)  62433K-&gt;47284K(91136K), 0.4907640 secs] 13 [GC (Allocation Failure)  58548K-&gt;54479K(91136K), 0.0304249 secs] [Full GC (Ergonomics)  54479K-&gt;40770K(91136K), 0.3448152 secs] 14 [GC (Allocation Failure)  51964K-&gt;51142K(91136K), 0.0486013 secs] [GC (Allocation Failure)  62406K-&gt;58400K(91136K), 0.1207368 secs] [Full GC (Ergonomics)  58400K-&gt;44556K(91136K), 0.6345277 secs] 15 [GC (Allocation Failure)  55820K-&gt;51989K(91136K), 0.0302190 secs] [GC (Allocation Failure)  63253K-&gt;62485K(91136K), 0.0819173 secs] [Full GC (Ergonomics)  62485K-&gt;48503K(91136K), 0.5832148 secs] 16 [GC (Allocation Failure)  59767K-&gt;55672K(91136K), 0.0280121 secs] [Full GC (Ergonomics)  55672K-&gt;41976K(91136K), 0.4363636 secs] 17 [GC (Allocation Failure)  53240K-&gt;51778K(91136K), 0.0453240 secs] [GC (Allocation Failure)  63042K-&gt;61104K(91136K), 0.0902266 secs] [Full GC (Ergonomics)  61104K-&gt;60562K(91136K), 1.0159323 secs] 18 [Full GC (Ergonomics)  71826K-&gt;68653K(91136K), 0.9837669 secs] [Full GC (Ergonomics)  79405K-&gt;78733K(91136K), 0.8440103 secs] [Full GC (Ergonomics)  79834K-&gt;79834K(91136K), 0.6198255 secs] [Full GC (Ergonomics)  79834K-&gt;79834K(91136K), 0.5551353 secs] [Full GC (Ergonomics)  79834K-&gt;79834K(91136K), 0.5883000 secs] [Full GC (Ergonomics)  79835K-&gt;79835K(91136K), 0.6009044 secs] [Full GC (Ergonomics)  79837K-&gt;79837K(91136K), 0.5656958 secs] [Full GC (Ergonomics)  79839K-&gt;79839K(91136K), 0.6022025 secs] [Full GC (Ergonomics)  79840K-&gt;79840K(91136K), 0.6745683 secs] [Full GC (Ergonomics)  79842K-&gt;79842K(91136K), 0.6716258 secs] [Full GC (Ergonomics)  79844K-&gt;79844K(91136K), 0.5113627 secs] [Full GC (Ergonomics)  79846K-&gt;79846K(91136K), 0.6462560 secs] [Full GC (Ergonomics)  79847K-&gt;79847K(91136K), 0.5943749 secs] [Full GC (Ergonomics)  79849K-&gt;79849K(91136K), 0.5452163 secs] [Full GC (Ergonomics)  79851K-&gt;79851K(91136K), 0.5827222 secs] [Full GC (Ergonomics)  79852K-&gt;79852K(91136K), 0.5526899 secs] [Full GC (Ergonomics)  79854K-&gt;79853K(91136K), 0.6568568 secs] [Full GC (Ergonomics)  79855K-&gt;79855K(91136K), 0.5829878 secs] [Full GC (Ergonomics)  79857K-&gt;79857K(91136K), 0.5282699 secs] [Full GC (Ergonomics)  79859K-&gt;79859K(91136K), 0.6104188 secs] [Full GC (Ergonomics)  79860K-&gt;79860K(91136K), 0.5765307 secs] [Full GC (Ergonomics)  79862K-&gt;79862K(91136K), 0.6484148 secs] [Full GC (Ergonomics)  79863K-&gt;79863K(91136K), 0.7143491 secs] [Full GC (Ergonomics)  79865K-&gt;79865K(91136K), 0.5676378 secs] [Full GC (Ergonomics)  79867K-&gt;79867K(91136K), 0.5877709 secs] [Full GC (Ergonomics)  79868K-&gt;79868K(91136K), 0.6567093 secs] [Full GC (Ergonomics)  79870K-&gt;79870K(91136K), 0.6213506 secs] [Full GC (Ergonomics)  79871K-&gt;79871K(91136K), 0.5649807 secs] [Full GC (Allocation Failure)  79871K-&gt;79835K(91136K), 0.9125164 secs] [Full GC (Ergonomics)  79835K-&gt;79835K(91136K), 0.6045697 secs] [Full GC (Ergonomics)  79837K-&gt;79837K(91136K), 0.5234400 secs] [Full GC (Ergonomics)  79839K-&gt;79839K(91136K), 0.6080106 secs] [Full GC (Ergonomics)  79840K-&gt;79840K(91136K), 0.5780834 secs] [Full GC (Ergonomics)  79842K-&gt;79842K(91136K), 0.6227994 secs] [Full GC (Ergonomics)  79844K-&gt;79844K(91136K), 0.5766827 secs] [Full GC (Ergonomics)  79846K-&gt;79846K(91136K), 0.6046146 secs] [Full GC (Ergonomics)  79847K-&gt;79847K(91136K), 0.5514694 secs] [Full GC (Ergonomics)  79849K-&gt;79849K(91136K), 0.5790371 secs] [Full GC (Ergonomics)  79851K-&gt;79851K(91136K), 0.6188673 secs] [Full GC (Ergonomics)  79852K-&gt;79852K(91136K), 0.5541355 secs] [Full GC (Ergonomics)  79854K-&gt;79854K(91136K), 0.5680001 secs] [Full GC (Ergonomics)  79856K-&gt;79856K(91136K), 0.6026854 secs] [Full GC (Ergonomics)  79857K-&gt;79857K(91136K), 0.5866017 secs] Exception in thread "JavaFX Application Thread" [Full GC (Ergonomics)  79861K-&gt;66667K(91136K), 0.6172934 secs] java.lang.OutOfMemoryError: GC overhead limit exceeded     at java.lang.Integer.toString(Unknown Source)     at test.MainController.lambda$0(MainController.java:29)     at test.MainController$$Lambda$70/1848336808.handle(Unknown Source)     at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(Unknown Source)     at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(Unknown Source)     at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(Unknown Source)     at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(Unknown Source)     at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(Unknown Source)     at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(Unknown Source)     at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(Unknown Source)     at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(Unknown Source)     at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(Unknown Source)     at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(Unknown Source)     at com.sun.javafx.event.EventUtil.fireEventImpl(Unknown Source)     at com.sun.javafx.event.EventUtil.fireEvent(Unknown Source)     at javafx.event.Event.fireEvent(Unknown Source)     at javafx.scene.Node.fireEvent(Unknown Source)     at javafx.scene.control.Button.fire(Unknown Source)     at com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(Unknown Source)     at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(Unknown Source)     at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(Unknown Source)     at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(Unknown Source)     at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(Unknown Source)     at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(Unknown Source)     at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(Unknown Source)     at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(Unknown Source)     at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(Unknown Source)     at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(Unknown Source)     at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(Unknown Source)     at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(Unknown Source)     at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(Unknown Source)     at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(Unknown Source) </code></pre>  <p>First 10 rows of heap dump difference between app start and OOM received (captured using VisualVM) </p>  <pre><code>= Class name ====================== Instances ===== Size == char[]                              +806,173    +27,428,954 java.lang.String                    +806,013    +22,568,364 test.Entity                         +400,000    +12,800,000 java.util.HashMap$Node                +7,412       +326,128 com.sun.javafx.geom.RectBounds        +5,606       +179,392 java.util.ArrayList                   +5,118       +163,776 java.lang.Object[]                    +4,482     +3,869,944 com.sun.javafx.css.PseudoClassState   +3,771       +120,672 java.lang.ref.WeakReference           +3,121       +149,808 java.util.HashMap                     +2,957       +189,248 </code></pre>