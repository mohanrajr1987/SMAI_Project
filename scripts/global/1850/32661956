<p>I've implemented a simple parallax effect based on this tutorial:</p>  <p><a href="http://code.tutsplus.com/tutorials/a-simple-parallax-scrolling-technique--net-27641" rel="nofollow" title="A Simple Parallax Scrolling Technique">A Simple Parallax Scrolling Technique</a></p>  <p>It worked but it was pretty jagged/choppy on Safari and mildly choppy on Firefox so I tried debouncing the scroll events with the help of this tutorial:</p>  <p><a href="http://www.html5rocks.com/en/tutorials/speed/animations/" rel="nofollow" title="Leaner, Meaner, Faster Animations with requestAnimationFrame">Leaner, Meaner, Faster Animations with requestAnimationFrame</a></p>  <p>It worked swimmingly on Safari to create smooth scrolling but now I'm seeing some slightly worse lag/choppiness on Firefox.  I think it's tide to garbage collection. </p>  <p><a href="http://i.stack.imgur.com/FwCY0.png" rel="nofollow"><img src="http://i.stack.imgur.com/FwCY0.png" alt="Firefox Performance"></a></p>  <p>I've looked at many other answers on here for reducing garbage collection but their typically dealing with huge animations/games and talk about pooling objects which I don't think applies in this simple case.  I've seen a couple mention event handlers causing issues and that I need to clear variables to free up memory but I'm not sure how that applies.</p>  <p>Is there a way to optimize this code so Firefox isn't lagging?</p>  <p>Any help is much appreciated!</p>  <p>Checkout the working page <a href="http://markpfaff.com/template/index.php" rel="nofollow" title="Mark Pfaff Portfolio Concept">here</a></p>  <p>JavaScript:</p>  <pre><code>    $(document).ready(function(){                                 /*begin parallax effect*/                               /** start with smooth scrolling by        http://www.html5rocks.com/en/tutorials/speed/animations/     */                      lastScrollY     = 0,         ticking         = false;      /* Callback for our scroll event - just      * keeps track of the last scroll value      */     function onScroll() {         lastScrollY = window.scrollY;         requestTick();     }      /** smooth scrolling      * Calls rAF if it's not already      * been done already      */     function requestTick() {         if(!ticking) {             requestAnimationFrame(update);             ticking = true;         }     }       var $bgobj = $('section[data-type="background"]'); // assigning the object     var $window = $(window);      function update() {         var yPos = -($window.scrollTop() / $bgobj.data('speed'));           // Put together our final background position         var coords = '50% '+ yPos + 'px';          // Move the background         $bgobj.css({ backgroundPosition: coords });          // allow further rAFs to be called         ticking = false;      }          // only listen for scroll events     window.addEventListener('scroll', onScroll, false);      // shim layer with setTimeout fallback     window.requestAnimFrame = (function(){         return  window.requestAnimationFrame       ||               window.webkitRequestAnimationFrame ||               window.mozRequestAnimationFrame    ||               window.oRequestAnimationFrame      ||               window.msRequestAnimationFrame     ||               function( callback ){                 window.setTimeout(callback, 1000 / 60);               };     })();   }); </code></pre>  <p>HTML (just the pertinent elements)</p>  <pre><code>&lt;body class="parallax"&gt;     &lt;section id="parallax-wrapper" class="parallax-back pages" data-type="background" data-speed="2"&gt;         &lt;--! all the page content--&gt;     &lt;/section&gt; &lt;/body&gt; </code></pre>  <p>CSS</p>  <pre><code>.parallax {     perspective: 1px;     -webkit-perspective: 1px;       height: 100vh;     overflow-x: hidden;     overflow-y: scroll;     position: relative;      -webkit-transform-style: preserve-3d;     transform-style: preserve-3d;    }  #parallax-wrapper {     background:url(../images/backgroundtsm.png) 50% 0 repeat fixed;     background-repeat: no-repeat;     min-height: 2200px;      height: 2200px;      margin: 0 auto;      width: 100%;      max-width: 1920px;      position: relative; } </code></pre>