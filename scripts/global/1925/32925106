<pre><code>λ&gt; succ 5 6 λ&gt; :t succ 5 succ 5 :: (Enum a, Num a) =&gt; a </code></pre>  <p>How does this work? Since the literal is polymorphic, what is the instance that is being picked? I suspect it’s <code>Integer</code> but why exactly?</p>  <p>My first theory was that the default implementation of <code>succ</code> might come into play (I have no idea <em>why</em> this would happen though), but, no, it’s not the case as it would not be working correctly:</p>  <pre><code>λ&gt; :t succ (10^20) succ (10^20) :: (Enum a, Num a) =&gt; a λ&gt; succ (10^20) 100000000000000000001 λ&gt;  λ&gt; let test = toEnum . (+1) . fromEnum :: Enum a =&gt; a -&gt; a λ&gt; :t test (10^20) test (10^20) :: (Enum a, Num a) =&gt; a λ&gt; test (10^20) 7766279631452241921 </code></pre>  <p>So, again, I’m pretty sure it’s the instance for <code>Integer</code>. But why?</p>