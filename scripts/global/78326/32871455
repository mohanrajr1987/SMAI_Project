<p>I have developed a tree view that uses knockout to display a hierarchy.  I have noticed a weird situation within chrome that happens when I collapse a node in the tree.  The text for the node disappears along with the items under it.  I figured I had something wrong with my code and then figured out that it works correctly in both IE and firefox.  I created the fiddle below that demonstrates the issue with any extra code from my page stripped out.  If you expand a node and then collapse it (the plus button does not change to a minus as it would in my full code), the text disappears.  Then, you can just click anywhere on the page to get the text to show back up.  </p>  <p>The text that disappears has been outlined in red as recommended in a comment and can be seen in the screenshot</p>  <p><a href="http://i.stack.imgur.com/6OeLj.jpg" rel="nofollow"><img src="http://i.stack.imgur.com/6OeLj.jpg" alt="enter image description here"></a></p>  <p>I have tested this out on 4 machines and on each one it doesn't work when I use Chrome.  Is this a bug in Chrome, or am I doing something wrong?  Also, can anybody see any way to work around this issue if it is a bug in Chrome?</p>  <p><a href="http://jsfiddle.net/WizKid81/o4dhgtny/" rel="nofollow">Example Fiddle</a></p>  <p><div class="snippet" data-lang="js" data-hide="false"> <div class="snippet-code"> <pre class="snippet-code-js lang-js prettyprint-override"><code>console.clear();  var hierarchyNode = function (parent) {     var self = this;     this.name = "Node Name";     this.hasChildren = ko.observable(true);     this.childNodes = ko.observableArray();     this.expanded = ko.observable(false); };  hierarchyNode.prototype = {     name: null,     hasChildren: null,     childNodes: null,     getChildNodes: function (element, event) {         if (element.hasChildren() === true &amp;&amp; element.childNodes().length === 0) {             element.childNodes.push(new hierarchyNode(element));         }          element.expanded(!element.expanded());      }     };  var hierarchyVM = function () {     var self = this;      self.hierarchyNodes = ko.observableArray();     self.selectItem = function () {}; };  var vm = new hierarchyVM();  vm.hierarchyNodes.push(new hierarchyNode(null));  console.log(vm.hierarchyNodes()[0]); ko.applyBindings(vm);</code></pre> <pre class="snippet-code-css lang-css prettyprint-override"><code>ul.tree {     list-style-type: none;     padding-left: 10px; } .hierarchyNode {border: 1px solid red;}</code></pre> <pre class="snippet-code-html lang-html prettyprint-override"><code>&lt;script src="https://cdnjs.cloudflare.com/ajax/libs/knockout/3.2.0/knockout-min.js"&gt;&lt;/script&gt; &lt;script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"&gt;&lt;/script&gt; &lt;ul class="tree" data-bind="template: { name: 'itemTmpl', foreach: $data.hierarchyNodes }"&gt;&lt;/ul&gt; &lt;script id="itemTmpl" type="text/html"&gt;                 &lt;li&gt;                     &lt;button data-bind="click: getChildNodes"&gt;+&lt;/button&gt;                                     &lt;div data-bind="visible: hasChildren() == false" class="tree-spacer"&gt;&lt;/div&gt;                     &lt;span data-bind="text: name" class="no_selection hierarchyNode"&gt;&lt;/span&gt;                     &lt;ul class="tree" data-bind="template: { name: 'itemTmpl', foreach: $data.childNodes }, visible: expanded"&gt;&lt;/ul&gt;                 &lt;/li&gt;             &lt;/script&gt;</code></pre> </div> </div> </p>