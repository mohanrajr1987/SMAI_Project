<p>OK, here goes. </p>  <p>Problem 1:  I want to, based on the radio button checked, display a tr-element or not. Threre will be 3 buttons, displaying 'unlocked achievements', 'locked', and 'all' (both locked + unlocked). </p>  <p>The code below shows how it looks when I try to call three different functions, each setting the tr:s visibility to true/false depending on radio button checked. (D.R.Y, I know, but right now I'm just looking for the functionality).</p>  <p>Problem 2:  Making the for-loop run. itemsListForFilter is declared globally, outside the filter function. itemsListForFilter is a copy of an object arrayMap which is initiallized and filled elsewhere in the code. The array contains items  with - amongst other things - the boolean "radioCheck", with the default value "true", which I want to check. </p>  <p>When I access itemsListForFilter in the function where the copying takes place it's filled with items but... When I try to access itemsListForFilter in the filter function it displays as having the value of null. So the copy is "lost" somewhere :)</p>  <p>View / HTML:</p>  <pre><code>&lt;div class="widget-header-container"&gt;                 &lt;h3 class="widget-header"&gt;Achievements&lt;/h3&gt;                 &lt;div class="wrapper"&gt;                     &lt;input type="radio" name="appliedFilter" value="all" data-bind="checked: filterAll"/&gt;&lt;label for="all"&gt;Show all&lt;/label&gt;                     &lt;input type="radio" name="appliedFilter" value="unlocked" data-bind="checked: filterUnlocked"/&gt;&lt;label for="unlocked"&gt;Unlocked&lt;/label&gt;                     &lt;input type="radio" name="appliedFilter" value="locked" data-bind="checked: filterLocked"/&gt;&lt;label for="locked"&gt;Locked&lt;/label&gt;                 &lt;/div&gt;                  &lt;div&gt;&lt;div class="widget-header-line-game1"&gt;&lt;/div&gt;&lt;div class="widget-header-line-game2"&gt;&lt;/div&gt;&lt;div class="widget-header-line-shadow"&gt;&lt;/div&gt;&lt;/div&gt;             &lt;/div&gt;             &lt;div&gt;                 &lt;div class="rounded-box" style="padding:15px;padding-top: 0;background-color:#fff;overflow:hidden;"&gt;                     &lt;table id="game-achievements" class="table table-condensed" style="margin-top:10px;"&gt;                         &lt;tbody data-bind="foreach: viewGame.achievements()"&gt;                             &lt;tr data-bind="visible: radioCheck" style="display: none"&gt; </code></pre>  <p>Viewmodel / JS:</p>  <pre><code>filterUnlocked: function(){     return filter('unlocked'); }, filterLocked: function(){     return filter('locked'); }, filterAll: function(){     return filter('all'); }, filter: function(x){      for (var item in itemsListForFilter){         if (x === 'locked'){             item.radioCheck = '!achieved';         }         if (x === 'unlocked') {             item.radioCheck = 'achieved';         }         else {item.radioCheck = true;}     } </code></pre>  <p>Observe that the viewmodel is an object and not a function:</p>  <pre><code>var gamesViewModel = {  self: this, settings: null, gameId: null, authorized: false, (...) </code></pre>  <p>Right now the functions named filterUnlocked, etc (except filter) displays as "unused properties" in the JS file. What should i do to call them from the HTML? Or is there a better way to accomplish what I'm looking for?</p>  <p>Thank you.</p>