<p>When I use 'value' with a select, I can store a reference to an model as the value.</p>  <p><code>&lt;select data-bind="value: selectedOption,     attr: {name: $parent.name},     options: options, &lt;/select&gt; </code></p>  <p>The above works very well. The model is stored in a parent model, so I can access all of it's properties elsewhere. With a checked, I can only store true and false:</p>  <p><code>&lt;input type="checkbox" data-bind="checked: $parent.selectedOption, checkedValue: $data" /&gt;</code></p>  <p>In this case, <code>$parent.selectedOption</code> is an observable, and my assumption is that I should be able to write in whatever data I want (in this case $data, which references the model at the current scope).</p>  <p>Why is KO not passing in the model as a value, only true/false?</p>  <p>Edit: When I switch <code>selectedOption</code> to an observable array, it passes in whatever I want just fine... but I don't want to use an array.</p>  <p>Edit 2: On the input, if I change the <code>value</code> or <code>checkedValue</code> data bindings to 'foo', it still just returns true or false. It's like I can't override the boolean values.</p>