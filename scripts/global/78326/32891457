<p>Does it make any sense to create a knockout viewmodel without any knockout code in it? Meaning no observables, subscribers or any knockout functions at all?</p>  <p>I have some common functionality for the application such as modals, flash alerts, notifications, datepickers... </p>  <p>I usually access them through other viewmodels by using a master view model:</p>  <pre><code>var MasterModel = function(){     this.comments = new commentsViewModel().init();     this.equipment = new equipmentViewModel().init();      //fake viewmodels     this.notification = new notificationViewModel().init();     this.alert = new alertsViewModel().init(); };  var mm = new MasterModel();  ko.applyBindings(mm) </code></pre>  <p>Then I can use the following from any viewModel:</p>  <pre><code>mm.alert.show('Demo'); </code></pre>  <p>Why do I keep them as viewmodels? It simplifies things. </p>  <ul> <li>I can keep them under the same path as the viewmodels</li> <li>I can in a future decide to use observable or any knockout functionality on them </li> </ul>