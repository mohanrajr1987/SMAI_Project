<p>I'm really pulling my hair out on this one. I need to loop over some selected items, consisting both of checkboxes and select lists, and compile an array of the selected models.</p>  <p>This is eluding me because <code>checked</code> and the select's <code>value</code> work differently. I was trying to simply store the selected option in a parent model (with a selectedOption observable). This worked fine for <code>&lt;select&gt;</code> because it saved a reference to the model, but with checkboxes, it would only save a boolean value.</p>  <p>I tried setting a flag on the model itself, which is fine for checkboxes, but I can't access individual options to let them know that they're the current selection in a <code>select</code> list.</p>  <p>All models populating checkboxes and dropdown lists are of the same type, I'm just displaying them differently depending on certain internal properties.</p>  <p>How can I simply collect the models of all selected options from both checkboxes and select lists?</p>  <p>Edit: Adding samples. There's an <code>Item</code> model which is the parent for an <code>Option</code> model.</p>  <pre><code>function ItemModel(vm, item) {     var self = this;     self.name = item.name;     self.description = item.description;     self.options = ko.observableArray(mapOptions(vm, item.options) || []);     self.selectedOption = ko.observable(); }  function OptionModel(vm, option) {     var self = this;     self.name = option.name;     self.sku = option.sku || "";     self.price = ko.observable(); } </code></pre>  <p>Markup/bindings (in which I foolishly thought I could set the checked value of the checkbox to simply be the model). If there's a single <code>Option</code> I use a checkbox, if more than one, I use a select list.</p>  <pre><code>&lt;input type="checkbox" data-bind="checked: $parent.selectedOption, checkedValue: $data" /&gt;  &lt;select data-bind="value: selectedOption, options: options, optionsText: item.name optionsCaption: 'Choose...'"&gt; &lt;/select&gt; </code></pre>  <p>Again, the <code>&lt;select&gt;</code> works as expected: the value is a reference to the currently selected <code>Option</code>, which means I can use that data elsewhere in the app (to tally up a summary of the customer's order). The checkbox, however, only saves a boolean value.</p>