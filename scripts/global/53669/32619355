<p>I am using ngVideo directive (<a href="https://github.com/Wildhoney/ngVideo" rel="nofollow">https://github.com/Wildhoney/ngVideo</a>) to develop a video player. Following is my videoPlayer.html</p>  <pre><code>&lt;section class="video" ng-video ng-model="interface"&gt; &lt;div class="videoScreenContainer"&gt;     &lt;!-- Video Screen Directive --&gt;     &lt;video poster="app/img/others/poster_1.jpg" id="videoBackgrounddata" muted            video-current-time="currentTime" manage-time-update vi-screen&gt;&lt;/video&gt; &lt;/div&gt; &lt;div class="videoAccessories"&gt;     &lt;!-- Controls Directive --&gt;     &lt;section vi-controls class="controls" layout="row" layout-align="start center" flex&gt;         &lt;span vi-controls-play ng-click="playVideo()" flex="15"&gt;             &lt;md-icon id="playIcon" md-svg-src="app/img/icons/play106.svg"&gt;                 &lt;md-tooltip&gt;Play&lt;/md-tooltip&gt;             &lt;/md-icon&gt;         &lt;/span&gt;         &lt;span vi-controls-pause flex="15"&gt;             &lt;md-icon md-svg-src="app/img/icons/pause44.svg"&gt;                 &lt;md-tooltip&gt;Pause&lt;/md-tooltip&gt;             &lt;/md-icon&gt;         &lt;/span&gt;         &lt;!-- Video information Directive --&gt;         &lt;section vi-feedback layout="row" layout-align="space-around center" flex&gt;             &lt;span style="font-size: small; color: black;"&gt;{{Math.round(currentTime)}}&lt;/span&gt;             &lt;!-- Timeline Directive --&gt;             &lt;md-slider flex min="0" max="{{duration}}" ng-model="currentTime"                        aria-label="blue" class="md-primary" style="margin-left: 5%;"&gt;&lt;/md-slider&gt;             &lt;span style="font-size: small; color: black;"&gt;{{Math.round(duration)}}&lt;/span&gt;         &lt;/section&gt;     &lt;/section&gt; &lt;/div&gt; </code></pre>  <p></p>  <p>I'm using a button to input the source video file which calls method function as onClick function:</p>  <pre><code>$scope.getVideoFile = function() {             $scope.videoName = document.getElementById('upload').value;             var nameSplit = $scope.videoName.split("\\");             $scope.videoName = nameSplit[nameSplit.length - 1];             video.addSource('mp4', $scope.resourceDir + $scope.videoName, true);             var videoElem = document.getElementById('videoBackgrounddata');             console.log("video loaded...");         }; </code></pre>  <p>But I'm facing a problem while loading new video after 1st video has already started playing. Problem is that new video's playback doesn't start from the beginning (as seen in slider), but from the currentTime of 1st video. I think this could be resolved if we set currentTime of new video to be 0. But I don't know how can I set it to 0, because I'm not sure how to set "currentTime" of slider, which is the value of ng-model of slider.</p>