<p>I have a data frame that has an ID column and numeric columns. I want to test if every single numeric column equal a certain value, and if not, output the columns that don't equal that value.</p>  <pre><code>&gt; df Source: local data frame [6 x 10]       id    c1    c2    c3    c4    c5    c6    c7    c8    c9   (int) (int) (int) (int) (int) (int) (int) (int) (int) (int) 1     1     1     1     1     1     1     1     1     1     4 2     2     1     1     1     1     1     1     1     1     1 3     3     1     1     1     1     1     1     1     1     1 4     4     1     2     1     1     1     1     1     1     1 5     5     1     1     1     1     1     1     1     1     1 6     6     1     1     1     1     2     1     1     1     1 </code></pre>  <p>Is there a way to do it in dplyr? I can do it with filter by testing each column, but looking for a simple way.</p>  <pre><code>library(dplyr)     filter(df, c1 == 1, c2 == 1, c3 == 1, c4 == 1, c5 == 1, c6 == 1, c7 == 1, c8 == 1, c9 ==1) </code></pre>  <p>I am looking for a solution that won't require me to enumerate each column name.  </p>  <p>When I flip the conditions to finding rows that have at least one unequal, I still need to test each column to see which one is 'not equal' to specified value. Too cumbersome.</p>