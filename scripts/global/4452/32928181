<p>I have a table of values, something like this:</p>  <pre><code>     A   ...   F 1   x1   ...   1 2   x7   ...   0 3   x3   ...   1 4   x4   ...   1 5   x3   ...   0 6   x2   ...   1 7   x2   ...   0 8   x4   ...   0 </code></pre>  <p>I've tried</p>  <pre><code>data[data$A %in% A_subset, c("A", "F")] </code></pre>  <p>but it returns to me <em>all</em> the rows in A, when in fact my subset has much fewer rows. I believe that may because the values in column A are not unique -- they are categorical (ordinal). So a particular <code>xi</code> can show up multiple times. (Column F is either 1 or 0).</p>  <p>So what I'm trying to get is the subset of A in one column next to the corresponding rows of F.</p>  <p>Another issue I think (though not sure at all) may be problematic is that when I print out <code>A_subset</code>, it's reindexed. In other words, the first row of <code>A_subset</code> may in fact have been the 20th row in <code>A</code>, and the second entry in <code>A_subset</code> could be from any row after the 20th row in <code>A</code>, and so on. </p>  <p><code>A_subset</code> has no particular "pattern", e.g. - every other row, values greather than <code>xi</code>, etc. The subset was determined based on some other column (neither A nor F). So <code>A_subset</code> is essentially obtained from <code>A</code>, but re-indexed (as stated above, relative order is maintained), so <code>A_subset</code> could be something like:</p>  <pre><code>   A_subset 1   x7 2   x4 3   x3 4   x2 5   x4 </code></pre>  <p>When instead, it might be more helpful to have</p>  <pre><code>    A_subset 2   x7 4   x4 5   x3 7   x2 8   x4 </code></pre>  <p>Notice the index didn't include row 6 from <code>A</code>, because, as an example, that row may not have met the criteria that I used to filter <code>A</code>. </p>  <p>But the indexing is not what's important! I'm just trying to clarify what <code>A_subset</code> is. What I care about is getting the subset of <code>A</code> and the corresponding rows in <code>F</code>.</p>