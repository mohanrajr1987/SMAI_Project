<p>This is an rubymotion scope problem with cocoapods</p>  <p>I found some tutorial that teaches me how to add FB login in iOS</p>  <blockquote>   <p>@fb_login_button = rmq.append(FBLoginView.new, :fb_login_button).get</p> </blockquote>  <p>However, <code>FBLoginView</code> is not defined in the latest SDK.</p>  <p>The FB official tutoral told me use the FB login button this way,</p>  <p>But I have no idea how to translate into rubymotion,</p>  <p>I tried in the following code, but it didn't show me the button.</p>  <p>Any idea ?</p>  <h1>official recommend <a href="https://developers.facebook.com/docs/facebook-login/ios" rel="nofollow">https://developers.facebook.com/docs/facebook-login/ios</a></h1>  <pre><code>- (void)viewDidLoad {   [super viewDidLoad];   FBSDKLoginButton *loginButton = [[FBSDKLoginButton alloc] init];   // Optional: Place the button in the center of your view.   loginButton.center = self.view.center;   [self.view addSubview:loginButton]; } </code></pre>  <p>you can see that my simulator is blank screen</p>  <p><img src="https://i.imgur.com/dMDPw9p.png" alt=""></p>  <h1>fb_screen.fb</h1>  <pre><code>class FbScreen &lt; PM::Screen   title "fb screen"   def on_load     rmq.stylesheet = MainStylesheet     rmq(self.view).apply_style :root_view     loginBtn = FBSDKLoginButton.alloc.init     loginBtn2 = FBSDKLoginButton.new     @fb_login_button = rmq.append(loginBtn).get         @fb_login_button2 = rmq.append(loginBtn2).get         @fb_login_button = rmq.append(FBLoginView.new, :fb_login_button).get     @fb_login_button.delegate = self   end   def loginViewFetchedUserInfo(_, user: user)     rmq(@fb_login_button).animate { |btn| btn.move(b: 400) }     @name_label = rmq.append(UILabel, :label_name).get     puts user     @name_label.text = "#{user['first_name']} #{user['last_name']}"     rmq(@name_label).animations.fade_in     # register_push_notifications   end    def loginViewShowingLoggedOutUser(_)     set_title 'User logged out'     if @name_label       rmq(@name_label).animations.fade_out       @name_label.removeFromSuperview       rmq(@fb_login_button).animate { |btn| btn.move(b: 300) }     end   end    def loginViewShowingLoggedInUser(_)     set_title 'User logged in'   end    def set_title(text)     self.title = text   end  end </code></pre>  <h1>Rake</h1>  <pre><code>    # -*- coding: utf-8 -*-     $:.unshift("/Library/RubyMotion/lib")     require 'motion/project/template/ios'     require 'bubble-wrap'     require 'motion-cocoapods'      begin       require 'bundler'       Bundler.require     rescue LoadError     end      # dotenv 載入順序要在 bundler 後面     require 'dotenv'     Dotenv.load     # ENV['device_name'] ||= 'iPhone 6s'      Motion::Project::App.setup do |app|       # Use `rake config' to see complete project settings.       app.name = 'LazyAIR'       app.deployment_target = "9.0"       # app.deployment_target = "8.3"       app.identifier = 'com.lazyair.sandbox'       app.seed_id = ENV["SEED_ID"]       app.info_plist["UIViewControllerBasedStatusBarAppearance"] = false        app.frameworks    = ["UIKit", "Foundation", 'AdSupport', 'Accounts', 'Social','CFNetwork','CoreData']        app.weak_frameworks += %w{ AdSupport Accounts Social }        app.pods do         # pod 'Facebook-iOS-SDK'         pod 'Bolts'         pod 'Facebook-iOS-SDK', '~&gt; 4.0.0'             # pod 'Facebook-iOS-SDK', '~&gt; 3.16.2'       end       # Building with `rake device`       app.development do         app.codesign_certificate = ENV['codesign_certificate']         app.provisioning_profile = ENV['provisioning_profile']         app.entitlements['aps-environment'] = 'development'         # app.entitlements['get-task-allow'] = true         app.entitlements['keychain-access-groups'] = [            app.seed_id + '.' + app.identifier         ]         puts app.codesign_certificate         puts app.provisioning_profile       end        # Building for Ad Hoc or App Store distribution       app.release do         app.entitlements["aps-environment"] = "production"         app.codesign_certificate = ENV['codesign_certificate']         app.provisioning_profile = ENV['provisioning_profile']       end           app.info_plist['Application requires iPhone environment']=true       app.info_plist['URL types'] = { 'URL Schemes' =&gt;"fb#{ENV['FB_APP_ID']}"}       app.info_plist['CFBundleURLTypes'] = [ { CFBundleURLSchemes: ["fb#{ENV['FB_APP_ID']}"] }]        app.info_plist['FacebookAppID'] = ENV['FB_APP_ID']       app.info_plist['FacebookDisplayName'] = ENV['FacebookDisplayName']       app.info_plist['NSAppTransportSecurity'] = {         'NSAllowsArbitraryLoads'=&gt; true,         'NSExceptionDomains' =&gt; {           'facebook.com' =&gt; {             'NSIncludesSubdomains' =&gt; true,             'NSExceptionRequiresForwardSecrecy' =&gt; true           }         },         'NSExceptionDomains' =&gt; {           'fbcdn.net' =&gt; {             'NSIncludesSubdomains' =&gt; true,             'NSExceptionRequiresForwardSecrecy' =&gt; true           }         },         'NSExceptionDomains' =&gt; {           'akamaihd.net' =&gt; {             'NSIncludesSubdomains' =&gt; true,             'NSExceptionRequiresForwardSecrecy' =&gt; true           }         }       }       app.info_plist['LSApplicationQueriesSchemes'] = [         'fbauth',         "fbapi",         "fb-messenger-api",         "fbauth2",         "fbshareextension",       ]        puts app.info_plist      end </code></pre>