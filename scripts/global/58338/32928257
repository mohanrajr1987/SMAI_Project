<p>I created a watch app and I am having problem to send data to the watch the first time it's being open. </p>  <p>I am emphasizing first time because once the app on the watch has been opened, the phone is in charge of updating the app context, hence the phone is always initiating the connection. This part works fine. However the first time the watch app is being opened I want the watch app to initiate the connection and ask the phone app for data. I can't get that to work ...</p>  <p>I've been trying to get the watch to request data from the IOS App by sending a message from the watch using this :</p>  <pre><code>        if (WCSession.defaultSession().reachable) {             WCSession.defaultSession().sendMessage(infoDictionary,                 replyHandler: { userInfo in                     self.combinedDict = userInfo                     self.defaults.setObject(self.combinedDict, forKey: "combinedict")                     self.defaults.synchronize()                     self.LoadTheView()                 },                 errorHandler: { (error:NSError) -&gt; Void in                     print("WatchKit communication error: \(error.localizedDescription)")             }) </code></pre>  <p>Upon reception of the message the ios app is suppose to reply with a dictionary, I implemented this and I put it in AppDelegate:</p>  <pre><code>    func application(application: UIApplication, didFinishLaunchingWithOptions launchOptions: [NSObject: AnyObject]?) -&gt; Bool {          if #available(iOS 9.0, *) {              if (WCSession.isSupported()) {                 watchSession = WCSession.defaultSession()                 watchSession!.delegate = self                 watchSession!.activateSession()              }          } else {             // Fallback on earlier versions         }          return true  }       @available(iOS 9.0, *)         func session(session: WCSession, didReceiveMessage message: [String : AnyObject], replyHandler: ([String : AnyObject]) -&gt; Void) {              print("Did receive message on ios app") // this never get fired              replyHandler(WatchConnection().SendToWatch())          } </code></pre>  <p>However it doesn't work, the app does send the message but never gets a reply ... How can I get that to work ? Is there another way for the watch to request data on first launch ?</p>