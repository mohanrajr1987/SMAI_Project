<p>I have a map that uses <code>MKUserTrackingMode.None</code>, <code>.Follow</code>, and <code>.FollowWithHeading</code> depending on the state of the UI.</p>  <p>The lifecycle function <code>mapView:regionDidChangeAnimated:</code> appears to be called only on manual user map changes to the <code>mapView.region</code> when in <code>.None</code> mode. But in the other two modes, I'm guessing due to minute updates in location, <code>regionDidChange</code> is called multiple times. <code>.FollowWithHeading</code> is the worst offender.</p>  <p>I'm making API calls to change the placemarks that show up in a region, but obviously don't want to be firing off API calls every second.</p>  <p>Is there a good pattern for detecting when the region changes are not so minor or are outside a certain threshold, so I can still provide a good user experience without the downside of a significant number of network calls?</p>  <p><strong>EDIT:</strong></p>  <p>I'm trying something like this now just to throttle the calls myself. Not ideal, but it's at least making the situation less worse.</p>  <pre><code>var lastUpdated: NSDate?  func mapView(mapView: MKMapView, regionDidChangeAnimated animated: Bool) {      let currentTime = NSDate()      if let updatedTime = lastUpdated {         // Already fetched         var timeThreshold = 0          switch mapView.userTrackingMode {         case .None:             timeThreshold = 0 // User initiated region changes should call the API no matter what         case .Follow:             timeThreshold = 2 // This will update often enough while walking that we can do 2 seconds         case .FollowWithHeading:             timeThreshold = 4 // We need to really throttle this because of the compass         }          if currentTime.secondsFrom(updatedTime) &gt;= timeThreshold { fetchAddresses() }     } else {         // First address fetch         fetchAddresses()     } } </code></pre>  <p><code>fetchAddresses</code> does my API call and UI updates. <code>.secondsFrom</code> is from a custom extension.</p>