<p>Both of the code-snips below will create an empty Gtk window using python. However they seem quite different. </p>  <p>What is the main benefits of one vs the other ?  Is there any performance, security or compatibility implications of choosing one versus the other?</p>  <p>1st code-snip:</p>  <pre><code>#!/usr/bin/python from gi.repository import Gtk  win = Gtk.Window() win.connect("delete-event", Gtk.main_quit) win.show_all()  Gtk.main()  </code></pre>  <p>2nd code-snip:</p>  <pre><code>from gi.repository import Gtk, GdkPixbuf, Gdk import os, sys  class GUI:     def __init__(self):         window = Gtk.Window()         window.set_title ("Hello World")         window.connect_after('destroy', self.destroy)          window.show_all()      def destroy(self, window):         Gtk.main_quit()  def main():     app = GUI()     Gtk.main()  if __name__ == "__main__":     sys.exit(main()) </code></pre>  <p>Ref1: <a href="http://python-gtk-3-tutorial.readthedocs.org/en/latest/introduction.html" rel="nofollow">1st snip-code reference</a></p>  <p>Ref2: <a href="https://developer.gnome.org/gnome-devel-demos/stable/image-viewer.py.html.en" rel="nofollow">2nd snip-code reference</a></p>