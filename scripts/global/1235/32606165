<p>I have a program that has two tabs when run and it looks like this:</p>  <p><a href="http://i.stack.imgur.com/0yL10.png" rel="nofollow"><img src="http://i.stack.imgur.com/0yL10.png" alt="enter image description here"></a></p>  <p>The problem is I would like to show new static text when I click on "Item 2" tab like this:  <a href="http://i.stack.imgur.com/93Dy9.png" rel="nofollow"><img src="http://i.stack.imgur.com/93Dy9.png" alt="enter image description here"></a></p>  <p>How do I do this? I'm currently using Visual Studio 2013 and C++. I been following this tutorial <a href="https://www.youtube.com/watch?v=yEN1j1waN-8" rel="nofollow">https://www.youtube.com/watch?v=yEN1j1waN-8</a>.  Here is my code:</p>  <pre><code>// MFCApplication1Dlg.cpp : implementation file //  #include "stdafx.h" #include "MFCApplication1.h" #include "MFCApplication1Dlg.h" #include "afxdialogex.h"  #ifdef _DEBUG #define new DEBUG_NEW #endif   // CAboutDlg dialog used for App About  class CAboutDlg : public CDialogEx { public:     CAboutDlg();  // Dialog Data     enum { IDD = IDD_ABOUTBOX };      protected:     virtual void DoDataExchange(CDataExchange* pDX);    // DDX/DDV support  // Implementation protected:     DECLARE_MESSAGE_MAP() };  CAboutDlg::CAboutDlg() : CDialogEx(CAboutDlg::IDD) { }  void CAboutDlg::DoDataExchange(CDataExchange* pDX) {     CDialogEx::DoDataExchange(pDX); }  BEGIN_MESSAGE_MAP(CAboutDlg, CDialogEx) END_MESSAGE_MAP()   // CMFCApplication1Dlg dialog    CMFCApplication1Dlg::CMFCApplication1Dlg(CWnd* pParent /*=NULL*/)     : CDialogEx(CMFCApplication1Dlg::IDD, pParent) {     m_hIcon = AfxGetApp()-&gt;LoadIcon(IDR_MAINFRAME); }  void CMFCApplication1Dlg::DoDataExchange(CDataExchange* pDX) {     CDialogEx::DoDataExchange(pDX);     DDX_Control(pDX, IDC_TAB1, m_MyTabCtrl); }  BEGIN_MESSAGE_MAP(CMFCApplication1Dlg, CDialogEx)     ON_WM_SYSCOMMAND()     ON_WM_PAINT()     ON_WM_QUERYDRAGICON()     //ON_EN_CHANGE(IDC_EDIT1, &amp;CMFCApplication1Dlg::OnEnChangeEdit1) END_MESSAGE_MAP()   // CMFCApplication1Dlg message handlers  BOOL CMFCApplication1Dlg::OnInitDialog() {     CDialogEx::OnInitDialog();      // Add "About..." menu item to system menu.      // IDM_ABOUTBOX must be in the system command range.     ASSERT((IDM_ABOUTBOX &amp; 0xFFF0) == IDM_ABOUTBOX);     ASSERT(IDM_ABOUTBOX &lt; 0xF000);      CMenu* pSysMenu = GetSystemMenu(FALSE);     if (pSysMenu != NULL)     {         BOOL bNameValid;         CString strAboutMenu;         bNameValid = strAboutMenu.LoadString(IDS_ABOUTBOX);         ASSERT(bNameValid);         if (!strAboutMenu.IsEmpty())         {             pSysMenu-&gt;AppendMenu(MF_SEPARATOR);             pSysMenu-&gt;AppendMenu(MF_STRING, IDM_ABOUTBOX, strAboutMenu);         }     }      // Set the icon for this dialog.  The framework does this automatically     //  when the application's main window is not a dialog     SetIcon(m_hIcon, TRUE);         // Set big icon     SetIcon(m_hIcon, FALSE);        // Set small icon      // TODO: Add extra initialization here      m_MyTabCtrl.InsertItem(0, _T("Item 1"));     m_MyTabCtrl.InsertItem(1, _T("Item 2"));      return TRUE;  // return TRUE  unless you set the focus to a control }  void CMFCApplication1Dlg::OnSysCommand(UINT nID, LPARAM lParam) {     if ((nID &amp; 0xFFF0) == IDM_ABOUTBOX)     {         CAboutDlg dlgAbout;         dlgAbout.DoModal();     }     else     {         CDialogEx::OnSysCommand(nID, lParam);     } }  // If you add a minimize button to your dialog, you will need the code below //  to draw the icon.  For MFC applications using the document/view model, //  this is automatically done for you by the framework.  void CMFCApplication1Dlg::OnPaint() {     if (IsIconic())     {         CPaintDC dc(this); // device context for painting          SendMessage(WM_ICONERASEBKGND, reinterpret_cast&lt;WPARAM&gt;(dc.GetSafeHdc()), 0);          // Center icon in client rectangle         int cxIcon = GetSystemMetrics(SM_CXICON);         int cyIcon = GetSystemMetrics(SM_CYICON);         CRect rect;         GetClientRect(&amp;rect);         int x = (rect.Width() - cxIcon + 1) / 2;         int y = (rect.Height() - cyIcon + 1) / 2;          // Draw the icon         dc.DrawIcon(x, y, m_hIcon);     }     else     {         CDialogEx::OnPaint();     } }  // The system calls this function to obtain the cursor to display while the user drags //  the minimized window. HCURSOR CMFCApplication1Dlg::OnQueryDragIcon() {     return static_cast&lt;HCURSOR&gt;(m_hIcon); }    void CMFCApplication1Dlg::OnEnChangeEdit1() {     // TODO:  If this is a RICHEDIT control, the control will not     // send this notification unless you override the CDialogEx::OnInitDialog()     // function and call CRichEditCtrl().SetEventMask()     // with the ENM_CHANGE flag ORed into the mask.      // TODO:  Add your control notification handler code here } </code></pre>