<p>I try to save properties on a RelathionEntity</p>  <p>As i read here</p>  <p><a href="http://stackoverflow.com/questions/32621464/how-to-crud-relationshipentity-in-sdn-4-0/32628148#32628148">How to CRUD @RelationshipEntity in SDN 4.0</a></p>  <p>this is possible saving one of the start/end node, but i notice that this is extreme slow instead of saving a node with deth 0 (saving a node with depth 0 takes about 2ms, saving a node with depth 1 takes about 1000ms). The node that I'm trying to save has only 4 relationships</p>  <p>I've tried also session.save(...) (org.neo4j.ogm.session.Session) on an object annotated as @RelationshipEntity, but it does nothing</p>  <p>I use spring-data-neo4j 4.0.0.RELEASE and Neo4j 2.2.5</p>  <p>Follow the code for entities and relationships:</p>  <pre><code>@NodeEntity public class EntityA{    @GraphId    private Long             nodeId;    private String               propertyA;    @Relationship(type = "RelationshipAB", direction = Relationship.OUTGOING)    private Set&lt;RelationshipAB&gt;  entitiesB   = new HashSet&lt;RelationshipAB&gt;(); }  @NodeEntity public class EntityB{    @GraphId    private Long nodeId;    private String   propertyB; }  @RelationshipEntity(type = "RelationshipAB") public class RelationshipAB{    @GraphId    private Long nodeId;    @StartNode    private EntityA  entityA;    @EndNode    private EntityB  entityB;    @Property    private String   propertyAB;  } </code></pre>  <p>Follow a simple test case for checking the performace:</p>  <pre><code>    EntityA entityA = new EntityA();     entityA.setPropertyA("propertyA");     entityARepository.save(entityA);      for (int i = 0; i &lt; 100; i++) {         EntityB entityB = new EntityB();         entityB.setPropertyB("propertyB-" + i);         entityBRepository.save(entityB);          RelationshipAB rel = new RelationshipAB();         rel.setEntityA(entityA);         rel.setEntityB(entityB);         rel.setPropertyAB("propertyAB-" + i);          entityA.getEntitiesB().add(rel);          Date startDate = new Date();         entityARepository.save(entityA, 1);         Date endDate = new Date();         System.out.println("Time for adding " + (i + 1) + " node: " + (endDate.getTime() - startDate.getTime()) + " ms");     }      Iterator&lt;RelationshipAB&gt; iter = entityA.getEntitiesB().iterator();     for (int i = 0; i &lt; 10; i++) {         iter.next();     }     iter.next().setPropertyAB("newProperty1");     Date startDate = new Date();     entityARepository.save(entityA, 1);     Date endData = new Date();     System.out.println("Time for cahnge the first relationship property: " + (endData.getTime() - startDate.getTime()) + " ms");      for (int i = 0; i &lt; 20; i++) {         iter.next();     }     iter.next().setPropertyAB("newProperty2");     startDate = new Date();     entityARepository.save(entityA, 1);     endData = new Date();     System.out.println("Time for cahnge the second relationship property: " + (endData.getTime() - startDate.getTime()) + " ms");      for (int i = 0; i &lt; 10; i++) {         iter.next();     }     iter.next().setPropertyAB("newProperty3");     startDate = new Date();     entityARepository.save(entityA, 1);     endData = new Date();     System.out.println("Time for cahnge the third relationship property: " + (endData.getTime() - startDate.getTime()) + " ms"); </code></pre>  <p>The adding nodes takes less than 100ms, the first update (the save after setPropertyAB("newProperty1")) takes about 1s, the next update takes about 4s and the last one about 7s</p>