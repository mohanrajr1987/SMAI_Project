<p>This is a sample Neo4j database: <a href="http://thedownloadplanet.com/files/techbook-development-db-test.zip" rel="nofollow">Sample Database</a></p>  <p>I have a following Cypher query(thanks to Michael Hunger) for deleting <code>Decision</code> nodes in this database:</p>  <pre><code>MATCH (d:Decision) WHERE id(d) IN {decisionsIds}  OPTIONAL MATCH (d)-[r]-(t)  DELETE d, r  WITH t, collect(r) as rels    WHERE NOT (t:User OR t:Decision) AND NOT (id(t) IN {decisionsIds}) OPTIONAL MATCH (t)-[r2:VOTED_ON|:CREATED_BY|:VOTED_FOR|:CONTAINS]-(t1)   WHERE NOT (r2 in rels) DELETE t, r2 WITH t1 OPTIONAL MATCH (t1)-[:CONTAINS]-(t2)  // will be detach delete in 2.3 FOREACH ( p IN (t2)--() | DELETE head(rels(p))) DELETE t2; </code></pre>  <p>everything works pretty good except that this query doesn't delete <code>Vote</code> nodes associated with a <code>VoteGroup</code> nodes.</p>  <p>For example for these  <code>{decisionsIds}</code>: <code>[334,338,339]</code> after deleting we still have 15 <code>Vote</code> nodes but expecting 8.</p>  <p>This query returns <code>Vote</code> nodes that must be deleted:</p>  <pre><code>MATCH (d:Decision) WHERE id(d) IN {decisionsIds}  OPTIONAL MATCH (d)-[r]-(t)  WITH t, collect(r) as rels    WHERE NOT (t:User OR t:Decision) AND NOT (id(t) IN {decisionsIds}) OPTIONAL MATCH (t)-[r2:VOTED_ON|:CREATED_BY|:VOTED_FOR|:CONTAINS]-(t1)   WHERE NOT (r2 in rels) OPTIONAL MATCH (t1)-[:CONTAINS]-(t2) RETURN *; </code></pre>  <p>but the first query does not delete them for some reason.. I spent a few days but can't find a solution of how to do it.</p>  <p>Could you please help to improve this query in order to delete these <code>Vote</code> nodes also ?</p>