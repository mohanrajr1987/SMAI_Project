<p>I have a strange signing issue in my wcf client: to sign the soap message with <a href="http://www.w3.org/2001/04/xmldsig-more#rsa-sha256" rel="nofollow">http://www.w3.org/2001/04/xmldsig-more#rsa-sha256</a> security algorithm  using a "non-exportable" certificate in usb token.</p>  <p>the .config of the client has the certficate for usb token : </p>  <p>I use the following customBinding :</p>  <pre><code>&lt;customBinding&gt;         &lt;binding name="WsServiceSoapBinding"&gt;            &lt;security includeTimestamp="true"                      authenticationMode="MutualCertificateDuplex"                      defaultAlgorithmSuite="Basic256Sha256"                     requireDerivedKeys="false"                      enableUnsecuredResponse="true"                      securityHeaderLayout="LaxTimestampLast"                      messageProtectionOrder="SignBeforeEncrypt"                      keyEntropyMode="ClientEntropy"                      messageSecurityVersion="WSSecurity11WSTrust13WSSecureConversation13WSSecurityPolicy12BasicSecurityProfile10"&gt;           &lt;/security&gt;           &lt;textMessageEncoding messageVersion="Soap12"&gt;&lt;/textMessageEncoding&gt;           &lt;httpsTransport maxBufferPoolSize="2147483647" maxReceivedMessageSize="2147483647" maxBufferSize="2147483647" transferMode="Buffered" hostNameComparisonMode="StrongWildcard" /&gt;         &lt;/binding&gt; &lt;/customBinding&gt; </code></pre>  <p>When run the program , it accesses the usb token (its LED blinking just like it signs with other tools), and after acouple of seconds it throws "Key set not found".  No matter the certification info resides in LocalMachine or CurrentUser.</p>  <p>However;</p>  <ul> <li>if I changed  defaultAlgorithmSuite parameter above to "Basic256" the  program  asks the PIN code and managed to sign, but in sha#1. </li> <li>Another strange thing is, if I use a ".pfx" file having private key in it, runs well. </li> </ul>  <p>So the problem seems related with the scenario:   - certificate is in the usb token,   - private key is in usb token,  - sha256 signature is required</p>  <p>Tried several and several things, parameters etc.. finally in a mess. </p>  <p>Thanks is advance, for any expert comments..</p>