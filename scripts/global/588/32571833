<p>Perhaps a somewhat theoretical question, but to check if a variable exists or not, this is most commonly advised:</p>  <p><code>typeof(var)==='undefined'</code> or <code>typeof(var)!=='undefined'</code></p>  <p>How does this differ from <code>typeof(var)=='undefined'</code> (or <code>typeof(var)!='undefined'</code>) ?</p>  <p>I mean <code>===</code> vs <code>==</code>. Or <code>!==</code> vs <code>!=</code>. I know this normally means comparison of <strong>type</strong> as well as value, but in this case, <code>typeof(something)</code> always evaluates to a string, right?</p>  <p>Is there any scenario possible where <code>typeof(var)==='undefined'</code> and <code>typeof(var)=='undefined'</code> are <em>not</em> the same?</p>