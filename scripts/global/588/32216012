<p>Going through Good Parts and messing around in node, I'm wondering why this behavior occurs. I know that ! refers to the "logical not" operator, and that !! basically booleanates(ifies?) the returned value of !x, but why this?</p>  <pre><code>var x = 3, y = 4;  x != y;     // true x = !y      // false ----&gt; But really, its setting x to "not y", a truthy value, correct x = !!x*x   // 1 --- wut? </code></pre>  <p>So, after playing with it a bit, I understand that what's being declared is, "x equals not not x ("true" since !x === false) times x (true)"</p>  <p>So I guess the question is, why is true * true === 1 in JS?</p>