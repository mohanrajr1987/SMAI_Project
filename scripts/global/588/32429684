<p>Under the comparison-based model, how many comparisons are needed to sort a given list of n binary bits x1, x2, . . . , xn, where xi âˆˆ {0, 1}, e.g., to sort list 0, 1, 1, 1, 0, 0, 0, 1, 0, 0 to 0, 0, 0, 0, 0, 0, 1, 1, 1, 1? Note that you are only allowed to use comparisons between the given bits, not to compare the given bits directly with 1 or 0 (like if (x5 =? 1)). It would be helpful if you consider the following: is such sorting is easier than the general sorting problem that has a provable lower bound.</p>