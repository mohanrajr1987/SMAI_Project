<p>I'm trying to write a program that converts letters matching a key in a dictionary to the value associated with that key e.g. if the dictionary is {'A':'T', 'C':'G', 'T':'A', 'G':'C'} and the string is 'AAG' the output should be 'TTC'.</p>  <p>EDIT: This is what I've got now thanks to some of your answers:</p>  <pre><code>def matching_codons(complements, poolA):   answer = []   codon = ''   counter = 0    for i in poolA:     for a in i:       codon+= complements[a]       counter += 1       if counter == 3:         answer.append(codon) </code></pre>  <p>Unfortunately this only translates the first 3 letters - how can I make it keep running through the loop?</p>  <p>Note: poolA is a list of strings e.g. ['AAG', 'TAC', 'CGG', 'GAT', 'TTG', 'GTG', 'CAT', 'GGC', 'ATT', 'TCT']</p>  <p>Note2: I can't hard-code anything like a translation table because technically the dictionary input can be changed</p>