<p>I'm using ant 1.9.3 with aspectjtools 1.8.5. When I'm trying to compile project using iajc compiler failes with message</p>  <pre><code>[aspectj:iajc] error at @NamedQueries({ [aspectj:iajc]  ^^^^^^^^^^^ [aspectj:iajc] /path/to/file/Speech.java:14:0::0 Speech.NamedQueries is not an annotation type [aspectj:iajc] warning at /path/to/file/PermissionCheckerAspect.java:23::0 advice defined in package.PermissionCheckerAspect has not been applied [Xlint:adviceDidNotMatch] [aspectj:iajc] MessageHolder:  (10732 info)  (2 warning)  (1 error)  [aspectj:iajc] [error   0]: error at @NamedQueries({ [aspectj:iajc]  ^^^^^^^^^^^ [aspectj:iajc] /path/to/file/Speech.java:14:0::0 Speech.NamedQueries is not an annotation type </code></pre>  <p>My ant target configuration looks like this code snippet</p>  <pre><code>&lt;target name="compile.aspectj" depends="copy-libs"&gt;     &lt;aspectj:iajc source="1.8" destDir="war/WEB-INF/classes"&gt;         &lt;sourceroots&gt;             &lt;pathelement location="src"/&gt;         &lt;/sourceroots&gt;         &lt;classpath refid="project.class.path"/&gt;     &lt;/aspectj:iajc&gt; &lt;/target&gt; </code></pre>  <p>I have to use compile time weaving. How can I deal with it?</p>  <p>Here is my aspect code</p>  <pre><code>@Aspect public class PermissionCheckerAspect {     private static final Logger log = LoggerFactory.getLogger(PermissionCheckerAspect.class);     public PermissionCheckerAspect() {         info("Instantiating PermissionChecker aspect");     }      @Around("execution(public * *(..)) &amp;&amp; within(package.LicenseRequired)")     public Object around(ProceedingJoinPoint joinPoint) {         try {             info("Proceeding...");             Object proceed = joinPoint.proceed();             info("Proceeded successfully");             return proceed;         } catch (Throwable throwable) {             throw new RuntimeException(throwable);         }     }  } </code></pre>