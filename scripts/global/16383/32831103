<p>In a <code>UIViewController</code>, I'd like to show two tabs <em>in</em> a <code>UINavigationBar</code>.  I want the <code>UINavigationItems</code> to have similar behavior to <code>UITabBarItems</code> in a <code>UITabBarController</code>.  I want the NavBar to be visible in both view controller tabs, and I want to change the color of the tab title in the navBar if the tab is selected.</p>  <p>Is there a <strong>simple and elegant</strong> way to conveniently set text/selectedText or image/selectedImage and create <code>UINavigationItems</code> that have behavior similar to <code>UITabBarItems</code>, including the ability to have the nav bar space the items out evenly, just like in a <code>UITabBarController</code>?</p>  <p>It would be great if I could set this like it can be done in a tabBar:  <code>UITabBarItem *tabBarItem = [[UITabBarItem alloc] initWithTitle:title image:titleBlack selectedImage:titleRed];</code> </p>  <p>The goal is to have two tabs, that change color if they are selected and they would be evenly spaced across the bar.  I know I could do something simple like add two items to a navBarArray, but in order to have them spaced evenly across the bar for all screen widths, how would I do that?  Is there an elegant solution?</p>  <p><a href="http://i.stack.imgur.com/s9bcD.jpg" rel="nofollow"><img src="http://i.stack.imgur.com/s9bcD.jpg" alt="enter image description here"></a></p>  <p>This example shows the first tab selected.  If I select the 2nd tab, I want Tab2 to be red and Tab1 to be black.  This is just text, but if I have to create an image to accomplish this, I will.    </p>  <p>This question is <strong>not a duplicate</strong> of the many questions on S.O. that are referring to displaying both a <code>UITabBarController</code> and a <code>UINavigationController</code> in the same app.  This is different because I don't want a <code>UITabBarController</code>(I already have one that does something else- but I don't want to overcomplicate my question)- I just want to mimic this behavior, inside of a <code>UINavigationBar</code>.  Please please please do not tell me I shouldn't do it this way. That's just another way to say "I don't feel like helping you figure this out."</p>  <p>I've tried looking for clean, simple, elegant solutions.  I haven't found any.  A complete example would be appreciated.  Thanks =)</p>