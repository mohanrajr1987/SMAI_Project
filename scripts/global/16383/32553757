<p>I have drop down menu class <a href="https://github.com/lminhtm/LMDropdownView" rel="nofollow">https://github.com/lminhtm/LMDropdownView</a> I want to have this menu in all view controllers in my app. Only way I see it to create custom uinavigation controller with this menu, but i don't know how. Is it possible or maybe there is another way to solve my problem? Please help, thanks! Here is my implementation in uiviewcontroller</p>  <pre><code>@property (strong, nonatomic) IBOutlet UITableView *menuTableView; @property (strong, nonatomic) LMDropdownView *dropdownView;  - (void)viewDidLoad {     [super viewDidLoad];      UIView *buttonContainer = [[UIView alloc] initWithFrame:CGRectMake(0, 0, 200, 44)];     UIButton *mainBtn = [UIButton buttonWithType:UIButtonTypeCustom];     [mainBtn setTitle:@"ButtonTitle" forState:UIControlStateNormal];     [mainBtn setTitleColor:[UIColor blackColor] forState:UIControlStateNormal];     [mainBtn setFrame:CGRectMake(0, 0, 200, 44)];     [mainBtn addTarget:self action:@selector(showDropDownView) forControlEvents:UIControlEventTouchUpInside];     [buttonContainer addSubview:mainBtn];     self.navigationItem.titleView = buttonContainer;       menu = @[@"1",@"2",@"3",@"4",@"5",@"6"];      [self.menuTableView setFrame:CGRectMake(0,                                             0,                                             CGRectGetWidth(self.view.bounds),                                             MIN(CGRectGetHeight(self.view.bounds)/2, menu.count * 44))];      self.menuTableView.separatorStyle = UITableViewCellSeparatorStyleNone; }  #pragma mark - DROPDOWN VIEW  - (void)showDropDownView {     // Init dropdown view     if (!self.dropdownView) {         self.dropdownView = [LMDropdownView dropdownView];         self.dropdownView.delegate = self;          // Customize Dropdown style         self.dropdownView.closedScale = 0.85;         self.dropdownView.blurRadius = 5;         self.dropdownView.blackMaskAlpha = 0.5;         self.dropdownView.animationDuration = 0.5;         self.dropdownView.animationBounceHeight = 20;         self.dropdownView.contentBackgroundColor = [UIColor clearColor];     }      // Show/hide dropdown view     if ([self.dropdownView isOpen]) {         [self.dropdownView hide];     }     else {         [self.dropdownView showFromNavigationController:self.navigationController withContentView:self.menuTableView];     } }  #pragma mark - Table View Delegate  - (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {     return 1; }  - (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {     return [menu count]; }  - (void)tableView:(UITableView *)tableView willDisplayCell:(UITableViewCell *)cell forRowAtIndexPath:(NSIndexPath *)indexPath { }  - (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {     PopupMenuCell *cell = (PopupMenuCell *)[self.menuTableView dequeueReusableCellWithIdentifier:@"Cell"];      cell.menuItemLabel.text = [menu objectAtIndex:indexPath.row];      return cell; }  - (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath {     [tableView deselectRowAtIndexPath:indexPath animated:NO];      [self.dropdownView hide]; }  #pragma mark - EVENTS  - (void)showMenu {     [self.menuTableView reloadData];      [self showDropDownView]; }   @end </code></pre>