<p>In my project requirement is : registration form  have </p>  <p>1) Record button for record voice then stop</p>  <p>2) snap the image from web camera</p>  <p>i have done some functionalities for above  using below plugins : for audio plugin is : <a href="http://www.webaudiodemos.appspot.com/AudioRecorder/index.html" rel="nofollow">AUDIO-PLUGIN</a> for video image snap : </p>  <pre><code>window.addEventListener("DOMContentLoaded", function() { // Grab elements, create settings, etc. var canvas = document.getElementById("canvas"),     context = canvas.getContext("2d"),     video = document.getElementById("video"),     videoObj = { "video": true },     errBack = function(error) {         console.log("Video capture error: ", error.code);       };  // Put video listeners into place if(navigator.getUserMedia) { // Standard     navigator.getUserMedia(videoObj, function(stream) {         video.src = stream;         video.play();     }, errBack); } else if(navigator.webkitGetUserMedia) { // WebKit-prefixed     navigator.webkitGetUserMedia(videoObj, function(stream){         video.src = window.webkitURL.createObjectURL(stream);         video.play();     }, errBack); } else if(navigator.mozGetUserMedia) { // Firefox-prefixed     navigator.mozGetUserMedia(videoObj, function(stream){         video.src = window.URL.createObjectURL(stream);         video.play();     }, errBack); }    document.getElementById("snap").addEventListener("click", function() { context.drawImage(video, 0, 0, 313,350); var dataURL = canvas.toDataURL(); }); }, false); </code></pre>  <p>i got two issues ,</p>  <p>1) Firefox accessing only one media (either video or audio ), but chrome asking video &amp; audio permissions then accessed .</p>  <p>2) my client wants , when open register form then with out asking  permission accept these video &amp; audio, (like : <a href="https://www.webrtc-experiment.com/RecordRTC/" rel="nofollow">https://www.webrtc-experiment.com/RecordRTC/</a> :this AUDIO+VIDEO did not asked any browser permissions when page loading.)</p>  <p>please save my days... thanks in advance..</p>  <p><div class="snippet" data-lang="js" data-hide="false"> <div class="snippet-code"> <pre class="snippet-code-js lang-js prettyprint-override"><code>function fileSelected() {     var oFile = document.getElementById('image_file').files[0]; 	//alert(oFile.size/1024) 	if(oFile.size/1024 &lt;= 500){		 //	oFile.src = window.URL.createObjectURL(file);     var oImage = document.getElementById('preview');     var oReader = new FileReader(); 	 oReader.onload = function(e){         oImage.src = e.target.result; 		var resultStr = oImage.src; 		var result = resultStr.split(",");		 	//	alert(result[1]) 		$('#imageData').val(result[1]);		 		}; 		//alert($('#imageData').val()) 		//console.log("From Upload : "+$('#imageData').val());     oReader.readAsDataURL(oFile);	 	}else{ 		alert(" Your Image Size "+oFile.size/1024+" KB Please Upload Less then 500 KB ") 	} 	 } // Put event listeners into place window.addEventListener("DOMContentLoaded", function() { 	// Grab elements, create settings, etc. 	var canvas = document.getElementById("canvas"), 		context = canvas.getContext("2d"), 		video = document.getElementById("video"), 		videoObj = { "video": true }, 		errBack = function(error) { 			console.log("Video capture error: ", error.code);  			 		};  	// Put video listeners into place 	if(navigator.getUserMedia) { // Standard 		navigator.getUserMedia(videoObj, function(stream) { 			video.src = stream; 			video.play(); 		}, errBack); 	} else if(navigator.webkitGetUserMedia) { // WebKit-prefixed 		navigator.webkitGetUserMedia(videoObj, function(stream){ 			video.src = window.webkitURL.createObjectURL(stream); 			video.play(); 		}, errBack); 	} 	else if(navigator.mozGetUserMedia) { // Firefox-prefixed 		navigator.mozGetUserMedia(videoObj, function(stream){ 			video.src = window.URL.createObjectURL(stream); 			video.play(); 		}, errBack); 	} 	// Trigger photo take document.getElementById("snap").addEventListener("click", function() { 	context.drawImage(video, 0, 0, 313,350); 	 	       // save canvas image as data url (png format by default)     var dataURL = canvas.toDataURL();        // set canvasImg image src to dataURL       // so it can be saved as an image       document.getElementById('preview').src = dataURL; 	  var result = dataURL.split(","); 	  $('#imageData').val(result[1]); 	 // console.log("From snap : "+result[1]);  	 }); }, false);</code></pre> <pre class="snippet-code-css lang-css prettyprint-override"><code>.browse-image { 	padding: 25px 15px 0px; 	text-align: center; } .browse-image input[type="file"] { 	display: inline !important;     width: 41% !important;     float: left; } .browse-image input[type=button] { 	display: inline; 	margin-left: 10px; } .browse-image span { 	font-size: 18px; 	text-transform: uppercase; } .browse-image-button::-webkit-file-upload-button {   visibility: hidden; } .browse-image-button::before {   content: 'Upload Photo';   display: inline-block;   width: 145px;   text-align: center;   background: rgba(19,137,173,1);   background: -moz-linear-gradient(top, rgba(19,137,173,1) 0%, rgba(33,180,226,1) 100%);   background: -webkit-gradient(left top, left bottom, color-stop(0%, rgba(19,137,173,1)), color-stop(100%, rgba(33,180,226,1)));   background: -webkit-linear-gradient(top, rgba(19,137,173,1) 0%, rgba(33,180,226,1) 100%);   background: -o-linear-gradient(top, rgba(19,137,173,1) 0%, rgba(33,180,226,1) 100%);   background: -ms-linear-gradient(top, rgba(19,137,173,1) 0%, rgba(33,180,226,1) 100%);   background: linear-gradient(to bottom, rgba(19,137,173,1) 0%, rgba(33,180,226,1) 100%); filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#1389ad', endColorstr='#21b4e2', GradientType=0 );   border: 0px solid #999;   border-radius: 3px;   padding: 15px 8px;   outline: none;   white-space: nowrap;   -webkit-user-select: none;   cursor: pointer;   font-weight: 700;   font-size: 10pt;   color: #fff;   text-transform: uppercase; } .browse-image input[type=button] { 	width: 145px;   text-align: center;   background: rgba(19,137,173,1);   background: -moz-linear-gradient(top, rgba(19,137,173,1) 0%, rgba(33,180,226,1) 100%);   background: -webkit-gradient(left top, left bottom, color-stop(0%, rgba(19,137,173,1)), color-stop(100%, rgba(33,180,226,1)));   background: -webkit-linear-gradient(top, rgba(19,137,173,1) 0%, rgba(33,180,226,1) 100%);   background: -o-linear-gradient(top, rgba(19,137,173,1) 0%, rgba(33,180,226,1) 100%);   background: -ms-linear-gradient(top, rgba(19,137,173,1) 0%, rgba(33,180,226,1) 100%);   background: linear-gradient(to bottom, rgba(19,137,173,1) 0%, rgba(33,180,226,1) 100%); filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#1389ad', endColorstr='#21b4e2', GradientType=0 );   border: 0px solid #999;   border-radius: 3px;   padding: 15px 8px;   cursor: pointer;   font-weight: 700;   font-size: 10pt;   color: #fff;   text-transform: uppercase; } .take-photo { 	padding: 5px 65px; } .take-photo p { 	font-size: 18px; 	padding-bottom: 5px; } .voice-buttons { 	padding: 25px 0 0 0; } .voice-buttons label { 	font-size: 40px; 	width: 34%; 	padding-left: 15px; }</code></pre> <pre class="snippet-code-html lang-html prettyprint-override"><code>&lt;script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"&gt;&lt;/script&gt; &lt;body&gt; &lt;div&gt; &lt;video id="video" width="313" height="350"&gt;&lt;/video&gt; &lt;canvas id="canvas" width="313" height="350"&gt;&lt;/canvas&gt; &lt;img id="preview" border="1" width="313" height="350" /&gt; &lt;div class="browse-image"&gt; 			&lt;input type="file" class="browse-image-button" id="image_file" onchange="fileSelected()"&gt; 			&lt;span&gt;or&lt;/span&gt;&lt;input type="button" value="take photo" id="snap"&gt;  		&lt;/div&gt; &lt;/div&gt; &lt;div class="voice-buttons"&gt; 			&lt;label&gt;Record Voice&lt;/label&gt; 			&lt;img src="images/record.png" alt="" id="startrecord" onClick="startRecording()" style="opacity:1" /&gt; 			&lt;img src="images/stop.png" alt="" id="stoprecord" onClick="stopRecording()" style="opacity:0.5" /&gt; 			&lt;img src="images/play.png" alt="" id="playrecord" onClick="playrecording()" style="opacity:1" /&gt; 		&lt;/div&gt; &lt;/body&gt;</code></pre> </div> </div> </p>