<p>I'm trying to make kind of typewriting effect in HTML5. For rendering and puting it all together , I'm using this <a href="http://www.pixijs.com/" rel="nofollow">pixi.js</a> plugin. </p>  <p>So far I have been able to make it work (partially), although it seems that the <code>update()</code> method that is responsible for updating the text inside my <code>PIXI.TEXT</code> object is not willing to stop the animation interval. </p>  <p>Please see more below. </p>  <p><strong>RPGtext.js</strong></p>  <pre><code>define(['pixi', 'jquery'], function (PIXI, $){     var RPGText = (function(text, style,  pos)      {         var self = this;          var default_style =  {             font : 'bold 36px Arial',             fill : '#FFF',             stroke : '#4a1850',             strokeThickness : 5,             dropShadow : true,             dropShadowColor : '#000000',             dropShadowAngle : Math.PI / 6,             dropShadowDistance : 6,             wordWrap : true,             wordWrapWidth : 440         };          var config = {             update_interval : 30 //// Miliseconds ////         };          self.cur_pos = 1;          var _construct = function(){             var font_style = $.extend({}, default_style, style);             _init(font_style);         };          var _init = function(font_style){             self.model = new PIXI.Text(text.substring(0, config.cur_pos), font_style);             self.model.x =  pos.x;             self.model.y = pos.y;             update(self.cur_pos, (text.length - 1) );         };          var update = function (x, y) {             if( self.cur_pos &lt;= text.length){ //// this condition is not making it all stop for some reason ///                  requestAnimationFrame(update);                 self.cur_pos  = (self.cur_pos + 1);                 self.model.text = text.substring(0, config.cur_pos);             }else{                 console.log("Stopping"); /// IS nto triggered at all..///             }         };          _construct();          return self.model;     });      return RPGText; }); </code></pre>  <p>//// This is how it's being initialized / used ///</p>  <p><strong>MsgBozx.js</strong></p>  <pre><code>....     var text = new RPGText(msg.text, config.font.text.style, config.font.text.pos);      msgbox.addChild(text);  ... </code></pre>  <p>I have tested the outputs of both <code>self.cur_pos</code> and <code>text.length</code> (using console.info()). both were showing expected results, though the update never stopped. </p>  <p>Any ideas as what may be wrong here? </p>