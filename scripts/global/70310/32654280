<p>I'm using CSS to try and create a label (which is a popup that always remains on the map) attached to a circle. The following link will lead to the image of what I'm trying to do: <a href="http://imgur.com/PYpX6Xb" rel="nofollow">Image</a>. In order to achieve this I've been using the following code: </p>  <pre><code>  $(popup._container.firstChild).css({                 background: "-webkit-radial-gradient(-29px" + percentZoom + ", circle closest-corner, rgba(0, 0, 0, 0) 0, rgba(0, 0, 0, 0) 58px, white 59px)"             }); </code></pre>  <p>Before, I was calculating the percentZoom depending on the radius of the circle and the zoom where the map is now. </p>  <pre><code>var percent = (50 * presentCircleRadius) / 300000 //when the radius is 300000 the percentage should be 50% var percentZoom = (percent * zoom) / 6; // then calculate it the exact zoom that should be used depending on the zoom. Being 6 the default one. </code></pre>  <p>This didn't work or it had many issues when I zoomed in on the map (considering that the circle doesn't really change but the curvature seems to becoming flatter).</p>  <p>I tried using canvas as well to get the result that I wanted it, but I had issues. I was using two arches to build the top part and the bottom part, then thought about using two rectangles to create the two parts to the right of the circle. The problem with this it's that the circle is transparent and it's meant to start on the edge of it, if I used this solution the rectangle would appear in the middle of the circle.</p>  <p><div class="snippet" data-lang="js" data-hide="false"> <div class="snippet-code"> <pre class="snippet-code-js lang-js prettyprint-override"><code>  var canvas = document.getElementById('myCanvas1');   var context = canvas.getContext('2d');   var x = canvas.width / 2;   var y = canvas.height / 2;   var radius = 75;   var startAngle = 1.1 * Math.PI;   var endAngle = 1.9 * Math.PI;   var counterClockwise = false;    context.beginPath();   context.arc(x, y, radius, 1.6 * Math.PI, 0 * Math.PI, counterClockwise);   context.lineWidth = 15;    // line color   context.strokeStyle = 'black';   context.stroke();    context.beginPath();   context.arc(x, y, radius, 0 * Math.PI, 0.4 * Math.PI, counterClockwise);   context.lineWidth = 15;    // line color   context.strokeStyle = 'red';   context.stroke();    context.beginPath();   context.lineWidth = "10";   context.strokeStyle = "blue";   context.rect(x, y - radius, 150, radius);   context.stroke();</code></pre> <pre class="snippet-code-html lang-html prettyprint-override"><code>&lt;canvas id="myCanvas1" width="578" height="250"&gt;&lt;/canvas&gt;</code></pre> </div> </div> </p>  <p>So I thought of using lines instead of rectangles to create the right part of the label: <a href="http://jsfiddle.net/59syjvnk/3/" rel="nofollow">fiddle</a>, the problem with this solution is, as mention before, as you zoom the curvature will change and I found no way to calculate exactly where the lines on the top and on the bottom should start.</p>  <p>Is there a way to do what I want to do: Make it so that the label follows the curvature of the circle as you zoom in and out and if so how can I make it so considering that there might be more than one circle per zoom with different radius?</p>