<p>I am trying to make a report PDF with jsPDF with multiple images taken in cordova app.</p>  <p>Strategies I tried so far. Saving image Base64 in database worked ok, but since WebSQL is limited and images can take up storage and quite fast. So I decided to move images to permanent location and save url in database WebSQL.</p>  <p>Then to generate PDF I am trying following code to get base64 and then generate PDF which is not working properly. Any suggestion would be appreciated.</p>  <pre><code>     function getBase64Image(url) {          //get urls to array           var arr = url.split('@');             if (arr.length &gt;0){             for (var i=0; i&lt;arr.length; i++){               var img = new Image();               var dataURL;               img.src = arr[i];                img.onload = function() {                   var canvas = document.createElement('canvas');                   canvas.width = img.width;                   canvas.height = img.height;                    var context = canvas.getContext('2d');                   context.drawImage(img, 0, 0);                    dataURL = canvas.toDataURL('image/jpeg');                   setTimeout(function(){                     console.log("dataurl"+dataURL);                      var x = zx*151 + 10;                     var y = zy*151 + 10;                     zx++;                      if (x%3 === 0){                       zx = 0;                       zy++;                       x = zx*151 + 10;                       y = zy*151 + 10;                     }                      datta.push({data:dataURL, x:x, y:y});                     },1000);                }             }           }         }        function generateImagePdf(urls){            getBase64Image(urls);       }       var datta = [];       var zx = 0;       var zy = 0;       // format urls=url1@url2@url3@       generateImagePdf(urls) ;        setTimeout(function(){          var doc = new jsPDF();           var elementHandler = {             '#ignorePDF': function (element, renderer) {               return true;             }           };         var source = "&lt;some html&gt;";          doc.fromHTML(source, 15, 15, {'width': 100, 'margin': 1, 'pagesplit': true, 'elementHandlers': elementHandler});         doc.addPage();          var doccs = [];         if (datta.length &gt; 0) {             for (var i = 0; i&lt; datta.length; i++){               doc.addImage(datta[i].data, 'JPEG', datta[i].x, datta[i].y, 150, 150);             }         }           var pdfOutput = doc.output();         console.log( pdfOutput );         //save pdf to some location... </code></pre>  <p><strong>EDIT</strong> After some tries, I found the solution which worked fine for my needs. My solutions was to get DATA_URL when capture or select image and generate text file which contains all base64 of the images and save url of that text file in database. So when I call particular report it would read from database location of the text file and read content and use base64 for adding images using jsPDF. Not optimal but working given the limitations. I leave it here, for future reference if it helps to someone.</p>