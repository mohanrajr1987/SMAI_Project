<p>I've spent several days looking at elegant solutions proposed by @Noseratio for working with the WebBrowser control for developing a web automation tool.  The posts have been extremely helpful, to say the least!</p>  <p><a href="http://stackoverflow.com/questions/22239357/how-to-cancel-task-await-after-a-timeout-period/22262976#22262976">How to cancel Task await after a timeout period</a></p>  <p><a href="http://stackoverflow.com/questions/19044659/c-sharp-webbrowser-control-form-submit-not-working-using-invokememberclick/19063643#19063643">C# WebBrowser Control - Form Submit Not Working using InvokeMember(&quot;Click&quot;)</a></p>  <p>That being said, I have a problem that I run into that when using the NavigateAsync that I hope to solve just as elegantly.  Essentially, I use NavigateAsync to perform all of the navigation during the automation.  There is one call, however, that if successful, will transition the page to another, which will cause the DocumentCompleted event to fire.  On other iterations, however, it may (and does) fail, causing a string to be updated by javascript.  When this happens, naturally, the DocumentCompleted event is never fired, so the program waits indefinitely for the TaskCompletionSource to be completed.  It seems to me there are potentially several ways to solve this:</p>  <p>Set a timeout.  I'm not usually fond of setting arbitrary time-outs, because inevitably it will take longer at some point ;)  And while this may not be an issue, I would only want to cancel this particular step of the workflow, and not affect the CancellationToken that was passed into NavigateAsync.  This will allow me to simply not transition the state machine, at which point it will try this step again.</p>  <p>Attach an event to the HtmlElement that refreshes via JS, and if that updates, complete the TaskCompletionSource and let it unhook all of the event handlers, including the DocumentCompleted.  I'd have to add a parameter to NavigateAsync for the HtmlElement so that I can properly attach and detach event handlers in sync with the DocumentCompleted event, although I'm not sure yet if I would be adding new problems.</p>  <p>I'm sure there are other solutions as well.  I'll gladly share code samples, although the NavigateAsync in question I believe to be fairly identical to Noseratio's, and where I believe the issue has to be solved :)</p>  <p>Any help would be greatly appreciated!!</p>