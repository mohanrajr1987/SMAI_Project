<p>I'm running the following commands in Travis CI for my <a href="https://travis-ci.org/kenorb/drupal-sandbox/builds/82121457" rel="nofollow">build</a>:</p>  <pre><code>before_install:   - curl -sS https://getcomposer.org/installer | sudo php -- --install-dir=/usr/local/bin --filename=composer  script:   - sudo composer -nqq update </code></pre>  <p>I'm installing composer manually as I want to use <code>sudo</code> with it, as it's installed only for the user.</p>  <p>The error which I'm having are:</p>  <pre><code>Updating dependencies (including require-dev)   - Installing jakub-onderka/php-console-color (0.1)     Downloading: Connecting...    Failed to download jakub-onderka/php-console-color from dist: The "https://api.github.com/repos/JakubOnderka/PHP-Console-Color/zipball/e0b393dacf7703fc36a4efc3df1435485197e6c1" file could not be downloaded (HTTP/1.1 403 Forbidden)     Now trying to download from source    - Installing symfony/yaml (v2.7.4)     Downloading: Connecting...    Failed to download symfony/yaml from dist: The "https://api.github.com/repos/symfony/Yaml/zipball/2dc7b06c065df96cc686c66da2705e5e18aef661" file could not be downloaded (HTTP/1.1 403 Forbidden)     Now trying to download from source </code></pre>  <p>I've tried these links and they work fine.</p>  <p>Does it mean Travis is blocking GitHub API for some reason? If not, how do I fix it?</p>  <p>By fix, I mean either to know what's going on, or suppress these error messages (e.g. by using some special parameter in <code>composer</code> or changes to JSON file to force downloads from the source).</p>  <p>My <code>composer.json</code> file is:</p>  <pre><code>{     "config": {         "vendor-dir": "/var/lib/vendor",         "bin-dir": "/usr/local/bin"     },     "require": {         "drush/drush": "dev-master"     } } </code></pre>  <hr>  <p>For the reference, the full <code>.travis.yml</code> looks like:</p>  <pre><code>before_install:   - env   - curl -sS https://getcomposer.org/installer | sudo php -- --install-dir=/usr/local/bin --filename=composer   - sudo apt-get -qy update install:   - sudo apt-get install vagrant script:   - set -e # This makes build to fail on first error.   - sudo composer -nqq update   - make   - make vm after_failure:  - sudo apt-get -qy install tree &amp;&amp; - tree -d -L 6 # Print directory structure in the form of a tree.  - env sudo: true language: php python:   - "5.5" </code></pre>