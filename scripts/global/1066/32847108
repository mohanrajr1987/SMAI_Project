<p>We have a large project that has several thousands of tests in the testsuite, and the full testsuite run takes very long time.</p>  <p>I am looking for a tool that I can integrate in the Maven build that will run only those tests that <em>might</em> be affected (knowing code coverage for each), because some covered code has changes.</p>  <p>I was googling that and found a few similar things but not a perfect fit:</p>  <ul> <li>Ekstazi <a href="http://www.ekstazi.org/" rel="nofollow">http://www.ekstazi.org/</a> looks like exactly that, but it does not work out-of-the box with TestNG (used in the testsuite), and it is <strong>not open source</strong></li> <li>Infinitest <a href="https://infinitest.github.io/" rel="nofollow">https://infinitest.github.io/</a> seems to focus mainly on IDE integration - is it possible to run the tests only on demand (just like <code>mvn infinitest</code>)?</li> <li>PIT <a href="http://pitest.org/" rel="nofollow">http://pitest.org/</a> is not exactly what I am looking for but it also needs to analyze per-test coverage</li> </ul>  <p>It would be also very useful to remember test coverage with (last) git commit and run the tests against the last code changes.</p>  <p>Further suggestions and comments on those above are welcome.</p>