<pre><code>    CGMutablePathRef smoothedCGPath = CreateSmoothedBezierPathFromPath(self.CGPath, tension); </code></pre>  <p>When i call the method</p>  <pre><code>CreateSmoothedBezierPathFromPath(self.CGPath, tension);  CGMutablePathRef CreateSmoothedBezierPathFromPath( CGPathRef path, CGFloat tention) {     //convert path to 2 arrays of CGFloats     struct dataPointer my_dataPointer; //this struct will hold the 2 indexes of the CGpath     my_dataPointer.numberOfPoints = 0;     my_dataPointer.isClosed = NO;     CGPathApply(path, &amp;my_dataPointer, savePathToArraysApplierFunc);  //the arrays where the control points will be stored CGFloat controlPoints_x[2*_max_points]; CGFloat controlPoints_y[2*_max_points];  calculateBezierControlPoints(  controlPoints_x, controlPoints_y, my_dataPointer.indexx , my_dataPointer.indexy, my_dataPointer.isClosed, my_dataPointer.numberOfPoints, tention);  //the final CGpath constisting of original points and computed control points CGMutablePathRef bezierPath = CGPathCreateMutable();  for (int i = 0; i&lt;my_dataPointer.numberOfPoints + (int) my_dataPointer.isClosed; i++)  {     if(i==0)         CGPathMoveToPoint(bezierPath, nil, my_dataPointer.indexx[0], my_dataPointer.indexy[0]);     else if (i==my_dataPointer.numberOfPoints) //this happens when the path is closed         CGPathAddCurveToPoint(bezierPath, nil, controlPoints_x[i*2-2], controlPoints_y[i*2-2], controlPoints_x[i*2-1], controlPoints_y[i*2-1],my_dataPointer.indexx[0], my_dataPointer.indexy[0]);     else         CGPathAddCurveToPoint(bezierPath, nil, controlPoints_x[i*2-2], controlPoints_y[i*2-2], controlPoints_x[i*2-1], controlPoints_y[i*2-1],my_dataPointer.indexx[i], my_dataPointer.indexy[i]); } if(my_dataPointer.isClosed)     CGPathCloseSubpath(bezierPath);  return bezierPath; </code></pre>  <p>}</p>  <p>In the above method , return bezierPath is crashing the App in device, it is crashing with no crash reason. It works fine in simulator.</p>