<p>Who: I work for the County ambulance service. We have forty ambulances and about two hundred fire apparatus.</p>  <p>What:   I am asking your help to write a compute program in Java. I have a GUI that I constructed in JavaFX Scene Builder 2.0. I am using Netbeans to code up the application. Enclosed is some very simple code for the GUI. My question is in two parts;  Question 1.) I have an Analysis menu with a Expected Call Volume menu item. I also have the code that reaches into my database and pulls out this information and generates a Poisson frequency distribution. How do I marry those two things together. In other words, when a user clicks the menu item it should fire off the code. How do I attach the code to this menu item? Question 2.) Perhaps not a question, I am keeping the action code in a separate .java file. The reason I am doing this is to keep separate the gui from the code. I think it will be more manageable to have pieces that do unique things. Is there anything special I need to do to tie this separate java file into the GUI? Which java file does this action event go to (FXMLDocumentExplorer.java or JavaFXApplication2.java)?</p>  <p>When: hoping to get this accomplished this before 9 October 2015</p>  <p>Where:  JavaFX Scene Builder 2.0 and Netbeans 8.02 on a Windows machine. It is JDK 8.</p>  <p>Why:    I have a lot of database code built for understanding ambulance deployment. I would like to package it all up in a software package. </p>  <pre><code>   /*When the user clicks the menu item Expected Call Volume this code fires off*/ import java.lang.Math;  public class PoissonExperiment1 {     public static void main(String[] args)     { /*This is just an example of code. Keeping it easy. The actual Poisson calculations and JDBC are 200 lines of ugly code.*/         double c = 7.0;         int k = 1;         while (k &lt;= 15)         {             int factorialResult = 1;             for (int i = 1; i &lt;= k; i++)             {                 factorialResult = factorialResult * i;             }             double term1 = (Math.pow(Math.E, -c));             double term2 = Math.pow(c, k);             double numerator = term1 * term2;             double answer = numerator / factorialResult;             System.out.format("%10.3f:%n ", answer);             k++;         }     } } </code></pre>  <p>Netbeans generates the following code (FXMLDocumentController)</p>  <pre><code>package javafxapplication2;  import java.net.URL; import java.util.ResourceBundle; import javafx.event.ActionEvent; import javafx.fxml.FXML; import javafx.fxml.Initializable; import javafx.scene.control.Label;  public class FXMLDocumentController implements Initializable {    @FXML   private Label label;    @FXML   private void handleButtonAction(ActionEvent event)   {     System.out.println("You clicked me!");     label.setText("Hello World!");   }    @Override   public void initialize(URL url, ResourceBundle rb)   {   } } </code></pre>  <p>Netbeans also generates the following code (JavaFXApplication2)</p>  <pre><code>package javafxapplication2;  import javafx.application.Application; import javafx.fxml.FXMLLoader; import javafx.scene.Parent; import javafx.scene.Scene; import javafx.stage.Stage;  public class JavaFXApplication2 extends Application {    @Override   public void start(Stage stage) throws Exception   {     Parent root = FXMLLoader.load(getClass().getResource("FXMLDocument.fxml"));      Scene scene = new Scene(root);      stage.setScene(scene);     stage.show();   }    public static void main(String[] args)   {     launch(args);   } } </code></pre>  <p>JavaFX Scene Builder generates a gui xml document. It doesn't copy and paste well.</p>  <pre><code>&lt;?xml version="1.0" encoding="UTF-8"?&gt;  &lt;?import javafx.geometry.*?&gt; &lt;?import java.lang.*?&gt; &lt;?import java.util.*?&gt; &lt;?import javafx.scene.*?&gt; &lt;?import javafx.scene.control.*?&gt; &lt;?import javafx.scene.layout.*?&gt;  &lt;AnchorPane id="AnchorPane" maxHeight="1.7976931348623157E308" maxWidth="1.7976931348623157E308" prefHeight="247.0" prefWidth="419.0" xmlns="http://javafx.com/javafx/8" xmlns:fx="http://javafx.com/fxml/1" fx:controller="javafxapplication2.FXMLDocumentController"&gt;   &lt;children&gt;     &lt;HBox alignment="CENTER" fillHeight="false" layoutX="4.0" layoutY="50.0" maxHeight="1.7976931348623157E308" maxWidth="1.7976931348623157E308" minHeight="-Infinity" minWidth="-Infinity" onMouseClicked="#handleButtonAction" prefHeight="192.0" prefWidth="411.0" style="-fx-background-color: FloralWhite;" AnchorPane.bottomAnchor="5.0" AnchorPane.leftAnchor="4.0" AnchorPane.rightAnchor="4.0" AnchorPane.topAnchor="50.0"&gt;       &lt;padding&gt;         &lt;Insets bottom="5.0" left="5.0" right="5.0" top="5.0" /&gt;       &lt;/padding&gt;     &lt;/HBox&gt;     &lt;Pane layoutX="7.0" maxHeight="1.7976931348623157E308" maxWidth="1.7976931348623157E308" prefHeight="247.0" prefWidth="419.0" AnchorPane.bottomAnchor="0.0" AnchorPane.leftAnchor="0.0" AnchorPane.rightAnchor="0.0" AnchorPane.topAnchor="0.0"&gt;       &lt;children&gt;         &lt;MenuBar layoutX="14.0" layoutY="10.0"&gt;           &lt;menus&gt;             &lt;Menu mnemonicParsing="false" text="File"&gt;               &lt;items&gt;                 &lt;MenuItem mnemonicParsing="false" text="Close" /&gt;               &lt;/items&gt;             &lt;/Menu&gt;              &lt;Menu mnemonicParsing="false" text="Analysis"&gt;               &lt;items&gt;                 &lt;MenuItem fx:id="mnuCompareTimeFrames" mnemonicParsing="false" text="Expected Call Volume" /&gt;                 &lt;MenuItem fx:id="mnuCOPCNCompliance" mnemonicParsing="false" text="COPCN Compliance" /&gt;                         &lt;MenuItem fx:id="mnuResponseTimes" mnemonicParsing="false" onAction="#handleButtonAction" text="Response Times" /&gt;               &lt;/items&gt;             &lt;/Menu&gt;           &lt;/menus&gt;         &lt;/MenuBar&gt;       &lt;/children&gt;     &lt;/Pane&gt;   &lt;/children&gt; &lt;/AnchorPane&gt; </code></pre>  <p>So how do I put these pieces together? Once I figure out how to fire off some code after the user clicks on a menu item, I can then start to build the rest of this program.</p>