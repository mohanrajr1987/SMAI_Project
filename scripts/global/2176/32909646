<p>All of my methods after the main are getting "illegal start of expression" error messages and I can't figure out why. Here is my code:</p>  <pre><code>import java.util.Scanner; public class CreditCardCounter {      /**      * @param args the command line arguments      */     public static void main(String[] args) {         // This program allows the user to enter multiple credit card numbers, then         //tallys and displays the number of each different brand of credit card entered.          // Create a new scanner.          Scanner input = new Scanner(System.in);          System.out.print("Enter your Card Number : ");          long input = sc.nextLong();          if (isValid(input) == true) {             System.out.println("\n*****Your card is Valid*****");         } else {             System.out.println("\n!!!!Your Card is not Valid !!!!! ");         }            public static boolean isValid(long number) {          int total = sumOfDoubleEvenPlace(number) + sumOfOddPlace(number);           if ((total % 10 == 0) &amp;&amp; (prefixMatched(number, 1) == true) &amp;&amp; (getSize(number)&gt;=13 ) &amp;&amp; (getSize(number)&lt;=16 )) {             return true;         } else {             return false;         }     }      public static int getDigit(int number) {          if (number &lt;= 9) {             return number;         } else {             int firstDigit = number % 10;             int secondDigit = (int) (number / 10);              return firstDigit + secondDigit;         }     }     public static int sumOfOddPlace(long number) {         int result = 0;          while (number &gt; 0) {             result += (int) (number % 10);             number = number / 100;         }          return result;     }      public static int sumOfDoubleEvenPlace(long number) {          int result = 0;         long temp = 0;          while (number &gt; 0) {             temp = number % 100;             result += getDigit((int) (temp / 10) * 2);             number = number / 100;         }          return result;     }      public static boolean prefixMatched(long number, int d) {          if ((getPrefix(number, d) == 4)                 || (getPrefix(number, d) == 5)                 || (getPrefix(number, d) == 3)) {              if (getPrefix(number, d) == 3) {                 System.out.println("\nVisa Card ");             } else if (getPrefix(number, d) == 5) {                 System.out.println("\nMaster Card ");             } else if (getPrefix(number, d) == 3) {                 System.out.println("\nAmerican Express Card ");             }              return true;          } else {              return false;          }     }      public static int getSize(long d) {          int count = 0;          while (d &gt; 0) {             d = d / 10;              count++;         }          return count;      }      public static long getPrefix(long number, int k) {          if (getSize(number) &lt; k) {             return number;         } else {              int size = (int) getSize(number);              for (int i = 0; i &lt; (size - k); i++) {                 number = number / 10;             }              return number;          }      }  } </code></pre>