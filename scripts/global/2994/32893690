<p>My situation is that i need to draw of green the cells in the Pivot Grid that were edited. I have tried to subscribe the pivot grid to the <code>CustomCellAppearance</code> event, but of course that draw the entire Data Table. I'm handling the edit part with the <code>LostFocus</code> event, this means that the cell is edited when it loses the focus. In that case i need to paint the cell.</p>  <p>This is a piece of my PivotGridView.xaml code (where the pivot grid is defined):</p>  <pre><code>&lt;dxpg:PivotGridControl x:Name="PivotGridControl1" ChartSelectionOnly="False"                                 CellSelectedBackground="LightSlateGray" CellBackground="GhostWhite" Background="LightBlue"                                ValueSelectedBackground="LightSlateGray"                                CellTotalBackground="Linen" ValueTotalBackground="LightSkyBlue" ValueBackground="LightSteelBlue"                                ValueTotalSelectedBackground="DeepSkyBlue"                                  Width="Auto" Height="430" Margin="0,-1,-8,40"&gt;              &lt;dxpg:PivotGridControl.Fields&gt;                 &lt;dxpg:PivotGridField Area="DataArea" Caption="Amount" FieldName="amount"&gt;                     &lt;dxpg:PivotGridField.CellTemplate&gt;                         &lt;DataTemplate&gt;                             &lt;dxe:TextEdit x:Name="edit" DisplayFormatString="c2" HorizontalContentAlignment="Right"                                            EditMode="InplaceInactive"                                                                        Mask="[0-9]*.[0-9]{0,2}"                                           MaskType="RegEx"                                           EditValue="{Binding Value, Mode=OneWay}"                                           LostFocus="TextEdit_LostFocus"                                           FocusVisualStyle="{StaticResource TextFocused}"&gt;                                 &lt;dxe:TextEdit.InputBindings&gt;                                     &lt;MouseBinding MouseAction="LeftClick" Command="{x:Static local:PivotTableView.StartEdit}" CommandParameter="{Binding ElementName=edit}" /&gt;                                 &lt;/dxe:TextEdit.InputBindings&gt;                             &lt;/dxe:TextEdit&gt;                         &lt;/DataTemplate&gt;                     &lt;/dxpg:PivotGridField.CellTemplate&gt;                  &lt;/dxpg:PivotGridField&gt;                 &lt;dxpg:PivotGridField Area="RowArea" Caption="Item" FieldName="item" /&gt;                 &lt;dxpg:PivotGridField Area="ColumnArea" Caption="Name" FieldName="name"  /&gt;             &lt;/dxpg:PivotGridControl.Fields&gt;          &lt;/dxpg:PivotGridControl&gt; </code></pre>  <p>And this is the handler code:</p>  <pre><code>    void TextEdit_LostFocus(object sender, RoutedEventArgs e)     {         EditValue(sender);     }      static void EditValue(object sender)     {         TextEdit edit = (sender as TextEdit);          if (edit == null || edit.DataContext as CellsAreaItem == null) return;         CellsAreaItem item = edit.DataContext as CellsAreaItem;         decimal newValue;         decimal oldValue;         if (edit.EditValue != null &amp;&amp; decimal.TryParse(edit.EditValue.ToString(), out newValue))         {              if (item.Value == null || !decimal.TryParse(item.Value.ToString(), out oldValue))                 return;             PivotGridControl pivotGrid = FindParentPivotGrid((DependencyObject)sender);              if (pivotGrid == null)                 return;             PivotGridField fieldExtendedPrice = pivotGrid.Fields["amount"];             PivotDrillDownDataSource ds = pivotGrid.CreateDrillDownDataSource(item.ColumnIndex, item.RowIndex);             decimal difference = newValue - oldValue;             decimal factor = (difference == newValue) ? (difference / ds.RowCount) : (difference / oldValue);              for (int i = 0; i &lt; ds.RowCount; i++)             {                 decimal value = Convert.ToDecimal(ds[i][fieldExtendedPrice]);                 ds[i][fieldExtendedPrice] = (double)((value == 0m) ? factor : value * (1m + factor));//(double)newValue;              }              pivotGrid.RefreshData();          }     } </code></pre>  <p>I'm using version 13.2. Any idea? Thanks in advance!!</p>