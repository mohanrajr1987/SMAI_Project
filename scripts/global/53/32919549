<p>String Calculator</p>  <p>The following is a TDD exercise in coding, refactoring and test-first. You will need to implement the code for the string calculator specified below. You will implement unit tests in your given framework that test the correctness of your code.</p>  <p>Before you start: </p>  <p>Try not to read ahead.</p>  <p>Do one task at a time. The trick is to learn to work incrementally.</p>  <p>Make sure you only test for correct inputs. there is no need to test for invalid inputs for this assignment</p>  <p>String Calculator</p>  <p>Create a simple StringCalculator class with a method that returns an integer called  Add(string numbers)</p>  <p>The method can take 0, 1 or 2 numbers, and will return their sum (for an empty string it will return 0) for example “” or “1” or “1,2”.</p>  <p>Start with the simplest test case of an empty string and move to 1 and two numbers</p>  <p>Remember to solve things as simply as possible so that you force yourself to write tests you did not think about</p>  <p>Remember to refactor after each passing test</p>  <p>Allow the Add method to handle an unknown amount of numbers</p>  <p>Calling Add with a negative number will throw an exception “negatives not allowed” - and the negative that was passed.if there are multiple negatives, show all of them in the exception message. There should be a test case that tests for the exception.</p>  <p>Numbers bigger than 1000 should be ignored, so adding 2 + 1001  = 2</p>  <p>You will need a minimum of 4 test cases.</p>  <p>Do not submit this assignment yet, we will submit it after completing Part B next week. </p>