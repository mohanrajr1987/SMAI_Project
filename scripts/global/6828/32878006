<p>Using SQLite, I know how to create a dynamic cell, but is there a way to create a dynamic cell within that cell. As in, make a file system of sorts that I can add a file within a file and so on with the simple push of an "Add" button. I am using a table view, but I want to click a cell to put a new cell within that and so on.</p>  <p>This is my code so far</p>  <pre><code>@interface StudentsListControllViewController ()  @end  @implementation StudentsListControllViewController  - (void)viewDidLoad { [super viewDidLoad];  //    students =[NSArray arrayWithObjects:[NSDictionary        dictionaryWithObjectsAndKeys:@"Ravi",@"name",[NSNumber numberWithInt:2],@"age",    [NSNumber numberWithInt:4],@"marks", nil], nil];  //[self.tableView reloadData]; // Uncomment the following line to preserve selection between presentations. // self.clearsSelectionOnViewWillAppear = NO;  // Uncomment the following line to display an Edit button in the navigation bar for this view controller. // self.navigationItem.rightBarButtonItem = self.editButtonItem; }  - (void)didReceiveMemoryWarning { [super didReceiveMemoryWarning]; // Dispose of any resources that can be recreated. }  #pragma mark - Table view data source  -(void) setStudents:(NSArray *) students_ { students = [NSArray arrayWithArray:students_]; [self.tableView reloadData]; }  - (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView { return 1; }  - (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:    (NSInteger)section { // Return the number of rows in the section. if(students ==nil) return 0;  return students.count; }  - (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:    (NSIndexPath *)indexPath { static NSString *CellIdentifier = @"Cell"; UITableViewCell *cell = [tableView  dequeueReusableCellWithIdentifier:CellIdentifier forIndexPath:indexPath];  if (cell == nil) {     cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleSubtitle reuseIdentifier:CellIdentifier]; }  NSDictionary * student =[students objectAtIndex:indexPath.row]; cell.textLabel.text = [student objectForKey:@"name"]; cell.detailTextLabel.text = [NSString                              stringWithFormat:@"Age:%@" ,                              [student objectForKey:@"age"]];  // Configure the cell...  return cell; }   -(IBAction) goback:(id)sender { [self.navigationController popToRootViewControllerAnimated:YES]; } @end </code></pre>