<p>hey currently I am working on android app and use parse as backend where I have created a listView of  nearby places dynamically  but I face the following design issue , when the user click on a places a view must be appeared under the clicked item.  and I have faced problem with grouping the place , as you can see in the figure 1 that there are many branches for HSBC bank. in which they are under HSBC.</p>  <p>I have tried before expandable listview but it does not give much customization for child view , just simple one. </p>  <p><a href="http://i.stack.imgur.com/pV266.png" rel="nofollow">Figure 1: shows the list of places grouped by bank name</a></p>  <p><a href="http://i.stack.imgur.com/LuBdd.png" rel="nofollow">Figure 2: shows the detail of a place</a></p>  <p>here are my BaseAdapter</p>  <p><div class="snippet" data-lang="js" data-hide="false"> <div class="snippet-code"> <pre class="snippet-code-html lang-html prettyprint-override"><code>import java.util.ArrayList; import java.util.List;  import com.parse.ParseGeoPoint;  import android.content.Context; import android.content.Intent; import android.view.LayoutInflater; import android.view.View; import android.view.View.OnClickListener; import android.view.ViewGroup; import android.view.ViewManager; import android.widget.BaseAdapter; import android.widget.ImageView; import android.widget.TextView; import android.widget.Toast;   public class ListViewAdapter extends BaseAdapter {   	// Declare Variables 	Context context; 	LayoutInflater inflater; 	//ImageLoader imageLoader; 	private List&lt;AnywallPost&gt; AnywallPostlist = null; 	private ArrayList&lt;AnywallPost&gt; arraylist;   	public ListViewAdapter(Context context, 			List&lt;AnywallPost&gt; AnywallPostlist) { 		this.context = context; 		this.AnywallPostlist = AnywallPostlist; 		inflater = LayoutInflater.from(context); 		this.arraylist = new ArrayList&lt;AnywallPost&gt;(); 		this.arraylist.addAll(AnywallPostlist); 		 	}   	public class ViewHolder { 		TextView distance; 		TextView name; 		 	}   	@Override 	public int getCount() { 		return AnywallPostlist.size(); 	}   	@Override 	public Object getItem(int position) { 		return AnywallPostlist.get(position); 	}   	@Override 	public long getItemId(int position) { 		return position; 	}   	public View getView(final int position, View view, ViewGroup parent) { 		final ViewHolder holder; 		final View row=view;  		if (view == null) { 			holder = new ViewHolder(); 			view = inflater.inflate(R.layout.user_custom, null); 			// Locate the TextViews in listview_item.xml 			holder.distance = (TextView) view.findViewById(R.id.disView); 			holder.name = (TextView) view.findViewById(R.id.nameView); 			  			view.setTag(holder); 		} else { 			holder = (ViewHolder) view.getTag(); 		} 		// Set the results into TextViews 		 		holder.name.setText(AnywallPostlist.get(position).getText()); 		holder.distance.setText(AnywallPostlist.get(position).getDis());  	 		//Listen for ListView Item Click 		view.setOnClickListener(new OnClickListener() {   			@Override 			public void onClick(View arg0) { 				 				Toast.makeText(context,AnywallPostlist.get(position).getText(), Toast.LENGTH_LONG).show(); 				  			} 		}); 		return view; 	}   }       &lt;!-- begin snippet: js hide: false --&gt;</code></pre> </div> </div> </p>  <p><div class="snippet" data-lang="js" data-hide="false"> <div class="snippet-code"> <pre class="snippet-code-html lang-html prettyprint-override"><code>import com.parse.ParseClassName; import com.parse.ParseGeoPoint; import com.parse.ParseObject; import com.parse.ParseQuery; import com.parse.ParseUser;  /**  * Data model for a post.  */ @ParseClassName("places") public class AnywallPost extends ParseObject {    public String getText() {     return getString("text");   }    public void setText(String value) {     put("text", value);   }   public String getBank() {     return getString("bank");   }    public void setBank(String value) {     put("bank", value);   }    public ParseUser getUser() {     return getParseUser("user");   }    public void setUser(ParseUser value) {     put("user", value);   }       public String getType()   { 	return getString("type");     }      public void setType(String value)   { 	put("type",value);   }      public ParseGeoPoint getLocation() {     return getParseGeoPoint("location");   }    public void setLocation(ParseGeoPoint value) {     put("location", value);   }    public String getDis()   { 	return getString("dis");     }      public void setdis(String value)   { 	put("dis",value);   }      public static ParseQuery&lt;AnywallPost&gt; getQuery() {     return ParseQuery.getQuery(AnywallPost.class);   } }</code></pre> </div> </div> </p>