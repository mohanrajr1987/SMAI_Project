<p>I've a class A like that:</p>  <pre><code>public class A {     private String id;              // Generated on server     private DateTime timestamp;     private int trash;     private Humanity.FeedTypeEnum feedType     private List&lt;Property&gt; properties; // ... </code></pre>  <p>where <code>Property</code> is:</p>  <pre><code>public class Property {     private Humanity.PropertyTypeEnum type;     private string key;     private object value; //... </code></pre>  <p>I'd like to build a dynamic object that flat <code>List&lt;Property&gt; properties</code> A's field to raw properties. For example:</p>  <pre><code>A a = new A(); a.Id = "Id"; a.Timestamp = DateTime.Now; a.Trash = 2; a.FeedType = Humanity.FeedTypeEnum.Mail; a.Properties = new List&lt;Property&gt;() {     new Property()     {         Type = Humanity.PropertyTypeEnum.String,         Key = "name"         Value = "file1.pdf"     },     new Property()     {         Type = Humanity.PropertyTypeEnum.Timestamp,         Key = "creationDate",         Value = Datetime.Now     } } </code></pre>  <p>As I've commented I'd like to flat this <code>a</code> object in order to access to the properties as:</p>  <pre><code>String name = a.Name; DateTime creationDate = a.CreationDate; a.Name = "otherName"; a.CreationDate = creationDate.AddDays(1); </code></pre>  <p>I've achieved that using Reflection. However, I'm figuring out that it's a best option using <code>ExpandoObject</code>.</p>  <p>The question is, how can I do that using <code>ExpandoObject</code> class?</p>