<p>Let's say I have an array of chars and I want to shift N bits to the left each byte, carrying to the left, so only the N bits of the first character would be lost.</p>  <p>Example: <code>kxmo</code> shifted 3 bits to the left should become <code>X@hx</code></p>  <p>This is what I have currently, but it's not working as expected:</p>  <pre><code>#include &lt;stdio.h&gt;  int main(void) {     //shift the array with length *len* *shift* bits to the left     int len = 4, shift = 3;     unsigned char a[len] = "kxmo";     unsigned char b[len]; //X@hx      unsigned char tmp = 0, tmp2 = 0;     for(int i = len - 1; i &gt; 0; i--) {         tmp = 0 | (a[i] &lt;&lt; shift);         b[i] = a[i];          tmp2 = 0 | (a[i - 1] &lt;&lt; shift);         b[i - 1] = (a[i - 1] &lt;&lt; shift) ^ tmp;     }      printf("old: %s | new: %s\n", a, b);      return 0; } </code></pre>  <p>Where am I failing?</p>  <p>Edit:</p>  <p>This is what I'm getting right now: <code>old: kxmo | new: ï¿½xmo</code></p>