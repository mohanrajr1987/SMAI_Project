<p>I'm trying to understand the bitwise and the shift operators. I wrote a simple code to show me the bits in a short type.</p>  <pre><code>    class Shift {     public static void main (String args[]) {         short b = 16384;          for (int t = 32768; t &gt; 0; t = t/2) {             if ((b&amp;t) !=0) System.out.print("1 ");             else System.out.print ("0 ");         }         System.out.println();         b = b+2;         for (long t = 2147483648; t &gt; 0; t = t/2) {             if ((b&amp;t) != 0) System.out.print ("1 ");             else System.out.print ("0 ");         }         System.out.println();     } } </code></pre>  <p>The output is:</p>  <pre><code>C:\&gt;javac Shift.java Shift.java:11: error: integer number too large: 2147483648                 for (long t = 2147483648; t &gt; 0; t = t/2) {                               ^ 1 error </code></pre>  <p>I don't understand why a long type can't hold the value 2147483648.</p>  <h2>Thank you for your help.</h2>  <p>Thank you for your answers. I changed the code:</p>  <pre><code>    class Shift {     public static void main (String args[]) {         short b = 16384;          for (int t = 32768; t &gt; 0; t = t/2) {             if ((b&amp;t) !=0) System.out.print("1 ");             else System.out.print ("0 ");         }         System.out.println();         b = (short)(b+2);         for (long t = 2147483648L; t &gt; 0; t = t/2) {             if ((b&amp;t) != 0) System.out.print ("1 ");             else System.out.print ("0 ");         }         System.out.println();     } } </code></pre>  <p>And the output is now:</p>  <pre><code>C:\&gt;java Shift 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 </code></pre>  <p>Why is the output of the second "for" an integer?</p>