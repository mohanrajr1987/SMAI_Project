<p>I am trying to solve this leetcode problem: <a href="https://leetcode.com/problems/single-number-iii/" rel="nofollow">Given an array of numbers nums, in which exactly two elements appear only once and all the other elements appear exactly twice. Find the two elements that appear only once.</a> </p>  <p>I know the standard solution is to compute X^Y, and get the lowest uncommon bit, ...</p>  <p>But I also have another idea:</p>  <p>I can get X^Y by XOR all the numbers;</p>  <pre><code>xored = 0 for i in nums:    xored  = xored^i </code></pre>  <p>I can also get X+Y by adding each binary bit of the numbers individually, and modular 2.</p>  <pre><code># pseudo-code bitvector = [0]* number of bits of integer for n in numbers:    for bit in bitvector:        bitvector[i] += n[bit]        bitvector[i] = bitvector[i]%2 </code></pre>  <p>But I don't know how to get X and Y, with X+Y and X^Y, or even if this is possible.</p>  <p>Can you help?</p>