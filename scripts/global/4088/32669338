<p>I'm collecting EDID blocks (as bytes) from SetupAPI calls in order to get some detailed Monitor information.</p>  <p>As the <a href="https://en.wikipedia.org/wiki/Extended_Display_Identification_Data#EDID_Extensio%60ns_assigne%60d_by_VESA" rel="nofollow">EDID documentation</a> says, some bytes stores "5-bits letters" inside them. </p>  <p>Just to save you from headache, I'm attaching a scheme to understand easily:</p>  <p><a href="http://i.stack.imgur.com/GOcfq.jpg" rel="nofollow"><img src="http://i.stack.imgur.com/GOcfq.jpg" alt="2 bytes representing 3 letters in their bits"></a></p>  <p>As you can see, I need to extract 5-bits letters from the bytes.</p>  <p>I could managed to split the bytes into the BitArray but then I don't know how to convert those bits to letters.</p>  <p>Wiki also says:</p>  <pre><code>"00001=A”; “00010=B”; ... “11010=Z”. </code></pre>  <p>Well, what is the fastest and most painless way to convert those bits? </p>  <p>I guess I could predefine a Dictionary object like:</p>  <pre><code>Dictionary&lt;BitArray, char&gt; letters = new Dictionary&lt;BitArray, char&gt;(); letters.Add(new BitArray(new int[] { 0, 0, 0, 1 }),  Convert.ToChar("A")); letters.Add(new BitArray(new int[] { 0, 0, 1, 0 }),  Convert.ToChar("B")); </code></pre>  <p>and then search in it but first I don't know how to follow after “00010=B” to “11010=Z” and second I'm sure there must be more proper way.</p>  <p>Thanks for your help.</p>