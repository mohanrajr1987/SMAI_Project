<p>i've a byte array of size 16384(SourceArray). i want to split it into 4 parts,4 byte array of size 4096. Now each 32 bits from SourceArray will be divided into 10 bits,10 bits,11 bits and 1 bit (10+10+11+1=32 bits). Taking first 10bits,then next 10bits then 11bits and then 1bit.<br> lets say for example first 4 bytes from the sourceArray, i get a value 9856325. Now 9856325(dec) =   00000000100101100110010101000101(Binary)-----------------------------  0000000010(10bits)    0101100110(10bits)    01010100010(11bits)   1(1bit). I cannot store 10,10,11 bits in byte array, So i'm storing it into Int16 array and for 1 bit i can store it into a byte array. ` I hope problem statement is clear. I've created some logic.</p>  <pre><code>        Int16[] Array1 = new Int16[4096];         Int16[] Array2 = new Int16[4096];         Int16[] Array3 = new Int16[4096];         byte[] Array4 = new byte[4096];          byte[] SourceArray = File.ReadAllBytes(@"Reading an image file from directory");     //Size of source Array = 16384           for (int i = 0; i &lt; 4096; i++)         {             uint temp = BitConverter.ToUInt32(SourceArray, i * 4);             uint t = temp;             Array1[i] = (Int16)(t &gt;&gt; 22);             t = temp &lt;&lt; 10;             Array2[i] = (Int16)(t &gt;&gt; 22);             t = temp &lt;&lt; 20;             Array3[i] = (Int16)(t &gt;&gt; 21);             t = temp &lt;&lt; 31;             Array4[i] = (byte)(t&gt;&gt;31);         } </code></pre>  <p>But i'm not getting the actual results. i might be missing something in my logic. Please verify it, whats wrong Or if you have some better logic,please suggest me.</p>