<p>I have a custom ModelMetadataProvider, which sets the displayname based on adding spaces after capital letters in the property name:</p>  <pre><code>public class ModelMetadataProviderPlus : ModelMetadataProvider {     private readonly ModelMetadataProvider _BaseProvider;      public ModelMetadataProviderPlus(ModelMetadataProvider baseProvider)     {         _BaseProvider = baseProvider;     }      private void SetMissingDisplayName(ModelMetadata modelMetaData)     {         if (modelMetaData.DisplayName == null &amp;&amp; modelMetaData.PropertyName != null)         {             modelMetaData.DisplayName = modelMetaData.PropertyName.AddSpacesAfterCaps();         }     }      public override IEnumerable&lt;ModelMetadata&gt; GetMetadataForProperties(object container, Type containerType)     {         var Result = _BaseProvider.GetMetadataForProperties(container, containerType);          return Result.Select(r =&gt;         {             SetMissingDisplayName(r);             return r;         });     }      public override ModelMetadata GetMetadataForProperty(Func&lt;object&gt; modelAccessor, Type containerType, string propertyName)     {         var Result = _BaseProvider.GetMetadataForProperty(modelAccessor, containerType, propertyName);          SetMissingDisplayName(Result);          return Result;     }      public override ModelMetadata GetMetadataForType(Func&lt;object&gt; modelAccessor, Type modelType)     {         var Result = _BaseProvider.GetMetadataForType(modelAccessor, modelType);          SetMissingDisplayName(Result);          return Result;     } } </code></pre>  <p>I configure the MVC framework to use it using</p>  <pre><code>ModelMetadataProviders.Current = new ModelMetadataProviderPlus(ModelMetadataProviders.Current); </code></pre>  <p>This all works fine, however the validation error messages don't seem to use this provider, as the error message for the <code>[Required]</code> attribute says (for example): <code>The DefectCount field is required.</code>.</p>  <p>I use nInject, so i tried doing:</p>  <pre><code>kernel.Bind&lt;ModelMetadataProvider&gt;().ToConstant(new ModelMetadataProviderPlus(ModelMetadataProviders.Current)); </code></pre>  <p>but although the labels etc. appeared correctly the validation messages still didn't.</p>  <p>I've searched for a while now and although I've found a couple of places where the same issue is noted, I can't find anything with a solution.</p>