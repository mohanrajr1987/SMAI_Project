<p>I am making a basic game, and for some reason when the map, a single BufferedImage of type INT_RGB is moved along the x axis, the outer left and right edges of the image flicker. This does not happen in reverse, when I move the image along the Y axis. Even when I set it up to draw the same image using hundreds of tiles, it still only flickers along the outer left and right edges of the image as whole- not the outer edges of each separately drawn tile image. The flicker starts at the top and travels down, as if more and more of the image is moved along the x axis. Here is how the BufferedImage is set up, with some editing:</p>  <pre><code>//Graphics private BufferedImage image; private Graphics2D g;  image = new BufferedImage(Constants.WIDTH, Constants.HEIGHT, BufferedImage.TYPE_INT_RGB); g = (Graphics2D)image.getGraphics();  private void draw() {     gsm.draw(g); }  private void drawToScreen() {     Graphics g2 = getGraphics();     g2.drawImage(image, 0, 0, Constants.WIDTH, Constants.HEIGHT, null);      g2.dispose(); } </code></pre>  <p>With draw() and drawToScreen() being called at 60 fps and gsm being a game state manager. This is then handled in the actual game class like this:</p>  <pre><code>public void draw(Graphics2D g) {     //Draw Background         g.setColor(Color.black);         g.fillRect(0, 0, Constants.WIDTH, Constants.HEIGHT);         g.drawImage(Assets.test, (int)xOffset, (int)yOffset, null);     } </code></pre>  <p>A black background in draw, then the image. Assets.test is the BufferedImage, and xOffset and yOffset draw it with certain offset based on the players input (aka, movement). I can also draw it like this:</p>  <pre><code>public void draw(Graphics2D g) {     //Draw Background         g.setColor(Color.black);         g.fillRect(0, 0, Constants.WIDTH, Constants.HEIGHT);         for(int i = 0; i &lt; yLength; i++) {             for(int l = 0; l &lt; xLength; l++) {                 g.draw(tileMap[l][i].getImage(), l * Constants.TILESIZE + (int)xOffset, Constants.TILESIZE * i + (int)yOffset, null);             }         } } </code></pre>  <p>Here, tileMap[l][i] is each image, with tileMap being a double array of tiles, each storing a solidity value and an image. Constants.TILESIZE is the size of each tile, and xOffset and yOffset are the same thing as before.</p>  <p>However, drawing it this way has the same effect as the other, just with less performance. As I said at the start, the lines still only flicker on the outer edges of the WHOLE IMAGE, not each tile, which strikes me as being odd. I don't recall these lines having always flickered, but I couldn't say when they started doing so. What is causing this and how can I fix it?</p>  <p>Please let me know if more code is needed, or if there are any typos or other answers to questions like this. I did not see any, but that does not mean they do not exist.</p>  <p>Thank you very much!</p>