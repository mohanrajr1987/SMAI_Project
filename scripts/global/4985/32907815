<p>i tried these techniques but no any luck</p>  <pre><code>        ` RequestBody requestBody = new MultipartBuilder().type(MultipartBuilder.FORM)                 .addFormDataPart("secret_token", SecretToken)                 .addFormDataPart("language_id", languageId)                 .addFormDataPart("device_id", FluentUtil.getDeviceID())                 .addFormDataPart("lat", currentLat)                 .addFormDataPart("long", currentLong)                 .addFormDataPart("name", name)                 .addFormDataPart("country", country)                 .addFormDataPart("profile_picture", "file.jpg", RequestBody.create(MediaType.parse("image/jpg"), profilePicture))                 .build(); </code></pre>  <p>///////////////////////////////////////////////////////////////////////////</p>  <pre><code>        RequestBody innerBody = new FormEncodingBuilder()                 .add("secret_token", secretToken)                 .add("language_id", languageId)                 .add("device_id", FluentUtil.getDeviceID())                 .add("lat", currentLat)                 .add("long", currentLong)                 .add("country", country)                 .add("name", name)                 .add("profile_picture", "")                 .build();          RequestBody requestBody = new MultipartBuilder()                 .type(MultipartBuilder.FORM)                 .addPart(                         Headers.of(),innerBody                 ).addPart(                         Headers.of("profile_picture", "profile_picture"),                         RequestBody.create(MEDIA_TYPE_JPG,profilePicture)                 ).build(); </code></pre>  <p>//////////////////////////////////////////////////////////////////////////////</p>  <pre><code>        RequestBody requestBody = new MultipartBuilder()                 .type(MultipartBuilder.FORM)                 .addPart(                         Headers.of("Content-Disposition", "secret_token"),                         RequestBody.create(null, secretToken))                 .addPart(                         Headers.of("Content-Disposition", "language_id"),                         RequestBody.create(null, languageId))                 .addPart(                         Headers.of("Content-Disposition", "device_id"),                         RequestBody.create(null, FluentUtil.getDeviceID()))                 .addPart(                         Headers.of("Content-Disposition", "lat"),                         RequestBody.create(null, currentLat))                 .addPart(                         Headers.of("Content-Disposition", "long"),                         RequestBody.create(null, currentLong))                 .addPart(                         Headers.of("Content-Disposition", "name"),                         RequestBody.create(null, name))                 .addPart(                         Headers.of("profile_picture", "file.jpg"),                         RequestBody.create(MEDIA_TYPE_JPG, profilePicture ))                 .build();` </code></pre>  <p>//////////////////////////////////////////////////////////////////////////</p>  <pre><code>10-02 18:32:39.719  21575-21600/org.areyoufluent.fluent E/JOBSï¹• error while serializing object UserRegistrationJob java.io.NotSerializableException: com.squareup.okhttp.MediaType         at java.io.ObjectOutputStream.writeNewObject(ObjectOutputStream.java:1344)         at java.io.ObjectOutputStream.writeObjectInternal(ObjectOutputStream.java:1651)         at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:1497)         at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:1461)         at java.io.ObjectOutputStream.writeFieldValues(ObjectOutputStream.java:959)         at java.io.ObjectOutputStream.defaultWriteObject(ObjectOutputStream.java:360)         at java.io.ObjectOutputStream.writeHierarchy(ObjectOutputStream.java:1054)         at java.io.ObjectOutputStream.writeNewObject(ObjectOutputStream.java:1384)         at java.io.ObjectOutputStream.writeObjectInternal(ObjectOutputStream.java:1651)         at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:1497)         at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:1461)         at com.path.android.jobqueue.persistentQueue.sqlite.SqliteJobQueue$JavaSerializer.serialize(SqliteJobQueue.java:444)         at com.path.android.jobqueue.persistentQueue.sqlite.SqliteJobQueue.safeSerialize(SqliteJobQueue.java:421)         at com.path.android.jobqueue.persistentQueue.sqlite.SqliteJobQueue.getSerializeJob(SqliteJobQueue.java:416)         at com.path.android.jobqueue.persistentQueue.sqlite.SqliteJobQueue.bindValues(SqliteJobQueue.java:114)         at com.path.android.jobqueue.persistentQueue.sqlite.SqliteJobQueue.insert(SqliteJobQueue.java:69)         at com.path.android.jobqueue.cachedQueue.CachedJobQueue.insert(CachedJobQueue.java:28)         at com.path.android.jobqueue.JobManager.addJob(JobManager.java:163)         at com.path.android.jobqueue.JobManager$3.run(JobManager.java:393)         at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:422)         at java.util.concurrent.FutureTask.run(FutureTask.java:237)         at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:152)         at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:265)         at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)         at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)         at java.lang.Thread.run(Thread.java:818) </code></pre>