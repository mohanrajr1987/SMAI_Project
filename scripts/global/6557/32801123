<p>I have a program that displays a thumbnail of an image. There is a button that offers the user the option to open the image full-screen (using the machine's default image viewer). However, every time I have tried this, it has crashed. I've toyed around with it and here is what I've found so far:</p>  <p>The image on the thumbnail is part of a <code>List&lt;Bitmap&gt;</code> called <code>images</code>. When the button is clicked to open the image full-screen, the code runs a function to find the index of the image currently being displayed, and then use <code>Process.Start(images[current])</code> to open the image in the viewer.</p>  <p>Here is the code that runs this so far:</p>  <pre><code>    private void btnViewImage_Click(object sender, EventArgs e)     {         //identify image displayed on screen         Bitmap displayImage = images[displayImageIndex()];         //get full file path of the image         string displayImagePath = Path.GetFullPath(displayImage);          //instance of class to open specified image in image viewer         ProcessStartInfo imageStartInfo = new ProcessStartInfo(displayImagePath);         //assign max-window attribute to instance of class         imageStartInfo.WindowStyle = ProcessWindowStyle.Maximized;         //open path using assigned instance of class         Process.Start(displayImagePath);     } </code></pre>  <p>The path method of Path.GetFileName(displayImage) gives an error message because it requires a string to be passed as the parameter rather than the Bitmap. However, when I attempted to change it to <code>string displayImagePath = Path.GetFullPath(displayImage.ToString())</code>, this caused the application to crash. When I stepped through the code I found that my use of the <code>displayImage.ToString()</code> actually initialised <code>displayImagePath</code> to <code>System.Drawing.Bitmap</code> (simply giving the variable type in a string rather than anything to do with it's location).</p>  <p>Following this experimentation, I'm not really sure where to go next. I can't think of another method or route to doing this or any way to get the file path.</p>