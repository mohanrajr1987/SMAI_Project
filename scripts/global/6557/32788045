<p>I am using C# on .net 3.5 (Cannot use higher versions)</p>  <p>I have an implementation of a Blocking Queue that implements the Producer-Consumer pattern loosely based on <a href="http://element533.blogspot.com/2010/01/stoppable-blocking-queue-for-net.html" rel="nofollow">http://element533.blogspot.com/2010/01/stoppable-blocking-queue-for-net.html</a></p>  <p>I have 4 files in the same namespace:</p>  <ol> <li>File0 contains the main function and starts two threads for func1 and func2 and instantiates an object of the above queue </li> <li>File1 has func1 that splits a video into individual frames of images      (Bitmaps) and enqueues them to the above queue. If all items are added, it signals that it has completed adding to the queue. Acts as the Producer</li> <li>File2 has func2 that checks if there are items available in the queue and then dequeues the first element. Acts as the Consumer</li> <li>Contains the implementation of the queue</li> </ol>  <p>Important bits of code</p>  <p>func1</p>  <pre><code>        for (int index = 0; index &lt; numFrames; index++)         {             Bitmap oneFrame = videoReader.ReadVideoFrame();             ImageProcessor.frameQueue.Enqueue(oneFrame);             oneFrame.Dispose();         } </code></pre>  <p>func2</p>  <pre><code>while (!ImageProcessor.frameQueue.isCompleted())             {                              using (Bitmap image = ImageProcessor.frameQueue.Dequeue())                 {                     Console.WriteLine("Height: " + image.Height);                     Console.WriteLine("Width: " + image.Width);                                     }                             } </code></pre>  <p>Whenever this runs, func1 runs as expected but func2 throws different types of errors when it tries to access image.Height. Some of the errors that I have seen are</p>  <p>1)</p>  <pre><code>An unhandled exception of type 'System.InvalidOperationException' occurred in System.Drawing.dll Additional information: Object is currently in use elsewhere. </code></pre>  <p>2) </p>  <pre><code>An unhandled exception of type 'System.NullReferenceException' occurred  Additional information: Object reference not set to an instance of an object. </code></pre>  <p>3)</p>  <pre><code>An unhandled exception of type 'System.ArgumentException' occurred in System.Drawing.dll Additional information: Parameter is not valid. </code></pre>  <p>Any guesses what I'm doing wrong? Can I not use multi-threading with bitmaps?</p>  <p>I have a feeling that the issue could be in the oneFrame.Dispose() in func1</p>