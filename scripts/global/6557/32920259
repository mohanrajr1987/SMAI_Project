<p>I'm using this method:</p>  <pre><code>public Bitmap decodeUri(Uri selectedImage) throws FileNotFoundException {      BitmapFactory.Options o = new BitmapFactory.Options();     o.inJustDecodeBounds = true;     BitmapFactory.decodeStream(getContentResolver().openInputStream(selectedImage), null, o);      final int REQUIRED_SIZE = 800;      int width_tmp = o.outWidth, height_tmp = o.outHeight;     int scale = 1;     while (true) {         if (width_tmp / 2 &lt; REQUIRED_SIZE || height_tmp / 2 &lt; REQUIRED_SIZE) {             break;         }         width_tmp /= 2;         height_tmp /= 2;         scale *= 2;     }      BitmapFactory.Options o2 = new BitmapFactory.Options();     o2.inSampleSize = scale;     return BitmapFactory.decodeStream(getContentResolver().openInputStream(selectedImage), null, o2); } </code></pre>  <p>To decode an URI from mi camera and then send to my webserver via an <code>HttpURLConnection</code> object in POST headers. But my instead get my original image: <a href="http://i.stack.imgur.com/GQA9G.jpg" rel="nofollow"><img src="http://i.stack.imgur.com/GQA9G.jpg" alt="enter image description here"></a></p>  <p>I get an cropped imagen:</p>  <p><a href="http://i.stack.imgur.com/xTy7M.png" rel="nofollow"><img src="http://i.stack.imgur.com/xTy7M.png" alt="enter image description here"></a></p>  <p>I don't know why. Perhaps my <code>decodeURI</code> method is wrong? Anybody know other best method to send my image compressed to my webserver?</p>  <p>I used right now the next way insteaf of my <code>decodeUri</code> method:</p>  <pre><code>mybitMap = MediaStore.Images.Media.getBitmap(this.getContentResolver(), selectedImageUri); </code></pre>  <p>and I have the same problem. And when I tried to open the image in my webserver with Photoshop, I see an advertisement wich says "This document may be damaged (the file may be truncated or incomplete). Do you want continue?" And , after continue, I see a black space in the bottom of the image...</p>  <p>Anybody knows why? My code:</p>  <pre><code>Bitmap mybitMap = null;    try {       mybitMap = MediaStore.Images.Media.getBitmap(this.getContentResolver(), selectedImageUri);     } catch (FileNotFoundException e) {        e.printStackTrace();    } catch (IOException e) {        e.printStackTrace();    }      ByteArrayOutputStream baos = new ByteArrayOutputStream();    imagen.compress(Bitmap.CompressFormat.JPEG, 100, baos); </code></pre>  <p>And I send this in POST Headers:</p>  <pre><code> Base64.encodeToString(baos.toByteArray(), Base64.DEFAULT); </code></pre>