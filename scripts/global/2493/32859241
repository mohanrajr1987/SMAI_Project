<p>I'm trying to munge data from a few columns across a few tables to make it full-text searchable, but I'm not having much luck.</p>  <p>Here's my function:</p>  <pre><code>CREATE OR REPLACE FUNCTION on_customer_save_udpate_tsv() RETURNS trigger AS $$  declare     tsv_text text;  begin  SELECT string_agg(cust_text.text, ' ') as agg_text into tsv_text  FROM (SELECT concat("name", ' ', "phone") as text     FROM "Customers"     where "id" = NEW.id     UNION     SELECT concat("firstName", ' ', "lastName", ' ', "phone", ' ', "email") as text     FROM "Contacts"     where "customerId" = NEW.id     UNION     SELECT concat("streetLine1", ' ', "city", ' ', "state", ' ', "zip") as text     FROM "Addresses"     where "customerId" = NEW.id) cust_text;  NEW.tsv := to_tsvector(coalesce(tsv_text,''));  return NEW;  end  $$ LANGUAGE plpgsql;  </code></pre>  <p>Here's my trigger:</p>  <pre><code>CREATE TRIGGER cust_tsv_trigger BEFORE INSERT OR UPDATE  ON "Customers" FOR EACH ROW EXECUTE PROCEDURE on_customer_save_udpate_tsv(); </code></pre>  <p>However, the "Customers".tsv column is blank after inserts/updates.</p>  <p>When I run the bulk of the function manually, it works as expected.</p>  <pre><code>DO $$  declare     tsv_text text;  begin  SELECT string_agg(cust_text.text, ' ') as agg_text into tsv_text  FROM (SELECT concat("name", ' ', "phone") as text     FROM "Customers"     where "id" = 17     UNION     SELECT concat("firstName", ' ', "lastName", ' ', "phone", ' ', "email") as text     FROM "Contacts"     where "customerId" = 17    UNION     SELECT concat("streetLine1", ' ', "city", ' ', "state", ' ', "zip") as text     FROM "Addresses"     where "customerId" = 17) cust_text;      UPDATE "Customers"    SET tsv = to_tsvector(coalesce(tsv_text, ''))    WHERE "id" = 17; end  $$ LANGUAGE plpgsql;  </code></pre>  <p>I'm fairly new to postgres. What am I missing?</p>