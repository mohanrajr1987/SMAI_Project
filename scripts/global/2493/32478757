<p>I need to store data that can be represented in JSON as follows:</p>  <pre><code>Article{     Id: 1,     Category: History,     Title: War stories,      //Comments could be pretty long and also be changed frequently     Comments: "Nice narration, Reminds me of the difficult Times, Tough Decisions"       Tags: "truth, reality, history", //Might change frequently      UserSpecifiedNotes:[     //The array may contain different users for different articles     {         userid: 20,         note: "Good for work"     },     {         userid: 22,         note: "Homework is due for work"     }     ] } </code></pre>  <p>After having gone through different articles, denormalization of data is one of the ways to handle this data. But since common fields could be pretty long and even be changed frequently, I would like to not repeat it. What could be the other ways better ways to represent and search this data? Parent-child? Inner object?</p>  <hr>  <p>Currently, I would be dealing with a lot of inserts, updates and few searches. But whenever search is to be done, it has to be very fast. I am using NEST (.net client) for using elastic search. The search query to be used is expected to work as follows:</p>  <ol> <li>Input: <code>searchString</code> and a <code>userID</code></li> <li>Behavior: The Articles containing <code>searchString</code> in either Title, comments, tags or the note for the given <code>userID</code>sort in the order of relevance</li> </ol>