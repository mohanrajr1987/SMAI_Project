<p>I have a simulation of a dice which is very naively coded and it simply loads a pygame surface and displays six faces of a dice to simulate a spin.</p>  <p>The main function does all the housekeeping and on each frame it simply displays a different face of the dice.</p>  <pre><code>def main():     dice=[None]*6      #load all dice face images     dice[0]=  pygame.image.load('dice1.png')     dice[1]=  pygame.image.load('dice2.png')     dice[2]=  pygame.image.load('dice3.png')     dice[3]=  pygame.image.load('dice4.png')     dice[4]=  pygame.image.load('dice5.png')     dice[5]=  pygame.image.load('dice6.png')      WHITE = (255, 255, 255)     FPS = 1       WIDTH=400                        #width  of screen     HEIGHT=300                       #height of screen     dice_x= int( WIDTH / 2)          #location of dice     dice_y= int(HEIGHT / 2)     face=0       pygame.init()     fpsClock = pygame.time.Clock()                                      #initialise pygame     DISPLAYSURF = pygame.display.set_mode((400, 300), 0, 32)            #create a surface     pygame.display.set_caption('Dice Simulation')                while True: # main game loop                        #main loop         for event in pygame.event.get():             if event.type == QUIT:                 pygame.quit()                 sys.exit()          DISPLAYSURF.fill(WHITE)         if face&lt;6:              DISPLAYSURF.blit(dice[face], (dice_x -50, dice_y-50))             face +=1         else:             DISPLAYSURF.blit(dice[0], (dice_x -50, dice_y-50))          pygame.display.update()                        #update the screen         fpsClock.tick(FPS)  main() </code></pre>  <p><em>My question is:</em></p>  <p>1) Rather than load each image into a list manually as I have, is there a sprite function which can handle this for me built into pygame 2) and that handles the display as well thus reducing the naive code? Something like: sprite.next.display() or something like that?</p>