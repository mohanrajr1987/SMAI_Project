<p>I am trying to write a program based around a runner style, where the player has to make it to the other side of the program from the other side. I have been trying to make my collision work for a few days now and I am not sure entirely how to solve the problem. </p>  <p>Basically, when I run the program, I check whether the player is travelling downwards when he collides with a platform. If he does, then he stops falling, and gravity is set to 0. However I cannot seem to allow him to jump again, or other times its velocity remains constant. I have posted the entire code below and included some annotation to try to help people understand, I would very much appreciate any help that I can get!</p>  <pre><code>import pygame  pygame.init()  "Basic colours"  BLACK    = (   0,   0,   0)  WHITE    = ( 255, 255, 255)  BLUE     = (   0,   0, 255)  RED      = ( 255,   0,   0)  GREEN    = (   0, 255,   0)  "Detailed colours"  PURPLE   = ( 233,  48, 242)  BLUPRPL  = ( 128,  49, 224)  size = (1000, 400)  screen = pygame.display.set_mode(size)  pygame.display.set_caption("Runner")  done = False clock = pygame.time.Clock() global offground offground = False all_sprites_list = pygame.sprite.Group() mainwalls = [] levels = [] bool1 = True right = True  class Wall(object):      def __init__(self, pos):          mainwalls.append(self)          self.rect=pygame.Rect(pos[0], pos[1], 10, 10)  def drawMap():      x=0      y=0      for row in levels[0]:          for col in row:              if col=="w":                  wall=Wall((x,y))                x+=10          y+=10          x=0  levels.append([  "                                                                       ", "                                                                       ", "                                                                       ", "                                                                       ", "                                                                       ", "                                                                       ", "                                                                       ", "                                                                       ", "                                                                       ", "                                                                       ", "                                                                       ", "                                                                       ", "                                                                       ", "                                                                       ", "                                                                       ", "                                                                       ", "                                                                       ", "   wwwwwwww                                                            ", "                                                                       ", "                                                                       ", "   wwwwwwww                      wwww     wwww     wwww     wwww     ",   ])        class character(pygame.sprite.Sprite):        def __init__(self, colour, width, height):          super().__init__()          self.image = pygame.Surface([10,10])          self.rect = self.image.get_rect()          self.image.fill(colour)          self.speed = 6         self.gravity=0          self.change_y = 0         self.change_x = 0        def update(self):          #Gravity rule         player.change_y = player.change_y + self.gravity          #KEYDOWN CONTROLS         if event.type == pygame.KEYDOWN:              if event.key == pygame.K_LEFT: #left motion is negative                 self.change_x = -self.speed              if event.key == pygame.K_RIGHT: #right motion is positive                 self.change_x = self.speed              if event.key == pygame.K_UP and self.gravity != 0.35: #upwards motion is negative                 offground = True                 self.change_y = -7                 self.gravity = 0.35               if event.key == pygame.K_DOWN: #downwards motion is positive                 self.change_y = self.change_y + self.speed       #KEYUP CONTROLS         if event.type == pygame.KEYUP:          #THE LEFT DIRECTION - Left motion is negative              if event.key == pygame.K_LEFT and player.change_x == self.speed:                 player.change_x = player.change_x              elif event.key == pygame.K_LEFT:                 player.change_x = 0          #THE RIGHT DIRECTION - Right motion is positive              if event.key == pygame.K_RIGHT and player.change_x == -self.speed:                 player.change_x = player.change_x              elif event.key == pygame.K_RIGHT:             player.change_x = 0      characters=[]   #Creates the player          player = character(WHITE, 5, 5)  player.rect.x = 15  player.rect.y = 360  characters.append(player)  all_sprites_list.add(player)    drawMap()    ' -------- Main Program Loop ----------- '  while not done:      for event in pygame.event.get():          if event.type == pygame.QUIT:          done = True #Affected by gravity when offground is TRUE         if offground == True:     player.gravity = 0.35    #If he touches the ground remove the effect of gravity + Boundary contol if player.rect.y &gt; 360:     player.change_y = 0     player.rect.y = 360     player.gravity = 0   #Boundary control elif player.rect.y &lt; 40:     player.change_y = 0     player.rect.y = 40  #Velocity control else:     player.rect.y += player.change_y  #Boundary control if player.rect.x &gt; 999:     player.change_x = 0     player.rect.x = 998  #Boundary control elif player.rect.x &lt; 0:     player.change_x = 0     player.rect.x = 1  #Velocity control else:     player.rect.x += player.change_x   #Drawing code screen.fill(BLACK) pygame.draw.rect(screen, PURPLE, [0,40,1000,330])  for wall in mainwalls:      pygame.draw.rect(screen,BLACK,wall)   all_sprites_list.draw(screen)  for wall in mainwalls:     if player.rect.colliderect(wall.rect) and bool1 == True:         if player.change_y &gt; 0:             player.change_y = 0             player.rect.bottom = wall.rect.top             player.rect.y = player.rect.y + 1             offground = False          elif player.change_y &lt; 0:             offground = True          elif player.rect.y &lt; 360:             offground = True   #all_sprites_list.update()     for x in characters:         x.update()       pygame.display.flip()      #print(len(mainwalls))        clock.tick(60)  pygame.quit() </code></pre>  <p>All the collision happens here: </p>  <pre><code>for wall in mainwalls:     if player.rect.colliderect(wall.rect) and bool1 == True:         if player.change_y &gt; 0:             player.change_y = 0             player.rect.bottom = wall.rect.top             player.rect.y = player.rect.y + 1             offground = False          elif player.change_y &lt; 0:             offground = True          elif player.rect.y &lt; 360:             offground = True </code></pre>  <p>And 'offground' is a Boolean to help me know when gravity should be applied.</p>  <p>I know that I can write walls using a class, but I find that difficult, and was wondering whether what I am trying to achieve can be done in the way that I have designed it. </p>  <p>Many thanks if anyone can help me!</p>  <p>-lmaohelp</p>