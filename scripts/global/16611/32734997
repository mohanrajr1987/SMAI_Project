<pre><code>int iNbFichier = 0; while (File.Exists(folderName + "/" + newFile + ((iNbFichier &gt; 0) ? "_" + iNbFichier.ToString() : "") + ext)) {     iNbFichier++; }  // open the reader PdfReader reader = new PdfReader(oldFile); document = new Document(PageSize.A4, 5, 5, 120, 60);  // open the writer FileStream fs = new FileStream(folderName + "/" + newFile + ((iNbFichier &gt; 0) ? "_" + iNbFichier.ToString() : "") + ext, FileMode.Create, FileAccess.Write); PdfWriter writer = PdfWriter.GetInstance(document, fs); document.Open();  int numberPage = reader.NumberOfPages;                              // the pdf content PdfContentByte cb = writer.DirectContent;  for (int i = 1; i &lt;= reader.NumberOfPages; i++) {       // create the new page and add it to the pdf       PdfImportedPage page = writer.GetImportedPage(reader, i);       cb.AddTemplate(page, 0, 0);       if(i != numberPage) document.NewPage();       cb = writer.DirectContent; }  if (availableSpace &lt; 90) {       writer.NewPage();       cb = writer.DirectContent; }                              // select the font properties BaseFont bf = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, BaseFont.NOT_EMBEDDED); cb.SetColorFill(BaseColor.BLACK); cb.SetFontAndSize(bf, 8);  // write the text in the pdf content cb.BeginText(); string text = "Le " + DateTime.Now.ToString().Substring(0, 10); // put the alignment and coordinates here cb.ShowTextAligned(1, text, 455, 750, 90); cb.EndText();  // write the text in the pdf content cb.BeginText(); text = salarie.NOM + " " + salarie.PRENOM; // put the alignment and coordinates here cb.ShowTextAligned(1, text, 465, 750, 90); cb.EndText();  // write the text in the pdf content cb.BeginText(); text = "Signature :"; // put the alignment and coordinates here cb.ShowTextAligned(1, text, 475, 750, 90); cb.EndText();  iTextSharp.text.Image img = iTextSharp.text.Image.GetInstance(globale.EncodePhoto(this.signature)); //img.SetAbsolutePosition(485, 750);  img.Border = 0;  //Resize picture to fit 380x150 ratio if its bigger int intMaxWidth = 100; int intMaxHeight = 50; BitmapImage bmpMain = this.signature; if (bmpMain.Height &gt; intMaxHeight || bmpMain.Width &gt; intMaxWidth) {       double dblHeightRatio = Convert.ToDouble(intMaxHeight) / Convert.ToDouble(bmpMain.Height);       double dblWidthRatio = Convert.ToDouble(intMaxWidth) / Convert.ToDouble(bmpMain.Width);       double dblScaleRatio;        //Use the smaller ratio       if (dblHeightRatio &gt; dblWidthRatio)       {             dblScaleRatio = dblWidthRatio;       }       else       {             dblScaleRatio = dblHeightRatio;       }        int intNewHeight = Convert.ToInt32(bmpMain.Height * dblScaleRatio);       int intNewWidth = Convert.ToInt32(bmpMain.Width * dblScaleRatio);        img.ScaleAbsolute((float)intNewWidth,                                                     (float)intNewHeight); }  img.SetAbsolutePosition(480, 700); img.RotationDegrees = 90;  cb.AddImage(img);                              // close the streams and voil√° the file should be changed :) document.Close(); fs.Close(); writer.Close(); reader.Close(); </code></pre>  <p>If the available space into my table and footer is &lt; to 90 then I want to create a new page and put the signature on the last page which is created.</p>  <p>But my code don't works. Someone can help me to solve this ?</p>  <p>My application is for tablet so the duplicate treatment take too much resources to be used in this case.</p>