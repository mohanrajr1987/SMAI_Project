<p>I'm generating a PDF I'm trying to put in a footer in my PDF pages.  Part of it is stating Page numbers , like "Page 2 of 4".  I'm trying to get the total number of pages in the file.  To get the current page, it's just: </p>  <pre><code>doc.PageNumber </code></pre>  <p>So I've attepmted to use PdfReader to accomplish this.  </p>  <pre><code>  private int GetNumOfPDFpages(string fileName)         {             PdfReader pdfReader = new PdfReader(fileName); //Page Header Signature not found             int numOfPages = pdfReader.NumberOfPages;                  return numOfPages;         } </code></pre>  <p>Here's a snippet from the code that calls this function:</p>  <pre><code> private void ExportToPDF()         {             SaveFileDialog saveFileDialog = new SaveFileDialog();             saveFileDialog.Filter = "PDF Files|*.pdf";             if (saveFileDialog.ShowDialog() == DialogResult.OK)             {                 string fileName = saveFileDialog.FileName;                 int numOfPages = GetNumOfPDFpages(fileName);  //Calls my first function                 string directory = Path.GetDirectoryName(fileName);                 string file = Path.GetFileName(fileName);                 Document doc = new Document(iTextSharp.text.PageSize.LETTER, 10, 10, 42, 35);                 PdfWriter wri = PdfWriter.GetInstance(doc, new FileStream(Path.Combine(directory, file), FileMode.Create));                 wri.PageEvent = new ArdApp.Data.SignalPrototype.PDFattachmentHeader(signal, fileName,numOfPages);                 doc.Open(); </code></pre>  <p>I found a test function <a href="http://stackoverflow.com/questions/10621936/itextsharp-exception-pdf-header-signature-not-found/">here</a> to verify.</p>  <pre><code>private bool IsValidPdf(string filepath) {     bool Ret = true;         PdfReader reader = null;         try     {         reader = new PdfReader(filepath);     }     catch     {         Ret = false;     }      return Ret; } </code></pre>  <p>And sure enough, the return value is false;  I'm not converting from Word or using HTML.  The file length = 39;  </p>  <p>One solution I found was <a href="http://www.codeproject.com/Articles/14488/E-signing-PDF-documents-with-iTextSharp" rel="nofollow">here</a> for digitally signing pdf's , but I don't think that's what I'm looking for.  Users just click "Export To PDF", names it, the pdf gets generated using data, and saves the file.  What should I do or where should I look?  Thanks.</p>