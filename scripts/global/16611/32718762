<p>I want add dynamic number page one by one pages in the stringbuilder before the pdf document is generated whit itextsharp through stringBuilder and executereader. </p>  <p>The data is generate from sql query.</p>  <p>This is the void, all the document in pdf  is generated here: </p>  <pre><code>   protected void GeneraReporte_Click(object sender, EventArgs e)  {     using (SqlConnection cone = conexion.conectar())     {         using (SqlCommand comand = new SqlCommand("REPORTEALTASBAJAS", cone))         {             comand.CommandType = CommandType.StoredProcedure;             comand.Parameters.Add("@VALOR", SqlDbType.Int).Value = altas;[...]             cone.Open();             using (SqlDataReader dr = comand.ExecuteReader())             {                 if (dr.HasRows)                 {                     DataTable dt = new DataTable();                     dt.Columns.AddRange(new DataColumn[13] {                         new DataColumn("USUARIO"),[...]                         });                     dt.Load(dr); //load grid with sql                      using (StringWriter sw = new StringWriter())                     {                         using (HtmlTextWriter hw = new HtmlTextWriter(sw))                         {                             StringBuilder sb = new StringBuilder();                             sb.Append("&lt;br/&gt;");                             //HEADER                             sb.Append("&lt;table style='font-size: 8px;' align='center' width='95%' cellspacing='0' cellpadding='2'&gt;");                             sb.Append("&lt;tr&gt;");                             sb.Append("&lt;td align='left'&gt;");                             sb.Append(@"&lt;img height='50x' src=" + UAT + " /&gt;");                             sb.Append("&lt;/td&gt;");                             sb.Append("&lt;td align='center' colspan = '1'&gt;");                             sb.Append(@"&lt;img height='50x' align='center' src=" + logoCentro + " /&gt;");                             sb.Append("&lt;/td&gt;");                             sb.Append("&lt;td colspan='1' align='right'&gt;");                             sb.Append(@"&lt;img height='50x' align='right' src=" + FCAV + " /&gt;");                             sb.Append("&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;");                             sb.Append("&lt;tr &gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;");                             sb.Append("&lt;tr&gt;&lt;td align='left'&gt;&lt;b&gt;&lt;/b&gt;&lt;/td&gt;&lt;td align='center'&gt;                             sb.Append("REPORTE DE ALTAS Y BAJAS");                                                             sb.Append("&lt;/b&gt;&lt;/td&gt;&lt;td align='right'&gt;&lt;b&gt;&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;");                             sb.Append("&lt;tr &gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;");                             if (dr.Read())                             {                                 if (ddldepto.SelectedItem.Text == "--Todos--")                                 {                                 }                                 else                                 {                                     sb.Append("&lt;tr&gt;&lt;td align='left''&gt;&lt;b&gt;SRIA./COORD: " + dr["NOMBREC"].ToString() + "&lt;/b&gt;&lt;/td&gt;");                                     if (dr["NOMBRED"] == DBNull.Value)                                     {                                         sb.Append("&lt;td align='center'&gt;&lt;b&gt;&lt;/b&gt;&lt;/td&gt;");                                     }                                     else                                     {                                         sb.Append("&lt;td align='center'&gt;&lt;b&gt;DEPARTAMENTO: " + dr["NOMBRED"].ToString()+ "&lt;/b&gt;&lt;/td&gt;");                                     }                                     sb.Append("&lt;td align='right'&gt;&lt;b&gt;RESPONSABLE: " + dr["NOMBREP"].ToString() + "&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;");                                 }                             }                             sb.Append("&lt;/table&gt;");                             sb.Append("&lt;br/&gt;");                             //ITERATE                              sb.Append("&lt;table align='center' width='95%' style='' border='1'&gt;");                             sb.Append("&lt;tr&gt;");                             foreach (DataColumn column in dt.Columns)                             {                                 sb.Append("&lt;th style='font-size:9px;text-align: center;color:#000'&gt;");                                 sb.Append("&lt;b&gt;");                                 sb.Append(column.ColumnName);                                 sb.Append("&lt;/b&gt;");                                 sb.Append("&lt;/th&gt;");                             }                              sb.Append("&lt;/tr&gt;");                             foreach (DataRow row in dt.Rows)                             {                                 sb.Append("&lt;tr style='font-size: 8px;'&gt;");                                 foreach (DataColumn column in dt.Columns)                                 {                                     sb.Append("&lt;td width='100%'&gt;");                                     sb.Append(row[column]);                                     sb.Append("&lt;/td&gt;");                                 }                                 sb.Append("&lt;/tr&gt;");                             }                             sb.Append("&lt;/table&gt;");                             sb.Append("&lt;br/&gt;");                             //FOOTER                             sb.Append("&lt;br/&gt;");                             sb.Append("&lt;table align='center' width='95%'&gt;");                             sb.Append("&lt;tr&gt;&lt;td align='left'&gt;SECRETARIA ADMINISTRATIVA:_________________________________&lt;/td&gt;&lt;td align='left'&gt;CONTRALORIA INTERNA:______________________________&lt;/td&gt;&lt;/tr&gt;");                              sb.Append("&lt;/table&gt;");                              //EXPORTA EL STRING COMO PDF                             StringReader sr = new StringReader(sb.ToString());                             Document pdfDoc = new Document(PageSize.LEGAL.Rotate(), 10f, 10f, 10f, 0f);                             HTMLWorker htmlparser = new HTMLWorker(pdfDoc);                             PdfWriter writer = PdfWriter.GetInstance(pdfDoc, Response.OutputStream);                             pdfDoc.Open();                             htmlparser.Parse(sr);                             pdfDoc.Close();                             Response.ContentType = "application/pdf";                             Response.AddHeader("content-disposition", "attachment;filename=Reporte.pdf");                             Response.Cache.SetCacheability(HttpCacheability.NoCache);                             Response.Write(pdfDoc);                             Response.End();                         }                     }                 }                 else                 {                     notif.Visible = true;                 }             }         }     } } </code></pre>