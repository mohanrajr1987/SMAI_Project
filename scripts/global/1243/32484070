<p>I have an Objective-C app that is using NSUserAppleScriptTask to call some Applescript. The applescript is returning a string that can vary in size.</p>  <p>It works fine with the string is short. However, when it gets very long, it starts failing silently. If it attempts to return a string that is 40,000 characters long, the <code>completionHandler</code> will never be called, and the string <code>returned ...</code> is never printed. No messages to the log, no messages to the console. It is just never called.</p>  <p>A string of 30,000 characters works fine. I'm not sure where the precise cutoff is.</p>  <p>Has anyone seen this before? Is there a property or configuration setting I could change to increase this limit? Or do I just need to give up on NSUserAppleScriptTask?</p>  <h2>Code</h2>  <pre><code>NSURL* scriptURL = [[NSBundle mainBundle] URLForResource:@"ApplescriptHelper" withExtension:@"scpt"]; NSError* error; NSUserAppleScriptTask* task = [[NSUserAppleScriptTask alloc] initWithURL:scriptURL error:&amp;error]; NSLog(@"created task %@, error %@", task, error);  /* CREATE APPLE EVENT */ // taken from https://www.objc.io/issues/14-mac/sandbox-scripting/ ProcessSerialNumber psn = {0, kCurrentProcess}; NSAppleEventDescriptor *target = [NSAppleEventDescriptor descriptorWithDescriptorType:typeProcessSerialNumber bytes:&amp;psn length:sizeof(ProcessSerialNumber)];  NSAppleEventDescriptor *function = [NSAppleEventDescriptor descriptorWithString:@"test"];  NSAppleEventDescriptor *event = [NSAppleEventDescriptor appleEventWithEventClass:kASAppleScriptSuite eventID:kASSubroutineEvent targetDescriptor:target returnID:kAutoGenerateReturnID transactionID:kAnyTransactionID]; [event setParamDescriptor:function forKeyword:keyASSubroutineName]; /* END CREATE APPLE EVENT */  [task executeWithAppleEvent:event completionHandler:^(NSAppleEventDescriptor*resultEventDescriptor, NSError *error) {     NSLog(@"returned %@, error %@", resultEventDescriptor, error);      if (!resultEventDescriptor) {         NSLog(@"%s AppleScript task error = %@", __PRETTY_FUNCTION__, error);     } else {         NSLog(@"success")     } }]; </code></pre>  <h3>ApplescriptHelper.scpt</h3>  <pre><code>on test()     set str to ""     repeat 40000 times         set str to str &amp; "x"     end repeat     return str end fetchMusic </code></pre>