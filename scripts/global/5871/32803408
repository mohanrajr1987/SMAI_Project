<p>I have created a <code>Money</code> class that uses the following function to convert <code>Money</code> to a percent of its value. I am trying to create an overloaded operator to accomplish the same, however I get <code>Error: Expression must have integral or unscoped enum type</code> for <code>scaledCents</code> in the overloaded operator below; they are otherwise identical. How can this be amended? Thanks in advance.</p>  <pre><code>Money Money::percent(const Money&amp; amount, double percentage) const {     int amountToCents = amount.getCents() + amount.getDollars() * 100;     double pScaledMoney = amountToCents * percentage;     int scaledDollars = abs((round(fabs(pScaledMoney / 100))) / 100);     int scaledCents = abs((round(fabs(pScaledMoney / 100))) % 100);     if (pScaledMoney &lt; 0) {         scaledDollars = -scaledDollars;         scaledCents = -scaledCents;     }     return Money(scaledDollars, scaledCents); } </code></pre>  <p>Overloaded operator:</p>  <pre><code>const Money operator %(const Money&amp; amount, double percentage) {     int amountToCents = amount.getCents() + amount.getDollars() * 100;     double pScaledMoney = amountToCents * percentage;     int scaledDollars = abs((round(fabs(pScaledMoney / 100))) / 100);     int scaledCents = abs((round(fabs(pScaledMoney / 100))) % 100);     if (pScaledMoney &lt; 0) {         scaledDollars = -scaledDollars;         scaledCents = -scaledCents;     }     return Money(scaledDollars, scaledCents); }    </code></pre>