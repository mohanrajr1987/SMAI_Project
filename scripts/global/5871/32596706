<p>I'm trying to overload the <code>&lt;&lt; operator</code> for the display function call. Heres my code:</p>  <pre><code>#include &lt;iostream&gt; #include &lt;cstring&gt; using namespace std; // global variable const int MAX = 3;  // class definition  class CString{     char str[MAX+1]; public:     CString(char* param){        if(param == nullptr){        str[0] = '\0';        return;        }        strncpy(str,param,MAX);        str[MAX] = '\0';     }     void display(ostream&amp; os){        os &lt;&lt; str;     } };  // &lt;&lt; operator overloading  ostream&amp; operator &lt;&lt; (ostream&amp; os, CString&amp; cs){     static int call = 0;     os &lt;&lt; call &lt;&lt; ": ";     cs.display(os);     call++;     return os; }  void process(char* parm){     CString cs(parm);     // here is where my issue is     cs.display(cout);     cout &lt;&lt; endl; }  //---------------------------------------------------------------- int main(int argc,char *argv[]){      cout &lt;&lt; "Command Liine : ";     for(int arg = 0; arg &lt; argc ; arg++){         cout &lt;&lt; " " &lt;&lt; argv[arg];     }     cout &lt;&lt; endl;     if( argc == 1){         cout &lt;&lt; "Insufffiecentnumber of arguemnts (min1)" &lt;&lt; endl;         return 1;     }     cout &lt;&lt; " Maxium numver of characters stored: " &lt;&lt; MAX &lt;&lt; endl;     for(int arg = 1; arg &lt; argc; arg++){         process(argv[arg]);     }     return 0; } </code></pre>  <p>EDIT:  Here is the correct output and the output I have:</p>  <pre><code>  Correct:     Command Line : w1 oop345 btp305     Maximum number of characters stored : 3     0: oop     1: btp   Mine:     Command Line : w1 OOP345 DBS305     Maxium number of characters stored: 3     OOP     DBS </code></pre>  <p>I'm having an issue with my <code>&lt;&lt; operator</code> not working, I can't seem to figure it out. The <code>ostream&amp; operator&lt;&lt;(ostream&amp; os, CString&amp; cs)</code> does not seem to be loading its syntax.</p>  <p>Question:</p>  <p>Does anyone know where my mistake has been made?</p>