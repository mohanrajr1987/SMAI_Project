<p>I'm trying to implement overloading of the subscript operator in my doubly linked list class, but I am facing problems I've been unable to overcome by myself. I am also pretty new to C++.</p>  <p>This is what I have now.</p>  <p>Outtake from DList class:</p>  <pre><code>T &amp;operator[](int index) {     lookAt = root;     for (size_t i = 0; i &lt; index; i++) {         lookAt = lookAt-&gt;getNext();     }     return lookAt-&gt;getItem(); }  Node&lt;T&gt;* root; Node&lt;T&gt;* lookAt; Node&lt;T&gt;* temp; </code></pre>  <p>Node class:</p>  <pre><code>template &lt;class T&gt; class Node { public:  Node() {     this-&gt;setNext(nullptr);     this-&gt;setPrev(nullptr); }  Node *getNext() const {     return next; }  void setNext(Node *next) {     Node::next = next; }  Node *getPrev() const {     return prev; }  void setPrev(Node *prev) {     Node::prev = prev; }  T getItem() const {     return item; }  void setItem(T item) {     Node::item = item; }  private:  Node* next; Node* prev; T item; }; </code></pre>  <p>The error I keep getting is this: invalid initialization of non-const reference of type 'int&amp;' from an rvalue of type 'int' return lookAt[index].getItem();</p>  <p>Which leads me to believe there's some kind of problem with the way my item variable is referenced, or/and the return part of the overloading function.</p>  <p>Would appreciate any help/guidance with this.</p>  <p>Cheers</p>