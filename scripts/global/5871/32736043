<p>I wonder how <code>std::less</code> works in a map with keys that have no specific <code>operator &lt;</code> associated with them.</p>  <p>More specifically, I'm working with two libraries, each of them having their own specific implementation of points in 3D space:</p>  <pre><code>class Lib1Point { public:     double x;     double y;     double z;     // ctors, dtor and lots of fancy methods, but no further data members };  class Lib2Point { private:     double coords[3];  public:     // lots of other fancy methods, but also no further data members }; </code></pre>  <p>There is for neither class an <code>operator &lt;</code> defined.</p>  <pre><code>class SomeData; std::map&lt;Lib1Point, SomeData&gt; m_pointData1; std::map&lt;Lib2Point, SomeData&gt; m_pointData2; </code></pre>  <p>How would these two maps sort their keys ? Would points be sorted in the same order? Can I trust this order in some way or is it compiler specific ? In case I cannot trust it, what would be the easiest way to force a specific order without having access to the source code of the point classes ?</p>