<p>I've received an excercise to implement a generic Matrix class. One of the tasks is as follows: "Overload operator() which gets parameterse (unsigned int, unsigned int) twice, once as const and once as a non-const.".</p>  <p>Now, after much searching, I understood that this should be how their signatures:</p>  <pre><code>    T operator()(unsigned int rows, unsigned int colls) const; //cout &lt;&lt; "A" &lt;&lt; endl;     T &amp; operator()(unsigned int rows, unsigned int colls); //cout &lt;&lt; "B" &lt;&lt; endl; </code></pre>  <p>however, no matter which way I'm trying to call them only the second one is called:</p>  <pre><code>    int main()     {         Matrix&lt;int&gt; mat(2, 3);         mat(1, 1) = 3;         int i= (9 + mat(1, 1)) ;         i = mat(2, 1);         cout &lt;&lt; i &lt;&lt; endl;         if (i == mat(1, 2)) {}         int j = Matrix&lt;int&gt;(2, 2)(1, 1); //calls constructor and then subscription.     } </code></pre>  <p>The output will be:</p>  <pre><code>B B B 0 B B </code></pre>