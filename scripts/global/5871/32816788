<p>I have the following header file (Student.h)</p>  <pre><code>#ifndef STUDENT_H_ #define STUDENT_H_  #include &lt;string&gt; using namespace std;  class Student { int id; string name; string school;  public: /*  * Default ctor  */ Student();  /*  * Overloaded ctor  */ Student(int id, string name, string school);  /*  * Compares two students by ID for equality  */ bool operator == (const Student&amp; other) const;  /*  * Compares two students by ID for ordering  */ bool operator &lt; (const Student&amp; other) const; };  #endif /* STUDENT_H_ */ </code></pre>  <p>And here is my implementation (in another file called Student.cpp):</p>  <pre><code>#include "Student.h" #include &lt;string&gt; using namespace std;  bool Student::operator==(const Student&amp; other) const{ return(Student::id == other.id); }  bool Student::operator&lt;(const Student&amp; other) const{ return(Student::id &lt; other.id); } </code></pre>  <p>And then finally a main.cpp file which references both files:</p>  <pre><code>#include "Student.h" #include "Student.cpp" #include &lt;iostream&gt; using namespace std;   int main() { bool equal; Student s1(111, "Jeff", "Rockywood High"); Student s2(100, "Bobby", "Carmel High"); equal = (s1==s2); cout &lt;&lt; equal; } </code></pre>  <p>I am getting an error from xcode telling me that:</p>  <p>the Undefined symbols for architecture x86_64:</p>  <pre><code>Student::Student(int, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;)", referenced from:   _main in main.o ld: symbol(s) not found for architecture x86_64 </code></pre>