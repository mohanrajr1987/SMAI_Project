<p>I wanted to try to overload "&lt;&lt;" operator for an output stream and a custom class Article.</p>  <p>my.h</p>  <pre><code>#include &lt;iostream&gt; using namespace std; class Article {     string body;     string header;     string author; public:     Article();     void addHeader(const string&amp;);     void addBody(const string&amp;);     string getHeader();     string getBody(); }; </code></pre>  <p>my.cpp</p>  <pre><code>string Article::getHeader() {     return header; }   void Article::addBody(const string&amp; body) {     this-&gt;body = body; } void Article::addHeader(const string&amp; header) {     this-&gt;header = header; }  ostream&amp; operator&lt;&lt;(ostream&amp; os, Article&amp; article) {     return os &lt;&lt; article.getHeader() &lt;&lt; "\n\n" &lt;&lt; article.getBody(); } </code></pre>  <p>main.cpp</p>  <pre><code>#include &lt;iostream&gt; #include &lt;string&gt; #include "my.h" void main() {     char bye;     Article article = Article();     article.addBody("This is my article! thank you!");     article.addHeader("Header");     cout &lt;&lt; article.getHeader() &lt;&lt; "\n";     cout &lt;&lt; article.getBody() &lt;&lt; "\n";     cout &lt;&lt; article;     cin &gt;&gt; bye; } </code></pre>  <p>This code doesn't compile. VS 2013 says: </p>  <blockquote>   <p>binary '&lt;&lt;' : no operator found which takes a right-hand operand of type 'Article' (or there is no acceptable conversion)</p> </blockquote>  <p>If I remove the last line, it compiles successfully and the output of getHeader() and getBody() is as expected. They both return strings so it should be a piece of cake.</p>  <p>This problem seems very simple, however, as simple as it is I can't figure out what is happenning.</p>