<p>I'm trying to overload + to add two matrices together and then outputting it immediately. E.g:</p>  <pre><code>matrix&lt;int&gt; a, b; ... cout &lt;&lt; a + b &lt;&lt; endl;      //doesn't work matrix&lt;int&gt; c = a + b;      //works cout &lt;&lt; a &lt;&lt; endl;          //works  error: cannot bind 'std::ostream {aka std::basic_ostream&lt;char&gt;}' lvalue to 'std::basic_ostream&lt;char&gt;&amp;&amp;'| c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\ostream|602|error:   initializing argument 1 of 'std::basic_ostream&lt;_CharT, _Traits&gt;&amp; std::operator&lt;&lt;(std::basic_ostream&lt;_CharT, _Traits&gt;&amp;&amp;, const _Tp&amp;) [with _CharT = char; _Traits = std::char_traits&lt;char&gt;; _Tp = matrix&lt;int&gt;]'| </code></pre>  <p>I already overloaded &lt;&lt; but I'm not sure how to make it work together. Here's what I have so far: (&lt;&lt; works just fine with single matrices)</p>  <pre><code>template &lt;typename Comparable&gt; class matrix {     private:         size_t num_cols_;         size_t num_rows_;         Comparable **array_;      public:         friend ostream&amp; operator&lt;&lt; (ostream&amp; o, matrix&lt;Comparable&gt; &amp; rhs){             size_t c = rhs.NumRows();             size_t d = rhs.NumCols();             for (int i = 0; i &lt; c; i++){                 for (int j = 0; j &lt; d; j++){                     o &lt;&lt; rhs.array_[i][j] &lt;&lt; " ";                 }                 o &lt;&lt; endl;             }             return o;         }           matrix&lt;Comparable&gt; operator+ (matrix&lt;Comparable&gt; &amp; rhs){             matrix&lt;Comparable&gt; temp(num_rows_,num_cols_);             for (int i = 0; i &lt; num_rows_; i++){                 for (int j = 0; j &lt; num_cols_; j++){                     temp.array_[i][j] = array_[i][j] + rhs.array_[i][j];                 }             }             return temp;         }     } </code></pre>