<p>The route in Sinatra:</p>  <pre><code>post '/favorite' do   response['Access-Control-Allow-Origin'] = '*'   p response end </code></pre>  <p>The JS:</p>  <p>note: this isn't all of it, its the relevant bits. It leaves out how the favorited movie is created, but I promise that when I console log it it returns the expected, as noted below</p>  <pre><code>window.onload = function(){   var myApp = new App;   myApp.addEventListenerToFavoriteButton(); };  var App = function(){   this.myMovies = null };  App.prototype.addEventListenerToFavoriteButton = function(){   var self = this;   document.querySelector('body').addEventListener('click', function(event) {     if (event.target.tagName.toLowerCase() === 'button'){       self.favorite(event.target.id);     }   }); };  App.prototype.favorite = function(movieID){   var favoritedMovie = this.myMovies.movies[movieID]   console.log(JSON.stringify(favoritedMovie)) // {title":"Yo soy Betty la fea","year":"1999–2001","imdbID":"tt0233127","html":"&lt;h2&gt;Yo soy Betty, la fea&lt;/h2&gt;&lt;h3&gt;1999–2001&lt;/h3&gt;&lt;br&gt;&lt;button id='0'&gt;favorite&lt;/button&gt;"}   var url = "http://localhost:4567/favorite";   var xhr = new XMLHttpRequest();   xhr.open('POST', encodeURI(url), true);   xhr.setRequestHeader("content-type",'application/json');   xhr.onload = function() {       if (xhr.status === 200 ) {           console.log('tentative success!' + xhr.responseText); // tentative success!       }       else if (xhr.status !== 200) {           alert('Request failed.  Returned status of ' + xhr.status);       }   };   xhr.send(JSON.stringify(favoritedMovie)); }  var Movie = function(movieObject, index){    this.title = movieObject['Title'],    this.year = movieObject['Year'],    this.imdbID = movieObject['imdbID']    this.html = "&lt;h2&gt;" + this.title + "&lt;/h2&gt;&lt;h3&gt;" + this.year + "&lt;/h3&gt;&lt;br&gt;&lt;button id='" + index + "'&gt;favorite&lt;/button&gt;" } </code></pre>  <p>Response in Sinatra Console:</p>  <pre><code>= Sinatra (v1.4.6) has taken the stage on 4567 for development with backup from Thin &gt;&gt; Thin web server (v1.5.0 codename Knife) &gt;&gt; Maximum connections set to 1024 &gt;&gt; Listening on localhost:4567, CTRL+C to stop #&lt;Sinatra::Response:0x007f803b9061c8 @status=200, @header={"Content-Type"=&gt;nil, "Access-Control-Allow-Origin"=&gt;"*"}, @chunked=false, @writer=#&lt;Proc:0x007f803b905ea8@/Users/awhit012/.rvm/gems/ruby-2.1.2/gems/rack-1.6.4/lib/rack/response.rb:30 (lambda)&gt;, @block=nil, @length=0, @body=[]&gt; 127.0.0.1 - - [07/Sep/2015:17:34:17 -0700] "POST /favorite HTTP/1.1" 200 - 0.0102 </code></pre>  <p>I've tried adding </p>  <pre><code>content_type :json </code></pre>  <p>to the route. This makes one difference:</p>  <pre><code>@header={"Content-Type"=&gt;"application/json", "Access-Control-Allow-Origin"=&gt;"*"} </code></pre>  <p>which seems better to me, but the body is still empty. </p>