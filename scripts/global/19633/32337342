<p>I have two JSON objects, created using <code>JSON.parse</code>, that I would like to merge and aggregate. </p>  <p>I do not have the ability to store the data in a Mongo database and am unclear how to proceed.</p>  <p>The first JSON file contains the raw data:</p>  <pre><code> [        {         "sector": {             "url": "http://TestUrl/api/sectors/11110",             "code": "11110",             "name": "Education policy and administrative management"         },         "budget": 5742     },     {         "sector": {             "url": "http://TestUrl/api/sectors/11110",             "code": "11110",             "name": "Education policy and administrative management"         },         "budget": 5620     },       {         "sector": {             "url": "http://TestUrl/api/sectors/12110",             "code": "12110",             "name": "Health policy and administrative management"         },         "budget": 5524     }, ] </code></pre>  <p>The second JSON file contains the mappings that I require for the data merge operation:</p>  <pre><code>{     "Code (L3)":11110,     "High Level Code (L1)":1,     "High Level Sector Description":"Education",     "Name":"Education policy and administrative management",     "Description":"Education sector policy, planning and programmes; aid to education ministries, administration and management systems; institution capacity building and advice; school management and governance; curriculum and materials development; unspecified education activities.",     "Category (L2)":111,     "Category Name":"Education, level unspecified",     "Category Description":"The codes in this category are to be used only when level of education is unspecified or unknown (e.g. training of primary school teachers should be coded under 11220)."   }, {     "Code (L3)":12110,     "High Level Code (L1)":2,     "High Level Sector Description":"Health",     "Name":"Health policy and administrative management",     "Description":"Health sector policy, planning and programmes; aid to health ministries, public health administration; institution capacity building and advice; medical insurance programmes; unspecified health activities.",     "Category (L2)":121,     "Category Name":"Health, general",     "Category Description":""   },     {     "Code (L3)":99999,     "High Level Code (L1)":9,     "High Level Sector Description":"Unused Code",     "Name":"Extra Code",     "Description":"Shows Data Issue",     "Category (L2)":998,     "Category Name":"Extra, Code",     "Category Description":""   },   </code></pre>  <p>I would like to connect the data in the two files using the "code" value in the first file and the "Code (L3)" value in the second file. In SQL terms I would like to do an "inner join" on the files using these values as the connection point.</p>  <p>I would then like to aggregate all of the budget values from the first file for the "High Level Code (L1)" value from the second file to produce the following JSON object: </p>  <pre><code>   {      "High Level Code (L1)":1,      "High Level Sector Description":"Education",      "Budget”: 11362     },      {       "High Level Code (L1)":2,       "High Level Sector Description":"Health",       "Budget”: 5524      } </code></pre>  <p>This would be a very simple task with a database but I am afraid that this option is not available. We are running our site on Sinatra so any Rails-specific helper methods are not available to me.</p>  <p><strong>Update:</strong> I am now using real data for the inputs and I have found that there are multiple JSON objects in the mappings file that have "Code (L3)" values that do not map to any of the [Sector][code] values in the raw data file. </p>  <p>I have tried a number of workarounds (breaking the data into 2D arrays then trying to bring the resultant array back as a hash table) but I have been unable to get anything to work. </p>  <p>I have come back to the answer that I accepted for this question as it is a very elegant solution and I don't want to ask the same question twice - I just can't figure out how to make it ignore items from the mappings file when they don't match anything from the raw data file.   </p>