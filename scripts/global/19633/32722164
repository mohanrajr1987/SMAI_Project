<p>I searched Stack Overflow and the internet but haven't found an answer to this:</p>  <ol> <li>I have an EC2 instance running with lighttpd proxied to a Ruby Sinatra application running on Thin.</li> <li>I have a bucket on S3 that I am attempting to upload to through the Sinatra application, the file is on my local machine, and I am using the Sinatra application running on EC2 to transmit the file into my S3 bucket.</li> <li>I have my credentials setup in a .aws/credentials file as instructed by Amazon.</li> </ol>  <p>Each time I attempt to upload a file, whether through the Sinatra app or if I attempt to test a local file upload from the EC2 instance via the REPL, I receive the following error message:</p>  <pre><code>Aws::S3::Errors::InvalidAccessKeyId The AWS Access Key Id you provided does not exist in our records. </code></pre>  <p>I setup a CORS config:</p>  <pre><code>&lt;CORSConfiguration&gt;     &lt;CORSRule&gt;         &lt;AllowedOrigin&gt;*&lt;/AllowedOrigin&gt;         &lt;AllowedMethod&gt;PUT&lt;/AllowedMethod&gt;     &lt;/CORSRule&gt; &lt;/CORSConfiguration&gt; </code></pre>  <p>Here is my Ruby code:</p>  <pre><code>helpers do    def upload(filename, file, credentials)     bucket = 'BUCKET_NAME'     region = 'us-west-2'      s3 = Aws::S3::Resource.new(region: region, credentials: credentials)     obj = s3.bucket(bucket).object(filename)     obj.upload_file(file)   end  end  get '/' do   erb :index end  get '/upload' do   erb :upload end  post '/upload' do   file = params[:file][:tempfile]   filename = params[:file][:filename]   credentials = Aws::SharedCredentials.new   upload(filename, file, credentials)   redirect '/success' end </code></pre>  <p>Any assistance would be greatly appreciated!</p>