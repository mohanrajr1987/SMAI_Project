<p>what is this error means? </p>  <blockquote>   <p>An exception of type 'System.IO.FileNotFoundException' occurred in >xmppStart.exe but was not handled in user code   Additional information: Could not load file or assembly 'System.Windows, >Version=2.0.5.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e' or one of >its dependencies. The system cannot find the file specified.</p> </blockquote>  <pre><code>namespace xmppStart {     public sealed partial class MainPage : Page     {         public XMPPClient ObjXmppClient { get; set; }         public XMPPConnection ObjXmppCon { get; set; }         public string username = "sree";         public string password = "sree";         public readonly string server = "taurus";         private Boolean IsXmppSuccess { get; set; }         //private string hostname          public MainPage()         {             this.InitializeComponent();              this.NavigationCacheMode = NavigationCacheMode.Required;         }         // XMPPClient ObjXmppClient = new XMPPClient();        // XMPPConnection ObjXmppCon = new XMPPConnection();          private void IsXmppValid()         {             //initializing the xmpp client with credentials                 ObjXmppClient = new XMPPClient();//HERE I AM GETTING ERROR!!              ObjXmppClient.JID = username + "@" + server;             ObjXmppClient.Password = password;             ObjXmppClient.Server = server;              ObjXmppClient.AutoReconnect = true;             ObjXmppClient.RetrieveRoster = true;             ObjXmppClient.PresenceStatus = new PresenceStatus() {                  PresenceType = PresenceType.available,                  IsOnline = true              };             ObjXmppClient.AutoAcceptPresenceSubscribe = true;             ObjXmppClient.AttemptReconnectOnBadPing = true;             ObjXmppCon = new XMPPConnection(ObjXmppClient);             ObjXmppCon.Connect();             ObjXmppClient.Connect();              //initializing the xmpp connection              ObjXmppCon.OnAsyncConnectFinished += ObjXmppCon_OnAsyncConnectFinished;             ObjXmppClient.OnStateChanged += new EventHandler(xMPPClient_OnStateChanged);         }          void ObjXmppCon_OnAsyncConnectFinished(xmedianet.socketserver.SocketClient client, bool bSuccess, string strErrors)         {             IsXmppSuccess = client.Connected;         }          public async void xMPPClient_OnStateChanged(object sender, EventArgs e)         {             switch (ObjXmppClient.XMPPState)             {                 case XMPPState.Ready:                      if (IsXmppSuccess)                     {                         await     Dispatcher.RunAsync(Windows.UI.Core.CoreDispatcherPriority.Normal, () =&gt;                         {                             Frame.Navigate(typeof(Logedin));                         });                     }                     else                     {                         await Dispatcher.RunAsync(Windows.UI.Core.CoreDispatcherPriority.Normal, () =&gt;                         {                             MessageDialog msgbox = new MessageDialog("Check server name/IpAddress");                         });                     }                     break;                  case XMPPState.AuthenticationFailed: await Dispatcher.RunAsync(Windows.UI.Core.CoreDispatcherPriority.Normal, () =&gt;                 {                     MessageDialog msgbox = new MessageDialog("Enter valid username and password");                     return;                 });                  break;             }         }          protected override void OnNavigatedTo(NavigationEventArgs e)         {         }          private void Button_Click(object sender, RoutedEventArgs e)         {             if (txtname.Text == string.Empty)             {                 MessageDialog msgbox = new MessageDialog("enter user name");                 return;             }             if (txtpassword.Text == string.Empty)             {                 MessageDialog msgbox = new MessageDialog("enter password");                 return;             }              username = txtname.Text;             password = txtpassword.Text;             IsXmppValid();         }     }  } </code></pre>