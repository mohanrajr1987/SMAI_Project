<p>I develop an <strong>Universal app</strong> that uses the <strong>MVVM-Lght toolkit</strong>.</p>  <p>On a page, I show a list of comments. I would like that an user could add a new comment, and edit or delete its existing comments.</p>  <p>For adding new comment, I use an <strong>AppBarButton</strong> on the <strong>CommandBar</strong> and it works fine.</p>  <p>For editing and deleting the existing comments, I would like to display a <strong>MenuFlyout</strong> that offers 2 items: "<strong><em>edit</em></strong>" and "<strong><em>delete</em></strong>". I can display the <strong>MenuFlyout</strong> but nothing happens when I click on its items...</p>  <p><a href="http://i.stack.imgur.com/kHbj4.jpg" rel="nofollow"><img src="http://i.stack.imgur.com/kHbj4.jpg" alt="enter image description here"></a></p>  <p>Here is my concerned <strong>xaml</strong> code:</p>  <pre><code>    &lt;ListView x:Name="myCommentaires"                ItemsSource="{Binding Comments}"               IsItemClickEnabled="True"               SelectionMode="Single"               SelectedItem="{Binding SelectedComment}"               ContinuumNavigationTransitionInfo.ExitElementContainer="True"&gt;         &lt;ListView.ItemTemplate&gt;             &lt;DataTemplate&gt;                 &lt;StackPanel Margin="0,0,19,12"                             HorizontalAlignment="Stretch"&gt;                     &lt;Grid&gt;                         &lt;Grid.ColumnDefinitions&gt;                             &lt;ColumnDefinition Width="*" /&gt;                             &lt;ColumnDefinition Width="*" /&gt;                         &lt;/Grid.ColumnDefinitions&gt;                         &lt;!-- 1. Author --&gt;                         &lt;TextBlock Grid.Column="0"                                    Text="{Binding name}"                                    HorizontalAlignment="Stretch" VerticalAlignment="Center"                                    TextAlignment="Left"                                    Margin="0"                                     Foreground="{StaticResource ThemeBrush}"                                    Style="{StaticResource ListViewItemSubheaderTextBlockStyle}" /&gt;                         &lt;!-- 2. Date --&gt;                         &lt;TextBlock Grid.Column="1"                                    Text="{Binding date, Converter={StaticResource DateToStringConverter}}"                                    HorizontalAlignment="Stretch" VerticalAlignment="Center"                                    TextAlignment="Right"                                    Margin="0"                                     Foreground="{StaticResource ThemeBrush}"                                    Style="{StaticResource ListViewItemSubheaderTextBlockStyle}" /&gt;                     &lt;/Grid&gt;                     &lt;!-- 3. Content --&gt;                     &lt;TextBlock Text="{Binding content}"                                TextAlignment="Left"                                TextWrapping="Wrap"                                Margin="0"                                 Foreground="Black"                                FontSize="20"                                Style="{StaticResource GroupHeaderTextBlockStyle}" /&gt;                     &lt;!-- MenuFlyout - with Commands --&gt;                     &lt;FlyoutBase.AttachedFlyout&gt;                         &lt;MenuFlyout&gt;                             &lt;MenuFlyout.MenuFlyoutPresenterStyle&gt;                                 &lt;Style TargetType="MenuFlyoutPresenter"&gt;                                     &lt;Setter Property="Background" Value="{StaticResource ThemeBrush}"/&gt;                                 &lt;/Style&gt;                             &lt;/MenuFlyout.MenuFlyoutPresenterStyle&gt;                             &lt;MenuFlyoutItem Text="Edit"                                             Command="{Binding EditCommentCommand}"/&gt;                             &lt;MenuFlyoutItem Text="Delete"                                              Command="{Binding DeleteCommentCommand}"/&gt;                         &lt;/MenuFlyout&gt;                     &lt;/FlyoutBase.AttachedFlyout&gt;                     &lt;!-- Behavior --&gt;                     &lt;i:Interaction.Behaviors&gt;                         &lt;core:EventTriggerBehavior EventName="Tapped"&gt;                             &lt;local:OpenFlyoutAction /&gt;                         &lt;/core:EventTriggerBehavior&gt;                     &lt;/i:Interaction.Behaviors&gt;                 &lt;/StackPanel&gt;             &lt;/DataTemplate&gt;         &lt;/ListView.ItemTemplate&gt;         &lt;ListView.ItemContainerStyle&gt;             &lt;Style TargetType="ListViewItem"&gt;                 &lt;Setter Property="HorizontalContentAlignment" Value="Stretch" /&gt;             &lt;/Style&gt;         &lt;/ListView.ItemContainerStyle&gt;     &lt;/ListView&gt; </code></pre>  <p>And its attached <strong>code-behind</strong>:</p>  <pre><code>    public class OpenFlyoutAction : DependencyObject, IAction     {         public object Execute(object sender, object parameter)         {             FlyoutBase.ShowAttachedFlyout((FrameworkElement)sender);             return null;         }     } </code></pre>  <p>And this is my <strong>ViewModel</strong> code:</p>  <pre><code>    // RelaydCommands declarations     ...     public RelayCommand AddCommentCommand { get; set; }     public RelayCommand EditCommentCommand { get; set; }     public RelayCommand DeleteCommentCommand { get; set; }     ...      // RelayCommands are affected in the constructor     ...     AddCommentaireCommand = new RelayCommand(AddCommentaire);     EditCommentaireCommand = new RelayCommand(EditCommentaire);     DeleteCommentaireCommand = new RelayCommand(DeleteCommentaire);     ...      // Methods related to the RelayCommands     private async void AddComment()     {         NavigationService.NavigateTo&lt;EditCommentViewModel&gt;(this, new object[] { _article, _titleStructure.Title }, true);      }      private async void EditComment()     {         NavigationService.NavigateTo&lt;EditCommentViewModel&gt;(this, new object[] { _article, _titleStructure.Title, SelectedComment }, true);     }      private async void DeleteComment()     {         var test = SelectedComment;     } </code></pre>  <p>I don't meet any problem with the "<strong><em>AddComment</em></strong>" method, which is called from the <strong>AppBarButton</strong>, but I never enter in the methods "<strong><em>EditComment</em></strong>" and "<strong><em>DeleteComment</em></strong>" whereas I place breakpoints.</p>  <p>I also tried to replace the <strong>Command</strong> of the <strong>MenuFlyoutItem</strong> by a <strong>CallMethodAction</strong>, but it doesn't change anything:</p>  <pre><code>    &lt;!-- MenuFlyout - with CallMethodAction --&gt;     &lt;FlyoutBase.AttachedFlyout&gt;         &lt;MenuFlyout&gt;             &lt;MenuFlyout.MenuFlyoutPresenterStyle&gt;                 &lt;Style TargetType="MenuFlyoutPresenter"&gt;                     &lt;Setter Property="Background" Value="{StaticResource ThemeBrush}"/&gt;                 &lt;/Style&gt;             &lt;/MenuFlyout.MenuFlyoutPresenterStyle&gt;             &lt;MenuFlyoutItem Text="Edit"&gt;                 &lt;i:Interaction.Behaviors&gt;                     &lt;core:EventTriggerBehavior EventName="Click"&gt;                         &lt;core:CallMethodAction MethodName="EditComment" /&gt;                     &lt;/core:EventTriggerBehavior&gt;                 &lt;/i:Interaction.Behaviors&gt;             &lt;/MenuFlyoutItem&gt;             &lt;MenuFlyoutItem Text="Delete"&gt;                 &lt;i:Interaction.Behaviors&gt;                     &lt;core:EventTriggerBehavior EventName="Click"&gt;                         &lt;core:CallMethodAction MethodName="DeleteComment" /&gt;                     &lt;/core:EventTriggerBehavior&gt;                 &lt;/i:Interaction.Behaviors&gt;             &lt;/MenuFlyoutItem&gt;         &lt;/MenuFlyout&gt;     &lt;/FlyoutBase.AttachedFlyout&gt; </code></pre>  <p><strong><em>=> Could anyone say me what is wrong?</em></strong></p>