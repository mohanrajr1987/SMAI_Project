<p>I develop au <strong>Universal App</strong> using <strong>MVVM-Light</strong>.</p>  <p>On a page, there is a list of comments coming from a WebService. If the current user is the author of a comment, I show a FlyoutMenu allowing him to "Edit" or "Delete" its comment. There is also a AppBarButton for adding a new comment:</p>  <p><a href="http://i.stack.imgur.com/GBDyx.jpg" rel="nofollow"><img src="http://i.stack.imgur.com/GBDyx.jpg" alt="enter image description here"></a></p>  <p><strong><em>My problem is that the comments are never refreshed after the first load of this page...</em></strong></p>  <p>I use a "<strong><em>LoadComments()</em></strong>" method in the <strong>ViewModel</strong> that allows me to get the comments when I arrive on the page, but also after editing, deleted or added an item:</p>  <pre><code>private async void LoadComments() {     List&lt;Comment&gt; commentsWS = await WebServiceGetCommentList();     if (commentsWS != null)         Comments = new ObservableCollection&lt;Commentaire&gt;(commentsWS); } </code></pre>  <p>This method so calls another method "<strong>WebServiceGetCommentList()</strong>" that prepares the call to the WebService, in the same <strong>ViewModel</strong>:</p>  <pre><code>private async Task&lt;List&lt;Comment&gt;&gt; WebServiceGetCommentList() {     // Parameters     List&lt;KeyValuePair&lt;string, string&gt;&gt; parametres = new List&lt;KeyValuePair&lt;string, string&gt;&gt;();     parametres.Add(new KeyValuePair&lt;string, string&gt;("option", _currentUserAccount.option));     parametres.Add(new KeyValuePair&lt;string, string&gt;("id_article", Article.id_article.ToString()));      // Call WebService and deserialize     Exception custEx = null;     try     {         List&lt;Comment&gt; comments = await WebServices.GetCommentList(_currentUserAccount.url, parametres, "");         return comments;     }     // Exceptions      catch (Exception e)     {         ...      }     return null; } </code></pre>  <p>I then go in the "<strong><em>GetComments()</em></strong>" method on the "<strong>WebServices</strong>" class: </p>  <pre><code>public static async Task&lt;List&lt;Comment&gt;&gt; GetCommentList(String url, List&lt;KeyValuePair&lt;String, String&gt;&gt; parametres, String protocol) {     // Call WebService and deserialize     var response = await JSONParser.getJSONFromUrl(url, parametres, "");     List&lt;Comment&gt; comments = new List&lt;Comment&gt;();     WsResponse wsResponse = ManageWsReponse(response, Constants.WebServiceTask.GetCommentList.Value);     try     {         WsResponseResult wsResponseResult = JsonConvert.DeserializeObject&lt;WsResponseResult&gt;(wsResponse.data.ToString());         comments = JsonConvert.DeserializeObject&lt;List&lt;Comment&gt;&gt;(wsResponseResult.result.ToString());         return comments;     }     catch (Exception e)     {         throw new DeserializeException("Deserialize exception", e, DateTime.Now, "Comment");     } } </code></pre>  <p>This method calls the "<strong><em>getJSONFromUrl()</em></strong>" method in the "<strong>JSONParser</strong>" class that launches the "<strong>client.GetAsync()</strong>":</p>  <pre><code>public static async Task&lt;string&gt; getJSONFromUrl(String url, List&lt;KeyValuePair&lt;String, String&gt;&gt; parameters, String protocol) {     var client = new HttpClient();      // Preparing URI     string sParameters = null;     int i = 1;     foreach (var param in parameters)     {         sParameters += param.Key + "=" + param.Value;         sParameters += i != parameters.Count ? "&amp;" : string.Empty;         i++;     }     var uri = new Uri(url + "?" + sParameters);      // Calls the WebService     var response = await client.GetAsync(uri, HttpCompletionOption.ResponseHeadersRead);      // Code and results     var statusCode = response.StatusCode;     // EnsureSuccessStatusCode throws exception if not HTTP 200     response.EnsureSuccessStatusCode();     // responseText     var responseText = await response.Content.ReadAsStringAsync();     return responseText; } </code></pre>  <p>I can add, delete or edit a comment with success, but when I'm back to this method "<strong><em>LoadComments()</em></strong>", the changes are not taken into account, and I get the same list than  at the first call...</p>  <p>I also placed breakpoints in the "<strong><em>GetJSONFromURL</em></strong>()" method and I don't see the added, deleted or edited comments in the response var.</p>  <p>In the same time, if I copy the URI in a brower, for calling the same WebService with the same parameters, the changes are taken into account.</p>  <p><strong><em>=> I think so there is a caching on client.GetAsync(), but I don't see how to desactive it, or force it to refresh datas</em></strong>...</p>  <p>I tried this solution <a href="http://www.prabathsl.com/2014/11/httpclient-caching.html" rel="nofollow">httpclient-caching</a> that doesn't work for me.</p>  <p>I think so that there is cache managing cause when I </p>