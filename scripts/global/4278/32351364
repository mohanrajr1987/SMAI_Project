<p>I'm coming from the ASP.NET MVC world where my folder structure would be:</p>  <pre><code>+ProjectName     -App_Data (databases, xml's and such data)     -App_Start (function bundles, routes, etc.)     -Controllers         -SampleController.cs     -Models (though I'd usually call models from other projects)     -Views         -Sample             -index.cshtml     -Scripts     web.config     etc. </code></pre>  <p>I'm trying to get into PHP Symfony2, right now. I've read some of the documentation and read a tutorial or two, none of which answer this one question that I keep asking myself.</p>  <p>From my understanding bundles are pieces of the web application that I can utilize in the current project as well as other projects I make. They, as one, fill a certain web application function.</p>  <p>I used the command to generate a bundle:</p>  <pre><code>$ php app/console generate:bundle --namespace=Sample/FooBundle --format=yml </code></pre>  <p>and I've got some folders and sub-folders and whatnot, but also a Resource folder, which is what confused me.</p>  <p>So what does the web application read first? How does the controller search for the needed view? Does it first go to</p>  <pre><code>src/Sample/FooBundle/Resources/views/Default/index.html.twig </code></pre>  <p>or does it go to</p>  <pre><code>app/Resources/views/default/index.html.twig </code></pre>  <p>Is it smart to keep the views in bundles, or in the 'global' app folder? I've also noticed configurations are being made inside the bundle (which, I suspect have a higher hierarchy than the app 'global' ones). For instance, bundle <code>AppBundle</code> doesn't have its own views and configurations, which made me wonder if it's smart to make views inside bundles in the first place.</p>  <p>If I could get a simple answer, or at least a resource about it that could explain the reason behind all of this, I'd be <strong>very</strong> thankful.</p>