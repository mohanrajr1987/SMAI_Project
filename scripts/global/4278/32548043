<p>I want to convert this 8 Byte structure:</p>  <pre><code>nt!_POOL_HEADER    +0x000 PreviousSize     : Pos 0, 9 Bits    +0x000 PoolIndex        : Pos 9, 7 Bits    +0x002 BlockSize        : Pos 0, 9 Bits    +0x002 PoolType         : Pos 9, 7 Bits    +0x000 Ulong1           : Uint4B    +0x004 PoolTag          : Uint4B    +0x004 AllocatorBackTraceIndex : Uint2B    +0x006 PoolTagHash      : Uint2B </code></pre>  <p>Into a C structure like this:</p>  <pre><code>struct _POOL_HEADER {     PreviousSize;    // what SIZE do i Need to specify here ?     PoolIndex;       // what SIZE do i Need to specify here ?     BlockSize;       // what SIZE do i Need to specify here ?     PoolType;        // what SIZE do i Need to specify here ?     unsigned int Ulong1;     unsigned int PoolTag;     unsigned short AllocatorBackTraceIndex;     unsigned short PoolTagHash; }; </code></pre>  <p>I know this can be done with bitfields but how? This is on x86.</p>