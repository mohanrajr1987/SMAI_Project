<p>This is so simple but I don't know what I'm doing wrong. </p>  <p>Here is my code: Main.cpp</p>  <pre><code>#include &lt;cstdlib&gt; #include &lt;iostream&gt;  #include "throttle.h"  using namespace std;  int main(int argc, char** argv) {      throttle example;     example.shut_off();     int in = 2;     example.shift(4);     cout &lt;&lt; "At position 2, the flow is " &lt;&lt; example.flow() &lt;&lt; endl;  } </code></pre>  <p>throttle.h</p>  <pre><code>#ifndef THROTTLE_H #define THROTTLE_H  class throttle { public:     //throttle();     //throttle(const throttle&amp; orig);     //virtual ~throttle();      void shift(int amount);     bool is_on();     double flow() const;     void shut_off();   private:     int position;  };  #endif </code></pre>  <p>And throttle.cpp</p>  <pre><code>#include "throttle.h" /* throttle::throttle() { }  throttle::throttle(const throttle&amp; orig) { }  throttle::~throttle() { } */ //Pre: //POST: Returns double position / total positions double throttle::flow() const {     return double (position / 6); }  bool throttle::is_on() {     return (flow() &gt; 0); }  void throttle::shift(int amount) {      position += amount;      if (amount &gt; 6)         position = 6;     else if (amount &lt; 0)         position = 0; }  void throttle::shut_off() {     position = 0;     } </code></pre>  <p>My problem is not knowing C++ obviously, but in my main, why doesn't my shift method work? Function is probably the right word instead of method. </p>  <p>My logic is:</p>  <p>Call shut_off method to set the position to 0.</p>  <p>Call the shift method to set the position to 4. Not returning anything, just setting the position to 4. But it's not doing it. </p>  <p>Any one fluent in C++, can you also point out any other "bad" coding practices as well. (I'm aware I didn't write pre and post conditions in the implementation)</p>