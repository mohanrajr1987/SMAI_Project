<p>I just want to set 0 to a pointer to a structure like this:</p>  <pre><code>#include &lt;stdio.h&gt; #include &lt;string.h&gt; struct apple {      int f;      int d;      size_t tree; }; struct apple *app; int main(void) {  memset(&amp;app,0,sizeof(app));  app-&gt;tree = 1;  app-&gt;d = 4;  app-&gt;f = 2;  printf("%d %d %lu\n",app-&gt;d, app-&gt;f, app-&gt;tree); } </code></pre>  <p>It compiles fine with <code>gcc -o foo foo.c</code> but when I run I get Segmentaion fault. i tried <code>memset(app, 0 , sizeof(app));</code> but it complains, I tried <code>memset(*app, 0,sizeof(app));</code>also complains. This one compiles fine but I still get seg fault<code>memset((void *) &amp;app, 0, sizeof(app));</code></p>  <p>What should i do to set this pointer to struct <strong>0</strong>? If I have just a simple struct like <strong>this</strong>: <code>struct apple app;</code><em>(without pointer)</em> it should go like <code>memset(&amp;app, 0, sizeof(app));</code></p>  <p>Because it's a pointer and memset has the first parameter a <code>void*</code> , why isn't working like passing just a simple variable without the <strong>"&amp;"</strong> thing?</p>