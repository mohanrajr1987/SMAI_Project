<p>We have a single web application that handles different URL formats and returns the same content in a different formats.</p>  <pre><code>/dosomething /foo/dosomething (returns mobile content) /bar/dosomething (returns html for a browser) </code></pre>  <p>See the sample Virtual Host below.</p>  <p>For Apache 2.2, I used Rewrite Rules to redirect <a href="http://www.foobarbaz.net/dosomething" rel="nofollow">http://www.foobarbaz.net/dosomething</a> to the Location "/baz/" which functioned as I expected.</p>  <p>The "PT" flag on the RewriteRule passed the URI back to Apache and allowed us to serve content from the "baz" location.</p>  <pre><code>&lt;VirtualHost *:80&gt;     ServerName www.foobarbaz.net     RewriteEngine On      #Block requests for favicon     RewriteRule ^/favicon.ico$  - [F]       # If the requested URI is NOT located in bar or foo     # Prepend an /baz to everything that does not already starts with it     # and force the result to be handled by the next URI-handler ([PT])     RewriteCond %{REQUEST_URI} !^/bar/.*$     RewriteCond %{REQUEST_URI} !^/foo/.*$     RewriteRule ^/(.*) /baz/$1 [PT,QSA]      &lt;Location "/baz/"&gt;         RequestHeader append ABC-Request-Origin "/baz"         ProxyPass ajp://localhost:8009/webapp/         ProxyPassReverse /         ProxyPassReverseCookiePath /webapp /     &lt;/Location&gt;     &lt;Location "/bar/"&gt;         RequestHeader append ABC-Request-Origin "/bar"         ProxyPass ajp://localhost:8009/webapp/         ProxyPassReverse /         ProxyPassReverseCookiePath /webapp /bar/     &lt;/Location&gt;     &lt;Location "/foo/"&gt;         RequestHeader append ABC-Request-Origin "/foo"         ProxyPass ajp://localhost:8009/webapp/         ProxyPassReverse /         ProxyPassReverseCookiePath /webapp /foo/     &lt;/Location&gt; &lt;/VirtualHost&gt; </code></pre>  <p>For Apache 2.4.12, the Rewrite Rules do not function in the same manner and Apache tries to find the content on the file system.  Apache looks for a "baz" directory which does not exist.</p>  <p>I tried adding another location "/" and removing the rewrite rules (see below).</p>  <p>The docs indicate that for overlapping Locations, the least specific should go first.</p>  <p><a href="http://httpd.apache.org/docs/current/sections.html" rel="nofollow">http://httpd.apache.org/docs/current/sections.html</a></p>  <p>This works for "/", but not for "/foo/" or "/bar".  It seems that "/" is always used and "foo" and "bar" are always included in the request to the p.roxy</p>  <pre><code>&lt;VirtualHost *:80&gt;     ServerName www.foobarbaz.net     &lt;Location "/"&gt;         RequestHeader append ABC-Request-Origin "/baz"         ProxyPass ajp://localhost:8009/webapp/         ProxyPassReverse /         ProxyPassReverseCookiePath /webapp /     &lt;/Location&gt;     &lt;Location "/bar/"&gt;         RequestHeader append ABC-Request-Origin "/bar"         ProxyPass ajp://localhost:8009/webapp/         ProxyPassReverse /         ProxyPassReverseCookiePath /webapp /bar/     &lt;/Location&gt;     &lt;Location "/foo/"&gt;         RequestHeader append ABC-Request-Origin "/foo"         ProxyPass ajp://localhost:8009/webapp/         ProxyPassReverse /         ProxyPassReverseCookiePath /webapp /foo/     &lt;/Location&gt; &lt;/VirtualHost&gt; </code></pre>  <p>Does anyone have suggestions on how to improve this setup?  Or suggestions on handling requests to "/" differently that "/foo" or "/bar"</p>  <p>Thanks for any help.</p>  <p>Jim</p>