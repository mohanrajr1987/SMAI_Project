<p>Given a static library that you can inspect with</p>  <pre><code>$nm libgtest.a </code></pre>  <p>Why would the following build fail to find symbols?</p>  <pre><code>g++ -ISomePathToGTest -lgtest SomeUnitTests.cpp </code></pre>  <p>One of the many undefined references looks like this:</p>  <pre><code>SomeUnitTests.cpp:(.text+0x28): undefined reference to `testing::InitGoogleTest(int*, char**)' </code></pre>  <p>But I have these lines from the 'nm' command above:</p>  <pre><code>000000000000ffca T _ZN7testing14InitGoogleTestEPiPPc 000000000000ffca T _ZN7testing14InitGoogleTestEPiPPw </code></pre>  <p>Which, according to the manual for nm, the 'T' means that this system is in the text section of the library I'm inspecting. I'm certain it's not picking this library up from anywhere else, and that it is finding this library I'm using with that build command.</p>  <p>Building just the object for SomeUnitTests.cpp like this:</p>  <pre><code>g++ -c -ISomePathToGTest SomeUnitTests.cpp </code></pre>  <p>And inspecting it with nm shows only this entry below for a search on InitGoogleTest:</p>  <pre><code>U _ZN7testing14InitGoogleTestEPiPPc </code></pre>  <p>So, they should match right? But, Focusing on how the linker is matching symbols and not that I'm working with gtest, why is it failing?</p>