<p>I'm trying to use preprocessor directives in C++ for avoiding to compile code that requires a .lib, in case the library cannot be linked.</p>  <p>My .pro file contains:</p>  <pre><code>INCLUDEPATH += "C:/Program Files/Windows Kits/8.0/Include/um" LIBS += -L"C:/Program Files/Windows Kits/8.0/Lib/win8/um/x86" -l"winscard" </code></pre>  <p>and my directives are of the form:</p>  <pre><code>#ifdef _WINSCARD_H_ // do something #endif </code></pre>  <p>or</p>  <pre><code>#ifndef _WINSCARD_H_ // do something #endif </code></pre>  <p>This <strong>winscard</strong> comes with <a href="http://www.microsoft.com/en-us/download/details.aspx?id=8279" rel="nofollow">this windows sdk</a> and I can definitely use its functionalities. The problems arise when I try to restrict the compilation based on these conditional directives.</p>  <hr>  <p>Code compiles fine when using</p>  <pre><code>INCLUDEPATH += "C:/Program Files/Windows Kits/8.0/Include/um" LIBS += -L"C:/Program Files/Windows Kits/8.0/Lib/win8/um/x86" -l"winscard" </code></pre>  <p>in the .pro file.</p>  <p>Code is skipped during the compilation phase, as if the library is missing when using the above .pro configurations and the conditional directive, even though the library is available and linked:</p>  <pre><code>#ifdef _WINSCARD_H_ // code that needs to be compiled only when library is present and linked. #endif </code></pre>  <p>The only change is the introduction of <code>#ifdef _WINSCARD_H_</code>.</p>