<p>I would like to create a template, where i can use different vector types, and a constant as the same type of the vector.  I would like to able to pass the constant as template parameter in order to let the compiler optimize it, without explicit specialization.</p>  <p>So i tried to re-use the type parameter, but i got illegal type.</p>  <pre><code>#include &lt;vector&gt; using namespace std;  template&lt;typename WEIGHT, WEIGHT multiplier&gt; void test_multipier(vector&lt;WEIGHT&gt; &amp;v) {     uint16_t num = 16;     /*...*/     WEIGHT w = multiplier* (num);     v.push_back(w); }  int main() {     vector&lt;double&gt; test_vector;      test_multipier&lt;double,0.01&gt;(test_vector);      //^^ Error C2993 'double': illegal type for non-type template parameter 'multiplier'       return 0; } </code></pre>