<p>i have a class (wich should hold any value) like this:</p>  <pre><code>class Value {      public:          Value();         Value(const Value&amp; value);         virtual ~Value();         void operator= (const Value&amp; value);          template&lt;class T&gt;         void operator= (T value); ... } </code></pre>  <p>now my question:</p>  <p>why can't i implement an assignment operator for this class like this:</p>  <pre><code>template&lt;class T&gt; void operator=(T&amp; value, const Value&amp; v) {...} </code></pre>  <p>I wan to desing a class wich works the following:</p>  <pre><code>Value v;  v = 'c'; v = 13; v = 5.6; int i = 5; v = &amp;i;  int y = v; char b = v; </code></pre>  <p>i want to put any datatype into it and out of it. at the moment this works fine for:</p>  <pre><code>v = 'c'; v = 13; v = 5.6; </code></pre>  <p>but not for:</p>  <pre><code>int y = v; </code></pre>  <p>what works is:</p>  <pre><code>int y = v.get&lt;int&gt;(); </code></pre>  <p>but this is not as nice as</p>  <pre><code>int y = v; </code></pre>  <p>would be</p>