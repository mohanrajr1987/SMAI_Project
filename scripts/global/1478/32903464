<p>i wanna define a function whose behavior depends on whether its parameter is <strong>pod</strong> type, i do this in two ways:</p>  <p>first</p>  <pre><code>template &lt;typename T, typename = typename std::enable_if&lt;std::is_pod&lt;T&gt;::value&gt;::type&gt; void f(const T&amp;) {     //... } template &lt;typename T, typename = typename std::enable_if&lt;!std::is_pod&lt;T&gt;::value&gt;::type&gt;&gt; void f(const T&amp;) {     //... } </code></pre>  <p>second</p>  <pre><code>template &lt;typename T&gt; typename std::enable_if&lt;std::is_pod&lt;T&gt;::value&gt;::type f(const T&amp;) {     //... } template &lt;typename T&gt; typename std::enable_if&lt;!std::is_pod&lt;T&gt;::value&gt;::type f(const T&amp;) {     //... } </code></pre>  <p>the second works well while the first is error. compiler complains <strong>redefine f</strong> in the first case. I wanna know the difference between them. and why the first is error.</p>  <p>thanks for reading, please help me!.</p>