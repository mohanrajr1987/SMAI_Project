<p>In C++ value types implicitely are of the strongest association, but I can imagine the followoing five relations between classes when pointers/references are used (odered by strength of aggregation):</p>  <pre><code> information level     +------+------+------+------+  v           ownership&gt;| none | weak |shared|unique| +----------------------+------+------+------+------+ |knows/includes/uses   |  2   |  3   |  4   |  5   | +----------------------+------+------+------+------+ |passes/forward declare|  1   |  --  |  --  |  --  | +----------------------+------+------+------+------+ </code></pre>  <p>Some of them may not fit into the intention of UML(e.g. 1). But imho it would be desireable to see the measure of coupling of my design. How do this five types of association fit into a class diagram. What is common practice for notation this associations?</p>  <p>This is what I think so far:</p>  <ol> <li>??</li> <li>Directed association - arrow.</li> <li>Aggregation - hollow diamond.[1]</li> <li>Aggregation - hollow diamond.[1]</li> <li>Composition - filled diamond.</li> </ol>  <p>[1] Unclear.If there is one filled diamond, all hollow diamonds indicate a weak ownership. But if there is no dedicated owner weak and shared references can not be distinguished. Or is the weak ownership conceptually the same as no ownership?</p>