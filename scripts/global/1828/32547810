<p>Attributes provide a powerful method of associating declarative information with C# code (types, methods, properties, and so forth). Once associated with a program entity, the attribute can be queried at run time and used in any number of ways.</p>  <pre><code>[TestClass] public class MyTests {     [TestMethod]     public void DoSomeTest()     {     } } </code></pre>  <p>In looking the above example, we have <code>MyTest</code> class which has the <code>[TestClass]</code>, and the <code>DoSomeTest()</code> which has <code>[TestMethod]</code> attribute.</p>  <p><code>TestClass</code> and <code>TestMethod</code> both of them are subclass of <code>System.Attribute</code> in <code>C#</code>. </p>  <p>Actually in this example the <code>MyTest</code> class has two dependencies to <code>TestClassAttribute</code> and <code>TestMethodAttribute</code>.</p>  <p>In analyze phase, we produce the results based on <code>UML</code> models. these results also should be able to support code generation for <code>C#</code> compiler. the developer team supposed to implement <code>Asp.Net MVC</code> application type. they implement some parts of the application logic in attributes way. they say the attributes have a lot of advantages. OK. </p>  <p><strong>The problem is that we cant produce the attributes in UML standards.</strong> or I don't know!</p>  <p>I tried some solutions such :  <a href="http://stackoverflow.com/questions/4765992/how-do-i-formally-document-a-c-sharp-attribute-in-uml">How do I formally document a C# Attribute in UML</a></p>  <p>but the drawback of them is that we don't have any constraint or controls on attributes. we can't control consistency of the attributes in our project.</p>  <p>Please answer:</p>  <ol> <li>How the <code>UML</code> covers the attributes (C# attributes)? </li> <li>Is there any <code>UML</code> designer which supports this feature, and what is the best? or which tools you suggest me?</li> </ol>  <p>Thanks.</p>