<p>When I create particle effects, they all have the same pattern. They are rotated, but they all have the same pattern and same colored particles. See picture:</p>  <p><a href="http://i.stack.imgur.com/LatNH.png" rel="nofollow"><img src="http://i.stack.imgur.com/LatNH.png" alt="enter image description here"></a></p>  <p>This is how a new ParticleEffect gets created: </p>  <pre><code>ParticleEffect p = new ParticleEffect(textures, Vector2.Zero, destination, speed); </code></pre>  <p>Where <code>textures</code> is a<code>Texture2D</code> list, VectorZero is the starting location, and so on.</p>  <p>Whenever a new <code>ParticleEffect</code> gets created it gets added to the <code>ParticleList</code> list, which later loops through all the items and calls <code>update</code> and <code>draw</code> for each effect inside. </p>  <p>Here is where the particles are randomised:</p>  <pre><code>private Particle GenerateNewParticle() {     Random random = new Random();     Texture2D texture = textures[random.Next(textures.Count)];     Vector2 position = EmitterLocation;     Vector2 velocity = new Vector2(             1f * (float)(random.NextDouble() * 2 - 1),             1f * (float)(random.NextDouble() * 2 - 1));     float angle = 0;     float angularVelocity = 0.1f * (float)(random.NextDouble() * 2 - 1);     Color color = new Color(             (float)random.NextDouble(),             (float)random.NextDouble(),             (float)random.NextDouble());     float size = (float)random.NextDouble();     int ttl = 20 + random.Next(40);      return new Particle(texture, position, velocity, angle, angularVelocity, color, size, ttl); } </code></pre>  <p>A bunch of <code>randoms</code> there, but each effect still comes out the same.  Comment if you want to see more code.</p>  <p>Edit: Here is how a particle gets drawn:</p>  <pre><code>public void Draw(SpriteBatch spriteBatch) {     Rectangle sourceRectangle = new Rectangle(0, 0, Texture.Width, Texture.Height);     Vector2 origin = new Vector2(Texture.Width / 2, Texture.Height / 2);      spriteBatch.Draw(Texture, Position, sourceRectangle, Color,         Angle, origin, Size, SpriteEffects.None, 0f); } </code></pre>