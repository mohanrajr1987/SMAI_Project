<p>I am creating a 2D game and I've hit a serious road block when trying to 'randomly' spawn power ups. Basically what I am attempting to do is spawn the power ups off screen and then they move onto the screen (at the same speed as my scrolling background) Once one of the three power ups has been spawned another one won't spawn until 10 to 30 seconds has passed. I also understand that the shield power Up is the only one that I am trying to get spawning randomly at the moment. I have been researching for hours and writing code that I will post below. I have tried to do this all by myself so I apologize for the quality of the code, I am still a novice and learning. Any help or links to websites would be greatly appreciated as I have no idea where to proceed from here.      Thanks in advance.</p>  <p><strong>game1.cs</strong></p>  <pre><code>public List&lt;PowerUps&gt; powerUpList = new List&lt;PowerUps&gt;(); public double counterPower = 0; public bool powerUpCollision = false; public bool invincibility = false; Sprite shieldPower; Sprite infiniteAmmoPower; Sprite livesPower; bool isVisible = true; public bool infiniteAmmoBool = false; public bool infiniteAmmoCol = false;  protected override void Initialize() {     shieldPower = new Sprite();     infiniteAmmoPower = new Sprite();     livesPower = new Sprite(); } protected override void LoadContent() {     spriteBatch = new SpriteBatch(GraphicsDevice);     shieldPower.LoadContent(this.Content, "powerUpShield");     infiniteAmmoPower.LoadContent(this.Content, "infinitePowerUp");     livesPower.LoadContent(this.Content, "livePowerUp"); }  protected override void Update(GameTime theGameTime) {  } public void powerUps(GameTime theGameTime) {     //if (mPlayer.boundingBox.Intersects(shieldPower.boundingBoxShieldPower))      {         Console.WriteLine(shieldPower.Position.X);         if (shieldPower.isVisible == true)         {             Console.WriteLine("collision working");             powerUpCollision = true;             invincibility = true;             shieldPower.isVisible = false;             if (powerUpCollision == true &amp;&amp; invincibility == true)             {                 lives = lives - 0;             }             counterPower = 0;         }     }     counterPower += theGameTime.ElapsedGameTime.TotalSeconds;     {         //  Console.WriteLine(counterPower);         if (counterPower &gt; 7)         {             powerUpCollision = false;             invincibility = false;          }     }        if (mPlayer.boundingBox.Intersects(livesPower.boundingBoxLives))     {         if (livesPower.isVisible == true)         {             lives = lives + 1;             livesPower.isVisible = false;         }     } }   public void loadPowerUps() {     int randPowerX = random.Next(850, 1400); // spawns randomly between these coordinates     int randPowerY = random.Next(-300, 300);     Console.WriteLine(shieldPower.Position.X);     if (powerUpList.Count &lt; 1) // limits the powerUp count to 1 at a time     {         powerUpList.Add(new PowerUps(Content.Load&lt;Texture2D&gt;("powerUpShield"), new Vector2(randPowerX, randPowerY)));     }     for (int i = 0; i &lt; powerUpList.Count; i++)     {         if (powerUpList[i].isVisible == false)         {             powerUpList.RemoveAt(i);             i--;         }     } }  protected override void Draw(GameTime theGameTime) {     foreach (PowerUps powerup in powerUpList)     {         powerup.Draw(spriteBatch);     }     mPlayer.Draw(this.spriteBatch);     enemyShip.Draw(this.spriteBatch);     if (shieldPower.isVisible == true)     {         shieldPower.Draw(this.spriteBatch);     }     if (livesPower.isVisible == true)     {         livesPower.Draw(this.spriteBatch);     }     if (infiniteAmmoPower.isVisible == true)     {         infiniteAmmoPower.Draw(this.spriteBatch);     } } </code></pre>  <p><strong>PowerUps.cs</strong></p>  <pre><code>public class PowerUps : Game1 {      Random randomPower = new Random();     int minPowerSpawnTimer = 10000; // 10 seconds      int maxPowerSpawnTimer = 30000; // 30 seconds     double nextSpawnTime;     float powerUpSpeed = -0.5f;     Vector2 position;     Texture2D texture;        public PowerUps(Texture2D newText, Vector2 newPos)     {         position = newPos;         texture = newText;     }      public void Update(GameTime theGameTime)     {          position.X += powerUpSpeed;         nextSpawnTime -= theGameTime.ElapsedGameTime.Milliseconds;         if (nextSpawnTime &lt; 0)         {             loadPowerUps();             resetSpawnTime();         }      }      public void resetSpawnTime()     {         nextSpawnTime = randomPower.Next(minPowerSpawnTimer, maxPowerSpawnTimer);     }      public void Draw(SpriteBatch spriteBatch)     {         spriteBatch.Draw(texture, position, Color.White);     } } </code></pre>