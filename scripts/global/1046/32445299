<p>What I would like to do is to be able to draw a specific set of sprites within a <code>spriteBatch</code> with additive blending. The problem is that the draw order that they're drawn in needs to be preserved and I can't draw everything else in the <code>SpriteBatch</code> with additive blending, so I can't just do this:</p>  <pre><code>spriteBatch.Begin(SpriteSortMode.FrontToBack, BlendState.AlphaBlend);     //Draw some stuff here spriteBatch.End();  spriteBatch.Begin(SpriteSortMode.FrontToBack, BlendState.Additive);     //Draw stuff with additive blending here spriteBatch.End(); </code></pre>  <p>So my solution would be to write a shader to do what I need and just do this:</p>  <pre><code>spriteBatch.Begin(SpriteSortMode.FrontToBack, BlendState.AlphaBlend);     //Draw some stuff here      foreach(EffectPass pass in AdditiveShader.CurrentTechnique.Passes)     {         pass.Apply()         //Draw stuff with additive shader applied here     } spriteBatch.End() </code></pre>  <p>But <code>pass.Apply()</code> is literally doing nothing. Even if I try just using a <code>BasicEffect</code> and have it rotate a few degrees, it's doing nothing. The only way I can get it to do anything is to call it like this:</p>  <pre><code>spriteBatch.Begin(SpriteSortMode.FrontToBack, BlendState.AlphaBlend,                    null, null, null, AdditiveShader); </code></pre>  <p>Then it actually does something to sprites, but that doesn't really help me because I want to only apply it to specific sprites and still retain the draw order.</p>  <p>What am I doing wrong when using <code>pass.Apply()</code>? Is there a way to draw a set of sprites with additive blending and another set with alpha blending and still keep the draw order? Any help would be greatly appreciated. Thanks.</p>  <p>EDIT: For clarification, I'm working in 2D.</p>