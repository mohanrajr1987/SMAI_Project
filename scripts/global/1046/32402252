<p>I have some pause menu text, when I pause the game I want it to display. It's not displaying and I am not entirely sure why, which is why I have posted this question. Here is my code.</p>  <pre><code>            if (!paused)         {             if (AccessMGame || AccessCampaign)             {                 PlayerStatus.Update();                 EntityManager.Update();                 EnemySpawner.Update();                 ParticleManager.Update();             }         }         else         {             pauseMenuGameState = true;         } </code></pre>  <p>This code dictates whether the game is paused, if the game is not paused, update the game, if it is set the <code>pauseMenuGameState</code> to true. Here is the code which I am trying to display my text with.</p>  <pre><code>if (pauseMenuGameState == true)         {             Color color2 = Color.White;             spriteBatch.Begin(SpriteSortMode.Texture, BlendState.Additive);             DrawCenterAlignedString("Paused", ScreenSize.Y / 2 - 100, color2);             spriteBatch.End();         } </code></pre>  <p>And finally, the <code>DrawCenterAlignedString</code> function.</p>  <pre><code>public void DrawCenterAlignedString(string text, float y, Color color)     {         var textWidth = Art.Font.MeasureString(text).X;         spriteBatch.DrawString(Art.Font, text, new Vector2(ScreenSize.X / 2 - textWidth + textWidth / 2, y), color);      } </code></pre>  <p>Note: The decleration of the paused variable is <code>public static bool paused = false;</code> and the declaration of the  pause menu game state variable is <code>public static bool pauseMenuGameState;</code> I have debugged my program to find out that the code is being reached, and for some reason is not drawing the text.</p>  <p>I think these methods are what is causing the problems.</p>  <pre><code>private static bool _isPaused = false;      public static void pauseMenu()     {         if (Input.WasKeyPressed(Keys.P))         {             _isPaused = true;             GameRoot.paused = !GameRoot.paused;         }     }      public static bool isPaused()     {         return _isPaused;     } </code></pre>