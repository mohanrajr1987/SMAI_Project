<p>Im writing in c# for XNA MonoGame, and have written up an enemy state enumeration to allow me to determine what logic to use for my enemy at each update function.</p>  <p>Here is the enumeration:</p>  <pre><code>    public enum EnemyState {                             /// &lt;summary&gt;Non-active state, ideally should not process logic.&lt;/summary&gt;                             WaitOrder,                             /// &lt;summary&gt;Enemy is moving towards a directed position.&lt;/summary&gt;                             MoveOrder,                             /// &lt;summary&gt;Enemy is chasing a directed target.&lt;/summary&gt;                             ChaseOrder,                             /// &lt;summary&gt;Enemy is launching an attack towards directed target.&lt;/summary&gt;                             AttackOrder,                             /// &lt;summary&gt;Enemy is dieing, and should be moving towards being deleted.&lt;/summary&gt;                             Dieing                         } </code></pre>  <p>And I simply use <code>EnemyState state</code> as a deceleration in my enemy class, with the constructor adding <code>state = EnemyState.MoveOrder</code>.</p>  <p>The problem is, XNA is appearing very clingy to the MoveOrder state. Even though I check that <code>state == EnemyState.MoveOrder</code> before entering the movement update function, and this clearly returns <code>false</code>, it still enters.</p>  <p>With a break-point inside the movement function, marking the line where I change the value of state, I proceed to step through the code, line by line.</p>  <p><strong>Visual Studio is telling me that <code>state == EnemyState.WaitOrder</code> before and after the if statement, and that <code>state == EnemyState.MoveOrder</code> returns <code>false</code>.</strong></p>  <p>What could otherwise cause it to ignore the requirement, and jump into the statement, even when the requirements are not met?</p>  <p><a href="http://i.stack.imgur.com/z0LhM.png" rel="nofollow"><img src="http://i.stack.imgur.com/z0LhM.png" alt="As you can see, at the first line of the if statement, the if clause returns false."></a></p>  <hr>  <p><strong>update</strong></p>  <p>If I place the check into a boolean, first, <strong>the boolean shows the check to be true</strong>. That said, If I change <code>state == EnemyState.WaitOrder</code> to <code>state == 0</code>, I do not have a problem.</p>