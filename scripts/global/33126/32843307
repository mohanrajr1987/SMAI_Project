<p>We have a project using Linq to SQL. After grouping, the records are not selected from the tables which is related to the group Key. Running the profiler helped to find out that the condition added while retrieving the records have a lesser precision for the decimal field. What is the solution for this?</p>  <pre><code>var  groupedSO = from so in db.SalesOrders                  orderby so.BizDate, so.POSID ascending                  where SalesOrders.Contains(so.POSID)                                                                  group so by                   new                  {                      so.BizDate.Value.Date,                                                                            so.CurrRateMultp, //Decimal: Value in DB is 0.33333333                                                                          }                  into grps                  select grps; </code></pre>  <p>When we loop through the groups,</p>  <pre><code> foreach (var orders in groupedSO)   {     foreach (var order in orders)       {         //No records available       }   } </code></pre>  <p>it selects the records using SQL similar to </p>  <pre><code>select &lt;Fields&gt;  from Table  where CONVERT(DATE, [t0].[bizdate])  = @P0 AND  @x4 = [t0].[currratemultp] </code></pre>  <p>but value of @x4=<strong>0.3333</strong> in the SQL generated, while in DB the value is <strong>0.33333333</strong></p>  <p>This causes the record not to be retrived.</p>  <p>The field is mapped in a simple way </p>  <pre><code>[Column] public decimal? CurrRateMultp { get; set; } </code></pre>  <p>The field type in SQL is </p>  <pre><code>decimal(19, 8) </code></pre>  <p>Please help what changes needed to add the precision.</p>