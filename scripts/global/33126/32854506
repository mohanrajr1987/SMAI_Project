<p>I need to empty a table and then enter around 1000 rows into it.  I need for the whole thing to be a transaction, however, so I'm not stuck with an empty (or partially empty) table if any of the inserts fail.</p>  <p>So I experimented with the code below, where the insert (.Add) will intentionally fail.  When running it, however, the call to the delete stored procedure (prDeleteFromUserTable) does not roll back with the transaction.  I'm left with an empty table and no inserts.</p>  <pre><code>using (var context = new Entities(_strConnection)) {     using (var transaction = new TransactionScope())     {         //delete all rows in the table         context.prDeleteFromUserTable();          //add a row, which I made intentionally make fail to test the transaction         context.UserTable.Add(row);         context.SaveChanges();          //end the transaction         transaction.Complete();     } }   </code></pre>  <p>How would I accomplish this using Linq-to-SQL?</p>