<p>I have a static <code>WindowService</code> class which helps me to create new windows and modal dialogs. So far, what I have is this:</p>  <pre><code>/// &lt;summary&gt; /// Opens a new window of type &lt;paramref name="newWindowType"/&gt; and closes the &lt;paramref name="oldWindow"/&gt; /// &lt;/summary&gt; /// &lt;param name="oldWindow"&gt;The window which should be closed (Usually the current open window)&lt;/param&gt; /// &lt;param name="newWindowType"&gt;The type of the new window to open&lt;/param&gt; public static void ShowNewWindow(Window oldWindow, Type newWindowType) {     ((Window)Activator.CreateInstance(newWindowType)).Show();     oldWindow.Close(); } </code></pre>  <p>My viewmodel raises an event and the view is subscribed to it. In the event handler in the view, it calls <code>WindowService.ShowNewWindow(this,The type here)</code>. This works fine.<br>   My modal dialog creating method will also work in a similar way. The only difference is that the information will be returned to the view (At the event handler) so the view will have to pass that information to the view model in code explicitly. This violates mvvm pattern and I don't know how to make the viewmodel wait for the view to return the value after the event is raised.<br> Is there a better way of doing this?</p>