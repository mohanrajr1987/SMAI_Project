<p>I have a modal, which is closed by redirecting it to a new page. </p>  <p>In this instance, I want it to simply close...so I'm trying to reference the current page...but none of the code I've tried has worked. </p>  <p>When the 'no thanks' is clicked, the current page address does appear in the address bar...but the browser DOESN'T ACTUALLY GO to the page. Just shows the text. </p>  <p>If I hit the refresh button, and do an enter in the address bar...it goes to the right page. </p>  <pre><code>&lt;!DOCTYPE html&gt; &lt;html lang="en"&gt; &lt;head&gt; &lt;title&gt;&lt;/title&gt; &lt;meta charset="utf-8"&gt;  &lt;link rel="stylesheet" href="css/style.css" type="text/css" media="all"&gt;  &lt;script type="text/javascript" src="js/html5.js"&gt;&lt;/script&gt; &lt;script type="text/javascript" src="js/jquery-1.6.1.min.js"&gt;&lt;/script&gt; &lt;script type="text/javascript" src="js/jquery.easing.1.3.js"&gt;&lt;/script&gt; &lt;script type="text/javascript" src="js/script.js"&gt;&lt;/script&gt; &lt;script type="text/javascript" src="js/superfish.js"&gt;&lt;/script&gt; &lt;script type="text/javascript" src="js/content_switch.js"&gt;&lt;/script&gt; &lt;script type="text/javascript" src="js/cScroll.js"&gt;&lt;/script&gt; &lt;script type="text/javascript" src="js/jquery-ui-1.8.11.custom.min.js"&gt;&lt;/script&gt; &lt;script type="text/javascript" src="js/jquery.mousewheel.js"&gt;&lt;/script&gt; &lt;script type="text/javascript" src="js/jquery.prettyPhoto.js" charset="utf-8"&gt;&lt;/script&gt; &lt;script type="text/javascript" src="js/jquery.jplayer.min.js"&gt;&lt;/script&gt;  &lt;!-- ouibounce modal popup when leaving page --&gt; &lt;!-- &lt;link rel="stylesheet" href="css/ouibounce.min.css"&gt;  --&gt; &lt;script src="js/ouibounce.js"&gt;&lt;/script&gt;  &lt;/head&gt;  &lt;body&gt;  &lt;!-- OuiBounce Modal --&gt; &lt;div id="ouibounce-modal"&gt;   &lt;div class="underlay"&gt;&lt;/div&gt;   &lt;div class="modal"&gt;     &lt;div class="modal-title"&gt;       &lt;h3&gt;THANK YOU for stopping by!&lt;/h3&gt;     &lt;/div&gt;      &lt;div class="modal-body"&gt;         &lt;p&gt;         Would you be willing to take a brief&lt;br&gt;         &lt;a href="https://www.surveymonkey.com/r/xxxxxxx" target="_blank"&gt;&lt;img src="images/Survey.withText.png"&gt;&lt;/a&gt;&lt;br&gt;         to let us know what's working&lt;br&gt;         and not working&lt;br&gt;         &lt;/p&gt;         &lt;br&gt;&lt;br&gt;         &lt;p&gt;         &lt;/p&gt;    &lt;/div&gt;      &lt;!-- &lt;button type="button" id="close" onclick="return closewindow();"&gt;no thanks&lt;/button&gt; --&gt;      &lt;div class="modal-footer" style="font-size: 1.7em; text-align: center;"&gt;&lt;a href="javascript:window.location.href = window.location.href"&gt;no thanks&lt;/a&gt;&lt;/div&gt;             &lt;!-- &lt;div class="modal-footer" style="font-size: 1.7em; text-align: center;"&gt;&lt;a href="index.html"&gt;no thanks&lt;/a&gt;&lt;/div&gt; --&gt;    &lt;/div&gt; &lt;/div&gt;  &lt;!-- Used to fire the modal --&gt; &lt;script&gt;    // if you want to use the 'fire' or 'disable' fn,   // you need to save OuiBounce to an object   var _ouibounce = ouibounce(document.getElementById('ouibounce-modal'), {     aggressive: true,     timer: 0,     callback: function() { console.log('ouibounce fired!'); }   });    $('body').on('click', function() {     $('#ouibounce-modal').hide();   });    $('#ouibounce-modal .modal-footer').on('click', function() {     $('#ouibounce-modal').hide();   });    $('#ouibounce-modal .modal').on('click', function(e) {     e.stopPropagation();   }); &lt;/script&gt; &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>--- ouibounce.js ---</p>  <pre><code>(function(root, factory) {   if (typeof define === 'function' &amp;&amp; define.amd) {     define(factory);   } else if (typeof exports === 'object') {     module.exports = factory(require,exports,module);   } else {     root.ouibounce = factory();   } }(this, function(require,exports,module) {  return function ouibounce(el, custom_config) {   "use strict";    var config     = custom_config || {},     aggressive   = config.aggressive || false,     sensitivity  = setDefault(config.sensitivity, 20),     timer        = setDefault(config.timer, 1000),     delay        = setDefault(config.delay, 0),     callback     = config.callback || function() {},     cookieExpire = setDefaultCookieExpire(config.cookieExpire) || '',     cookieDomain = config.cookieDomain ? ';domain=' + config.cookieDomain : '',     cookieName   = config.cookieName ? config.cookieName : 'viewedOuibounceModal',     sitewide     = config.sitewide === true ? ';path=/' : '',     _delayTimer  = null,     _html        = document.documentElement;    function setDefault(_property, _default) {     return typeof _property === 'undefined' ? _default : _property;   }    function setDefaultCookieExpire(days) {     // transform days to milliseconds     var ms = days*24*60*60*1000;      var date = new Date();     date.setTime(date.getTime() + ms);      return "; expires=" + date.toUTCString();   }    setTimeout(attachOuiBounce, timer);   function attachOuiBounce() {     if (isDisabled()) { return; }      _html.addEventListener('mouseleave', handleMouseleave);     _html.addEventListener('mouseenter', handleMouseenter);     _html.addEventListener('keydown', handleKeydown);   }    function handleMouseleave(e) {     if (e.clientY &gt; sensitivity) { return; }      _delayTimer = setTimeout(fire, delay);   }    function handleMouseenter() {     if (_delayTimer) {       clearTimeout(_delayTimer);       _delayTimer = null;     }   }    var disableKeydown = false;   function handleKeydown(e) {     if (disableKeydown) { return; }     else if(!e.metaKey || e.keyCode !== 76) { return; }      disableKeydown = true;     _delayTimer = setTimeout(fire, delay);   }    function checkCookieValue(cookieName, value) {     return parseCookies()[cookieName] === value;   }    function parseCookies() {     // cookies are separated by '; '     var cookies = document.cookie.split('; ');      var ret = {};     for (var i = cookies.length - 1; i &gt;= 0; i--) {       var el = cookies[i].split('=');       ret[el[0]] = el[1];     }     return ret;   }    function isDisabled() {     return checkCookieValue(cookieName, 'true') &amp;&amp; !aggressive;   }    // You can use ouibounce without passing an element   // https://github.com/carlsednaoui/ouibounce/issues/30   function fire() {     if (isDisabled()) { return; }      if (el) { el.style.display = 'block'; }      callback();     disable();   }    function disable(custom_options) {     var options = custom_options || {};      // you can pass a specific cookie expiration when using the OuiBounce API     // ex: _ouiBounce.disable({ cookieExpire: 5 });     if (typeof options.cookieExpire !== 'undefined') {       cookieExpire = setDefaultCookieExpire(options.cookieExpire);     }      // you can pass use sitewide cookies too     // ex: _ouiBounce.disable({ cookieExpire: 5, sitewide: true });     if (options.sitewide === true) {       sitewide = ';path=/';     }      // you can pass a domain string when the cookie should be read subdomain-wise     // ex: _ouiBounce.disable({ cookieDomain: '.example.com' });     if (typeof options.cookieDomain !== 'undefined') {       cookieDomain = ';domain=' + options.cookieDomain;     }      if (typeof options.cookieName !== 'undefined') {       cookieName = options.cookieName;     }      document.cookie = cookieName + '=true' + cookieExpire + cookieDomain + sitewide;      // remove listeners     _html.removeEventListener('mouseleave', handleMouseleave);     _html.removeEventListener('mouseenter', handleMouseenter);     _html.removeEventListener('keydown', handleKeydown);   }    return {     fire: fire,     disable: disable,     isDisabled: isDisabled   }; }  /*exported ouibounce */ ;  })); </code></pre>  <p>I've tried:</p>  <pre><code>&lt;a href="javascript:window.location.href"&gt;no thanks&lt;/a&gt;  &lt;a href="javascript:window.location.href.toString()"&gt;no thanks&lt;/a&gt;  &lt;a href="javascript:window.location.href = window.location.href"&gt;no thanks&lt;/a&gt;  &lt;a href="javascript:window.location.href = window.location.href.toString()"&gt;no thanks&lt;/a&gt;  &lt;button type="button" id="close" onclick="return closewindow();"&gt;no thanks&lt;/button&gt; </code></pre>  <p>=== UPDATE</p>  <p>The problem appears to be a conflict in the version of jquery.min.js. </p>  <p>(Go to biocomsoftware.com to see the full page)</p>  <p>The main page has a jquery object that flips the html pages within a frame. </p>  <p>When I load jquery.min.js but not jquery-1.6.1.min.js; the modal close works but the html page flips do not. </p>  <p>When I load jquery-1.6.1.min.js but not jquery.min.js; the html page flips works, but the modal close does not. </p>  <p>When I load both, I get the same as above depending on which one loads first. </p>