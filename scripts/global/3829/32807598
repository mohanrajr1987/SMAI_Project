<p>I have searched on this, but not managed to get anything working.</p>  <p>Not sure if this is possible, but I'll try my best to explain...</p>  <p>I have a couple of tables, Lodges and Scores - one to many where any lodge can have multiple scores.</p>  <pre><code>Lodges LodgeID (PK) Lodge etc  Scores ScoreID (PK) LodgeID (FK) Score Comment </code></pre>  <p>From this, I have a list of lodges using GROUP BY lodge, showing any lodge that has any scores, and the average score for that lodge.</p>  <p>This all works great - however, there is also a Comment field in the Scores table, and in this list I would like to include a link to the comments if the lodge has any records in the Scores table with a comment.</p>  <p>I have it working, but would like the link not to display if the lodge has not received any comments. Otherwise people see the link, click on it, and there might not be any comments.</p>  <p>So the problem, I assume, is because using GROUP BY, it may or may not happen to show a record from the scores table that includes a comment.</p>  <p>I have tried using ORDER BY as well, but that just orders the results. Or using WHERE, but that only returns the lodges that have had comments. I thought HAVING might be it, but that just filtered the results again.</p>  <p>What I am looking for is to use GROUP BY, but for the summarised lodges (rather than all results) to be order by Comment so has if the lodge has any comments, I can use that to show or hide the link to the comments for that lodge.</p>  <p>I hope that makes sense, and might be possible.</p>  <p>Thanks.</p>  <p>This is my original query:</p>  <pre><code>SELECT    scores.ScoreID,    COUNT(scores.ScoreID) as scoreCount,    AVG(scores.Score) as AverageScore,    lodges.LodgeID,      lodges.Lodge,    countries.Country,    lodges.CountryID,    categoriesFull.CategoryID,    nominations.NominationID,    scores.Comments,    nominations.AY_finalist,    nominations.AY_rank,    lodges.2016_Registered,    nominations.Year,    categoriesShort.CategoryShort,    countries.CountryShort FROM    lodges       INNER JOIN continents          ON lodges.ContinentID = continents.ContinentID       INNER JOIN countries          ON lodges.CountryID = countries.CountryID       INNER JOIN scores          ON lodges.LodgeID = scores.LodgeID       INNER JOIN nominations          ON lodges.LodgeID=nominations.LodgeID          INNER JOIN categoriesFull             ON nominations.CategoriesFullID = categoriesFull.CategoryID            AND scores.categoryID = categoriesFull.CategoryID            INNER JOIN categoriesShort               ON categoriesFull.CategoryID = categoriesShort.CategoryShortID WHERE        lodges.CountryID = 8    AND scores.CategoryID = 7    AND Year = '2016'    AND Nominee = 'Y'  GROUP BY    Lodge </code></pre>  <p>I have been trying sub queries, without any joy though:</p>  <pre><code>SELECT * FROM ( SELECT    scores.ScoreID,    COUNT(scores.ScoreID) as scoreCount,    AVG(scores.Score) as AverageScore,    lodges.LodgeID,      lodges.Lodge,    countries.Country,    lodges.CountryID,    categoriesFull.CategoryID,    nominations.NominationID,    scores.Comments,    nominations.AY_finalist,    nominations.AY_rank,    lodges.2016_Registered,    nominations.Year,    categoriesShort.CategoryShort,    countries.CountryShort  FROM    lodges    INNER JOIN continents      ON lodges.ContinentID = continents.ContinentID    INNER JOIN countries      ON lodges.CountryID = countries.CountryID    INNER JOIN scores      ON lodges.LodgeID = scores.LodgeID    INNER JOIN nominations      ON lodges.LodgeID=nominations.LodgeID    INNER JOIN categoriesFull      ON nominations.CategoriesFullID = categoriesFull.CategoryID      AND scores.categoryID = categoriesFull.CategoryID    INNER JOIN categoriesShort      ON categoriesFull.CategoryID = categoriesShort.CategoryShortID   WHERE    lodges.CountryID = 8    AND scores.CategoryID = 7    AND Year = '2016'    AND Nominee = 'Y' ORDER BY Comments ASC)   AS Comments  GROUP BY    Lodge </code></pre>  <p>The above just lists one lodge with ScoreCount as the total number of all scores of all the lodges in that group.</p>  <p>If I change the * to the fields:</p>  <pre><code>SELECT   scores.ScoreID,    COUNT(scores.ScoreID) as scoreCount,    AVG(scores.Score) as AverageScore,    lodges.LodgeID,      lodges.Lodge,    countries.Country,    lodges.CountryID,    categoriesFull.CategoryID,    nominations.NominationID,    scores.Comments,    nominations.AY_finalist,    nominations.AY_rank,    lodges.2016_Registered,    nominations.Year,    categoriesShort.CategoryShort,    countries.CountryShort  FROM ( SELECT    scores.ScoreID,    COUNT(scores.ScoreID) as scoreCount,    AVG(scores.Score) as AverageScore,    lodges.LodgeID,      lodges.Lodge,    countries.Country,    lodges.CountryID,    categoriesFull.CategoryID,    nominations.NominationID,    scores.Comments,    nominations.AY_finalist,    nominations.AY_rank,    lodges.2016_Registered,    nominations.Year,    categoriesShort.CategoryShort,    countries.CountryShort  FROM    lodges    INNER JOIN continents      ON lodges.ContinentID = continents.ContinentID    INNER JOIN countries      ON lodges.CountryID = countries.CountryID    INNER JOIN scores      ON lodges.LodgeID = scores.LodgeID    INNER JOIN nominations      ON lodges.LodgeID=nominations.LodgeID    INNER JOIN categoriesFull      ON nominations.CategoriesFullID = categoriesFull.CategoryID      AND scores.categoryID = categoriesFull.CategoryID    INNER JOIN categoriesShort      ON categoriesFull.CategoryID = categoriesShort.CategoryShortID   WHERE    lodges.CountryID = 8    AND scores.CategoryID = 7    AND Year = '2016'    AND Nominee = 'Y' ORDER BY Comments ASC)   AS Comments  GROUP BY    Lodge </code></pre>  <p>I get the error: </p>  <p>Unknown column 'scores.ScoreID' in 'field list'</p>  <p>Am I barking up the right tree at all?</p>  <p>Many thanks for any suggestions or pointers.</p>