<p>I'm trying to group data in a csv file based on a coulum. I tried:</p>  <pre><code>from itertools import groupby import csv with open('path/trial.csv', 'rb') as f:     reader = csv.reader(f)     things = list(reader)  for key, group in groupby(things, lambda x: x[0]):     listOfThings = len(",".join([thing[1] for thing in group]).split(","))     print key + "," + str(listOfThings) </code></pre>  <p>It worked when data in column 1 is in a certain order. If it repeats, the counts are getting messed up. </p>  <p>With</p>  <pre><code>A,1 A,2 A,1 B,0 B,8 </code></pre>  <p>I get </p>  <pre><code>A,3 B,2 </code></pre>  <p>With</p>  <pre><code>A,1 A,2 B,0 B,8 A,1 </code></pre>  <p>I get</p>  <pre><code>A,2 B,2 A,1 </code></pre>  <p>I'd like my script to consider both unique keys and unique values and the output to be (taking A,1 only once, though it is present twice):</p>  <pre><code>A,2 B,2 </code></pre>  <p>Based on Chad Simmon's comment, changed it to:</p>  <pre><code>sortedlist = list(reader) things= sorted(sortedlist, key=operator.itemgetter(0), reverse=True) </code></pre>  <p>It now gives me </p>  <pre><code>B,2 A,3 </code></pre>  <p>I want A,2 instead.</p>