<p>I have a python script that works great on my local machine (OS X), but when I copied it to a server (Debian), it does not work as expected. The script reads an xml file and prints the contents in a new format. On my local machine, I can run the script with stdout to the terminal or to a file (i.e. <code>&gt; myFile.txt</code>), and both work fine.</p>  <p>However, on the server (<code>ssh</code>), when I print to terminal everything works fine, but printing to the file (which is what I really need) gives UnicodeEncodeError: <code>UnicodeEncodeError: 'ascii' codec can't encode characters in position 0-3: ordinal not in range(128)</code>. All files are in utf-8 encoding, and utf-8 is declared in the magic comment.</p>  <p>If I print the string inside a list (which is a trick I usually use to get a handle on encoding issues), it also throws the same error.</p>  <p>If I use <code>print( x.encode('utf-8') )</code>, then it prints code-style bits (e.g. <code>b'1'    b'\xd0\x9a\xd0\xb0\xd0\xbc\xd0\xb0'</code>).</p>  <p>If I <code>$ export PYTHONIOENCODING=utf-8</code> in the shell (as suggested in some SO posts), then I get a binary file: <code>1       &lt;D0&gt;&lt;9A&gt;&lt;D0&gt;&lt;B0&gt;&lt;D0&gt;&lt;BC&gt;&lt;D0&gt;&lt;B0&gt;</code>.</p>  <p>I have checked all of the <code>locale</code> variables and the relevant ones match what I have on my local machine.</p>  <p>I can simply process the file locally and upload it, but I really want to understand what is happening here. Since the python code is working on one computer, I am not sure that it is relevant, but I am adding it below:</p>  <pre><code># -*- encoding: utf-8 -*- import sys, xml.etree.ElementTree as ET  corpus = ET.parse('file.xml') text = corpus.getroot() for body in text :   for sent in body :     depDOMs = [(0,'') for i in range(len(sent)+1)]     for word in sent :       if word.tag == 'LF' :         pass       elif 'ID' in word.attrib and 'FEAT' in word.attrib and 'DOM' in word.attrib :         ID = word.attrib['ID']         try :           Form =  word.text.replace(' ','_')         except AttributeError :           Form = '_'         try :           Lemma =  word.attrib['LEMMA'].replace(' ', '_')         except KeyError :           Lemma = '*NULL*'         CPOS = word.attrib['FEAT'].split()[0]         POS = word.attrib['FEAT'].replace( ' ' , '_' )         Feats = '_'         Head = word.attrib['DOM']         if Head == '_root' :           Head = '0'         try :           DepRel = word.attrib['LINK']         except KeyError :           DepRel = 'ROOT'         PHead = '_'         PDepRel = '_'         try:           if word.attrib['NODETYPE'] == 'FANTOM' :             word.attrib['LEMMA'] = '*'+word.attrib['LEMMA']+'*'         except KeyError :           pass         print( ID , Form , Lemma , Feats, CPOS , POS , Head , DepRel , PHead , PDepRel , sep='\t' )       else :         print( 'WARNING: what is this?',sent.attrib['ID'],word.attrib)   print() </code></pre>