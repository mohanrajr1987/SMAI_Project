<p>According to the MySQL manual, if both sides of an expression regarding strings have different (charsets and/or) collations, but equal coercibility, all possible cases are described:</p>  <ul> <li>If both use the same charset, but different collations  <ul> <li>and one of them is the <code>_bin</code> version of the other => <strong>It uses the <code>_bin</code> collation</strong>;</li> <li>but if not => <strong>error</strong>.</li> </ul></li> <li>However, if both have different charsets  <ul> <li>and both are unicode => <strong>error</strong></li> <li>or non-unicode => <strong>error</strong>.</li> <li>However, if only one of them is Unicode => <strong>the other is coerced</strong>.</li> </ul></li> </ul>  <p>But, what does it happen if both operands have different coercibility <strong>and different charsets</strong>? I know the one with lowest coercibility wins but, is it the other coerced, or is its binary representation used as-is without charset conversion? and what if both have the same charset but incompatible collations (<code>_ci</code> and <code>_cs</code>, for example)?</p>  <p>The MySQL manual doesn't specify how does it manage to adapt or transform the charset/collation of the operand with highest collation to be compatible with the winner operand, or when it throws an error, for different coercibilities.</p>