<p>So I am basically trying to take a sheet in excel, convert it to PDF, then attach it to an email, then populate the email with some default text but not send it. That way the sales person can finalize anything that varies from the default. I mention all that, just in case I am approaching this the wrong way and making it all harder than it needs to be.</p>  <p>So the pdf creation occurs without issue. It gets attached fine also. The email is opened and the data gets populated BUT any sort of formatting gets lost in translation somewhere. I can't seem to post to it directly. I have also tried posting the formatted text to an IE instance, where it formats fine, then copying it from there and putting it into outlook (dug up a reference somewhere about using that as a workaround) - no joy from any options. Any ideas where I am going wrong with this?</p>  <p>Thanks in advance for any ideas on this one!</p>  <pre><code>Option Explicit  Sub QuotePDF() Application.ScreenUpdating = False Dim sFirstName As String, sFullFileName As String, sFileName As String, sFileLocation As String, tempPDFFileName As String Dim tempPSFileName As String, tempPDFRawFileName As String, sTo As String, sSubject As String, sBody As String Dim sSender As String, sActivePrinter As String Dim i As Integer Dim Mail_Object, Email_Subject, o As Variant  sFirstName = Left(Sheets("Quote Step 1").Range("g6").Value, InStr(Sheets("Quote Step 1").Range("g6").Value, " ") - 1) sSender = " " sTo = Sheets("Quote Step 1").Range("g9").Value sSubject = "SUBJECT GOES HERE" sBody = sFirstName &amp; ", " &amp; Chr(13) &amp; Chr(13) &amp; "BODY GOES HERE " &amp; Chr(13) &amp; Chr(13) &amp; "Regards, " &amp; Chr(13) &amp; sSender'these formating characters get lost when passed to the function but this was one method I tried to use so left it in while sorting through things sActivePrinter = "Adobe PDF" sFileLocation = Environ$("temp") &amp; "\" &amp; "PDF Name.pdf" sFullFileName = CreatePDF(Source:=Sheets("Quote Step 2").Range("A1:H51"), FixedFilePathName:=sFileLocation, OverwriteIfFileExist:=True, OpenPDFAfterPublish:=False)     If sFullFileName &lt;&gt; "" Then 'this function below MailPDF(FileNamePDF As String, StrTo As String, StrCC As String, StrBCC As String, StrSubject As String, Signature As Boolean, Send As Boolean, StrBody As String) - signature is a display/dont display variable         sFullFileName = MailPDF(sFullFileName, sTo, "", "", sSubject, True, False, sBody)     Else         MsgBox "Can not create PDF."     End If Application.ScreenUpdating = True End Sub  Function CreatePDF(Source As Object, FixedFilePathName As String, OverwriteIfFileExist As Boolean, OpenPDFAfterPublish As Boolean) As String     Dim FileFormatstr As String     Dim Fname As Variant      If FixedFilePathName = "" Then             FileFormatstr = "PDF Files (*.pdf), *.pdf"             Fname = Application.GetSaveAsFilename("", filefilter:=FileFormatstr, Title:="Create PDF")         If Fname = False Then Exit Function     Else         Fname = FixedFilePathName     End If      If OverwriteIfFileExist = False Then         If Dir(Fname) &lt;&gt; "" Then Exit Function     End If      On Error Resume Next     Source.ExportAsFixedFormat Type:=xlTypePDF, FileName:=Fname, Quality:=xlQualityStandard, IncludeDocProperties:=True, IgnorePrintAreas:=False, OpenAfterPublish:=OpenPDFAfterPublish     On Error GoTo 0      If Dir(Fname) &lt;&gt; "" Then CreatePDF = Fname End Function  Function MailPDF(FileNamePDF As String, StrTo As String, StrCC As String, StrBCC As String, StrSubject As String, Signature As Boolean, Send As Boolean, StrBody As String)     Dim OutApp As Object, OutMail As Object, Ie As Object     Dim sBody1 As String, sBody2 As String, sBody3 As String, sBody4 As String     Dim s1stSpace As String      sBody1 = Left(StrBody, InStr(StrBody, " "))'this approach where I can give him 4 cells to enter text into and format however he wants is prefered to hard coding text into the VBA      Set OutApp = CreateObject("Outlook.Application")     Set OutMail = OutApp.CreateItem(0)      On Error Resume Next     With OutMail         If Signature = True Then .Display         .To = StrTo         .CC = StrCC         .BCC = StrBCC         .Subject = StrSubject         .HTMLBody = "&lt;P STYLE='font-family:Arial;font-size:11'&gt;Hi " &amp; sBody1 &amp; "&lt;br&gt;" &amp; .HTMLBody' this was not working at all for me as I mentioned above - formatting was getting processed in passing to the function - so I moved it here. It was better but the arial formatting wouldn't stick         .Attachments.Add FileNamePDF         If Send = True Then             .Send         Else             .Display         End If      End With     On Error GoTo 0      Set OutMail = Nothing     Set OutApp = Nothing End Function </code></pre>