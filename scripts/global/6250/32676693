<p>after more than a week, I am still working on this application that calculates employee's tax/pay. I have come much further than before, but now I am not sure why when I run it (error-free), I see 0's and the wrong amounts in all of the labels and I cannot seem to fix it. All that I am trying to do is calculate the pay and I thought I followed all instructions. Here is the formula and expected output:</p>  <blockquote>   <p>decGross      = intHours * decRate;        decFica       = decGross * cdecFICA_RATE;        decFederal    = decGross * cdecFEDERAL_RATE;<br>        decState      = decGross * cdecSTATE_RATE;        decNetpay     = decGross - (decFica + decFederal + decState + cdecUNION_DUES);</p> </blockquote>  <pre><code> cdecTotalNetpay += decNetpay;  cintEmployeeCount += 1;  decAverageNetpay = cdecTotalNetpay / cintEmployeeCount; </code></pre>  <p>◦Use these cases to test your program:</p>  <p>Case #    Worked    Rate     Netpay     ------    ------    ----     --------<br>       1        25      9.25     161.13<br>       2        45     15.00     489.50</p>  <p>Totals after both cases:</p>  <pre><code> Total Netpay:  650.63  Total Employee Count: 2  Average Netpay: 325.31 </code></pre>  <p>Here is my current code:</p>  <p><div class="snippet" data-lang="js" data-hide="false"> <div class="snippet-code"> <pre class="snippet-code-html lang-html prettyprint-override"><code>namespace CS4 {     public partial class frmCS4: Form     {         public frmCS4()         {             InitializeComponent();                      }            // Declare class-level variables and constants         // Class variables are initialized  to zero when declare                       private decimal decGross;             private decimal decFica;             private decimal decFederal;             private decimal decState;             private decimal decNetpay;             private decimal decAverageNet;                      int cintEmployeeCount;         decimal cdecTotalNetpay;           const decimal cdecFICA_RATE = 0.06M;         const decimal cdecFEDERAL_RATE = 0.15M;         const decimal cdecSTATE_RATE = 0.05M;         const decimal cdecUNION_DUES = 10.00M;                            private void button3_Click(object sender, EventArgs e)         {             this.Close();                  }          private void btnClear_Click(object sender, EventArgs e)         {             // Use Clear or null string "" for TextBoxes, but             // only use null string "" for Labels              txtHours.Clear();   // Clear             txtPayRate.Clear();              lblGross.Text = "";             lblFica.Text = "";             lblState.Text = "";             lblFederal.Text = "";             lblUnion.Text = "";             lblNet.Text = "";             lblTotalNet.Text = "";             lblEmployee.Text = "";             lblAverage.Text = "";               //Reset Accumulators             cdecTotalNetpay = 0;             cintEmployeeCount = 0;             cdecAverageNetPay = 0;              txtHours.Focus();         }          private void btnCalculate_Click(object sender, EventArgs e)         {                          // Input             // Use nested try-catch blocks to get input values             try             {                 // Get hours worked from textbox                  cintEmployeeCount = int.Parse(txtHours.Text);                 try                 {                     // Get pay rate from textbox                      cdecTotalNetpay = decimal.Parse(txtPayRate.Text);                      // Calculate gross amount                      decGross = intHours * decRate;                                          // Calculate taxes                     decFica = decGross * cdecFICA_RATE;                     decFederal = decGross * cdecFEDERAL_RATE;                     decState = decGross * cdecSTATE_RATE;                      // Calculate net pay                      decNetpay = decGross - (decFica + decFederal + decState + cdecUNION_DUES);                      // Accumulate summary values                      // Calculate average net pay                      cdecTotalNetpay += decNetpay;                     cintEmployeeCount += 1;                     decAverageNet = cdecTotalNetpay / cintEmployeeCount;                      //Display results of calculations and summary values                      txtHours.Text = cintEmployeeCount.ToString("N0");                      txtPayRate.Text = decRate.ToString("C");                     lblGross.Text = decGross.ToString("C");                     lblFica.Text = decFica.ToString("C");                      lblState.Text = decState.ToString("C");                     lblFederal.Text = decFederal.ToString("C");                      lblNet.Text = decNetpay.ToString("C");                     lblAverage.Text = decAverageNet.ToString("C");                     lblEmployee.Text = cintEmployeeCount.ToString("C");                     lblTotalNet.Text = cdecTotalNetpay.ToString("C");                     lblUnion.Text = cdecUNION_DUES.ToString("C");                 }                 catch (FormatException err)                 {                     MessageBox.Show("Pay Rate must be numeric. " + err.Message,                       "Data Entry Error", MessageBoxButtons.OK,                       MessageBoxIcon.Exclamation);                     txtPayRate.SelectAll();                     txtPayRate.Focus();                 }             }             catch (FormatException err)             {                 MessageBox.Show("Hours worked must be numeric. " + err.Message,                   "Data Entry Error", MessageBoxButtons.OK,                   MessageBoxIcon.Exclamation);                 txtHours.SelectAll();                 txtHours.Focus();             }             catch (Exception err)             {                 MessageBox.Show("Unexpected Error: " + err.Message);             }         }          private void txtHours_TextChanged(object sender, EventArgs e)         {          }          private void txtPayRate_TextChanged(object sender, EventArgs e)         {          }          private void frmCS4_Load(object sender, EventArgs e)         {          }//end method            public int intHours { get; set; }          public decimal cdecAverageNetPay { get; set; }          public decimal decRate { get; set; }          public void lblUnion_Click(object sender, EventArgs e)         {          }          private void lblGross_Click(object sender, EventArgs e)         {          }          private void lblFica_Click(object sender, EventArgs e)         {          }          private void lblState_Click(object sender, EventArgs e)         {          }          private void lblFederal_Click(object sender, EventArgs e)         {          }          private void lblTotalNet_Click(object sender, EventArgs e)         {          }     }     } ​</code></pre> </div> </div> </p>  <p>Please help...I am pretty desperate, but I am learning along the way...Thank you.</p>