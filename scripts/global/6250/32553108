<p>I was trying to get a cubic root in java using <code>Math.pow(n, 1.0/3)</code> but because it divides doubles, it doesn't return the exact answer. For example, with 125, this gives 4.9999999999. Is there a work-around for this? I know there is a cubic root function but I'd like to fix this so I can calculate higher roots.</p>  <p>I would not like to round because I want to know whether a number has an integer root by doing something like this: <code>Math.pow(n, 1.0 / 3) % ((int) Math.pow(n, 1.0 / 3))</code>.</p>