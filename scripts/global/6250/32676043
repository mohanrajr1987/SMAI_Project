<p>What I need to do is to create an assembly source file (2hex.s), to be able to use it on a C program (test2hex.c). In 2hex.s, I need to create a function to turn the decimal number to a hexadecimal string.</p>  <p>Here is the test2hex.c file:</p>  <pre><code>#include&lt;stdio.h&gt;  void tohex(long x);  int main{     tohex(1);    //Output: 0000000000000001     tohex(1035); //Output: 000000000000040B     tohex(-2);   //Output: FFFFFFFFFFFFFFFE     return 0; } </code></pre>  <p>Now, I need to create a 2hex.s file to print those outputs. I am not sure how I can do this. Here is my attempt at it:</p>  <pre><code>    .global tohex     .text tohex:     xor     %r10,%r10     mov     $16, %r11     mov     %rdi, %rax     cqto next:     idiv    %r11     cmp     $10, %rdx     jg      lttrs     mov     %rdx,%rcx     add     $48,%rcx     mov     %rcx, %rdi     call    putchar     inc     %r10     cmp     $15, %r10     jle     next     jmp     exit lttrs:     mov     %rdx, %rcx     add     $55, %rcx     mov     %rcx, %rdi     call    putchar     inc     %r10     cmp     $15, %r10     jle     next     jmp     exit exit:     ret </code></pre>  <p>At first I was actually able to get the letter B when I run the second function (tohex(1035)) without the 16 times loop. However, using the loop seems to have caused a floating point exception error. </p>  <p>Also one more thing, I can guess that the result would come in the reverse order of what I need, so what would I need to do for that?</p>  <p>Help me out please.</p>