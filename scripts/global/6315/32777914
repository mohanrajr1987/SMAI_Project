<p>I have a jtable, with editable and non-editable cells. I would like to modify the non-editable cells based on the editable cells, with some formulas.</p>  <p>I tried the following:</p>  <pre><code>int input_column = 0; int output_column = 5; table.getModel().addTableModelListener(new TableModelListener() {         public void tableChanged(TableModelEvent e) {              int rowIndex = pricestable.getSelectedRow();             int columnIndex = pricestable.getSelectedColumn();              if (columnIndex == input_column) {                 String value1 = table.getModel().getValueAt(rowIndex, input_column).toString();                 //do some operations with value1 convert, it to outputvalue                 table.setValueAt(outputvalue, rowIndex, output_column);             }         }      }); </code></pre>  <p>The problem is, that the tablechanged event will be called recursively... Does anyone know what am I doing wrong, or do have any better solution?</p>  <p>I have seen some solutions with overwriting the setValueAt() method,  but sometimes I need to use the combined value of two input cells to generate the output cell value, and I can add this listener after I populate the table, but can't do it if I overwrite the setValueAt()...</p>