<p>I have created a custom table (call it <code>STable</code> )that contains it's own sorting function<br> what I want to do is to create a default renderer that changes the color of cells when table is sorted even if this table contains already a CellTableRenderer, so basically I want to get the renderer used for the cells and change only the foreground color.<br> I created a default renderer for the table:<br></p>  <pre><code>private class SearchRenderer extends DefaultTableCellRenderer{         @Override         public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus,int row, int column) {                        Component cellComponent = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);                           cellComponent.setForeground(Color.BLUE);               return cellComponent;         }     } </code></pre>  <p>And then I check if the table is sorted and call this function:<br></p>  <pre><code>protected void setSearchRenderer() {         SearchRenderer sr = new SearchRenderer();         int nbDisplayedRows = table.getRowCount();         int nbAllRows = table.getModel().getRowCount();         if(nbDisplayedRows == nbAllRows)             table.setDefaultRenderer(Object.class,defaultTableRender);//--set the initial renderer used for my STable         else             table.setDefaultRenderer(Object.class, sr); } </code></pre>  <p><br> But this is the result I get:<br> <a href="http://i.stack.imgur.com/3cSj5.png" rel="nofollow"><img src="http://i.stack.imgur.com/3cSj5.png" alt="enter image description here"></a></p>