<p>Currently I got the following problem:</p>  <p>I load the TableModel data from a H2 database like so:</p>  <pre><code>public static DefaultTableModel loadTableModel(ResultSet rs)             throws SQLException {      // names of columns     Vector&lt;String&gt; columnNames = new Vector&lt;String&gt;();     int columnCount = Definitions.COLUMN_NAMES.length;     for (String string : Definitions.COLUMN_NAMES) {         columnNames.add(string);     }      // data of table     Vector&lt;Vector&lt;Object&gt;&gt; data = new Vector&lt;Vector&lt;Object&gt;&gt;();     while (rs.next()) {         Vector&lt;Object&gt; vector = new Vector&lt;Object&gt;();         for (int columnIndex = 1; columnIndex &lt;= columnCount; columnIndex++) {             if (rs.getObject(columnIndex).getClass() == Integer.class) {                 if ((int) rs.getObject(columnIndex) == 0) {                     vector.add(null);                 } else {                     vector.add(rs.getObject(columnIndex));                 }             } else {                 vector.add(rs.getObject(columnIndex));             }         }          data.add(vector);     }      return new DefaultTableModel(data, columnNames);  } </code></pre>  <p>By doing so I pass over the <code>data</code> from my database and <code>columnNames</code> to the constructor of the <code>DefaulTableModel</code>. The problem is, that not all my columns contain the same data type (seemingly the default type seems to be String), so I need to set the data type for all columns directly while creating the <code>DefaultTableModel</code>. How can this be don? I did not find a method to change the column class later on. </p>  <p>If I create my own "<code>TableModelClass</code>" that extends <code>DefaultTableModel</code>, how do I need to create a constructor that works something like this:</p>  <pre><code>TableModelClass(data, columnNames, columnType) </code></pre>  <blockquote>   <p>columnType should be a vector containing the Class types like   <code>String.class</code>, <code>Boolean.class</code> etc.</p> </blockquote>