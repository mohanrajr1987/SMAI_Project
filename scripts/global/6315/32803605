<p>Is there any way to listener for cell selection even on already selected cells with a <code>JTable</code>, other than using a <code>MouseListener</code>?</p>  <hr>  <p>I have a JTable with a row and column listener. Neither listener fires when selecting an already selected cell:</p>  <pre><code>JTable table() {     JTable table = new JTable(10, 10);     table.getSelectionModel().addListSelectionListener(rowListener);     table.getColumnModel().getSelectionModel().addListSelectionListener(colListener);     return table; }  ListSelectionListener rowListener = event -&gt; {     if(event.getValueIsAdjusting())         return;      System.out.println("Row: "+((ListSelectionModel) event.getSource()).getMinSelectionIndex()); };  ListSelectionListener colListener = event -&gt; {     if(event.getValueIsAdjusting())         return;      System.out.println("Col: "+((ListSelectionModel) event.getSource()).getMinSelectionIndex()); }; </code></pre>  <p>My goal was to switch cells on/off. It works, other than the fact that the listeners do not fire when selecting an already selected cell, which is represented through the SSCCE above.</p>  <p>There doesn't seem to be any listener I can attach to the <code>JTable</code> (or it's models/selection models) to handle this, unless I were to use a <code>MouseListener</code> and manually manage the cooridnates. Using a <code>TableModelListener</code>, I can listen for changes, but this event is targeted at a previous cell (that has been deselected), and clicking an area that doesn't select a cell would cause that listener to fire.</p>