<p>I want to add a scrollpane in the frame window or comboPanel. </p>  <p>Below code, the <code>guiFrame.add(scrollpane)</code> is not working, why it is not working?</p>  <p>How can I add the scrollpane to comboPanel or the guiFrame?</p>  <pre><code>import java.awt.BorderLayout; import java.awt.event.ActionEvent; import java.awt.event.ActionListener; import java.awt.event.ItemEvent; import java.awt.event.ItemListener;  import javax.swing.BoxLayout; import javax.swing.JButton; import javax.swing.JComboBox; import javax.swing.JFrame; import javax.swing.JLabel; import javax.swing.JPanel;  public class ExtraComboBox {     private int maxFields = 4; // The max number of fields allowed in the dialog     JComboBox fruits[] = new JComboBox[maxFields];     JPanel comboPanel;     JFrame guiFrame;     String[] valOptions3 = { "&amp;" };     String[] valOptions2 = { "|-&gt;", "|=&gt;" };     String[] valOptions1 = { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9" };     String[] valOptions0 = { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9" };     String[] fruitOptions1 = { "", "Delay1", "Delay2", "Delay3" };     JButton addField;     int count1 = 0;      JLabel dudel[] = new JLabel[maxFields];     JComboBox dude2[] = new JComboBox[maxFields];     String[] valOptions = { "Unknown", "0", "1" };     String[] s = { "a", "b", "c", "d", "e", "f", "g", "h", "i" };     private JLabel comboLbl;      public static void main(String[] args) {         new ExtraComboBox();     }      public ExtraComboBox() {         guiFrame = new JFrame();          // make sure the program exits when the frame closes         guiFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);         guiFrame.setTitle("ComboBox GUI");         guiFrame.setSize(350, 350);          // The first JPanel contains a JLabel and JCombobox         comboPanel = new JPanel();          addField = new JButton("Add Field");         addField.addActionListener(new ActionListener() {              @Override             public void actionPerformed(ActionEvent event) {                 if (event.getSource().equals(addField)) {                     if (count1 &lt; maxFields) {                         comboLbl = new JLabel("Select a relation:");                         fruits[count1] = new JComboBox&lt;String&gt;(fruitOptions1);                         MyItemListener2 actionListener2 = new MyItemListener2(count1);                         fruits[count1].addItemListener(actionListener2);                         // System.out.println("HI: " + fruits[count1].getParent());                         dude2[count1] = new JComboBox&lt;String&gt;();                         System.out.println("ADD FIELDS: " + count1);                         comboPanel.add(comboLbl);                         comboPanel.add(fruits[count1]);                         comboPanel.add(dude2[count1]);                         guiFrame.validate();                         guiFrame.repaint();                         count1++;                     } else {                         System.out.println("You reached the maximum of 4 fields.");                     }                 }             }         });          comboPanel.setLayout(new BoxLayout(comboPanel, BoxLayout.Y_AXIS));         comboPanel.add(addField);         // The JFrame uses the BorderLayout layout manager.         // Put the two JPanels and JButton in different areas.         guiFrame.add(comboPanel, BorderLayout.NORTH);         // make sure the JFrame is visible         guiFrame.setVisible(true);     }      class MyItemListener2 implements ItemListener {         private int index;          public MyItemListener2(int pIndex) {             super();             index = pIndex;         }          // This method is called only if a new item has been selected.         public void itemStateChanged(ItemEvent evt) {              if (evt.getStateChange() == ItemEvent.SELECTED) {                 // Item was just selected                 System.out.println("COUNTER: " + index);                 System.out.println(evt.getItem());                  dude2[index].removeAllItems();                 switch ((String) evt.getItem()) {                 case "Delay1":                     for (int i = 0; i &lt; valOptions1.length; i++) {                         dude2[index].addItem(valOptions1[i]); // dude1 = new JComboBox(valOptions1);                         System.out.println(valOptions1[i]);                     }                     break;                 case "Delay2":                      for (int j = 0; j &lt; valOptions2.length; j++) {                         System.out.println(valOptions2[j]);                         dude2[index].addItem(valOptions2[j]); // dude1 = new JComboBox(valOptions1);                     }                     break;                 case "Delay3":                     for (int j = 0; j &lt; valOptions3.length; j++) {                         System.out.println(valOptions3[j]);                         dude2[index].addItem(valOptions3[j]); // dude1 = new JComboBox(valOptions1);                     }                 }             }         }     }  } </code></pre>