<p>I have an InputStream <code>is</code> and this code:</p>  <pre><code>JSONObject jo = new JSONObject(); jo.put("currentHomeId", is.readLong()); jo.put("homeId", is.readLong());  boolean isInClan = is.readBoolean(); if (isInClan) {     jo.put("clanId", is.readLong());     jo.put("clanBadge", is.readInt());     jo.put("clanLevel", is.readInt()); }  JSONArray ja = new JSONArray(); ja.put(jo);  mainObj = new JSONObject(); mainObj.put("avatar", ja); return mainObj.toString(); </code></pre>  <p>I have this returned like so: <code>String obj = avatar();</code></p>  <p>But there is a problem which is causing this to always return null. Why is this happening and how can I fix it?</p>  <p>Also I am doing this on a tomcat server as I am making a web API.</p>  <p>Here is my full code:</p>  <p>This is what is used to call the json stuff:</p>  <pre><code> public static String obj;   ....  InputStream myis = new ByteArrayInputStream(decryptedPayload);  Avatar avatar = new Avatar(myis);  obj = avatar.parseAvatar(); </code></pre>  <p>And this here is the Avatar class:</p>  <pre><code>public class Avatar {     private PacketInputStream is;     private JSONObject mainObj;       public Avatar(InputStream myis) throws IOException, JSONException{         is = new PacketInputStream(myis);         parseAvatar();     }      public String parseAvatar() throws IOException, JSONException{           is.readVarInt();          JSONObject jo = new JSONObject();         jo.put("currentHomeId", is.readLong());         jo.put("homeId", is.readLong());          boolean isInClan = is.readBoolean();         if (isInClan) {             jo.put("clanId", is.readLong());             jo.put("clanName", is.readString());             jo.put("clanBadge", is.readInt());             jo.put("clanLevel", is.readInt());         }          is.skipBytes(53);         jo.put("league", is.readInt());         jo.put("clanCaslteLevel", (is.readInt() + 1));         jo.put("maxCcTroops", is.readInt());         is.readInt();         jo.put("townHall", (is.readInt() + 1));         jo.put("userName", is.readString());         is.readInt();         is.readInt();         is.readInt();          JSONArray ja = new JSONArray();         ja.put(jo);         mainObj = new JSONObject();         mainObj.put("avatar", ja);          return mainObj.toString();        }  } </code></pre>  <p>This is the code that I am using to display it on the web:</p>  <pre><code>String obj = MessageManager.obj; out.println("JSON: "+obj); </code></pre>  <p><code>MessageManager</code> is the class that calls the Avatar class.</p>  <p>Thank you for the help you can provide.</p>