<p>I have a <code>WatchService</code> for monitoring a folder for new and modified files.</p>  <p>Problem: the app runs on a <code>tomcat</code> server, and when I shutdown the server, the following error message is logged (plus it takes a long time until the server shuts down):</p>  <pre><code>01-Oct-2015 08:58:11.998 WARNING [localhost-startStop-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [myapp] appears to have started a thread named [Thread-5] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread: sun.nio.fs.WindowsNativeDispatcher.GetQueuedCompletionStatus0(Native Method) sun.nio.fs.WindowsNativeDispatcher.GetQueuedCompletionStatus(Unknown Source) sun.nio.fs.WindowsWatchService$Poller.run(Unknown Source) java.lang.Thread.run(Unknown Source)  01-Oct-2015 08:58:11.998 WARNING [localhost-startStop-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [myapp] appears to have started a thread named [SimpleAsyncTaskExecutor-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread: sun.misc.Unsafe.park(Native Method) java.util.concurrent.locks.LockSupport.park(Unknown Source) java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(Unknown Source) java.util.concurrent.LinkedBlockingDeque.takeFirst(Unknown Source) java.util.concurrent.LinkedBlockingDeque.take(Unknown Source) sun.nio.fs.AbstractWatchService.take(Unknown Source) </code></pre>  <p>How could I fix this? My watchservice is just as usual:</p>  <pre><code>WatchService watchService = FileSystems.getDefault().newWatchService(); Path path = Paths.get(folder); path.register(watchService, events);  WatchKey key = null; while (true) {     try {         key = watchService.take();         for (WatchEvent&lt;?&gt; event : key.pollEvents()) {             //etc         }          key.reset();     } catch (ClosedWatchServiceException e) {         break;     } } </code></pre>