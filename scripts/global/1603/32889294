<p>I use</p>  <pre><code>Tomcat 8.0.26 Spring Boot 1.2.6.RELEASE Spring 4.2.1.RELEASE Spring Batch 3.0.5.RELEASE </code></pre>  <p>In my application I have a following Spring Batch config:</p>  <pre><code>@Configuration @EnableBatchProcessing public class ReportJobConfig {      public static final String REPORT_JOB_NAME = "reportJob";      @Autowired     private JobBuilderFactory jobBuilderFactory;      @Autowired     private StepBuilderFactory stepBuilderFactory;      @Autowired     private ReportService reportService;      @Bean(name = REPORT_JOB_NAME)     public Job reportJob() {         //@formatter:off         return jobBuilderFactory                 .get(REPORT_JOB_NAME)                     .flow(createRequestStep())                         .on("*").to(retriveInfoStep())                             .on("*").to(notifyAdminStep())                     .end().build();         //@formatter:on     }      @Bean     public Step createRequestStep() {         return stepBuilderFactory.get("createRequest").tasklet(new CreateRequestTasklet(reportService)).build();     }      @Bean     public Step retrivePHIStep() {         return stepBuilderFactory.get("retriveInfo").tasklet(new RetriveInfoTasklet(reportService)).build();     }      @Bean     public Step notifyAdminStep() {         return stepBuilderFactory.get("notifyAdmin").tasklet(new NotifyAdminTasklet()).build();     }  } </code></pre>  <p>This is how I run the job:</p>  <pre><code>@Service public class ReportJobServiceImpl implements ReportJobService {      final static Logger logger = LoggerFactory.getLogger(ReportJobServiceImpl.class);      @Autowired     @Qualifier(ReportJobConfig.REPORT_JOB_NAME)     private Job reportJob;      @Autowired     private JobLauncher jobLauncher;      @Override     public void runReportJob(String messageContent) throws JobExecutionAlreadyRunningException, JobRestartException,             JobInstanceAlreadyCompleteException, JobParametersInvalidException {         Map&lt;String, JobParameter&gt; parameters = new HashMap&lt;&gt;();         JobParameter reportIdParameter = new JobParameter(messageContent);         parameters.put(REPORT_ID, reportIdParameter);          jobLauncher.run(reportJob, new JobParameters(parameters));     }  } </code></pre>  <p>Batch properties:</p>  <pre><code>batch.jdbc.driver=com.mysql.jdbc.Driver batch.jdbc.url=jdbc:mysql://localhost/database batch.jdbc.user=user batch.jdbc.password=password batch.jdbc.testWhileIdle=true batch.jdbc.validationQuery=SELECT 1 batch.drop.script=classpath:/org/springframework/batch/core/schema-drop-mysql.sql batch.schema.script=classpath:/org/springframework/batch/core/schema-mysql.sql batch.business.schema.script=classpath:/business-schema-mysql.sql batch.database.incrementer.class=org.springframework.jdbc.support.incrementer.MySQLMaxValueIncrementer batch.database.incrementer.parent=columnIncrementerParent batch.lob.handler.class=org.springframework.jdbc.support.lob.DefaultLobHandler batch.grid.size=50 batch.jdbc.pool.size=6 batch.verify.cursor.position=true batch.isolationlevel=ISOLATION_SERIALIZABLE batch.table.prefix=BATCH_ </code></pre>  <p>I deploy this application to Tomcat 8, perform some jobs and then undeploy application via Tomcat Web Application Manager.</p>  <p>With Java VisualVM tool I compared memory snapshots before and after and see that there are a lot of Spring Batch(<code>org.springframework.batch.*</code>) related objects still exist in memory:</p>  <p><a href="http://i.stack.imgur.com/K3BIO.png" rel="nofollow"><img src="http://i.stack.imgur.com/K3BIO.png" alt="enter image description here"></a></p>  <p>Also, I run 1000 <code>reportJob</code> and got a huge memory consumption on my machine.. I have no idea what can be wrong right now..</p>  <p>What could be causing this issue ?</p>  <p><strong>UPDATED</strong></p>  <p>I have consumed ~1000 messages from AWS SQS queue. My JMS listener configured to consume 1 message at a time. During the execution I had a following heap histogram:</p>  <p><a href="http://i.stack.imgur.com/VI6j6.png" rel="nofollow"><img src="http://i.stack.imgur.com/VI6j6.png" alt="enter image description here"></a></p>  <p>I really don't understand why do I need for example to have in memory 7932 instances of StepExecution.. or 5285 of JobExecution objects. Where is my mistake ?</p>