<p>I am building a web app where users can sign up. I have a jquery validation method for the signup form.  What I need is to also validate the username for availability according to my database. I am not allowed to use php to do this, so i need to use java, a javabean for that cause. How can i combine jquery and java like this ? Should i use the "remote" command from jquery or combine validation with another function ?  If name already exists n database i don't want my form to submit.</p>  <p><strong>Signup.xhtml</strong></p>  <pre class="lang-html prettyprint-override"><code>&lt;!DOCTYPE html&gt; &lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;     &lt;head&gt;         &lt;title&gt;TODO supply a title&lt;/title&gt;          &lt;link rel="stylesheet" type="text/css" href="newcss.css" /&gt;         &lt;link href="//netdna.bootstrapcdn.com/twitter-bootstrap/2.3.2/css/bootstrap-combined.no-icons.min.css" rel="stylesheet"&gt;&lt;/link&gt;         &lt;script src="//netdna.bootstrapcdn.com/twitter-bootstrap/2.3.2/js/bootstrap.min.js"&gt;&lt;/script&gt;         &lt;script src="jquery.js" type="text/javascript"&gt;&lt;/script&gt;          &lt;script src="//code.jquery.com/jquery-1.9.1.js"&gt;&lt;/script&gt;          &lt;script src="http://ajax.aspnetcdn.com/ajax/jquery.validate/1.14.0/jquery.validate.js" type="text/javascript"&gt;&lt;/script&gt;         &lt;script src="http://ajax.aspnetcdn.com/ajax/jquery.validate/1.14.0/jquery.validate.min.js" type="text/javascript"&gt;&lt;/script&gt;         &lt;script src="http://ajax.aspnetcdn.com/ajax/jquery.validate/1.14.0/additional-methods.min.js" type="text/javascript"&gt;&lt;/script&gt;                &lt;script src="validate.js" type="text/javascript"&gt;&lt;/script&gt;         &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"/&gt;     &lt;/head&gt;     &lt;body&gt;          &lt;div id="container" align="center"&gt;         &lt;h2&gt;User Registration&lt;/h2&gt;         &lt;form action="welcome.xhtml" method="post" id="contact_form"&gt;              &lt;div&gt;                 &lt;label for="name"&gt;Name&lt;/label&gt;                 &lt;input id="name" type="text" name="name"/&gt;                 &lt;span id="nameInfo"&gt;&lt;/span&gt;             &lt;/div&gt;              &lt;div &gt;                 &lt;label for="email" &gt;Email&lt;/label&gt;                 &lt;input id="email" type="text" name="email"/&gt;                 &lt;span id="emailInfo"&gt;&lt;/span&gt;             &lt;/div&gt;              &lt;div&gt;                 &lt;label for="password"&gt;password&lt;/label&gt;                 &lt;input id="password" type="password" name="pass1"/&gt;                 &lt;span id="pass1Info"&gt;&lt;/span&gt;             &lt;/div&gt;              &lt;div&gt;                 &lt;label for="confirm"&gt;confirm password&lt;/label&gt;                 &lt;input id="confirm" type="password" name="pass2"/&gt;                 &lt;span id="pass2Info"&gt;&lt;/span&gt;             &lt;/div&gt;              &lt;div&gt;                 &lt;label for="message"&gt;Message&lt;/label&gt;                 &lt;textarea id="message" name="message"/&gt;                 &lt;span id="messageInfo"&gt;&lt;/span&gt;             &lt;/div&gt;              &lt;div&gt;                 &lt;input id="send" name="send"  type="submit" value="Send"/&gt;             &lt;/div&gt;              &lt;br/&gt; &lt;!--            &lt;p&gt;Already registered? &lt;a href="/login"&gt;Sign in&lt;/a&gt;.&lt;/p&gt;        --&gt;         &lt;/form&gt;         &lt;/div&gt;     &lt;/body&gt; &lt;/html&gt; </code></pre>  <p><strong>validate.js</strong></p>  <pre class="lang-js prettyprint-override"><code>$(document).ready(function () {      //Validation rules for form     $("#contact_form").validate({         // Specify the validation rules         rules: {             name: {                 required: true //                remote: ???             },              password: {                 required: true,                 minlength: 5             },              confirm: {                 required: true,                 equalto: "#password"             },              email: {                 required: true,                 email: true             }         },          // Specify the validation error messages         messages: {             name: "Please enter your name",              password: {                 required: "Please provide a password",                 minlength: "Your password must be at least 5 characters long"             },              confirm:{                 equalto: "Passwords are not matching"             },              email: "Please enter a valid email address"         },          submitHandler: function (form) {             form.submit();         }     }); }); </code></pre>  <p>CheckAvailability.java (I inserted as js, cause it would not retain its format)</p>  <pre class="lang-js prettyprint-override"><code>package Beans;    import java.io.*;   import java.sql.*;   import javax.servlet.ServletException;   import javax.servlet.http.*;    public class CheckAvailability extends HttpServlet {     private static final long serialVersionUID = -734503860925086969L;     @Override     protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {           doPost(request, response);       }     @Override  protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {             response.setContentType("text/html;charset=UTF-8");           PrintWriter out = response.getWriter();            try {                String connectionURL = "jdbc:mysql://localhost:3306/teddb"; // teddb is my database name               Connection connection;               Class.forName("com.mysql.jdbc.Driver").newInstance();               connection = DriverManager.getConnection(connectionURL, "root", "Sk1994!!");                 String uname = request.getParameter("name");                PreparedStatement ps = connection.prepareStatement("select username from users where username=?");               ps.setString(1,uname);               ResultSet rs = ps.executeQuery();                if (!rs.next()) {                   out.println("");               }               else{                   out.println("Username already in use");               }               out.println();            }          catch (ClassNotFoundException | InstantiationException | IllegalAccessException | SQLException ex) {               out.println("Error -&gt;" + ex.getMessage());           } finally {               out.close();           }       }   }   </code></pre>