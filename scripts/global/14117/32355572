<p>I'm trying to manually invoke jquery validate on a set of elements from within a function in my angular controller. The problem is that the dom elements that jquery validation is trying to validate aren't updated until my method finishes execution and evaluation from <code>$apply</code> is completed.</p>  <p>I tried to manually call $scope.$apply() from within the angular function but got the exception that <code>$apply already in progress</code>. It works in that the dom elements are updated before I invoke validation, but having an exception is not ideal and who know's what other bugs that could introduce.</p>  <pre><code>$scope.select = function (item) {     // this function sets the selected school item but we have to map     // fields from item (from the db) to fields from our c# POCO (our      // bound elements)     mapSelectedSchoolItem(item);      $('.schoolsearch-fields', $element).find(dataviewConstants.defaults.submittables).each(function () {         // dateviewConstants.validator() is an internal delegate that gives me a handle         // to the validator for the form         dataviewConstants.validator().element($(this));     }); }  function mapSelectedSchoolItem(item, deselect) {     for (var key in item) {         var fieldName = getKey(dataviewConstants.defaults.schoolSearchFieldNames, key),             newValue = deselect ? '' : item[key];         if (fieldName) {              $scope.model.selectedSchoolItem[fieldName] = newValue;         }      }     // I tried doing this, and it sort of works but throws an exception that      // apply is already in progress. Not ideal     //$scope.$apply(); } </code></pre>  <p>Perhaps I'm going about this wrong. Should I be calling jquery validate from within $scope.select, and if so, what is the proper way to do that? If not, what is a more appropriate way to accomplish this?</p>