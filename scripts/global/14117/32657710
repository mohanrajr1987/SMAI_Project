<p>There are a number of similar posts but this is not working for me.  I've tried it about 20 different ways now so if someone can put me on the right track its much appreciated.</p>  <p>First I tried this.  Seems to be correct according to the docs but the JSON that is being sent is just the element id ('element' is a jQuery element ref)</p>  <pre><code>if (valData.ValidationItems[i].Date) {     element.rules("add", {         remote: {             url: websiteBase + "Home/DateValidation",             type: "post",             data: {                 Date: function () { return $("#" + element[0].id).val() },                 Min: valData.ValidationItems[i].RangeMin,                 Max: valData.ValidationItems[i].RangeMax             },             dataType: "json"         },         messages: { remote: valData.ValidationItems[i].ValidationMessage }     }); } </code></pre>  <p>This next bit that I tried works one time but then locks up the browser</p>  <pre><code>remote: function () {     var remoteData = {         Date: $("#" + element[0].id).val(),         Min: data.ValidationItems[i].RangeMin,         Max: data.ValidationItems[i].RangeMax     }     var remoteJSON = JSON.stringify(remoteData);     var r = {         url: websiteBase + "Home/DateValidation",         type: "post",         dataType: "json",         data: remoteJSON     }     return r; } </code></pre>  <p>This is using jQuery validate 1.8 which is the version installed for MVC 3 projects.</p>