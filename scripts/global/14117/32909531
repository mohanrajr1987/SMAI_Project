<p>I have a form containing a dynamic (user-created) amount of input fields, some of which need to be validated. The amount of input fields can very likely get into the tens of thousands, and so when I click submit, if there is a large number of fields created, <strong>jquery validate freezes up my browser for several seconds while it checks and marks my input fields as invalid</strong>. </p>  <p>This is bad and unnecessary since <strong>I'm already marking my input fields upon creation</strong> and on keyup, and then I have <code>invalidHandler</code> take care of alerting the user and then I do a bunch of stuff with my inputs in <code>submitHandler</code>.</p>  <p>What I want to do is something like this:</p>  <pre><code>$("#myForm").validate({     onsubmit: false,     onkeyup: function (element) {         $(element).valid();     },     invalidHandler: function (event, validator) {         //alert user, highlight invalid fields...     },     submitHandler: function (form) {         //a bunch of stuff...     } }); </code></pre>  <p>But when I try that and I click submit, the form straight up gets submitted, even if it has invalid fields, passing straight through both my handlers. I get it that it's because I'm not validating on submit, but I assumed that setting  <code>onsubmit: false</code> would simply prevent the plugin from <strong>unnecessarily re-checking and re-marking already marked inputs</strong>, while still running my handlers. How do I achieve this?</p>