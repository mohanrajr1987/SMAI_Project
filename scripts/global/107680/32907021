<p>I'm developing some multi-user application. In this application multiple users can access and edit data. For the frontand webapp I use AngularJS.</p>  <p>I am facing some architectural problem.</p>  <p>Let's say, there is some data1. This data1 should be accessible for many users (view only), but only one user should have the possibility to edit this data1.</p>  <p>If the data1 is marked as inEdit, the other users can only view the last saved version of the data1.</p>  <p>Now, I am not quite sure, how to implement this feature.</p>  <p>As for me, there are two ways of doing that.</p>  <p><strong>FIRST</strong>: Save the object state in the DB</p>  <p><strong>SECOND</strong>: Save the object state in a global service</p>  <p>My problem is, I don't know, which way is the better one.</p>  <p>If I choose the <strong>FIRST</strong> approach, I will have following (approximate) events order:</p>  <ol> <li><p>User gets the list with data loaded from the DB. (+1 request)</p></li> <li><p>When double clicking on some data set, there will be a request to DB, which will provide data of the data set and its state (inEdit or nothing). (+1 request)</p></li> <li><p>When the user chooses edit on the data set - request to the DB to check if the object is still not in the inEdit state. If it is so - save new state of the object (set inEdit) and then allow the user to edit the object. If the object is in edit state - notify the user. (+1 request)</p></li> <li><p>User edited data and then clicks save - request to the DB - save new data, and reset objects inEdit state. (+1 request)</p></li> </ol>  <p>_____________4 DB requests_____________</p>  <p>The <strong>SECOND</strong> approach has the following order:</p>  <ol> <li><p>DB request to get the list of items. (+1 request)</p></li> <li><p>Double click - open data set - request object details from the DB and check for entries in the global service. (+1 request)</p></li> <li><p>Clicking edit  - check for the state in the global service.</p></li> <li><p>Write the object type and id in the global service if opened for edit.</p></li> <li><p>Saving edits - write edits in the DB and delete the service entry (+1 request)</p></li> </ol>  <p>_____________________________3 requests + service____________</p>  <p>I thing the idea with the service, isn't that good, because if You consider there will be a lot of objects opened (and there will be a lot of such objects when the application grows), the service will have to store all the states. And that isn't good for the servers RAM, which will also have to store other data.</p>  <p>So, what would You recommend?</p>  <p>P.S. If there are some good implementations of my problem feel free to let me know about them.</p>