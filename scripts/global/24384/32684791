<p>I run into an issue where I have no clue how to use the old function <code>constraintsWithVisualFormat</code> without the <code>addConstraints</code> function on some specific view.</p>  <p>The header file says:</p>  <blockquote>   <p>This method will be deprecated in a future release and should be   avoided.Â  Instead use +[NSLayoutConstraint activateConstraints:].</p> </blockquote>  <p>Ok I'm fine with class functions but do I misunderstand here something? I was fixing my issue with pure <code>AutoLayout</code> and <code>UIScrollView</code> (<a href="https://developer.apple.com/library/ios/technotes/tn2154/_index.html" rel="nofollow">Technical Note</a>).</p>  <p>So I could do it like this and everything will be fine for now, but it won't be in the future:</p>  <pre><code>let views = ["containerView" : self.containerView]  self.scrollView.addConstraints(NSLayoutConstraint.constraintsWithVisualFormat("H:|[containerView]|", options: NSLayoutFormatOptions(rawValue: 0), metrics: nil, views: views)) self.scrollView.addConstraints(NSLayoutConstraint.constraintsWithVisualFormat("V:|[containerView]|", options: NSLayoutFormatOptions(rawValue: 0), metrics: nil, views: views)) </code></pre>  <p>Does this approach not set the <code>firstItem</code> or <code>secondItem</code> of the <code>NSLayoutConstraint</code> under the hood?</p>  <p>How do I mimic the right VF for this example?</p>  <p>I know how to create the same constraints with the new anchor syntax, but I'm curios how to use VFL in the future!?</p>