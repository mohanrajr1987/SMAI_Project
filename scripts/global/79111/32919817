<p>I do a each-loop for an array which I build in a helper:</p>  <pre><code>Template.article.helpers({     section: function() {         return [             {type: 'cars', sectionTitle: 'Cars'},              {type: 'vegetables', sectionTitle: 'Vegetables'}         ];     }, }); </code></pre>  <p>The data for the articles comes from the router:</p>  <pre><code>Router.route('/article/:_id', {     name: 'article',     data: function() {         return {             article: Articles.findOne({ _id: this.params._id })         }     }    }); </code></pre>  <p>But now I want to access a subelement of <code>article</code> with the <code>type</code> of the helper. So in this example the each loop will be done two times: I first want to use <code>../article.cars</code> and then <code>../article.vegetable</code>. I hope you understand my problem. I want to get the name of the subelement by the helper type:</p>  <pre><code>&lt;template name="article"&gt;     {{#each section}}         &lt;h1&gt;{{this.sectionTitle}}&lt;/h1&gt;          &lt;ul&gt;         {{#each ../article.type}} &lt;!-- should get '../article.cars' and '../article.vegetable' --&gt;             &lt;li&gt;{{this.title}}&lt;/li&gt;         {{/each}}         &lt;/ul&gt;     {{/each}} &lt;/template&gt; </code></pre>  <p>I want to use the content of <code>type</code> as a variable name. If type is 'cars', then I want to use <code>../articles.cars'. Which would be something like</code>articles['cars']<code>which would result of</code>articles[type]<code>. But in meteor this writing is not possible. And</code>articles.type` is something different.</p>