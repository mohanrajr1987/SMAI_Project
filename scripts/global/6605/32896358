<p>I'm trying to match a set of urls in a nginx config and each time the action I'm trying to perform are the same; that is proxy this request using a <code>proxy_pass</code> directive and set some headers and the like.</p>  <p>A cut down version of my config is as follows.</p>  <pre><code>upstream proxy_0 {     server 127.0.0.1:3001; }  upstream proxy_1 {     server 127.0.0.1:3001; }  server {      listen 80;     server_name test;      # by default route everything to proxy_0     location / {          proxy_set_header X-Real-IP $remote_addr;         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;         proxy_set_header X-NginX-Proxy true;         proxy_set_header Host $http_host;          proxy_pass http://proxy_0/;         proxy_pass_header Server;         proxy_redirect off;      }      location /route/to/proxy_1 {         proxy_set_header X-Real-IP $remote_addr;         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;         proxy_set_header X-NginX-Proxy true;         proxy_set_header Host $http_host;          proxy_pass http://proxy_1/;         proxy_pass_header Server;         proxy_redirect off;     }  } </code></pre>  <p>This all works as you'd hope but the set of urls that I would like to route to proxy_1 is about 20. Some of the matches are based on regexes and some of them are fixed. This can certainly be solved with copy-and-paste but this seems massively inelegant and in each event the behaviour I want is exactly the same in each case.</p>  <p>I'm certain I've missed something in the nginx docs or my understanding of location blocks is deficient. Any ideas?</p>