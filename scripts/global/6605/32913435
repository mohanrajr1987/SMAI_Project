<p>I'm trying to configure nginx for a parametrized URL of the form</p>  <p><a href="http://example.com/mydir/123456789abcdef0000" rel="nofollow">http://example.com/mydir/123456789abcdef0000</a></p>  <p>Where mydir exists on the filesystem (/www_node/public/mydir), and the number is an identifier used by some javascript on the page. Ideally it would support other parameters like <a href="http://example.com/mydir/123456789abcdef0000/parm1/value1/param2/value2" rel="nofollow">http://example.com/mydir/123456789abcdef0000/parm1/value1/param2/value2</a>. Note: I'm not trying to rewrite querystring parameters, the javascript on the page is parsing out the URL, so this should be pretty straightforward as far as configuring the server to just serve everything from /www_node/public/mydir.</p>  <p>My regex is "working" for aliasing the hex parameter alone, and serving up the index page from mydir. The problems arise when there is any slash in the URL following the ID.</p>  <p>I'm pretty sure I'm approaching this wrong altogether, but here is what I have so far:</p>  <pre><code>location /mydir/ {     index    page.html; } location ~ "^\/mydir\/\b([a-f0-9]{20,30})" {     default_type    "text/html";     alias    /www_node/public/mydir/page.html; } </code></pre>  <p>First off, I'm pretty sure sticking the html page on the alias is bad, which probably shows you how clueless I am on configuring nginx.... But it works, sortof. The reason for that was a standard ailas path (no html page) would cause nginx to automatically append a trailing slash, giving a 403 Forbidden error.</p>  <p>As configured, when I stick a trailing slash in there, I get a 500 error and this in the logs  "/www_node/public/mydir/page.htmlindex.html" is not a directory, client: 174.68.88.79, server: example.com, request: "GET /mydir/56047f7b02e62c8709961136/ HTTP/1.1", host: "example.com"</p>  <p>And when I put slashes in after the ID, but not at the end, it tries to serve up the non-existent path created by those slashes.</p>  <p>So basically what I want to do is this: starting at <a href="http://example.com/mydir" rel="nofollow">http://example.com/mydir</a>, have everything served up from /www_node/public/mydir regardless of what the remaining URL looks like.</p>  <p>Thanks</p>