<p>I have a library that expects a <code>const char *src</code> in the constructor. As below:</p>  <p><code>MYCLASS::MYCLASS(const char *src)</code></p>  <p>I'm trying to use it from a nginx module to pass the value of a cookie to this library and I'm getting some memory corruption.</p>  <p>I couldn't figure out what I'm doing wrong at this point. The cookie value reported on the debug of 'cookie' is always correct, but the one reported on u_cookie is only correct on the first request, after nginx serves other request and the pool is somehow used by others, the value returned always contains an additional character.</p>  <pre><code>ngx_str_t cookie = (ngx_str_t)ngx_string("THECOOKIE"); ngx_int_t location; ngx_str_t cookie_value; location = ngx_http_parse_multi_header_lines(&amp;r-&gt;headers_in.cookies, &amp;cookie, &amp;cookie_value);  ngx_log_debug1(NGX_LOG_DEBUG_HTTP, r-&gt;connection-&gt;log, 0,"cookie: \"%V\"", &amp;cookie_value);  u_char *u_cookie = (u_char *)ngx_pcalloc(r-&gt;pool, cookie_value.len); ngx_copy(u_cookie, cookie_value.data, cookie_value.len); ngx_log_debug1(NGX_LOG_DEBUG_HTTP, r-&gt;connection-&gt;log, 0,"u_cookie: \"%s\"", u_cookie);  MYCLASS myclass( (const char*)u_cookie ); </code></pre>  <p>output in the log looks like this ..</p>  <blockquote>   <p>2015/09/30 04:49:32 [debug] cookie:   "405JanIN9ztP/snEzyucny8KdgN"</p>      <p>2015/09/30 04:49:32 [debug] u_cookie: "405JanIN9ztP/snEzyucny8KdgNo"</p> </blockquote>