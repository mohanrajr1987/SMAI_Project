<p>I have the following module: </p>  <pre><code>(function(){  var app = angular.module('ModBrowser',['ModUserCredentials','ModContentGroup']);  app.directive('browser', function(){     return {         restrict: "E",         templateUrl: "angular_js/Browser/Browser.html",         controller: BrowserController,         controllerAs: 'ctrlBrowser'     } });  function BrowserController($http, $rootScope, UserCredentials){     var self = this;      self.active = false;      self.folders = [];     self.files = [];     self.models = [];      self.Init = function(){         self.active = true;          var url = "curl.php";         var data = {             path: "ViewFiles",             parent_id: "{\"user_id\":\"" + UserCredentials.ID + "\",\"parent_id\":\"" + $rootScope.selectedFolder + "\"}"         };          $http.post(url, data).then(function(response){             for(var i=0; i &lt; response.data.length; i++){                 if(response.data[i].object_type.trim() == "FOLDER"){                     self.folders.push(response.data[i]);                 }else if(response.data[i].object_type.trim() == "MODEL"){                     self.models.push(response.data[i]);                 }else {                     self.files.push(response.data[i]);                 }             }              console.log(self.folders);             console.log(self.models);             console.log(self.files);         });      }      $rootScope.$watch('selectedFolder',function(){         if($rootScope.selectedFolder !== undefined){             self.Init();         }     });  }})(); </code></pre>  <p>What this module does is that it list contents of a specific folder. Now every time I select a folder, the watcher listens and activates the init function</p>  <pre><code>    $rootScope.$watch('selectedFolder',function(){         if($rootScope.selectedFolder !== undefined){             self.Init();         }     }); </code></pre>  <p>The Init function just retrieves the files from the server and group the files. </p>  <pre><code>            for(var i=0; i &lt; response.data.length; i++){                 if(response.data[i].object_type.trim() == "FOLDER"){                     self.folders.push(response.data[i]);                 }else if(response.data[i].object_type.trim() == "MODEL"){                     self.models.push(response.data[i]);                 }else {                     self.files.push(response.data[i]);                 }             }              console.log(self.folders);             console.log(self.models);             console.log(self.files); </code></pre>  <p>Everything is working fine and I will pass the values to another directive.</p>  <pre><code>&lt;div class="panel panel-default" ng-show="ctrlBrowser.active"&gt; &lt;div class="panel-heading"&gt;&amp;nbsp;&lt;/div&gt; &lt;div class="panel-content"&gt;     &lt;content-group items="ctrlBrowser.folders"&gt;Folders&lt;/content-group&gt;     &lt;content-group items="ctrlBrowser.files"&gt;Files&lt;/content-group&gt;     &lt;content-group items="ctrlBrowser.models"&gt;Special Files&lt;/content-group&gt; &lt;/div&gt; </code></pre>  <p></p>  <p>And will display as follows.</p>  <pre><code>Folders   - Folder 1   - Folder 2 Files   - File 1   - File 2 Models    - Model 1 </code></pre>  <p>But when I select another folder, since what it does is only push to the existing array, it will also display previous files.</p>  <pre><code>Folders   - Folder 1 (old)   - Folder 2 (old)   - Folder 3 (new)   - Folder 4 (new) Files   - File 1 (old)   - File 2 (old) Models    - Model 1 (old) </code></pre>  <p>Now I tried to work around this by setting the folders, files, and models array to [] every time the Init function is called. </p>  <pre><code>  self.Init = function(){         self.active = true;          //----- Additional Code ------//          self.folders = [];         self.files = [];         self.models = [];          //----- End of Additional Code ------//           var url = "curl.php";         var data = {             path: "ViewFiles",             parent_id: "{\"user_id\":\"" + UserCredentials.ID + "\",\"parent_id\":\"" + $rootScope.selectedFolder + "\"}"         };          //---- Unchanged Codes ----//   } </code></pre>  <p>This still logs the items retrieved but does not render anything and gives me this. </p>  <pre><code>Folders  Files  Models </code></pre>  <p>What did I do wrong? How does code flow in this situation?</p>  <p>Its quite long and I tried to be specific as possible. Thanks. </p>