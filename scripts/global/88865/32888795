<p>HTML:</p>  <pre><code>&lt;button type="submit" ng-disabled="editForm.quantity{{product.productId}}.$invalid" ng-click="addProduct(product);" class="btn btn-info btn-sm"&gt;                           &lt;span class="glyphicon glyphicon-shopping-cart"&gt;&lt;/span&gt;&amp;nbsp;&lt;span translate="global.form.addToCart"&gt; Add to cart&lt;/span&gt;                       &lt;/button&gt; </code></pre>  <p>Controller:</p>  <pre><code>$scope.addProduct = function (ViewProduct) {   CatalogAdd.addProductToCart(ViewProduct); }; </code></pre>  <p>Service:</p>  <pre><code>angular.module('brotzeitApp') .factory('CatalogAdd', function ($resource, $rootScope) {     return $resource('api/_add/catalog', {}, {         'addProductToCart': { method:'GET'}     }); }); </code></pre>  <p>Java Function:</p>  <pre><code>public ResponseEntity&lt;Cart&gt; addProductToCart(final ViewProduct aProduct) throws URISyntaxException </code></pre>  <p>All of this works an intended. Complete object is passed from html/js to the java funtion and i can save. Now i want to add another parameter to the function. I tried the following.</p>  <p>Controller:</p>  <pre><code>$scope.addProduct = function (ViewProduct) {   CatalogAdd.addProductToCart({orgid: $rootScope.orgid}, ViewProduct); }; </code></pre>  <p>Service:</p>  <pre><code>angular.module('brotzeitApp') .factory('CatalogAdd', function ($resource, $rootScope) {     return $resource('api/_add/catalog', {}, {         'addProductToCart': { method:'GET', params:{orgid:$rootScope.orgid}}     }); }); </code></pre>  <p>Java:</p>  <pre><code>public ResponseEntity&lt;Cart&gt; addProductToCart(@RequestParam(value = "orgid" , required = true) final Long orgid, final ViewProduct aProduct) throws URISyntaxException </code></pre>  <p>And now only the "orgid" parameter is passed to the java funtion but not the ViewProduct. I tried several ways to define and pass both, the orgid and the ViewProduct object, but no success. Any hint on how to define the methods/parameters that both are passed to my java funtion?</p>