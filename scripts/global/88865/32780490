<p>I have a page where there is a header with data to be displayed and there is a list of tabs dynamicaly displayed below the header. Data in tabs is related to header. In my header controller I have the mechanism of changing the tabs which triggers the current open tab to be saved in the db and retrieves data for newly opened tab. Each tab has its own controller, but all of controllers including the header one are in the same app module. Tab mechanism is simple:</p>  <pre><code>&lt;tabset&gt;     &lt;tab ng-repeat="visitTab in tabs" heading ='{{visitTab.name}}' ng-active="activeTab == visitTab.id" select="loadTabContent(visitTab.id)"&gt;&lt;/tab&gt; &lt;/tabset&gt; &lt;div ng-include="tabContent"&gt;&lt;/div&gt;  </code></pre>  <p>In header controller:</p>  <pre><code>$scope.loadTabContent = function(tabToLoad) {     if ($scope[tabNamesAndDataMapping[$scope.activeTab]] != undefined) {         commonService.saveCurrentTab($scope.activeTab, $scope[tabNamesAndDataMapping[$scope.activeTab]]);     }     commonService.getNewlyOpenedTabData(tabToLoad, $scope.visitId).success(function(data, status, headers, config) {         if (data) {             $rootScope.$broadcast("tabDataUpdated", data[tabNamesAndDataMapping[tabToLoad]]);         }     });     $scope.activeTab = tabToLoad;     $scope.tabContent = 'visits/partials/' + tabToLoad + ".html"; } </code></pre>  <p>There is one tab (a more complex one) which causes an issue - particularly ONLY first time accessing that tab, the broadcast event is being triggered in header controller, however it is not received in tab controller. I do a proper broadcast on rootScope:</p>  <pre><code>$rootScope.$broadcast("tabDataUpdated", data[tabNamesAndDataMapping[tabToLoad]]); </code></pre>  <p>and in tab controller have:</p>  <pre><code>$scope.$on('tabDataUpdated', function(event, data) {     $scope.tabData = data; }); </code></pre>  <p>When I navigate to other tab and come back (at this stage the data is still retrieved from server and current tab is sent to the server to be saved), the broadcast is triggered and controller receives the broadcast event.</p>  <p>Any idea why the first time when loading ONLY this tab, the <code>$scope.$on</code> is not triggered? May be there is a problem with controller slow creation in certain cases that I am not aware of - if that is the case, what tricks can I use to avoid performance issue in controller creation?</p>  <p>Any ideas and suggestions are welcome!</p>