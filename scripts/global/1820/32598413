<p>This is my absolute first time ever making a makefile, and I'm really trying to understand the process.</p>  <p>I'm trying to create a very simple makefile for a C++ project whose structure is as follows:</p>  <p><strong>root folder</strong><br/> &nbsp;&nbsp;&nbsp;&nbsp;makefile<br/> &nbsp;&nbsp;&nbsp;&nbsp;readme<br/> <strong>src folder</strong><br/> &nbsp;&nbsp;&nbsp;&nbsp;<em>...source files all here...</em><br/> <strong>include folder</strong><br/> &nbsp;&nbsp;&nbsp;&nbsp;<em>...header files for external libraries here...</em><br/> <strong>lib folder</strong><br/> &nbsp;&nbsp;&nbsp;&nbsp;<em>...external lib files all here...</em><br/> <strong>bin folder</strong><br/> &nbsp;&nbsp;&nbsp;&nbsp;<em>...output directory for built executable...</em><br/> &nbsp;&nbsp;&nbsp;&nbsp;<strong>obj folder</strong><br/> &nbsp;&nbsp;&nbsp;&nbsp;<em>...object files all here...</em><br/></p>  <p>I followed the tutorial <a href="http://www.cs.colby.edu/maxwell/courses/tutorials/maketutor/" rel="nofollow">here</a>.</p>  <p>Here's my makefile:</p>  <pre><code>IDIR=include . CC=g++ CFLAGS=-I$(IDIR) ODIR=bin/obj LDIR=lib LIBS=none SRC=src   _DEPS=hello.h DEPS=$(patsubst %,$(IDIR)/,%(_DEPS)) _OBJ=file1.o file2.o OBJ=$(patsubst %,$(ODIR)/%,$(_OBJ))  $(ODIR)/%.o: $(SRC)/%.cpp $(DEPS)     $(CC) -c -o $@ $&lt; $(CFLAGS) # $(LIBS)  test_proj: $(OBJ)     $(CC) -o $@ $^ $(CFLAGS)  .PHONY: clean  clean:     rm -f $(ODIR)/*.o *~ core $(INCDIR)/*~ </code></pre>  <p>When I run <code>make</code> on this, I get the following error:</p>  <pre><code>g++      -o .o g++: fatal error: no input files compilation terminated. &lt;builtin&gt;: recipe for target '.o' failed mingw32-make.exe: *** [.o] Error 1 </code></pre>  <p>I'm using GNU Make 3.82.90 built for i686-pc-mingw32, if that matters at all.</p>  <p>Can anyone point out whatever ridiculous error I'm making?</p>