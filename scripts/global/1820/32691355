<p><strong><em>From the <a href="https://www.gnu.org/software/make/manual/html_node/Include.html#Include" rel="nofollow">docs</a>:</em></strong></p>  <blockquote>   <p>The <code>include</code> directive tells <code>make</code> to suspend reading the current   makefile and read one or more other makefiles before continuing.  The   directive is a line in the makefile that looks like this:</p>  <pre><code> include FILENAMES... </code></pre>      <p><strong><em>FILENAMES can contain shell file name patterns.</em></strong></p> </blockquote>  <p><br> <hr> <br></p>  <p><strong><em>Now, given a Makefile:</em></strong></p>  <pre class="lang-make prettyprint-override"><code># we define 'include' from the command-line. ifdef include   # We create the included Makefile $(shell echo 'all : ;' &gt;makefile.include)  # And we include it. # The docs say: "FILENAMES can contain shell file name patterns." include *.include   else   endif </code></pre>  <p><strong><em>Running, we get:</em></strong></p>  <pre class="lang-console prettyprint-override"><code>$ rm -rf makefile.include &amp;&amp; make include=1 makefile:6: *.include: No such file or directory </code></pre>  <p><br></p>  <p>So, what happened here? We clearly had:</p>  <ul> <li><p>Created a Makefile to be included, in:</p>  <pre><code>$(shell echo 'all : ;' &gt;makefile.include) </code></pre></li> <li><p>And later included this makefile, given that we can using "shell file name patterns", as quoted above from the documentation - and thus, we have in the makefile:</p>  <pre><code>include *.include </code></pre></li> </ul>  <p>So, why did Gnu-Make failed to find this newly-created makefile?</p>