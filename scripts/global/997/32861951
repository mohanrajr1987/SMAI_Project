<p>I am following the steps at the end of <a href="http://thirdorderscientist.org/homoclinic-orbit/2013/10/24/kernel-density-estimation-for-random-variables-with-bounded-support-mdash-the-transformation-trick" rel="nofollow">this post</a> to implement a transformed Kernel Density Estimate (KDE) on a bounded support <code>[0,+inf[</code>. We use the transformation trick to avoid the boundary bias of the traditional KDE on bounded support (in that case, near zero). Basically, the KDE allocates weights to observations that do not exist (outside the support), so it severely underestimates the PDF at the boundary (as shows well on the figure below).</p>  <p><strong>1) Regular approach (we observe the undesirable boundary bias of the KDE near zero)</strong></p>  <pre><code># sample from exponential distribution obs=rexp(5e2) hist(obs,freq=FALSE) k=density(obs) lines(k$x,k$y) </code></pre>  <p><a href="http://i.stack.imgur.com/FvRef.png" rel="nofollow"><img src="http://i.stack.imgur.com/FvRef.png" alt="enter image description here"></a></p>  <p><strong>2) Transformation approach</strong></p>  <p><a href="http://i.stack.imgur.com/N0IGP.png" rel="nofollow"><img src="http://i.stack.imgur.com/N0IGP.png" alt="enter image description here"></a></p>  <pre><code># 1) log transform the obs pseudo.obs=log(obs) # 2) estimate the density of the pseudo obs with KDE pseudo.k=density(pseudo.obs,n=length(obs)) # 3) estimate the density of the original obs t.density=pseudo.k$y/obs # plot estimation lines(obs,t.density) </code></pre>  <p>Instead of getting something similar to the blue line below as I should</p>  <p><a href="http://i.stack.imgur.com/r2Mz5.png" rel="nofollow"><img src="http://i.stack.imgur.com/r2Mz5.png" alt="enter image description here"></a></p>  <p>I'm getting this horrible thing <a href="http://i.stack.imgur.com/ulICC.png" rel="nofollow"><img src="http://i.stack.imgur.com/ulICC.png" alt="enter image description here"></a></p>