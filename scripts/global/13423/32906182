<p>I have this application i'm building that adds multiple texboxes using <strong>knockout</strong> and <strong>EditorTemplate</strong> but the challenge i have now is how to implement <strong>autocomplete</strong> to each textbox that has been added and bind the selected value together. Thanks for helping in advance. </p>  <p>Code below.</p>  <blockquote>   <p><strong>This is my Mainview with the Editortemplete</strong></p> </blockquote>  <pre><code> &lt;fieldset&gt;         @Html.EditorFor(model =&gt; model.Custs)         &lt;button type="button" title="Click to add" data-bind="click: addPosition"&gt;Add&lt;/button&gt;         &lt;button type="button" title="Click to remove" data-bind="click: removePosition"&gt;Remove &lt;/button&gt;  &lt;/fieldset&gt; </code></pre>  <blockquote>   <p><strong>EditorTemplate</strong></p> </blockquote>  <pre><code>&lt;fieldset&gt;  @Html.TextBoxFor(m =&gt; m.DrugId, new { @class="thisthing","value:DrugName,namePath:true"}"})      @Html.TextBoxFor(m =&gt; m.Quantity, new {@class = "thisthing", placeholder = "Enter Quantity", data_bind = "value: Quantity, namePath: true"})     @Html.TextBoxFor(m =&gt; m.Dosage, new {@class = "thisthing", placeholder = "Enter Dosage", data_bind = "value: Dosage, namePath: true"}) &lt;/fieldset&gt; </code></pre>  <blockquote>   <p><strong>I used steven anderson knockout namepathbinding</strong></p> </blockquote>  <pre><code>&lt;script type="text/javascript"&gt;     ko.bindingHandlers.namePath = {         init: function(element, valueAccessor, allBindingsAccessor, viewModel) {              var jElement = $(element);             var parent = $(element).parents("fieldset")[0];             var parentIndex = $(parent).index() - 1;              if (valueAccessor()) {                  var name = jElement.attr("name");                 var modifiedPath = name.replace("[0]", "[" + parentIndex + "]");                 element.name = modifiedPath;                  var id = jElement.attr("id");                 var modifiediD = id.replace("_0_", "_" + parentIndex + "_");                 element.id = modifiediD;                  // Workaround IE 6/7 issue                 // - https://github.com/SteveSanderson/knockout/issues/197                 // - http://www.matts411.com/post/setting_the_name_attribute_in_ie_dom/                 if (ko.utils.isIe6 || ko.utils.isIe7)                     element.mergeAttributes(document.createElement("&lt;input name='" + element.name + "'/&gt;"), false);             }              // Fix data-valmsg-for on labels to match             $(element).parent().find(".field-validation-valid").each(function() {                 var item = $(this);                 var data = item.data();                 var modifiedValPath = data.valmsgFor.replace("[0]", "[" + parentIndex + "]");                 item.attr("data-valmsg-for", modifiedValPath);             });         }     }; &lt;/script&gt; </code></pre>  <blockquote>   <p><strong>Here is the view model</strong></p> </blockquote>  <pre><code>&lt;script&gt;   function createViewModel() {         var createPosition = function() {             return {                 Dosage: ko.observable(),                 DrugName: ko.observable(),                 Quantity: ko.observable()             };         };          var addPosition = function() {             positions.push(createPosition());         };          var removePosition = function() {             positions.pop();         };         var positions = ko.observableArray([createPosition()]);          return {             positions: positions,             addPosition: addPosition,             removePosition: removePosition         };      }      $(document).ready(function() {         var viewModel = createViewModel();         ko.applyBindings(viewModel);     }); &lt;/script&gt; </code></pre>  <blockquote>   <p>All i need to do is to put autocomplete functionality on each textbox.Thanks</p>      <p>I would also like to use ajax(or any meethod) to retreive the items for the autocompete from the database.</p>      <p><strong>The autocomplete data retrieval method.</strong></p> </blockquote>  <pre><code>public JsonResult Search(string term)     {         List &lt;Drug&gt; drugs = da.Drugs.ToList().FindAll(x =&gt; x.DrugName.StartsWith(term, StringComparison.OrdinalIgnoreCase));         return Json(drugs, JsonRequestBehavior.AllowGet);     } </code></pre>