<p>I have a project with three Views:</p>  <ul> <li>ChartsView</li> <li>NewsView</li> <li>SettingsView</li> </ul>  <p>Essentially, the GraphsViewModel downloads some data to be represented as Chart, the NewsViewModel downloads some feed and represents it as a list. Both has a timer that decides how often download data, so there is also a SettingsViewModel associated to SettingsView in which the user could decide this setting and some others.</p>  <p>The problem is: how to set up the SettingsViewModel?</p>  <p>The first thing I did was putting inside SettingsView something like this:</p>  <pre><code>&lt;Pivot&gt;      &lt;PivotItem DataContext="{Binding Source={StaticResource Locator}, Path=GetNewsView}" Header="News Settings"&gt;         ...     &lt;/PivotItem&gt;       &lt;PivotItem DataContext="{Binding Source={StaticResource Locator}, Path=GetChartView}" Header="Chart Settings"&gt;         ...     &lt;/PivotItem&gt;  &lt;/Pivot&gt; </code></pre>  <p>Is It a bad practice? Somewhere I read that to apply the MVVM correctly, I should use only ViewModel per View. But in this case it seems (to me) intricate to put the setting into a SettingsViewModel and send via Message (MVVM Light) to the other Views the values they need. (In this case the settings needed to let the two main views to work are defined into the them)</p>  <p>Am I thinking wrong?</p>