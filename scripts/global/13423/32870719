<p>I'm looking for a way to improve performances of my code. I've got a WPF GUI with a TextBox and a graph (from OxyPlot package). I used StopWatch to find the place where the code is less efficient and I found that it takes more time to update the Text of my TextBox than to fill the string. For example, if the property <code>MyText</code> is bound to the Text property of the TextBox then this part of code</p>  <pre><code>Application.Current.Dispatcher.Invoke(()=&gt;{    MyText = currentString; }); </code></pre>  <p>takes more time than all of this</p>  <pre><code>StringBuilder sb = new StringBuilder(); RetrieveDataFromDevice(); FillString(sb); string currentString = sb.ToString(); </code></pre>  <p>And with the StopWatch :</p>  <pre><code>Task.Factory.StartNew(() =&gt; {    var sw = new StopWatch();    sw.Start();    StringBuilder sb = new StringBuilder();    RetrieveDataFromDevice();    FillString(sb);    string currentString = sb.ToString();    Trace.WriteLine(sw.ElapsedMilliseconds.ToString()); //5ms    sw.Restart();    Application.Current.Dispatcher.Invoke(()=&gt;{       MyText = currentString;    });    Trace.WriteLine(sw.ElapsedMilliseconds.ToString()); //10ms } </code></pre>  <p>There is a performance issue as I can not refresh the string (or the graph) more often than every 15ms. Are there any way to improve these performances ?</p>