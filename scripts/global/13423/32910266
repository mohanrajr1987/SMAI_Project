<p>I would like to get some help with commanding of itemcomtrol of usercontrol inside a window. I am using Mvvm light. The application talks about books.</p>  <p><strong>Model</strong></p>  <pre><code>public class BookModel {     public string Title { get; set; }     public string Author { get; set; }     public string Description { get; set; } } </code></pre>  <p>The application displays two types of windows: (in the comments section below I added a link to these views)</p>  <ol> <li><p>BookWindow: book details and a button to save the book.  (the view is the parent of a child userControl called BookControl).</p></li> <li><p>ContainerWindow: book itemcontrol and a button to save all the books  (the view is the parent of a child userControl called ContainerControl).</p></li> </ol>  <p>My problem occures when ContainerWindow is displayed. The Container usercontrol that conatins the itemcontrol binds each book item in the collection as expected (name, description etc.), However the command event of the "save" button in the itemcontrol is not raised when clicked.  The button “save all” that is not part of the itemcontrol functions as expected (containerviewmodel raises the command event).  I expect that each press of “save” of each book itemcontrol will raise command event inside bookviewmodel.</p>  <p>I understood that by default, the ItemsControl will create an ItemTemplate for each item in the collection, and set it's DataContext to the item from the ItemsSource, so it seems I should change the datacontext of the Command "save" inside the ItemsControl.ItemTemplate to point to BookViewModel.</p>  <p>in case needed solution is uploaded to:</p>  <p><a href="https://onedrive.live.com/redir?resid=3A8F69A0FB413FA4!120&amp;authkey=!ADbkhAdl44Hb6To&amp;ithint=file%2czip" rel="nofollow">https://onedrive.live.com/redir?resid=3A8F69A0FB413FA4!120&amp;authkey=!ADbkhAdl44Hb6To&amp;ithint=file%2czip</a></p>  <p>Some code snippet: </p>  <p><strong>UserControls:</strong></p>  <p>a.BookControl Displays book details and has a button “save”. Contains DependencyPropoerty of the BookModel called “TheBook” and DependencyPropoerty of a command called “SomeCommand”. The Book userControl has no DataContext.</p>  <pre><code>&lt;UserControl&gt;     &lt;TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding Title}"/&gt;     &lt;TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding Author}"/&gt;     &lt;TextBlock Grid.Row="2" Grid.Column="1" Text="{Binding Description}"/&gt;     &lt;Button Grid.Row="3" Command="{Binding SomeCommand,ElementName=me}"         Content="Save" /&gt; &lt;/UserControl&gt; </code></pre>  <p>b.ContainerControl contains itemcontrol of BookControl and has a button “save all” Contains DependencyPropoerty of a command called SaveAllCommand. The Container userControl has no DataContext.</p>  <pre><code>&lt;UserControl&gt; &lt;DockPanel&gt;     &lt;Button          Command="{Binding SaveAllCommand,ElementName=me}"         DockPanel.Dock="Bottom"         Content="Save All"/&gt;     &lt;ItemsControl ItemsSource="{Binding Books}"&gt;         &lt;ItemsControl.ItemsPanel&gt;             &lt;ItemsPanelTemplate&gt;                 &lt;StackPanel Orientation="Vertical" /&gt;             &lt;/ItemsPanelTemplate&gt;         &lt;/ItemsControl.ItemsPanel&gt;         &lt;ItemsControl.ItemTemplate&gt;             &lt;DataTemplate&gt;                 &lt;Controls:BookControl SomeCommand="{Binding SaveCommand , RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type vm:BookViewModel}}}"  /&gt;             &lt;/DataTemplate&gt;         &lt;/ItemsControl.ItemTemplate&gt;     &lt;/ItemsControl&gt;     &lt;/DockPanel&gt; &lt;/UserControl&gt; </code></pre>  <p><strong>Views:</strong></p>  <p>a. BookWindow.xaml Shows the BookControl  The DataContext of the window is set to BookViewModel</p>  <pre><code>&lt;Window     DataContext="{Binding Source={StaticResource Locator}, Path=Book}"     &gt; &lt;StackPanel&gt;     &lt;Controls:BookControl TheBook="{Binding MyProduct}"                           SomeCommand="{Binding SaveCommand}" /&gt; &lt;/StackPanel&gt; </code></pre>  <p>b.ContainerWindow.xaml  Shows the ContainerControl The DataContext of the window is set to ContainerViewModel</p>  <pre><code>&lt;Window     DataContext="{Binding Source={StaticResource Locator}, Path=Container}"    &gt; &lt;Window.Content&gt;     &lt;Controls:ContainerControl SaveAllCommand="{Binding SaveAllCommand}"&gt;       &lt;/Controls:ContainerControl&gt; &lt;/Window.Content&gt; </code></pre>