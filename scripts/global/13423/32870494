<p>I have to view ViewModels, OrganizationContact and PersonalInformationModel.</p>  <p>OrganizationContact uses PersonalInformationModel.</p>  <p>They are setup like so:</p>  <p><strong>OrganizationContact:</strong></p>  <pre><code>public class OrganizationContact : ViewModelBase {     private PersonalInformationModel _contactInfo;      public PersonalInformationModel ContactInfo     {         get         {             return _contactInfo;         }         set         {             _contactInfo = value;             RaisePropertyChanged(nameof(ContactHeader), "", "", true);             RaisePropertyChanged(nameof(ContactInfo), null, _contactInfo, true);         }     }      //Generate Header     public string ContactHeader     {         get         {             var header = "";              if (!string.IsNullOrWhiteSpace(ContactInfo.Title?.TitleAbbreviation))             {                 header += ContactInfo.Title.TitleAbbreviation + " ";             }             if (!string.IsNullOrWhiteSpace(ContactInfo.FirstName))             {                 header += ContactInfo.FirstName + " ";             }             if (!string.IsNullOrWhiteSpace(ContactInfo.MiddleInitial))             {                 header += ContactInfo.MiddleInitial + ". ";             }             if (!string.IsNullOrWhiteSpace(ContactInfo.LastName))             {                 header += ContactInfo.LastName + " ";             }              return header;         }     }      public int OrganizationLink { get; set; }      public string Position { get; set; }      public int Priority { get; set; } } </code></pre>  <p><strong>PersonalInformationModel:</strong></p>  <pre><code>public class PersonalInformationModel : ViewModelBase {     private string _firstName;     private string _middleInitial;     private string _lastName;     private string _phoneNumber;     private string _phoneExtension;     private string _faxNumber;     private string _email;      public int PersonalIdentity { get; set; }      public string FirstName     {         get         {             return _firstName;         }         set         {             _firstName = value;             RaisePropertyChanged(nameof(FirstName), "", _firstName, true);         }     }      public string MiddleInitial     {         get         {             return _middleInitial;         }         set         {             _middleInitial= value;             RaisePropertyChanged(nameof(MiddleInitial),"",_middleInitial,true);         }     }      public string LastName     {         get         {             return _lastName;         }         set         {             _lastName = value;             RaisePropertyChanged(nameof(LastName), "", _lastName, true);         }     }      public string PhoneNumber     {         get         {             return _phoneNumber;         }         set         {             _phoneNumber = value;             RaisePropertyChanged(nameof(PhoneNumber), "", _phoneNumber, true);         }     }      public string PhoneExtension     {         get         {             return _phoneExtension;         }         set         {             _phoneExtension = value;             RaisePropertyChanged(nameof(PhoneExtension), "", _phoneExtension, true);         }     }      public string FaxNumber     {         get         {             return _faxNumber;         }         set         {             _faxNumber = value;             RaisePropertyChanged(nameof(FaxNumber), "", _faxNumber, true);         }     }      public string Email     {         get         {             return _email;         }         set         {             _email = value;             RaisePropertyChanged(nameof(Email),"",_email, true);         }     }      public string FullName =&gt; $"{FirstName} {LastName}"; } </code></pre>  <p>PersonalInformationModel is used by other classes.</p>  <p>What I'm looking for is a way for <code>OrganizationContact</code> to be informed if any property inside of <code>PersonalInformationModel</code> changes so the <code>ContactHeader</code> inside of <code>OrganizationContact</code> can be notified of the change.</p>