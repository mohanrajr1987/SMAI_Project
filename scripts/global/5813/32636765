<p><br>I am  learning to use fork and pipes. I wrote the following code.The child1 writes "child 1 " and child2 writes "child 2", and the parent reads the values.</p>  <pre><code>#include&lt;stdio.h&gt; #include&lt;stdlib.h&gt; #include&lt;unistd.h&gt; #include&lt;sys/types.h&gt;  int main() { int pfds[2]; char buf[30]; pipe(pfds); if(fork() == 0)     //child 1 {     close(pfds[0]);     write(pfds[1],"child 1",sizeof(buf)); } else {        if(fork() == 0)  //child2     { close(pfds[0]);       write(pfds[1],"child 2",sizeof(buf));      }     else     {       close(pfds[1]);       read(pfds[0],buf,sizeof(buf));       printf(" read: %s ",buf);       wait(NULL);      }  close(pfds[1]); read(pfds[0],buf,sizeof(buf)); printf(" read: %s ",buf);        wait(NULL);  }   } </code></pre>  <p><br> My output is: read: some_garbage_value  read: child 1  read: child 2  <br> Why am I getting read 3 times? I want it only for 2 times( child1 and child2). How are the statements getting executed?  <br>P.S: sorry if this is a noob question. I have just started learning fork(), exec() and pipes.</p>