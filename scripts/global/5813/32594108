<p>I am trying to to fork my c++ program and direct the parents output into the childs input, I am using pipe() and fork(). In the directory of the program there is a file called input.txt. Unfortunately the only output I get is "wc: stdin: read: Bad file descriptor". Does anyone know why this is? If so what am I doing wrong? Thanks </p>  <pre><code>#include &lt;stdio.h&gt; #include &lt;unistd.h&gt; #include &lt;stdlib.h&gt; #include &lt;sys/wait.h&gt; #include &lt;errno.h&gt; #include &lt;string.h&gt; #include &lt;iostream&gt; #include&lt;sys/types.h&gt; #include&lt;sys/stat.h&gt; #include&lt;fcntl.h&gt; #include&lt;stdio.h&gt;  int main(int argc, char *argv[]){          int pipes[2],pid,stdIn,stdOut;          stdIn = dup(0);         stdOut = dup(1);          pipe(pipes);          pid = fork();          if(pid == 0){                 dup2(pipes[1],0);                 close(pipes[1]);                 execlp("wc","wc",NULL);         }         else{                 dup2(pipes[0],1);                 close(pipes[0]);                 std::cout&lt;&lt;"input.txt"&lt;&lt;std::endl;                 dup2(stdOut,0);                 std::cout&lt;&lt;"parent done\n";                 wait(NULL);         }          std::cout&lt;&lt;"after"&lt;&lt;std::endl;         return 0;  } </code></pre>