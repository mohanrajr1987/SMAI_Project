<p>The following code is the pipe implementation given in beej's guide:</p>  <pre><code>#include &lt;stdio.h&gt; #include &lt;stdlib.h&gt; #include &lt;unistd.h&gt;  int main(void) {  int pfds[2];  pipe(pfds);  if (!fork()) {  close(1); /* close normal stdout */  dup(pfds[1]); /* make stdout same as pfds[1] */  close(pfds[0]); /* we don't need this */  execlp("ls", "ls", NULL);  } else {  close(0); /* close normal stdin */  dup(pfds[0]); /* make stdin same as pfds[0] */  close(pfds[1]); /* we don't need this */  execlp("wc", "wc", "-l", NULL);  }  return 0; } </code></pre>  <p>I wanted to ask:</p>  <ol> <li>Is it possible that <code>close(0)</code> is executed before <code>dup(pfds[1])</code>? If yes, then in that case the program will not behave as expected.</li> <li><p>What is the use of the following lines of code:</p>  <pre><code>close(pfds[0]); /* we don't need this */ close(pfds[1]); /* we don't need this */ </code></pre></li> </ol>  <p>And what would change if these lines were not there?</p>