<p>I am new to pipe concept and trying to familiarise myself with this topic. I have two tasks in my program: <code>task2</code> and <code>task3</code>.</p>  <p><strong>Task2.C</strong></p>  <pre><code>#include &lt;stdio.h&gt; #include &lt;stdlib.h&gt; #include &lt;string.h&gt; int main() {     int ForkPID, ChildPID, FIFO[2];     unsigned int ChildStatus;     char *msg = "Message 1";     char str[10], Length[15];     sprintf(Length,"%d",strlen(msg));     if (pipe(FIFO) == -1)     {         printf("cannot create pipe\n");         exit(1);     }     write(FIFO[1], msg, strlen(msg));     sprintf(str, "%d", FIFO[0]);     ForkPID = fork();     switch (ForkPID)     {     case 0:         execl("c:/Dev-Cpp/Lift 2/task3", "task3" , Length , str, NULL);           exit(1);     case -1:         perror("fork() failed:");         exit(2);     default:         ChildPID = wait(&amp;ChildStatus);         break;       }     sleep(4);     exit(0); } </code></pre>  <p><strong>Task3.C</strong></p>  <pre><code>#include &lt;stdio.h&gt;  #include &lt;stdlib.h&gt;  #include &lt;string.h&gt;  #define NBUF 100 int main(int argc, char *argv[]) {     int fd, Length;     char buf[NBUF] = {'\0'};     if (argc != 3)     {         printf( "USAGE: %s error\n", argv[0] );         exit(1);     }     Length = atoi(argv[1]);     fd = atoi(argv[2]);     read(fd, buf, Length);     printf("I am supposed to display this: %s \n", buf);     fflush(stdout);     sleep(2); } </code></pre>  <p>The interprocess communication works fine for a single message:</p>  <p><a href="http://i.stack.imgur.com/hedl5.jpg" rel="nofollow"><img src="http://i.stack.imgur.com/hedl5.jpg" alt="enter image description here"></a></p>  <p>But I need to pass information to <code>task3</code> continuously unless the message <code>QUIT</code> is passed on and it seems that I can't get a <code>while</code> loop to work properly. Can anyone help on this please?</p>