<p>i want to send specific objects thru a simple named pipe. I think the receiver does not recognize the cut between two sent objects. In the result, i get an xml serialization error. Here is my code: </p>  <p>Server process: </p>  <pre><code>using System; using System.IO; using System.IO.Pipes; using System.Threading; using System.Xml.Serialization;  namespace NamedPipe { class ProgramServer     {         static void Main(string[] args)         {             NamedPipeServerStream server;             server = new NamedPipeServerStream("PipesOfPiece");              server.WaitForConnection();              StreamReader reader = new StreamReader(server);             StreamWriter writer = new StreamWriter(server);             Console.WriteLine("Start loop. ");             Thread.Sleep(1000);              while (true)             {                 XmlSerializer receiver = new XmlSerializer(typeof(PayLoad));                 object testobj = receiver.Deserialize(reader);                 Console.WriteLine("Testobject: " + ((PayLoad)(testobj)).name + ((PayLoad)(testobj)).count);             }         }     } } </code></pre>  <p>Client process: </p>  <pre><code>using System; using System.Collections.Generic; using System.IO; using System.IO.Pipes; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Xml.Serialization;  namespace NamedPipe {     class ProgramClient     {         static void Main(string[] args)         {             //Client             var client = new NamedPipeClientStream("PipesOfPiece");             client.Connect();             StreamReader reader = new StreamReader(client);              while (true)             {                  StreamWriter writer = new StreamWriter(client);                 PayLoad test = new PayLoad                 ()                 {                     name = "Test",                     count = 42                 };                  XmlSerializer sendSerializer = new XmlSerializer(typeof(PayLoad));                 sendSerializer.Serialize(writer, test);             }         }     } } </code></pre>