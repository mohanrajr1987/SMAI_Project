<p>recently I have joined .NET project(we are 2 developers) were version control tool TFS is not utilized in a proper manner. </p>  <p>Right now we have three branches based on the previous releases 3.4.3, 3.4.3.1, 3.4.3.2.</p>  <p>The way I have been instructed to approach with development is:</p>  <ul> <li>Create a workspace based on branch 3.4.3.2, and get the latest  code,</li> <li>Every time when I finish working on the new assignment I’m “Shelving code”,</li> <li>Lead developer always takes my shelve and merges it with the branch – regarding this I've been told that... to track the code changes, I have to make comments above each lines of code where I made some changes – (which is weird to me, I was always using comments but only if needed to explain my approach where the code is not self-explanatory), </li> <li>After his merge I’m undoing my changes and getting the latest code from the branch.</li> </ul>  <p>I want to propose a major changes, where we would use GIT instead of TFS because of his great merging capabilities.</p>  <ul> <li>I want to go with approach branch per task,</li> <li>for each task we would always create a new branch based on trunk,</li> <li>then locally we would crate/pull the same branch and we would work on it,</li> <li>finish task commit to the branch and test it,</li> <li>merge it with trunk with appropriate comments about completed task,</li> </ul>  <p>With this approach I believe we could always go back to the changes from the past if needed, right now this is not possible.</p>  <p>Due to not much experience with branching systems I need your advice's.</p>  <p>Am I corrected with my assumptions?</p>  <p>If my proposed approach is correct how hard would be to implement it?</p>  <p>What are the next steps I should take first?</p>  <p>Thanks</p>