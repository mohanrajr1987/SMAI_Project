<p>I am trying to create a class that will control a subprocess.Popen process.  However I am running into trouble figuring out how to initialize my class to be able to start or stop the process through a class method. I need guidance initializing a Popen object without arguments so that I can reference it across class methods, so far I have not found info that helped.</p>  <p>Here is the relevant code for what I have I attempted:</p>  <pre><code>def __init__(self):   ...   self.p = subprocess.Popen()   ...  def startProcess(self):   try:     args = "*some cmd line arguments*"     self.p = subprocess.open(args)   ...  def stopProcess(self):   try:     self.p.kill()   except:     print traceback.format_exc() </code></pre>  <p>Trying to initialize Popen in <code>__init__</code> above results in:</p>  <blockquote>   <p><code>TypeError: __init__() takes at least 2 arguments (1 given)</code></p> </blockquote>  <p>Secondly trying to initialize Popen with <code>subprocess.Popen.__new__(subprocess.Popen)</code> results in </p>  <blockquote>   <p><code>AttributeError: 'Popen' object has no attribute 'pid'</code></p> </blockquote>  <p>When p.kill() is called.</p>  <p>Thanks for the help!</p>