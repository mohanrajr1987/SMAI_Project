<p>I am trying to set up <a href="http://thedjbway.b0llix.net/daemontools.html" rel="nofollow">daemontools</a> with a large python program that spawns various subprocesses, and I'm having issues where the subprocesses are not spawning correctly. The subprocess just appears as a zombified process when launched via daemontools.</p>  <p>I have provided a simplified example to demonstrate this.</p>  <p>/service/test/run:</p>  <pre><code>#!/bin/sh cd /script_directory/ exec envdir /service/test/env /usr/bin/python3 test_subprocess.py </code></pre>  <p>/script_directory/test_subprocess.py</p>  <pre><code>import subprocess from time import sleep subprocess.Popen("xterm") while True:     sleep(1) </code></pre>  <p>test_subprocess.py simply launches a GUI terminal and stays alive, so I can see if it is still running in top/htop. If I run the script either as root or a non-root user, the script properly executes and the window is displayed. When run via daemontools/supervise, the xterm is zombified and no window is shown.  Setting the env/DISPLAY and env/XAUTHORITY variables as described <a href="http://www.troubleshooters.com/linux/djbdns/daemontools_intro.htm#pro_troubleshooting_move_the_xtermd_service" rel="nofollow">here</a> doesn't seem to work for me. </p>  <p>On further investigation, the subprocess is zombified even if it does not use the GUI. For example if the subprocess in subprocess.py is "top" - it will not run.</p>  <p>I've used daemontools successfully on various other projects that don't spawn subprocesses so I don't think the issue is with the basic setup here.</p>  <p><strong>Can daemontools be used with scripts that spawn other processes?</strong></p>  <p>If not, what some other recommended tools for daemonising complex python applications?</p>