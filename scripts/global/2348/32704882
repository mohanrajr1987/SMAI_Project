<p>Currently, I have a command that looks something like the following: </p>  <pre><code>my_command = Popen([activate_this_python_virtualenv_file, \     "-m", "my_command", "-l", \     directory_where_ini_file_for_my_command_is + "/" + my_ini_file_name], \     stderr=subprocess.STDOUT, stdout=subprocess.PIPE, shell=False,     universal_newlines=False, cwd=directory_where_my_module_is) </code></pre>  <p>I have figured out how to access and process the output, deal with <code>subprocess.PIPE</code>, and make subprocess do a few other neat tricks. </p>  <p>However, it seems odd to me that <a href="https://docs.python.org/3/library/subprocess.html#subprocess.Popen" rel="nofollow">the standard Python documentation for <code>subprocess</code></a> doesn't mention a way to just get the actual command line as <code>subprocess.Popen</code> puts it together from arguments to the <code>Popen</code> constructor. </p>  <p>For example, perhaps <code>my_command.get_args()</code> or something like that?</p>  <p>Is it just that getting the command line run in <code>Popen</code> should be easy enough?</p>  <p>I can just put the arguments together on my own, without accessing the command <code>subprocess</code> runs with <code>Popen</code>, but if there's a better way, I'd like to know it. </p>