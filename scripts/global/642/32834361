<p>My request URL : Request URL: URL.com:8080/abcdef (http)</p>  <p>My Request Header looks like : </p>  <p>POST /abcdef HTTP/1.1</p>  <p>Host: URL.com:8080</p>  <p>Connection: keep-alive</p>  <p>Content-Length: 454</p>  <p>Origin: URL.com:8080 (http)</p>  <p>Ignore: N</p>  <p>X-Requested-With: XMLHttpRequest</p>  <p>User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.101 Safari/537.36 Content-Type: application/json Accept: <em>/</em> Referer: URL/xyz.html Accept-Encoding: gzip, deflate Accept-Language: en-US,en;q=0.8</p>  <p>Cookie: JSESSIONID=****************qwe ; ext-***************bbbbbbbbbb</p>  <p>but it redirecting to https and then again to http, and i am trying to call REST service , so need to send JSON request with authentication (not the basic authentication i tried that, NO LUCK), so need to send the request header while sending the JSON payload.</p>  <p>I tried this: </p>  <p>def pass_json_request payload</p>  <pre><code> req = Net::HTTP::Post.new(@post_ws, initheader = {'Content-Type' =&gt;'application/json'})       req.basic_auth @user, @pass       req.body = @payload       response = Net::HTTP.new(@host, @port).start {|http| http.request(req) }        puts "Response :  #{response.code} #{response.message}:       #{response.body}"       #response_code = JSON.parse(response.body)[3]       #response_code = parsed_body['responseCode']       response_code = response.body.scan(/responseCode(.*?)}/).to_s        response_code.gsub!("[","")        response_code.gsub!("]","")        response_code.gsub!('"','')        response_code.gsub!("\\",'')        response_code.gsub!(":","")       puts "Response Code is : #{response_code}"  return response_code      </code></pre>  <p>end</p>  <p>This is giving me Response as 302. As URL is getting redirected to https and then again to http, so i need to maintain the cookie value.</p>  <p>How can i get the cookie or complete request header in Jruby and set it for next subsequent requests.</p>