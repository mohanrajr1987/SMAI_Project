<p>As I gather from e.g. <a href="https://www.owasp.org/index.php/Session_Management_Cheat_Sheet" rel="nofollow">OWASP session cheat sheet</a>, it is recommended to tie a user session (identified by a session key) to other user related data, e.g. the client IP address.</p>  <p>Usually, this is achieved by reading HTTP headers (<code>REMOTE_ADDR</code>), but can be more sophisticated, see <a href="http://stackoverflow.com/questions/735350/how-to-get-a-users-client-ip-address-in-asp-net">this SO question</a> f.i. when proxy servers are involved.</p>  <p>My web service is distributed over multiple web servers (i.e. domains), sharing user session data across them. I have now the problem, that at least one client company uses load balanced proxy servers, that do NOT send a <code>HTTP_X_FORWARDED_FOR</code> header, nor <a href="http://stackoverflow.com/questions/6914457/why-does-servervariableremote-addr-returns-the-server-ip">any other header</a> containing the real client IP address. I don't know, if that has something to do with the fact, that the website is served over HTTPS. </p>  <p>The effect is, that the client IP extracted from the HTTP headers is different on different access domains. Therefore, the user looses the session when a different web server is accessed.</p>  <p>I would like to know, if there are best practices to handle this case. I see following options:</p>  <ul> <li>disable the client IP check</li> <li>switch to "user-agent" as user identification</li> </ul>  <p>Both have some disatvantages, but maybe there are better solutions?</p>