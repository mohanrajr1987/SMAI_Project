<p>Assume that I have the following Django class:</p>  <pre><code>class MyModel(models.Model):     a = models.IntegerField()     created_ts = models.DateTimeField(default=datetime.utcnow, editable=False)      def __str__(self):         return "&lt;%s %s&gt;" % (             self.__class__.__name__,             "; ".join(                 [                     "ID: %s" % self.pk,                     "a: %s" % self.a,                     "created_ts: %s" % self.created_ts,                 ]             )         ) </code></pre>  <p>I would like to find the instances of <code>MyModel</code> with the latest <code>created_ts</code> for each distinct value of <code>a</code>. Can I do so with a single QuerySet? If so, what is that QuerySet? If not, what is the most efficient way to get that result?</p>  <p>In the end, I want to have Integer/MyModel-Instance pairs. The answer should look something approximately like this:</p>  <pre><code>{     1: &lt;MyModel ID: 1; a: 1; created_ts: 2004-11-08 06:01:00&gt;,     5: &lt;MyModel ID: 2; a: 5; created_ts: 2004-11-05 08:01:32&gt;,     3: &lt;MyModel ID: 3; a: 3; created_ts: 2004-11-04 11:01:42&gt;,     0: &lt;MyModel ID: 4; a: 0; created_ts: 2004-11-03 06:12:10&gt;, } </code></pre>