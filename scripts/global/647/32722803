<p>I need to implement OOP into an old project.</p>  <p>Most of my Entities are working just fine, but adding a Constraint between <strong><em>User</em></strong> and <strong><em>UserAddress</em></strong> just ends up in somekind of weird behaviour.</p>  <pre><code>/**  * @Table(name="users")  * @Entity()  * @EntityListeners({"Entity\Listener\UserListener"})  */ class User {      /**      * Id of the user      *      * @var integer      *      * @Id      * @Column(type="integer")      * @GeneratedValue(strategy="AUTO")      *      */     private $id;      /**      * @var \Entity\Address      *      * @OneToOne(targetEntity="Entity\UserAddress", mappedBy="user")      */     private $address; } </code></pre>  <p>...</p>  <pre><code>/**  * UserAddresses  *  * @Table(name="user_addresses")  * @Entity  */ class UserAddress {     /**      * @var \Entity\User      *      * @Id      * @OneToOne(targetEntity="Entity\User", inversedBy="address")      * @JoinColumn(name="user_id", referencedColumnName="id")      */     private $user; } </code></pre>  <p>If I dump the the sql using the </p>  <p><strong><em>orm:schema-tool:update --dump-sql</em></strong></p>  <p>it returns the Constraint that would be added like expected.</p>  <pre><code>ALTER TABLE user_addresses ADD CONSTRAINT FK_6F2AF8F2A76ED395 FOREIGN KEY (user_id) REFERENCES users (id); </code></pre>  <p>Since the Query looks OK, I switched to the <em>--force</em> parameter, which also returns an expected result:</p>  <pre><code>Updating database schema... Database schema updated successfully! "1" query was executed </code></pre>  <p>And now the problem occurs. As I used the <em>orm:schema-tool:update --dump-sql</em> command again, I expected something like:</p>  <pre><code>Nothing to update - your database is already in sync with the current entity metadata. </code></pre>  <p>But it returned the exact same SQL as before. I can re-do the process several times, but it just takes no effect.</p>  <p>Am I missing something?</p>