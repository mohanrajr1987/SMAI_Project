<p>Say I have these models:</p>  <p>Book</p>  <pre><code>var Book = sequelize.define('Book', {   title: DataTypes.STRING,   OwnerId: DataTypes.INTEGER }, {   associate: function(models) {     Book.hasMany(models.Chapter);   } } </code></pre>  <p>Chapter</p>  <pre><code>var Chapter = sequelize.define('Chapter', {   title: DataTypes.STRING,   published: DataTypes.BOOLEAN }, {   associate: function(models) {     Chapter.belongsTo(models.Book);   } } </code></pre>  <p>Now I want to find all chapters and books with these conditions:</p>  <ul> <li>If current user is book owner, find all chapters</li> <li>else find only published chapters</li> </ul>  <p>I'm using express.js and get the current user id from <code>req.user.id</code></p>  <p>Can this be done in a single sequelize.js query? I have tried something like</p>  <pre><code>db.Books.findAll(   include: [     {       model: db.Chapter,       where: {         $or: [           { published: true },           { published: Book.OwnerId != req.user.id }         ]       }     }   ] ); </code></pre>  <p>But I'm having trouble accessing the value of Book.OwnerId.</p>  <p>Any suggestions?</p>