<p>I'm using django 1.8.4 writing a webapp. The backend uses MySQL 5.6 (MyISAM). Recently the number of table records reaches 1 million, it will take 1-1.5 seconds to query all distinct record dates. But using MySQL client, it takes less than 0.001 second. </p>  <p><strong>Django Code</strong></p>  <pre><code>class Model1(models.Model):     date = models.DateField(db_index=True)  # benchmark code db_dates = Model1.objects.dates("date", kind="day") </code></pre>  <p><strong>MySQL query:</strong></p>  <pre><code>SELECT date FROM `table1` group by date ORDER BY `date` ASC </code></pre>  <p>MySQL client says: 620 total, Query took 0.0025 seconds.</p>  <hr>  <h2>Update 1</h2>  <p>Regarding @e4c5 hint, I dumped the django queries. Actually there is a type cast in the query. This is the root cause of the slow.</p>  <pre><code>{u'time': u'1.989',   u'sql': u"SELECT DISTINCT CAST(DATE_FORMAT(`model1_table`.`date`, '%Y-%m-%d 00:00:00') AS DATETIME) AS `datefield` FROM `model1_table` WHERE `model1_table`.`date` IS NOT NULL ORDER BY `datefield` ASC"} </code></pre>  <p>Even I run the queries manually in a MySQL client, it becomes slow. I noticed the second query did a type cast. </p>  <p>Is the type cast (<code>date</code> to <code>datetime</code>) necessary? How can I solve the problem?</p>  <p>Anyway, I've fired an <a href="https://code.djangoproject.com/ticket/25470#ticket" rel="nofollow">issue here</a> for tracking.</p>