<p>I have 1 table and 2 views (PeopleView and ProjectView) in my DB.</p>  <p>Table named Hours, has columns which are "references" to views.</p>  <pre><code>[Id] [int] IDENTITY(1,1) NOT NULL, [Date] [date] NOT NULL, [PeopleId] [int] NOT NULL, // Reference to PeopleView [ProjectId] [nvarchar](max) NOT NULL, // Reference to PrijectView [Hour] [int] NOT NULL, </code></pre>  <p>I red that is not possible create forign key with view. So my question is how to create mapping for this situation in EntityFramework. </p>  <p>When I get some Hours entity from DB I want to access to Project entity like that:</p>  <pre><code>hour.project.name hour.project.id </code></pre>  <p>It is possible ?</p>  <p>Hour Entity:</p>  <pre><code>   public class Hour : Entity&lt;int&gt; {     [Column(TypeName = "date")]     [Required]     public virtual DateTime Date { get; set; }       public virtual PeopleView People { get; set; }     [Required]     public virtual int? PeopleId { get; set; }       public virtual ProjectView Project { get; set; } // How to access project object from hour object when Project is a View in DB ?     [Required]     public virtual string ProjectId { get; set; }       [Required]     [Column("Hour")]     public virtual int Hours { get; set; }   } </code></pre>  <p>ProjectView entity:</p>  <pre><code>[Table("ProjectView")] public partial class ProjectView : Entity&lt;string&gt; {     [Key]     [Column(Order = 0)]     [StringLength(50)]     public override string Id { get; set; }      [StringLength(255)]     public string Name { get; set; }      [Column(Order = 1)]     [DatabaseGenerated(DatabaseGeneratedOption.None)]     public int Offer { get; set; } } </code></pre>