<p>I would like to find out a way to properly select a subset of records using ORM such as Doctrine in my case.</p>  <pre><code>$rep = $this-&gt;entityManager-&gt;getRepository('Entity\ServiceLineItem'); $serviceItems = $rep-&gt;findBy(...); </code></pre>  <p>In my case I want to select all instances of ServiceLineItem that have a <code>$serviceType</code> of "Testing".</p>  <p>In my code I have created the following two entities:</p>  <pre><code>/** @Entity */ class ServiceLineItem {     /** @Id @Column(type="integer") @GeneratedValue */     private $id;      /**@ManyToOne(targetEntity="ServiceType") */     private $serviceType;      /** @Column(length=255) */     private $description; }  /** @Entity */ class ServiceType {      /** @Id @Column(type="integer") @GeneratedValue */     private $id;      /** @Column(length=255)*/     private $serviceType; } </code></pre>  <p>My database looks like this:</p>  <pre><code>serviceLineItem(id INT, serviceType_id INT, description VARCHAR); serviceType(id INT, serviceType VARCHAR); </code></pre>  <p>I am looking for a PHP ORM Doctrine equivalent of </p>  <pre><code>select *  from ServiceLineItem  join ServiceType on ServiceLineItem.ServiceType_id = ServiceType.id where ServiceType.name = "Testing"; </code></pre>  <p>Currently I am using </p>  <pre><code>$serviceItems = $rep-&gt;findBy(array(      //"Testing" has an index of 1 in the database table     'serviceType' =&gt; '1' )); </code></pre>  <p>I am looking for a way to avoid using underlying database indices and use higher-level constructs, such as actual values (i.e. "Testing").    How can I do that in Doctrine?</p>