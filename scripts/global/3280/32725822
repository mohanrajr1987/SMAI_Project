<p>I am fairly new to Rails and am using Devise for user authentication in a new demo app. I have got Devise to work, along with the confirmable module and email verification.</p>  <p>I am now trying to build a phone verification on top of this. I updated the User model to have three additional fields: phone_number, phone_verified (boolean) and phone_verification_code. I also updated the Registrations Controller to allow the additional field of phone_number by the User model.</p>  <p>Now, in order to set up a phone verification system, I have created a page /user/:id/verify by adding a verify method in UsersController and updating the routes.rb. When I type in the URL, <a href="http://localhost:3000/users/10/verify" rel="nofollow">http://localhost:3000/users/10/verify</a>, I see the view for that page. </p>  <p>However, I am trying to get to the view by creating a button on the /app/views/users/show.html.erb and my code below is getting an error. I am trying to get the correct path helper for the button. Can someone please help. </p>  <p>Here is the error:</p>  <p>Showing /home/ubuntu/work/depot/app/views/users/show.html.erb where line #10 raised:</p>  <p>undefined method `verify_user_path' for #&lt;#:0x007fc3740fe3a0></p>  <p><strong>app/views/users/show.html.erb</strong></p>  <pre><code>&lt;p id="notice"&gt;&lt;%= notice %&gt;&lt;/p&gt;  &lt;div class="row"&gt;     &lt;div class="col-md-offset-2 col-md-8"&gt;         &lt;div class="panel panel-default"&gt;             &lt;div class="panel-heading"&gt;&lt;%= @user.email %&gt;&lt;/div&gt;                         &lt;div class="panel-body"&gt;                                 &lt;strong&gt;Phone number: &lt;/strong&gt;&lt;%= @user.phone_number %&gt;&lt;br/&gt;                                 &lt;% if @user.phone_verified == nil %&gt;                                     &lt;%= button_to [:verify, @user] do %&gt;                                         Verify Phone &lt;strong&gt;&lt;%= @user.phone_number %&gt;&lt;/strong&gt;                                     &lt;% end %&gt;                                 &lt;% else %&gt;                                     &lt;strong&gt;Phone Verified: &lt;/strong&gt;&lt;%= @user.phone_verified %&gt;&lt;br/&gt;                                 &lt;% end%&gt;                         &lt;/div&gt;              &lt;/div&gt;         &lt;/div&gt;     &lt;/div&gt; &lt;/div&gt; </code></pre>  <p><strong>UsersController</strong></p>  <pre><code> class UsersController &lt; ApplicationController    def index     @users = User.all   end    def show     begin       @user = User.find(params[:id])     rescue ActiveRecord::RecordNotFound       logger.error "Attempt to access an invalid user: #{params[:id]}"       redirect_to store_url, notice: "Attempt to access an invalid user: #{params[:id]}"     else       respond_to do |format|         format.html # show html.erb         format.json { render json: @user }       end     end   end    def verify   end    def generate_pin     @user.phone_verification_code = rand(0000..9999).to_s.rjust(4, "0")     save   end    private     # Use callbacks to share common setup or constraints between actions.     def set_user       @user = User.find(params[:id])     rescue ActiveRecord::RecordNotFound       @user = nil     end      # Never trust parameters from the scary internet, only allow the white list through.     def user_params       params[:user]     end  end </code></pre>  <p><strong>routes.rb</strong></p>  <pre><code>Rails.application.routes.draw do   devise_for :users, controllers: { registrations: "registrations" }   resources :users, only: [:index, :show, :edit, :update]    resources :orders   resources :line_items   resources :carts   match "users/:id/verify" =&gt; "users#verify", via: [:get]   get 'store/index'    resources :products   # The priority is based upon order of creation: first created -&gt; highest priority.   # See how all your routes lay out with "rake routes".    # You can have the root of your site routed with "root"   # root 'welcome#index'   root 'store#index', as: 'store' </code></pre>