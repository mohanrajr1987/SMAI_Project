<p>Setup Codeigniter, MVC (test dataset is OSClass DB)</p>  <p>Problem Have 3 queries to get the needed geographic data into the model and passed into the controller. Can not merge these queries and use "s_slug" column values as "slug".</p>  <p>Note - CI has limits and can not echo the entire city dataset. That limit isn't something I wish to change.</p>  <p>Question Would creating hierarchical folders in view solve some of my issues? location/country/state/city How do I use this data to generate slugs THAT WILL generate url's? Scope of test dataset is just shy of 28k entries on 3 tables. My actual dataset is almost 10k larger. Using this method, what is to be expected in adverse server performance due to load? I just don't know another way to create so many links.</p>  <p>In the front end url's are easy...I'm at a bit of a loss trying to control a front end function from the back (due to the massive scale I need) At least that's how I'm used to viewing the problem. hmmm..... did create hyperlinks in the view page (data test) but they are empty and obviously resolve to a 404.</p>  <p>Below is what I'm using so far. (subject to change)</p>  <p>Route(s) '$route['geo/(:any)'] = "geo/";' (a slight mod to a previous suggestion..was keeping door wide open to test data)</p>  <p>MODEL</p>  <pre><code>&lt;?php class GeoModel extends CI_Model {  function getCountries() {     $this-&gt;db-&gt;select("s_name,s_slug");     $this-&gt;db-&gt;from('oc_t_country');     $query = $this-&gt;db-&gt;get();     return $query-&gt;result(); }  function getStates(){   $this-&gt;db-&gt;select("pk_i_id,fk_c_country_code,s_name,s_slug");   $this-&gt;db-&gt;from('oc_t_region');   $query = $this-&gt;db-&gt;get();   return $query-&gt;result(); }  function getCities() {   $this-&gt;db-&gt;select("pk_i_id,fk_i_region_id,s_name,s_slug");   $this-&gt;db-&gt;from('oc_t_city');   $query = $this-&gt;db-&gt;get();   return $query-&gt;result(); }  function getCatStruct() {   $this-&gt;db-&gt;select("pk_i_id,fk_i_parent_id,i_position,b_enabled");   $this-&gt;db-&gt;from('t_category');   $query = $this-&gt;db-&gt;get();   return $query-&gt;result(); }  function getCatDescrip () {   $this-&gt;db-&gt;select("fk_i_category_id,s_name,s_slug");   $this-&gt;db-&gt;from('t_category_description');   $query = $this-&gt;db-&gt;get();   return $query-&gt;result(); }  } ?&gt; </code></pre>  <p>Controller</p>  <pre><code>&lt;?php class Geo extends CI_Controller {  function __Construct(){   parent::__Construct ();    $this-&gt;load-&gt;database(); // load database    $this-&gt;load-&gt;model('GeoModel'); // load model    //$this-&gt;load-&gt;helper('url'); }  public function index() {    $this-&gt;data['countries'] = $this-&gt;GeoModel-&gt;getCountries();    $this-&gt;data['states'] = $this-&gt;GeoModel-&gt;getStates(); // calling State model method getStates()    $this-&gt;data['cities'] = $this-&gt;GeoModel-&gt;getCities();     $this-&gt;data['catstruct'] = $this-&gt;GeoModel-&gt;getCatStruct();    $this-&gt;data['catdescrip'] = $this-&gt;GeoModel-&gt;getCatDescrip();     //$segments =array('countries','states','cities');    //echo site_url($segments);     $this-&gt;load-&gt;view('geo_view', $this-&gt;data); // load the view file , we are passing $data array to view file }  }  ?&gt; </code></pre>  <p>View (just to test data was passing successfully)</p>  <pre><code>&lt;!DOCTYPE html&gt; &lt;html lang="en"&gt;   &lt;head&gt;   &lt;/head&gt;   &lt;body&gt;  &lt;!-- In table format we display all state names from chosen DB Table with their id numbers. State name is used for name and State slug is used for link--&gt;      &lt;h4&gt;List of States&lt;/h4&gt;     &lt;table&gt;      &lt;tr&gt;       &lt;td&gt;&lt;strong&gt;State Name&lt;/strong&gt;&lt;/td&gt;       &lt;td&gt;&lt;strong&gt;State ID#&lt;/strong&gt;&lt;/td&gt;     &lt;/tr&gt;      &lt;?php foreach($states as $state){?&gt;      &lt;tr&gt;          &lt;td&gt;&lt;a href="/geo/&lt;?php echo $state-&gt;s_slug;?&gt;"&gt;&lt;?php echo $state-&gt;s_name;?&gt;&lt;/td&gt;          &lt;td&gt;&lt;?php echo $state-&gt;pk_i_id;?&gt;&lt;/td&gt;       &lt;/tr&gt;          &lt;?php }?&gt;      &lt;/table&gt;  &lt;!--  This section commented out - demo of how list with (currently empty) links can be created with 5 lines of code    &lt;?php foreach($states as $state){?&gt;    &lt;ul&gt;     &lt;li&gt;&lt;a href="/geo/&lt;?php echo $post-&gt;s_slug;?&gt;"&gt;&lt;?php echo $post-&gt;s_slug;?&gt;&lt;/a&gt;&lt;/li&gt;    &lt;/ul&gt;     &lt;?php }?&gt;     --&gt;      &lt;h4&gt;List of All Catagories (not sorted)&lt;/h4&gt;     &lt;table&gt;      &lt;tr&gt;       &lt;td&gt;&lt;strong&gt;Cat Name&lt;/strong&gt;&lt;/td&gt;       &lt;td&gt;&lt;strong&gt;Cat ID#&lt;/strong&gt;&lt;/td&gt;     &lt;/tr&gt;      &lt;?php foreach($catdescrip as $cdes){?&gt;      &lt;tr&gt;          &lt;td&gt;&lt;a href="/geo/&lt;?php echo $cdes-&gt;s_slug;?&gt;"&gt;&lt;?php echo $cdes-&gt;s_name;?&gt;&lt;/td&gt;          &lt;td&gt;&lt;?php echo $cdes-&gt;fk_i_category_id;?&gt;&lt;/td&gt;       &lt;/tr&gt;          &lt;?php }?&gt;      &lt;/table&gt;     &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>In the model I also have queries for the Catagories (2 tables to create the id relationship necessary to create hierarchical structure in a flat relational DB) For now ignore those. Upon reconsideration, it would be better to handle this shorter list thru HTML &amp; PHP templating. Trying to take the same list, append it to 30k individual pages, read the url and append new values to create 30k values for each category. That's too much load for both CI and a Mysql DB. That alone would be double pinging the DB each and every time any page loads. It would crawl to a halt.</p>  <p>Any sanity you can bring to this hot mess is greatly appreciated!</p>