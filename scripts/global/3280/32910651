<p>I'm attempting to return an image from a server route, but I'm getting one that is 0 bytes. I suspect it has something to do with how I'm using the <code>MemoryStream</code>. Here's my code:</p>  <pre><code>[HttpGet] [Route("edit")] public async Task&lt;HttpResponseMessage&gt; Edit(int pdfFileId) {     var pdf = await PdfFileModel.PdfDbOps.QueryAsync((p =&gt; p.Id == pdfFileId));      IEnumerable&lt;Image&gt; pdfPagesAsImages = PdfOperations.PdfToImages(pdf.Data, 500);     MemoryStream imageMemoryStream = new MemoryStream();     pdfPagesAsImages.First().Save(imageMemoryStream, ImageFormat.Png);      HttpResponseMessage response = new HttpResponseMessage();     response.Content = new StreamContent(imageMemoryStream);     response.Content.Headers.ContentType = new MediaTypeHeaderValue("image/png");     response.Content.Headers.ContentDisposition = new ContentDispositionHeaderValue("attachment")     {         FileName = pdf.Filename,         DispositionType = "attachment"     };     return response; } </code></pre>  <p>Through debugging I have verified that the <code>PdfToImages</code> method is working and that <code>imageMemoryStream</code> gets filled with data from the line</p>  <pre><code>pdfPagesAsImages.First().Save(imageMemoryStream, ImageFormat.Png); </code></pre>  <p>However in running it, I receive an attachment that is properly named but is 0 bytes. What do I need to change in order to receive the whole file? I think it's something simple but I'm not sure what. Thanks in advance.</p>