<p>I'm trying to use a python interpreter in my Android app to run SymPy. I already compiled Python for arm using this guide. <a href="http://mdqinc.com/blog/2011/09/cross-compiling-python-for-android/" rel="nofollow">http://mdqinc.com/blog/2011/09/cross-compiling-python-for-android/</a></p>  <p>This got me a libpython2.7.so file which I put into jniLibs/armeabi/. In my app I load it as follows:</p>  <pre><code>public class PythonTest {     static {         System.loadLibrary("python2.7");     }      public static native void Py_Initialize();     public static native void Py_Finalize();     public static native int PyRun_SimpleString(String s); } </code></pre>  <p>I am trying to use the methods from the headers located in the include directory which can also be found here: <a href="https://docs.python.org/2/c-api/" rel="nofollow">https://docs.python.org/2/c-api/</a></p>  <p>When I run the app on my device I get the following error:</p>  <pre><code>No implementation found for void com.example.dorian.testapplication.PythonTest.Py_Initialize() (tried Java_com_example_dorian_testapplication_PythonTest_Py_1Initialize and Java_com_example_dorian_testapplication_PythonTest_Py_1Initialize__) </code></pre>  <p>So to me this seems like the library loaded but it seems to look for the JNIEXPORT functions. But shouldn't I be able to use this library without writing specific C++ files? And if not, how would I accomplish this. Might there be a tool to generate wrapper files or something similar?</p>