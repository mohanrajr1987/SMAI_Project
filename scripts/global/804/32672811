<p>I am having some trouble getting this sorted out.</p>  <p>I am doing some JNI stuff with SDL. The code is structured like this:</p>  <pre><code>class.c int Android_JNI_GetTouchDeviceIds(int **ids) {     JNIEnv *env = Android_JNI_GetEnv();      jint sources = 4098; /* == InputDevice.SOURCE_TOUCHSCREEN */     jmethodID mid = (*env)-&gt;GetStaticMethodID(env, mActivityClass, "inputGetInputDeviceIds", "(I)[I");     jintArray array = (jintArray) (*env)-&gt;CallStaticObjectMethod(env, mActivityClass, mid, sources);     int number = 0;     *ids = NULL;     if (array) {         number = (int) (*env)-&gt;GetArrayLength(env, array);         if (0 &lt; number) {             jint* elements = (*env)-&gt;GetIntArrayElements(env, array, NULL);             if (elements) {                 int i;                 *ids = SDL_malloc(number * sizeof (**ids));                 for (i = 0; i &lt; number; ++i) { /* not assuming sizeof (jint) == sizeof (int) */                     (*ids)[i] = elements[i];                 }                 (*env)-&gt;ReleaseIntArrayElements(env, array, elements, JNI_ABORT);             }         }         (*env)-&gt;DeleteLocalRef(env, array);     }     return number; }  class.h int Android_JNI_GetTouchDeviceIds(int **ids); </code></pre>  <p>Now in another class</p>  <pre><code>class2.h int Android_JNI_GetTouchDeviceIds(int **ids); class2.c const int number = Android_JNI_GetTouchDeviceIds(&amp;ids); </code></pre>  <p>The glue code between C and Java is in class.c and I know how to pass the instance to that class from the java side.</p>  <p>The thing is I don't want to edit the class.c function signature but I was thinking that if I could somehow have this function:</p>  <pre><code>int Android_JNI_GetTouchDeviceIds(int **ids) </code></pre>  <p>get the instance variable so that instead of doing a static method lookup, I am not using a static global reference but make it use a non static instance instead.</p>  <p>How can I restructure this code to have <strong>Android_JNI_GetTouchDeviceIds</strong> use an instance variable to do the function calling?</p>