<p>I have a jni code ,it runs well Under Android 5.0 ,but crash in Android 5.0. java code :</p>  <pre><code>@Override public void onCreate(Bundle savedInstanceState) {     super.onCreate(savedInstanceState);     setContentView(R.layout.main);     editTxt = (EditText)findViewById(R.id.threadNum);     msgTxt = (TextView)findViewById(R.id.msgTxt);     mybtn = (Button)findViewById(R.id.button);     mybtn.setOnClickListener(new View.OnClickListener()     {         @Override         public void onClick(View v)         {             msgTxt.setVisibility(View.VISIBLE);             msgTxt.setText("run");             threadCount=0;             String thread_num =editTxt.getText().toString();             if(thread_num == null || "".equals(thread_num)){                 Toast.makeText(JniThreadTestActivity.this, "run 1", Toast.LENGTH_LONG);                 return;             }             try{                 threadNo =Integer.parseInt(thread_num);             }catch(Exception ex){                 Toast.makeText(JniThreadTestActivity.this, "run ", Toast.LENGTH_LONG);                 System.out.println(ex.toString());                 return;             }             mybtn.setEnabled(false);             start = System.currentTimeMillis();             mainThread(threadNo);             while(true){                 if(threadCount ==threadNo){                     myHanlder.sendEmptyMessage(0);                     break;                 }             }           }         });     setJNIEnv(); } private synchronized void fromJNI(int i) {  Log.i("yusp","   Java------&gt;"+i);  System.out.println("yusp Java------&gt;"+i);  threadCount++; }  public void showMsg(){ } private native void mainThread(int num); private native void setJNIEnv(); </code></pre>  <p>C code is :</p>  <pre><code>#define NUMTHREADS 5 JavaVM *g_jvm = NULL; jobject g_obj = NULL; void *thread_fun(void* arg)  {      JNIEnv *env;      jclass cls;      jmethodID mid;       if((*g_jvm)-&gt;AttachCurrentThread(g_jvm, &amp;env, NULL) != JNI_OK)      {         LOGE("%s: AttachCurrentThread() failed", __FUNCTION__);         return NULL;      }      cls = (*env)-&gt;GetObjectClass(env,g_obj);      if(cls == NULL)      {        LOGE("FindClass() Error.....");        goto error;      }      mid = (*env)-&gt;GetMethodID(env, cls, "fromJNI", "(I)V");      if (mid == NULL)      {         LOGE("GetMethodID() Error.....");         goto error;       }      // Here I call the java method crash in android 5.0      (*env)-&gt;CallVoidMethod(env, cls, mid ,(int)arg);      error:         if((*g_jvm)-&gt;DetachCurrentThread(g_jvm) != JNI_OK)      {          LOGE("%s: DetachCurrentThread() failed", __FUNCTION__);      }      pthread_exit(0); } JNIEXPORT void Java_com_test_JniThreadTestActivity_mainThread( JNIEnv* env, jobject obj, jint threadNum) {  LOGE("yusp----main thread in.....");  int i;  pthread_t* pt;  pt = (pthread_t*) malloc(threadNum * sizeof(pthread_t));  for (i = 0; i &lt; threadNum; i++){     pthread_create(&amp;pt[i], NULL, &amp;thread_fun, (void *)i);  }  for (i = 0; i &lt; threadNum; i++){     pthread_join (pt[i], NULL); }  LOGE("yusp----main thread exit....."); } JNIEXPORT void Java_com_test_JniThreadTestActivity_setJNIEnv( JNIEnv* env, jobject obj) {  (*env)-&gt;GetJavaVM(env,&amp;g_jvm);  g_obj = (*env)-&gt;NewGlobalRef(env,obj); } JNIEXPORT jint JNICALL JNI_OnLoad(JavaVM *vm, void *reserved) {  JNIEnv* env = NULL;  jint result = -1;     if ((*vm)-&gt;GetEnv(vm, (void**)&amp;env, JNI_VERSION_1_4) != JNI_OK)  {      LOGE("GetEnv failed!");          return result;  }  return JNI_VERSION_1_4; } </code></pre>  <p>I use NewGlobalRef to save global object and use it to find the class then find  the Method ID ,and use CallVoidMethod to call the java Method. then the crash erro message is:</p>  <pre><code>E/yusp    (16411): yusp----main thread in..... F/art     (16411): art/runtime/check_jni.cc:65] JNI DETECTED ERROR IN APPLICATION: can't call void com.test.JniThreadTestActivity.fromJNI(int) on instance of java.lang.Class&lt;com.test.JniThr F/art     (16411): art/runtime/check_jni.cc:65]     in call to CallVoidMethod F/art     (16411): art/runtime/check_jni.cc:65] "Thread-356" prio=5 tid=22 Runnable F/art     (16411): art/runtime/check_jni.cc:65]   | group="main" sCount=0 dsCount=0 obj=0x12d1e080 self=0xd6f06400 F/art     (16411): art/runtime/check_jni.cc:65]   | sysTid=16440 nice=0 cgrp=apps sched=0/0 handle=0xe3bc7000 F/art     (16411): art/runtime/check_jni.cc:65]   | state=R schedstat=( 0 0 1 ) utm=0 stm=0 core=2 HZ=100 F/art     (16411): art/runtime/check_jni.cc:65]   | stack=0xd7004000-0xd7006000 stackSize=1012KB F/art     (16411): art/runtime/check_jni.cc:65]   | held mutexes= "mutator lock"(shared held) F/art     (16411): art/runtime/check_jni.cc:65]   native: #00 pc 00004640  /system/lib/libbacktrace_libc++.so (UnwindCurrent::Unwind(unsigned int, ucontext*)+23) F/art     (16411): art/runtime/check_jni.cc:65]   native: #01 pc 00002e8d  /system/lib/libbacktrace_libc++.so (Backtrace::Unwind(unsigned int, ucontext*)+8) F/art     (16411): art/runtime/check_jni.cc:65]   native: #02 pc 0023ed8d  /system/lib/libart.so (art::DumpNativeStack(std::__1::basic_ostream&lt;char, std::__1::char_traits&lt;char&gt; &gt;&amp;, int, cha F/art     (16411): art/runtime/check_jni.cc:65]   native: #03 pc 002242df  /system/lib/libart.so (art::Thread::Dump(std::__1::basic_ostream&lt;char, std::__1::char_traits&lt;char&gt; &gt;&amp;) const+146) F/art     (16411): art/runtime/check_jni.cc:65]   native: #04 pc 000af993  /system/lib/libart.so (art::JniAbort(char const*, char const*)+582) F/art     (16411): art/runtime/check_jni.cc:65]   native: #05 pc 000b00cd  /system/lib/libart.so (art::JniAbortF(char const*, char const*, ...)+60) F/art     (16411): art/runtime/check_jni.cc:65]   native: #06 pc 000b031d  /system/lib/libart.so (art::ScopedCheck::CheckVirtualMethod(_jobject*, _jmethodID*)+268) F/art     (16411): art/runtime/check_jni.cc:65]   native: #07 pc 000ba639  /system/lib/libart.so (art::CheckJNI::CallVoidMethod(_JNIEnv*, _jobject*, _jmethodID*, ...)+76) F/art     (16411): art/runtime/check_jni.cc:65]   native: #08 pc 00000e29  /data/app/com.test-1/lib/arm/libJNIThreads.so (thread_fun+132) F/art     (16411): art/runtime/check_jni.cc:65]   native: #09 pc 00013a53  /system/lib/libc.so (__pthread_start(void*)+30) F/art     (16411): art/runtime/check_jni.cc:65]   native: #10 pc 00011a47  /system/lib/libc.so (__start_thread+6) F/art     (16411): art/runtime/check_jni.cc:65]   (no managed stack frames) F/art     (16411): art/runtime/check_jni.cc:65] F/art     (16411): art/runtime/runtime.cc:284] Runtime aborting... </code></pre>  <p>Please help me to fix it , TKS !</p>