<p>I want to know how will I write My C code to map the Java Object Variables to a Struct  MY java class is calling a native method written in C ,below is my  code.</p>  <p>JavaCode:</p>  <pre><code>public class JNIWrapper {  static{     System.loadLibrary("JNIDemo"); }  public native int packet_mining_start(pax_store_mining_query_param_s   packet_mining_params); } </code></pre>  <p>My class pax_store_mining_query_param_s :</p>  <pre><code>public class pax_store_mining_query_param_s { String query_id;                        // A unique number, if applicable.                         // A unique number, if applicable. String flow_id;                      String time_start; String time_end; } </code></pre>  <p>Header Files : 1)sam_api:</p>  <pre><code>    /* DO NOT EDIT THIS FILE - it is machine generated */     #include &lt;jni.h&gt;    /* Header for class demo_JNIWrapper */     #ifndef _Included_demo_JNIWrapper    #define _Included_demo_JNIWrapper    #include "pax_store_mining.h"//Contains my C structures     #ifdef __cplusplus    extern "C" {    #endif    JNIEXPORT jint JNICALL Java_demo_JNIWrapper_packet_1mining_1start      (JNIEnv *, jobject, jobject);     } </code></pre>  <p>3)My Second Header File containing The struct :</p>  <pre><code>     #ifndef PAX_STORE_QUERY_H #define PAX_STORE_QUERY_H  #include &lt;sys/types.h&gt; #include &lt;unistd.h&gt; #include &lt;stdint.h&gt; #include &lt;stdio.h&gt; #include &lt;stdlib.h&gt; #include &lt;errno.h&gt; struct pax_store_mining_query_param_s {     uint32_t query_id;                      // A unique number, if applicable.     uint64_t flow_id;                            uint64_t time_start;     uint64_t time_end; };    </code></pre>  <p>4)Below is my C code :</p>  <pre><code>#include&lt;stdio.h&gt; #include &lt;jni.h&gt; #include "demo_JNIWrapper.h"  JNIEXPORT jint JNICALL Java_demo_JNIWrapper_packet_1mining_1start   (JNIEnv * env, jobject jobj, jobject packet_mining_params){  return 0;  }   </code></pre>  <p>I want to map this packet_mining_params struct from my java object which has the same name and params as this. Will this be automatically mapped?</p>