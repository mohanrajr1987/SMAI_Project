<p>I'm trying to use JNI to pass a file pointer of a drawable resource to SDL.</p>  <p>What I have for now are the <code>jfieldID</code>, the <code>jobject</code> and the <code>jclass</code> of the resource using this code :</p>  <pre><code>JNIEnv* env = (JNIEnv*)SDL_AndroidGetJNIEnv(); static const char* const drwClassName = "com/myapplication/android/R$drawable"; jclass Rclazz = env-&gt;FindClass(drwClassName); jfieldID Rfield = env-&gt;GetStaticFieldID(Rclazz , "grass", "I"); int fid = env-&gt;GetStaticIntField(Rclazz, Rfield); jobject activity = (jobject)SDL_AndroidGetActivity(); jclass Aclazz(env-&gt;GetObjectClass(activity)); jmethodID method_id = env-&gt;GetMethodID(Aclazz, "getResources", "()Landroid/content/res/Resources;"); jobject jresources = env-&gt;CallObjectMethod(activity, method_id); jclass resclazz = env-&gt;GetObjectClass(jresources); </code></pre>  <p>And the code to get the resource file in SDL is the following:</p>  <pre><code>int *fp; SDL_RWops *rw = SDL_RWFromFP((FILE*)fp, SDL_TRUE); SDL_Surface *alphaSurface=IMG_Load_RW(rw, 1); </code></pre>  <p>How can I get the file pointer from Java using JNI or any other method? If it's not possible to get the file pointer, is there a way to get the address of the file in memory and its size in order to use </p>  <pre><code>SDL_RWops* SDL_RWFromMem(void* mem, int size) </code></pre>  <p>P.S. : I use the Android <code>res/drawable</code> folder instead of <code>assets</code> because I'm trying to support different screen resolutions</p>