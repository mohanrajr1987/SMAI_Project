<p>I am trying to build a C program in which the parent creates an array of available sources and then forks some kids in order to do something. In this phase, the kids create an array using the "available" array of the parent and one more by using the array they just created.</p>  <p>This is my code:</p>  <pre><code>#include &lt;time.h&gt; #include &lt;stdio.h&gt; #include &lt;stdlib.h&gt; #include &lt;unistd.h&gt; #include &lt;sys/types.h&gt;  int main(int argc, char *argv[]) {     pid_t wpid;      int i = 0;     int j = 0;     int status = 0;     int sources = 3;     int children = 3;       int *available = malloc(sources * sizeof(int));      for (i = 0; i &lt; sources; i++)         available[i] = 20;      for (i = 0; i &lt; children; i++)     {         pid_t pid = fork();          if (pid == 0)         {             // kid gets here             srand(getpid());              printf("Kid %d created!\n", getpid());              int *total = malloc(sources * sizeof(int));             int *request = malloc(sources * sizeof(int));              for (j = 0; j &lt; sources; j++){                 total[j] = rand() % (available[j] / 2);                 printf("Kid(%d): Source(%d) = %d\n", getpid(), j, total[j]);             }               for (j = 0; j &lt; sources; j++){                 request[j] = rand() % total[j];                 printf("REQUEST: Kid(%d): Source(%d) = %d\n", getpid(), j, request[j]);             }              printf( "==============================================================\n");               free(total);             free(request);              exit(0);         }         // parent gets here          sleep(1);   // readable reasons     }      while ((wpid = wait(&amp;status)) &gt; 0);      free(available);      return 0; } </code></pre>  <p><strong>Problem</strong></p>  <p>The problem is that sometimes when I run this program, I don't get all the prints in my terminal. For example, the second loop should print exactly 3 times <code>REQUEST: blabla</code> but sometimes it gets printed only twice or it doesn't gets printed at all.</p>  <p><strong>What I tried</strong></p>  <p>1) According to this post <a href="http://stackoverflow.com/questions/2530663/printf-anomaly-after-fork">printf anomaly after &quot;fork()&quot;</a>, "when the output of your program is going to a terminal (screen), it is line buffered". But all of my prints have a '\n' in the end so I should not have a problem with printf's buffering.</p>  <p>2) Tried 'fflush(stdout)' after every print.</p>  <p>3) Tried to print to stderr using fprintf.</p>  <p>So why some prints do not appear? </p>