<p>I've got a script with a sed command in it that i use to preprend some text to the top of a file.</p>  <pre><code>sed '1s|^|'"$name"' \ '"$(usageblock "$name" "$desc")"' \ |' "$dest" &gt; "${dest}.new" &amp;&amp; \ mv "$dest" "${dest}.bak" &amp;&amp; \ mv "${dest}.new" "$dest" &amp;&amp; \ rm "${dest}.bak" </code></pre>  <p>As you can see, that script is calling a <code>usageblock()</code> function with arguments (function which is defined in another file) that prints out the actual text needed, and for that i use <code>printf</code> and its nice formatting capabilities.</p>  <pre><code>local format format="%-15s %-4s %-7s\n" printf "$format" "Description:" "" "$desc" </code></pre>  <p>The problem is in the format variable, the <code>\n</code>, more precisely. Once I call that function within the <code>sed</code> command, it throws out:</p>  <p><code>unescaped newline inside substitute pattern</code></p>  <p>And as soon as I delete that <code>\n</code>, it prints out fine (except that there is no new line at the end of every printf statement, which defeats the purpose of using printf in the first place).</p>  <p>So for the moment, I modified my function to print out using echo instead of printf but I don't like it. I have to use the <code>echo</code> command for every line that I need to print. Ugly.</p>  <p>So the question is, how can I use printf formatting capabilities for printing out to sed without causing problems with unescaped new lines? I've tried:</p>  <pre><code>format="%-15b %-4b %-7b\n \\" OR format="%-15b %-4b %-7b \\" OR printf "$format" "Description:" "" "$desc \\" </code></pre>  <p>and i've tried different combinations but simply nothing works. It seems like sed needs a single thing and is for me to take the <code>\n</code> part out of the format altogether.</p>  <p>Anybody knows about a sed or a printf flag to use in that case?</p>