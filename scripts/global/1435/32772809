<p>I have an array of values, and I'd like to sort it from highest to lowest values. Here's my array:</p>  <pre><code>@[@0.985517248005697843460382, @0.000103821940243745174581, @0.002930049254083499140483, @0.006089428685598983863325, @0.000169959081717878927225   @0.038708805305937427077012, @0.005785644142951103588435, @0.003949420720490224266663   @0.003306789895982742942537, @0.005520713777168946394258]; </code></pre>  <p>What's the most efficient way to create a new array, but instead of containing the sorted values, it would contain the indexes from the original array?</p>  <p>Currently this is what I'm doing:</p>  <pre><code>NSArray *array = @[@3, @5, @7, @2, @4, @4.1, @1, @10]; NSArray *sortedArray = [array sortedArrayUsingSelector: @selector(compare:)]; NSMutableArray *arraySortedByOriginalIndexes = [[NSMutableArray alloc] init]; for (int i = 0; i &lt; sortedArray.count; i++) {     NSUInteger index = [array indexOfObject:sortedArray[i]];     [arraySortedByOriginalIndexes addObject:@(index)]; } </code></pre>