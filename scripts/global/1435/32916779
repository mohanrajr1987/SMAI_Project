<p>I have an app where people select a state "NY" or "NJ" and the app queries for people from that state in my Firebase. When they select a state, I add observers for that state, and when they select a different state, I remove all of the current observers and add new ones for the selected state. The problem is, when the user starts with a state, switches to the second one, then switches back to the first one, the app crashes with the error:</p>  <pre><code>*** Assertion failure in -[FPersistentConnection listen:tagId:hashFn:onComplete:], /Users/mtse/Dev/firebase/firebase-client-objc/Firebase/Firebase/Core/FPersistentConnection.m:127 *** Terminating app due to uncaught exception 'NSInternalInconsistencyException', reason: 'listen() called twice for the same query' </code></pre>  <p>I have read this question but that solution has not fixed my problem: <a href="http://stackoverflow.com/questions/31599541/firebase-crashes-with-listen-called-twice-for-the-same-query-error">Firebase crashes with &#39;listen() called twice for the same query&#39; error</a></p>  <p>Here is my code:</p>  <pre><code>- (void)viewDidLoad {     [super viewDidLoad]; // Create a reference to a Firebase database URL     self.myUseRef = [[Firebase alloc] initWithUrl:@"https://myapp.firebaseio.com/States”];     self.basePath = [[Firebase alloc] initWithUrl:@"https://myapp.firebaseio.com/States”];     [self checkState]; } -(void)checkState {     if(([self.stateAbbr isEqualToString:@“NJ”]) || ([self.stateAbbr isEqualToString:@“NY”])) {         [self.stateQuery removeObserverWithHandle:self.handleOne];         [self.stateQuery removeObserverWithHandle:self.handleTwo];         [self.stateQuery removeObserverWithHandle:self.handleThree];         [self.stateQuery removeObserverWithHandle:self.handleFour];         [self.myUseRef removeAllObservers];         [self.stateQuery removeAllObservers];         [self.myUseRef removeObserverWithHandle:self.handleOne];         [self.myUseRef removeObserverWithHandle:self.handleTwo];         [self.myUseRef removeObserverWithHandle:self.handleThree];         [self.myUseRef removeObserverWithHandle:self.handleFour];         self.objects = [NSMutableArray array];         __block BOOL initialAdds = YES;         self.stateQuery = [self.myUseRef queryOrderedByChild:@"timeCreated"];         self.handleOne = [self.stateQuery observeEventType:FEventTypeChildAdded withBlock:^(FDataSnapshot *snapshot) {             [self.objects addObject:snapshot];             // Reload the table view so the new message will show up.             if (!initialAdds) {                 [self.tableView reloadData];             }         }];         self.handleTwo = [self.stateQuery observeEventType:FEventTypeChildChanged withBlock:^(FDataSnapshot *snapshot) {             for (int i = 0; i &lt; [self.objects count]; i++) {                 FDataSnapshot *snap = [self.objects objectAtIndex:i];                 if([snap.key isEqualToString:snapshot.key]) {                     NSLog(@"EQUAL BABY");                     [self.objects replaceObjectAtIndex:i withObject:snapshot];                 }             }             [self.tableView reloadData];         }];         self.handleFour = [self.stateQuery observeEventType:FEventTypeChildRemoved withBlock:^(FDataSnapshot *snapshot) {             for (int i = 0; i &lt; [self.objects count]; i++) {                 FDataSnapshot *snap = [self.objects objectAtIndex:i];                 if([snap.key isEqualToString:snapshot.key]) {                     NSLog(@"EQUAL BABY");                     [self.objects removeObjectAtIndex:i];                 }             }             [self.tableView reloadData];         }];         self.handleThree = [self.myUseRef observeEventType:FEventTypeValue withBlock:^(FDataSnapshot *snapshot) {             [self.tableView reloadData];             initialAdds = NO;         } withCancelBlock:^(NSError *error) {             NSLog(@"%@", error.description);         }];     } else {         [self changeState];     } } -(void)changeState {   if(self.stateTag == 1) {             self.stateAbbr = @“NJ”;         }         if(self.stateTag == 2) {             self.stateAbbr = @“NY”;         }         [self.myUseRef removeAllObservers];         [self.basePath removeAllObservers];         [self.stateQuery removeAllObservers];         [self.stateQuery removeObserverWithHandle:self.handleOne];         [self.stateQuery removeObserverWithHandle:self.handleTwo];         [self.stateQuery removeObserverWithHandle:self.handleThree];         [self.stateQuery removeObserverWithHandle:self.handleFour];         [self.myUseRef removeObserverWithHandle:self.handleOne];         [self.myUseRef removeObserverWithHandle:self.handleTwo];         [self.myUseRef removeObserverWithHandle:self.handleThree];         [self.myUseRef removeObserverWithHandle:self.handleFour];         self.myUseRef = [self.basePath childByAppendingPath:[NSString stringWithFormat:@“%@/People”, self.stateAbbr]];         [self checkState]; } </code></pre>