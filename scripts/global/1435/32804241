<p>I have a <code>UITableViewCell</code> subclass that I'm electing to set all positioning up in its <code>layoutSubviews</code> method. I have a special view I've created (essentially a view with a <code>UILabel</code> in it) as a subview of this cell, and I want to position it correctly in <code>layoutSubviews</code>, but I cannot figure out how.</p>  <p>Every other view I calculate what its position should be manually, and then call setFrame. This seems weird with this special view I've created as it's created from a nib and laid out using Auto Layout. But the cell itself doesn't use Auto Layout so I'm unsure what to do.</p>  <p>Constraint-wise the special view with the label in it just has the label positioned 15pt in from each size of the view it's contained in. </p>  <p>In <code>layoutSubviews</code> I want to essentially keep this logic that insets it intact, but make sure in terms of the cell that it's positioned and sized properly within the cell. So essentially I want to keep the Auto Layout logic that keeps the label within the special view positioned intact, but allow me to position and size <em>the whole view itself</em> within the cell using <code>setFrame</code>. Basically a view created from a nib with Auto Layout used inside a cell that elects not to use Auto Layout.</p>  <p>I tried basically calling <code>sizeThatFits:CGSizeZero</code> to deduce what size it should be with Auto Layout, then position it, but it returns an absurdly large size that doesn't make sense. Even if I return a manually size, I get "constraint conflict" warnings in the console that one or more of my Auto Layout constraints for setting up the label within the cell will be ignored.</p>  <p>How should I be doing this? How should I make the view's subviews respect its Auto Layout system, but allow me to position the cohesive view itself however I please?</p>