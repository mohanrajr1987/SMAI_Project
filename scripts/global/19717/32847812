<p>I know that the selector of a jQuery plugin call can be get using the <code>.selector</code> property but it is deprecated since jQuery 1.7 and may be removed without notice in a future version.</p>  <pre><code>$.fn.myplugin = function() {     console.log( this.selector ); }; // ... $( '#selector' ).myplugin(); // #selector </code></pre>  <p>What's the right way to get the selector of a plugin call now that the <code>.selector</code> property was deprecated?</p>  <p>I need to get the plugin call's selector because my plugin's option need to have a selector which sometimes the same as the plugin call's selector, so I can check if they're the same:</p>  <pre><code>$.fn.myplugin = function( options ) {     var opts = $.extend( { }, $.fn.myplugin.defaults, options );     if ( opts.selector === this.selector ) {         // if arg selector is the same as plugin call's selector     } else {         // if they're not the same     } }; $.fn.myplugin.defaults = {     selector: '#default' }; // ... $( '#same' ).myplugin( {     selector: '#same' } ); </code></pre>