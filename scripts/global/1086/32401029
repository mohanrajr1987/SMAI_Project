<p>While refactoring some legacy system (java), I came across a configuration files that make intensive use of lists. Mostly, there is a property that defines list of references parameters, and afterward there are properties with corresponding values, such as:</p>  <pre><code>referencesNames = name1, name2, ... valuesList1 = name1Value, name2Value, ... valuesList2 = name1Value, name2Value, ... </code></pre>  <p>The problem - there are too many lists and they are too long.</p>  <p>One thought of mine was to eliminate the references lists and create something like that:</p>  <pre><code>name1Values = value1, value2, ... name2Values = value1, value2, ... </code></pre>  <p>Nevertheless these lists are still long, and it's hard to define their values correctly. Also, the references names are now hardcoded, so if I want to add a new one, I must open the code to handle the corresponding property. Any suggestions?</p>