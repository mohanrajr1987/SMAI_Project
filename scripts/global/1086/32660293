<p>I'm writing a react component that when the forward <strong><code>handleClickLeft</code></strong> or backward  <strong><code>handleClickRight</code></strong> button is clicked, it loops through an array going forward or backward. I did this by using modulus logic. I am able to get the forward button <strong><code>handleClickLeft</code></strong> to work properly but I can't figure out how do the reverse <strong><code>handleClickRight</code></strong>. Here's my example code:</p>  <pre><code>export default class Rooms extends React.Component {    constructor(props, context) {       super(props, context);       this.state = {indexPos: [0, 1, 2]};       this.state.itemArry = [{room1: 'this is room1'}, {room2: 'this is room2'}, {room3: 'this is room3'}, {room4: 'this is room4'}];        this.handleClickLeft = this.handleClickLeft.bind(this);       this.handleClickRight = this.handleClickRight.bind(this);    }    render() {   //Using index to show each item in the itemArry       let firstItem = this.state.indexPos[0]       let secondItem = this.state.indexPos[1]       let thirdItem = this.state.indexPos[2]              &lt;div&gt;          &lt;ul&gt;            &lt;li&gt;this.state.itemArry[firstItem]&lt;/li&gt;            &lt;li&gt;this.state.itemArry[secondItem]&lt;/li&gt;            &lt;li&gt;this.state.itemArry[thirdItem]&lt;/li&gt;          &lt;/ul&gt;       &lt;/div&gt;    }     handleClickLeft(){     // This one is working, it loops through the array in order and only shows three items at once. Ex: every time the forward button is clicked, indexPos changes &gt;&gt; [0, 1, 2] --&gt; [1, 2, 3] --&gt; [2, 3, 0]...        let vals = this.state.indexPos;       let arryLength = this.state.itemArry.length;       this.setState({          indexPos: [(vals[0] + 1) % arryLength, (vals[1] + 1) % arryLength, (vals[2] + 1) % arryLength]       });    }    handleClickRight(){  //This one is NOT working. It should be going in reverse       let vals = this.state.indexPos;      let arryLength = this.state.itemArry.length;      this.setState({         indexPos: [(vals[0] - 1 % arryLength), (vals[1] - 1 % arryLength), (vals[2] - 1 % arryLength)]      })   } } </code></pre>  <p>In <strong><code>handleClickRight</code></strong> function, when any of the indexPos value reaches 0, it breaks the script. I understand the reason behind it; it's because of the negative value. I used Math.abs(): </p>  <pre><code>indexPos: [Math.abs((vals[0] - 1) % arryLength), Math.abs((vals[1] - 1) % arryLength), Math.abs((vals[2] - 1) % arryLength)] </code></pre>  <p>to keep every value positive but it gave me a different result where it only loops through 2 items after one of the indexPos value reaches 0. </p>  <p>This is what happens when using Math.abs():  </p>  <pre><code>indexPos: [0, 1, 2] --&gt; [1, 0, 1] --&gt; [0, 1, 0] --&gt; [1, 0 , 1] ... etc </code></pre>  <p>This is how I want <code>handleClickRight</code> to loop though: </p>  <pre><code>indexPos: [0, 1, 2] --&gt; [4, 0, 1] --&gt; [3, 4, 0] --&gt; [2, 3, 4] --&gt; [1, 2, 3] --&gt; [0, 1, 2] </code></pre>  <p>I appreciate the help in advance!</p>