<p>I've got two functions that are almost identical, some things are just replaced by other names basically. I'd like to DRY this up if I can, but I can't find a solution which would make more sense than this while still remaining readable. </p>  <p>The purpose of these functions are to like and dislike, if you like, then an item will be deleted from disliked and vice versa.</p>  <p>Preferably a refactored function of this should be applicable to other situations where something needs to be deleted in one place and added in another. While keeping track of which choice the user has made.</p>  <p>Is there a commonly used pattern for making functions like this or does anyone of you have a better solution which would make these functions less repeatable and applicable to other scenarios?</p>  <p>I guess one way, that I have tried in the past, is with parameters. However, this felt really clunky and ended up being more of a pain to use and read. I just feel there has to be a better way of performing things like this.</p>  <pre><code>$scope.like = function(review) {    review.likesBy ? review.likesBy : review.likesBy = [];   review.dislikesBy ? review.dislikesBy : review.dislikesBy = [];    if (review.likesBy.indexOf(uid) !== -1) {     review.likes--;     review.likesBy.pop(uid);   }   else if (review.likesBy.indexOf(uid) === -1) {     review.likes++;     review.likesBy.push(uid);      if (review.dislikesBy.indexOf(uid) !== -1) {       review.dislikes--;       review.dislikesBy.pop(uid);     }   }    reviews.$save(review); };  $scope.dislike = function(review) {      review.likesBy ? review.likesBy : review.likesBy = [];     review.dislikesBy ? review.dislikesBy : review.dislikesBy = [];      if (review.dislikesBy.indexOf(uid) !== -1) {       review.dislikes--;       review.dislikesBy.pop(uid);     }     else if (review.dislikesBy.indexOf(uid) === -1) {       review.dislikes++;       review.dislikesBy.push(uid);        if (review.likesBy.indexOf(uid) !== -1) {         review.likes--;         review.likesBy.pop(uid);       }     }      reviews.$save(review); }; </code></pre>