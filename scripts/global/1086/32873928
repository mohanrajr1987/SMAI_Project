<p>If I use a mockito mock of an object being injected into the SUT as an argument, what happens if during refactoring the code is re-organized to call another non-mocked method of that same mock? My tests would fail and I'd have to go back and change my tests and set them up for this new call (the opposite of what I'd want to be doing when refactoring code)</p>  <p>If this is a common occurrence during refactoring, how can using mocks be of any use except for when mocking external, resource-intensive entities (network, db, etc.)?</p>  <p>I'm using mocks to mock out objects that would take hours to set up given my team seems to love monstrously deep aggregate objects.</p>  <p>Thanks!</p>