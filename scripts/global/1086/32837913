<p>Recently I asked <a href="http://stackoverflow.com/questions/32633702/good-practices-dont-repeat-yourself-vs-doing-too-many-things">this question</a> about good practices when trying to avoid code repetition.</p>  <p>My code has been reviewed by a more experienced developer an he suggests this correction:</p>  <blockquote>   <p>The idea is not bad but I would not have done it like that. Too many   input parameters of this method. I would have passed one bool and one   value of enum indicating the kind of item [X, Y...] to create. Then   your method would have at its disposal four other methods, for getting</p>      <ol>   <li>the string for the question of item creation,</li>   <li>the string for the question of window opening,</li>   <li>the method for creating the item and</li>   <li>the window proxy.</li>   </ol>      <p>Each of these 4 method would take as parameter the enum value indicating the kind of item.</p> </blockquote>  <p>I find that the proposed solution has a big problem, because we depend on a switch instruction in each of the 4 methods, so if we later add one type of item, we have to change all four methods.</p>  <p>However, there are possibly some advantages in this approach that I cannot see. </p>  <p><strong>So the question is, do you have experience with a choice like this one? Which approach would you recommend and why?</strong></p>  <p><strong>NOTE:</strong> I'm not asking about personal preferences or stylistic choices, but about possibles problems arising from each of the two approaches.</p>