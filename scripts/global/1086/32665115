<p>I have built restful web services. The services endpoints have a similar logic: </p>  <p>If the input validation succeeds, do a database operation and return the result.</p>  <p>If the db operation fails, return the db error.</p>  <p>If the validation fail, return a response with information on the failed validation</p>  <p>My code was explicit in the sense you can read the code and understand the flow of the program. </p>  <p>A coworker refactored it so that this basic flow is refactored in a utility class which main function takes the request body, the db operation and the handlers. </p>  <p>Now the code doesn't express the flow but the basic logic is refactored.</p>  <p>What is the best practice? Would you sacrifice readability for refactoring? </p>  <p>Yes unit test will be reduced a bit too. </p>  <p>Thanks.</p>