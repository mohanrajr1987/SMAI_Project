<p>I have a Swift data file in the "Quote a Day" project with 500 quotes and I would like to call <code>updateQuote()</code> every time it becomes a new day. </p>  <p>The quote string variable updates a UILabel in the <code>QuoteViewcontroller</code> and the string for the alertBody in <code>UILocalNotifiication()</code>. </p>  <p>See below for reference:</p>  <pre><code>var quotes:[Quote] = quoteData var quote: String! var counter = 0   func updateQuote() {      if counter == quotes.count {          counter = 0      } else {          quote = quotes[counter].quoteTitle          counter++      } } </code></pre>  <p>I was trying to do something like this with <code>NSDate()</code>:</p>  <pre><code>let userCalendar = NSCalendar.currentCalendar() let dayCalendarUnit: NSCalendarUnit = [.Day] let DayDifference = userCalendar.components(     dayCalendarUnit,     fromDate: lastDate,     toDate: nowDate,     options: [])  var difference = DayDifference.day  if difference &gt; 0 {  updateQuote() lastDate = nowDate  } </code></pre>  <p>But that logic does not seem to work as I am not sure how to populate lastDate and nowDate on the initial run.</p>  <p>I also I am not sure where to put the above function so that it can keep checking while the app is running in the background.</p>  <p>Any insight would be great.  </p>