<p>I am unmarshalling an XML file into a JAXB-generated Java object.  I would like the unmarshaller to validate the file against the schema in the process.  The schema's <code>.xsd</code> file is inside a dependencies <code>.jar</code> file.  I set the schema like so:</p>  <pre><code>ClassLoader classLoader = getClass().getClassLoader(); InputStream schemaStream = classLoader.getResourceAsStream(schemaFilePath); StreamSource schemaSource = new StreamSource(schemaStream); Schema schema = factory.newSchema(schemaSource); unmarshaller.setSchema(schema); </code></pre>  <p>That mostly works except for one issue.  The schema has some complex types factored out into other <code>.xsd</code> files.  The unmarshaller doesn't appear to be able to find the factored-out <code>.xsd</code> files because when I attempt to set the schema I'm getting the <code>SAXException</code>:</p>  <pre><code>Cannot resolve the name 'tns:FactoredOutType' to a(n) 'type definition' component. </code></pre>  <p>Note: This works fine when running from eclipse, when it references the <code>.xsd</code> files from the <code>target</code> folder instead of from the <code>.jar</code> file.</p>  <p>Anybody have any ideas how I can get the factored-out <code>.xsd</code> files working for a schema that is in a dependency's <code>.jar</code> file?</p>  <p>Edit:</p>  <p>In case it's helpful information, the top-level <code>.xsd</code> is in a <code>model</code> folder, and the type it references is in <code>model/common</code>, so I reference the top-level <code>.xsd</code> as:</p>  <pre><code>"model/TopLevel.xsd" </code></pre>  <p>... and inside it, it references the factored-out <code>.xsd</code> as:</p>  <pre><code>"common/FactoredOut.xsd" </code></pre>