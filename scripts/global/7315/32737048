<p>I am trying to unmarhsall a object called adhocqueryresponse.</p>  <p>This object has a RegistryObjectListType atributte that has something weird inside:</p>  <pre><code>List&lt;JAXBElement&lt;? extends IdentifiableType&gt;&gt; identifiable </code></pre>  <p>when i marshall this object i don't have problem, but in the unmarshall the identifiable atribute is null always.</p>  <p>i don't have solution my unmarshall code is:</p>  <pre><code>    JAXBContext jaxbContext = JAXBContext.newInstance(             "oasis.names.tc.ebxml_regrep.xsd.lcm._3:"             + "oasis.names.tc.ebxml_regrep.xsd.query._3:"             + "oasis.names.tc.ebxml_regrep.xsd.rim._3:"             + "oasis.names.tc.ebxml_regrep.xsd.rs._3"     );      Unmarshaller unmarshaller = jaxbContext.createUnmarshaller();     StringReader reader = new StringReader(xml);     Object object = unmarshaller.unmarshal(reader);     response = (AdhocQueryResponse) object; </code></pre>  <p>and the adhoqueryresponse:</p>  <pre><code>@XmlAccessorType(XmlAccessType.FIELD) @XmlType(name = "", propOrder = {     "registryObjectList" }) @XmlRootElement(name = "AdhocQueryResponse", namespace = "urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0") public class AdhocQueryResponse     extends RegistryResponseType {      @XmlElement(name = "RegistryObjectList", namespace = "urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0", required = true)     protected RegistryObjectListType registryObjectList; </code></pre>  <p>and RegistryObjectListType:</p>  <pre><code>@XmlAccessorType(XmlAccessType.FIELD) @XmlType(name = "RegistryObjectListType", propOrder = {     "identifiable" })  public class RegistryObjectListType {     @XmlElementRef(name = "Identifiable", namespace = "urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0", type = JAXBElement.class)     protected List&lt;JAXBElement&lt;? extends IdentifiableType&gt;&gt; identifiable; </code></pre>  <p>I want that the JAXBElement that extends Identifiable be:</p>  <pre><code>@XmlAccessorType(XmlAccessType.FIELD) @XmlType(name = "ExtrinsicObjectType", propOrder = {     "contentVersionInfo" }) public class ExtrinsicObjectType     extends RegistryObjectType {      @XmlElement(name = "ContentVersionInfo")     protected VersionInfoType contentVersionInfo;     @XmlAttribute(name = "mimeType")     protected String mimeType;     @XmlAttribute(name = "isOpaque")     protected Boolean isOpaque; </code></pre>  <p>finally my XML to unmarshall is:</p>  <pre><code>&lt;AdhocQueryResponse xmlns:ns2="urn:oasis:names:tc:ebxml-regrep:xsd:rs:3.0" xmlns="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0"&gt;     &lt;RegistryObjectList&gt;         &lt;ExtrinsicObject mimeType="text/xml" status="urn:oasis:names:tc:ebxmlregrep:StatusType:Approved" objectType="urn:uuid:7edca82f-054d-47f2-a032-9b2a5b5186c1" lid="ola" home="" id="identificador de la instancia" xmlns="" xmlns:ns3="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0"&gt;             &lt;ns3:Slot name="creationTime"&gt;                 &lt;ns3:ValueList&gt;                     &lt;ns3:Value&gt;aaaaMMddhhmmss&lt;/ns3:Value&gt;                 &lt;/ns3:ValueList&gt;             &lt;/ns3:Slot&gt;         &lt;/ExtrinsicObject&gt;     &lt;/RegistryObjectList&gt; &lt;/AdhocQueryResponse&gt; </code></pre>  <p>object factory:</p>  <pre><code>@XmlElementDecl(namespace = "urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0", name = "ExtrinsicObject", substitutionHeadNamespace = "urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0", substitutionHeadName = "Identifiable") public JAXBElement&lt;ExtrinsicObjectType&gt; createExtrinsicObject(ExtrinsicObjectType value) {     return new JAXBElement&lt;ExtrinsicObjectType&gt;(_ExtrinsicObject_QNAME, ExtrinsicObjectType.class, null, value);     } </code></pre>  <p>I have a clue, if I add: </p>  <pre><code>  @XmlAnyElement(lax=false)     @XmlElementRefs({     @XmlElementRef(name = "ExtrinsicObject", namespace = "urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0", type = JAXBElement.class),     @XmlElementRef(name = "Identifiable", namespace = "urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0", type = JAXBElement.class)    } )    </code></pre>  <p>in the atribute identifiable of RegistryObjectListType class, the unmarshall is not null but it is type: ElementNSImpl not JaxbElement</p>  <p>the marshall works fine, any help is welcome</p>