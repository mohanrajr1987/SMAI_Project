<p>I have generated some Jaxb objects with the XJC tool.  These classes extend one common base class.  So for example:</p>  <p>Base.java - Hand-written</p>  <pre><code>@XmlTransient public class Base {     public void beforeUnmarshal(Unmarshaller unmarshaller, Object parent) {         //...     }      public void afterUnmarshal(Unmarshaller unmarshaller, Object parent) {         //...     }      //... } </code></pre>  <p>H1.java - Generated from XJC</p>  <pre><code>@XmlAccessorType(XmlAccessType.FIELD) @XmlType(name = "", propOrder = {     "content" }) @XmlRootElement(name = "h1") public class H1 extends Base {     //... } </code></pre>  <p>I want to override the behavior of a handful of these generated classes through a factory method, but I don't want to change the code that's generated from XJC because I want to keep these classes open for other uses, not just my current project.  For example, I'd like to extend the H1 class (we'll call it H1Extended) and add a couple attributes, and each time the H1 tag occurs in the XML, Jaxb would return an instance of H1Extended instead of H1.</p>  <p>I tried placing a factoryClass annotation on the base class like this...</p>  <pre><code>@XmlTransient @XmlType(factoryClass=MyFactoryClass.class, factoryMethod="create") public class Base {     //... } </code></pre>  <p>... but that didn't work.  What I would like is a factory method that creates the class generated by XJC by default, and returns a custom class for the ones I specify.</p>  <p>I don't mind re-generating the Jaxb classes with XJC, but I want them to utilize base classes that the programmer will create, and once they're generated, they cannot be hand-edited.</p>  <p>Is this possible?  Thanks.</p>  <p>EDIT: I didn't notice the generated ObjectFactory class.  Could this be used to accomplish what I'm looking for?</p>  <p>EDIT #2: I extended the ObjectFactory class and overrode one of the create methods to return H1Extended, but the base H1 class is being returned for some reason.</p>  <p>EDIT #3: I'll shorten my question: if I have a JaxB class <code>H1</code>, how do I have the unmarshaller return <code>H1Extended</code>?</p>