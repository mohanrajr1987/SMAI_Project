<p>I have an XSD file with a data definition. Based on the XSD file, an ant-based target executes an XJC command to generate a Java class from XSD.</p>  <p>The problem I am having is for the XSD <code>&lt;attribute&gt;</code> tag; when I set the default to 'true' it takes wrapper Boolean instead of primitive boolean.</p>  <pre><code>&lt;xs:element name="TagElement"&gt;     &lt;xs:complexType&gt;       &lt;xs:attribute name="name" type="xs:string"/&gt;       &lt;xs:attribute name="type" use="required" type="xs:int"/&gt;       &lt;xs:attribute name="booleanAttr" type="xs:boolean" default="true" &gt;       &lt;/xs:attribute&gt;     &lt;/xs:complexType&gt;   &lt;/xs:element&gt; </code></pre>  <p>The above XSD definition generates wrapper Boolean. </p>  <p>When <code>default</code> attribute is not there and instead I have <code>required="true"</code> then it works fine. So, this works fine:</p>  <pre><code>&lt;xs:attribute name="booleanAttr" type="xs:boolean" use="required" /&gt; </code></pre>  <p>How to fix this? How can I make sure that generated Java class has boolean primitive type instead of wrapper Boolean?</p>  <p>Generated Java code from XSD:</p>  <pre><code>@XmlAttribute(name = "booleanAttr") protected Boolean booleanAttr;  public boolean isBooleanAttr() {     if (booleanAttr == null) {         return true;     } else {         return booleanAttr;     } }  public void setBooleanAttr(Boolean value) {     this.booleanAttr = value; } </code></pre>