<pre><code>&lt;Product&gt; &lt;Row1&gt;97545214&lt;/Row1&gt; &lt;Row2&gt;   &lt;value&gt;01&lt;/value&gt; &lt;/Row2&gt; &lt;Row4&gt;   &lt;number&gt;1&lt;/number&gt;   &lt;role&gt;A01&lt;/role&gt;   &lt;name&gt;Paul &lt;/name&gt; &lt;/Row4&gt; &lt;Row4&gt;   &lt;number&gt;1&lt;/number&gt;   &lt;role&gt;A01&lt;/role&gt;   &lt;name&gt;James &lt;/name&gt; &lt;/Row4&gt; &lt;Row4&gt;   &lt;number&gt;1&lt;/number&gt;   &lt;role&gt;A01&lt;/role&gt;   &lt;name&gt;John &lt;/name&gt; &lt;/Row4&gt; &lt;Row5&gt;   &lt;Code&gt;01&lt;/Code&gt;   &lt;Measurement&gt;9.00&lt;/Measurement&gt;   &lt;UnitCode&gt;in&lt;/UnitCode&gt; &lt;/Row5&gt; &lt;Row5&gt;   &lt;Code&gt;02&lt;/Code&gt;   &lt;Measurement&gt;6.00&lt;/Measurement&gt;   &lt;UnitCode&gt;in&lt;/UnitCode&gt; &lt;/Row5&gt; &lt;Row5&gt;   &lt;Code&gt;03&lt;/Code&gt;   &lt;Measurement&gt;1.09&lt;/Measurement&gt;   &lt;UnitCode&gt;in&lt;/UnitCode&gt; &lt;/Row5&gt; &lt;Row7&gt;   &lt;price&gt;      &lt;Code&gt;01&lt;/PriceTypeCode&gt;      &lt;Amount&gt;62.95&lt;/Amount&gt;      &lt;currency&gt;USD&lt;/currency&gt;   &lt;/Price&gt; &lt;/Row7&gt;   &lt;Row7&gt;   &lt;price&gt;      &lt;Code&gt;01&lt;/PriceTypeCode&gt;      &lt;Amount&gt;62.95&lt;/Amount&gt;      &lt;currency&gt;USD&lt;/currency&gt;   &lt;/Price&gt; </code></pre>  <p>       How to read this xml in java StaX parser. This is the sample xml. Original file size is more than 2 gb. so only i go for StaX parser.   My Java class is    BulkFileReader.java</p>  <pre><code>public class BulkFileReader {   public static void main(String[] args) throws ClassNotFoundException, XMLStreamException, FileNotFoundException {      String fileName = "E:\\Arunselvan\\D2 to D5\\xml files\\combine.xml";       List&lt;BookSpecBean&gt; bookspec = (List&lt;BookSpecBean&gt;) parseXML(fileName);      for(BookSpecBean bean : bookspec){       System.out.println("The Row1="+bean.row1);       System.out.println("The Row2="+bean.row2);     System.out.println("The Number="+bean.number);         System.out.println("The Role="+bean.role);         System.out.println("The Name="+bean.name);     System.out.println("The code="+bean.code);         System.out.println("The amount="+bean.amount);         System.out.println("The currency="+bean.currency);         System.out.println("===========================================");         new Query().InsertMetaData1(bean);           }      System.out.println("XML Completed Successfully");  }  private static List&lt;BookSpecBean&gt; parseXML(String fileName) {     List&lt;BookSpecBean&gt; empList = new ArrayList&lt;&gt;();     BookSpecBean emp = null;     XMLInputFactory xmlInputFactory = XMLInputFactory.newInstance();     xmlInputFactory.setProperty(XMLInputFactory.IS_COALESCING, true);     try {         XMLEventReader xmlEventReader = xmlInputFactory.createXMLEventReader(new FileInputStream(fileName));          while(xmlEventReader.hasNext()){             XMLEvent xmlEvent = xmlEventReader.nextEvent();            if (xmlEvent.isStartElement()){                StartElement startElement = xmlEvent.asStartElement();                  if(startElement.getName().getLocalPart().equals("Product")){                    emp = new BookSpecBean();                     }                }                //set the other varibles from xml elements                else if(startElement.getName().getLocalPart().equals("Row1")){                    xmlEvent = xmlEventReader.nextEvent();                    emp.setRow1(xmlEvent.asCharacters().getData());                }       else if(startElement.getName().getLocalPart().equals("Row2")){                    xmlEvent = xmlEventReader.nextEvent();                    emp.setRow2(xmlEvent.asCharacters().getData().replace("'", ""));                }                 String qname = startElement.getName().getLocalPart();                if(qname.equalsIgnoreCase("Row4")){              xmlEvent = xmlEventReader.nextEvent();          }     else if(startElement.getName().getLocalPart().equals("number")){         xmlEvent = xmlEventReader.nextEvent();         emp.setnumber(xmlEvent.asCharacters().getData());         }     else if(startElement.getName().getLocalPart().equals("role")){         xmlEvent = xmlEventReader.nextEvent();         emp.setrole(xmlEvent.asCharacters().getData());         }     else if(startElement.getName().getLocalPart().equals("name")){     xmlEvent = xmlEventReader.nextEvent();     emp.setname(xmlEvent.asCharacters().getData());         }  }     if(xmlEvent.isEndElement()){         EndElement endElement = xmlEvent.asEndElement();         if(endElement.getName().getLocalPart().equals("Row4")){         empList.add(emp);     } }          else if(startElement.getName().getLocalPart().equals("code")){             xmlEvent = xmlEventReader.nextEvent();             emp.setcode(xmlEvent.asCharacters().toString());         }         else if(startElement.getName().getLocalPart().equals("Amount")){             xmlEvent = xmlEventReader.nextEvent();             emp.setamount(xmlEvent.asCharacters().getData());         }         else if(startElement.getName().getLocalPart().equals("currency")){             xmlEvent = xmlEventReader.nextEvent();             emp.setcurrency(xmlEvent.asCharacters().getData());         }            }            //if Employee end element is reached, add employee object to list            if(xmlEvent.isEndElement()){                EndElement endElement = xmlEvent.asEndElement();                if(endElement.getName().getLocalPart().equals("Product")){                    empList.add(emp);                }            }          }      } catch (FileNotFoundException | XMLStreamException e) {         e.printStackTrace();     }     return empList; }  } </code></pre>  <p>I use this java code to retrieve the values from the xml tag.When i use this code. i can able to retrieve the Third <code>&lt;row4&gt;</code> values. The remaining <code>&lt;row4&gt;</code> tag values cannot retrieve. Please help me to take the values from all the <code>&lt;row4&gt;</code> tag and <code>&lt;row7&gt;</code></p>  <p>Thanks in advance for answering this question.. </p>