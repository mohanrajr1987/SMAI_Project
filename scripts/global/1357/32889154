<p>I'm in way over my head with spirit::qi and need some help. I'm trying to parse a phrase that is of the form:</p>  <pre><code>( wheels=4 &amp; chassis=metal &amp; engine=( cylinders=8 &amp; volume=6209 ) ) </code></pre>  <p>... into a nested structure:</p>  <pre><code>class dict : public std::map&lt;std::string, boost::variant&lt;dict, std::string&gt;&gt; </code></pre>  <p>... where car_dict["wheels"] returns "4", and car_dict["engine"] returns another dict, where engine_dict["cylinders"] returns "8".</p>  <p>Here is my grammar, I'm hoping someone that has plenty of experience in this stuff can just point out where I'm going wrong.</p>  <pre><code>struct qi_car_grammar : qi::grammar&lt;std::string::const_iterator, dict()&gt; {     qi::rule&lt;std::string::const_iterator, dict()&gt; car_dict;     qi::rule&lt;std::string::const_iterator, std::string()&gt; car_key;     qi::rule&lt;std::string::const_iterator, boost::variant&lt;dict, std::string&gt;()&gt; car_variant_value;      qi_car_grammar()         : qi_car_grammar::base_type(car_dict)     {         // RULES         car_key %= *(qi::lit(' ')) &gt;&gt; *(~qi::lit('='));          car_variant_value %= car_dict | *(~qi::char_("&amp;)"));          car_dict = qi::lit('(')             &gt;&gt; car_key &gt;&gt; qi::lit('=') &gt;&gt; car_variant_value             &gt;&gt; *(qi::lit('&amp;') &gt;&gt; car_key &gt;&gt; qi::lit('=') &gt;&gt; car_variant_value)             &gt;&gt; qi::lit(')');     } } </code></pre>  <p>Any help appreciated. Before anyone suggests it, no, I don't have much control over the structure that I am parsing into.</p>