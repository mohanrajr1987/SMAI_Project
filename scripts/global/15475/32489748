<p>I'm trying to do a multi-purpose paraloop class to be able to run multiprocessor jobs easily. Basically a user must define every iteration step as def iteration(index) within a with statement as in the example herein</p>  <p>here's my implementation</p>  <pre><code>import multiprocessing as mp import types   class paraloop(object):     def __init__(self, ncores, niterations):         self.niterations = niterations         self.ncores      = min(ncores, self.niterations)      def __enter__(self, *args, **kwargs):         self.pool     = mp.Pool(processes = self.ncores)         self.iterated = 0         # create results dict         self.result = {}         return self      def __exit__(self, *args, **kwargs):         print isinstance (iteration, types.MethodType)          def ITER():             self.iterated += 1             self.result[self.iterated] = iteration(self.iterated)             if self.iterated &lt; self.niterations:                 self.pool.apply_async( ITER ).get()          print isinstance (ITER, types.MethodType)         # run iterations in parallel             [self.pool.apply_async( ITER ).get() for idx in xrange(self.ncores)]  # usage example import numpy as np ITERATIONS = 10 ARRAY = np.ones(1000000)  with paraloop(ncores=4, niterations=ITERATIONS) as p:     def iteration(index):         print 'this is an iteration %i'%index         s = 0         for n in ARRAY:             s += n         return s </code></pre>  <p>the print statement are to make sure that I have picklable function and not methods.</p>  <pre><code>&gt;&gt; False &gt;&gt; False &gt;&gt; Traceback (most recent call last): &gt;&gt;   File "paraloop.py", line 48, in &lt;module&gt; &gt;&gt;     def iteration(index): &gt;&gt;   File "paraloop.py", line 29, in __exit__ &gt;&gt;     [self.pool.apply_async( ITER ).get() for idx in xrange(self.ncores)] &gt;&gt;   File "c:\Python27\lib\multiprocessing\pool.py", line 558, in get &gt;&gt;     raise self._value &gt;&gt; cPickle.PicklingError: Can't pickle &lt;type 'function'&gt;: attribute lookup __builtin__.function failed </code></pre>  <p>Any idea why I am having this error message ?</p>