<p>I frequently use parallel processing under both python (multiprocessing library) and r (snow, etc packages). One thing I find extremely useful in python is the ability to log progress of individual instances using the unique identifier of the instance, so I can track, for instance, if the right number of instances are initiated and running properly. To do that in python, I simply use os.getpid(). </p>  <p>Is there a similar command in r? I have searched but have not found. </p>  <p>For instance, below is an example of an abstracted parallel code in r that I would like to have the instance log file include the instance ID in the log file name (line 17), along with time the process started:</p>  <pre><code>rm(list = ls()) #remove all past worksheet variables wd="D:/temp/" #location for log files setwd(wd) n_spp=30 spp_nmS=paste0("sp_",c(1:n_spp)) #sp_nm=spp_nmS[1] library(snowfall)  #stop sinks sink.reset &lt;- function(){   for(i in seq_len(sink.number())){     sink(NULL)   } }  sp_parallel_run=function(sp_nm){   file_nm=paste0(wd,sp_nm,"_log_",format(Sys.time(), "%a %b %d %H%M%S"), ".txt")   con=file(file_nm, open="wt")   sink(con)   cat('\n', 'Started on ', date(), '\n')    ptm0 &lt;- proc.time()    #start code   sp_nm   Sys.sleep(10)    #end code   ptm1=proc.time() - ptm0   jnk=as.numeric(ptm1[3])   cat('\n','It took ', jnk, "seconds to model", sp_nm)    sink.reset()   close(con) }  sfInit( parallel=TRUE, cpus=as.integer(Sys.getenv('NUMBER_OF_PROCESSORS'))) #  sfExportAll() sfLapply(x=spp_nmS, fun=sp_parallel_run)  sfRemoveAll() sfStop() </code></pre>