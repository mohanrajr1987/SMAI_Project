<p><strong>Definitions:</strong><br> <strong><em>Process(task)</em></strong>: ist a program in execution. e.g: Notepad<br> <strong><em>Thread</em></strong>: A thread is a single sequence of instructions. A process  consists of one or more threads(but only one can execute at a time).</p>  <p>According to the lecture a single core processor can run a single process(task) at a time.Only one thread can execute at a time but the Operating system  achieves Multithreading using <a href="https://en.wikipedia.org/wiki/Preemption_%28computing%29#Time_slice" rel="nofollow">time slicing</a>(thread context switch). This Thread switching  happens frequently enough that the user perceives the threads  as running at the same time (but they aren't running parallel!)and it occurs inside the one process.<br>A Process context switch is similar to thread context switch with a difference that it takes place between processes (example  between mediaplayer und notepad) instead between threads.<br></p>  <p>I'm not sure if this example is valid : taking two processes e.g: Notepad and Mediaplayer on a single core processor. One can play music and write in a Notepad at the same time although the two processes aren't runnin parallely(Process context switching or multitasking).Inside the one process e.g :Mediaplayer  one can listen to music and create playlists at the same time although the two threads aren't running parallely (Thread context switch or multithreading)</p>  <p><br> <a href="http://i.stack.imgur.com/pYcoY.png" rel="nofollow"><img src="http://i.stack.imgur.com/pYcoY.png" alt="one core"></a><br></p>  <p><em>1st Question</em> : Are my Information above right ? </p>  <p><em>2nd Question</em> : would an Execution of Threads in a multicore Process look the same inside a one core but with a difference that the threads of different processes can run parallely?.Is multithreading here the process of running multiple threads simultaneously on difference processes or the process of swiching between threads on a one core ? The same Question would be also for Multitasking. How would the  Process context switch and thread context switch in this case take place ?</p>  <p><em>3rd Question</em>: The Professor   used the Term single threaded processor. Is this Term an another name for sigle core Processor ?</p>  <p><a href="http://i.stack.imgur.com/yrWTc.png" rel="nofollow"><img src="http://i.stack.imgur.com/yrWTc.png" alt="enter image description here"></a> or <br> <a href="http://i.stack.imgur.com/skyb8.png" rel="nofollow"><img src="http://i.stack.imgur.com/skyb8.png" alt="enter image description here"></a> <em>several threads belonging to the same process can be executed on several CPU cores simultaneously</em>.Time slicing still happens on multicore systems. Say one have Process with 20 Threads running on a quadcore - the OS still has to schedule 21 Threads to run on only 4 cores.</p>  <p>A single-threaded process runs on only one single core at a time. But that doesn't mean it'll run on the same core until it exits. The OS might give him a time slice to run on Core 1 now, pause it, and give it another time slice on Core 2 later <br></p>  <p><em>note</em> : I read a lot of books and i googled enough before i decided to ask here.</p>  <p>EDITED</p>