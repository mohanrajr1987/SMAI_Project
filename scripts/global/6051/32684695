<p>I am trying to build a function <code>sumvar</code> doing the following to a list of integers <code>l</code>: substract 1 from the first element of <code>l</code>; add 1 to last element of <code>l</code>; store the result in a list <code>result</code>; repeat until <code>l</code> is equal to <code>1</code>; return the result as a list of lists.</p>  <pre class="lang-python prettyprint-override"><code>def sumvar(ls):     result = []     temp = ls[:]     while temp[0] &gt; 1:         temp[0] -= 1         temp[-1] += 1         result.append(temp)     return result </code></pre>  <p>for <code>ls = [3,3,3,3]</code>, <code>sumvar(ls) ==&gt; [[1, 3, 3, 5], [1, 3, 3, 5]]</code></p>  <p>The result I am looking for is: <code>[[2, 3, 3, 4], [1, 3, 3, 5]]</code></p>  <p>I found a workaround by replacing the <code>result.append(temp)</code> statement with <code>result += temp</code>, then slicing <code>result</code> into chunks of 4; but I still want to understand what is wrong with the function listed above (I also tried to replace the "While" loop with a "For" loop).</p>  <p>Why is the <code>append()</code> method not accumulating the results (or rather, why is it accumulating only the last result)? </p>  <p>My apologies in advance if I overlooked something obvious.</p>