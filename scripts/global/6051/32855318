<p>The code below uses the <strong>match</strong> function to check if a new set of values stored in the cells of Column C exists within a pre-existing range stored in Column A.</p>  <p>If so, then within the msgbox prompt, the row corresponding to that value is displayed.  Otherwise, error n/a is handled with an "if iserror" statement, which will append the value in question to the next empty row within Column A</p>  <p>Problem:</p>  <p>This works for Text and Numbers, but the match function doesn't seem to correctly return Dates.  A date value gets appended to the bottom of column A, regardless if pre-existing.</p>  <p>Likely error:</p>  <p>Formatting or value of date within the match function</p>  <p>To note: </p>  <p>Below is a line that is set as a comment, but creates an error for dates when uncommented - used to display which row the data is found within Column A</p>  <p>'MsgBox ("Data pre-exists in row " &amp; MatchAns)</p>  <p>Happy to provide examples.</p>  <pre><code>Option Explicit  Sub AppendNewRecords()   'example used - Column A, listed with a number of values including numbers, dates and text, 'Column C contains new raw data some matching Column A and some not, 'append new raw data not matching Column A to the end of Column A   'Declarations      Dim NeAvRow As Integer     Dim NeAvRecAdr As String   'Declarations      Dim ImportRange As Long     Dim MatchLookup As Variant     Dim MatchArray As Variant     Dim MatchAns As Variant    'Use the match function to see if record exists within the range      For ImportRange = 1 To Worksheets("sheet2").Cells(Rows.Count, "C").End(xlUp).Row      MatchLookup = Cells(ImportRange, 3)     MatchArray = ActiveSheet.Range("A:A")      MsgBox ("LookupValue " &amp; MatchLookup)      MatchAns = Application.Match(MatchLookup, MatchArray, 0)  'MsgBox ("Data pre-exists in row " &amp; MatchAns)  'Find the address of the last empty row in a column      NeAvRow = Worksheets("sheet2").Cells(Rows.Count, "A").End(xlUp).Row     NeAvRecAdr = "A" &amp; NeAvRow + 1 'Next Available row for appending  If IsError(MatchAns) Then     Range(NeAvRecAdr) = MatchLookup  End If      Next ImportRange  End Sub </code></pre>