<p>I'm trying to create a crude/basic event Subscribe/Publish system just to experiment.</p>  <p>I created a base <code>IEventListener</code> interface, then a generic <code>IEventListener&lt;T&gt; : IEventListener</code> interface on top of that, which has a function <code>OnEvent(T eventParam)</code></p>  <p>I then created a test class that implemented <code>IEventListener&lt;string&gt;</code> and <code>IEventListener&lt;int&gt;</code></p>  <p>I thought that by passing it through the following:</p>  <pre><code>Dictionary&lt;Type, List&lt;object&gt;&gt; _listenersByType = new Dictionary&lt;Type, List&lt;object&gt;&gt;();  foreach(Type interfaceType in listener.GetType().GetInterfaces()) {     if(interfaceType is IEventListener)     {         AddSubscriber(interfaceType.GetGenericTypeDefinition(), listener);     } } </code></pre>  <p>I could create a look up of Event Types to Objects to cast and publish the events to. However, when stepping through. I see it loop all the interfaces, I can see the type name is "IEventListener" but the condition is never true, and never adds my listener to the dictionary.</p>  <p><a href="http://pastebin.com/UKx6tBas" rel="nofollow" title="Full Code if you wish to see more">Pastebin of full code</a></p>