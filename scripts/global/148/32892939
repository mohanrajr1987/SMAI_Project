<p>Scenario:</p>  <ul> <li>I have a private list of type Component (where Component is an abstract class)</li> <li>This list has an arbitrary number of varying Component subclasses (where each derived type is unique in that list)</li> <li>I want to provide a method that allows the user to find a specific Component of their preference</li> </ul>  <p>My attempt:</p>  <pre><code>private ArrayList&lt;Component&gt; components = new ArrayList&lt;Component&gt;();  public &lt;T extends Component&gt; T getComponent( T type ) {     for ( Component c : components )     {         if ( c instanceof T )         {             return (T) c;         }     }     return null; } </code></pre>  <p>The compiler reports the following error on the if statement:</p>  <blockquote>   <p>Cannot perform instanceof check against type parameter T. Use its erasure Component instead since further generic type information will be erased at runtime</p> </blockquote>  <p>What is the recommended way to achieve this behavior?</p>