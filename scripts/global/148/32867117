<p>I have this code:</p>  <pre><code>TNamedObjList = class;    TNamedObj = class   private     fName: string;   protected     fOwner: TNamedObjList;   public     constructor Create(const aName: string; AOwner: TNamedObjList); overload;     property Name: string read fName;   end;// TNamedObj    TNamedObjClass = class of TNamedObj;    TNamedObjList = class(TNamedObj) // Descends from TNamedObj to allow linear hierarchies   protected     list: TObjectList&lt;TNamedObj&gt;; </code></pre>  <p>I want to be able to subclass both the item and the list. I started off trying to make the signature of the list list this:</p>  <pre><code>TNamedObjList&lt;T: TNamedObj&gt; = class(TNamedObj) </code></pre>  <p>but I could not get all the lines to compile despite moving things around and getting almost everthing correct. Am I being too demanding of generics here?</p>  <p>I'm using Xe4.</p>