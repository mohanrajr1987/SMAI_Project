<p>Using a library with an abstract class <code>A</code> and interfaces <code>I</code> and <code>J</code>, I get the following warning message when I extend / implement the class / interfaces:</p>  <blockquote>   <p>Missing type arguments for generic class J&lt;T>.</p> </blockquote>  <p>As a MWE, the classes are as follows (T and S are generic type parameters):</p>  <pre><code>public abstract class A {}  public interface I&lt;T extends A&gt; {     public &lt;S extends T&gt; void doStuff(J&lt;? super S&gt; param); }  public interface J&lt;T extends A&gt; {     public void doOtherStuff(); } </code></pre>  <p>Here are my classes:</p>  <pre><code>public class AExtended extends A {}  public class IImplemented implements I&lt;AExtended&gt; {     @Override     public void doStuff(J param) {} } </code></pre>  <p>Explicitly using the class <code>AExtended</code> as below does not properly implement doStuff() from <code>I</code>:</p>  <pre><code>public class IImplemented implements I&lt;AExtended&gt; {     @Override     public void doStuff(J&lt;AExtended&gt; param) {} } </code></pre>