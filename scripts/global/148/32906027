<p>Here's a deal: Let's say I have a class <em>with generics</em>, something like this:</p>  <pre><code>public class Item&lt;K,V&gt;{  private K key; private V value; // some constructors/getters/setters here: {...} </code></pre>  <p>To be specific let's consider this object: </p>  <pre><code>Item&lt;String, SomeEnum&gt; someItem = new Item&lt;&gt;("LolString", SomeEnum.SomeEnumValue). </code></pre>  <p>This is default serialization:</p>  <pre><code>&lt;item&gt;     &lt;key xsi:type="xs:string"&gt;LolString&lt;/key&gt;     &lt;value xsi:type="someEnum"&gt;SomeEnumValue&lt;/value&gt; &lt;/item&gt; </code></pre>  <p>How can I instead of xsi:type attribute create a tree with nodes with the names of the classes which are passed to generics, like this:</p>  <pre><code>&lt;item&gt;     &lt;key&gt;         &lt;String&gt;LolString&lt;/string&gt;     &lt;/key&gt;     &lt;value&gt;         &lt;someEnum&gt;SomeEnumValue&lt;/someEnum&gt;     &lt;/value&gt; &lt;/item&gt; </code></pre>