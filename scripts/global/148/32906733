<p>I'm trying to implement AlamofireObjectMapper (<a href="https://github.com/tristanhimmelman/AlamofireObjectMapper" rel="nofollow">https://github.com/tristanhimmelman/AlamofireObjectMapper</a>) with Alamofire 3 and latest version of ObjectMapper (<a href="https://github.com/Hearst-DD/ObjectMapper" rel="nofollow">https://github.com/Hearst-DD/ObjectMapper</a>).</p>  <p>It seems that AlamofireObjectMapper, hasn't been updated to work with Alamofire 3, so I'm trying to do it myself.</p>  <p>I've come to this piece of code and now i'm stuck.</p>  <p>It seems that the Generic Type T is not accesible inside the completion block of the response. Is a Alamofire 3 change or a Swift 2.1 change?</p>  <p>This is the error: Cannot convert value of type 'T?' to expected argument type '_?' </p>  <pre><code>  public func responseObject&lt;T: Mappable&gt;(queue: dispatch_queue_t?, keyPath: String?, completionHandler: (NSURLRequest, NSHTTPURLResponse?, T?, AnyObject?, ErrorType?) -&gt; Void) -&gt; Self {       return response(queue: queue) { (request, response, data, error) -&gt; Void in         dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0)) {             let JSONResponseSerializer = Request.JSONResponseSerializer(options: .AllowFragments)             let result = JSONResponseSerializer.serializeResponse(request, response, data, error)             let parsedObject = Mapper&lt;T&gt;().map(keyPath != nil ? result.value?[keyPath!] : result.value)              dispatch_async(queue ?? dispatch_get_main_queue()) {                 completionHandler(self.request!, self.response, parsedObject, result.value ?? response.data, result.error) // Here it shows the error: Cannot convert value of type 'T?' to expected argument type '_?'              }         }     }  } </code></pre>