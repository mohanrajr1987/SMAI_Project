<p>here's my C++ code:</p>  <p><strong>ExportAPI.cpp</strong></p>  <pre><code>extern "C" {     EXPORT_API int test(int a, int b){         return a*b;     }      EXPORT_API bool InitializeApplication( HWND hwnd)     {         CCEGLView::SetParentHwnd(hwnd);         CCApplication::sharedApplication()-&gt;run();         return true;     } } </code></pre>  <p>C#:</p>  <pre><code>public partial class MainWindow : Window     {       [DllImport("libcc.dll", CallingConvention=CallingConvention.Cdecl)]       public static extern bool InitializeApplication(IntPtr hwnd);      [DllImport("libcc.dll", CallingConvention = CallingConvention.Cdecl)]     public static extern int test(int a, int b);      public MainWindow()     {         InitializeComponent();         Loaded += MainWindow_Loaded;         Closed += MainWindow_Closed;     }      void MainWindow_Loaded(object sender, RoutedEventArgs e)     {         Window window = Window.GetWindow(this);         var wih = new WindowInteropHelper(window);        Debug.WriteLine(Multiply(3, 4).ToString()); //this runs         InitializeApplication(wih.Handle); //this gives error     } } </code></pre>  <p>so basically what i'm trying to do is to set wpf window as parent for my c++ application (which i 'packed' inside a .dll). But when i run i get "Additional information: Attempted to read or write protected memory. This is often an indication that other memory is corrupt." exception. </p>  <p>sorry for my English. Any help is greatly appreciated!</p>