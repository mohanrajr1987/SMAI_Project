<p>I have an template with explizit instanciations, which i want to export in an dll.</p>  <pre><code>template&lt;class T&gt; class Base {    virtual void do();    ... } #if defined(ExportTemplatBase)    template class __declspec(dllexport) Base&lt;double&gt;; #endif #if defined(ImportTemplatBaseLinkUnit)    extern template class __declspec(dllimport) Base&lt;double&gt;; #endif #if defined(ImportTemplatBase)    extern template class __declspec(dllimport) Base&lt;double&gt;; #endif </code></pre>  <p>A class inheriting the Base template will also be exported.</p>  <pre><code>#if defined(Export)    #define ExpImpDLL __declspec(dllexport) #else    #define ExpImpDLL __declspec(dllimport) #endif class ExpImpDLL Derived : public Base&lt;double&gt; {    virtual void do();    ... } </code></pre>  <p>Is it possible to use dllimport so the linker will find the instanciation and will link them? Or won't this work if the instanciation is in the same link unit?</p>  <p>If I only use extern the compiler is angry and says something like you want to export a Class which is derived from an not exported class?</p>  <p>If I use dllexport for all compile units in the link unit, I will instanciate some templates x times.</p>