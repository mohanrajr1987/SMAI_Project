<p>I've been trying all day how to read properly the memory of a game with my injected DLL, it works correctly but if the DLL reach other type of variable which is not "float" then it crashes. My question is, how can I detect if is float and avoid crashes. Here is my code:</p>  <pre><code>for (DWORD i = 0x1000000; i &lt; 0x2FFFFFF; i += 0x4) {     DWORD Base = *(DWORD*)(base + i);     DWORD lvl_2 = *(DWORD*)(Base + 0x8);     float* posx = static_cast&lt;float*&gt;((float*)(lvl_2 + 0x90));      Position_x = static_cast&lt;float&gt;(*posx);     if (Position_x &gt; 7.05f &amp;&amp; Position_x &lt; 7.20f) //test &gt; 7.05f &amp;&amp; test &lt; 7.20f || i == 0x2217710     {         fprintf(file, "Pointer: 0x%x  Position x: %.2f \n", i, Position_x);     } } </code></pre>  <p>This is a scanner I made to update pointer of a game knowing the structs offsets. This code works correctly if I use as condition i == 0x2217710, it returns the correct position x of the player. If I remove the condition it crashes due to the line Position_x = static_cast... is converting other type of variable in float which is illegal for some variables. How could I do this? Thanks in advance.</p>