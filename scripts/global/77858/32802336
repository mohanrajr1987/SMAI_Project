<p>I noticed that my <a href="https://www.python.org" rel="nofollow">Python</a> script using <a href="http://opencv.org" rel="nofollow">OpenCV</a> is only using and maxing one of my cpu cores. I want to use the full potential of my cpu and not only 1/4th of it. As I researched, I found out that <a href="http://opencv.org" rel="nofollow">OpenCV</a> is only using 1 core by default, and that to enable multi-threading, all I had to do was to enable <a href="http://openmp.org/wp/" rel="nofollow">OpenMP</a> (<code>WITH_OPENMP=ON</code>) when compiling the library. So this is what I did, but when running my simple script, I see that it is still only using one core, greatly limiting the performances of my app.</p>  <p>Is there something else I need to do (perhaps modify my code) to enable the use of all the four cores of my <a href="https://www.raspberrypi.org" rel="nofollow">Raspberry Pi</a>?</p>  <p>If not, maybe something went wrong with the installation process? The first time I installed <a href="http://opencv.org" rel="nofollow">OpenCV</a>, <a href="http://openmp.org/wp/" rel="nofollow">OpenMP</a> wasn't enabled. Then after recompiling <a href="http://opencv.org" rel="nofollow">OpenCV</a> with <a href="http://openmp.org/wp/" rel="nofollow">OpenMP</a>, all I did was <code>sudo make install</code> and <code>sudo ldconfig</code>. I did not uninstall the previous <a href="http://opencv.org" rel="nofollow">OpenCV</a>, guessing that installing the new <a href="http://opencv.org" rel="nofollow">OpenCV</a> with <a href="http://openmp.org/wp/" rel="nofollow">OpenMP</a> would override it.</p>  <p>Any insight is appreciated!!</p>  <p>Cheers</p>  <p><strong>EDIT:</strong></p>  <p>The goal of my script, is to capture the frames from a webcam and write them on the SD card simultanously.</p>  <pre><code>import numpy as np import cv2 import time  CV_CAP_PROP_FPS = 5 #https://github.com/Itseez/opencv/blob/e3ae36dcb3c1d523802f8642e5c3984db43637c4/modules/python/src2/defs  startTime = time.time() cap = cv2.VideoCapture(0) fourcc = cv2.VideoWriter_fourcc(*'MJPG') out = cv2.VideoWriter('output.div', fourcc, cap.get(CV_CAP_PROP_FPS), (640, 480)) nbOfFrames = 1  try:     while(cap.isOpened()):         ret, frame = cap.read()          if ret == True:             out.write(frame)             print(time.time() - startTime)             print(nbOfFrames)             nbOfFrames += 1 except KeyboardInterrupt:     cap.release()     out.release() </code></pre>