<p>I am trying to develop a program in raspberry pi (ubuntu) with C# to visualize a uEye camera. The program is based on the [TextOnBitmap_Csharp programing example] of the uEyE webpage. The streaming of the image is not working, and also when obtaining the Bitmap from the camera using <code>Camera.Memory.ToBitmap()</code> method, as in the example, the resulting bitmap is a corrupted version on the original map, with wrong size and colors.</p>  <p>Does anyone know what correction or change the program needs in order to make it work?</p>  <p><strong>UPDATE</strong> Here is the link to the full project <a href="http://sharesix.com/f/6GeP95O" rel="nofollow">http://sharesix.com/f/6GeP95O</a> , no pass nedded</p>  <p>And this is the code that is failing </p>  <pre><code>uEye.Defines.Status statusRet = 0;                 // Get last image memory Int32 s32LastMemId; Int32 s32Width; Int32 s32Height; statusRet = Camera.Memory.GetLast(out s32LastMemId); statusRet = Camera.Memory.Lock(s32LastMemId); statusRet = Camera.Memory.GetSize(s32LastMemId, out s32Width, out s32Height); Bitmap MyBitmap; statusRet = Camera.Memory.ToBitmap(s32LastMemId, out MyBitmap); statusRet = Camera.Memory.Unlock(s32LastMemId); </code></pre>  <p>The code works without problem in my Windows computer, but when running it on Mono in the raspberry pi, eventhougth it doesn't produce any error.  The resulting <em>myBitmap</em> from  <code>statusRet = Camera.Memory.ToBitmap(s32LastMemId, out MyBitmap);</code> is something like this:</p>  <pre><code>pixel[1][1]=[154 255 255 ]  pixel[1][2]=[255 164 255 ]  pixel[1][3]=[255 255 45 ] </code></pre>  <p>And so on with all the pixels. It's like each pixel only takes one of the colors(red,blue, green) and discards the others. Maybe the format it's not supported in the raspberry pi, I dont know.</p>