<p>I have the following code:</p>  <pre><code># Import packages from picamera.array import PiRGBArray from picamera import PiCamera import time import cv2  X_RESOLUTION = 640 Y_RESOLUTION = 480  # Initialize the camera and grab a reference to the raw camera capture camera = PiCamera() camera.resolution = (X_RESOLUTION, Y_RESOLUTION) camera.framerate = 10 rawCapture = PiRGBArray(camera, size = (X_RESOLUTION, Y_RESOLUTION))  # Allow camera to warmup time.sleep(0.1)  #Capture frames from the camera for frame in camera.capture_continuous(rawCapture, format="bgr", use_video_port=True):     # Grab the raw NumPy array representing the image     image = frame.array      # Show the frame     cv2.imshow("Frame", image)     key = cv2.waitKey(1) &amp; 0xFF      # Clear the stream so it is ready to receive the next frame     rawCapture.truncate(0)      # If the 'q' key was pressed, break from the loop     if(key == ord('q')):         break </code></pre>  <p>It is all fine and dandy. It captures video and displays it on my screen and it exits when I press 'q'. However, if I wanted to manipulate the frames somehow, say for example I wanted to set every pixels R value in each frame to 255 to make the image red. How would I do that?</p>  <p>My end goal is to write software that detects movement on a static background.  I understand the theory and the actual data manipulation that needs to be done to make this happen, I just cant figure out how to access each frame's pixel data and operate on it. I attempted to change some values in 'image', but it says the array is immutable and cannot be written to, only read from.</p>  <p>Thanks for your time.</p>