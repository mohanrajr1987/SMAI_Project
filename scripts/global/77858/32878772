<p>I was implementing basic blinking of LED on raspberry pi. Basically my idea is when i run a timer, the pi starts to blink and when I stop the timer, pi deactivate automatically. I have three bash scripts(activate.sh, deactivate.sh, toggle.sh).</p>  <pre><code>1.toggle.timer [Unit] Description="toggle timer Requires= activate.service After= activate.service  [Timer]  OnActiveSec=0.5 OnUnitActiveSec=500ms  [Install] WantedBy=multi-user.target 2.toggle.service # toggle.service companion to toggle.timer [Unit] Description = LED Toggle Service Unit Requires = activate.service After = activate.service  [Service] Type = oneshot ExecStart = /usr/local/bin/toggle.sh StartLimitIntervals=10s StartLimitBurst=30  [Install] WantedBy=multi-user.target 3. activate.service [Unit] Description=LED activate service StopWhenUnneeded=true   [Service] Type=oneshot RemainAfterExit= yes  ExecStart= /usr/local/bin/activate.sh ExecStop= /usr/local/bin/deactivate.sh   [Install] WantedBy=multi-user.target </code></pre>  <p>I have tested my three scripts and they all work fine. However, when I do systemctl start toggle.timer, toggle service starts and everything works good. When I stop, the toggle doesn't stop and the activate.service doesn't run my ExecStop script. I have no idea what's wrong with it.</p>