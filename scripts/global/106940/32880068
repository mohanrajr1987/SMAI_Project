<p>In a fresh Laravel build, I cannot get overridden IoC bindings to work everywhere in the application.</p>  <p>Suppose a service provider that overrides a core class, e.g. cache:</p>  <pre><code>class NewServiceProvider extends ServiceProvider {     protected $defer = true;      public function register()     {         $this-&gt;app-&gt;bind('cache', function($app) {             return new \stdClass; // demo purpose         });     }      public function provides()        {         return ['cache'];     } } </code></pre>  <p>The provider is then added at the bottom of <code>app.providers</code> config.</p>  <p>Now modify <code>routes.php</code> to the following and go check the result:</p>  <pre><code>Route::get('/', function () {     dd(app('cache')); });  // Results in an empty stdClass being shown. It works! </code></pre>  <p>However, fire up <code>artisan tinker</code> and do the same:</p>  <pre><code>$ php artisan tinker &gt;&gt;&gt; app('cache') =&gt; Illuminate\Cache\CacheManager </code></pre>  <p>Suddenly the override isn't working anymore...</p>  <p>The same behavior is encountered when processing event listeners...</p>  <p>Is this normal behavior and am I overlooking something? Or is this some kind of bug?</p>