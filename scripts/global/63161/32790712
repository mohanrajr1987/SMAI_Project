<p>It's possible extend underscore/lodash by creating mixins, but what if I would like to have a function that does something similar to existing lodash function. For example let's say I would like to add a function that compares two objects by looking into a certain property key. Function would take two objects and a property key name. Sounds easy, right? Now imagine I would like to overload existing <code>_.isEqual</code> instead of creating brand new mixin with a different name. And in that function it would first check if first two arguments are objects and third argument is a string, and if not, then it would call original <code>_.isEqual</code> function.</p>  <p>I know this is not really a good idea, but I was wondering if it's doable. I tried creating a mixin with a name <code>_.isEqual</code> that looks like this:</p>  <pre><code>function isEqual(value, other, customizer, thisArg) {     console.log('my own isEqual');      return _.isEqual.apply(thisArg || this, arguments); } </code></pre>  <p>Apparently this didn't work, because it recursively keeps calling itself. Do you guys have any ideas?</p>