<p>I'm re-creating functions from the underscore library but I'm running into a roadblock while trying to implement the <code>_.reject()</code> function. For the purposes of this question, I'll include the code I've written for three functions: <code>_.each()</code>, <code>_.filter()</code>, and <code>_.reject()</code>.</p>  <pre><code>_.each = function(collection, iterator) {   if (Array.isArray(collection)) {     for (var i = 0; i &lt; collection.length; i++) {       iterator(collection[i], i, collection);     }   } else {     for (var i in collection) {       iterator(collection[i], i, collection);     }   } };  _.filter = function(collection, test) {     var results = [];      _.each(collection, function(i) {       if (test(i)) {         results.push(i);       }     })      return results; }; </code></pre>  <p>And here's the code for the function that I'm getting a problem with, the <code>_.reject()</code> method, along with the <code>isEven()</code> function that I'm passing in as the <code>test</code> argument.</p>  <pre><code>_.reject = function(collection, test) {     return _.filter(collection, !test); };   var isEven = function(x) {     if (x % 2 === 0) return true;     return false; }; </code></pre>  <p>According to <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Expressions_and_Operators" rel="nofollow">MDN's page on Expressions and Operators</a>, the Logical NOT (!) operator <code>Returns false if its single operand can be converted to true; otherwise, returns true.</code></p>  <p>But when I run the following code <code>_.reject([1,2,3], isEven)</code> I get an error saying that <code>test is not a function</code>. Why am I unable to use the <code>!</code> operator while invoking a function (e.g., <code>_.filter([1,2,3], !isEven)</code>)?</p>