<p>I am searching for the most efficient way to Nodes with random SKSpriteNodes on given positions.</p>  <p>I have 10 Platforms, on each of them I want to have an Enemy (SKNode) that contains for 3 different SKSpriteNodes which will randomly spawn. These SKSpriteNodes all do other behaviors, thats why I can't simply change the Texture of the SKNode.</p>  <p>My way was to have 10 Enemy SKNodes, and each given a Platform, but thats only a copy &amp; paste code and doesn't look like the most efficient way.</p>  <p>Is there another way to execute the wanted result?</p>  <p>My Code:</p>  <pre><code>class GameScene: SKScene, SKPhysicsContactDelegate {  var Enemy1: SKNode! var Enemy2: SKNode! var Enemy3: SKNode! var Enemy4: SKNode! var Enemy5: SKNode! var Enemy6: SKNode! var Enemy7: SKNode! var Enemy8: SKNode! var Enemy9: SKNode! var Enemy10: SKNode!  override func didMoveToView(view: SKView) {     /* Setup your scene here */     self.physicsWorld.contactDelegate = self     self.physicsBody?.velocity = CGVectorMake(0, 0)     self.anchorPoint = CGPoint(x: 0, y: 0.20)      backgroundColor = SKColor(red: 81.0/255.0, green: 192.0/255.0, blue: 201.0/255.0, alpha: 1.0)      self.Enemy1 = SKNode()     addChild(Enemy1)      self.Enemy2 = SKNode()     addChild(Enemy2)      self.Enemy3 = SKNode()     addChild(Enemy3)      self.Enemy4 = SKNode()     addChild(Enemy4)      self.Enemy5 = SKNode()     addChild(Enemy5)      self.Enemy6 = SKNode()     addChild(Enemy6)      self.Enemy7 = SKNode()     addChild(Enemy7)      self.Enemy8 = SKNode()     addChild(Enemy8)      self.Enemy9 = SKNode()     addChild(Enemy9)      self.Enemy10 = SKNode()     addChild(Enemy10)       SpawnPlayer()     SpawnEnemy1()     SpawnEnemy2()     SpawnEnemy3()     SpawnEnemy4()     SpawnEnemy5()     SpawnEnemy6()     SpawnEnemy7()     SpawnEnemy8()     SpawnEnemy9()     SpawnEnemy10()     }   func SpawnEnemy1(){      switch (arc4random_uniform(3)){      case 0:          Picture1.filteringMode = .Nearest         Picture2.filteringMode = .Nearest          Animation1 = SKAction.animateWithTextures([Picture1,Picture2], timePerFrame: 0.5)         AnimationRepeat1 = SKAction.repeatActionForever(Animation1)          Sprite1 = SKSpriteNode (imageNamed: "Sprite1.png")         Sprite1.size = CGSize(width: 64, height: 64)         Sprite1.zPosition = 2          Sprite1.physicsBody = SKPhysicsBody(rectangleOfSize: CGSize(width: 45, height: 50))         Sprite1.physicsBody?.dynamic = true         Sprite1.physicsBody?.allowsRotation = false         Sprite1.physicsBody?.restitution = 0.0         Sprite1.physicsBody?.usesPreciseCollisionDetection = true          Sprite1.physicsBody?.categoryBitMask = EnemyCategory         Sprite1.physicsBody?.collisionBitMask = PlayerCategory | Platform1Category         Sprite1.physicsBody?.contactTestBitMask = Wall1Category | Wall2Category | PlayerCategory          Sprite1.runAction(AnimationRepeat1)      Enemy1.position = CGPoint(x: self.frame.size.width / 2, y: Platform1.position.y + 15)     Enemy1.addChild(Sprite1)      case 1:          Picture3.filteringMode = .Nearest         Picture4.filteringMode = .Nearest          Animation1 = SKAction.animateWithTextures([Picture3,Picture4], timePerFrame: 0.5)         AnimationRepeat1 = SKAction.repeatActionForever(Animation1)          Sprite2 = SKSpriteNode (imageNamed: "Sprite2.png")         Sprite2.size = CGSize(width: 64, height: 64)         Sprite2.zPosition = 2          Sprite2.physicsBody = SKPhysicsBody(rectangleOfSize: CGSize(width: 45, height: 50))         Sprite2.physicsBody?.dynamic = true         Sprite2.physicsBody?.allowsRotation = false         Sprite2.physicsBody?.restitution = 0.0         Sprite2.physicsBody?.usesPreciseCollisionDetection = true          Sprite2.physicsBody?.categoryBitMask = EnemyCategory         Sprite2.physicsBody?.collisionBitMask = PlayerCategory | Platform1Category         Sprite2.physicsBody?.contactTestBitMask = Wall1Category | Wall2Category | PlayerCategory          Sprite2.runAction(AnimationRepeat1)      Enemy1.position = CGPoint(x: self.frame.size.width / 2, y: Platform1.position.y + 15)     Enemy1.addChild(Sprite2)      case 2:          Picture5.filteringMode = .Nearest         Picture6.filteringMode = .Nearest          Animation1 = SKAction.animateWithTextures([Picture5,Picture6], timePerFrame: 0.5)         AnimationRepeat1 = SKAction.repeatActionForever(Animation1)          Sprite3 = SKSpriteNode (imageNamed: "Sprite3.png")         Sprite3.size = CGSize(width: 64, height: 64)         Sprite3.zPosition = 2          Sprite3.physicsBody = SKPhysicsBody(rectangleOfSize: CGSize(width: 45, height: 50))         Sprite3.physicsBody?.dynamic = true         Sprite3.physicsBody?.allowsRotation = false         Sprite3.physicsBody?.restitution = 0.0         Sprite3.physicsBody?.usesPreciseCollisionDetection = true          Sprite3.physicsBody?.categoryBitMask = EnemyCategory         Sprite3.physicsBody?.collisionBitMask = PlayerCategory | Platform1Category         Sprite3.physicsBody?.contactTestBitMask = Wall1Category | Wall2Category | PlayerCategory          Sprite3.runAction(AnimationRepeat1)      Enemy1.position = CGPoint(x: self.frame.size.width / 2, y: Platform1.position.y + 15)     Enemy1.addChild(Sprite3)      default:         return     }  }  //Same code for all the other Enemy Nodes for other platforms. </code></pre>