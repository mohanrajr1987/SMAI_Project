<p>We have a simple game that has a main <code>GameScene</code> of <code>SKScene</code> type. The <code>GameScene</code> creates a model object called <code>GameEngineModel</code>.  </p>  <p>It also stores a reference as delegate for communication. For example, if the score is changed in the <code>GameEngineModel</code> it calls a delegate method on the Scene to update the HUD.  </p>  <p>I would like all the game logic, including creation of sprites on the screen to be completed in the <code>GameEngineModel</code>. Previously we called this method to spawn some sprites on the screen.  </p>  <pre><code>func spawnGameIconsLoop() {     // Run the main actions on loop     runAction(SKAction.repeatActionForever(         SKAction.sequence([             SKAction.runBlock(addCircleIcon),             SKAction.waitForDuration(spawnRate)             ])         )) } </code></pre>  <p>We would like to move this logic to the <code>GameEngineModel</code>, the issue is that this is of no class so runAction is not available here.   </p>  <p>How could we control the game logic outside of the scene here. As a note, the <code>spawnRate</code> would change from time to time, so if this <code>SKAction</code> is created with a an initial <code>waitForDuration</code>, how can we amend that once the level changes and the spawnRate changes? </p>