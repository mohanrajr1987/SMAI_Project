<p>I'm working with collision detection with SpriteKit and Swift. I have a SKScene that responds to a collision with the didBeginContact function:</p>  <pre><code>func didBeginContact(contact: SKPhysicsContact) {             if (contact.bodyA.categoryBitMask == ColliderType.Food &amp;&amp; contact.bodyB.categoryBitMask == ColliderType.Head) {         placeFoodInRandomGridLocation()     } } func placeFoodInRandomGridLocation() {     let randomX = arc4random_uniform(UInt32(myGrid.columnCount))     let randomY = arc4random_uniform(UInt32(myGrid.rowCount))     foodSpriteHolder.position = CGPoint(x: colLines[Int(randomX)], y: rowLines[Int(randomY)]) } </code></pre>  <p>The problem is that I can easily adjust the position of the foodSpriteHolder before this didBeginContact function fires. It simply will not move the foodSpriteHolder when the placeFoodInRandomGridLocation is called.</p>  <p>It seems like a scope issue. I'm just not sure how to isolate why the position won't update. I can even make the foodSpriteHolder visibility hidden in this flow...So, I know i can access it. </p>  <p>For reference here is how the physics body is setup for the Food class item that is within the foodSpriteHolder:</p>  <pre><code>    self.physicsBody = SKPhysicsBody(rectangleOfSize: self.size, center: CGPointMake(reducedSize/2, reducedSize/2))     self.physicsBody?.affectedByGravity = false     self.physicsBody?.categoryBitMask = ColliderType.Food </code></pre>  <p>Lastly the placeFoodInRandomGridLocation function definitely gets called...The position just won't update.</p>  <p>Thanks for any ideas, Josh</p>