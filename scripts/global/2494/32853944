<p>I need to call an Oracle Stored Procedure using EclipseLink (2.3.1.v20111018-r10243). The procedure have IN and OUT parameters, and I need to read the OUT parameter.</p>  <p>I found <a href="https://wiki.eclipse.org/EclipseLink/Examples/JPA/nonJDBCArgsToStoredProcedures" rel="nofollow">this example</a> and my code is pretty much a copy of the example, but instead of receiving a List from the API, it is throwing an Exception because the value is an Integer of value "1", and I can't figure out why.</p>  <p>The procedure is being called properly, the IN parameter is ok, but the code fails to read the response which "should" be a List according to the example.</p>  <pre><code>import java.util.ArrayList; import java.util.List;  import javax.ejb.Stateless; import javax.persistence.EntityManager; import javax.persistence.PersistenceContext;  import org.eclipse.persistence.jpa.JpaEntityManager; import org.eclipse.persistence.platform.database.jdbc.JDBCTypes; import org.eclipse.persistence.platform.database.oracle.plsql.OraclePLSQLTypes; import org.eclipse.persistence.platform.database.oracle.plsql.PLSQLStoredProcedureCall; import org.eclipse.persistence.queries.DataModifyQuery; import org.eclipse.persistence.sessions.DatabaseRecord; import org.eclipse.persistence.sessions.Session;  public class ProcedureCall {      @PersistenceContext     private EntityManager em;      public String execute(Long parameter) throws Exception {          PLSQLStoredProcedureCall call = new PLSQLStoredProcedureCall();          call.setProcedureName("two_arg_in_out");         call.addNamedOutputArgument("X", OraclePLSQLTypes.BinaryInteger);         call.addNamedArgument("Y", JDBCTypes.VARCHAR_TYPE, 40);          DataModifyQuery query = new DataModifyQuery();         query.setCall(call);         query.addArgument("Y");          List queryArgs = new ArrayList();         queryArgs.add(parameter);          Session session = ((JpaEntityManager) em.getDelegate()).getActiveSession();         Object obj = session.executeQuery(query, queryArgs);          // The system prints "Return: 1"         System.out.println("Return: " + obj);          List results = (List) obj; // Here is where exception happens          DatabaseRecord record = (DatabaseRecord) results.get(0);         String y = (String) record.get("X");          return "done";     }  } </code></pre>  <p>The system throws the following exception:</p>  <pre><code>Caused by: java.lang.ClassCastException: java.lang.Integer cannot be cast to java.util.List </code></pre>  <p>This is the procedure from the example I am using:</p>  <pre><code>PROCEDURE two_arg_in_out(x OUT BINARY_INTEGER, y IN VARCHAR) AS BEGIN  x := 33; END; </code></pre>