<p>I am unable to figure out the way to get a smooth transition while plotting points in D3. I have a script which plots the world map. I am listening to a server which is giving me latitudes and longitudes of events. I want to draw the event on the screen such that the circle increase in radius from 0 to 10 in 1 second. Because I am listening to the server I can have more than one datapoint in 1 second. How should I make plot another point while the previous one is still in transition?</p>  <p>This is the code that I came up with but I am not able to figure out a way that I can add d3 type transition to the "circle" as that is only possible when you use d3.data([coords]).enter(). Using d3 here seems to me overkill since I can directly change the attributes. </p>  <pre><code>&lt;!DOCTYPE html&gt; &lt;html&gt;   &lt;head&gt;     &lt;meta charset="utf-8"&gt;     &lt;script src="http://d3js.org/d3.v3.min.js"&gt;&lt;/script&gt;     &lt;script type="text/javascript" src="//code.jquery.com/jquery-1.8.0.min.js"&gt;&lt;/script&gt;     &lt;script type="text/javascript"&gt;         $(document).ready(                 function() {                     sse = new EventSource('/my_event_source');                     sse.onmessage = function(message) {                         console.log('A message has arrived!');                         var data = message.data.split(',');                          plot(data);                      }                 })     &lt;/script&gt;        &lt;script type ="text/javascript"&gt;       function draw(geo_data){         "use strict";         var margin = 75,          width = 1920 -margin,          height = 1080 -margin;         var svg = d3.select('body')                     .append("svg")                     .attr('class',"main")                     .attr('width', width+margin)                     .attr('height', height+margin)                     .append('g')                     .attr('class','map');  // make map here // make a place for circle here --to be selected later       svg.append("circle")           .attr("r", 10);        }        function plot(data){         "use strict";         var margin = 75,          width = 1920 -margin,          height = 1080 -margin;           var spot = d3.select('svg.main');        // convrt the long, lat to pixels ()x,y        var projection = d3.geo.mercator()                            .scale(220)                            .translate([width/2, height/1.5]);            var coords = projection([+data[1], +data[0]]);         debugger;         spot.select("circle")               .attr("cx", coords[0])               .attr('cy', coords[1]);       }      &lt;/script&gt;   &lt;/head&gt;    &lt;body&gt;     &lt;script type = "text/javascript"&gt;     /*Use d3 to load the GeoJSON file*/     d3.json("/static/world_countries.json", draw);     &lt;/script&gt;   &lt;/body&gt;  &lt;/html&gt; </code></pre>