<p>Following the guidance on adding a market to a line chart from <a href="https://github.com/novus/nvd3/issues/321" rel="nofollow">here</a>. I ran into an issue where if you disable a particular line that has a marker, the next line becomes a marker. I want to prevent this from happening. The series number <code>g.nv-series-0</code> of each line changes when adding or removing a particular line and that is why this occurs. Is there a work around to prevent this from happening?</p>  <p>In the examples below. If you click the orange "sine wave" circle on top of the plot the green line becomes dotted, and that is what I want to prevent from happening.</p>  <p>Here's the full example and <a href="http://jsfiddle.net/0m8jzetx/" rel="nofollow">jsfiddle</a>:</p>  <pre><code>&lt;html&gt; &lt;head&gt; &lt;script src="https://cdnjs.cloudflare.com/ajax/libs/d3/2.10.0/d3.v2.js"&gt;&lt;/script&gt; &lt;script src="https://cdnjs.cloudflare.com/ajax/libs/nvd3/1.8.1/nv.d3.min.js"&gt;&lt;/script&gt; &lt;link href="https://cdnjs.cloudflare.com/ajax/libs/nvd3/1.8.1/nv.d3.css" rel="stylesheet"&gt; &lt;style&gt; #chart svg {   height: 400px; } #chart g.nv-scatter g.nv-series-0 path.nv-point {     fill-opacity: 1;     stroke-opacity: 1; } #chart g.nv-series-0 path.nv-line {     stroke-opacity: 0; }  &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div id="chart"&gt;   &lt;svg&gt;&lt;/svg&gt; &lt;/div&gt; &lt;script type="text/javascript"&gt; data = function() {   var sin = [],       cos = [];    for (var i = 0; i &lt; 100; i++) {     sin.push({x: i, y: Math.sin(i/10), shape: 'square'});     cos.push({x: i, y: .5 * Math.cos(i/10)});   }    return [     {       values: sin,       key: 'Sine Wave',       color: '#ff7f0e'     },     {       values: cos,       key: 'Cosine Wave',       color: '#2ca02c'     }   ]; } nv.addGraph(function() {   var chart = nv.models.lineChart();    chart.xAxis       .axisLabel('Time (ms)')       .tickFormat(d3.format(',r'));    chart.yAxis       .axisLabel('Voltage (v)')       .tickFormat(d3.format('.02f'));    d3.select('#chart svg')       .datum(data())     .transition().duration(500)       .call(chart);    nv.utils.windowResize(chart.update);    return chart; }); &lt;/script&gt; &lt;/body&gt; &lt;/html&gt; </code></pre>