<p>Edit: After Cyril correctly solved the problem I noticed that simply putting the functions that generate my axes underneath the functions used to generate the labels solves the problem.</p>  <p>I've almost finished reading the O'Reilly book's tutorials on D3.js and made the scatter graph on the penultimate page, but when adding the following code to generate my X axis more than half of my labels disappear:</p>  <pre><code>// Define X Axis var xAxis = d3.svg.axis()     .scale(xScale)     .orient('bottom'); //  Generate our axis svg.append('g')     .call(xAxis); </code></pre>  <p>The odd thing is that of the labels that don't disappear the 3 that stay are the bottom 3 pairs from my dataset ([85,21], [220,88], [750,150]):</p>  <pre><code>var myData = [                 [5, 20],                 ...,                 ...,                 [85, 21],                 [220, 88],                 [750,150]             ]; </code></pre>  <p>Here is an image of what's happening, prior to adding the axis at the top each of these points had red text labels:</p>  <p><a href="http://i.stack.imgur.com/CWWZ0.png" rel="nofollow"><img src="http://i.stack.imgur.com/CWWZ0.png" alt="scatter plot"></a></p>  <p>Below is the rest of the code that generates my scatter graph, it follows the methods explained in the book almost exactly and I can't pinpoint where the error is coming from.</p>  <pre><code>// ================= // = SCALED SCATTER GRAPH // ================= var p = 30; // Padding var w = 500 + p; // Width var h = 500 + p; // Height  // SVG Canvas and point selector var svg = d3.select('body')     .append('svg')     .attr('width',w)     .attr('height',h);  // Scales take an input value from the input domain and return // a scaled value that corresponds to the output range // X Scale var xScale = d3.scale.linear()     .domain([0, d3.max(myData, function(d){         return d[0];     })])     .range([p, w - (p + p)]); // With padding. Doubled so labels aren't cut off // Y Scale var yScale = d3.scale.linear()     .domain([0, d3.max(myData, function(d){         return d[1];     })])     .range([h - p, p]); // With padding  // Radial scale var rScale = d3.scale.linear()     .domain([0, d3.max(myData, function(d){ return d[1];})])     .range([2,5]);  // Define X Axis var xAxis = d3.svg.axis()     .scale(xScale)     .orient('bottom'); //  Generate our axis svg.append('g')     .call(xAxis);  // Plot scaled points svg.selectAll('circle')     .data(myData)     .enter()     .append('circle')     .attr('cx', function(d){         return xScale(d[0]);     })     .attr('cy', function(d){         return yScale(d[1]);     })     .attr('r', function(d){         return rScale(d[1]);     });  // Plot all labels svg.selectAll('text')     .data(myData)     .enter()     .append('text')     .text(function(d){         return d;     })     .attr('x', function(d){         return xScale(d[0]);     })     .attr('y', function(d){         return yScale(d[1]);     })     .style('fill', 'red')     .style('font-size',12); </code></pre>  <p>js-fiddle: <a href="https://jsfiddle.net/z30cqeoo/" rel="nofollow">https://jsfiddle.net/z30cqeoo/</a></p>