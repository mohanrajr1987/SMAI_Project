<p>I'm trying to implement a responsive d3 bubble chart that updates its container svg (and the nodes it contains) while the page is being resized (kinda like this shows: <a href="http://jsfiddle.net/63K4n/" rel="nofollow">http://jsfiddle.net/63K4n/</a>)</p>  <p>But instead of just shrinking the nodes down to a size that fits the screen, I want to increase the height of the container as the width is being decreased to create the additional space necessary for the nodes to fall into without being shrunk.</p>  <p>I played with updating the last few lines of the fiddle to this...</p>  <pre><code>chart.attr("width", targetWidth); chart.attr("height", Math.round(921600/targetWidth)); //was targetWidth/aspectRatio </code></pre>  <p>(where 921,600 was simply the diameter [960] squared - i.e. the total required space) </p>  <p>But of course although this increases the height of the container correctly, the nodes don't exploit the new space - that's what I'm struggling to figure out - how to change the shape of the bubble chart to fit the new space (if that's even possible!)</p>  <p>If not possible with a standard bubble chart, I'd also be happy to try a static force layout (e.g. <a href="http://bl.ocks.org/mbostock/1667139" rel="nofollow">http://bl.ocks.org/mbostock/1667139</a>) combined with a resizable example like <a href="http://bl.ocks.org/mbostock/3355967" rel="nofollow">http://bl.ocks.org/mbostock/3355967</a>.  Again the problem is finding a way to reshape the nodes to within the confines of their new container, so I'm guessing I'd have to adapt collision detection to account for the svg container boundaries.  And with all that going on I'm pretty sure there'd be a decent lag on a mobile device while you're waiting for the force layout to tick its way to something I can update the page with.</p>  <p>Sorry if that's all a little vague, but I'm really just hoping someone has a general suggestion on an appropriate way to tackle the problem.  Huge thanks for any thoughts at all!</p>