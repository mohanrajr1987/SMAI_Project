<p>I'm trying to integrate Dagger 2 as my dependency injection framework with Vaadin.  However it looks like there is a possible conflict with the Guava version included with Vaadin and Dagger's Guava dependency.  I've narrowed down the build command to <code>vaadin:compile</code> in IntelliJ which results in the following:</p>  <pre><code>[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.0:compile (default-compile) on project vaadin: Compilation failure [ERROR] Failure executing javac, but could not parse the error: [ERROR]  [ERROR]  [ERROR] An annotation processor threw an uncaught exception. [ERROR] Consult the following stack trace for details. [ERROR] java.lang.NoSuchMethodError: com.google.common.collect.Multimaps.filterKeys(Lcom/google/common/collect/SetMultimap;Lcom/google/common/base/Predicate;)Lcom/google/common/collect/SetMultimap; </code></pre>  <p>I've tried changing the scope of Dagger compiler in my build path to <code>provided</code> but still encounters the issue.  </p>  <p>Is there a way to resolve this compile time issue between Vaadin and Dagger?</p>