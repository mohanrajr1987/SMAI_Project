<p>I am new to spring. My class diagram is like this</p>  <pre><code>public abstract class Cache{     refreshCache() {       clearCache();       createCache();     }     clearCache();     createCache();     getName(); }  @Component @Scope("singleton") @Qualifier("category") class Category extends Cache implements ICategory{}  @Component @Scope("singleton") @Qualifier("attr") class Attr extends Cache implements IAttr{}  @Component @Scope("singleton") @Qualifier("country") class Country extends Cache implements ICountry{} </code></pre>  <p>By default the scope of spring beans are singleton. So I want to create the cache management service. With reflection I will get all the classes which extends Cache class but the all the cache are with singleton scope if I will instantiate them with "<code>new</code>" I am getting new object but other will get different object and other class are inject it like following.</p>  <pre><code>Class A {   @inject   Country c }  Class B {   @inject   Attr attr } </code></pre>  <p>Every injection is using the same cache so if I create it with "<code>new</code>" refresh will not reflect to them. </p>  <p>P.S. - The main goal is to create a class which will know all the classes extending the Cache class and given a name (<code>getName()</code> Function from Cache class) it will refresh the respective cache. If spring have this functionality that will be good enough.</p>