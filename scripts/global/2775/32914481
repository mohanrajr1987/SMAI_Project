<p>I'm working on an angular app that consumes a public API. I can't seem to pass the service object into the controller. The error is </p>  <pre><code>TypeError: Cannot read property 'searchRole' of undefined </code></pre>  <p>on this line: </p>  <pre><code>var model = govtracksvc.searchRole(); </code></pre>  <p>When I step through in the debugger, it hits the service file first. govtrack &amp; govtracksvc are both created, and govtrack is injected. Then the service object dies at the end of the file, because when it invokes the controller file, the service variables are undefined. I am missing the link that keeps the service object alive when the app steps into the controller file. Any help would be tremendous.</p>  <h1>rep.module.js</h1>  <pre><code>(function () {     var angular = require('angular');  //browserify bundling with NPM     angular.module('RepresentativeApp', []);     require('./rep.service.js');     require('./Rep.js');  })(); </code></pre>  <h1>rep.service.js</h1>  <pre><code>var govtracksvc = (function () {     angular         .module('RepresentativeApp')         .factory('govtracksvc', govtracksvc);      var govtrack = require('govtrack-node');      govtracksvc.$inject = ['govtrack'];      function govtracksvc(govtrack) {         var service = { searchRole: searchRole };         return service;         function searchRole(obj) { //do stuff }     } })(); </code></pre>  <h1>Rep.js</h1>  <pre><code>var Rep = (function () {     angular         .module('RepresentativeApp')         .controller('Rep', [Rep]);      Rep.$inject = ['govtracksvc'];      function Rep(govtracksvc) {         var model = govtracksvc.searchRole();         return model;     } })(); </code></pre>  <h1>Update</h1>  <p>I haven't gotten to the bottom of this yet, but I believe this has to do with how browserify bundles the module. I think the IIFEs are part of the issue.</p>