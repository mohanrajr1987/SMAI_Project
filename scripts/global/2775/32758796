<p>Im trying to filter the results of my search application with a custom filter. Now, the angular documentation states that you should avoid defining stateful filters. My workaround was building a service which handles the filter inputs and custom filter which takes these inputs as an argument object.</p>  <p>This concept worked fine while I had an implementation which did this just in the service with a custom filtering function.  Now I moved it over to a filter declaration, like this:</p>  <h2>referenceFilter.filter.js</h2>  <pre><code>(function () { 'use strict';  angular.module('searchApp.search')     .filter('referenceFilter', function () {         return function (references, filterModel) {              var filteredReferences = [];             /* filtering */             return filteredReferences;         }     }); })(); </code></pre>  <p>Now when I am trying to inject the filter into my service I get the "Unknown Provider"-Error stating that it cant find a Provider for my referenceFilter. Although I think its injected properly and defined before the service.</p>  <h2>referenceFilter.service.js</h2>  <pre><code>(function () {     'use strict';      angular.module('searchApp.search')         .factory('referenceFilterService', ['referenceFilter', referenceFilterService]);      function referenceFilterService(referenceFilter) { // 'reference' | 'referenceFilter' doesnt make a difference               ....               /* filter call */               function getFilteredReferences(references) {                     return referenceFilter(references, filterModel);               }               ....     }  })(); </code></pre>  <h2>Including in index.html</h2>  <pre><code>&lt;script src="search/search.module.js"&gt;&lt;/script&gt; &lt;script src="search/filter/referenceFilter.filter.js"&gt;&lt;/script&gt; &lt;script src="search/filter/referenceFilter.service.js"&gt;&lt;/script&gt; </code></pre>  <p>What am I doing wrong?</p>