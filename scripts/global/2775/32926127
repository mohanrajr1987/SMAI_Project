<p>I override class <code>HttpErrorHandler</code> on Injection Dependency concept and try to handles routing page. I don't need the <code>Action not found</code> page presented when routing page of URL incorrect,but it must to presented by specify page route on <code>view.html.error.notFoundPage()</code> of <code>HttpPageErrorHandler</code>. Figure such as below when try to access URL didn't included with parameter </p>  <p><code>http://localhost:9000/adminlanding</code></p>  <p>Routing page assigned as </p>  <p><code>GET /adminlanding/:userId/:ip/:dateFound/           controllers.DashboardAdmin.landing(userId: String, ip : String, dateFound : String)</code></p>  <p>HttpPageErrorHandler handles <code>Action not found</code> </p>  <pre><code>class HttpPageErrorHandler @Inject() (router: Router) extends HttpErrorHandler {    private def errorHandler = Play.maybeApplication.fold[HttpErrorHandler](DefaultHttpErrorHandler)(_.errorHandler)     def onClientError(request: RequestHeader, statusCode: Int, message: String) : Future[Result]= {         statusCode match {          case Status.NOT_FOUND =&gt;                  Future.successful(NotFound(views.html.errors.notFoundPage(request)))          case clientError if statusCode &gt;= 400 &amp;&amp; statusCode &lt; 500 =&gt;                 Future.successful(Forbidden(views.html.errors.notFoundPage(request)))        }    }      def onServerError(request: RequestHeader, exception: Throwable): Future[Result] = {      errorHandler.onServerError(request, exception)    }  }  </code></pre>  <p>Application.conf declares configuration to call injection class </p>  <p><code>play.http.HttpErrorHandler = RequestHandler</code></p>  <p>After run command line with <code>sbt run</code> stills show <code>Action not found</code> page.</p>