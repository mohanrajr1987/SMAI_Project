<p>Many logging frameworks provide class-specific loggers:</p>  <p>NLog:  <code>Logger.GetLogger(typeof(MyClass).Name)</code></p>  <p>Serilog:  <code>Log.Logger.ForContext&lt;MyClass&gt;()</code></p>  <p>To be able to inject these class specific loggers, one would do something like this in Ninject:</p>  <pre><code>        Bind&lt;ILog&gt;().ToMethod(context =&gt;         {             var typeForLogger = context.Request.Target != null ? context.Request.Target.Member.DeclaringType : context.Request.Service;             return context.Kernel.Get&lt;ILoggerFactory&gt;().GetLogger(typeForLogger);         }); </code></pre>  <p>where <code>context.Request.Target</code> provides the type that will receive the injection.</p>  <p>I can't find any way to do the same using LightInject; is this feature not supported (yet)?</p>