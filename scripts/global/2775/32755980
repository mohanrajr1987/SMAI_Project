<p>I have an generic implementation of my entity reader and writer. I want to create an registration of these to the same instance. But this fails with the following exception:</p>  <blockquote>   <p>An exception of type 'System.InvalidOperationException' occurred in   mscorlib.dll but was not handled in user code</p> </blockquote>  <pre><code>var registration = Lifestyle.Scoped.CreateRegistration(typeof (EntityFrameworkRepository&lt;&gt;), container); container.AddRegistration(typeof (IUnitOfWork), registration); container.AddRegistration(typeof (IEntityWriter&lt;&gt;), registration); container.AddRegistration(typeof (IEntityReader&lt;&gt;), registration); </code></pre>  <p>My implementation type signature is as follows:</p>  <pre><code>internal sealed class EntityFrameworkRepository&lt;TEntity&gt; : IEntityWriter&lt;TEntity&gt;, IEntityReader&lt;TEntity&gt;, IUnitOfWork where TEntity : Entity  {      // ... } </code></pre>  <p>Is generics not supported in the <code>CreateRegistation(..)</code> or should I just wire them up like (probably will throw an lifestyle warning)?</p>  <pre><code>container.Register(typeof (IUnitOfWork), typeof (EntityFrameworkRepository&lt;&gt;), Lifestyle.Scoped); container.Register(typeof (IEntityWriter&lt;&gt;), typeof (EntityFrameworkRepository&lt;&gt;), Lifestyle.Scoped); container.Register(typeof (IEntityReader&lt;&gt;), typeof (EntityFrameworkRepository&lt;&gt;), Lifestyle.Scoped); </code></pre>