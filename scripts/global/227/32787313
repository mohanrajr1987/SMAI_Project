<p>I have a class :</p>  <pre><code>class ImgObject(models.Model):  img_file = models.CharField(max_length=128,unique=False)  img_id = models.IntegerField(default=0)  img_tags = models.CharField(max_length=320,unique=False)  img_title = models.CharField(max_length=128,unique=False) </code></pre>  <p>Each img_title will have corressponding img_tags. There might be multiple rows of img_title with different set of img_tag. For example,</p>  <pre><code>img_title    img_tags --------------------- buildingA    yellow buildingB    seaside buildingA    apartment,urban buildingC    suburban buildingA    yellow </code></pre>  <p>I want my query to return the img_tags of each img_title along with the count of each tag. For example,</p>  <pre><code>SELECT DISTINCT img_title,img_tags, COUNT(img_tags) FROM ImgObject </code></pre>  <p>should return</p>  <pre><code>buildingA : yellow(2),apartment(1),urban(1) buildingB : seaside buildingC : suburban </code></pre>  <p>I understand that there should be some iterative process going on, but I am not able to make it into Django query. Here is what I tried,</p>  <pre><code>for i in ImgObject.objects.values('img_title'):     x = ImgObject.objects.filter('img_title').values('img_tags')     y = ImgObject.objects.filter('img_title').values('img_tags').distinct().count()  print x,":",y </code></pre>  <p>But this throws a "ValueError: too many values to unpack" error.</p>  <p>Help me write a code to achieve this output!</p>