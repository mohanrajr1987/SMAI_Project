<p>Theano newbie here. I am doing some experiments in order to generate variable length sequences. I started with the simplest thing coming to my mind: emulating range(). Here is the simple code I wrote:</p>  <pre><code>from theano import scan from theano import function from theano import tensor as  T  X = T.iscalar('X') STEP = T.iscalar('STEP') MAX_LENGTH = 1024  # or any othe very large value  def fstep(i, x, t):     n = i * t     return n, until(n &gt;= x)  t_fwd_range, _ = scan(     fn=fstep,     sequences=T.arange(MAX_LENGTH),     non_sequences=[X, STEP] )  getRange = function(     inputs=[X, Param(STEP, 1, 'step')],     outputs=t_fwd_range )  getRange(x, step) print list(f) assert list(f[:-1]) == list(range(0, x, step)) </code></pre>  <p>So I had to use <code>MAX_LENGTH</code> as the length of a range to be used as input of the <code>fstep</code> theano <code>scan</code>. So, my main question is this: is there any way to use a <code>scan</code> without an input sequence? And, as I suppose the answer is <em>no</em>, the next question is: is this the correct (most efficient, ecc) way to do what I am traying to do?</p>