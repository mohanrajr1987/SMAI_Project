<p>Could someone explain what is the cause of the severe slowdown when iterating bash arrays backwards?</p>  <p>Example:</p>  <p><code>time bash -c 'arr=();for i in {1..100000}; do arr+=( $i );done; echo "Straight"; i=0;while (( $i &lt; 100000 )); do current_element=${arr[$i]}; ((i++));done'</code></p>  <pre><code>Straight  real    0m0.270s user    0m0.269s sys 0m0.002s </code></pre>  <p><code>time bash -c 'arr=();for i in {1..100000}; do arr+=( $i );done; echo "Reverse"; i=99999;while (( $i &gt; 0 )); do current_element=${arr[$i]}; ((i--));done'</code></p>  <pre><code>Reverse  real    0m25.569s user    0m25.589s sys 0m0.008s </code></pre>  <p>Also </p>  <pre><code>${arr[i-1]} + ${arr[i]}  </code></pre>  <p>is much faster than </p>  <pre><code>${arr[i]} + ${arr[i-1]} </code></pre>  <p>Thanks for your time.</p>  <p>Edit:</p>  <blockquote>   <p>bash --version</p>      <p>GNU bash, version 4.3.42(1)-release (x86_64-redhat-linux-gnu)</p> </blockquote>