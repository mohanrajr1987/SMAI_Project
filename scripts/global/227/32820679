<p>I'm moving my first steps with <code>theano</code> and I cannot figure out how to solve this problem which could be actually very easy. </p>  <p>I have a <code>3 * 4 * 2</code> tensor, like the following:</p>  <pre><code>[1 1] | [2 2] | [3 3] [1 1] | [2 2] | [3 3] [0 0] | [2 2] | [3 3] [9 9] | [0 0] | [3 3] </code></pre>  <p>So I have <code>N=3</code> sequences, each of them of length <code>L=4</code> with their elements that are vectors of dimension <code>d=2</code>. Actually, the sequences can be of different length but I could think of padding them with <code>[0 0]</code> vectors, as shown above. </p>  <p>What I want to do is, first scan through the first axis of the tensor and sum up all the vector in the lists <strong>up to the the first [0 0] vector</strong> -- that's why I added the [9 9] at the end of the first tensor slice, in order to check the sum exit condition [1]. I should end up in <code>[[2 2], [6 6], [12 12]]</code>. I tried in many ways to solve this problem which seems to me <em>just</em> a nested looping problem... but always got some weird errors[2].</p>  <p>Thanks,<br> Giulio  </p>  <p>--<br> [1]: the actual problem is the training of a recurrent neural network for NLP purposes, with <code>N</code> the dimension of the batch, <code>L</code> the max length of a sentence in the batch and <code>d</code> the dimension of the representation of each word. I omitted the problem so that I could focus on the simplest coding aspect.<br> [2] I omit the history of my failures, maybe I could add them later.</p>