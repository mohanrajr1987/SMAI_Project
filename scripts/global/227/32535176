<p>I am trying to learn how iterators, generators and decorators works in python based on the tutorials in <a href="http://pymbook.readthedocs.org/en/latest/igd.html" rel="nofollow">this</a> website.</p>  <p>In the first example, he/she demonstrate a simple example as below:</p>  <pre><code>class Count:     def __init__(self, low, high):         self.low = low         self.high = high      def __iter__(self):         return self      def __next__(self):         if self.current &gt; self.high:             raise StopIteration         else:             self.current +=1             return self.current -1 </code></pre>  <p>The problem is, I can't iterate over objects of this class:</p>  <pre><code>&gt;&gt;&gt; ================================ RESTART ================================ &gt;&gt;&gt;  &gt;&gt;&gt; c = Count(1, 10) &gt;&gt;&gt; for i in c:     print i    Traceback (most recent call last):   File "&lt;pyshell#3&gt;", line 1, in &lt;module&gt;     for i in c: TypeError: instance has no next() method &gt;&gt;&gt;  </code></pre>  <p>What's wrong?</p>