<p>Simple MEAN stack prototype, using yo and meanjs and its crud modules.  There are four types/collections of articles.  </p>  <p>Step 1) One view for "user;" if it's that user's personal page (auth, they're logged-in, this user for this page = logged-in user), they can edit/delete from the four collections of articles they have saved to their page (so far, so good, no problem here).</p>  <p>Article in Mongodb:  {</p>  <p>Title: xx,</p>  <p>Date: xx</p>  <p>Source: where the article was found.  this will be either 1) some news database or 2) a saved article from another user's profile page (see step 2 for applicable functionality)</p>  <p>User: the user that chose to save the article to his/her page - used to populate the correct page.  this means that duplicate articles are saved multiple times, once for each user that has saved a copy (see step 2 for applicable functionality).  not worried about solvable redundancy for this stage of prototyping</p>  <p>s3 reference: ?? want to use cloudfront so that each time a user saves a new article, it gets saved to s3 as well, and the mongodb has an automatically generated reference to the link in s3.  A secondary question that I would love if you can answer as well.</p>  <p>}</p>  <p>Step 2) If viewing the "user" view for an external user, it will still display all of the four types of articles that the external user has saved (think of it as viewing someone else's profile page, in a very simplified way).  Obviously, when viewing someone else's user page, with their 4 types of article collections, you can't delete or edit someone else's articles.  </p>  <p>You can, however, (ideally - this is where I'm having trouble) save one of this external user's articles to your own page.  When executing/creating this save method - the new article in Mongodb (need to create a new one, NOT save/update over the old one, since each user has their own set of collections (and maybe there is an entirely better way to think about each user having their own set/associated you can show me)), we need to be specific about the "source" and "user" fields:</p>  <p>New Article Source: the external user's profile page where the logged-in user found the article (same value as "user" for the article's existing/old copy)...not the logged-in user, but the user/owner of the profile page being viewed<br> New Article User: the logged-in user who is actively saving from another user's page, (but this will take place on another user's profile page - and I need it to NOT be the external user, that goes in source).  this is the user who saved the article after viewing it someone else's page, NOT the user that had saved it to their page originally...I'm simply not sure how to refer to each for the above with regards to scope, this., etc.</p>  <p>My inexperience with CRUD Restful methods makes it hard for me to see how to accomplish the above for the new saved article "source" and "user" fields in mongodb.  Source = old user and owner of the profile page where the article was found, user = the logged-in user that just now saved it, after viewing it on someone else's page.<br> Would also be wonderful if you can solve the issue of automatically generating the s3 reference in the mongodb when the new mongodb item is saved.</p>