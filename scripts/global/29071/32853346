<p>There are following schemas:</p>  <pre><code>var Quest = new Schema({     name: { type: String, required: true } });  var Attempt = new Schema({     quest: { type: ObjectId, ref: 'Quest' },     success: { type: Boolean, required: true, default: false } });  var Person = new Schema({     name: { type: String, required: true },     attempts: [Attempt] }); </code></pre>  <p>We have a list of quests and a list of people. Every time some person attempts to pass a quest, we create an <code>Attempt</code> entry.<br> It would be nice to expose a <code>Person</code> via my REST service so, that it would have a list of empty <code>Attempt</code>s containing all attached attempts plus one attempt for every <code>Quest</code> that wasn't attempted. </p>  <p>I've ended up having something like this:</p>  <pre><code>router.get('/people/:id', function(req, res) {     return PeopleModel.findById(req.params.id, function (err, person) {         if(!person) {             ....         }         if (!err) {             return QuestsModel.find(function (err, quests) {                 if (!err) {                     var result = person.attempts;                     quests.forEach(function(quest){                         var attempt = person.attempts.find(attempt=&gt;{attempt.quest == quest._id});                         if(!attempt)                         {                           var newAttempt = {                                 quest: quest,                                 success: false                           };                           result.push(newAttempt);                         }                         else {                           result.push(attempt);                         }                     });                     person.attempts = result;                     return res.send({ status: 'OK', person:person });                 } else {                    ...                 }             });         } else {             ...         }     }); }); </code></pre>  <p>That doesn't feel right. Is there a common practice for such situations? Maybe some kind of mapping.</p>