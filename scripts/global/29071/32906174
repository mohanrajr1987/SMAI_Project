<p>I'm trying to write an app that logs in and authenticates an individual. I already have another app called "doctors" which I have used the Mongoose, Passport, and Passport-Local modules and the app works fine.</p>  <p>I have tried to copy and paste that code to my new app and start a new database, and it isn't working. I would like someone to point out the error of my ways. What must I do first, or what must I do differently?</p>  <p>When I try to log in, this is what I receive in the console:</p>  <pre><code>{ username: 'Chips', password: 'Salsa' } Searching.... </code></pre>  <p>It never breaks due to failure or timing out. This is my login module:</p>  <pre><code>var express = require('express'); var connection = require('../mySQLConnection'); var router = express.Router(); var Q = require('q'); var passport = require('passport'); var mongoose = require('mongoose'); var LocalStrategy = require('passport-local').Strategy;  router.route('/')     .post(function(req, res, next){         console.log(req.body);         console.log("Searching....");         var auth = passport.authenticate('local', function(err, user){             if(err){                 console.log('An error');                 return next(err);             } else if (!user){                 res.send({ success: false });                 console.log('This is false');             } else {                 req.logIn(user, function(err){                     if (err) {                         return next(err);                     }                     res.send({ success:true, user: user  });                     console.log("Login worked");                 });             }         });      });  module.exports = router; </code></pre>  <p>Here is the server.js in the root folder.</p>  <pre><code>var login = require('./server/routes/login');  app.use(passport.initialize()); app.use(passport.session());  if(app.get('env') === 'development') {     mongoose.connect('mongodb://localhost/tasks'); } else {     console.log('production'); }     var db = mongoose.connection; db.on('error', console.error.bind(console, 'connection error...')); db.once('open', function callback() {     console.log('db opened'); });  var userSchema = mongoose.Schema({     username: String,     password: String });  var User = mongoose.model('User', userSchema);  User.find({}).exec(function(err, collection){     if (collection.length === 0) {         User.create({username:'Chips', password:'Salsa'});     } });  passport.use(new LocalStrategy(     function(username, password, done) {         User.findOne({username:username}).exec(function(err, user) {             if (user) {                 return done(null, user);                 console.log("This works");             } else {                 return done(null, false);                 console.log("Nothing is found");             }         });     } )); passport.serializeUser(function(user, done) {     if(user) {         done(null, user._id);     }  }); passport.deserializeUser(function(id, done) {     User.findOne({_id:id}).exec(function(err, user) {         if (user) {             return done(null, user);         } else {             return done(null, false);         }     }); });  app.use('/api/login', login); </code></pre>  <p>The only difference is the code is this part. Note I'm not using this for production</p>  <pre><code>if(app.get('env') === 'development') {     mongoose.connect('mongodb://localhost/tasks'); } else {     console.log('production'); }  </code></pre>  <p>In the original app that works, the code is</p>  <pre><code>if(app.get('env') === 'development') {     mongoose.connect('mongodb://localhost/doctors'); } else {     mongoose.connect('mongodb://&lt;user&gt;:&lt;password&gt;/doctors'); }        </code></pre>