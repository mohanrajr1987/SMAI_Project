<p>Update: This problem seems to be related to mongoose. Please see update at the bottom.</p>  <p>In the parent I use the following code to pass <code>choosenItem</code> to a grandChild:</p>  <pre><code>childContextTypes: {         foo: React.PropTypes.object.isRequired,          },     getChildContext: function() {         return { foo: this.state.choosenDriver }    }, </code></pre>  <p>choosenDriver is a <code>mongoose</code> Model that looks like this:</p>  <pre><code>var Schema    = mongoose.Schema; var driverSchema = new mongoose.Schema({    driver: String,   age: String,   cars: [{ type: Schema.Types.ObjectId, ref: 'Car' }]  }); module.exports = mongoose.model('Driver', driverSchema); </code></pre>  <p>This works fine and in the GrandChild I can do the following:</p>  <pre><code>contextTypes: {       foo: React.PropTypes.object.isRequired,   },  //some other stuff...  render: function(){   return (             &lt;h1&gt;{this.context.foo.name}&lt;/h1&gt;           ) }); </code></pre>  <p>And this displays the name of the <code>choosenDriver</code>.</p>  <p>I would also like to loop through the cars and thought it could be done like this:</p>  <pre><code>render: function(){     var cars = new Array(this.context.foo.cars);    var driversCars = cars.map(function(car,i){    return &lt;li key={i}&gt; {car} &lt;/li&gt;;    });   return (          &lt;div&gt;             &lt;h1&gt;{this.context.foo.name}&lt;/h1&gt;             &lt;ul&gt;{driversCars}&lt;/ul&gt;          &lt;/div&gt;    ) }   }); </code></pre>  <p>This returns all the drivers cars in a string displayed on one single line. I took a look in react developers tool and saw that cars is not defined as an Array.</p>  <p>Is this maybe because <code>choosenDriver</code> is a <code>state</code> and arrays are not supported in this manner?</p>  <p>The cars obviously exists but not as an Array. </p>  <p>Any ideas on how to access cars as an Array in this example?</p>  <p>Thank you!</p>  <p>Update:</p>  <p>When looking at this.context.foo.cars in react-Tools i see this:</p>  <pre><code>cars:  -&gt;_proto_ :{..}  0: "4242594395935934",  1: "3543435095340509" etc...  cars should be an Array so I would expect to see: cars: Array[4] </code></pre>  <p>Allthough in the DB everythingg looks as it should:</p>  <pre><code>"cars":["5607b0747eb3eefc225aed61","5607b07a7eb3eefc225aed62","5606bf4b0e76916c1d1668b4","5607b07a7eb3eefc225aed62"]}] </code></pre>  <p>Last Update: Here they are next to eachother i react Tools: (I have a list of drivers and this shows that the Driver-object Changes when it gets selected)</p>  <pre><code>State: choosenDriver: {..}  _v:0  _id: "235345353453"  name: "Roger"  cars:      -&gt;_proto_ :{..}      0: "4242594395935934",     _id: undefined    Same driver but not choosen: drivers: array[3]  -&gt;0: {}  -&gt;1: {}       _v: 0       _id: "4242594395935934"       cars: Array[1] </code></pre>  <p>So something happens to the Array when it gets selected. Weird...</p>