<p>I have a meanjs project and I am getting some input from user on server and the request body has the following structure: </p>  <pre><code>{    transaction: {         heading: '',        items: [Object]        },    something: {},    somethingAgain: {} } </code></pre>  <p>The structure of the items array is as follows - </p>  <pre><code>[ { ref: '5607c6536e67edb44a6a8186',     name: '',     quantity: 0,     discount: 0,     cost: 180 } ] </code></pre>  <p>where the <code>ref</code> is the <code>_id</code> value of the item in my Item model. So, basically what I want to do is loop through the array of items and populate the properties of each ref and compute the <code>cost</code> property accordingly for each item. I cannot use a simple for loop as it would execute itself before even the first async call to mongodb to find the item is completed.  So, how to approach this ? Please suggest. </p>  <p>So, adding more information to the question -  My server side controller code receiving the request is as follows - </p>  <pre><code>exports.create = function (req, res) {     console.log(req.body.transaction.items);     Sale.create(req.body, function (err, sale) {         if (err) {             return handleError(res, err);         }         return res.json(201, sale);     }); }; </code></pre>  <p>and the log output of the items is as I have shown above. so what I have to do here is iterate over the items array and find the items with <code>ref</code> matching to that of the Items collections.</p>