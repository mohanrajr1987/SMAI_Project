<p>I'm running the following code:</p>  <pre><code>#converts strings that are ints to int. for i,x in enumerate(values):     try:         values[i] = int(x)     except:         pass  # Fills values with NULLs if needed if len(values) &lt; no_of_columns:     values = values + ["NULL"]*(no_of_columns-len(values)) print(values)  # Creates dict with params and values params = {} for i, x in enumerate(values):     params[i] = x  query = "INSERT INTO {} VALUES ({});".format(table_name,",".join(['%s']*no_of_columns))  self.cur.execute(query, params) self.print_answer() </code></pre>  <p>And what happens is I get the following error:</p>  <pre><code>Traceback (most recent call last):   File "interface.py", line 228, in &lt;module&gt;     db.run()   File "interface.py", line 219, in run     actions[self.print_menu()-1]()   File "interface.py", line 194, in insert     self.cur.execute(query, params)   File "build/bdist.macosx-10.6-intel/egg/pgdb.py", line 323, in execute   File "build/bdist.macosx-10.6-intel/egg/pgdb.py", line 359, in executemany pg.OperationalError: internal error in 'BEGIN': not enough arguments for format string </code></pre>  <p>This confuses me because when I print params and quote I can see that there are exactly as many elements as there are <code>%s</code> tags:</p>  <pre><code>params = {0: 22, 1: 'ehj', 2: 'NULL', 3: 'NULL'} query = 'INSERT INTO books VALUES (%s,%s,%s,%s);' </code></pre>  <p>What am I doing wrong? The parameters should be the same amount as the %s's, right?</p>