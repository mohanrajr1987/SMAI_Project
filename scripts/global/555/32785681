<p>I'm developing with the Meteor platform and there's this annoying bug that inserts the closing curly brace in the wrong location sometimes. For example:</p>  <pre><code>&lt;section&gt;   {{#if isConditionTrue}}   {{|     {{&gt; templateName}}   }   }   {{/if}} &lt;/section&gt; </code></pre>  <p><code>|</code> represents the cursor's location. This happens after typing <code>{{</code></p>  <p>It should actually look like this:</p>  <pre><code>&lt;section&gt;   {{#if isConditionTrue}}   {{|}}     {{&gt; templateName}}   {{/if}} &lt;/section&gt; </code></pre>  <p>But because of this: <code>{{&gt; templateName}}</code>, sublime text is attempting to completely wrap that child curly brace statement. </p>  <p>Any suggestions on how to solve this?</p>  <p>I tried to use a snippet hoping I could override the default behavior, but no luck. I also tried messing around with the key bindings a little bit too, but no luck there either.</p>  <p><strong>Update</strong> I just found this in my default sublime keymap file, I'm not really too sure how to modify these without messing up the wrapping for my js files:</p>  <pre><code>// Auto-pair curly brackets     { "keys": ["{"], "command": "insert_snippet", "args": {"contents": "{$0}"}, "context":         [             { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },             { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },             { "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|]|\\}|$)", "match_all": true }         ]     },     { "keys": ["{"], "command": "wrap_block", "args": {"begin": "{", "end": "}"}, "context":         [             { "key": "indented_block", "match_all": true },             { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },             { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },             { "key": "following_text", "operator": "regex_match", "operand": "^$", "match_all": true },         ]     },     { "keys": ["{"], "command": "insert_snippet", "args": {"contents": "{${0:$SELECTION}}"}, "context":         [             { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },             { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }         ]     }, </code></pre>  <p><strong>Update #2</strong> I grabbed the following from the default keybindings file, copied it over to my user key bindings file, and changed <code>"operand": true</code> to <code>"operand": false</code>, and the seems to be preventing the wrapping. </p>  <pre><code>{ "keys": ["{"], "command": "wrap_block", "args": {"begin": "{", "end": "}"}, "context":     [         { "key": "indented_block", "match_all": true },         { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },         { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },         { "key": "following_text", "operator": "regex_match", "operand": "^$", "match_all": true },     ] }, </code></pre>  <p>But it's effecting the auto wrapping of conditionals in my js files. So if I try to wrap and existing conditional that didn't have brackets.</p>  <p>So if I try to wrap this:</p>  <pre><code>if (condition)   console.log('dkslfds'); </code></pre>  <p>I get this:</p>  <pre><code>if (condition) {}   console.log('dkslfds'); </code></pre>  <p>Not a huge deal though, and I could live without this if I have to. </p>  <p><strong>Update #3</strong> Here's my package control settings file:</p>  <pre><code>{     "bootstrapped": true,     "in_process_packages":     [     ],     "installed_packages":     [         "42 Headers",         "AAAPackageDev",         "Abacus",         "All Autocomplete",         "Autoprefixer",         "Babel",         "Emmet",         "ES6-Toolkit",         "Git",         "GitGutter",         "Handlebars",         "HTML5",         "HTMLAttributes",         "Jade",         "JavaScript &amp; NodeJS Snippets",         "JavaScriptNext - ES6 Syntax",         "JSCS-Formatter",         "LESS",         "One Dark Color Scheme",         "Package Control",         "SCSS",         "SideBarEnhancements",         "Stino",         "Stylus",         "Stylus-Snippets",         "SublimeLinter",         "SublimeLinter-jscs",         "Terminal",         "Theme - Brogrammer",         "Theme - Flatland",         "Theme - Spacegray",         "TodoReview",         "WordPress"     ],     "repositories":     [         "https://github.com/gepd/Stino/tree/new-stino"     ] } </code></pre>