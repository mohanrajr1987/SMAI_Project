<p>I just started messing with tcl tonight and I've hit my first hurdle. Here is my code:</p>  <pre><code>package require http package require tls  ::http::register https 443 ::tls::socket  set url https://127.0.0.1:8834/session set body [http::formatQuery username admin password myPassword] set login [http::geturl $url -query $body] set authToken [http::data $login]  http::cleanup $token </code></pre>  <p>This is how authToken looks after the code runs:</p>  <pre><code>% puts $authToken {"token":"d52e61030d93824128cea67e2b99dde6f3fd61b25e9a0440"} </code></pre>  <p>I only need d52e61030d93824128cea67e2b99dde6f3fd61b25e9a0440 stored.  I cannot figure out how to do this.  </p>  <p>I tried using the rest package, but I couldn't get that to work either:</p>  <pre><code>package require rest package require tls  ::http::register https 443 ::tls::socket  set nessus(login) {     url https://127.0.0.1:8834/session     method POST     req_args {username: password:} }  rest::create_interface nessus  set token [nessus::login -username admin -password myPassword] </code></pre>  <p>Here is my output from running this code:</p>  <pre><code>% puts $token token ba9c5b4256ef701bf7d8ae151c01261cb8a3267f1b8c2787 </code></pre>  <p>This may be a bit easier to format than the http code, I'm assuming.</p>  <p>In Python I was able to retrieve <em>just</em> that token key by pulling 'token' out of the json but I'm not sure how to accomplish that in tcl.</p>