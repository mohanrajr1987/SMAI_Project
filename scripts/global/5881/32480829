<p>I am currently trying to understand the implementation details of the following memoizing procedure as shown in <a href="http://wiki.tcl.tk/10779" rel="nofollow">several</a> <a href="http://wiki.tcl.tk/10981" rel="nofollow">variants</a> in the Tcl wiki:</p>  <pre><code>proc memoize {} {     global memo     set cmd [info level -1]     if {[info level] &gt; 2 &amp;&amp; [lindex [info level -2] 0] eq "memoize"} return     if {![info exists memo($cmd)]} {set memo($cmd) [eval $cmd]}     return -code return $memo($cmd) } </code></pre>  <p>What is common to all of them is (to my understanding) that they compare <em>the first word of the grandparent command</em> (<code>lindex [info level -2] 0</code>) with <em>literally the name of this memoizing procedure</em> (in this case, <code>"memoize"</code>).</p>  <p>Would there be any downside of changing this to comparing <em>the grandparent command</em> with <em>this command</em>, in other words, changing <code>[lindex [info level -2] 0] eq "memoize"</code> to <code>[info level -2] eq [info level 0]</code>?</p>