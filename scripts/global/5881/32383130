<p>I am working to update old software (written to build against Tcl/Tk 8.3) so that it builds against more modern distributions. I am taking this as an opportunity to learn about C and Tcl, both of which I had never programmed in when this project began. So, I'm very novice.</p>  <p>One of the most confusing things for me in learning about the Tcl API is <code>ClientData</code>. Many functions in the API take it as an argument, but the C extension almost never uses it. I got the impression from <a href="http://stackoverflow.com/a/9610148/1277193">this answer</a> that the global definition is rarely used:    </p>  <blockquote>   <p>The whole-extension ClientData is intended for extensions that want to   publish their own stub table ... that other extensions can build against.   This is a very rare thing to want to do; leave at NULL if you don't   want it.</p> </blockquote>  <p>So it seems that it is basically a <code>void</code> parameter that you then need to type cast or handle internally. But there are some places in the code where I need to interact with ClientData (e.g. for Idle Processes, as in the following):</p>  <pre><code>typedef struct graph *Graph;  struct graph {   int       num;   int       hidden;   int       needsRedraw; ... };  flag drawNow(ClientData data) {   Graph G;   int g = (int) data;   if (!(G = lookupGraph(g))) return TCL_OK;   return drawGraph(G); }  flag drawLater(Graph G) {   if (!G-&gt;needsRedraw &amp;&amp; !G-&gt;hidden) {     G-&gt;needsRedraw = TRUE;     Tcl_DoWhenIdle((Tcl_IdleProc *) drawNow, (ClientData) G-&gt;num);   }   return TCL_OK; } </code></pre>  <p>The cast to integer results in the following warning when I compile:</p>  <pre><code>warning: cast from pointer to integer of different size [-Wpointer-to-int-cast] </code></pre>  <p>My main confusion is <code>(ClientData) G-&gt;num</code>---I don't understand what I am casting to, because I don't know what kind of a thing ClientData is. If I look in the Tcl sources, I do not find clarity:</p>  <pre><code>tclCompile.h:220:typedef ClientData (AuxDataDupProc)  (ClientData clientData); tclInt.h:2520:typedef ClientData (TclFSGetCwdProc2)(ClientData clientData); tclOOInt.h:73:typedef ClientData (TclOO_PmCDCloneProc)(ClientData clientData); </code></pre>  <p>A couple of final points: These compiler warnings existed before I started doing any updates to the code. The program appears to work on the old systems where the original code does compile and run. So, I am not sure if this warning amounts to anything... but it spooks me, and as long as I am spending time with the code and learning about C and Tcl, I was hoping to get to the bottom of it.</p>  <p>Apologies in advance if I did not provide enough relevant information. I'm happy to provide more, but this my current best effort at a good question.</p>