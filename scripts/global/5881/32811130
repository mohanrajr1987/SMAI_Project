<p>I'm trying to come up with the best way to display two values from inside of a dict that I converted using json2dict.  Here is the basic format of the returned code from my call:</p>  <pre><code>{ "templates": [     {         "title": "Title1",         "uuid": "123-456-789",         "key_dont_need": "value"     },     {         "key_dont_need": "value"         "title": "Title2",         "uuid": "acr-t54-g32",     },     {         "title": "Network Scan",         "key_dont_need": "value"         "uuid": "5ge-534-3g3"     }   ] } </code></pre>  <p>What I'm looking to do is pull out each title and uuid.  I've managed to get it to pull out the first title/uuid but I'm not having much success after that.  Here is my current code (please destroy it as necessary, I'm still learning and would love the feedback):</p>  <pre><code>package require rest package require tls package require json  ::http::register https 443 ::tls::socket   proc login {url credentials} {     append url /session     set unformattedToken [dict get [::json::json2dict [::rest::post $url $credentials]] token]     set token [format "token=%s" $unformattedToken]      return $token }  proc logout {url config} {     append url /session     set logout [::rest::delete $url -headers $config] }  proc get_scan_list {url config} {     append url /scans     set response [::rest::get $url -headers $config]     return $response }  proc get_scan_policies {url config} {     append url /editor/policy/templates     set policy_list [::rest::get $url -headers $config]]     dict get [lindex [dict get [::json::json2dict $policy_list] templates] 0] title }  set url https://127.0.0.1:8834 set credentials {username admin password myPassword} set token [login $url $credentials] dict set config headers X-Cookie $token set scan_list [get_scan_list $url $config] set scan_policies [get_scan_policies $url $config] </code></pre>  <p>I'm trying to come up with the best way to increment through those uuids but I've hit a bit of a roadblock.  </p>  <p>Here are a couple of ways I've attempted this:</p>  <pre><code>dict for {id templates} $policy_list {         puts "Policy Name: $title"         puts "Policy UUID: $uuid"     } </code></pre>  <p>I also tried the idea here: <a href="http://wiki.tcl.tk/19941" rel="nofollow">http://wiki.tcl.tk/19941</a></p>  <p>But I didn't have much luck with that either.  Here is essentially what I'm looking to do from a Python standpoint:</p>  <pre><code>def get_policies(): """ Get scan policies  Get all of the scan policies but return only the title and the uuid of each policy. """  data = connect('GET', '/editor/policy/templates')  return dict((p['title'], p['uuid']) for p in data['templates']) </code></pre>  <p>I'm starting to wonder if my issue is with the way the data is stored once it is converted to json2dict?  I could be way off base there.  </p>  <p><strong>EDIT</strong> </p>  <p>Just as I clicked submit I managed to get it to work with this:</p>  <pre><code>proc get_scan_policies {url config} {     append url /editor/policy/templates     set policy_list [::rest::get $url -headers $config]     for {set i 0} {$i &lt; 17} {incr i} {         puts [dict get [lindex [dict get [::json::json2dict $policy_list] templates] $i] uuid]         puts [dict get [lindex [dict get [::json::json2dict $policy_list] templates] $i] title]     } } </code></pre>  <p>Here is my output:</p>  <pre><code>Policy Name: Title1 Policy UUID: 123-456-789 Policy Name: Title2 Policy UUID: acr-t54-g32 Policy Name: Network Scan Policy UUID: 5ge-534-3g3 </code></pre>  <p>I hard coded the count in there but would love to see if there is a better way I could have done this.</p>