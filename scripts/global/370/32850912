<p>I'm trying to define a vim highlighting scheme where the brackets belonging to language functions are highlighted the same as functions, so for example if functions are red then their brackets will also be red. My idea is this will differentiate them from other round-bracket constructions. (Maybe this is actually a terrible idea, but I wanted to try it out.)</p>  <p>I tried defining a region like this:</p>  <pre><code>syn region Function matchgroup=Function start=+TestFun\s*(+ end=+)+ contains=ALL </code></pre>  <p>However this doesn't work with my test case:</p>  <pre><code>hi Function gui=bold guifg=Red guibg=NONE  syn region Function matchgroup=Function start=+TestFun\s*(+ end=+)+ contains=ALL  " Dummy function to demo syntax highlighting function! TestFun()   let x = 1 endfunction!  if 0 TestFun(123) TestFun(SomethingElse(123)) SomethingElse(123) endif </code></pre>  <p>Save the above as a .vim file, open it in Vim and <code>:so %</code> to see what I mean. <code>TestFun(</code> gets highlighted, but not its closing bracket.</p>  <p>Can this be done at all using standard Vim without writing a load of code?</p>