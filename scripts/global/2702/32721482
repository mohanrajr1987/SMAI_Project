<p>I'm using Socket.IO (the latest version 1.3.6) with Node.js on Heroku plateform, I develop a basic chat application built with express.js. It works pretty well for most clients connected on chat but for one client, I receive multiple errors from my heroku dyno :</p>  <pre><code>heroku router - - at=error code=H12 desc="Request timeout" method=GET path="/socket.io/?EIO=3&amp;transport=polling&amp;t=1442928164852-20&amp;sid=OIjnoxv2RqP3ijBnAAAA" host=xxx.herokuapp.com fwd="x.x.x.x" dyno=web.1 connect=0ms service=30000ms status=503 bytes=0 heroku router - - at=error code=H12 desc="Request timeout" method=GET path="/socket.io/?EIO=3&amp;transport=polling&amp;t=1442924841606-16&amp;sid=5yukgKd2YUl75t1rAAAI" host=xxx.herokuapp.com fwd="x.x.x.x" dyno=web.1 connect=1ms service=30000ms status=503 bytes=0 ... </code></pre>  <p>He can send and receive messages without problem, but, for example, when he closes the tab of his browser, <em>disconnect</em> event isn't fired and connection timeout on server side. This client is located behind a corporate web proxy.</p>  <p>Here is server-side code :</p>  <pre><code>var heartbeatInterval = 50000;  socket.init = function( io ) {      function sendHeartbeat() {         setTimeout( sendHeartbeat, heartbeatInterval );         io.emit('ping', { beat : 1 });     }      io.on('connection', function( socket ) {          var session = socket.handshake.session;         var dateFormat = 'DD/MM Ã  HH:mm:ss'         var time = moment().tz('Europe/Paris').format( dateFormat );          if( session.user ) {             users.exist(session.user.name, function( exist ) {                 if( ! exist ) {                     users.add( session.user );                     users.list(function( usersList ) {                         io.emit('user_new');                         addBotMessage(io, time, session.user.name + " connected");                         async.eachSeries(usersList, function( user, next ) {                             io.emit('user_connected', user);                             next();                         }, function() {                             socket.on('pong', function( data ) {                                 debug('Pong received from client');                             });                             socket.on('message', function( message ) {                                 time = moment().tz('Europe/Paris').format( dateFormat );                                 if( message &amp;&amp; message.length &lt;= 1000 )                                     addMessage(io, time, session.user, marked( message ));                             });                             socket.on('disconnect', function() {                                 users.remove( session.user.name );                                 time = moment().tz('Europe/Paris').format( dateFormat );                                 io.emit('user_disconnected', session.user.id);                                 addBotMessage(io, time, session.user.name + " disconnected");                             });                         });                     });                 } else {                     io.to( socket.id ).emit('already_connected');                 }             });         }     });      setTimeout( sendHeartbeat, heartbeatInterval ); }; </code></pre>  <p>I have no idea how to fix this problem, any idea/advice ?</p>