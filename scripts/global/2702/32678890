<p>I'm trying to download a page content using JSoup. If the whole operation (open connection + read) takes more than 8 seconds, I want to abort right away. I assumed that the purpose of the <code>timeout(int millis)</code> method does exactly that. According to the javadoc:</p>  <blockquote>   <p>Set the request timeouts (connect and read). If a timeout occurs, an   IOException will be thrown. The default timeout is 3 seconds (3000   millis). A timeout of zero is treated as an infinite timeout.</p> </blockquote>  <p>I wrote a simple code that simulates that operation:</p>  <pre><code>    final int TIME_OUT = 8000;     final String USER_AGENT_STRING = "Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.2; WOW64; Trident/6.0)";     final String url = "http://reguler-pmb-tanggamus.va.web.id/";      long time = System.currentTimeMillis();     try {         Document doc = Jsoup.connect(url).userAgent(USER_AGENT_STRING).timeout(TIME_OUT).get();         System.out.println("Done crawling " + url + ", took " + (System.currentTimeMillis() - time) + " millis");         System.out.println("Content: " + doc);     } catch (Exception e) {         System.out.println("Failed after " + (System.currentTimeMillis() - time) + " millis");         e.printStackTrace();     } </code></pre>  <p>I tried to run this small script on a few "problematic" websites <strong>in a single threaded environment</strong>. I assumed that whether it succeeded or an exception was caught, the operation time should never exceed 8 seconds (8000 millis). Unfortunately, this is not the case as sometimes it succeeds (no exception) after more than a minute:</p>  <pre><code>Done crawling http://reguler-pmb-tanggamus.va.web.id/, took 68215 millis Content: &lt;!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"&gt; ... </code></pre>  <p>and sometimes (very rarely though) fail (SocketTimeoutException) after more than a minute.</p>  <p>Has anyone encountered this kind of problem before?</p>