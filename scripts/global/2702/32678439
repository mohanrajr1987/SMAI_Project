<p>I wanted to launch a bunch of process to work simultaneously - so i've created an array of process and the lunched them like this:</p>  <pre><code>    Process[] p_ids= new Process[ids.length];     int index = 0;     //launching the processes     for (int id: ids) {         String runProcessCommand = createCommandForProcess();         System.out.println(runProcessCommand);         try {             p_ids[index] = Runtime.getRuntime().exec(runProcessCommand);             index++;         } catch (IOException e) {         }     } </code></pre>  <p>After that I wanted to wait for all of them to finish. So I took the same array of processes and iterate over all the process in it, each iteration I am waiting for the current iterated process to finish or wait for a specific time out to pass. </p>  <p>like this: </p>  <pre><code>    for (Process p_id: p_ids) {         try {             //timeout for waiting a process             p_id.waitFor(timeoutForSingleProcess, TimeUnit.HOURS);             //error handling when reaching timeout         } catch (InterruptedException e) {             System.err.println("One of the process's execution time exceeded the timeout limit");             e.printStackTrace();         }     } </code></pre>  <p>The problem is that I want to give a total_time_out - meaning a fixed time out for each one of the processes. </p>  <p>saying I have process1, process2, process3. I want to give a timeout of 1 hour. If each one of the process (1,2 or 3) will take more then an hour to finish I want the timeout to kick in.</p>  <p>The problem in my code that the timeout is starting to count down the time - when it turn arrives in the loop (and not in the same time as the other process). i.e. if process1 takes 0.5 an hour and process 2 takes 1 hour - the two process will be launch at the same time <em>but</em> process 2 timeout will start counting down 0.5 hour after its lunch (because we waited 0.5 hour for process 1 before moving to process 2). that way the timeout that should have been activated - was ignored.</p>  <p>Is there any process pool or something like that which could help me?</p>