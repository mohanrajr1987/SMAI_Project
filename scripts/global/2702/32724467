<p>I really can't solve a problem: I've finished to write a web application during my internship which allows me, after a series of queries to Oracle DBs, to create my own tables on MySQL, then export the results in a custom fancy to XLS or PDF. The server side is in Java, the client side is in Javascript, some JQuery, and obviously HTML5. The server is set up with Apache Tomcat. The method I use to run the queries and then export the results to a direct-download file (nothing stays in local, I use OutputStreams) is written in a jsp which I call by a button press from index.jsp.  As I was in local on my laptop with my own Tomcat, the browser waited patiently for the Java to end, then returned the generated files. Right now, after the remote deploy in a local server, the browser times out "casually" giving an err_no_response code. This happens both in Chrome and Firefox. <strong>The queries do take from 2 to 12 minutes to be done</strong>, and that's the problem. I tried  both polling with Ajax and websockets, but none of them worked: the firewall is in the way and I can't tunnel in a proxy it seems.  Any idea on how to keep the page alive while the server is running? Thanks. <strong>PS: I can't edit indexes on the Oracle tables, nor alter them in any way</strong>. The queries are already quite optimized.  Also, I know I'm doing a lot of mistakes (plain Java code in JSPs...), yet this is the best I can do for now. Changing the whole logical structure of the code is hard at this point and I just need a painless solution to make everything work.</p>