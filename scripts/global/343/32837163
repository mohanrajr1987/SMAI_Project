<p>I have a <code>Member</code> class like this :</p>  <pre><code>public class Member {     private int value1;     private boolean value2; } </code></pre>  <p>And an <code>ArrayList&lt;Member&gt;</code> containing this data :</p>  <p><strong>value1 - value2</strong></p>  <ul> <li>1 - false</li> <li>2 - false</li> <li>3 - true</li> <li>4 - false</li> <li>5 - true</li> </ul>  <p>Now I want this data sorted this way :</p>  <ul> <li>The members with <code>value2</code> as true must be returned first, then the other ones after</li> <li>In each sublist, members will be returned from the highest to the lowest <code>value1</code></li> </ul>  <p>So in the end, the list should contain data in this order : 5, 3, 4, 2, 1.</p>  <p>I know that I can use <code>Collections.sort()</code> to sort data by value1 :</p>  <pre><code>Collections.sort(memberList, new Comparator&lt;Member&gt;(){     public int compare(Member m1, Member m2){         return m1.getValue1() - m2.getValue1();     } }); </code></pre>  <p>But is there a way to sort data by both criterias in the same <code>compare</code> method?</p>  <p>Thanks for your help.</p>