<p>a rails newbie here, looking at doing some work with 4 tables and not totally sure how to structure the associations.  Below topic involves real estate, probably helpful to keep that in mind.</p>  <p>I have four models:</p>  <ul> <li>Property - a physical house</li> <li>Project - a large group of jobs happening at a house</li> <li>Job - a specific job at a house</li> <li>Worker - a person doing the work</li> </ul>  <p>The associations as I see them in my head are:</p>  <ul> <li>a Property can have many Projects, Jobs, and Workers</li> <li>a single Project belongs to one Property, but can have many Jobs and (via Jobs) have many Workers</li> <li>a single Job belongs to one Project and to one Property (via the Project), but can have many Workers</li> <li>a single Worker can have one Job on one Projects on one Property</li> </ul>  <p>My two questions are:</p>  <ol> <li><p>What is the best way to think about the above set of relationships?</p></li> <li><p>** How do I build the associations between my models? Can't get my head wrapped around how to do that.</p></li> </ol>  <p>Really appreciate any thoughts!</p>  <p>***** UPDATED MODEL STRUCTURE - 9/30/2015 Thanks Jason - here is what I have now (below)</p>  <p>My key goal in working with the data will be the following: - list a property, it's projects, jobs and workers - list a set of projects and properties for a worker</p>  <p>Does the below model structure accomplish the above? It seems to from my view but can't totally be sure.</p>  <p>Model setup as 9/30</p>  <ul> <li><p>Property Model has_many :projects has_many :jobs, through: :projects has_many :workers, through: :jobs</p></li> <li><p>Project Model belongs_to :property has_many :jobs has_many :workers, through: :jobs</p></li> <li><p>Job Model belongs_to :project has_many :workers</p></li> <li><p>Worker Model has_many :jobs</p></li> </ul>