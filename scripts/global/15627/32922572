<p>I'm new with golang. I'm trying to share mysql database connection in my package, latter maybe in several packages. To skip defining database connection in every package I've created Database package and now I'm trying to get that package, connect to db and use that object in whole package.</p>  <p>I'm using this mysql plugin: github.com/go-sql-driver/mysql</p>  <p>here is my code:</p>  <p>main.go</p>  <pre><code>package main  import (     "log"     "./packages/db" // this is my custom database package     "database/sql"     _ "github.com/go-sql-driver/mysql" )  var dbType Database.DatabaseType var db *sql.DB  func main() {     log.Printf("-- entering main...")     dbType := Database.New()     db = dbType.GetDb()      dbType.DbConnect()      delete_test_data()      dbType.DbClose() }  func delete_test_data(){     log.Printf("-- entering delete_test_data...")      //db.Exec("DELETE FROM test;") } </code></pre>  <p>packages/db/db.go</p>  <pre><code>package Database  import (     "log"     "database/sql"     _ "github.com/go-sql-driver/mysql" )  type DatabaseType struct {    DatabaseObject *sql.DB }  func New()(d *DatabaseType) {     d = new(DatabaseType)     //db.DatabaseObject = db.DbConnect()     return d }   func (d *DatabaseType) DbConnect() *DatabaseType{     log.Printf("-- entering DbConnect...")     var err error      if d.DatabaseObject == nil {         log.Printf("--------- &gt; Database IS NIL...")         d.DatabaseObject, err = sql.Open("mysql", "...")         if err != nil {             panic(err.Error())         }          err = d.DatabaseObject.Ping()         if err != nil {             panic(err.Error())         }     }      return d }  func (d *DatabaseType) DbClose(){     log.Printf("-- entering DbClose...")     defer d.DatabaseObject.Close() }  func (d *DatabaseType) GetDb() *sql.DB{    return d.DatabaseObject } </code></pre>  <p>Everything is ok and without error until I uncomment this line:</p>  <pre><code>db.Exec("DELETE FROM test;") </code></pre>  <p>Can someone tell me what is correct way to share db connection?</p>