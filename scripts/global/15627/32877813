<p>I've been trying to use the Associations feature in golang orm (<a href="https://github.com/jinzhu/gorm/" rel="nofollow">https://github.com/jinzhu/gorm/</a>), and am unable to create a pretty simple association.  In the example below, the user table contains data, but email table does not.  I've tried a bunch of things and I'm probably missing something basic, but have been unable to find the right answer in github/stackoverflow.</p>  <p>Code :</p>  <pre><code>package main  import (     "database/sql"     "log"      "github.com/jinzhu/gorm"     "github.com/mattn/go-sqlite3" )  var db gorm.DB  type User struct {     Name   string     Mail   Email }  type Email struct {     Address string }  //Initialize DB . func InitDB() {     var DB_DRIVER string     sql.Register(DB_DRIVER, &amp;sqlite3.SQLiteDriver{})     log.Printf("Initializing Database with ", DB_DRIVER)     dbSql, _ := sql.Open(DB_DRIVER, "simple-sqlite")      var err error     db, err = gorm.Open("sqlite3", dbSql)      if err != nil {         log.Fatalf("Got error when connecting to the database, the error is '%v'", err)     }      db.LogMode(true)     // Then you could invoke `*sql.DB`'s functions with it     db.DB().Ping()     db.DB().SetMaxIdleConns(10)     db.DB().SetMaxOpenConns(100)      // Disable table name's pluralization     db.SingularTable(true) }  func InitSchema() {     db.CreateTable(&amp;User{}, &amp;Email{}) }  func DoStuff() {     user := User{Name: "Jinzhu", Mail: Email{Address: "hello@hello.com"}}     db.Create(&amp;user) }  func main() {     InitDB()     InitSchema()     DoStuff() } </code></pre>  <p>go run main.go prints the following output 2015/09/30 17:25:04 Initializing Database with %!(EXTRA string=)</p>  <p>[2015-09-30 17:25:04]  [3.21ms]  CREATE TABLE "user" ("name" varchar(255)) </p>  <p>[2015-09-30 17:25:04]  [4.01ms]  CREATE TABLE "email" ("address" varchar(255) ) </p>  <p>[2015-09-30 17:25:04]  [0.54ms]  INSERT INTO "user" ("name") VALUES ('Jinzhu') </p>  <p>Not sure what I'm missing here - appreciate any response!</p>