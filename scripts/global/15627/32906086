<p>Here is the code that works:</p>  <pre><code>package main  import (     "fmt" )  type Base struct {     Field  int }  type Derived struct {     Base }  func main() {     d := &amp;Derived{}     d.Field = 10     fmt.Println(d.Field) } </code></pre>  <p>And here's the code that fails to compile with <code>./main.go:17: unknown Derived field 'Field' in struct literal</code></p>  <pre><code>package main  import (     "fmt" )  type Base struct {     Field  int }  type Derived struct {     Base }  func main() {     d := &amp;Derived{         Field: 10,     }     fmt.Println(d.Field) } </code></pre>  <p>What exactly is going on here? Sorry if it's obvious, but I just don't understand.</p>