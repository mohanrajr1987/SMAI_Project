<p>If I'm right, there is no way how create a composite literal for struct, that contains pointer to primitive type, if pointer should be initialized to not nil value. Or am I wrong?</p>  <p>In golang (or go) I can easy create a composite literal for nearly everything - bool, number, string, struct, array or slice, map, eventhough pointer to struct. Map and slices might be empty or it can contain a data.</p>  <p>Pointer to channel can be initialized by make. If pointer should point to zero, I can cheat with new.</p>  <p>Therefore if I need primitive type I have to write function, that is correct in go, although looks terrible for each C/C++ programmer:</p>  <pre><code>func NewInt(i int) *int {    return &amp;i } </code></pre>  <p>I wrote a simple example with this <a href="http://play.golang.org/p/WWDZjZC0lM" rel="nofollow">http://play.golang.org/p/WWDZjZC0lM</a>. Or you know a better way.</p>