<p>I am customizing my singleton class of <code>CLLocationManager</code>. </p>  <p>I have  </p>  <pre><code>@property (nonatomic, strong) CLLocationManager *sManager; </code></pre>  <p>and </p>  <pre><code>static MyLocationManager* sMyLocationManager=nil;  +(instancetype)sharedLocationManager{     static dispatch_once_t onceToken;     dispatch_once(&amp;onceToken, ^{         sMyLocationManager = [[self alloc] init];      });     return sMyLocationManager;  } </code></pre>  <p>I could able to write my own methods as</p>  <pre><code>-(void)settingUserLocationManager{     if(nil== sMyLocationManager.sManager){         sMyLocationManager.sManager = [[CLLocationManager alloc] init]; } -(void)onStartUpdatingUserLocation{     [sMyLocationManager.sManager startUpdatingLocation];     return; } -(void)onStopUpdatingUserLocation{     [sMyLocationManager.sManager stopUpdatingLocation]; } </code></pre>  <p><code>startUpdatingLocation</code> and <code>stopUpdatingLocation</code> are instance methods and this how I use them, while <code>[CLLocationManager locationServicesEnabled]</code> is a class method. I have no idea how to use that in my singleton class.</p>  <p>I have tries using it as</p>  <pre><code>+(BOOL)locationServicesEnabled {     return [sMyLocationManager.sManager locationServicesEnabled]; } </code></pre>  <p>but not working as expected. Kindly add some ideas.</p>