<p>I have found a lot of links how to solve this problem, but it works different if string has different amount of letters.</p>  <p>So the first approach I used was:</p>  <pre><code>- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath {      NSDictionary *comment = [self.comments objectAtIndex:indexPath.row];       NSString *text = comment[@"text"];       CGSize stringSize = [text sizeWithFont:[UIFont systemFontOfSize:14] constrainedToSize:CGSizeMake(320, MAXFLOAT) lineBreakMode:NSLineBreakByWordWrapping];       return stringSize.height; } </code></pre>  <p>The second approach I used:</p>  <pre><code>- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath {      NSDictionary *comment = [self.comments objectAtIndex:indexPath.row];      NSString *text = comment[@"text"];       UITextView *tempTV = [[UITextView alloc] init];      [tempTV setText:text];      CGFloat width = tableView.frame.size.width;                 CGSize size = [tempTV sizeThatFits:CGSizeMake(width, MAXFLOAT)];      return size.height; } </code></pre>  <p>It works, but sometimes I don't see last words or last lines if text longer than 5 or 6 lines, I also use auto layout that fits my text view to all sides of the content view.</p>  <p>I also want to support iOS 6, seems <a href="http://www.raywenderlich.com/73602/dynamic-table-view-cell-height-auto-layout" rel="nofollow">this solution</a> will not work for me and I suppose I need to keep calculation heights via code.</p>  <p>I noticed when I debug my code, that my UITextView frame is equal to the storyboard size. So the width is <strong>600 pt</strong> instead of displayed width <strong>320 pt</strong> I have debugged it in <code>-cellForRowAtIndexPath</code> method. But even if I hardcode this value the height calculation works with issues in any case.</p>