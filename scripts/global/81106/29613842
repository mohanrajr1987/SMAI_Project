<p>I'm working with a UICollection view and would like to animate changes to it's datasource. New datasource shares a lot of items with the old one, and I would like to animate insertion of new items and deletion of items that are no longer in the datasource, while keeping all other cells intact:</p>  <p>Current: [1,2,8,9] Updated: [1,2,3,9] Changes: insert 3, delete 8</p>  <p><strong>Are there examples of swapping datasources for UICollectionView with animation?</strong></p>  <p>I tried this, which causes the collection view to flash, but no animations are being played:</p>  <pre><code> [self.collectionView performBatchUpdates:^{       [self.collectionView reloadSections:[NSIndexSet indexSetWithIndex:0]];  } completion:^(BOOL finished) {   }]; </code></pre>  <p>This method complains about numbers of items not matching:</p>  <pre><code>-(void)setDatasource:(NSMutableArray *)datasource {      NSMutableArray* _datasourceBackup = _datasource;       //find out what is being added and deleted     NSMutableArray* itemsToDelete = [NSMutableArray arrayWithArray:_datasource];     DLog(@"delete raw: %lu", (unsigned long)itemsToDelete.count);     [itemsToDelete removeObjectsInArray:datasource];     DLog(@"delete filtered: %lu", (unsigned long)itemsToDelete.count);       NSMutableArray* itemsToAdd = [NSMutableArray arrayWithArray:datasource];     DLog(@"add raw: %lu", (unsigned long)itemsToAdd.count);     [itemsToAdd removeObjectsInArray:_datasource];     DLog(@"add filtered: %lu", (unsigned long)itemsToAdd.count);       //1 update datasource     _datasource = datasource;      if(_datasourceBackup.count == 0)     {         //original load         [self.collectionView reloadData];     }else     {         [self.collectionView performBatchUpdates:^{              //convert items to add/delete into index paths and give them to collection view to animate             NSMutableArray* indexPathsToDelete = [NSMutableArray array];             for(NSString* identifier in itemsToDelete)             {                 NSInteger index = [_datasourceBackup indexOfObject:identifier];                 [indexPathsToDelete addObject: [NSIndexPath indexPathForRow:index inSection:0]];             }             if(indexPathsToDelete.count &gt; 0 )             {                 [self.collectionView deleteItemsAtIndexPaths:indexPathsToDelete];             }               NSMutableArray* indexPathsToInsert = [NSMutableArray arrayWithCapacity:itemsToAdd.count];             for(NSString* identifier in itemsToAdd)             {                 NSInteger index = [_datasource indexOfObject:identifier];                 [indexPathsToInsert addObject: [NSIndexPath indexPathForRow:index inSection:0]];             }              if(indexPathsToInsert.count &gt; 0 )             {                 [self.collectionView insertItemsAtIndexPaths:indexPathsToInsert];             }           } completion:nil];     } } </code></pre>