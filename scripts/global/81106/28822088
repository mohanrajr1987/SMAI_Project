<p>I am seeing a crash in <code>UIWebView</code> when scrolling, zooming in especially when the web content contains lot of href links. Interestingly this happens only in iOS 6.X.X. We are good on iOS 7 &amp; 8.</p>  <p>Crash is happening due to high memory consumption and we are clearing off the cached content when it happens (see below code). We also tried increasing the NSURLCache &amp; using “<code>NSURLRequestReloadIgnoringLocalCacheData</code>” cache policy for <code>NSURLRequest</code> but nothing seems to help.</p>  <p>Any advise on this will be helpful!</p>  <pre><code>- (void)loadView {     [super loadView];      self.navigationItem.title = @“My Screen”;     self.navigationItem.rightBarButtonItem = [[UIBarButtonItem alloc] initWithTitle:@“Done" style:UIBarButtonItemStyleBordered target:self action:@selector(dismissModalView)];      if ([MyAppUtilities isIOS7orAbove]) {         [self.navigationController.navigationBar setTintColor:kMyAppIOS7LightBlueColor];     }      UIWebView *webView = [[UIWebView alloc] initWithFrame:self.view.bounds];     webView.scalesPageToFit = YES;     webView.delegate = self;     webView.backgroundColor = [UIColor whiteColor];     [self.view addSubview:webView];      self.webContentLoadReq = [NSURLRequest requestWithURL:[NSURL URLWithString:self.webViewLink]];     [webView loadRequest:self.webContentLoadReq]; }   - (void)didReceiveMemoryWarning {     MyAppLOG(@"Clearing cache as got a memory warning from web view");      [self clearWebCache]; }   #pragma mark - #pragma mark - Local Methods  - (void)dismissModalView {     [self clearWebCache];      [self dismissViewControllerAnimated:YES completion:nil]; }   - (void)clearWebCache {     // Remove all cached responses for all requests ran on this web view     [[NSURLCache sharedURLCache] removeAllCachedResponses];      // Remove cached response for self.webContentLoadReq     [[NSURLCache sharedURLCache] removeCachedResponseForRequest:self.webContentLoadReq];      // Remove all related cookies     for (NSHTTPCookie *cookie in [[NSHTTPCookieStorage sharedHTTPCookieStorage] cookies]) {          if ([[cookie domain] isEqualToString:self.webViewLink]) {             [[NSHTTPCookieStorage sharedHTTPCookieStorage] deleteCookie:cookie];         }     } } </code></pre>