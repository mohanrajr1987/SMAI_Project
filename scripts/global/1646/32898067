<p>Hello I've been having a problem with the jQuery on my site. Currently the site runs on version 2.1.4, but I would like to add a ShoutBox that uses an older version of jQuery. I know it may be a little counter-productive to use two different libraries, but I cannot think of another way. This shoutbox works well for what we need such as spam protection, admin features, no required login or database usage, fast and very minimum amount of files. If you have any suggestions for a new chatbox that works with a newer version, that'd be great. If not, I would like to find a solution that will allow me to use this shoutbox. I have tried the jQuery.noconflict() solution, but it doesn't seem to work for me.</p>  <p>I have also tried to load the migrate jQuery plugin, which makes it all work, just one small problem. The shoutbox works great except that the scroll bar doesn't identify when a new message is sent and it never scrolls to the very bottom of the chat page. It essentialy just stays at the top and keeps getting smaller when new messages populate the body. </p>  <p>Below is the part of the shoutbox script where the auto scrolling takes place. Thank you</p>  <pre><code>function animateMsgs(msgsbox) {         msgsbox.animate({             scrollTop : msgsbox.attr("scrollHeight")         }, 500)     }     function refreshShouts(opts, type) {         var msgsbox = $("#ShoutCloud-MsgBox");         var shoutMsg = $("div.shout-msg");         var lastShout = shoutMsg.filter(":last").attr("id");         if (type == "admin") {             lastShout = "-1"         }         if (type == "refresh") {             type = "ajax";             lastShout = "-1";             $("div.shout-msg[id!='shoutid-0']").each(function () {                 $(this).fadeOut("fast")             })         }         removeShouts();         $.post(opts.shoutcloudFile, {             sc_com : type,             last : lastShout         }, function (data) {             if (data &amp;&amp; data.msgs) {                 if (type == "admin") {                     msgsbox.empty()                 }                 msgsbox.append(data.msgs);                 removeShouts();                 if (shoutMsg.size() &gt; 50) {                     var diff = shoutMsg.size() - 50;                     var i = 0;                     while (diff &gt;= i) {                         shoutMsg.first().remove();                         i++                     }                 }                 $("div.shout-msg:odd", msgsbox).addClass("shouteven");                 msgsbox.animate({                     scrollTop : msgsbox.attr("scrollHeight")                 }, 500)             }         }, "json")     }     function removeShouts() {         var seen = {};         $("div.shout-msg").each(function () {             var post = $(this).attr("id");             if (seen[post]) {                 $(this).fadeOut("fast");                 $("div.shout-msg:odd", msgsbox).addClass("shouteven")             } else {                 seen[post] = true             }         })     }     function shoutError(err) {         $("#ShoutCloud-Error").html("&lt;strong&gt;Error!&lt;/strong&gt;" + err).stop().slideDown("fast").delay(4000).slideUp("fast")     } })(jQuery); </code></pre>