<p>I am looking for help.</p>  <p>I have this codepen applied to my page - <a href="http://codepen.io/chriscoyier/pen/YXgWam" rel="nofollow">http://codepen.io/chriscoyier/pen/YXgWam</a>, but i want to start drawing from certain % (lets say 60% of page) and and it /have 100% of svg file drawn) at another % of scroll (lets say 80% of page)</p>  <pre><code>// Get a reference to the &lt;path&gt; var path = document.querySelector('#path'); var path2 = document.querySelector('#path2'); var path3 = document.querySelector('#path3'); // Get length of path... var pathLength = path.getTotalLength(); var path2Length = path2.getTotalLength(); var path3Length = path3.getTotalLength(); // Will make very long dashes (the length of the paths itself) path.style.strokeDasharray = pathLength + ' ' + pathLength; path2.style.strokeDasharray = path2Length + ' ' + path2Length; path3.style.strokeDasharray = path3Length + ' ' + path3Length; // Set offset the dashes so the it appears hidden entirely path.style.strokeDashoffset = pathLength;; path2.style.strokeDashoffset = path2Length; path3.style.strokeDashoffset = path3Length; // Because Jake Archibald says so // https://jakearchibald.com/2013/animated-line-drawing-svg/ path.getBoundingClientRect(); path2.getBoundingClientRect(); path3.getBoundingClientRect(); // When the page scrolls... window.addEventListener("scroll", function(e) {   // What % down is it?    // https://stackoverflow.com/questions/2387136/cross-browser-method-to-determine-vertical-scroll-percentage-in-javascript/2387222#2387222 var scrollPercentage = (document.documentElement.scrollTop document.body.scrollTop) / (document.documentElement.scrollHeight document.documentElement.clientHeight - 0.5); }   // Length to offset the dashes if { var drawLength = pathLength * scrollPercentage; var drawLength2 = path2Length * scrollPercentage; var drawLength3 = path3Length * scrollPercentage; }   // Draw logo in reverse   path.style.strokeDashoffset = pathLength - drawLength; path2.style.strokeDashoffset = path2Length - drawLength2; path3.style.strokeDashoffset = path3Length - drawLength3; // When complete, remove the dash array, otherwise shapes aren't quite sharp // Accounts for fuzzy math if (scrollPercentage &gt;= 0.99) { path.style.strokeDasharray = "none"; } else { path.style.strokeDasharray = pathLength + ' ' + pathLength; }   if (scrollPercentage &gt;= 0.99) { path2.style.strokeDasharray = "none";   } else { path2.style.strokeDasharray = path2Length + ' ' + path2Length;   }   if (scrollPercentage &gt;= 0.99) { path3.style.strokeDasharray = "none";   } else { path3.style.strokeDasharray = path3Length + ' ' + path3Length;   }   // Add  fill to the paths   if (scrollPercentage &gt; 0.99) { path.setAttribute("fill", "#672A7A");   } else { path.setAttribute("fill", "none");   }   if (scrollPercentage &gt; 0.99) { path2.setAttribute("fill", "#672A7A");   } else { path2.setAttribute("fill", "none");   }   } else { path.style.strokeDasharray = pathLength + ' ' + pathLength;   }   if (scrollPercentage &gt;= 0.99) { path2.style.strokeDasharray = "none"; } else { path2.style.strokeDasharray = path2Length + ' ' + path2Length;   }   if (scrollPercentage &gt;= 0.99) { path3.style.strokeDasharray = "none";   } else { path3.style.strokeDasharray = path3Length + ' ' + path3Length;  } </code></pre>  <p>Thank you, Martin</p>