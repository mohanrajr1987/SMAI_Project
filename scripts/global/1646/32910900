<p>Short version: This works</p>  <pre><code>$(document).on("click",".Container",function(){}) </code></pre>  <p>This does not:</p>  <pre><code>$(document).on("scroll",".Container",function(){}) </code></pre>  <p>Long version: I'm sorry but posting a code snippet isn't feasible as it's a complex app-like interface but I'll try to explain the issue to the best of my abilities:</p>  <ul> <li>Mobile responsive website that loads different interfaces depending on screen real-estate.</li> <li>Smallest interface composed of 3 parts - navigation at the top, search at the bottom and content in the middle.</li> <li>Content is mostly loaded during use and not at page load.</li> <li>I need to trigger a function when the content is scrolled, both up and down and on the fly not just past a certain point.</li> <li>I can still scroll, it just doesn't trigger as an event.</li> <li>I've tried everything I've found to no avail, from my short experience and what I've been reading I think it might have to do with how scroll doesn't bubble up the same as click, but I have no idea what I should do or try with that information.</li> <li>While it doesn't seem to influence my problem (removing it doesn't solve the issue) I should disclose that I'm using hammer.js to simulate touch events as it might influence the solution.</li> </ul>  <p>Thanks in advance for all the help.</p>  <p>Beyond this point I'll edit with suggestions that didn't work--</p>  <p>As per @A. Wolff's suggestion and @M.Doye's link I was able to mustered up this solution that triggers the scroll event and works for multiple divs:</p>  <pre><code>document.addEventListener('scroll',function(event){     if(event.target.id==='Container1'){         console.log('scroll #Container1');     }     if(event.target.id==='Container2'){     console.log('scroll #Container2');     }     if(event.target.id==='Container3'){         console.log('scroll #Container3');     } },true); </code></pre>  <p>If you know other solutions post anyway as this might not work for some people.</p>