<p>I am making this website <a href="http://1ne-studio.com/test/" rel="nofollow">DEMO SITE HERE</a></p>  <p>ID:test PASS:2015</p>  <p>and I made navi class change to active when scrolling windows, but for some reason it is not working correctly...</p>  <p>when I slide to the first section, my navigation wont change to active mode until the slide reaches further down.(when viewing in 13inch macbook) and so that misalignment effecting other slides too.</p>  <p><a href="http://i.stack.imgur.com/rYdVx.jpg" rel="nofollow"><img src="http://i.stack.imgur.com/rYdVx.jpg" alt="heres the capture, 1st nav on the right should be active and have darker color"></a> heres the capture, 1st nav on the right should be active and have darker color</p>  <p>Im using this code below to make the navigation change</p>  <pre><code>;(function (d, $) { </code></pre>  <p>var jQdm_adjustContent;</p>  <p>jQdm_adjustContent = function(){</p>  <pre><code>// 初期設定 var prop = {   $window: $(window),   snapTarget: '.column',   snapSpeed: 500,   snapInterval: 500,   transitionSpeed: 1200,   transitionEasing: 'easeInOutBack',   transitionEasingException: 'easeInOutQuint',   mainNavigation: '#mainNavigation',   deferredImage: 'img.deferred',   dataPossessor: [],   currentSelector: '.current' }  function init(){    // スナップ（位置補正）させる要素をキャッシュ   var _$t = $(prop.snapTarget),   _$w = prop.$window;    // ページロード時とリサイズ時に、スナップ要素のサイズをウィンドウサイズに合わせるように設定   _$w.on('load', function(){     setTargetPostion(_$t);     fitWindowScale(_$t);   });   _$w.on('resize', function(){     setTimeout( function() {       setTargetPostion(_$t);       fitWindowScale(_$t);     }, 200);   });   // ページスクロール時に現在地チェック処理へ   _$w.on('scroll', function(){     changeCurrent();   });   // ページ読み込み一定時間後に現在位置確認処理へ   setTimeout( function(){     setTargetPostion(_$t);   }, 100);     // // スナップ対象要素にスナップ機能を付与する   // _$t.windows({   //   snapping: true,   //   snapSpeed: prop.snapSpeed,   //   snapInterval: prop.snapInterval   // });    // ナビゲーションのクリックイベント   $(prop.mainNavigation).find('a').on('click', function(e){     if(typeof e.preventDefault() !== undefined){       e.preventDefault();     }      // リンクの飛び先のキャッシュとイージングを設定     var _href = $(this).attr('href'),     _ease = $(this).parent().index() == 0 ? prop.transitionEasingException : prop.transitionEasing;      // リンク先へアニメーション遷移させる     if(_href &amp;&amp; $(_href).length &gt; 0 ) {       $(_href).animatescroll({         scrollSpeed: prop.transitionSpeed,         easing: _ease       });     }   });    // 画像の遅延読み込み設定   $(prop.deferredImage).lazyload({     threshold : 10,     effect: 'fadeIn',     effectspeed: 1000   });  }  function setTargetPostion(_$t){   prop.dataPossessor = [];   _$t.each(function(){     prop.dataPossessor.push($(this).offset().top);   });   changeCurrent(); }  function changeCurrent(){   var _$w = prop.$window,   _y = _$w.scrollTop() - _$w.height(),   _dp = prop.dataPossessor,   _nav = $(prop.mainNavigation).find('li'),   _cur = replaceString(prop.currentSelector),   i;    for( i = 0; i &lt; _dp.length; i++) {     if( _y &lt; _dp[i]){       _nav.removeClass(_cur).eq(i).addClass(_cur);       return;     }   } }  // 要素をウィンドウワイズにあわせる function fitWindowScale(_$t){   var _w = window.innerWidth,   _h = window.innerHeight,   _$p = _$t.find('.photo');    _$t.css({     height: _h   });    _$p.css({     top: _h / 2 - _$p.height() / 2 + 75   }); }  // 文字列置換処理 function replaceString(_str, _bf, _af, _flg){   var _reg = new RegExp(_bf || '[\\.#]', _flg || '');   return _str ? _str.replace(_reg, _af || '') : false; }  init(); </code></pre>  <p>};</p>  <p>jQdm_adjustContent();</p>  <p>})(document, jQuery);</p>  <p>any fast response will be much appreciated!!! thank you for your time!</p>