<p>I have two linked SQL Servers (2008R2). The remote server contains a table with a huge number of rows. It has to be joined with a local table. In such a situation a good solution is using a <a href="https://msdn.microsoft.com/en-us/library/ms173815.aspx" rel="nofollow"><code>REMOTE</code></a> hint for <code>JOIN</code>.</p>  <p>But there is a restriction for using <code>REMOTE JOIN</code>:</p>  <blockquote>   <p>REMOTE can be used only for INNER JOIN operations.</p> </blockquote>  <p>I want to make a left join operation, but it will be done on the local side and whole HugeRemoteTable will be loaded on the local server:</p>  <pre><code>SELECT HugeRemoteTable.* FROM HugeRemoteTable LEFT JOIN LocalTable      ON HugeRemoteTable.col = LocalTable.id WHERE LocalTable.id IS NULL </code></pre>  <p>Is it possible to rewrite query to join tables on the remote side and load only filtered data?</p>  <p><strong>EDIT1:</strong></p>  <p>I experimented wtih queries and it looks like SQL Server runs query remotely if condition is <code>LocalTable.id IS NULL</code>. The query takes a few time.</p>  <p>But a query with condition <code>LocalTable.id IS NOT NULL</code> takes much more time and obviously runs locally.</p>  <p>The same behavior demonstrate queries with <code>JOIN</code> rewrited as <code>NOT IN</code> or <code>IN</code> (they even have execution plans similar to plans for queries with JOIN).</p>  <p>This query runs very quickly:</p>  <pre><code>SELECT * FROM HugeRemoteTable WHERE col NOT IN (SELECT id FROM LocalTable) </code></pre>  <p>And this one takes a lot of time and generates a lot of requests to remote server (I don't know exactly why, but it looks like local server makes a request per each row from LocalTable):</p>  <pre><code>SELECT * FROM HugeRemoteTable WHERE col IN (SELECT id FROM LocalTable) </code></pre>  <p>Now we are going to <code>OPENQUERY</code>. I've connected my local server as linked server for remote SQL Server (in opposite direction) using alias 'localServer' and started with <code>OPENQUERY</code> in such a way</p>  <pre><code>SELECT * FROM OPENQUERY(remote,'     SELECT * FROM HugeRemoteTable     LEFT JOIN localServer.localTable ON HugeRemoteTable.col=localTable.id      WHERE localTable.id is not null') </code></pre>  <p>it was as fast as query with condition <code>LocalTable.id IS NULL</code></p>  <pre><code>SELECT * FROM OPENQUERY(remote,'     SELECT * FROM HugeRemoteTable     LEFT JOIN localServer.localTable ON HugeRemoteTable.col=localTable.id      WHERE localTable.id is null') </code></pre>  <p>Both queries with OPENQUERY were very fast, but they need two-way linking between servers.</p>  <p>Are there any other solutions?</p>