<p>I'm trying to override <code>UIButton setAttributedTitle:forState:</code> in order to set some default kerning everywhere the subclass is used. This code creates the correct <code>NSAttributedString</code> and works for any UIButtons I've created with Interface Builder:</p>  <pre><code>- (void)setAttributedTitle:(NSAttributedString *)title forState:(UIControlState)state {     NSMutableAttributedString* attributeText = [[[NSAttributedString alloc] initWithAttributedString:title] mutableCopy];     [attributeText addAttributes:@{NSKernAttributeName: @(kDefaultKerning)} range:[attributeText fullRange]];     self.titleLabel.attributedText = attributeText;     [self setNeedsDisplay]; } </code></pre>  <p>But it doesn't work for any of the UIButton subclass that I create in code:</p>  <pre><code>[_myButton setAttributedTitle:attributedString forState:UIControlStateNormal]; </code></pre>  <p>So I tried calling super instead of <code>self.titleLabel.attributedText = attributeText;</code>:</p>  <pre><code>[super setAttributedTitle:title forState:state]; </code></pre>  <p>Which works for the button created in code, but now it doesn't work for the Interface Builder buttons.</p>  <p>Since as far as I know, Interface Builder just calls setAttributedText anyway, what gives? How can I get this override to work for both code-generated buttons and Interface Builder?</p>