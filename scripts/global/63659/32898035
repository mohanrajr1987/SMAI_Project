<p>I have several meshes, with about 5000 vertices each. these are the original vertices and call "verticesA" the problem is that it is delayed to run the following line:</p>  <pre><code>shape[x] = new THREE.Shape (geometry [x] .vertices); // Very slow. </code></pre>  <p>then transformed "shape [x]" in a mesh.</p>  <pre><code>mesh[x] = new THREE.Mesh (shape, new THREE.MeshLambertMaterial ({color: "# FF0000"})); </code></pre>  <p>this is obvious because they are many mesh with many vertices. I have a button in my alplicaci√≥n which generates an algorithm. This algorithm only generates new vertices (I'll call verticesB, these vertices have the same length as the "verticesA"). I want to update the "verticesA" with "verticesB".</p>  <p>how I can update the "verticesA" that figure is in the form of "verticesB".</p>  <p>I'm doing something like this:</p>  <pre><code>//mesh-&gt; is the original (verticesA) http://imgur.com/ympHorb (verticesA)  //geometry[x]-&gt; is a array with the new vertices (verticesB)  //geometry[x] and mesh[x] is the same length of vertices  for (var a in mesh[x].geometry.vertices) {   mesh[x].geometry.vertices[a].x=geometry[x].vertices[a].x;   mesh[x].geometry.vertices[a].y=geometry[x].vertices[a].y; } </code></pre>  <p>In my function "render()", i have:</p>  <pre><code> for (var t in mesh){     mesh[t].geometry.verticesNeedUpdate=true;     mesh[t].geometry.dynamic = true;  }   </code></pre>  <p>this is a map, but after running the above code and is updated but is distorted.the problem is that is not properly updated geometry.</p>  <pre><code>http://imgur.com/qCWoMWe </code></pre>  <p>the map should be this way:</p>  <pre><code>http://imgur.com/MYXzaEd (verticesB) </code></pre>  <p>how I can update the geometry correctly?</p>