<p>I have one parent object3D (windmill ) with four child object3D's (blades). I require that when the user clicks on a child object (blade) the app reports the name of the parent object (windmill).</p>  <p>I use the following recommended construct when creating the child.</p>  <pre><code>childOb.userData.rootObject = parentOb;  </code></pre>  <p>But when I try to clone the child mesh (to make other blades of the windmill) the THREE.js parseObject() function goes into an infinite loop and produces a stack overflow error.  Here is the stack trace:-</p>  <pre><code>THREE.Object3D.toJSON (three_rev_71_20150504.js:8160) THREE.Object3D.clone (three_rev_71_20150504.js:8194) THREE.Mesh.clone (three_rev_71_20150504.js:15637) F_Init_Scene222_Windmill (HADRIAN.html:10247) F_Init_Scene222_Custom_Objects (HADRIAN.html:1857) F_Init_Scene222 (HADRIAN.html:1702) F_Init (HADRIAN.html:426) (anonymous function) (HADRIAN.html:350) </code></pre>  <p>here is the offending line (rev 71, parseObject, Line 8080)</p>  <pre><code>if ( JSON.stringify( object.userData ) !== '{}' ) data.userData = object.userData; </code></pre>  <p>Here is my actual code</p>  <pre><code>        //... First blade         Blade01_grob = new THREE.Mesh( blade_geom, Custom_material );         Blade01_grob.rotation.y = -Math.PI * (1/6); //...blade feather angle.         Windmill_grob.add( Blade01_grob );         Blade01_grob.userData.rootObject = Windmill_grob; &lt;=======          //... Clone extra blade         var Blade02_grob = Blade01_grob.clone();   &lt;==============         Blade02_grob.rotation.x = -Math.PI * 0.5;         Windmill_grob.add( Blade02_grob ); </code></pre>  <p>If I avoid using <em>userData</em> then everything works fine, i.e. I create <em>rootObject</em> as a top-level property of the THREE mesh object:-</p>  <pre><code>Blade01_grob.rootObject = Windmill_grob; </code></pre>  <p>But is this sort of thing ( creating a custom top-level property ) going to cause problems elsewhere in THREE.js? </p>