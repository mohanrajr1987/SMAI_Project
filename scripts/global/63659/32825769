<p>I have an issue regarding the Raycaster model. I understand the idea and the fact that it intersects meshes, which I can transform, but for example, if I create JS objects that have an inner THREE.Object3D that groups meshes (for their UI), how can I know when the corresponding <em>instance</em> of an object is clicked?</p>  <p>Imagine a button. This button has several characteristics and an inner _model that holds it's THREE.js graphical form (let's say a boxGeometry and a textGeometry that build this button). When the button is added to the scene it adds its buttonInstance.getModel() to the scene, and adds itself to a repository of objects to keep a reference to it.</p>  <p>If I wanted to click this button, I create a raycaster and get the intersecting objects from an array of "buttons" (Objects 3D or Meshes that represent this object). </p>  <p>But how do I fire an event or interact with the button instance itself? I have the mesh but can't get the idea on how to link it with the instance itself.</p>  <p>Any clues? I've searched a lot about raycasting in THREE, but all the examples relate to changing colors or positions of meshes. </p>  <pre><code>    _raycaster.setFromCamera(new THREE.Vector2(0,0), _camera);     _activeBtns = _raycaster.intersectObjects(_buttons, true);     _activeBtns[0].object.parent.position.set(curPos.x, curPos.y, curPos.z-.2); // alter position of the Object3D that holds textMesh and BoxMesh </code></pre>  <p>But how do I even know which button is this one that has been 'clicked' if all buttons have two meshes and I dont see a way of idetifying them once they are in the scene?</p>  <p>Thanks</p>  <p>d</p>