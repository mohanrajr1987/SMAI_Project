<p>I have a question on using spring cassandra repository for searching query. I have a table with one partition key and one clustering key together as composite primary key. So in the mapping layer, I create a class for PrimanyKey using @PrimaryKeyClass and @PrimaryKeyColumn, then use @PrimaryKey for the mapping class</p>  <p>the table is created with the following cql</p>  <pre><code>CREATE TABLE user_mobile (phonenum text,memberid uuid,gender text,nickname text,photo timeuuid,PRIMARY KEY (phonenum, memberid)) </code></pre>  <p>I create a class called PK_UserMobile to act as primary key class</p>  <pre><code>@PrimaryKeyClass   public class PK_UserMobile implements Serializable {   @PrimaryKeyColumn(ordinal = 0, type = PrimaryKeyType.PARTITIONED)   private String phoneNum;   @PrimaryKeyColumn(ordinal = 1, type = PrimaryKeyType.CLUSTERED)   private UUID memberId; ...... } </code></pre>  <p>and my mapping class is something like this</p>  <pre><code>@Table("user_mobile") public class UserMobile extends BaseDto {   @PrimaryKey  private PK_UserMobile pk;  ........ } </code></pre>  <p>and it is fine to run cql like "select * from user_mobile where phonenum = 'xxxxxxxxx' ;". So I guess it is fine for search this table with partition key only. When I try to search using spring cassandra repository, seems it require me to provide both phonenum's and memberid's value for searching usage. the following exception is thrown if I only set up the value for phonenum.</p>  <pre><code>"com.datastax.driver.core.exceptions.InvalidQueryException: Invalid null value in condition for column memberid. " </code></pre>  <p>So I wanna know if any special null object should I pass in the clustering key as a searching condition? or should I do it in any other way? Thank you.</p>