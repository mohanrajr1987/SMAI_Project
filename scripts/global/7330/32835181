<p>I'm trying to persist a domain model to a DB without using an ORM just for fun.</p>  <p>It's pretty easy to persist properties, but I'm having hard time persisting a collection.</p>  <p>Let's say I have the following two objects.</p>  <pre><code>class aModel {     private $items = [];      public function __construct($id, $name, array $items = [])     {         $this-&gt;id = $id;         $this-&gt;name = $name;         $this-&gt;items = $items;     }      public function getId()     {         return $this-&gt;id;     }      public function getName()     {         return $this-&gt;name;     }      public function addItem(Item $item)     {         $this-&gt;items[] = $item;     } }  class aDBRepository  {     public function persist(aModel $aModel)     {         $attributes = [             'id' =&gt; $aModel-&gt;getId(),             'name' =&gt; $aModel-&gt;getName()         ];          $this-&gt;table-&gt;insert($attributes);     } } </code></pre>  <p>// Code</p>  <pre><code>$aModel = new aModel("test id", "a name"); $aModel-&gt;addItem(new Item("id", "name")); </code></pre>  <p>When I create a new <strong>aModel</strong> and add a new item to it, how do I detect 'unsaved' items and persist them?</p>  <p>I can only think of adding <strong>isSaved</strong> method in the <strong>Item</strong>  class and loop through <strong>$items</strong> variable in aModel.</p>  <p>Without using reflection, what's the best way? </p>