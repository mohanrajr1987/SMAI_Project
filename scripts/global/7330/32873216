<p>I am trying clone a repository on Android Java but I get an error when I call the method <code>toPath()</code>. Apparently the File object has no <code>toPath()</code> method.</p>  <pre><code>public void gitClone() throws GitAPIException {      // File dir = new File(_ctx.getExternalFilesDir(null) + File.separator + "openshift_files");     Bundle b2 = getIntent().getExtras();     //File localPath = new File(Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS).getAbsolutePath());     final File localPath = new File(getExternalFilesDir(null) + File.separator + getCurrentApp().getName());      Git.cloneRepository()             .setURI(getUrlGit())             .setDirectory(localPath)             .setCredentialsProvider(new UsernamePasswordCredentialsProvider(b2.getString("OPEN_SHIFT_USER"), b2.getString("OPEN_SHIFT_PASSWORD")))             .call();     System.out.println("Success!"); } </code></pre>  <p>This is the stack trace</p>  <pre><code>E/AndroidRuntime: FATAL EXCEPTION: AsyncTask #5 E/AndroidRuntime: Process: com.javier.openshift, PID: 22919 E/AndroidRuntime: java.lang.RuntimeException: An error occured while executing doInBackground() E/AndroidRuntime:     at android.os.AsyncTask$3.done(AsyncTask.java:304) E/AndroidRuntime:     at java.util.concurrent.FutureTask.finishCompletion(FutureTask.java:355) E/AndroidRuntime:     at java.util.concurrent.FutureTask.setException(FutureTask.java:222) E/AndroidRuntime:     at java.util.concurrent.FutureTask.run(FutureTask.java:242) E/AndroidRuntime:     at android.os.AsyncTask$SerialExecutor$1.run(AsyncTask.java:231) E/AndroidRuntime:     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112) E/AndroidRuntime:     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587) E/AndroidRuntime:     at java.lang.Thread.run(Thread.java:818) E/AndroidRuntime:  Caused by: java.lang.NoSuchMethodError: No virtual method toPath()Ljava/nio/file/Path; in class Ljava/io/File; or its super classes (declaration of 'java.io.File' appears in /system/framework/core-libart.jar) E/AndroidRuntime:     at org.eclipse.jgit.util.FileUtil.exists(FileUtil.java:149) E/AndroidRuntime:     at org.eclipse.jgit.util.FS_POSIX.exists(FS_POSIX.java:275) E/AndroidRuntime:     at org.eclipse.jgit.internal.storage.file.ObjectDirectory.exists(ObjectDirectory.java:193) E/AndroidRuntime:     at org.eclipse.jgit.internal.storage.file.FileRepository.&lt;init&gt;(FileRepository.java:207) E/AndroidRuntime:     at org.eclipse.jgit.lib.BaseRepositoryBuilder.build(BaseRepositoryBuilder.java:579) E/AndroidRuntime:     at org.eclipse.jgit.api.InitCommand.call(InitCommand.java:113) E/AndroidRuntime:     at org.eclipse.jgit.api.CloneCommand.init(CloneCommand.java:161) E/AndroidRuntime:     at org.eclipse.jgit.api.CloneCommand.call(CloneCommand.java:132) E/AndroidRuntime:     at com.javier.apps.AppsActivity.gitClone(AppsActivity.java:981) E/AndroidRuntime:     at com.javier.apps.AppsActivity$AsyncTaskCloneRepository.doInBackground(AppsActivity.java:1002) E/AndroidRuntime:     at com.javier.apps.AppsActivity$AsyncTaskCloneRepository.doInBackground(AppsActivity.java:985) E/AndroidRuntime:     at android.os.AsyncTask$2.call(AsyncTask.java:292) E/AndroidRuntime:     at java.util.concurrent.FutureTask.run(FutureTask.java:237) E/AndroidRuntime:     at android.os.AsyncTask$SerialExecutor$1.run(AsyncTask.java:231)  E/AndroidRuntime:     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)  E/AndroidRuntime:     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)  E/AndroidRuntime:     at java.lang.Thread.run(Thread.java:818)  </code></pre>