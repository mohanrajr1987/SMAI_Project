<p>I'm attempting to create a service deployable on karaf that imports a file into a repository. The way my project has been set up is I have a command line class to handle the creation of the command in karaf (by using org.apache.felix.gogo.commands Annotations along with a blueprint.xml file) and the calling of the service, along with a seperate project to handle the implementation of the service.</p>  <p>The command is created in karaf without issue, and I can call it with the respective arguments, yet I always get a null pointer exception when running it due to the import service being null. Running scr:details on the import service and the repository returns this info:</p>  <pre><code>**karaf@root()&gt; scr:details   com.inovexcorp.myproject.service.repository.memory  Component Details   Name                : com.inovexcorp.mmyproject.service.repository.memory   State               : ACTIVE   Properties          :      service.pid=com.inovexcorp.myproject.service.repository.memory.2d2dba73-30e2-4ce8-8dd0-2246bd5628b7     repositorytype=memory     service.factoryPid=com.inovexcorp.myproject.service.repository.memory     component.name=com.inovexcorp.myproject.service.repository.memory     felix.fileinstall.filename=file:/home/zachary/karaf/apache-karaf-4.0.1/etc/com.inovexcorp.myproject.service.repository.memory-cli-rdf-service.cfg     component.id=1     repositoryId=cli-rdf-service  References**  **karaf@root()&gt; scr:details  org.myproject.etl.rdf.importer.impl.RDFImportServiceImpl   Component Details   Name                : org.myproject.etl.rdf.importer.impl.RDFImportServiceImpl   State               : ACTIVE   Properties          :      repository.target=(repositorytype=memory)     component.name=org.myproject.etl.rdf.importer.impl.RDFImportServiceImpl     component.id=2  References   Reference           : repository     State             : satisfied     Multiple          : single     Optional          : mandatory     Policy            : static     Service Reference : Bound Service ID 175 (com.inovexcorp.myproject.service.repository.memory)** </code></pre>  <p>And here are the headers for the CLI and Service Implementation Bundles:</p>  <pre><code>**karaf@root()&gt; headers 294  importer (294)  Bnd-LastModified = 1443035070538  Build-Jdk = 1.7.0_85  Built-By = zachary  Created-By = Apache Maven Bundle Plugin  Manifest-Version = 1.0  Tool = Bnd-1.50.0  Bundle-ManifestVersion = 2  Bundle-Name = importer  Bundle-SymbolicName = importer  Bundle-Version = 0.0.1.SNAPSHOT  Import-Service =      org.myproject.etl.rdf.importer.api.RDFImportService;multiple:=false  Import-Package =      org.apache.felix.gogo.commands;version="[0.10,1)",     org.apache.karaf.shell.console;version="[2.2,3)",     org.myproject.etl.rdf.importer.api;version="[0.0,1)",     org.openrdf.rio;version="[2.7,3)",     org.osgi.service.blueprint;version="[1.0.0,2.0.0)"**   karaf@root()&gt; headers 291  rdf.import (291) ---------------- Bnd-LastModified = 1442862863229 Build-Jdk = 1.7.0_85 Built-By = zachary Created-By = Apache Maven Bundle Plugin Manifest-Version = 1.0 Service-Component = OSGI-INF/org.myproject.etl.rdf.importer.impl.RDFImportServiceImpl.xml Tool = Bnd-1.50.0  Bundle-ManifestVersion = 2 Bundle-Name = rdf.import Bundle-SymbolicName = rdf.import Bundle-Version = 0.0.1.SNAPSHOT  Import-Service =      org.openrdf.repository.Repository  Export-Package =      org.myproject.etl.rdf.importer.api;         uses:=org.openrdf.rio;         version=0.0.1.SNAPSHOT Import-Package =      org.myproject.etl.rdf.importer.api,     org.openrdf.model;version="[2.7,3)",     org.openrdf.model.impl;version="[2.7,3)",     org.openrdf.repository;version="[2.7,3)",     org.openrdf.rio;version="[2.7,3)",     org.osgi.service.component;version="[1.1,2)" </code></pre>  <p>I've been caught up on this issue for awhile, if anyone has any info on what the issue could be it'd be much appreciated!</p>  <p>EDIT: Adding source code for clarification</p>  <p>CLI class:</p>  <pre><code>package org.myproject.cli.importer;  import java.io.File;  import org.apache.felix.gogo.commands.Argument; import org.apache.felix.gogo.commands.Command; import org.apache.karaf.shell.console.OsgiCommandSupport; import org.openrdf.rio.RDFFormat; import org.myproject.etl.rdf.importer.api.RDFImportService;    @Command(scope = "myproject", name = "import", description = "Imports objects to a repository") public class CLIImporter extends OsgiCommandSupport{       private RDFImportService importService;       @Argument(index = 0, name = "repId", description = "The id of the repository the file will be imported to", required = true, multiValued = false)     String repositoryId = null;      @Argument(index = 1, name = "file", description = "The file to be imported into the repository", required = true, multiValued = false)     String file = null;      @Argument(index = 2, name = "continueOnError", description = "Optional: If true, continue parsing even if there is an error on a line.", required = true, multiValued = false)     boolean continueOnError = false;      @Argument(index = 3, name = "fileType", description = "Optional: Specify the file type if the one given is unsupported by Sesame.", required = false, multiValued = false)     String fileType = null;      @Argument(index = 4, name = "help", description = "Optional: If true, display a help menu.", required = false, multiValued = false)     boolean help = false;        public RDFImportService getImportService() {         return importService;     }       public void setImportService(RDFImportService importService) {         this.importService = importService;     }      @Override     protected Object doExecute() throws Exception {          File newFile = new File(file);          System.out.println(repositoryId + " " + file + " " + continueOnError + " " + importService);          if(fileType == null &amp;&amp; help == false){             importService.importFile(repositoryId, newFile, continueOnError);         }         else if(help == false){             importService.importFile(repositoryId, newFile, continueOnError, RDFFormat.forMIMEType(fileType));         }         else if(fileType == null){         //  impService.importFile(repositoryId, file, continueOnError, help);         }         else{         //  impService.importFile(repositoryId, file, continueOnError, fileType, help);         }          return null;     } } </code></pre>  <p>ImportServiceImpl class:</p>  <pre><code>package org.myproject.etl.rdf.importer.impl;  import java.io.File; import java.io.FileNotFoundException; import java.io.IOException;  import org.myproject.etl.rdf.importer.api.RDFImportService; import org.openrdf.model.Resource; import org.openrdf.model.impl.BNodeImpl; import org.openrdf.repository.Repository; import org.openrdf.repository.RepositoryConnection; import org.openrdf.repository.RepositoryException; import org.openrdf.rio.RDFFormat; import org.openrdf.rio.RDFParseException; import org.openrdf.rio.Rio; import org.osgi.service.component.ComponentContext;  import aQute.bnd.annotation.component.Component; import aQute.bnd.annotation.component.Reference;  @Component(provide = RDFImportService.class, immediate=true) public class RDFImportServiceImpl implements RDFImportService{        private Repository repository;      private ComponentContext context;      private RepositoryConnection repConnect;      private Resource resource = new BNodeImpl("string");       @Reference(target="(repositorytype=memory)")     public void setRepository(Repository repository) {         this.repository = repository;     }         public void importFile(String repositoryID,  File file, Boolean cont) {          try {             if (file == null) {                 throw new FileNotFoundException();             }              RDFFormat format = Rio.getParserFormatForFileName(file.getName());               if (format == null) {                 throw new IOException();             }              System.out.println("Repository connecting...");             repConnect = repository.getConnection();              repConnect.add(file, null, format, resource);              System.out.println("Repository set!");             System.out.println(repConnect.isEmpty());              System.out.println("Executing Import command");             System.out.println("Arguments passed: " + repositoryID + " " + file);              } catch (FileNotFoundException e) {             System.out.println("FnF Exception!");             e.printStackTrace();         } catch (IOException e) {             System.out.println("IOException! File type not supported by Sesame.");             e.printStackTrace();         } catch (RepositoryException e) {             System.out.println("Repository Exception!");             e.printStackTrace();         } catch (RDFParseException e) {             System.out.println("RDFParseException! There was an error parsing the RDF file.");             e.printStackTrace();         }      }       public void importFile(String repositoryID,  File file, Boolean cont, RDFFormat format)  {          try {             if (file == null) {                 throw new FileNotFoundException();             }              if (format == null) {                 format = Rio.getParserFormatForFileName(file.getName());                  if(format == null){                     throw new IOException();                 }             }              repConnect = repository.getConnection();              String newURI = "com.inovexcorp.myproject." + repositoryID;              repConnect.add(file, newURI, format);               System.out.println("Repository set!");             System.out.println(repConnect.isEmpty());              System.out.println("Executing Import command");             System.out.println("Arguments passed: " + repositoryID + " " + file);                 repConnect.close();           } catch (FileNotFoundException e) {             System.out.println("FnF Exception!");             e.printStackTrace();         } catch (IOException e) {             System.out.println("IOException! File type not supported by Sesame.");             e.printStackTrace();         } catch (RepositoryException e) {             System.out.println("Repository Exception!");             e.printStackTrace();         } catch (RDFParseException e) {             System.out.println("RDFParseException! There was an error parsing the RDF file.");             e.printStackTrace();         }        }   } </code></pre>  <p>CLI-pom:</p>  <pre><code>&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;project xmlns="http://maven.apache.org/POM/4.0.0"          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"          xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"&gt;     &lt;parent&gt;         &lt;artifactId&gt;parent&lt;/artifactId&gt;         &lt;groupId&gt;org.myproject.cli&lt;/groupId&gt;         &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;     &lt;/parent&gt;     &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;      &lt;artifactId&gt;importer&lt;/artifactId&gt;     &lt;packaging&gt;bundle&lt;/packaging&gt;      &lt;dependencies&gt;         &lt;dependency&gt;             &lt;groupId&gt;junit&lt;/groupId&gt;             &lt;artifactId&gt;junit&lt;/artifactId&gt;             &lt;version&gt;3.8.1&lt;/version&gt;             &lt;scope&gt;test&lt;/scope&gt;         &lt;/dependency&gt;         &lt;dependency&gt;             &lt;groupId&gt;org.apache.karaf.shell&lt;/groupId&gt;             &lt;artifactId&gt;org.apache.karaf.shell.console&lt;/artifactId&gt;             &lt;version&gt;2.2.11&lt;/version&gt;         &lt;/dependency&gt;         &lt;dependency&gt;             &lt;groupId&gt;com.google.guava&lt;/groupId&gt;             &lt;artifactId&gt;guava&lt;/artifactId&gt;             &lt;version&gt;18.0&lt;/version&gt;         &lt;/dependency&gt;         &lt;dependency&gt;             &lt;groupId&gt;org.openrdf.sesame&lt;/groupId&gt;             &lt;artifactId&gt;sesame-runtime-osgi&lt;/artifactId&gt;             &lt;version&gt;2.7.14&lt;/version&gt;         &lt;/dependency&gt;         &lt;dependency&gt;             &lt;groupId&gt;biz.aQute.bnd&lt;/groupId&gt;             &lt;artifactId&gt;bndlib&lt;/artifactId&gt;             &lt;version&gt;2.3.0&lt;/version&gt;             &lt;scope&gt;provided&lt;/scope&gt;         &lt;/dependency&gt;         &lt;dependency&gt;             &lt;groupId&gt;com.google.code.gson&lt;/groupId&gt;             &lt;artifactId&gt;gson&lt;/artifactId&gt;             &lt;version&gt;2.3.1&lt;/version&gt;         &lt;/dependency&gt;         &lt;dependency&gt;             &lt;groupId&gt;log4j&lt;/groupId&gt;             &lt;artifactId&gt;log4j&lt;/artifactId&gt;             &lt;version&gt;1.2.16&lt;/version&gt;         &lt;/dependency&gt;         &lt;dependency&gt;             &lt;groupId&gt;org.apache.commons&lt;/groupId&gt;             &lt;artifactId&gt;commons-collections4&lt;/artifactId&gt;             &lt;version&gt;4.0&lt;/version&gt;         &lt;/dependency&gt;         &lt;dependency&gt;             &lt;groupId&gt;org.openrdf.sesame&lt;/groupId&gt;             &lt;artifactId&gt;sesame-rio-rdfxml&lt;/artifactId&gt;             &lt;version&gt;2.7.14&lt;/version&gt;         &lt;/dependency&gt;         &lt;dependency&gt;             &lt;groupId&gt;org.openrdf.sesame&lt;/groupId&gt;             &lt;artifactId&gt;sesame-rio-turtle&lt;/artifactId&gt;             &lt;version&gt;2.7.14&lt;/version&gt;         &lt;/dependency&gt;          &lt;dependency&gt;             &lt;groupId&gt;javax.ws.rs&lt;/groupId&gt;             &lt;artifactId&gt;javax.ws.rs-api&lt;/artifactId&gt;             &lt;version&gt;2.0&lt;/version&gt;         &lt;/dependency&gt;         &lt;dependency&gt;             &lt;groupId&gt;com.beust&lt;/groupId&gt;             &lt;artifactId&gt;jcommander&lt;/artifactId&gt;             &lt;version&gt;1.48&lt;/version&gt;         &lt;/dependency&gt;          &lt;dependency&gt;             &lt;groupId&gt;org.myproject.etl&lt;/groupId&gt;             &lt;artifactId&gt;rdf.import&lt;/artifactId&gt;             &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;             &lt;type&gt;bundle&lt;/type&gt;         &lt;/dependency&gt;     &lt;/dependencies&gt;      &lt;build&gt;         &lt;plugins&gt;             &lt;plugin&gt;                 &lt;groupId&gt;org.apache.felix&lt;/groupId&gt;                 &lt;artifactId&gt;maven-bundle-plugin&lt;/artifactId&gt;                 &lt;version&gt;2.3.7&lt;/version&gt;                 &lt;extensions&gt;true&lt;/extensions&gt;                 &lt;configuration&gt;                     &lt;instructions&gt;                         &lt;Bundle-SymbolicName&gt;${project.artifactId}&lt;/Bundle-SymbolicName&gt;                         &lt;Bundle-Version&gt;${project.version}&lt;/Bundle-Version&gt;                         &lt;Import-Package&gt;*&lt;/Import-Package&gt;                         &lt;Export-Package&gt;&lt;/Export-Package&gt;                         &lt;Service-Component&gt;*&lt;/Service-Component&gt;                     &lt;/instructions&gt;                 &lt;/configuration&gt;             &lt;/plugin&gt;             &lt;plugin&gt;                 &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;                 &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;                 &lt;version&gt;3.3&lt;/version&gt;             &lt;/plugin&gt;           &lt;/plugins&gt;     &lt;/build&gt;  &lt;/project&gt; </code></pre>  <p>Import-ServiceImpl pom:</p>  <pre><code>&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"     xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"&gt;     &lt;parent&gt;         &lt;artifactId&gt;parent&lt;/artifactId&gt;         &lt;groupId&gt;org.myproject.etl&lt;/groupId&gt;         &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;      &lt;/parent&gt;     &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;     &lt;packaging&gt;bundle&lt;/packaging&gt;      &lt;artifactId&gt;rdf.import&lt;/artifactId&gt;      &lt;dependencies&gt;         &lt;dependency&gt;             &lt;groupId&gt;junit&lt;/groupId&gt;             &lt;artifactId&gt;junit&lt;/artifactId&gt;             &lt;version&gt;3.8.1&lt;/version&gt;             &lt;scope&gt;test&lt;/scope&gt;         &lt;/dependency&gt;         &lt;dependency&gt;             &lt;groupId&gt;org.apache.karaf.shell&lt;/groupId&gt;             &lt;artifactId&gt;org.apache.karaf.shell.console&lt;/artifactId&gt;             &lt;version&gt;2.2.11&lt;/version&gt;         &lt;/dependency&gt;         &lt;dependency&gt;             &lt;groupId&gt;com.google.guava&lt;/groupId&gt;             &lt;artifactId&gt;guava&lt;/artifactId&gt;             &lt;version&gt;18.0&lt;/version&gt;         &lt;/dependency&gt;         &lt;dependency&gt;             &lt;groupId&gt;org.openrdf.sesame&lt;/groupId&gt;             &lt;artifactId&gt;sesame-runtime-osgi&lt;/artifactId&gt;             &lt;version&gt;2.7.14&lt;/version&gt;         &lt;/dependency&gt;         &lt;dependency&gt;             &lt;groupId&gt;biz.aQute.bnd&lt;/groupId&gt;             &lt;artifactId&gt;bndlib&lt;/artifactId&gt;             &lt;version&gt;2.3.0&lt;/version&gt;             &lt;scope&gt;provided&lt;/scope&gt;         &lt;/dependency&gt;         &lt;dependency&gt;             &lt;groupId&gt;com.google.code.gson&lt;/groupId&gt;             &lt;artifactId&gt;gson&lt;/artifactId&gt;             &lt;version&gt;2.3.1&lt;/version&gt;         &lt;/dependency&gt;         &lt;dependency&gt;             &lt;groupId&gt;log4j&lt;/groupId&gt;             &lt;artifactId&gt;log4j&lt;/artifactId&gt;             &lt;version&gt;1.2.16&lt;/version&gt;         &lt;/dependency&gt;         &lt;dependency&gt;             &lt;groupId&gt;org.apache.commons&lt;/groupId&gt;             &lt;artifactId&gt;commons-collections4&lt;/artifactId&gt;             &lt;version&gt;4.0&lt;/version&gt;         &lt;/dependency&gt;         &lt;dependency&gt;             &lt;groupId&gt;org.openrdf.sesame&lt;/groupId&gt;             &lt;artifactId&gt;sesame-rio-rdfxml&lt;/artifactId&gt;             &lt;version&gt;2.7.14&lt;/version&gt;         &lt;/dependency&gt;         &lt;dependency&gt;             &lt;groupId&gt;org.openrdf.sesame&lt;/groupId&gt;             &lt;artifactId&gt;sesame-rio-turtle&lt;/artifactId&gt;             &lt;version&gt;2.7.14&lt;/version&gt;         &lt;/dependency&gt;          &lt;dependency&gt;             &lt;groupId&gt;javax.ws.rs&lt;/groupId&gt;             &lt;artifactId&gt;javax.ws.rs-api&lt;/artifactId&gt;             &lt;version&gt;2.0&lt;/version&gt;         &lt;/dependency&gt;         &lt;dependency&gt;             &lt;groupId&gt;com.beust&lt;/groupId&gt;             &lt;artifactId&gt;jcommander&lt;/artifactId&gt;             &lt;version&gt;1.48&lt;/version&gt;         &lt;/dependency&gt;       &lt;/dependencies&gt;      &lt;build&gt;         &lt;plugins&gt;             &lt;plugin&gt;                 &lt;groupId&gt;org.apache.felix&lt;/groupId&gt;                 &lt;artifactId&gt;maven-bundle-plugin&lt;/artifactId&gt;                 &lt;version&gt;2.3.7&lt;/version&gt;                 &lt;extensions&gt;true&lt;/extensions&gt;                 &lt;configuration&gt;                     &lt;instructions&gt;                         &lt;Bundle-SymbolicName&gt;${project.artifactId}&lt;/Bundle-SymbolicName&gt;                         &lt;Bundle-Version&gt;${project.version}&lt;/Bundle-Version&gt;                         &lt;Import-Package&gt;*&lt;/Import-Package&gt;                         &lt;Export-Package&gt;org.myproject.etl.rdf.importer.api&lt;/Export-Package&gt;                         &lt;Import-Service&gt;org.openrdf.repository.Repository&lt;/Import-Service&gt;                         &lt;Service-Component&gt;*&lt;/Service-Component&gt;                      &lt;/instructions&gt;                 &lt;/configuration&gt;             &lt;/plugin&gt;             &lt;plugin&gt;                 &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;                 &lt;artifactId&gt;maven-dependency-plugin&lt;/artifactId&gt;                 &lt;executions&gt;                     &lt;execution&gt;                         &lt;id&gt;copy-dependencies&lt;/id&gt;                         &lt;phase&gt;package&lt;/phase&gt;                         &lt;goals&gt;                             &lt;goal&gt;copy-dependencies&lt;/goal&gt;                         &lt;/goals&gt;                         &lt;configuration&gt;                             &lt;outputDirectory&gt;${project.parent.build.directory}/index&lt;/outputDirectory&gt;                             &lt;excludeScope&gt;provided&lt;/excludeScope&gt;                         &lt;/configuration&gt;                     &lt;/execution&gt;                     &lt;execution&gt;                         &lt;id&gt;copy&lt;/id&gt;                         &lt;phase&gt;package&lt;/phase&gt;                         &lt;goals&gt;                             &lt;goal&gt;copy&lt;/goal&gt;                         &lt;/goals&gt;                         &lt;configuration&gt;                             &lt;artifactItems&gt;                                 &lt;artifactItem&gt;                                     &lt;groupId&gt;${project.groupId}&lt;/groupId&gt;                                     &lt;artifactId&gt;${project.artifactId}&lt;/artifactId&gt;                                     &lt;version&gt;${project.version}&lt;/version&gt;                                     &lt;type&gt;jar&lt;/type&gt;                                     &lt;outputDirectory&gt;${project.parent.build.directory}/index&lt;/outputDirectory&gt;                                 &lt;/artifactItem&gt;                             &lt;/artifactItems&gt;                         &lt;/configuration&gt;                     &lt;/execution&gt;                 &lt;/executions&gt;             &lt;/plugin&gt;           &lt;/plugins&gt;     &lt;/build&gt;  &lt;/project&gt; </code></pre>  <p>Cli Blueprint.xml:</p>  <pre><code>&lt;blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"&gt;      &lt;command-bundle xmlns="http://karaf.apache.org/xmlns/shell/v1.0.0"&gt;          &lt;command name="myproject/import"&gt;             &lt;action class="org.myproject.cli.importer.CLIImporter" /&gt;         &lt;/command&gt;      &lt;/command-bundle&gt;      &lt;bean id="cliImportService" class="org.myproject.cli.importer.CLIImporter"&gt;         &lt;property name="importService" ref="importServiceBean"/&gt;     &lt;/bean&gt;      &lt;reference id="importServiceBean"         interface="org.myproject.etl.rdf.importer.api.RDFImportService"         availability="mandatory"&gt;     &lt;/reference&gt;  &lt;/blueprint&gt; </code></pre>  <p>When I run my command in karaf, this is the result:</p>  <pre><code>karaf@root()&gt; myproject:import repoId filepath true repoId filepath true null Error executing command: java.lang.NullPointerException </code></pre>  <p>The null on the second line is the null service being printed out. In addition, here are the log:display results from this:</p>  <pre><code>java.lang.NullPointerException     at org.myproject.cli.importer.CLIImporter.doExecute(CLIImporter.java:55)[294:importer:0.0.1.SNAPSHOT]     at org.apache.karaf.shell.console.AbstractAction.execute(AbstractAction.java:34)[44:org.apache.karaf.shell.core:4.0.1]     at org.apache.karaf.shell.console.OsgiCommandSupport.execute(OsgiCommandSupport.java:41)[44:org.apache.karaf.shell.core:4.0.1]     at org.apache.karaf.shell.commands.basic.AbstractCommand.execute(AbstractCommand.java:34)[44:org.apache.karaf.shell.core:4.0.1]     at org.apache.karaf.shell.compat.CommandTracker$1.execute(CommandTracker.java:109)[44:org.apache.karaf.shell.core:4.0.1]     at org.apache.karaf.shell.impl.console.osgi.secured.SecuredCommand.execute(SecuredCommand.java:67)[44:org.apache.karaf.shell.core:4.0.1]     at org.apache.karaf.shell.impl.console.osgi.secured.SecuredCommand.execute(SecuredCommand.java:87)[44:org.apache.karaf.shell.core:4.0.1]     at org.apache.felix.gogo.runtime.Closure.executeCmd(Closure.java:480)[44:org.apache.karaf.shell.core:4.0.1]     at org.apache.felix.gogo.runtime.Closure.executeStatement(Closure.java:406)[44:org.apache.karaf.shell.core:4.0.1]     at org.apache.felix.gogo.runtime.Pipe.run(Pipe.java:108)[44:org.apache.karaf.shell.core:4.0.1]     at org.apache.felix.gogo.runtime.Closure.execute(Closure.java:182)[44:org.apache.karaf.shell.core:4.0.1]     at org.apache.felix.gogo.runtime.Closure.execute(Closure.java:119)[44:org.apache.karaf.shell.core:4.0.1]     at org.apache.felix.gogo.runtime.CommandSessionImpl.execute(CommandSessionImpl.java:94)[44:org.apache.karaf.shell.core:4.0.1]     at org.apache.karaf.shell.impl.console.ConsoleSessionImpl.run(ConsoleSessionImpl.java:267)[44:org.apache.karaf.shell.core:4.0.1]     at java.lang.Thread.run(Thread.java:745)[:1.8.0_60] </code></pre>