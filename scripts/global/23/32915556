<p>In a special request run, I need  to update <code>Locker</code> and <code>Lock</code> tables in a sql server 2012 database, I have the following 2 table definitiions:</p>  <pre><code>CREATE TABLE [dbo].[Locker]( [lockerID] [int] IDENTITY(1,1) NOT NULL, [schoolID] [int] NOT NULL, [number] [varchar](10) NOT NULL,     [lockID] [int] NULL   CONSTRAINT [PK_Locker] PRIMARY KEY NONCLUSTERED  ( [lockerID] ASC )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY =   OFF,      ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 97)  ON    [PRIMARY]  ) ON [PRIMARY]   CREATE TABLE [dbo].[Lock]( [lockID] [int] IDENTITY(1,1) NOT NULL, [schoolID] [int] NOT NULL, [comboSeq] [tinyint] NOT NULL  CONSTRAINT [PK_Lock] PRIMARY KEY NONCLUSTERED  ( [lockID] ASC ) </code></pre>  <p>The <code>Locker</code> table is the main table and the <code>Lock</code> table is the secondary table. I need to add 500 new <code>Locker</code> numbers that the user has given to me to place in the <code>Locker</code> table and is uniquely defined by <code>LockerID</code>. I also need to add 500 new rows to the correspsonding <code>Lock</code> table that is uniquely defined in the <code>Lock</code> table and identified by the <code>lockid</code>. </p>  <p>Since <code>lockid</code> is a key value in the <code>lock</code> table and is uniquely defined in the <code>locker</code> table, I would like to know how to update the <code>lock</code> table with the 500 new rows.  I would then like to take  value of <code>lockid</code> (from <code>lock</code> table for the 500 new rows that were created) and uniquely place those 500 <code>lockids</code> uniquely into the 500 rows that were created for the <code>lock</code> table.</p>  <p>I have sql that looks like the following so far:</p>  <pre><code> declare @SchoolID int = 999   insert into test.dbo.Locker ( [schoolID], [number])      select distinct LKR.schoolID, A.lockerNumber      FROM [InputTable] A     JOIN test.dbo.School SCH        ON A.schoolnumber = SCH.type       and A.schoolnumber =     @SchoolNumber     JOIN test.dbo.Locker LKR        ON SCH.schoolID = LKR.schoolID       AND A.lockerNumber not in (select number                                  from dbo.Locker                                  where schoolID = @SchoolID)     order by LKR.schoolID,  A.lockerNumber  </code></pre>  <p>I am not certain how to complete the rest of the task of placing <code>lockerid</code> uniquely into <code>lock</code> and <code>locker</code> tables? Thus can you either modify the sql that I just listed above and/or come up with some new sql that will show me how to accomplish my goal?</p>