<p>I am using healthcare data and need to identify a patient's number of stays and admit date and leave date in location 'X'. However, the problem is that patients move between different locations and I need to account for the time in between. Sometimes a patient will start in location 'X', move to location 'Y', and then move back to location 'X'. For this scenario, if the stay at location 'Y' is less than or equal to 48 hours, then I need the length of stay to be calculated using the in date of the first stay at location 'X' and the out date of the last stay at location 'X'.</p>  <p>Example data:</p>  <pre><code>PatientID     Location        InDateTime           OutDateTime     1            x            7-9-2003 10:00am     7-9-2003 1:00pm     1            y            7-9-2003 1:00pm      7-10-2003 2:00pm     1            y            7-10-2013 2:00pm     7-10-2003 4:00pm     1            x            7-10-2003 4:00pm     7-13-2003 8:00pm     2            y            7-20-2003 1:00pm     7-21-2003 9:00am     2            x            7-21-2003 9:00am     7-24-2003 8:00am     2            y            7-24-2003 8:00am     7-30-2003 10:00am     2            x            8-4-2003  3:00pm     8-7-2003 11:00am </code></pre>  <p>Desired output:</p>  <pre><code>PatientID      InDateTime           OutDateTime     1          7-9-2003 10:00am     7-13-2003 8:00pm     2          7-21-2003 9:00am     7-24-2003 8:00am     2          8-4-2003 3:00pm      8-7-2003 11:00am </code></pre>  <p>I have tried using case statements, min/max, lag/lead, etc. In the case above, min/max doesn't work because I need to keep two separate visits to location X for PatientID and therefore cannot group on PatientID. Here's one example of a combination of a case/when clause and lag:</p>  <pre><code>When datediff(hh,lag(indatetime) over (partition by patientID order by indatetime),indatetime)&gt;48 then indatetime </code></pre>  <p>The above basically states that when there is a difference of greater than 48 hours from the previous admit location to the current location, then use the date time for the current location. However, this doesn't account for the possibility of 2 or more stays at other locations in between location 'X' (like patientID 1 in the example above).</p>  <p>I know I can't use a for loop in SQL, but I think I need to use something similar. Any thoughts?</p>  <p><strong>Update:</strong> Thanks, shawnt00. Say I've taken out all areas where location='Y'. Now I have:</p>  <pre><code>PatientID     Location        InDateTime           OutDateTime 1            x            7-9-2003 10:00am     7-9-2003 1:00pm 1            x            7-10-2003 4:00pm     7-13-2003 8:00pm 2            x            7-21-2003 9:00am     7-24-2003 8:00am 2            x            8-4-2003  3:00pm     8-7-2003 11:00am </code></pre>  <p>I still need to be able to look at Patient 2 and identify those stays in 'X' as separate stays since there is greater than 48 hours in between the two 'X' stays.</p>