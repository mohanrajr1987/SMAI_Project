<p>For a programming assignment, I am asked to write </p>  <p>"a) A generic constructor that takes no values. This constructor lets you use the account with all the fields set to their default values.</p>  <p>b)  A constructor that takes five inputs. The first is a double and is the interest rate for the account, the second is a int as is the minimum balance for the account, the third is a double and is the overdraft fee for the account, the fourth is a double and is the ATM fee for the account, and the fifth is a double and is the bounced check fee for the account."</p>  <p>I am afraid that my code is redundant and inefficient. I was hoping someone would tell me what is unnecessary and/or if I am missing anything important. How can I create the generic constructor without manually initializing the fields? Also, I'm a bit worried that my second constructor does not initialize any fields besides the 5 listed as parameters.</p>  <pre><code>public class BankAccount {   /*Balance of BankAccount*/   private double balance = 0.00;    /*Minimum balance allowed for BankAccount*/   private int minimumBalance = 0;    /*Interest rate of BankAccount*/   private double interestRate = 0.00;    /*Fee given everytime withdrawal is made via ATM*/   private double ATMFee = 0.00;    /*Amount deducted from balance if there is an overdraft*/   private double overdraftFee = 0.00;    /*Number of withdrawals allowed to be made before fee*/   private int withdrawLimit = 0;    /*Value to be deducted from balance if withdrawal limit is exceeded*/   private double withdrawFee = 0.00;    /*Keeps track of how many withdrawals owner has made*/   private int withdrawCount = 0;    /*Fee for bouncing a check*/   private double bouncedCheckFee = 0.00;    /*Stores interest earned*/   private double interestEarned = 0.00;    /*Whether or not overdraft fee has been charged*/   private boolean overdraftFlag = false;    /*Generic constructor takes no parameters and initializes field values to their default values*/   public BankAccount()   {     this.balance = balance;     this.minimumBalance = minimumBalance;     this.interestRate = interestRate;     this.ATMFee = ATMFee;     this.overdraftFee = overdraftFee;     this.withdrawLimit = withdrawLimit;     this.withdrawFee = withdrawFee;     this.withdrawCount = withdrawCount;     this.bouncedCheckFee = bouncedCheckFee;     this.interestEarned = interestEarned;     this.overdraftFlag = overdraftFlag;   }    /*More specialized constructor takes 5 fields as parameters and initalizes them to their specified values*/   public BankAccount(double interestRate, int minimumBalance, double overdraftFee, double ATMFee, double bouncedCheckFee)   {     this();     this.interestRate = interestRate;     this.minimumBalance = minimumBalance;     this.overdraftFee = overdraftFee;     this.ATMFee = ATMFee;     this.bouncedCheckFee = bouncedCheckFee;   } } </code></pre>  <p>EDIT: Okay I edited my code according to everyone's advice.</p>  <p>Here it is. Is it good now?</p>  <pre><code>public class BankAccount {   /*Balance of BankAccount*/   private double balance = 0.00;    /*Minimum balance allowed for BankAccount*/   private int minimumBalance = 0;    /*Interest rate of BankAccount*/   private double interestRate = 0.00;    /*Fee given everytime withdrawal is made via ATM*/   private double ATMFee = 0.00;    /*Amount deducted from balance if there is an overdraft*/   private double overdraftFee = 0.00;    /*Number of withdrawals allowed to be made before fee*/   private int withdrawLimit = 0;    /*Value to be deducted from balance if withdrawal limit is exceeded*/   private double withdrawFee = 0.00;    /*Keeps track of how many withdrawals owner has made*/   private int withdrawCount = 0;    /*Fee for bouncing a check*/   private double bouncedCheckFee = 0.00;    /*Stores interest earned*/   private double interestEarned = 0.00;    /*Whether or not overdraft fee has been charged*/   private boolean overdraftFlag = false;    /*Generic constructor takes no parameters and initializes field values to their default values*/   public BankAccount()   {   }    /*More specialized constructor takes 5 fields as parameters and initalizes them to their specified values*/   public BankAccount(double interestRate, int minimumBalance, double overdraftFee, double ATMFee, double bouncedCheckFee)   {     this.interestRate = interestRate;     this.minimumBalance = minimumBalance;     this.overdraftFee = overdraftFee;     this.ATMFee = ATMFee;     this.bouncedCheckFee = bouncedCheckFee;   } } </code></pre>