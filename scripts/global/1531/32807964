<p>I'm beginning to develop for a Renesas RZ/A1L microcontroller. Renesas provide an IDE (e2 Studio - a modified version of Eclipse), set up to compile C / C++ with GCC. Everything works fine, but...</p>  <p>If I declare an object in file-scope (outside of any function), its constructor is never called. For instance:</p>  <pre><code>class NewClass { public:     int i;     NewClass() {         i = 4;     } };   NewClass newInstance;  int main(void) {     // My program... } </code></pre>  <p>I can tell that the constructor isn't being called because, using the in-circuit debugging setup supplied by Renesas, I can see that i is never set to 4 (even when I place further references to newInstance and i; I have optimisation switched off too). Sorry I can't do a simple cout of i's value - the code is being run in a microcontroller and I haven't worked out how to do that just yet.</p>  <p>If I instead place the <code>NewClass newInstance;</code> line inside of main(), then the problem goes away.</p>  <p>A further consequence of the problem is that, for inheriting classes, calling a virtual function on one (via a pointer of base-class type) causes a crash - I suspect due to the constructor having not executed and hence not written to memory some indicator of what class the object was.</p>  <p>By what mechanism would such a constructor normally be called? I did some Googling - would it be the ".ctors" list? (<a href="https://gcc.gnu.org/onlinedocs/gccint/Initialization.html" rel="nofollow">https://gcc.gnu.org/onlinedocs/gccint/Initialization.html</a>)</p>  <p>Renesas's "template" C++ project does actually include code to call all of the ctors; however, from looking at my generated .map file for the project, I can see that no ctors are actually present. Does that narrow down the problem - is the GCC compiler not spitting them out when it should be?</p>  <p>Many thanks for your help.</p>