<p>this may be a stupid question but I'm dealingthe first time with multi-inheritance.</p>  <p>Single-inheritance is defined and works like this:</p>  <pre><code>class Canvas3D : public CanvasBase { ... </code></pre>  <p>Here Canvas3D inherits from CanvasBase and therefore the base-constructor has to be called this way on construction:</p>  <pre><code>Canvas3D::Canvas3D(window* parent)          :CanvasBase(parent) { ... </code></pre>  <p>Now Canvas3D needs to inherit from two base classes:</p>  <pre><code>class Canvas3D : public CanvasBase, public GLCanvas { ... </code></pre>  <p>How do I call the base-constructor of GLCanvas when it does not provide a default constructor? These variants do not work:</p>  <pre><code>Canvas3D::Canvas3D(window* parent)          :CanvasBase(parent)          ,GlCanvas(parent) { ...  Canvas3D::Canvas3D(window* parent)          :CanvasBase(parent)          :GlCanvas(parent) { ... </code></pre>