<p>We are using some JavaScript libraries that include the dreaded <code>:focus {outline: none;}</code>. I don't want to mess with the libraries because the next time I upgrade the library, my code will be lost.</p>  <p>For example (alas, not the only such library), FlexSlider has the following code: </p>  <pre><code>.flex-container a:hover,  .flex-slider a:hover,  .flex-container a:focus,  .flex-slider a:focus     { outline: none; }  </code></pre>  <p>I see that there is a post <a href="http://stackoverflow.com/questions/6601697/restore-webkits-css-outline-on-input-field">Restore Webkit's CSS outline on input field</a>, and we in fact use that code. </p>  <pre><code>:focus    { outline: auto 5px -webkit-focus-ring-color; } </code></pre>  <p>However, that leaves our Firefox and IE visitors without outlines. How do I do a cross-browser outline restoration in my CSS file?</p>  <p>I'm thinking I could use jQuery to excise the problematic rule, but that's subject to breaking if they change their library, and won't help visitors who have JavaScript disabled.</p>  <p>I was also thinking I could do:</p>  <pre><code>*:focus   { outline: inherit !important; } </code></pre>  <p>but was wondering if there might be unintended consequences, as in a browser having different outline styles for different tags.</p>  <p>You can see this in action on the <a href="https://www.sfmta.com/" rel="nofollow">San Francisco Municipal Transportation Agency home page</a> in the slider to the right of the dark green area. </p>