<p>I tested this <a href="http://codepen.io/hally9k/pen/PPzWNd" rel="nofollow">codepen example</a> in:</p>  <ul> <li>IE 11 </li> <li>Chrome 45.0.2454.93 m</li> <li>Firefox 40.0.3</li> </ul>  <p>I flipped the duration of the first of the three timeout periods as denoted on the code snippet below between 0, 1 and 2 and noted the outcome in the 3 browsers.</p>  <p>I found a difference and also found that I couldn't explain to myself why that difference existed.</p>  <p>Why is chromes output different?</p>  <p>IE:</p>  <pre><code> 0. 1 2 3   1. 1 1 2  2. 1 1 2 </code></pre>  <p>Firefox:</p>  <pre><code> 0. 1 2 3   1. 1 1 2  2. 1 1 2 </code></pre>  <p>Chrome:</p>  <pre><code> 0. 1 2 3   1. 1 2 3  2. 1 1 2 </code></pre>  <p>Can anyone explain this?</p>  <p>Here is the JS snippet from the code pen</p>  <pre><code>var obj = {   value: 1 }  function displayValueInInputOne(obj) {   document.getElementById('input_1').value = obj.value;   setTimeout(function(){       obj.value++;   }, 0);  // &lt;= switch this zero for a one and then a two... }  function displayValueInInputTwo(obj) {   setTimeout(function(){      document.getElementById('input_2').value = obj.value;      obj.value++;   }, 0);   }  function displayValueInInputThree(obj) {   setTimeout(function(){      document.getElementById('input_3').value = obj.value;   }, 0);  }   (function(theObj){   displayValueInInputOne(theObj);   displayValueInInputTwo(theObj);   displayValueInInputThree(theObj); })(obj) </code></pre>