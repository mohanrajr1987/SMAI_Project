<p>I'm trying to write a code that finds a certain column in an input Excel file and reorganizes it in an output excel file. I've gotten the for loop completed and it works. However, when I try to set up a similar for loop for the next condition it removes the column it had written before in the previous if statement. I can't seem to figure out why this occurs. I had the program print what cellnum, j, i, and data were and it seems that it knows where it should write the data, but it still only prints one column of data in the output file.</p>  <pre><code>import org.apache.poi.hssf.usermodel.HSSFWorkbook; import org.apache.poi.ss.usermodel.Workbook; import org.apache.poi.ss.usermodel.Sheet; import org.apache.poi.ss.usermodel.Row;  import org.apache.poi.ss.usermodel.SheetConditionalFormatting; import org.apache.poi.ss.usermodel.ConditionalFormattingRule; import org.apache.poi.ss.util.CellRangeAddress; import org.apache.poi.ss.usermodel.Cell; import org.apache.poi.ss.usermodel.ComparisonOperator;//compare two different values import org.apache.poi.ss.usermodel.PatternFormatting; import org.apache.poi.ss.usermodel.IndexedColors;   import java.util.Iterator; import java.io.*; import javax.swing.JFileChooser;  public class Reorganizer  { public static void main(String[] args) {     /*File Chooser*/     JFileChooser fileChooser = new JFileChooser();//lets user choose file     int returnValue = fileChooser.showOpenDialog(null);//null bc we don't have parent classes, lets user choose through an open window      if(returnValue == JFileChooser.APPROVE_OPTION)     {         try          {             Workbook wb= new HSSFWorkbook(new FileInputStream(fileChooser.getSelectedFile()));//setting the input file as a workbook             Sheet inputSheet = wb.getSheetAt(0);//the sheet from the input file              Workbook wb1 = new HSSFWorkbook();//creating a new workbook to later be put into the output file             Sheet outputSheet = wb1.createSheet("Sheet 1");//creates new sheet on the output excel file           //first need something to find cell# of the file             Row idRow = inputSheet.getRow(0);             int cellCounter=0;             for(Iterator&lt;Cell&gt; cit = idRow.cellIterator(); cit.hasNext();)//goes down the row, until there is nothing             {                                    Cell cell = cit.next();                 cellCounter++;             }             //finds the number of rows             int rowCounter=0;             for(Iterator&lt;Row&gt; rit = inputSheet.rowIterator();rit.hasNext();)//goes down the column, until there is nothing             {                                    Row row = rit.next();                 rowCounter++;             }               //The first row of the document should be the labeling process             //Set the row(0) and the cells(9)             Row labelRow = outputSheet.createRow(0);             //for loop to make 9 cells with labels             String[] cellValues = new String[]{"Chr","Pos","OR","Subfamily","Cluster","OP6u","OP6d","OP27u","OP27d"};             for(int i=0; i&lt;=9;i++)             {                 Cell labelCells = labelRow.createCell(i);                 if(i&lt;=8)                 {                      labelCells.setCellValue(cellValues[i]);                      for(Iterator&lt;Cell&gt; cit = idRow.cellIterator(); cit.hasNext(); )                         {                             Cell cell = cit.next();                             cell.setCellType(Cell.CELL_TYPE_STRING);                             if(cellValues[i].equals(cell.getStringCellValue()))                             {                                 for(int j=1;j&lt;rowCounter;j++)                                 {                                     int cellnum = cell.getColumnIndex();                                     Cell inputCell = inputSheet.getRow(j).getCell(cellnum);                                     inputCell.setCellType(Cell.CELL_TYPE_STRING);                                     String data = inputCell.getStringCellValue();                                     Cell outputCell = outputSheet.createRow(j).createCell(i);                                     outputCell.setCellValue(data); System.out.println(cellnum);                                     System.out.println(i);                                     System.out.println(j);                                     System.out.println(data);                                   }                             }                         }                 }                  else                  {                      labelCells.setCellValue("");                 }              }         FileOutputStream output = new FileOutputStream("Reorganized.xls");         wb1.write(output);         output.flush();         output.close();         }          catch (FileNotFoundException e)          {             // TODO Auto-generated catch block             e.printStackTrace();         }          catch (IOException e)          {             // TODO Auto-generated catch block             e.printStackTrace();         }         catch(Exception e)         {             e.printStackTrace();         }       }  } </code></pre>  <p>}   </p>