<pre><code>public static void main(String[] args) throws IOException {       FileInputStream is = new FileInputStream("C:\\Users\\salil.kumar\\Downloads\\pricing.xlsx");      XSSFWorkbook wb2=new XSSFWorkbook();     XSSFSheet sh=wb2.createSheet();      StreamingReader reader = StreamingReader.builder()             .rowCacheSize(100)    // number of rows to keep in memory (defaults to 10)             .bufferSize(4096)     // buffer size to use when reading InputStream to file (defaults to 1024)             .sheetIndex(0)        // index of sheet to use (defaults to 0)             .read(is);            // InputStream or File for XLSX file (required)     int i=-1,j=0;     int count=0;     for (Row r : reader){         if(r.getCell(0)==null){             break;                   }         else{             i++;         }         Row row1=sh.createRow(i);         for (Cell c : r) {             Cell cell1 = row1.createCell(j);             // System.out.println(c.getStringCellValue());             cell1.setCellValue(c.getStringCellValue());             j++;             //System.out.println(i+" " +j);         }         j=0;               }       XSSFRow row;      XSSFCell cell;     Iterator rows = sh.rowIterator();     while (rows.hasNext()){         row=(XSSFRow) rows.next();         Iterator cells = row.cellIterator();         while (cells.hasNext())         {             cell=(XSSFCell) cells.next();             if (cell.getCellType() == XSSFCell.CELL_TYPE_STRING){                 System.out.print(cell.getStringCellValue()+" ");             }             else if(cell.getCellType() == XSSFCell.CELL_TYPE_NUMERIC){                 System.out.print(cell.getNumericCellValue()+" ");             }             else{                 //U Can Handel Boolean, Formula, Errors             }         }         System.out.println();     }     is.close();     FileOutputStream out1 = new FileOutputStream("C:\\Users\\salil.kumar\\Downloads\\demotest.xlsx");     XSSFWorkbook wb3=new XSSFWorkbook();     wb3=wb2;     wb3.write(out1);      }    } </code></pre>  <p>Exception in thread "main" java.lang.AbstractMethodError: org.apache.xerces.dom.DocumentImpl.getXmlStandalone()Z     at com.sun.org.apache.xalan.internal.xsltc.trax.DOM2TO.setDocumentInfo(DOM2TO.java:377)     at com.sun.org.apache.xalan.internal.xsltc.trax.DOM2TO.parse(DOM2TO.java:131)     at com.sun.org.apache.xalan.internal.xsltc.trax.DOM2TO.parse(DOM2TO.java:98)     at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transformIdentity(TransformerImpl.java:699)     at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:743)     at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:357)     at org.apache.poi.openxml4j.opc.StreamHelper.saveXmlInStream(StreamHelper.java:80)     at org.apache.poi.openxml4j.opc.internal.marshallers.ZipPartMarshaller.marshallRelationshipPart(ZipPartMarshaller.java:174)     at org.apache.poi.openxml4j.opc.ZipPackage.saveImpl(ZipPackage.java:464)     at org.apache.poi.openxml4j.opc.OPCPackage.save(OPCPackage.java:1425)     at org.apache.poi.POIXMLDocument.write(POIXMLDocument.java:201)     at ApachePoiDemo2.ApachePoiDemo2.ReadXLSX.main(ReadXLSX.java:249)</p>