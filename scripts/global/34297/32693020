<p>This is the code which I am using and I always get the error in the line which shifts the rows.</p>  <p><strong>code :</strong></p>  <pre><code>private void copyRow( int sourceRowNum, int destinationRowNum) {         // Get the source / new row         XSSFRow newRow = Sh_Read1.getRow(destinationRowNum);         XSSFRow sourceRow = Sh_Read1.getRow(sourceRowNum);         int lastrow = Sh_Read1.getLastRowNum();         System.out.println("Last Row Num.."+ lastrow);         // If the row exist in destination, push down all rows by 1 else create a new row         if (newRow != null) {            // Sh_Read1.createRow(4);             Sh_Read1.shiftRows(destinationRowNum, lastrow, 1, true, true);             //Sh_Read1.shiftRows(destinationRowNum, lastrow, 1);         } else {             newRow = Sh_Read1.createRow(destinationRowNum);         }          // Loop through source columns to add to new row         for (int i = 0; i &lt; sourceRow.getLastCellNum(); i++) {             // Grab a copy of the old/new cell             Cell oldCell = sourceRow.getCell(i);             Cell newCell = newRow.createCell(i);              // If the old cell is null jump to next cell             if (oldCell == null) {                 newCell = null;                 continue;             }              // Copy style from old cell and apply to new cell             CellStyle newCellStyle = WB_Test.createCellStyle();             newCellStyle.cloneStyleFrom(oldCell.getCellStyle());             ;             newCell.setCellStyle(newCellStyle);              // If there is a cell comment, copy             if (oldCell.getCellComment() != null) {                 newCell.setCellComment(oldCell.getCellComment());             }              // If there is a cell hyperlink, copy             if (oldCell.getHyperlink() != null) {                 newCell.setHyperlink(oldCell.getHyperlink());             }              // Set the cell data type             newCell.setCellType(oldCell.getCellType());              // Set the cell data value             switch (oldCell.getCellType()) {                 case Cell.CELL_TYPE_BLANK:                     newCell.setCellValue(oldCell.getStringCellValue());                     break;                 case Cell.CELL_TYPE_BOOLEAN:                     newCell.setCellValue(oldCell.getBooleanCellValue());                     break;                 case Cell.CELL_TYPE_ERROR:                     newCell.setCellErrorValue(oldCell.getErrorCellValue());                     break;                 case Cell.CELL_TYPE_FORMULA:                     newCell.setCellFormula(oldCell.getCellFormula());                     break;                 case Cell.CELL_TYPE_NUMERIC:                     newCell.setCellValue(oldCell.getNumericCellValue());                     break;                 case Cell.CELL_TYPE_STRING:                     newCell.setCellValue(oldCell.getRichStringCellValue());                     break;             }         }      } </code></pre>  <p><strong>error :</strong> </p>  <pre><code>Exception in thread "AWT-EventQueue-0" org.apache.poi.ss.formula.FormulaParseException: Specified named range 'LOCAL_YEAR_FORMAT' does not exist in the current workbook.     at org.apache.poi.ss.formula.FormulaParser.parseNonRange(FormulaParser.java:547)    at org.apache.poi.ss.formula.FormulaParser.parseNonRange(FormulaParser.java:547)     at org.apache.poi.ss.formula.FormulaParser.parseRangeable(FormulaParser.java:416)     at org.apache.poi.ss.formula.FormulaParser.parseRangeExpression(FormulaParser.java:237)     at org.apache.poi.ss.formula.FormulaParser.parseSimpleFactor(FormulaParser.java:1126)     at org.apache.poi.ss.formula.FormulaParser.percentFactor(FormulaParser.java:1086)     at org.apache.poi.ss.formula.FormulaParser.powerFactor(FormulaParser.java:1073)     at org.apache.poi.ss.formula.FormulaParser.Term(FormulaParser.java:1433)     at org.apache.poi.ss.formula.FormulaParser.additiveExpression(FormulaParser.java:1533)     at org.apache.poi.ss.formula.FormulaParser.concatExpression(FormulaParser.java:1517)     at org.apache.poi.ss.formula.FormulaParser.comparisonExpression(FormulaParser.java:1474)     at org.apache.poi.ss.formula.FormulaParser.Arguments(FormulaParser.java:1058)     at org.apache.poi.ss.formula.FormulaParser.function(FormulaParser.java:943)     at org.apache.poi.ss.formula.FormulaParser.parseNonRange(FormulaParser.java:536)     at org.apache.poi.ss.formula.FormulaParser.parseRangeable(FormulaParser.java:416)     at org.apache.poi.ss.formula.FormulaParser.parseRangeExpression(FormulaParser.java:237)     at org.apache.poi.ss.formula.FormulaParser.parseSimpleFactor(FormulaParser.java:1126)     at org.apache.poi.ss.formula.FormulaParser.percentFactor(FormulaParser.java:1086)     at org.apache.poi.ss.formula.FormulaParser.powerFactor(FormulaParser.java:1073)     at org.apache.poi.ss.formula.FormulaParser.Term(FormulaParser.java:1433)     at org.apache.poi.ss.formula.FormulaParser.additiveExpression(FormulaParser.java:1533)     at org.apache.poi.ss.formula.FormulaParser.concatExpression(FormulaParser.java:1517)     at org.apache.poi.ss.formula.FormulaParser.comparisonExpression(FormulaParser.java:1474)     at org.apache.poi.ss.formula.FormulaParser.unionExpression(FormulaParser.java:1454)     at org.apache.poi.ss.formula.FormulaParser.parse(FormulaParser.java:1575)     at org.apache.poi.ss.formula.FormulaParser.parse(FormulaParser.java:145)     at org.apache.poi.xssf.usermodel.helpers.XSSFRowShifter.updateNamedRanges(XSSFRowShifter.java:134)     at org.apache.poi.xssf.usermodel.XSSFSheet.shiftRows(XSSFSheet.java:2596)     at ExcelOperations.copyRow(ExcelOperations.java:542)     at ExcelOperations.AddRow(ExcelOperations.java:526)     at GuiTableApp.jButtonAddRowActionPerformed(GuiTableApp.java:815)     at GuiTableApp.access$900(GuiTableApp.java:48)     at GuiTableApp$13.actionPerformed(GuiTableApp.java:581)     at javax.swing.AbstractButton.fireActionPerformed(AbstractButton.java:2022)     at javax.swing.AbstractButton$Handler.actionPerformed(AbstractButton.java:2346)     at javax.swing.DefaultButtonModel.fireActionPerformed(DefaultButtonModel.java:402)     at javax.swing.DefaultButtonModel.setPressed(DefaultButtonModel.java:259)     at javax.swing.plaf.basic.BasicButtonListener.mouseReleased(BasicButtonListener.java:252)     at java.awt.Component.processMouseEvent(Component.java:6525)     at javax.swing.JComponent.processMouseEvent(JComponent.java:3321)     at java.awt.Component.processEvent(Component.java:6290)     at java.awt.Container.processEvent(Container.java:2234)     at java.awt.Component.dispatchEventImpl(Component.java:4881)     at java.awt.Container.dispatchEventImpl(Container.java:2292)     at java.awt.Component.dispatchEvent(Component.java:4703)     at java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4898)     at java.awt.LightweightDispatcher.processMouseEvent(Container.java:4533)     at java.awt.LightweightDispatcher.dispatchEvent(Container.java:4462)     at java.awt.Container.dispatchEventImpl(Container.java:2278)     at java.awt.Window.dispatchEventImpl(Window.java:2739)     at java.awt.Component.dispatchEvent(Component.java:4703)     at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:746)     at java.awt.EventQueue.access$400(EventQueue.java:97)     at java.awt.EventQueue$3.run(EventQueue.java:697)     at java.awt.EventQueue$3.run(EventQueue.java:691)     at java.security.AccessController.doPrivileged(Native Method)     at java.security.ProtectionDomain$1.doIntersectionPrivilege(ProtectionDomain.java:75)     at java.security.ProtectionDomain$1.doIntersectionPrivilege(ProtectionDomain.java:86)     at java.awt.EventQueue$4.run(EventQueue.java:719)     at java.awt.EventQueue$4.run(EventQueue.java:717)     at java.security.AccessController.doPrivileged(Native Method)     at java.security.ProtectionDomain$1.doIntersectionPrivilege(ProtectionDomain.java:75)     at java.awt.EventQueue.dispatchEvent(EventQueue.java:716)     at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:201)     at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:116)     at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:105)     at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)     at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:93)     at java.awt.EventDispatchThread.run(EventDispatchThread.java:82) </code></pre>