<p>I am writing a mrunit test for map reduce in which reducer uses multiple outputs. There were quite a few issues that I was facing..</p>  <ol> <li><p>to add the support for multiple out (<a href="https://issues.apache.org/jira/browse/MRUNIT-13" rel="nofollow">https://issues.apache.org/jira/browse/MRUNIT-13</a>), that I did with:<br> @RunWith(PowerMockRunner.class)<br> @PrepareForTest(CampaignSyncReducer.class)</p></li> <li><p>After that, it was not letting me have "null" as key while writing to context (<a href="https://issues.apache.org/jira/browse/MRUNIT-157" rel="nofollow">https://issues.apache.org/jira/browse/MRUNIT-157</a>), this also I fixed as suggested. </p></li> </ol>  <p>Issue that I am facing now is with the value being passed for context to write. It is throwing me error :</p>  <pre><code>java.lang.IllegalStateException: No applicable class implementing Serialization in conf at io.serializations: class java.lang.String     at com.google.common.base.Preconditions.checkState(Preconditions.java:145)     at org.apache.hadoop.mrunit.internal.io.Serialization.copy(Serialization.java:75)     at org.apache.hadoop.mrunit.internal.io.Serialization.copy(Serialization.java:97)     at org.apache.hadoop.mrunit.internal.output.MockOutputCollector.collect(MockOutputCollector.java:48)     at org.apache.hadoop.mrunit.internal.output.MockMultipleOutputs.write(MockMultipleOutputs.java:79)     at com.sample.MyReducer.reduce(MyReducer.java:66)     at com.sample.MyReducer.reduce(MyReducer.java:29)     at org.apache.hadoop.mapreduce.Reducer.run(Reducer.java:164)     at org.apache.hadoop.mrunit.mapreduce.ReduceDriver.run(ReduceDriver.java:265)     at org.apache.hadoop.mrunit.mapreduce.ReducePhaseRunner.runReduce(ReducePhaseRunner.java:85)     at org.apache.hadoop.mrunit.mapreduce.MapReduceDriver.run(MapReduceDriver.java:249)     at org.apache.hadoop.mrunit.TestDriver.runTest(TestDriver.java:640)     at org.apache.hadoop.mrunit.TestDriver.runTest(TestDriver.java:627). </code></pre>  <p>Below is the code:</p>  <pre><code>if(value2.getSource().equals(value1.getSource())){                 //duplicate scenario where there both the rows are from same source.                 _mos.write(Constants.DUPLICATE, NullWritable.get(), value1.toString(), Constants.DUPLICATE);                 _mos.write(Constants.DUPLICATE, NullWritable.get(), value2.toString(), Constants.DUPLICATE);                                 return;             } </code></pre>  <p>And below is the code to for my MRUnit:</p>  <pre><code>public void testMapReduce() throws IOException{         String dupTest = "1|sampleTest|database";         mapReduceDriver.withInput(new LongWritable(), new Text(dupTest));         mapReduceDriver.withInput(new LongWritable(), new Text(dupTest));         mapReduceDriver.runTest();     } </code></pre>  <p>Any suggestions? Thanks!</p>