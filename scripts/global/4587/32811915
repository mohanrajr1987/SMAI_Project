<p>I am using MultipleOutputs in my Reducer as I want to have separate result file for each key, however, each of the result file is empty though default result file part-r-xxxx is created and contains correct values.</p>  <p>This is my code for JobDriver and Reducer</p>  <p>Main class</p>  <pre><code>public static void main(String[] args) throws Exception {     int currentIteration = 0;     int reducerCount, roundCount;      Configuration conf = createConfiguration(currentIteration);     cleanEnvironment(conf);     Job job = new Job(conf, "cfim");      //Input and output format configuration     job.setMapperClass(TransactionsMapper.class);     job.setReducerClass(PatriciaReducer.class);      job.setInputFormatClass(TransactionInputFormat.class);     job.setMapOutputKeyClass(LongWritable.class);     job.setMapOutputValueClass(Text.class);      job.setOutputKeyClass(Text.class);     job.setOutputValueClass(Text.class);      reducerCount = roundCount = Math.floorDiv(getRoundCount(conf), Integer.parseInt(conf.get(MRConstants.mergeFactorSpecifier)));      FileInputFormat.addInputPath(job, new Path("/home/cloudera/datasets/input"));     Path outputPath = new Path(String.format(MRConstants.outputPathFormat, outputDir, currentIteration));     FileOutputFormat.setOutputPath(job, outputPath);     MultipleOutputs.addNamedOutput(job, "key", TextOutputFormat.class, LongWritable.class, Text.class);      job.waitForCompletion(true); </code></pre>  <p>Reducer class</p>  <pre><code>public class PatriciaReducer extends Reducer&lt;LongWritable, Text, LongWritable, Text&gt; {  private ITreeManager treeManager; private SerializationManager serializationManager; private MultipleOutputs&lt;LongWritable, Text&gt; mos;  @Override  protected void setup(Context context) throws IOException ,InterruptedException {     treeManager = new PatriciaTreeManager();     serializationManager = new SerializationManager();     mos = new MultipleOutputs&lt;LongWritable, Text&gt;(context); }  @Override protected void reduce(LongWritable key, Iterable&lt;Text&gt; items, Context context)         throws IOException, InterruptedException {      Iterator&lt;Text&gt; patriciaIterator = items.iterator();     PatriciaTree tree = new PatriciaTree();      if (patriciaIterator.hasNext()){         Text input = patriciaIterator.next();         tree = serializationManager.deserializePatriciaTree(input.toString());     }      while(patriciaIterator.hasNext()){         Text input = patriciaIterator.next();         PatriciaTree mergeableTree = serializationManager.deserializePatriciaTree(input.toString());         tree = treeManager.mergeTree(tree, mergeableTree, false);     }      Text outputValue = new Text(serializationManager.serializeAsJson(tree));     mos.write("key", key, outputValue, generateOutputPath(key));     context.write(key, outputValue); }  @Override protected void finalize() throws Throwable {     // TODO Auto-generated method stub     super.finalize();     mos.close(); }  private String generateOutputPath(LongWritable key) throws IOException {     String outputPath = String.format("%s-%s", MRConstants.reduceResultValue, key.toString());     return outputPath; }    </code></pre>  <p>}</p>  <p>Am I doing something wrong?</p>