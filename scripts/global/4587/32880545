<p>I currently have 3 text files with the data </p>  <blockquote>   <p>Textfile1<br>   Hello World<br>   Bye World</p>      <p>Textfile2<br>   Hello World<br>   Hello Second</p> </blockquote>  <p>How do I get a result of</p>  <blockquote>   <p>Hello {Textfile1 = 1, Textfile2 =2}<br>   World {Textfile1 = 2, Textfile2 = 1}</p> </blockquote>  <p>Currently I have managed to pass the words from my Map into my Reduce java page. This is where I am stuck at at the moment.</p>  <pre><code>public class Reduce extends Reducer&lt;Text, Text, Text, Text&gt; {     HashMap&lt;Text, Integer&gt;input = new HashMap&lt;Text, Integer&gt;();      public void reduce(Text key, Iterable&lt;Text&gt; values , Context context)     throws IOException, InterruptedException {         int sum = 0;         for(Text val: values){             String word = key.toString();             Text filename;             input.put(val,sum );                 if(//not sure what to write here){                 }             }        context.write(new Text(key), input); } </code></pre>  <p>My mapper code</p>  <pre><code>public class Map extends Mapper&lt;LongWritable, Text, Text, Text&gt; {  private Text file = new Text(); private Text word = new Text(); private String pattern= "^[a-z][a-z0-9]*$";//any lower case letter or number  public void map(LongWritable key, Text value,Context context) throws IOException, InterruptedException {      InputSplit inputSplit = context.getInputSplit();     String fileName = ((FileSplit)inputSplit).getPath().getName();     file.set(fileName);     String line = value.toString();     StringTokenizer tokenizer = new StringTokenizer(line);     while (tokenizer.hasMoreTokens()) {        word.set(tokenizer.nextToken());          String stringWord = word.toString().toLowerCase();         if (stringWord.matches(pattern)){             context.write(new Text(stringWord), new Text(fileName));          }     } } </code></pre>  <p>}</p>  <p>Hope I can get some help</p>