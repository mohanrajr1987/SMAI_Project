<p>First I remove the child <code>UIViewController</code> from the container with</p>  <pre><code>private void removeFromContainer(UIViewController viewController) {     viewController.WillMoveToParentViewController (null);     viewController.View.RemoveFromSuperview ();     viewController.RemoveFromParentViewController ();     viewController.DidMoveToParentViewController (null); } </code></pre>  <p>Then I want to dispose it</p>  <pre><code>private void disposeChild(UIViewController viewController){     if (viewController != null) {         viewController.Dispose();         viewController = null;     } } </code></pre>  <p>If I try this</p>  <pre><code>if (viewController.IsViewLoaded &amp;&amp; viewController.View.Window != null &amp;&amp; viewController.ParentViewController != null) {     // ... } </code></pre>  <p>the app crashes with </p>  <blockquote>   <p><strong>System.ObjectDisposedException</strong>   The object was used after being disposed.</p> </blockquote>  <p>From my standpoint the <em>viewController</em> should be null, but it seems it isn't.</p>  <p>How do I correctly dispose the child view controller?</p>