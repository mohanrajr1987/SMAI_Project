<p>I've used nuget package manager to download <a href="https://www.nuget.org/packages/SQLite.Net-PCL/" rel="nofollow">this package</a> </p>  <p>The example shows:</p>  <pre><code>public class SQLiteFactoryiOS : ISQLiteFactory {     public SQLite.Net.SQLiteConnection CreateConnection(string dbName)     {         var path = System.IO.Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.Personal), dbName);         return new SQLite.Net.SQLiteConnection(new SQLitePlatformIOS(), path);     } } </code></pre>  <p>The issue I am facing is that I can't reference SQLitePlatformIOS. I even found it in the <a href="https://github.com/oysteinkrog/SQLite.Net-PCL/blob/master/src/SQLite.Net.Platform.XamarinIOS/SQLitePlatformIOS.cs" rel="nofollow">source code</a>, but I'm not able to reach the <code>.Platform</code> namespace, thus I'm unable to create a <code>SQLitePlatformIOS</code> object.</p>  <pre><code> using SQLite.Net; //.Platform.XamarinIOS &lt;-- Compiler error if I try to reach this </code></pre>  <p>The project I'm using to reference this is a portable class project, because in the references folder I see .NET Portable Subset.</p>  <p>The structure of the project is </p>  <p>iOS MainProject references Example Portable Project  Example Portable Project references SQLite.Net-PCL</p>  <p>In the Portable Project I have</p>  <pre><code>References      .NET Portable Subset      From Packages           SQLite.Net Packages      SQLite.Net-PCL Data      Repositories            ExampleRepository.cs </code></pre>  <p>My example repository is</p>  <pre><code>using System; using Example.Data.DTO; using Example.Models.Properties;  using SQLite.Net;  namespace Example.Data.Repositories {     public class ExampleRepository(string dbPath)     {         using (var db = new SQLite.Net.SQLiteConnection(new SQLitePlatformIOS() /* Can't reference */, dbPath))         {              db.CreateTable&lt;ExampleDTO&gt;();         }     } } </code></pre>  <p>And I call this class from the iOS project.</p>  <pre><code>partial void SaveObject(NSObject sender) {     var objectToSave = CreateObjectFromView();     var dbPath = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.Personal), "Test.db3");     var repo = new ExampleRepository(dbPath); } </code></pre>