<p>I want to use my <code>CustomCollectionView</code> instead of the default <code>UICollectionView</code> used by <code>UICollectionViewController</code>. How can I override the type of the default property?</p>  <p>I take the <a href="https://developer.xamarin.com/samples/SimpleCollectionView" rel="nofollow">SimpleCollectionView example</a> as base. I tried this</p>  <pre><code>public SimpleCollectionViewController (UICollectionViewLayout layout) : base (layout) {     CollectionView = new CustomCollectionView (View.Frame, layout);     // ... } </code></pre>  <p>but it crashes, because the <code>AnimalCell</code> has not been registered. Then I tried</p>  <pre><code>public override CustomCollectionView CollectionView {     get;     set; } </code></pre>  <p>but it doesn't compile because the overriden member is of type <code>UICollectionView</code>.</p>  <p>How can I override the default <code>UICollectionView</code>, while preserving memory managment, layout, position, size and so on?</p>  <p><strong>Edit:</strong></p>  <p>Now I tried to use the following getter/setter:</p>  <pre><code>public new CustomCollectionView CollectionView {     get {         if (CollectionView == null) {             CollectionView = new CustomCollectionView ();         }         return CollectionView;     }     set {         CollectionView = value;     } } </code></pre>  <p>This is my constructor:</p>  <pre><code>public SimpleCollectionViewController (UICollectionViewLayout layout) : base (layout) {     CollectionView = new CustomCollectionView (View.Frame, layout);     // ... } </code></pre>  <p>Then I wanted to use the following constructor in my <code>CustomCollectionView</code> class:</p>  <pre><code>public CustomCollectionView() : base() { } </code></pre>  <p>But that isn't allowed as can be seen in the <a href="http://developer.xamarin.com/api/type/MonoTouch.UIKit.UICollectionView/#Public_Constructors" rel="nofollow">available constructors</a>. I don't know which constructor is appropriate. The only one which makes sense for me leads to a stack overflow when using this</p>  <pre><code>public new CustomCollectionView CollectionView {     get {         if (CollectionView == null) {             CollectionView = new CustomCollectionView (View.Frame, Layout);         }         return CollectionView;         }     set {         CollectionView = value;     } } </code></pre>  <p><strong>Edit 2:</strong></p>  <p>Now I tried this property declaration</p>  <pre><code>private CustomCollectionView _collectionView; public new CustomCollectionView CollectionView {     get {         if (_collectionView == null) {             _collectionView = new CustomCollectionView (View.Frame, new UICollectionViewFlowLayout());         }         return _collectionView;     }     set {         _collectionView = value;     } } </code></pre>  <p>and in the constructor of <code>SimpleCollectionViewController</code> I do this</p>  <pre><code>CollectionView = new CustomCollectionView (View.Frame, layout); </code></pre>  <p>Again it doesn't work (crashes), because the header wasn't correctly registered, when trying to dequeue it at</p>  <pre><code>var headerView = (Header)collectionView.DequeueReusableSupplementaryView (elementKind, headerId, indexPath); </code></pre>  <p>What I'm doing wrong?</p>