<p>I’m trying to port over some existing WCF extension code into a Xamarin app that is targeting iOs, WinPhone and Android. The code currently lives in a windows desktop app without any problems.</p>  <p>Essentially, all the code does is catch every outgoing WCF service call and appends some http headers, then catches the response and reads any headers which have been returned. This is achieved using a custom behaviour and IClientMessageInspector in code and configured in the app.config in my existing windows desktop app:</p>  <pre><code>  &lt;behaviors&gt;     &lt;endpointBehaviors&gt;       &lt;behavior&gt;         &lt;MyBehavior ConsumerKey="878846DF-2E7B-4165-8542-9F68583DD7D4" ConsumerType="Windows Forms" /&gt;       &lt;/behavior&gt;     &lt;/endpointBehaviors&gt;   &lt;/behaviors&gt;   &lt;extensions&gt;     &lt;behaviorExtensions&gt;       &lt;add name="MyBehavior" type="MyBehavior.Objects.ServiceLayer.WCFExtensions.ConsumerBehaviorElement, MyBehavior.Objects.ForConsumers, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" /&gt;     &lt;/behaviorExtensions&gt;   &lt;/extensions&gt; </code></pre>  <p>Unfortunately, I don’t seem to have an app.config in my Xamarin project so started to look at manually adding the behaviour via code. I have seen lots of examples showing the use of:</p>  <p>myServiceClient.Enpoint.Behaviors.Add(…)</p>  <p>However, I don’t seem to have access to the Behaviors property of my Endpoint (System.ServiceMode.Description.ServiceEndpoint) from the App.cs in my Xamarin app. I only have access to Address, Binding, Contract and Name.</p>  <p>Can anyone point me in the right direction with this. As mentioned above, all I want to do is attach some headers to every WCF service call, and read some headers on the response.</p>  <p>Some more information:</p>  <p>An example of calling my WCF service is as follows:</p>  <pre><code>    private void CallService()     {          MyAuthenticationService.AuthenticationServiceClient _ws = new MyAuthenticationService.AuthenticationServiceClient();          _ws.AuthenticateCompleted += _ws_AuthenticateCompleted;         _ws.AuthenticateAsync(new MyAuthenticationService.AuthenticationRequest1());       }      private void _ws_AuthenticateCompleted(object sender, MyAuthenticationService.AuthenticateCompletedEventArgs e)     {         throw new NotImplementedException();     } </code></pre>  <p>And finally, my Xamarin project is targeting:</p>  <ul> <li>.Net Framework 4.5 </li> <li>Windows 8 </li> <li>Windows Phone Silverlight 8</li> <li>Xamarin.Android </li> <li>Xamarin.iOs </li> <li>Xamarin.iOS (Classic)</li> </ul>  <p>Thanks David</p>