<p>I have a form that allows a user to create a new vendor.  I want the user to enter an ID for the vendor into a textbox but I need to make sure that the ID isn't already taken before creating the vendor.  If the ID is taken, I want a message to appear telling the user that the ID is taken and disable the submit button until a valid ID is entered.</p>  <p>I have a function that pulls the vendor IDs from the database and checks the user-entered ID against a List of IDs already in the database.  It returns a Boolean based on whether or not the user-entered ID is taken.</p>  <p>The problem I'm having is that it will not allow me to call this function within my javascript.  When running the application, it tells me "JavaScript runtime error: 'IsIdTaken' is undefined".  How can I call the function from within my javascript?  Or how can I get the IDs from the database to check them against the ID the user has entered?</p>  <p>Below is my code:</p>  <pre><code>@model EnterpriseServices.Vendor.Vendor  @{     ViewBag.Title = "Add Vendor";     Layout = "~/Views/Shared/_Layout.cshtml"; }  @functions {     public static bool IsIdTaken(string userEnteredId)     {         bool isTaken = false;         List&lt;string&gt; IDs = new List&lt;string&gt;();         var vendors = EnterpriseServices.Vendor.VendorUtility.GetVendorIDandName();          foreach (var v in vendors)         {             IDs.Add(v.Id);         }          if(IDs.Contains(userEnteredId))         {             isTaken = true;         }          return isTaken;     } }  @using (Html.BeginForm())  {     @Html.AntiForgeryToken()      &lt;div class="form-horizontal"&gt;         &lt;h4&gt;Create Vendor&lt;/h4&gt;         &lt;hr /&gt;         @Html.ValidationSummary(true, "", new { @class = "text-danger" })         &lt;div class="form-group"&gt;             @Html.Label("Vendor ID: ", htmlAttributes: new { @class = "control-label col-md-2" })             &lt;div class="col-md-10"&gt;                 @Html.EditorFor(model =&gt; model.Id, new { htmlAttributes = new { @class = "form-control", id = "IdTextBox" } }) &lt;label style="color:red" id="idTaken"&gt;This ID is already taken&lt;/label&gt;                 @Html.ValidationMessageFor(model =&gt; model.Id, "", new { @class = "text-danger" })             &lt;/div&gt;         &lt;/div&gt;          &lt;div class="form-group"&gt;             @Html.Label("Name: ", htmlAttributes: new { @class = "control-label col-md-2" })             &lt;div class="col-md-10"&gt;                 @Html.EditorFor(model =&gt; model.Name, new { htmlAttributes = new { @class = "form-control" } })                 @Html.ValidationMessageFor(model =&gt; model.Name, "", new { @class = "text-danger" })             &lt;/div&gt;         &lt;/div&gt;          &lt;div class="form-group"&gt;             @Html.Label("Notes: ", htmlAttributes: new { @class = "control-label col-md-2" })             &lt;div class="col-md-10"&gt;                 @Html.EditorFor(model =&gt; model.Notes, new { htmlAttributes = new { @class = "form-control" } })                 @Html.ValidationMessageFor(model =&gt; model.Notes, "", new { @class = "text-danger" })             &lt;/div&gt;         &lt;/div&gt;          &lt;div class="form-group"&gt;             @Html.Label("Is Active: ", htmlAttributes: new { @class = "control-label col-md-2"})             &lt;div class="col-md-10"&gt;                 @Html.CheckBoxFor(model =&gt; model.IsActive, new { htmlAttributes = new { @class = "form-control" } })                 @Html.ValidationMessageFor(model =&gt; model.IsActive, "", new { @class = "text-danger"})             &lt;/div&gt;         &lt;/div&gt;          &lt;div class="form-group"&gt;             &lt;div class="col-md-offset-2 col-md-10"&gt;                 &lt;input id="submitButton" type="submit" value="Create" class="btn btn-default" /&gt;             &lt;/div&gt;         &lt;/div&gt;     &lt;/div&gt; }  &lt;div&gt;     @Html.ActionLink("Back to List", "Index") &lt;/div&gt;  &lt;script type="text/javascript" src="jquery-2.1.4.min.js"&gt;&lt;/script&gt; &lt;script type="text/javascript"&gt;     $(document).ready(function () {         $('#idTaken').hide()         $('#IdTextBox').focusout(function () {             var textboxId = $('#IdTextBox').val($(this).val())             if (textboxId != null)             {                 //Check to see if the Vendor ID entered by the user is already being used                 if (IsIdTaken(textboxId.toString()))                 {                     $('#idTaken').show()                     $('#submitButton').disabled()                 }                 else                 {                     $('#idTaken').hide()                     $('#submitButton').enabled()                 }             }         })     }) &lt;/script&gt; </code></pre>