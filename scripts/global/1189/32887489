<p>Normally, code such as:</p>  <pre><code>var x = {}; ... delete x.foo; </code></pre>  <p>should not cause any errors, even if foo is never defined on <code>x</code>.</p>  <p>However, in IE (but not Chrome or Firefox), if <code>delete x.foo;</code> is called from code in a <em>different window</em> than the one <code>x</code> was created in, it throws an "<strong>SCRIPT438: Object doesn't support this property or method</strong>" error if the <code>foo</code> property doesn't exist.  (It works fine if it <em>does</em> exist).</p>  <p>Here's some test code you can save to a HTML file and run yourself:</p>  <pre><code>&lt;!doctype html&gt; &lt;html&gt;   &lt;head&gt;     &lt;title&gt;Window 1&lt;/title&gt;     &lt;script&gt;       var x = {}, win2, d;       function makewindow2()       {         if (win2&amp;&amp;!win2.closed) win2.focus(); else win2 = window.open("", "win2");         d = win2.document;         d.open();         d.write( '&lt;!doctype html&gt;\n'+ '&lt;html&gt;\n' + '  &lt;head&gt;\n' + '    &lt;title&gt;Window 2&lt;/title&gt;\n' + '    &lt;script&gt;\n' + '      var win1 = window.opener, win1x = win1.x;\n' + '    &lt;'+'/script&gt;\n' + '  &lt;/head&gt;\n' + '  &lt;body&gt;\n' + '    This is Window 2\n' + '    &lt;br&gt;&lt;br&gt;\n' + '    &lt;input type="button" onclick="delete win1x.foo;" value="Click to delete property foo from Window 1\'s x object"&gt;\n' + '    &lt;br&gt;&lt;br&gt;\n' + '    &lt;input type="button" onclick="win1x[\'foo\'] = true;" value="Click to set property foo on Window 1\'s x object"&gt;\n' + '  &lt;/body&gt;\n' + '&lt;/html&gt;');         d.close();       }     &lt;/script&gt;   &lt;/head&gt;   &lt;body&gt;     This is window 1     &lt;br&gt;&lt;br&gt;     &lt;input type="button" onclick="makewindow2()" value="Click to create Window 2"&gt;     &lt;br&gt;&lt;br&gt;     &lt;input type="button" onclick="delete x.foo;" value="Click to delete property foo from the x object"&gt;     &lt;br&gt;&lt;br&gt;     &lt;input type="button" onclick="x['foo'] = true;" value="Click to set property foo on the x object"&gt;   &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>(You'll need to click "Allow Blocked Content" for both Window 1 and 2).</p>  <p>You'll note that in Window 1, you can set or delete <code>foo</code> in any order, any number of times.  But in Window 2, if you try deleting it before it's set, or deleting it twice in a row, you'll immediately get an error (in IE 11).</p>  <p>My question is,</p>  <p>(a) What's the underlying cause of this behaviour, and</p>  <p>(b) Is this documented somewhere? ('cause I couldn't find it).</p>  <p>(Also, I though a stackoverflow entry documenting this odd behavior might help out people for whom it may be causing difficult-to-diagnose bugs... :-)  )</p>