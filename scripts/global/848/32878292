<p>I have a Grails application using Spring Security.</p>  <p>This application is basically a content management system, so it is a CRUD.</p>  <p>My URL's access are basically formatted as follows:</p>  <pre><code>/$controller/$action/$id </code></pre>  <p>This is where encounters problems. That occurs in a controller, for example, to change a user I have the following URL:</p>  <pre><code>/user/update/1 </code></pre>  <p>And into the controller I have the following code:</p>  <pre><code>def update(Long id) {     def user = User.get(id);     [user: user] } </code></pre>  <p>That's the problem. If the user change the (id) directly without checking if the user id in request is correct, anyone can surf the users of my system. Now i have a big problem.</p>  <p>The solution that I thought would be to create a unique hash for each registration system, which would hinder the user to understand that, for example, the ID 1 has the hash 123aabbCCDD, for example.</p>  <p>But i have a lot of registers and many domains in the system, and i don't know if this is   the best solution.</p>  <p>I need help to know, for example, using the spring security, I can do this kind of thing.</p>  <p>I tried to find solutions to the issue but I'm not sure by what words to search, so if there is already a question like mine, put the link in comments please.</p>  <p>Thanks.</p>