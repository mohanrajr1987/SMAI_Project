<p>I'm trying to create user form that sends Ajax request to server to log in.</p>  <p>My <code>POST</code> function from Angular looks like this: </p>  <pre><code>$http({     method: 'POST',     url: '/j_spring_security_check',     data: {j_username: credentials.username, j_password: credentials.password},     params: {ajax: true} })     .then(function (data) {         $rootScope.authenticated = false;         callback &amp;&amp; callback();     },     function (error) {         $log.error("Error in login! " + JSON.stringify(error));         $rootScope.authenticated = false;         callback &amp;&amp; callback();     }); </code></pre>  <p>In <code>application.yml</code> I got this configuration for Spring Security:</p>  <pre><code>grails:   plugin:     springsecurity:       userLookup:         userDomainClassName: xxx.LoginUser       rejectIfNoRule: true       fii:         rejectPublicInvocations: false       controllerAnnotations:         staticRules:           [...] </code></pre>  <p>Problem occurs when I invoke my function and request is send to the server. Spring Security does not accept mu <code>j_username</code> and <code>j_password</code> and alway return response with status <code>200</code> and error text <code>{"error":"Sorry, we were not able to find a user with that username and password."}</code></p>  <p>PS  I'm using Spring Security plugin for Grails (3.0.4) <a href="http://grails-plugins.github.io/grails-spring-security-core/guide/index.html" rel="nofollow">http://grails-plugins.github.io/grails-spring-security-core/guide/index.html</a></p>