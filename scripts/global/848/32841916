<p>In my Grails app, I have a domain class with a property of type <code>Map</code> which will be a collection of name-value pairs (all names and values are strings)</p>  <pre><code>class OauthProfile {     String name     // other properties omitted     Map claims } </code></pre>  <p>When I look at the tables generated for this model they look like so:</p>  <pre><code>mysql&gt; describe oauth_profile; +--------------+--------------+------+-----+---------+----------------+ | Field        | Type         | Null | Key | Default | Extra          | +--------------+--------------+------+-----+---------+----------------+ | id           | bigint(20)   | NO   | PRI | NULL    | auto_increment | | version      | bigint(20)   | NO   |     | NULL    |                | | name         | varchar(255) | NO   |     | NULL    |                | +--------------+--------------+------+-----+---------+----------------+  mysql&gt; describe oauth_profile_claims; +------------+--------------+------+-----+---------+-------+ | Field      | Type         | Null | Key | Default | Extra | +------------+--------------+------+-----+---------+-------+ | claims     | bigint(20)   | YES  |     | NULL    |       | | claims_idx | varchar(255) | YES  |     | NULL    |       | | claims_elt | varchar(255) | NO   |     | NULL    |       | +------------+--------------+------+-----+---------+-------+ </code></pre>  <p>A problem with this schema is that at the DB-level there's no relationship between <code>oauth_profile</code> and <code>oauth_profile_claims</code> which means that it's possible to delete a row in <code>oauth_profile</code> without also deleting the associated rows in <code>oauth_profile_claims</code>.</p>  <p>Is there a way to model <code>claims</code> such that there is an explicit relationship between the two tables?</p>