<p>I have a collection of "blocks" that are Three.js (r72) mesh objects (mostly created from extruded shapes)</p>  <p><a href="http://i.stack.imgur.com/RY9Gx.png" rel="nofollow"><img src="http://i.stack.imgur.com/RY9Gx.png" alt="enter image description here"></a></p>  <p>This mesh's bounding box is a <code>1 x 1 x 1</code> cube, the XYZ axis helper is at <code>0,0,0</code>, and after this shape was created it was <strong>added</strong> to the scene at <code>1,1,0</code>. So to clarify, the mesh's <code>0,0,0</code> is at the world <code>1,1,0</code>.</p>  <p>I want to rotate the object around the Z axis (Blue Axis) (e.g. in the XY plane) such that the curved face is facing me.</p>  <p>If I do so, it rotates around the Z axis, specifically at the mesh's origin point and I get this. <a href="http://i.stack.imgur.com/egNVy.png" rel="nofollow"><img src="http://i.stack.imgur.com/egNVy.png" alt="enter image description here"></a></p>  <p>However this is <strong><em>NOT</em></strong> what I want at all.</p>  <p>I want to rotate the mesh around <strong>a</strong> Z-Axis, specifically the one that runs through the <strong>centroid</strong> of my mesh. e.g. an axis formed by the <em>current</em> world co-ordinates <code>1.5,1.5,0</code> to <code>1.5,1.5,1</code>.</p>  <p>Thus the resulting output would be (I had to fake this to get the desired image) <a href="http://i.stack.imgur.com/5Ek0p.png" rel="nofollow"><img src="http://i.stack.imgur.com/5Ek0p.png" alt="enter image description here"></a></p>  <p>I am aware that I can create my initial shape/mesh so that the "insertion point"/origin is actually at the centroid (or bottom center) of my shape and thus this would "solve" my rotation issue but I do not want to do that as it will ruin the ability for me to place the blocks in a simple, logical manner.</p>  <p>I'm OK with whatever option works for this, whether applying a matrix transformation, or rotation.</p>  <p>The only <strong><em>ugly</em></strong> option I could come up with was to:</p>  <ul> <li>Save the <code>orig.x, orig.y, orig.z</code> of the mesh's insertion point</li> <li>Move the mesh to <code>((0,0,0) - (meshCentroid.x, meshCentroid.y, meshCentroid.z))</code></li> <li>Rotate the mesh around the World <code>Z Axis</code></li> <li>Move the mesh back <code>((orig.x, orig.y, orig.z) + (meshCentroid.x, meshCentroid.y, meshCentroid.z))</code></li> </ul>  <p>However this seems like extreme overkill, and won't work if I want to rotate around an arbitrary axis other than the one that passes through the centroid.</p>  <p>I'm aware that there are many similar questions already asked here, but all the one's I've found <strong><em>ruin the position point of the mesh</em></strong> in order to apply the rotation.</p>