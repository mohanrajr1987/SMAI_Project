<p>I have an image in my canvas and am trying to rotate it in an unusual way. I have my image rotating but on the wrong origin point. </p>  <p>I want to rotate the image in such a way that the ellipse is shown to be rotating from it's origin point rather than the image itself rotating. There for ultimately the ellipse would be stationary in the canvas and simply rotating.</p>  <p>This is my current code:</p>  <pre><code>var canvas      = document.getElementById('canvas'),     ctx         = canvas.getContext('2d');  var angle; var toRads      = Math.PI/180;   var start       = new Date().getTime(); var rotation    = 15;   function draw(){     var x         = canvas.width/2 - img.width/2;     var y         = canvas.height/2 - img.height/2;     var deltaTime = new Date().getTime() - start;          start     = new Date().getTime();         angle     = (angle || 0) + (deltaTime/1000 * rotation);      if(angle &gt; 360){angle = 0;}      ctx.clearRect(0,0,canvas.width,canvas.height);          ctx.save();         ctx.translate(x,y);         ctx.rotate(angle * toRads);         ctx.drawImage(img,20,20);         ctx.restore();          setTimeout(draw,1); } </code></pre>  <p>I was wondering if this can be done in 2D or is it only possible via 3D such as webGL stuff?</p>  <p>I created a jsfiddle of what I have got so far: <a href="http://jsfiddle.net/hc0p5e06/" rel="nofollow">http://jsfiddle.net/hc0p5e06/</a></p>