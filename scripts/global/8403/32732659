<p>I checked a lot of other answers on the similar question as mine, but still cannot understand what is wrong there.</p>  <p>I have activity and fragment</p>  <p>main_activity.xml</p>    <pre><code>&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"     xmlns:tools="http://schemas.android.com/tools"     android:layout_width="match_parent"     android:layout_height="match_parent"&gt;      &lt;LinearLayout         android:layout_width="fill_parent"         android:layout_height="fill_parent"         android:orientation="vertical"         android:id="@+id/fragment_container"         android:background="#CCC"/&gt;  &lt;/LinearLayout&gt; </code></pre>  <p>MainActivity.java</p>  <pre class="lang-java prettyprint-override"><code>public class MainActivity extends Activity {      private LinearLayout fragmentContainer;      @Override     protected void onCreate(final Bundle savedInstanceState) {         super.onCreate(savedInstanceState);         Log.d("LOG", "onCreate");         setContentView(R.layout.activity_main);         if (savedInstanceState == null) {             openFragment();         } else {             replaceFragment();         }     }      private void openFragment() {         final LinearLayout ll = new LinearLayout(this);         ll.setOrientation(LinearLayout.HORIZONTAL);         ll.setId(12345);         getFragmentManager().beginTransaction().add(ll.getId(),             new SimpleFragment(), "SimpleFragment").commit();          fragmentContainer = (LinearLayout) findViewById(R.id.fragment_container);         fragmentContainer.addView(ll);     }      private void replaceFragment() {         final LinearLayout ll = new LinearLayout(this);         ll.setOrientation(LinearLayout.HORIZONTAL);         ll.setId(12345);         getFragmentManager().beginTransaction().replace(ll.getId(),             new SimpleFragment(), "SimpleFragment").commit();          fragmentContainer = (LinearLayout) findViewById(R.id.fragment_container);         fragmentContainer.addView(ll);     }      @Override     protected void onDestroy() {         super.onDestroy();         Log.d("LOG", "onDestroy");     } } </code></pre>  <p>And simple fragment</p>  <pre class="lang-xml prettyprint-override"><code>&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"     android:orientation="vertical"     android:layout_width="fill_parent"     android:layout_height="fill_parent"&gt;      &lt;TextView         android:layout_width="wrap_content"         android:layout_height="wrap_content"         android:text="Simple Fragment"/&gt;  &lt;/LinearLayout&gt; </code></pre>  <pre class="lang-java prettyprint-override"><code>public class SimpleFragment extends Fragment {      @Override     public void onCreate(Bundle savedInstanceState) {         super.onCreate(savedInstanceState);                if (savedInstanceState != null) {             String aaa = savedInstanceState.getString("AAA");             Toast.makeText(getActivity(), aaa, Toast.LENGTH_SHORT).show();         } else {             Toast.makeText(getActivity(), "NULL", Toast.LENGTH_SHORT).show();         }         Log.d("LOG", "onCreate");     }      @Override     public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {         Log.d("LOG", "fragment onCreateView");         return inflater.inflate(R.layout.simple_fragment, null);     }      @Override     public void onDestroyView() {         super.onDestroyView();         Log.d("LOG", "fragment onDestroyView");     }      @Override     public void onSaveInstanceState(Bundle outState) {         super.onSaveInstanceState(outState);         outState.putString("AAA", "Hello");     }  } </code></pre>  <p>So what's the problem:</p>  <p>When I rotate device app should save a state and then restore it (lets assume some variables).</p>  <p>Right after rotation <strong>onSaveInstanceState</strong> is executed.  Data is saved.  Then fragment's <strong>onCreate</strong> is executed and data is restored.</p>  <p>Thats OK. And it's expected behaviour.</p>  <p>But then because of activity is recreated as well, fragment should be added (replaced) again. As result fragment's <strong>onCreate</strong> is executed again. And I see fragment without saved data. I see newly created fragment.</p>  <p>How to avoid this creation?</p>  <p>I rotate device, data is saved and then restored. fragment is visible on activity with restored data.</p>  <p>So what is algorithm of adding fragment to the activity, in order not to add it after rotation and avoid recreation?</p>