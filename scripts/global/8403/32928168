<p>I'm using threeVR to make a 360 panorama. It uses mobile device orientation to rotate the camera inside a sphere and also allows the user to manually drag the sphere on touch.</p>  <p>However, when user releases the touch, camera jumps back to device rotation. I want to modify this behavior so that when the user releases the touch, the camera keeps the current rotation around Y axis (but not X and Z).</p>  <p>I do not understand the math of quaternions, but I tried modifying the method updateDeviceMove on <a href="https://github.com/richtr/threeVR/blob/master/js/DeviceOrientationController.js" rel="nofollow">DeviceOrientationController.js</a> to add the following code and it did work for Y axis, but messed Z axis.</p>  <pre><code>// manuallyMoved is a flag that I set to true on touchend event // objQuat is the rotation of the camera after user dragged the view  // deviceQuat is the rotation to be applied, obtained from device orientation values // The code below replaces the line: // this.object.quaternion.copy( deviceQuat );  if( manuallyMoved ) {     objY = rotation.setFromQuaternion( objQuat, 'YXZ' ).y;     realY = rotation.setFromQuaternion( deviceQuat, 'YXZ' ).y;     manQuat = new THREE.Quaternion().setFromAxisAngle( new THREE.Vector3(0,1,0), (objY - realY) );     deviceQuat.multiply( manQuat );     manuallyMoved = false; }else{     this.object.quaternion.slerp( deviceQuat, 0.07 ); } </code></pre>  <p>Since the code messed with Z value, I assume setFromAxisAngle is probably not the way to do it. How can I modify deviceQuat to apply the dragged Y rotation, but allow the camera to use device orientation from there?</p>  <p>Here's a <a href="http://ec2-54-207-23-212.sa-east-1.compute.amazonaws.com/tests/360/" rel="nofollow">link to my demo</a> using a random image. </p>