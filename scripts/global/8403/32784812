<p>I'm having some difficulty getting a simple script to work. The goal is to rotate an array of points about the origin using some angle. However, the code I'm using seems not to maintain the magnitude of the vector.</p>  <p>Im using a array where the first column is x coordinate and the second is y coordinate:</p>  <pre><code>for ii=1:1000     angleRads=rand()*2*pi;     randRotPoints(ii,1)=1*cos(angleRads)-0*sin(angleRads);     randRotPoints(ii,2)=0*cos(angleRads)+1*sin(angleRads); end figure; scatter(randRotPoints(:,1),randRotPoints(:,2)); lengths1=sqrt(randRotPoints(:,1).^2+randRotPoints(:,2).^2);  for ii=1:1000     angleRads=rand()*2*pi;     randRotPoints(ii,1)=randRotPoints(ii,1)*cos(angleRads)-randRotPoints(ii,2)*sin(angleRads);     randRotPoints(ii,2)=randRotPoints(ii,2)*cos(angleRads)+randRotPoints(ii,1)*sin(angleRads); end figure; scatter(randRotPoints(:,1),randRotPoints(:,2)); lengths2=sqrt(randRotPoints(:,1).^2+randRotPoints(:,2).^2); </code></pre>  <p>After the first loop, there is a coordinates of magnitude of 1 and random orientation. This is confirmed via the scatter plot and the lengths1 array is all 1s.</p>  <p><a href="http://i.stack.imgur.com/gxlEg.jpg" rel="nofollow"><img src="http://i.stack.imgur.com/gxlEg.jpg" alt="enter image description here"></a></p>  <p>However, the second loop that attempts to rotate those coordinates by a second random angle results in seemingly randomly located coordinates (based on the scatter plot), and the lengths are no longer all 1.</p>  <p><a href="http://i.stack.imgur.com/lYNAo.jpg" rel="nofollow"><img src="http://i.stack.imgur.com/lYNAo.jpg" alt="enter image description here"></a></p>  <p>Please help me figure out where I've gone wrong with this rotation code. I know that this isn't the most efficient code in terms of performance or number of lines, if you want to provide a better way to do it in terms of efficiency that is fine, but please also state what would be needed to fix the code in its current format as well. </p>  <p>Thanks.</p>