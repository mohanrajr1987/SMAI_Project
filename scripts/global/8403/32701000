<p><br> I am working on camera rotation (NOT Geometry rotation) using kinect v2 sdk 2.0<br>Can anyone please guide me which method would be better to find the vector about which rotation is required OR to use quaternions?<br>And I am getting some weird rotations in my application using this code:<br></p>  <pre><code>double sum = Math.Sqrt(Math.Pow(rotX, 2) + Math.Pow(rotY, 2) + Math.Pow(rotZ, 2)); static double rotX = 0; static double rotY = 0; static double rotZ = 0; static RotateTransform3D trRot = new RotateTransform3D(new AxisAngleRotation3D(new Vector3D(rotX, rotY, rotZ), 0)); if (gesture == GestureRecognition.rotation.ClockwiseYaw) {     myCamera.Transform = trRot;     trRot.Rotation = new AxisAngleRotation3D(new Vector3D(rotX / sum, rotY / sum, -rotZ / sum), rotZ -= 5);     if (rotZ == 360)     {         rotZ = 0;     } } else if (gesture == GestureRecognition.rotation.CounterClockwiseYaw) {     myCamera.Transform = trRot;     trRot.Rotation = new AxisAngleRotation3D(new Vector3D(rotX / sum, rotY / sum, -rotZ / sum), rotZ += 5);     if (rotZ == 360)     {         rotZ = 0;     } } else if (gesture == GestureRecognition.rotation.ClockwisePitch) {     myCamera.Transform = trRot;     trRot.Rotation = new AxisAngleRotation3D(new Vector3D(rotX / sum, -rotY / sum, rotZ / sum), rotY -= 5);     if (rotY == 360)     {         rotY = 0;     } } else if (gesture == GestureRecognition.rotation.CounterClockwisePitch) {     myCamera.Transform = trRot;     trRot.Rotation = new AxisAngleRotation3D(new Vector3D(rotX / sum, -rotY / sum, rotZ / sum), rotY += 5);     if (rotY == 360)     {         rotY = 0;     } } else if (gesture == GestureRecognition.rotation.TiltUp) {     myCamera.Transform = trRot;     trRot.Rotation = new AxisAngleRotation3D(new Vector3D(-rotX / sum, rotY / sum, rotZ / sum), rotX += 5);     if (rotX == 360)     {         rotX = 0;     } } else if (gesture == GestureRecognition.rotation.TiltDown) {     myCamera.Transform = trRot;     trRot.Rotation = new AxisAngleRotation3D(new Vector3D(-rotX / sum, rotY / sum, rotZ / sum), rotX -= 5);     if (rotX == 360)     {         rotX = 0;     } } else if (gesture == GestureRecognition.rotation.NothingRecognized) {     myCamera.Position = new Point3D(myCamera.Position.X, myCamera.Position.Y, myCamera.Position.Z); } </code></pre>