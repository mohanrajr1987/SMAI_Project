<p>I am trying to implement a splay(Node x) method for a Binary Search Tree. I have the leftRotation(Node x) and rightRotation(Node x) methods implemented correctly (atleast, I think they are...), but when I try to implement them in a splay(Node x) method, it calls itself in an infinite loop. Now, I know why it's doing that, but can't seem to figure out how to fix it.</p>  <p>Here is the leftRotation(Node x) method:</p>  <pre><code>public void leftRotation(Node&lt;E&gt; x) {     if (x.getRightChild() == null) {         return;     }      Node&lt;E&gt; y = x.getRightChild();     x.setRightChild(y.getLeftChild());      if (y.getLeftChild() != null) {         y.getLeftChild().setParent(x);     }      y.setParent(x.getParent());      if (x.getParent() == null) {         root = y;     } else {         if (x == x.getParent().getLeftChild()) {             x.getParent().setLeftChild(y);         } else {             x.getParent().setRightChild(y);         }     }      y.setLeftChild(x);     x.setParent(y); } </code></pre>  <p>Here's the rightRotation(Node x) method:</p>  <pre><code>public void rightRotation(Node&lt;E&gt; x) {     if (x.getLeftChild() == null) {         return;     }      Node&lt;E&gt; y = x.getLeftChild();     x.setRightChild(y.getRightChild());      if (y.getRightChild() != null) {         y.getRightChild().setParent(x);     }      y.setParent(x.getParent());      if (x.getParent() == null) {         root = y;     } else {         if (x == x.getParent().getRightChild()) {             x.getParent().setRightChild(y);         } else {             x.getParent().setLeftChild(y);         }     }      x.setRightChild(x);     x.setParent(y); } </code></pre>  <p>And here's the splay(Node x) method:</p>  <pre><code>public void splay(Node&lt;E&gt; x) {     while (x.getParent() != null) {         if (x.isLeftChild &amp;&amp; x.getParent().isLeftChild) {             this.rightRotation(x.getParent());             this.rightRotation(x);         } else if (x.isRightChild &amp;&amp; x.getParent().isRightChild) {             this.leftRotation(x.getParent());             this.leftRotation(x);         } else if (x.isLeftChild &amp;&amp; x.getParent().isRightChild) {             this.rightRotation(x);             this.leftRotation(x);         } else if (x.isRightChild() &amp;&amp; x.getParent().isLeftChild()) {             this.leftRotation(x);             this.rightRotation(x);         } else if (x.isLeftChild &amp;&amp; x.getParent() == root) {             this.rightRotation(x);         } else if (x.isRightChild &amp;&amp; x.getParent() == root) {             this.leftRotation(x);         }     } } </code></pre>  <p>Any ideas on how to fix the infinite loop? It seems to be something to do with it not breaking out of the while(x.getParent() != null) statement in the splay(Node x) method, but when I went through the code using the debugger, the properties of the node seemed to be changing, so I don't really know where it's going wrong?</p>  <p>setLeftChild(Node leftChild) method:</p>  <pre><code>public void setLeftChild(Node&lt;E&gt; leftChild) {         this.leftChild = leftChild;          if (leftChild != null) {             leftChild.setIsRightChild(true);             leftChild.setParent(this);         }     } </code></pre>