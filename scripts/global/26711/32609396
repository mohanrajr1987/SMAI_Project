<p>I have images that are drawn in a UIView, then lines are drawn on them. How can I can save the image with the painted lines to a UIImage object with the same image size it began with, and without losing any image quality?</p>  <p>ie. I have an image of size (3264, 2448). That is drawn in a UIView (size 375, 281) that AspectFit with the image, then a line is painted on the image.  Finally, how can I save the image from the UIView to a UIImage with size (3264, 2448) without losing image quality?</p>  <p>If this is not the best approach, please recommend a better way to accomplish this.</p>  <pre><code>class DrawingView: UIImageView {      private var pts = [CGPoint](count: 5, repeatedValue: CGPoint())     private var ctr: uint!      var lineWidth: CGFloat = 4.0     var lineColor: UIColor = UIColor.darkGrayColor()      required init(coder aDecoder: NSCoder) {         fatalError("init(coder:) has not been implemented")     }      init(frame: CGRect, image: UIImage) {         super.init(frame: frame)         self.image = image         beginDrawingView()    }     private func beginDrawingView() {         userInteractionEnabled = true    }     override func touchesBegan(touches: Set&lt;NSObject&gt;, withEvent event: UIEvent) {         ctr = 0         if let touch = touches.first as? UITouch {             pts[0] = touch.locationInView(self) as CGPoint         }     }      override func touchesMoved(touches: Set&lt;NSObject&gt;, withEvent event: UIEvent) {         if let touch = touches.first as? UITouch {             let p: CGPoint = touch.locationInView(self)             ctr = ctr + 1             pts[Int(ctr)] = p             if ctr == 4 {                 pts[3] = CGPointMake((pts[2].x + pts[4].x)/2.0, (pts[2].y + pts[4].y)/2.0);                   UIGraphicsBeginImageContextWithOptions(bounds.size, false, 0.0)                 let context = UIGraphicsGetCurrentContext()                  image!.drawInRect(CGRect(x: 0, y: 0, width: bounds.width, height: bounds.height))                 CGContextSaveGState(context)                  CGContextSetShouldAntialias(context, true)                 CGContextSetLineCap(context, kCGLineCapRound)                 CGContextSetLineWidth(context, lineWidth)                 CGContextSetStrokeColorWithColor(context, lineColor.CGColor)                  let path = CGPathCreateMutable()                 CGPathMoveToPoint(path, nil, pts[0].x, pts[0].y)                 CGPathAddCurveToPoint(path, nil, pts[1].x, pts[1].y, pts[2].x, pts[2].y, pts[3].x, pts[3].y)                  CGContextSetBlendMode(context, kCGBlendModeNormal)                  CGContextAddPath(context, path)                 CGContextStrokePath(context)                   image = UIGraphicsGetImageFromCurrentImageContext()                 CGContextRestoreGState(context)                 UIGraphicsEndImageContext()                  pts[0] = pts[3]                 pts[1] = pts[4]                 ctr = 1             }         }     }  } </code></pre>