<p>Everything works fine, but i have added some code to save the image to disk, once taken and it doesnt seem to work, Does not give me an error either, any ideas?</p>  <pre><code>func importPicture(action: UIAlertAction! = nil) {      let picker = UIImagePickerController()     picker.allowsEditing = true     picker.sourceType = .Camera     picker.delegate = self     presentViewController(picker, animated: true, completion: nil) }   func imagePickerController(picker: UIImagePickerController, didFinishPickingMediaWithInfo info: [String : AnyObject]) {      let _ = info[UIImagePickerControllerMediaType] as! NSString     var newImage: UIImage      if let possibleImage = info["UIImagePickerControllerEditedImage"] as? UIImage {         newImage = possibleImage     } else if let possibleImage = info["UIImagePickerControllerOriginalImage"] as? UIImage {         newImage = possibleImage     } else {         return     }      let imageName = NSUUID().UUIDString     let imagePath =          getDocumentsDirectory().stringByAppendingPathComponent(imageName)      if let jpegData = UIImageJPEGRepresentation(newImage, 80) {         jpegData.writeToFile(imagePath, atomically: true)      }      dismissViewControllerAnimated(true, completion: nil)      images.insert(newImage, atIndex: 0)     collectionView.reloadData()      if mcSession.connectedPeers.count &gt; 0 {         let imageData = UIImagePNGRepresentation(newImage)         var error: NSError?         do {             try mcSession.sendData(imageData!, toPeers: mcSession.connectedPeers, withMode: .Reliable)         }         catch let error1 as NSError {             error = error1         }          if error != nil {             let ac = UIAlertController(title: "Send error", message:     error!.localizedDescription, preferredStyle: .Alert)             ac.addAction(UIAlertAction(title: "OK", style: .Default, handler: nil))             presentViewController(ac, animated: true, completion: nil)         }     } }  func getDocumentsDirectory() -&gt; NSString {       let paths = NSSearchPathForDirectoriesInDomains(.DocumentDirectory,   .UserDomainMask, true)     let documentsDirectory = paths[0]     return documentsDirectory } </code></pre>