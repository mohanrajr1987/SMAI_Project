<p>I've got a multidimensional array coming from <code>$_POST</code>. Its keys are exactly the same as either columns in the <code>blog_posts</code> table or names of its relations (e.g. <code>author</code>).</p>  <p>I would like to mass assign the $_POST to a matching object and its relations. Example:</p>  <pre><code>$_POST = array (     'blog_post' =&gt; array (         'title' =&gt; 'the title of the post',         'content' =&gt; 'the content of the post',         'date' =&gt; '23-09-2015',         'author' =&gt; array (             'name' =&gt; 'hydra',             'age' =&gt; 47,             'location' =&gt; 'Russia',         ),     ), ); </code></pre>  <p>would be mapped to a <code>blog_post</code> object and a <code>author</code> object.</p>  <p>2 things to keep in mind:</p>  <ul> <li>this is only an example, i've no clue what type of objects i'll be working with;</li> <li>the solution should also be usable with collections of objects</li> </ul>  <p>my current (obviously non-working) solution would involve:</p>  <pre><code>array_walk($_POST, function(value, key){     if (is_array($value) &amp;&amp; class_exists($key)) {         $object = new $key($value);         $object-&gt;save();     } }); </code></pre>  <p>This only saves the first object (<code>blog_post</code>).</p>  <p>Edit: security is not my concern at the moment, i will be sanitizing $_POST before inserting, but the main issue is mass assignment without having to know which class i'm using and assigning relationships by hand.</p>