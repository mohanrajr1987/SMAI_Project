<p>I have the following table setup:</p>  <p>countries (id)</p>  <p>languages (id)</p>  <p>country_languages (id, country_id, language_id)</p>  <p>In plain SQL I can fetch all countries with their corresponding language(s) fairly easily:</p>  <pre><code>SELECT * FROM countries  INNER JOIN country_languages     ON country_languages.country_id = countries.id  INNER JOIN languages     ON languages.id = country_languages.language_id; </code></pre>  <p>In Laravel (5), using the following works:</p>  <p>In Country model:</p>  <pre><code>public function countryLanguages() {     return $this-&gt;hasMany('CountryLanguage'); } </code></pre>  <p>In CountryLanguage Model:</p>  <pre><code>public function language() {     return $this-&gt;belongsTo('Language'); } </code></pre>  <p><code>$countries = Country::with('countryLanguages.language');</code></p>  <p>I'd like have a single relationship method <code>languages</code> however that can be called directly on the <code>Country</code> model. Is this possible? I've tried the <code>hasManyThrough</code> and other methods but so far no luck!</p>