<p>I'm dealing with four different tables. <code>users</code>, <code>activity</code>, <code>feeds</code> and <code>friends</code>.</p>  <p><code>friends</code> is the table where two foreign keys exist from users table (user_id and friend_id).</p>  <p><code>activity</code> is the table where certain activities are hold.</p>  <p><code>feeds</code> is the table that has two foreign keys, subscriber_id (the user's friend's id) and activity_id. When a user posts something, I want to insert records into feeds table to his friends will see his status updates. I hope it's clear so far. So there will be 20 inserts if there are 20 friends of a user.</p>  <p>Of course, I could do something like below, but that's not the "Laravel way".</p>  <pre><code>    $friends = Auth::user()-&gt;friends;     foreach ($friends as $friend) {         $feed = new Feed;         $feed-&gt;subscriber_id = $friend-&gt;id;         $feed-&gt;activity_id = $status-&gt;id;         $feed-&gt;save();     } </code></pre>  <p>friends relation in the User model.</p>  <pre><code>public function friends() {     return $this-&gt;belongsToMany('App\Models\User', 'friends', 'user_id', 'friend_id'); } </code></pre>  <p>Insert in the controller</p>  <pre><code>$status = new Activity; $status-&gt;user_id = Auth::user()-&gt;id; $status-&gt;status = Request::input("text"); $status-&gt;activity_type_id = 1; $result = $status-&gt;save(); // OK, status is saved now.  if($result) {   // insert data into feeds table    $feed = new Feed;    $feed-&gt;subscriber_id = Auth::user()-&gt;friends;    $feed-&gt;activity_id = $status-&gt;id;    $feed-&gt;save(); } </code></pre>  <p>It gives exception.</p>  <pre><code>SQLSTATE[23000]: Integrity constraint violation: 1452 Cannot add or update a child row: a foreign key constraint fails (`testdatabase`.`feeds`, CONSTRAINT `feeds_ibfk_1` FOREIGN KEY (`subscriber_id`) REFERENCES `users` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) (SQL: insert into `feeds` (`subscriber_id`, `activity_id`, `updated_at`, `created_at`) </code></pre>