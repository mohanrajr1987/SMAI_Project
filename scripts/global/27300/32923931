<p>I have a @SessionScoped ManagedBean that I've injected into a @RequestScoped to access the user stored in the session. My code is working I just want to know if I'm using a good practice, if not can you tell me what's wrong please? Because I'm new to JSF and I don't want to learn some bad coding from the beginning, thank you very much in advance.</p>  <p>My Entity Utilisateur :</p>  <pre><code>    @Entity     public class Utilisateur {      @Id     @GeneratedValue( strategy = GenerationType.IDENTITY )     private Long      id;     @NotNull( message = "Veuillez saisir une adresse email" )     @Pattern( regexp = "([^.@]+)(\\.[^.@]+)*@([^.@]+\\.)+([^.@]+)", message = "Merci de saisir une adresse mail valide" )     private String    email;     @Column( name = "mot_de_passe" )     @NotNull( message = "Veuillez saisir un mot de passe" )     @Pattern(regexp = ".*(?=.{8,})(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).*", message = "Le mot de passe saisi n'est pas assez sécurisé")     private String motDePasse;     @NotNull( message = "Veuillez saisir un nom d'utilisateur" )     @Size( min = 3, message = "Le nom d'utilisateur doit contenir au moins 3 caractères" )     private String    nom;     @Column( name = "date_inscription" )     private Timestamp dateInscription; //getters .. setters..     } </code></pre>  <p>My Entity Ferme :</p>  <pre><code>@Entity public class Ferme {      @Id     @GeneratedValue( strategy = GenerationType.IDENTITY )     @Column( name = "id_ferme" )     private Long      id_ferme;     @Column( name = "nom_ferme" )     private String nom_ferme;     @ManyToOne     @JoinColumn( name = "utilisateur_id" )     private Utilisateur utilisateur;  //getters .. setters..  } </code></pre>  <p>My @Statless DAO :</p>  <pre><code>@Stateless public class UtilisateurDao {  @PersistenceContext( unitName = "myBD_PU" )     private EntityManager       em;   public List&lt;Ferme&gt; lister( Utilisateur user) throws DAOException {         try {             TypedQuery&lt;Ferme&gt; query = em.createQuery( "SELECT u FROM Ferme u WHERE u.utilisateur = :userid", Ferme.class );             query.setParameter("userid", user);              return query.getResultList();         } catch ( Exception e ) {             throw new DAOException( e );         }     } } </code></pre>  <p>My LoginBean :</p>  <pre><code>    @ManagedBean     @SessionScoped     public class LoginBean implements Serializable {          private static final long serialVersionUID = 1L;          private String email,mdp;         private Utilisateur user;         private boolean LoggedIn;         @EJB          UtilisateurDao utilisateurDao;           // getters .. setters    public String authentification() {      if (utilisateurDao.login(email, mdp) != null) {         user = utilisateurDao.login(email, mdp);         LoggedIn = true;         return "listeFermes.xhtml?faces-redirect=true";     }     LoggedIn = false;     FacesMessage message = new FacesMessage( "E-mail ou Mot de passe incorrecte!" );     FacesContext.getCurrentInstance().addMessage( null, message );      return ""; }  public String logout() {     FacesContext.getCurrentInstance().getExternalContext().invalidateSession();     return "/login.xhtml?faces-redirect=true"; }      } </code></pre>  <p>My ListeFermesBean :</p>  <pre><code>    @ManagedBean     @RequestScoped     public class ListeFermesBean implements Serializable{          /**          *           */         private static final long serialVersionUID = 1L;          @ManagedProperty(value="#{loginBean}")         private LoginBean loginBean;          @EJB         UtilisateurDao utilisateurDao;          private Utilisateur user;         private List&lt;Ferme&gt; liste;  public List&lt;Ferme&gt; getListe() {         liste = new ArrayList&lt;Ferme&gt;();         user = loginBean.getUser();         return  liste = utilisateurDao.lister(user);     }     } </code></pre>  <p>Login.xhtml :</p>  <pre><code>&lt;!DOCTYPE html&gt; &lt;html xmlns="http://www.w3.org/1999/xhtml" xmlns:f="http://java.sun.com/jsf/core" xmlns:h="http://java.sun.com/jsf/html"&gt;      ...     ...       &lt;h:form id="Login"&gt;          &lt;fieldset&gt;             &lt;legend&gt;Login&lt;/legend&gt;             &lt;h:outputLabel for="email"&gt;Adresse email &lt;span class="requis"&gt;*&lt;/span&gt;&lt;/h:outputLabel&gt;             &lt;h:inputText id="email" value="#{loginBean.email}" size="20" maxlength="60"&gt;             &lt;/h:inputText&gt;             &lt;h:message id="emailMessage" for="email" errorClass="erreur" /&gt;             &lt;br /&gt;              &lt;h:outputLabel for="motdepasse"&gt;Mot de passe &lt;span class="requis"&gt;*&lt;/span&gt;&lt;/h:outputLabel&gt;             &lt;h:inputSecret id="motdepasse" value="#{loginBean.mdp}" size="20" maxlength="20"&gt;             &lt;/h:inputSecret&gt;             &lt;h:message id="motDePasseMessage" for="motdepasse" errorClass="erreur" /&gt;             &lt;br /&gt;              &lt;h:messages globalOnly="true" infoClass="erreur" /&gt;              &lt;h:commandButton value="Login" action="#{loginBean.authentification}" styleClass="sansLabel"&gt;             &lt;/h:commandButton&gt;             &lt;br /&gt;             &lt;h:commandButton value="Logout" action="#{loginBean.logout}" styleClass="sansLabel" /&gt;             &lt;br /&gt;             &lt;h:link value="Inscrivez-vous" outcome="inscription" /&gt;              &lt;/fieldset&gt;         &lt;/h:form&gt;        &lt;/h:body&gt; &lt;/html&gt; </code></pre>  <p>And finally the <code>listeFermes.xhtml</code> page which displays the List from <code>listeFermesBean</code> by User id stored in the object <code>User</code> in the session.</p>  <pre><code>&lt;!DOCTYPE html&gt; &lt;html lang="fr"     xmlns="http://www.w3.org/1999/xhtml"     xmlns:f="http://java.sun.com/jsf/core"     xmlns:h="http://java.sun.com/jsf/html"     xmlns:ui="http://java.sun.com/jsf/facelets"     xmlns:c="http://java.sun.com/jstl/core"&gt;     &lt;h:head&gt;         &lt;title&gt;SUCCES&lt;/title&gt;     &lt;/h:head&gt;     &lt;h:body&gt;          &lt;ui:fragment rendered= "#{!loginBean.loggedIn}"&gt;         Not logged !         &lt;/ui:fragment&gt;         &lt;ui:fragment rendered= "#{loginBean.loggedIn}"&gt;         Welcome : #{loginBean.user.nom} &lt;br /&gt;         E-mail : #{loginBean.user.email} &lt;br /&gt;          &lt;table border="1"&gt;         &lt;tr&gt;             &lt;td&gt;Nom Ferme&lt;/td&gt;             &lt;td&gt;Nom User&lt;/td&gt;             &lt;td&gt;ID User&lt;/td&gt;         &lt;/tr&gt;         &lt;c:forEach items="#{ listeFermesBean.liste }" var="x"&gt;         &lt;tr&gt;             &lt;td&gt;#{x.nom_ferme}&lt;/td&gt;             &lt;td&gt;#{x.utilisateur.nom}&lt;/td&gt;             &lt;td&gt;#{x.utilisateur.id}&lt;/td&gt;         &lt;/tr&gt;         &lt;/c:forEach&gt;               &lt;/table&gt;         &lt;/ui:fragment&gt;      &lt;/h:body&gt; &lt;/html&gt; </code></pre>