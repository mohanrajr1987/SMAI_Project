<p>I'm trying to render PDF document with PhantomJS and send to user but without creating any files in the process. The reason for that is security, if I don't store any files there is nothing to be stolen. What I tried to do is to instead of running "page.render(filePath, cb)" I do "page.renderBase64('PNG', cb)" and that would be fine except all footers and headers with page num etc are gone (when I just render PDF file they are there)</p>  <p>Is there some way to make those footers/headers render or to accomplish my task differently?</p>  <p>EDIT: Sorry, I've posted this question at around 5am my time after hours of fight and I simply forgot to add code which I guess might be useful. Code commented out works perfectly fine and generates the file that I would expect with footers and headers. My version of PhantomJS is 2.0.0</p>  <pre><code>return P.coroutine(function* () {   var result = yield getPhantom();   result.page.set('content', template);    var options = {     format: 'Letter',     paperSize: {width: '215.9mm', height: '279.4mm'},     margin: {       left: '25.4mm',       right: '25.4mm',       top: '25.4mm',       bottom: '25.4mm'     }   };    if (document.metadata &amp;&amp; document.metadata.enableHeader) {     options.header = {       height: '30px',       contents: result.ph.callback(function (pageNum, numPages) {         return '&lt;div style="pull-right; font-size: 10px;"&gt;Page ' + pageNum + ' of ' + numPages + '&lt;/div&gt;';       })     }   }   if (document.metadata &amp;&amp; document.metadata.enableFooter) {     var footerTemplate = document.footer ?       document.footer : yield fs.readFile(path.join(templatesPath, 'footer.hbs'), 'utf8');     var footer = Handlebars.compile(footerTemplate)({       data: data,       metadata: document.metadata     });     var returnFooter = new Function('pageNum', 'numPages', `return '${footer.replace(/(\r\n|\n|\r)/gm, '')}'`);     options.footer = {       height: document.metadata.footerHeight || '120px',       contents: result.ph.callback(returnFooter)     }   }    result.page.set('paperSize', options);    //var filePath = path.join(tmpPath, fileService.randomName() + '.pdf');    var base64 = yield P.fromNode((cb) =&gt; result.page.renderBase64('PNG', cb.bind(null, null)));   //yield P.fromNode(function (cb) {   //  result.page.render(filePath, cb);   //});   result.ph.exit();   return base64;   //return filePath; })(); } </code></pre>