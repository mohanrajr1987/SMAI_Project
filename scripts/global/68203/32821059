<p>I'm using slimerjs to render some html files. Each file contains a JSON string that gets loaded with a call to </p>  <pre><code>fabricjsCanvas.loadFromJson(jsonString, fabricjsCanvas.renderAll.bind(fabricjsCanvas)); </code></pre>  <p>This is where I open my page </p>  <pre><code>page.open(address, function (status) {     if (status !== 'success') {         console.log('Unable to load the page!');         phantom.exit(1);     } else {         page.render(output);         window.setTimeout(function () {             page.render(output);             phantom.exit();         }, 5000);     } }); </code></pre>  <p>As you can see I had to set a timeout after which slimerjs closes the page saving what's on it. I really don't like this solution, coz I need to render multiple pages, some of them are very small, and could take less than 200 milliseconds, others are huge and could take more than 5000, so this is just bad for perfomances and isn't even a "safe solution" against page taking a long time to render. I tryid putting a console.log at the end of canvas.renderAll call and then add this piece of code to my slimerjs script</p>  <pre><code> page.onConsoleMessage = function (msg) {     console.log(msg);     page.render(output);     phantom.exit(); };page.open(address, function (status) {     if (status !== 'success') {         console.log('Unable to load the address!');         phantom.exit(1);     } }); </code></pre>  <p>I hoped that this would have helped but nothing really changed, the reanderAll finishes before all objects are displayed.  Is there some event I can catch, or something else I can do to prevent this? </p>