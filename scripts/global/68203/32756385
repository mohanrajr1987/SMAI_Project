<p>Here is my setup.</p>  <ul> <li>I have a grunt task that does 2 things: 1) start a http server listening on some port 2) triggers another grunt task</li> <li>The grunt task triggered above is a testem task that runs tests on <code>test-index.html</code> page in PhantomJS.</li> <li>The <code>test-index.html</code> page sends a POST call on the port on which I start a server in the first grunt task.</li> </ul>  <p>Issue: The POST call doesn't hit my server.</p>  <p>Note: If I run the same server manually (not from grunt) and then run the test grunt task, the POST call hits the server.</p>  <p>Heres the code:</p>  <p><strong>Grunt task</strong></p>  <pre><code>grunt.registerMultiTask('coverage', 'Generates coverage reports for JS using Istanbul', function () {  var server = http.createServer(function(req, resp) {   resp.setHeader("Access-Control-Allow-Origin", "*");   console.log('Got something');   req.pipe(fs.createWriteStream('coverage.json'))   resp.end();  });  var port = 7358;  server.listen(port);   // This task simply executes a command: `testem.js ci`  grunt.task.run('testem').then(function() {   server.close();  }); }); </code></pre>  <p><strong>test-index.html (somewhere in the )</strong></p>  <pre><code>function onTestemLoad() {  Testem.on('all-test-results', function(results){   var xhr = new XMLHttpRequest();   xhr.open('POST', 'http://localhost:7358/');   xhr.send(JSON.stringify(window.__coverage__))  }); } </code></pre>  <p>Can anyone point what might be going wrong here?</p>