<p>I'm scraping a website using Selenium , Scrapy and PhantomJS. The problem with the code is , although the code scrolls the page perfectly it extracts link only upto certain limit. Beyond that it completely ignores the result of scrolling. When i use Firefox Webdriver , it is working perfectly. Since i'm running the code in server, i used PhantomJS and thus encountered the problem. Below is the code:</p>  <pre><code># -*- coding: utf-8 -*-  from scrapy.spider import BaseSpider from selenium import webdriver from selenium.webdriver.common.keys import Keys import time import csv import re from selenium.webdriver.common.action_chains import ActionChains from selenium.webdriver.support.ui import WebDriverWait   class DukeSpider(BaseSpider):  name = "dspider"  allowed_domains = ["dukemedicine.org"]  start_urls = ["http://www.dukemedicine.org/find-doctors-physicians"]  #hlor    def __init__(self):     self.driver = webdriver.PhantomJS(service_args=['--ignore-ssl-errors=true'])     self.driver.maximize_window()     print 'here'    def parse(self, response):      print 'nowhere'     print response     print response.url     b = open('doc_data_duke.csv', 'a')     a = csv.writer(b, lineterminator='\n')     print 'a'      self.driver.get(response.url)     time.sleep(10)     wait = WebDriverWait(self.driver, 10)     print 'helo'      click = self.driver.find_element_by_xpath("//span[@id='specialty']")     click.click()     click_again = self.driver.find_element_by_xpath("//ul[@class='doctor-type']/li[@class='ng-binding ng-scope'][2]")      click_again.click()     time.sleep(25)      act = ActionChains(self.driver)     act.move_to_element(self.driver.find_element_by_id('doctor-matrix-section')).click()     print 'now here'      for i in range(0, 75):           #self.driver.find_element_by_xpath("//div[@id='doctor-matrix-section']").send_keys(Keys.PAGE_DOWN)         #self.driver.execute_script("window.scrollBy(0, document.body.scrollHeight);")         #self.driver.find_element_by_tag_name("body").click()         #self.driver.find_element_by_tag_name("body").send_keys(Keys.PAGE_DOWN)#findElement(By.tagName("body")).sendKeys(Keys.UP);         #self.driver.find_element_by_tag_name("body").send_keys(Keys.END)         #bg = self.driver.find_element_by_css_selector('body')          #bg.send_keys(Keys.SPACE)         act.send_keys(Keys.PAGE_DOWN).perform()         time.sleep(2)          print i         i += 1      links = self.driver.find_elements_by_xpath("//div[@class = 'result-information']/div[@class='name']/a")      for l in links:         print l         doc_list = l.get_attribute('href')         if re.match(r'https:\/\/www\.dukemedicine\.org\/find-doctors-physicians\/#!\/(.*)', doc_list):             print doc_list             dr = webdriver.PhantomJS(service_args=['--ignore-ssl-errors=true'])             dr.maximize_window()              dr.get(doc_list)              try:                 name_title = dr.find_element_by_xpath('//div[@class="header1 ng-binding"]').text                 name_titles = name_title.split(",", 1)                 name = name_titles[0].encode('utf-8')                  title = name_titles[1]                 print name.encode('utf-8')                 title = title[1:].encode('utf-8')                 print title.encode('utf-8')             except:                 name = ''                 title = ''             try:                 speciality = dr.find_element_by_xpath('//p[@class="specialties ng-scope"]').text              except:                 speciality = ''              try:                 language = dr.find_element_by_xpath(                     '//div[@class="lang ng-scope"]/div[@class="plainText inline ng-binding"]').text             except:                 language = ''             if dr.find_elements_by_xpath('//div[@class="location-info"]'):                 locations = dr.find_elements_by_xpath('//div[@class="location-info"]')                 if len(locations) &gt;= 3:                     locationA = locations[0].text.encode('utf-8')                     locationA = locationA.replace('Directions', '')                     locationA = locationA.replace('\n', '')                     locationB = locations[1].text.encode('utf-8')                     locationB = locationB.replace('Directions', '')                     locationB = locationB.replace('\n', '')                     locationC = locations[2].text.encode('utf-8')                     locationC = locationC.replace('\n', '')                     locationC = locationC.replace('Directions', '')                 elif len(locations) == 2:                     locationA = locations[0].text.encode('utf-8')                     locationA = locationA.replace('Directions', '')                     locationA = locationA.replace('\n', '')                     locationB = locations[1].text.encode('utf-8')                     locationB = locationA.replace('Directions', '')                     locationB = locationB.replace('\n', '')                     locationC = ''                 elif len(locations) == 1:                     locationA = locations[0].text.encode('utf-8')                     locationA = locationA.replace('Directions', '')                     locationA = locationA.replace('\n', '')                     locationB = ''                     locationC = ''             else:                 locationA = ''                 locationB = ''                 locationC = ''              dr.close()             data = [title, name, speciality, language, locationA, locationB, locationC]             print 'aaaa'             print data             a.writerow(data) </code></pre>  <p>No matter what higher value i set in the range , it ignores result beyond a certain point.</p>