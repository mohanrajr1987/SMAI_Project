<p>I have a simple scenario in my rspec feature:</p>  <pre><code>require 'spec_helper'  feature 'CLIENT views results page' do   context 'from welcome/index form' do     let!(:location) { FactoryGirl.create :location, name: 'town' }      before :each do       visit '/'     end      scenario 'successfully', js: true do       expect(Location.count).to eq 1        fill_in 'from_address', with: 'Some address'       fill_in 'to_address', with: 'Another address'       click_button 'Search'        expect(page).to have_content 'Some address â†’ Another address'     end   end end </code></pre>  <p><strong><code>spec_helper:</code></strong></p>  <pre><code>require 'rubygems'  ENV["RAILS_ENV"] ||= 'test'  require File.expand_path("../../config/environment", __FILE__) require 'rspec/rails' require 'factory_girl' require 'database_cleaner' require 'capybara/poltergeist'  FactoryGirl.reload  RSpec.configure do |config|   config.use_transactional_fixtures = false    config.infer_base_class_for_anonymous_controllers = true    config.order = "random"   config.tty = true   config.mock_with :rspec   config.filter_run focus: true   config.run_all_when_everything_filtered = true    config.treat_symbols_as_metadata_keys_with_true_values = true    config.before(:suite) do     DatabaseCleaner.clean_with(:truncation)   end    config.before(:each) do     DatabaseCleaner.strategy = :transaction   end    config.before(:each, js: true) do     DatabaseCleaner.strategy = :truncation   end    config.before(:each) do     DatabaseCleaner.start   end    config.after(:each) do     DatabaseCleaner.clean   end end  Capybara.javascript_driver = :poltergeist Capybara.asset_host = "http://localhost:3000" Capybara.server_port = 9887 + ENV['TEST_ENV_NUMBER'].to_i </code></pre>  <p>And my scenario fails on some random step (after <code>expect(Location.count).to eq 1</code>) due to the fact, that there are no <code>Location</code> records:</p>  <pre><code>(byebug) Location.all [] </code></pre>  <p>I think it might be one of two cases:</p>  <ol> <li>Either DatabaseCleaner cleans database before an example finishes</li> <li>Or there are actually two threads with two databases, one of which (the one that is used by the app) is really empty</li> </ol>  <p>Gem versions:</p>  <ul> <li>rspec (2.14.1)</li> <li>rspec-core (2.14.8)</li> <li>rspec-rails (2.14.0)</li> <li>phantomjs (1.9.7.1)</li> <li>rails (3.2.21)</li> <li>database_cleaner (0.9.1)</li> </ul>