<p>I have a container <code>#main-element</code> whose width is variable based on window size among other things. Inside this container I have some number of elements and a footer container <code>#wrapper</code> that is bottom-aligned (always <code>width: 100%</code> of the parent) and contains two divs, <code>#left</code> and <code>#right</code>. </p>  <p><a href="http://i.stack.imgur.com/7KzGa.png" rel="nofollow"><img src="http://i.stack.imgur.com/7KzGa.png" alt="Layout"></a></p>  <p>The <code>#left</code> element is freely scalable down to <code>min-width: 300px</code> and <code>#right</code> element has a set <code>width: 120px</code>. The behaviour I'm trying to accomplish is:</p>  <ul> <li>If the width of <code>#wrapper</code> is large enough to hold both elements (<code>&gt;= 320px</code>), display its children allowing <code>#left</code> to fill the remaining width;</li> <li>If <code>#wrapper</code> cannot contain both elements, allow <code>#left</code> to take its parent entire width and display <code>#right</code> below.</li> </ul>  <p>I have managed to implement this... mostly. The last thing I cannot figure out is how to force <code>#right</code> to be below not above <code>#left</code> if they cannot both fit in. I'm convinced there is an easy solution that I am failing to see.</p>  <p>I'm preferably looking for a solution that does not require <code>JS</code> and is compatible with older browsers (e.g. <code>flexbox</code> is probably out of the question).</p>  <p>My code so far is included below. <em>Note</em> that the JS part is <em>IRRELEVANT</em> to the problem and included for demonstration only.</p>  <p><div class="snippet" data-lang="js" data-hide="false"> <div class="snippet-code"> <pre class="snippet-code-js lang-js prettyprint-override"><code>!function(t){t(document).ready(function(){t.fn.asize=function(){t(this).animate({width:t(this).css(t(this).width()+"px"==t(this).css("min-width")?"max-width":"min-width")},{duration:3e3,step:function(i){t("span",this).text(Math.round(i)+"px"),t("#left").text(Math.round(t("#left").width())+"px"),t("#right").text(Math.round(t("#right").width())+"px")},complete:function(){t(this).asize()}})},t("#main-element").asize()})}(jQuery.noConflict());</code></pre> <pre class="snippet-code-css lang-css prettyprint-override"><code>#main-element {     /* this element HAS to be relative */     position: relative;          /* below rules are irrelevant */     height: 100px;     min-width: 360px;     max-width: 570px;     border: 1px solid #f00; }  #wrapper {     /* width is always 100% and always aligned to bottom */     width: 100%;     position: absolute;     bottom: 0;     left: 0; }  #left {     /* force div to have at least 300px and exclude #right from its width */     overflow: hidden;     min-width: 300px;      /* below rules are irrelevant */     background-color: #aa0;     height: 50px; }  #right {     /* show on the right; width always set, height equal to #left's height */     float: right;     height: 50px;     width: 120px;      /* below rules are irrelevant */     background-color: #990; }</code></pre> <pre class="snippet-code-html lang-html prettyprint-override"><code>&lt;script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"&gt;&lt;/script&gt;  &lt;!-- main widget container --&gt; &lt;div id="main-element"&gt;     &lt;!--some number of elements inside the widget --&gt;     &lt;span&gt;&lt;/span&gt;         &lt;!-- footer of the widget--&gt;     &lt;div id="wrapper"&gt;         &lt;div id="right"&gt;&lt;/div&gt;         &lt;div id="left"&gt;&lt;/div&gt;     &lt;/div&gt; &lt;/div&gt;</code></pre> </div> </div> </p>