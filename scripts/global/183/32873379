<p>I'm using <code>scrypt</code> to generate strong hashes of the password of the user. I want to log the user in, but don't want to send the password in plaintext over the wire, how do I check if the password is correct (without a roundtrip), since it is salted?</p>  <p>I'm having a client / server scenario. The client is an application on a desktop computer (not a website, nor http server).</p>  <p>How can I achieve this? I came only this far: I'm generating the the salt + hash on the client, form a mcf out of it and send it to my server. Save the mcf to the database. I haven't send the password, just the hash which is practically useless (since scrypt should be quite strong, and would require a few million years to reverse it).  How can I now log the user into my service, without sending the plaintext password to the server to compare it? I can't rehash it, since it would result in a different hash due to a different salt? I would need to send the salt to the client, hash the password, send the hash to the server, compare it, and send some authentication token back. </p>  <p>How can I achieve this? Is an authentication token actually secure? It can be simply used to impersonate anyone, I guess?</p>