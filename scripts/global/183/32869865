<p>We are building an Angular SPA front end and WebAPI back end (using ASP.NET Identity). After clicking login (un/pw), depending on the settings in the DB, the user may need to enter additional information prior to being allowed to get "into" the application. These pages/information may include:</p>  <ol> <li>Complete user profile (one time activity after user creation)</li> <li>Choose 4 secret questions and provide answers (one time activity after user creation)</li> <li>Answer secret question (after each login - one of the 4 selected)</li> <li>Agree to terms of use (one time activity after user creation)</li> <li>Choose a role to use (after each login - if user has more than one role available)</li> </ol>  <p>Are there any patterns for the above? I'm thinking of have a single API endpoint that will return a JSON object containing the status of all the above and then redirect as necessary from there, but I also don't want to reinvent the wheel if there is a robust pattern out there for these types of things.</p>  <p>Is using the 2-factor auth mechanism for answering the secret question a decent approach? And, yes, I realize it really isn't 2 factor since both the login and secret question are both "something that you know" and a real 2nd factor would be something you have or something you are.</p>  <p><strong><em>Edit 1</em></strong>: Instead of trying to force a square peg into a round hole with the 2 factor auth thing, I'm thinking that perhaps I should create an ApiController filter. In OnActionExecuting check the status of all of these and include the status JSON object in the response header. If any is not yet satisfied, return a 401, otherwise continue processing. Then, in angular, setup an HTTP interceptor to read the response header and redirect accordingly.</p>