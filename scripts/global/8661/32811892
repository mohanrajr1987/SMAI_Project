<p>I have repackaged jax-rs-api jar and some other jars that refer jax-rs to remove version conflicts with jaxr-rs-api in hadoop. But when I install the jar in local maven repository and specify it's dependency in build.gradle as <strong><code>same_groupID:same_artifactID:myversion</code></strong> ,It doesn't resolve nested dependencies.</p>  <pre><code>mvn install:install-file -Dfile=jersey-client-myversion.jar -DgroupId=..  -DartifactId=.. -Dversion=myversion -Dpackaging=jar //.. is original group /artifact </code></pre>  <p>Elaboration below : Below is the content from pom.xml shipped inside jersey-client-2.17.jar</p>  <pre><code> &lt;parent&gt;     &lt;groupId&gt;org.glassfish.jersey&lt;/groupId&gt;     &lt;artifactId&gt;project&lt;/artifactId&gt;     &lt;version&gt;2.17&lt;/version&gt; &lt;/parent&gt;  &lt;groupId&gt;org.glassfish.jersey.core&lt;/groupId&gt; &lt;artifactId&gt;jersey-client&lt;/artifactId&gt; &lt;packaging&gt;jar&lt;/packaging&gt; &lt;name&gt;jersey-core-client&lt;/name&gt; </code></pre>  <p>and this file contains a few more dependencies </p>  <pre><code> &lt;dependencies&gt;         &lt;dependency&gt;             &lt;groupId&gt;javax.ws.rs&lt;/groupId&gt;             &lt;artifactId&gt;javax.ws.rs-api&lt;/artifactId&gt;         &lt;/dependency&gt;          &lt;dependency&gt;             &lt;groupId&gt;org.glassfish.jersey.core&lt;/groupId&gt;             &lt;artifactId&gt;jersey-common&lt;/artifactId&gt;             &lt;version&gt;${project.version}&lt;/version&gt;         &lt;/dependency&gt;          &lt;dependency&gt;             &lt;groupId&gt;org.glassfish.hk2&lt;/groupId&gt;             &lt;artifactId&gt;hk2-api&lt;/artifactId&gt;             &lt;/dependency&gt; </code></pre>  <p>// ....more dependencies</p>  <p>Now i find that there is a pom.xml at the location </p>  <pre><code>~/.gradle/caches/modules-2/files-2.1/org.glassfish.jersey/project/2.17/fxxxxxxhashId/pom.xml </code></pre>  <p>which contains the version of all nested dependencies of the jar</p>  <pre><code>&lt;dependencyManagement&gt;         &lt;dependencies&gt;             &lt;dependency&gt;                 &lt;groupId&gt;javax.ws.rs&lt;/groupId&gt;                 &lt;artifactId&gt;javax.ws.rs-api&lt;/artifactId&gt;                 &lt;version&gt;${jaxrs.api.impl.version}&lt;/version&gt;             &lt;/dependency&gt;             &lt;dependency&gt;             // ....more dependencies </code></pre>  <p>Now when i repackage the jar using jarjar and install in local maven repo i tried by modifying only the version in pom.xml inside the jar along with specifying versions of any dependencies which were repackaged too</p>  <pre><code>&lt;parent&gt;         &lt;groupId&gt;org.glassfish.jersey&lt;/groupId&gt;         &lt;artifactId&gt;project&lt;/artifactId&gt;         &lt;version&gt;myversion&lt;/version&gt;     &lt;/parent&gt; </code></pre>  <p>but there is no directory in org.glassfish.jersey/project for myversion and nested dependencies of the jar are not resolved so to use my repackaged jar I have to explicitly specify all the dependencies in my build.gradle (javax.ws.rs, org.glassfish.hk2 etc..).</p>  <p>How do i use my repackaged jar only by specifying it's dependency and not also all dependencies that the jar needs? What changes do i need to make in the pom.xml of the jar ? what is pom.xml in org.glassfish.jersey/project directory?How is it there for 2.17 version but not for my repackaged version?</p>