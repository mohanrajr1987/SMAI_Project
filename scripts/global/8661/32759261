<p>I have a problem with my ExceptionMapper:</p>  <pre><code>@Provider @Component public class GenericExceptionMapper implements ExceptionMapper&lt;Throwable&gt; {      public GenericExceptionMapper() {         logger.debug("hej hopp");      }      @Override     public Response toResponse(Throwable exception) {         ErrorMessage errorMessage = new ErrorMessage("Technical error",              "An unknown technical error occured.");         return Response.status(Response.Status.INTERNAL_SERVER_ERROR)             .entity(errorMessage).build();     } } </code></pre>  <p>It doesn't catch any exceptions from my resources. I have placed a debug point in the constructor and see that it is created. I have debuged the request and it doesn't seem to look for any exception handlers.</p>  <p>This is part of my configuration:</p>  <pre><code>@ComponentScan("com.companywhereiwork.application") </code></pre>  <p>And another part:</p>  <pre><code>        jerseyServlet.setInitParameter("jersey.config.server.provider.packages",                 "com.companywhereiwork.application"); </code></pre>  <p>When I throw an exception from inside one of my resources:</p>  <pre><code>    if (Math.random() &lt; 1f) {         throw new RuntimeException("Bl√§");     } </code></pre>  <p>It is returned to the client as a tomcat errorpage. It doesn't enter my errorhandler.</p>  <p><a href="http://i.stack.imgur.com/Hdjj2.png" rel="nofollow"><img src="http://i.stack.imgur.com/Hdjj2.png" alt="postman errorpage"></a></p>