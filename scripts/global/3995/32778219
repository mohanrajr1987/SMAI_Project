<p>I know, this is not the best method to send a textfile to a webserver from an android device, but I can not change anything on the server side and I must to stick to this method.  Let me explain:</p>  <p>The textfile is a command list. I will read the first line and sending it like this:</p>  <p><code>http://1.2.3.4/?command=FirstLineOfTheTextfile</code></p>  <p>The answer from the server will very simple JSON, like this:</p>  <p>{"OK":true} or {"OK":false}</p>  <p>Depending on the answer (TRUE or FALSE) I want to resend the command or to read the next line and send it on the same way:</p>  <p><code>http://1.2.3.4/?command=SecondLineOfTheTextfile</code></p>  <p>Doing this until the last line in the textfile.</p>  <p>I`ve done in the APP with followings:</p>  <ol> <li>scanning APs</li> <li>connect to it</li> <li>read the file</li> <li>sending the first line</li> <li>parsing the answer</li> </ol>  <p>But, I don`t know what is the best way to do this:</p>  <p>Send a command</p>  <p>Wait for the answer</p>  <p>if FALSE send again</p>  <p>if TRUE Send the next command</p>  <p>Wait for the answer</p>  <p>if FALSE send again</p>  <p>if TRUE Send the next command</p>  <p>Wait for the answer . . and so on</p>  <p>Any suggestion is appreciated! :)</p>  <p>At the moment I doing like this with the first and second command:</p>  <pre><code>public void CheckStatus() {     TextView actualAction = (TextView) findViewById(R.id.action);     if (filePath != "") {         actualAction.setTextColor(getResources().getColor(R.color.green));         actualAction.setText("Getting STATUS information...");         sendCommand("http://1.2.3.4/?action=A"); //FIRST LINE OF THE TEXTFILE     } else {         actualAction.setTextColor(getResources().getColor(R.color.red));         actualAction.setText("Choose a file first!");     } }  public void switchTheLightOn() {     okStatus = false;     TextView actualAction = (TextView) findViewById(R.id.action);     actualAction.setTextColor(getResources().getColor(R.color.green));     actualAction.setText("Switching to UPDATE mode...");     sendCommand("http://1.1.1.1/?action=on"); //SECOND LINE OF THE TEXTFILE } </code></pre>  <p>and when the answer parsed:</p>  <pre><code>private Handler messageHandler = new Handler() {     public void handleMessage(Message msg) {         super.handleMessage(msg);          TextView clientanswer = (TextView) findViewById(R.id.clientanswer);          String message = (String) msg.obj;         try {             JSONObject mainObject = new JSONObject(message);             okStatus = mainObject.getBoolean("OK");          } catch (JSONException e) {             e.printStackTrace();         }          }         String answerText = clientAnswer.toString();         clientanswer.setText(Html.fromHtml(answerText));         if (okStatus) {           switchTheLightOn()         }     } }; </code></pre>