<p>I am an angular novice and am working on an app that gets data from an accounting software and visualises different things using google charts.</p>  <p>Since the api of the accounting software doesn't give me the data the way I need it I have to process it before passing it to the google charts api.</p>  <p>No the problem I ran into is that I can't access the data that is returned inside of the http get request function due to scope I guess. I have tried quite a few things, but nothing seems to work. I feel like there should be an obvious solution to this, but can't put my finger on it. </p>  <p>Would be great if someone can help me with a method to expose http request data to make it usable outside of the http function itself. Here is a code example: </p>  <pre><code>    myApp.controller("dataFetch", ['$http', '$scope',function($http, $scope){      var self = this;     self.project = {};     self.TSproject;     self.TShours;       //PASSING AUTHORIZATION     var config = { headers: { 'Authorization': 'Bearer 1lFASlwgM3QwSyZfJVJPO6776X5wlZtogdg8RN-Lt',} };      //GET DATA     $http.get('https://api.freeagent.com/v2/projects/941562', config).then(function(response) {          //SAVING PROJECT DATA         self.project = {             name: response.data.project.name,             url: response.data.project.url         };         return self.project.url;      }, function(errResponse) {         console.error("Get project request failed");     }).then(function(pUrl) {         return         $http.get('https://api.freeagent.com/v2/timeslips?' + 'from_date=2015-09-21&amp;to_date=2015-09-28' + 'user=' + pUrl, config).then(function(response) {             self.TSproject = response.data.timeslips[0].project;             self.TShours = response.data.timeslips[0].hours;         });      });     //GOOGLE CHARTS       $scope.data1 = {};     $scope.data1.dataTable = new google.visualization.DataTable();     $scope.data1.dataTable.addColumn("string","User")     $scope.data1.dataTable.addColumn("number","Qty")      //INSERTING DATA FROM SERVER HERE     $scope.data1.dataTable.addRow([self.TSproject, self.TShours]);     $scope.data1.title="Daniels Timeslips";    }]); </code></pre>  <p>Thanks a lot!</p>