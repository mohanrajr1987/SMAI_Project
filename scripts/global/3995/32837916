<p>I'm using <a href="https://github.com/github/fetch" rel="nofollow">fetch polyfill</a> with 'no-cors' mode and getting response status 0. In developer tools I can see that response has the requested data.</p>  <p>Client side code:</p>  <p><div class="snippet" data-lang="js" data-hide="false"> <div class="snippet-code"> <pre class="snippet-code-js lang-js prettyprint-override"><code>const BASE_CONFIG = {     credentials: 'include',     mode: 'no-cors' };  let checkStatus = (response) =&gt; {     if (response.status &gt;= 200 &amp;&amp; response.status &lt; 300) {         return response;     } else {         var error = new Error(response.statusText);         error.response = response;         throw error;     } };  function GET(url, urlParams={}, config={}) {     let requestConfig = {         method: 'get'     };        Object.assign(requestConfig, BASE_CONFIG, config);     return fetch(url, requestConfig)             .then(checkStatus)             .then(parseJSON); }  GET('http://other.domain,{})</code></pre> </div> </div> </p>  <p>Beckend nodejs (Express.js) simplified response handler:</p>  <p><div class="snippet" data-lang="js" data-hide="false"> <div class="snippet-code"> <pre class="snippet-code-js lang-js prettyprint-override"><code>function getData(req, res) {     var responseData = {data: 'test'};     res.header("Access-Control-Allow-Origin", "*");     res.header("Access-Control-Allow-Headers", "Origin, X-Requested-With, Content-Type, Accept");     res.writeHead(200, {"Content-Type": "application/json"});     return res.end(JSON.stringify(responseData)); }</code></pre> </div> </div> </p>  <p>Any idea what I'm doing wrong? Thanks!</p>