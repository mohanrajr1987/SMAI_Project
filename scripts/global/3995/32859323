<p>I have a controller method in Laravel 5.1 that takes both GET and POST requests.</p>  <p>There are some variables I have to pass in to that method.</p>  <p>So I'd pass the variable in like this:</p>  <pre><code>http://localhost/&lt;methodName&gt;/&lt;var1 value&gt;/&lt;var2 value&gt; </code></pre>  <p>I'd like Laravel's Request object to be populated with those variables.</p>  <p>Of course I can do:</p>  <pre><code>http://localhost/&lt;MethodName&gt;?var1=var1_value&amp;var2=var2_value </code></pre>  <p>But I'd like to keep the pretty url mentioned before and still be able to populate Request object.</p>  <pre><code>public function methodName(Request $request) {     dd($request); } </code></pre>  <p>This return an empty array.</p>  <p>Yes, I can do something like:</p>  <pre><code>public function methodName(Request $request, $var1= "", $var2 = "") {     dd($var1." ".$var2); } </code></pre>  <p>This will return the variables but I'd really like to have the Request object populated if possible.</p>  <p>The route I'm using is:</p>  <pre><code> Route::match(['get', 'post'],  '/&lt;method-name&gt;/{&lt;var1_value&gt;?}/{&lt;var2_value&gt;?}/{&lt;var3_value&gt;?}',  '&lt;ControllerName&gt;@&lt;methodName&gt;'); </code></pre>  <p>Post variables are not a problem.</p>