<p>I've got an entity that I use for non-critical logging of game completion rates, basically just simple counters. Due to the fact this will be updated hundreds of thousands of times a day (and hopefully growing) it'll live (almost) permanently in memcache.</p>  <p>To save myself from having to pay for those hundreds of thousands of writes of non-critical data I'm happy to risk having to object persisted in memcache with a disk write only every 15 minutes or so.</p>  <p>I can't see any obvious way to do it, but I was wondering if there was something like <code>ofy().save().entity()</code> that could be used to write to the cache but not the disk? If not, is there any other easy way to write an entity to memcache?</p>  <p>If I need to handle this myself, is there a way I can use the memcache keys that Objectify uses to read the object stored by objectify, or am I better off just handling all the caching myself?</p>