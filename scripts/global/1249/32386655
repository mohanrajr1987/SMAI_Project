<p>I have a simple class in PHP, which operates on database using PDO. I also use memcached() for some database queries, but the class I use for MemCache() still uses old <code>mysql_*</code> extension instead of PDO.</p>  <p>What I would like to do is to combine both classes into one. Don't know how, though. I wish to add into <code>db</code> class new method called fox example <code>query_memcache</code> plus extend <code>$conf</code> array() so I can put info about connection to Memcache (port <code>11211</code> on <code>localhost</code>).</p>  <p>This is because I use MemCache() only for database queries and the only method I used from <code>MemCacheDb</code> class was <code>mysql_memcache</code>. </p>  <p>Can anyone help me with it and give me some advices what to modify and how? Both classes are included below.</p>  <pre><code>&lt;?php   class db extends PDO   {     public $isConnected;     protected $datab;      public function __construct($conf){       $this-&gt;isConnected = true;       try {         $this-&gt;datab = new PDO('mysql:host='.$conf['host'].';dbname='.$conf['dbname'].';charset=utf8', $conf['user'], $conf['pass']);         $this-&gt;datab-&gt;setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);         $this-&gt;datab-&gt;setAttribute(PDO::ATTR_DEFAULT_FETCH_MODE, PDO::FETCH_ASSOC);       }       catch(PDOException $e) {         $this-&gt;isConnected = false;         header("Location: /an_error_page/");         exit;       }     }      public function Disconnect(){       $this-&gt;datab = null;       $this-&gt;isConnected = false;     }      public function getRow($query, $params=array()){       try{         $stmt = $this-&gt;datab-&gt;prepare($query);         $stmt-&gt;execute($params);         return $stmt-&gt;fetch();         }catch(PDOException $e){         throw new Exception($e-&gt;getMessage());       }     }      public function query($query, $params=array()){       try{         $stmt = $this-&gt;datab-&gt;query($query);         return $stmt;          }catch(PDOException $e){         echo $e-&gt;getMessage();       }     }      public function close(){       try{         return $this-&gt;datab = null;         }catch(PDOException $e){         throw new Exception($e-&gt;getMessage());       }     }       public function lastId($p){       try{         return $this-&gt;datab-&gt;lastInsertId($p);         }catch(PDOException $e){         throw new Exception($e-&gt;getMessage());       }     }      public function insertRow($query, $params){       try{         $stmt = $this-&gt;datab-&gt;prepare($query);         $stmt-&gt;execute($params);         }catch(PDOException $e){         throw new Exception($e-&gt;getMessage());       }     }      public function updateRow($query, $params){       return $this-&gt;insertRow($query, $params);     }      public function deleteRow($query, $params){       return $this-&gt;insertRow($query, $params);     }   } ?&gt;   &lt;?php class MemCacheDb {     private $tmp_object;     private $memcache;     private $_appKey = 'jhb6b5fjjnmxs4eytrbdjnbyv543cw3cvdi7iub56v5';     private $_queries = null;      // constructor     public function __construct() {         global $myconf;         // Connect to memcache:         $this-&gt;memcache = new Memcache();         $this-&gt;memcache-&gt;connect($myconf['memcache_host'], $myconf['memcache_port']) or die ("Could not connect to memcache");         $this-&gt;_appKey = md5(__FILE__ . $this-&gt;_appKey);         $tmp_object = new stdClass;     }      public function __destruct() {         if (is_array($this-&gt;_queries)) {             $this-&gt;_saveQueries();         }     }      private function db_connect($db_name = '') {         global $link_id, $myconf;         if(!$link_id) {             $link_id = @mysql_connect($myconf['db_host'], $myconf['db_user'], $myconf['db_pass']);             if($db_name == '') $db_name = $myconf['db_database'];             mysql_query("SET NAMES utf8");             if($link_id) @mysql_select_db($myconf['db_database']);             if($link_id) return true;             else return false;         }     }      public function mysql_execute($query) {         global $link_id;         if(!$link_id) $link_id = $this-&gt;db_connect();         if(!$link_id) error_message();         $result = mysql_query($query);         @mysql_close($link_id);          if(!$result)         { //          echo '&lt;hr&gt;'.mysql_error().'&lt;hr&gt;';         }         else         { //          echo '&lt;hr&gt;'.mysql_error().'&lt;hr&gt;';           return $result;         }      }      public function mysql_memcache($query, $time) {         $klucz = sha1($query);         if($get_result = $this-&gt;memcache-&gt;get($klucz)) {             return($get_result-&gt;str_attr);         } else {             $i=0;             $zmienna = $this-&gt;mysql_execute($query);             while($row = mysql_fetch_array($zmienna,MYSQL_ASSOC)) {                 $new_array[$i] = array_values($row);                 $i++;             }              $tmp_object = new StdClass;             $tmp_object-&gt;str_attr = $new_array;             $this-&gt;memcache-&gt;set($klucz, $tmp_object, false, $time) or die ('Something went wrong.');             return($new_array);         }     } } ?&gt; </code></pre>