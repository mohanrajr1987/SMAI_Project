<p>So I have two Memcached servers. In my PHP I have created a Memcached service which use <code>addServer</code> for managing the servers.</p>  <pre><code>$app['memcached'] = $app-&gt;share(     function ($app) {         $memcached = new \Memcached;         $memcached-&gt;setOption(             \Memcached::OPT_PREFIX_KEY,             $app['memcached.config']['prefix']         );          foreach ($app['memcached.config']['servers'] as $server) {             $host = $server['hostname'];             $port = isset($server['port']) ? $server['port'] : 11211;              $memcached-&gt;addServer($host, $port);         }          return $memcached;     } ); </code></pre>  <p>I then create a status page where I try to do a simple set and get key to verify things are working as expected.</p>  <pre><code>    $time = time();      $memcached-&gt;set('system_check', $time);      $memcached_status = $memcached-&gt;get('system_check') == $time         ? StatusInterface::STATUS_OK         : StatusInterface::STATUS_ERROR; </code></pre>  <p>This gives me OK half of the time when refreshing and half of the time ERROR.</p>  <p>I then output getServerList and getStats to see more information on whats going on.</p>  <p>This is what I get.</p>  <p>Memcached clearly have the two servers registered. (the server ip's is obscured by x's) </p>  <pre><code>xx.xx.xx.xx 11211 xx.xx.xx.xx 11211 </code></pre>  <p>The stats gives me this half of the time:</p>  <p>Server 1:</p>  <pre><code>pid 6027 uptime 4486 threads 4 time 1441804532 pointer_size 64 rusage_user_seconds 0 rusage_user_microseconds 84005 rusage_system_seconds 0 rusage_system_microseconds 76004 curr_items 4 total_items 122 limit_maxbytes 67108864 curr_connections 5 total_connections 156 connection_structures 6 bytes 2286 cmd_get 123 cmd_set 122 get_hits 118 get_misses 5 evictions 0 bytes_read 126989 bytes_written 145298 version 1.4.13  </code></pre>  <p>Server 2:</p>  <pre><code>pid -1 uptime 0 threads 0 time 0 pointer_size 0 rusage_user_seconds 0 rusage_user_microseconds 0 rusage_system_seconds 0 rusage_system_microseconds 0 curr_items 0 total_items 0 limit_maxbytes 0 curr_connections 0 total_connections 0 connection_structures 0 bytes 0 cmd_get 0 cmd_set 0 get_hits 0 get_misses 0 evictions 0 bytes_read 0 bytes_written 0 version  </code></pre>  <p>and the other half I get this:</p>  <p>Server 1:</p>  <pre><code>pid -1 uptime 0 threads 0 time 0 pointer_size 0 rusage_user_seconds 0 rusage_user_microseconds 0 rusage_system_seconds 0 rusage_system_microseconds 0 curr_items 0 total_items 0 limit_maxbytes 0 curr_connections 0 total_connections 0 connection_structures 0 bytes 0 cmd_get 0 cmd_set 0 get_hits 0 get_misses 0 evictions 0 bytes_read 0 bytes_written 0 version  </code></pre>  <p>Server 2:</p>  <pre><code>pid 5201 uptime 5552 threads 4 time 1441805639 pointer_size 64 rusage_user_seconds 0 rusage_user_microseconds 132008 rusage_system_seconds 0 rusage_system_microseconds 60003 curr_items 3 total_items 121 limit_maxbytes 67108864 curr_connections 5 total_connections 95 connection_structures 7 bytes 566 cmd_get 124 cmd_set 121 get_hits 120 get_misses 4 evictions 0 bytes_read 18306 bytes_written 52682 version 1.4.13  </code></pre>  <p>So its like its only using one of the servers at a time... this makes sense if its a pool and it handles this internally. Fine.. but its trying to get the key 'system_check' from server 1 and server 2 at different times. This makes no sense to me. It should know where the entry is placed.</p>  <p>Did I setup the Memcached servers in a wrong way?</p>