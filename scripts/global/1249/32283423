<p>In my system,there are many <code>web servers</code> share one <code>cache(memcache) server</code>.</p>  <p>Currently, it will clear all the data in memcache on every new deployment.</p>  <p>by running <code>rake memcached:flush</code></p>  <p>What's more,I can saw the <code>user session</code> in the cache server,</p>  <p>But every time, when I close the browser on my iPhone, I need to re-login again and again (I must get something wrong).</p>  <p>I set up my server in the back of <code>AWS ELB</code> and <code>auto scaling</code></p>  <p>How could I <strong>keep</strong> the users' session among every server behind ELB</p>  <p>To keep the user in logged status every they comes back.</p>  <h1>cache server</h1>  <pre><code>|       8 |    2016-03-01 10:07:59 +0000 |          291 | _session_id:08f1d7e8e82055367c44372d431b7f23              | |       8 |    2016-03-01 10:07:22 +0000 |          291 | _session_id:3553ad00c578b175d789f02dc696dd95              | |       8 |    2016-03-01 10:04:22 +0000 |          291 | _session_id:5cc2302455981a8a5d3cea98deb80acb              | </code></pre>  <h1>confi/initialize/session.rb (I save cache with Dalli and memcache)</h1>  <pre><code>Rails.application.config.session_store :cookie_store, key: '_sampleA_session' Rails.application.config.session_store ActionDispatch::Session::CacheStore, :expire_after =&gt; 6.month </code></pre>  <h1>view caches / model caches</h1>  <pre><code>- cache("common_header", skip_digest: true) do - cache("footer", skip_digest: true) do ... </code></pre>  <h1>cache.rake (rake task)</h1>  <pre><code>require 'socket'  namespace :memcached do   desc 'Flushes whole memcached local instance'   task :flush do     server  = ENV['MEMCACHE_DB']     port    = 11211     command = "flush_all\r\n"     socket = TCPSocket.new(server, port)     socket.write(command)     result = socket.recv(2)     if result != 'OK'       STDERR.puts "Error flushing memcached: #{result}"     end     socket.close   end end </code></pre>  <h1>production.rb</h1>  <pre><code>  config.action_controller.perform_caching = true   config.cache_store = :dalli_store, ENV['MEMCACHE_DB'], { :pool_size =&gt; 10 ,compress: true } </code></pre>