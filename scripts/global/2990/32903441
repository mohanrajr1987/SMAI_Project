<p>The sql for the database is available here <a href="http://pastebin.com/a58BHjmW" rel="nofollow">http://pastebin.com/a58BHjmW</a></p>  <p>In IntelliJ, I added JPA facet, and no matter which provider I use, the foreign keys constraints of my 'students' table are not being generated, hence I end up with the entity without any FK constraints and relationships. Also I was no able to find how to implement Serializable interface in IntelliJ. The code generated looks like this:</p>  <pre><code>@Entity @javax.persistence.Table(name = "students", schema = "", catalog = "test") public class StudentsEntity { private int studentIdPk;  @Id @javax.persistence.Column(name = "student_id_pk", nullable = false, insertable = true, updatable = true) public int getStudentIdPk() {     return studentIdPk; }  public void setStudentIdPk(int studentIdPk) {     this.studentIdPk = studentIdPk; } </code></pre>  <p>Using Eclipse and the same db, I was able to generate the entities with proper relationships, constraints and annotations using JPA and EclipseLink. The code generated by Eclipse is as follows:</p>  <pre><code>    @Entity     @Table(name="students")     @NamedQuery(name="Student.findAll", query="SELECT s FROM Student s")     public class Student implements Serializable {     private static final long serialVersionUID = 1L;        @Id       @GeneratedValue(strategy=GenerationType.AUTO)       @Column(name="student_id_pk")       private int studentIdPk; </code></pre>  <p>Is there a way to achieve the same in IntelliJ, as the code generated by the IDEA seems to be wrong, while eclipse has no problems generating the entities. I am using IntelliJ Ultimate version. The database ERD and the ERD of generated entities is the same when using Eclipse, but not in IntelliJ as the constraints from the 'students' table are completely missing.</p>