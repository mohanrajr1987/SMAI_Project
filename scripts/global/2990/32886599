<p>I have a "Product" and "Tag' class <code>ManyToMany</code> relationship. I get Products and tags from an rss feed. Some tag names are duplicated with new product entries (while inserting them) as many products come with same tag names. </p>  <p>I want to make Tag names UNIQUE. If, while adding a product, a Tag already exists, the product should be added there in that tag (or I should say associated with that tag) rather a new duplicate named tag be created. </p>  <p>If Tag does not exists, new tag created and product added there.</p>  <p><strong>If, for example, product feed has [product 1, tag [tag1,tag2,tag3]]  ,            [product  2, tag [tag7,tag5, tag1]]</strong>           </p>  <p><strong>If product 1 is added, tag 1, tag2, tag3 are created. then for product 2, tag 1 should not be created again</strong>  </p>  <p>Question: Is there a built in way in JPA or I have to do check / if else() / getTagByName() each time and see if it exist.</p>  <p>What are my options? I prefer a JPA option (not hibernate or ORM specific)</p>  <pre><code>    @Entity     public class Product {         @Id         @GeneratedValue(strategy = GenerationType.IDENTITY)         private Long id;         private String name;         @ManyToMany (cascade = CascadeType.ALL, fetch = FetchType.LAZY )         private List&lt;Tag&gt; tagList;     //getters and setters     }        @Entity     public class Tag {         @Id         @GeneratedValue(strategy = GenerationType.IDENTITY)         private Long id;         private String name;         @ManyToMany (mappedBy = "tagList", cascade = CascadeType.ALL, fetch = FetchType.LAZY )         private List&lt;ListItem&gt; listItemList;         @ManyToMany (mappedBy = "tagList", cascade = CascadeType.ALL, fetch = FetchType.LAZY )         private List&lt;Product&gt; productList;     //getters and setters     } </code></pre>