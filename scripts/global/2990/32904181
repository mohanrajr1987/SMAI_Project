<p>hello i want to update the state field from all Class1 entries with given class2 id:</p>  <pre><code>@Entity @XmlAccessorType( XmlAccessType.FIELD) public class Class1 {      @Id     @GeneratedValue(strategy = GenerationType.AUTO)     private int id;      private boolean state;      @ManyToMany(mappedBy = "items")     @XmlTransient     private List&lt;Class2&gt; class2; }  @Entity @XmlAccessorType( XmlAccessType.FIELD) public class Class2 {      @Id     @GeneratedValue(strategy = GenerationType.AUTO)     private int id;      @ManyToMany(cascade = {CascadeType.ALL})     @JoinTable(             name = "class2_class1", joinColumns = {             @JoinColumn(name = "id", nullable = true, updatable = true)},                 inverseJoinColumns = {@JoinColumn(name = "class1_id")             }     )     private List&lt;Class1&gt; items; } </code></pre>  <p>The only way i found was with nativeQuery:</p>  <pre><code>public interface Class1Repository extends CrudRepository&lt;CLass1, Integer&gt; {      @Modifying     @Query(value = "UPDATE class1 c1 INNER JOIN class2_class1 cc ON (c1.id = cc.class1_id) SET a.state = :state WHERE cc.id = :c2Id", nativeQuery = true)     int updateState(@Param("state") boolean state, @Param("c2Id") int c2Id); } </code></pre>  <p>Is there a better solution? </p>