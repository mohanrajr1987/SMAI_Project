<p>I currently doing an assignment about Event Managing, required using JSF and MSSQL database and am having a problem when display added or update data. For some reason when I add the data, the date added in SQL is correct but the date display in .xhtml file decrease by 2 days. This happened also when call Update function but after each update the data in SQL also decrease 2 days.</p>  <p>For example, if I add 22/12/2015, it will display as 12/22/2015 in the database but 12/20/2015 in .xhtml file. If call the update function the date in the SQL also decrease 2 days, but other data stay the same. Here are my class</p>  <p>EventBean.java</p>  <pre><code>public class EventBean {  /**  * Creates a new instance of EventBean  */ public EventBean() {     DataProcess dt = new DataProcess();     list = dt.getData(); } private int ID;  private String name; private String location; private String date; private String type; private String time; private List&lt;Event&gt; list; private boolean editable;    public String saveAction(String name, String location, String date, String type, String time, int ID ) {      SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");     DateFormat timeformater = new SimpleDateFormat("HH:mm");     //formatter.setLenient(false);     try {         java.util.Date d = formatter.parse(date);         java.sql.Date dateValue = new java.sql.Date(d.getTime());          java.sql.Time timeValue = new java.sql.Time(timeformater.parse(time).getTime());          DataProcess dp = new DataProcess();         if(!dp.UpdateData(name, location, dateValue, type, timeValue, ID))         return "failed";         System.out.println(d);     } catch (ParseException ex) {         Logger.getLogger(EventBean.class.getName()).log(Level.SEVERE, null, ex);         return "failed";     }      for (Event e : list) {         e.setEditable(false);     }      return "success";  }  //get and setter code  public String addData() {     SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");     DateFormat timeformater = new SimpleDateFormat("HH:mm");     formatter.setLenient(false);     try {         java.util.Date d = formatter.parse(date);         java.sql.Date dateValue = new java.sql.Date(d.getTime());          java.sql.Time timeValue = new java.sql.Time(timeformater.parse(time).getTime());          DataProcess dp = new DataProcess();         if (!dp.addData(name, location, dateValue, type, timeValue)) {             return "failed";         }     } catch (ParseException ex) {         Logger.getLogger(EventBean.class.getName()).log(Level.SEVERE, null, ex);         return "failed";     }     return "success"; } </code></pre>  <p>}</p>  <p>DataProcess.java</p>  <pre><code>public class DataProcess {  public boolean addData(String name, String location, Date date, String type, Time time) {     int result = 0;     String sql = "Insert into Events values(?,?,?,?,?)";     try {         PreparedStatement ps = getConnenction().prepareStatement(sql);         ps.setString(1, name);         ps.setString(2, location);         ps.setDate(3, date);         ps.setString(4, type);         ps.setTime(5, time);         result = ps.executeUpdate();         System.out.println("DP"+date);         ps.close();     } catch (SQLException ex) {         Logger.getLogger(DataProcess.class.getName()).log(Level.SEVERE, null, ex);      }     return result&gt;0; }  public ArrayList getData() {     ArrayList arr = new ArrayList();     String sql = "Select * from Events";     try {         ResultSet rs = getConnenction().createStatement().executeQuery(sql);         while(rs.next())         {             arr.add(new Event(rs.getInt(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(6)));         }         rs.close();     } catch (SQLException ex) {         Logger.getLogger(DataProcess.class.getName()).log(Level.SEVERE, null, ex);     }     return arr; }  public boolean UpdateData(String name, String location, Date date, String type, Time time, int ID) {     int result = 0;     String sql = "Update Events set EvName=?, Location=?, EvDate=?, EvType=?, EvTime=? where EvID=?";     try {         PreparedStatement ps = getConnenction().prepareStatement(sql);         ps.setString(1, name);         ps.setString(2, location);         ps.setDate(3, date);         ps.setString(4, type);         ps.setTime(5, time);         ps.setInt(6,ID);         result = ps.executeUpdate();         System.out.println("DP"+date);         ps.close();     } catch (SQLException ex) {         Logger.getLogger(DataProcess.class.getName()).log(Level.SEVERE, null, ex);      }     return result&gt;0; } </code></pre>  <p>}</p>  <p>Also the View.xhtml</p>  <pre><code>&lt;h:body&gt;     &lt;div&gt;View Events&lt;/div&gt;     &lt;h:form&gt;         &lt;h:dataTable value="#{eventBean.list}" var="e" border="1"&gt;             &lt;h:column&gt;                 &lt;f:facet name="header"&gt;                     &lt;h:outputText value="Product Name"/&gt;                 &lt;/f:facet&gt;                 &lt;h:inputText value="#{e.name}" size="20" rendered="#{e.editable}"/&gt;                 &lt;h:outputText value="#{e.name}" rendered="#{not e.editable}"/&gt;             &lt;/h:column&gt;             &lt;h:column&gt;                 &lt;f:facet name="header"&gt;                     &lt;h:outputText value="Location"/&gt;                 &lt;/f:facet&gt;                 &lt;h:inputText value="#{e.location}" size="20" rendered="#{e.editable}"/&gt;                 &lt;h:outputText value="#{e.location}" rendered="#{not e.editable}"/&gt;             &lt;/h:column&gt;             &lt;h:column&gt;                 &lt;f:facet name="header"&gt;                     &lt;h:outputText value="Date"/&gt;                 &lt;/f:facet&gt;                 &lt;h:inputText value="#{e.date}" size="20" rendered="#{e.editable}"/&gt;                 &lt;h:outputText value="#{e.date}" rendered="#{not e.editable}"&gt;&lt;/h:outputText&gt;             &lt;/h:column&gt;             &lt;h:column&gt;                 &lt;f:facet name="header"&gt;                     &lt;h:outputText value="Event Type"/&gt;                 &lt;/f:facet&gt;                 &lt;h:inputText value="#{e.type}" size="20" rendered="#{e.editable}"/&gt;                 &lt;h:outputText value="#{e.type}" rendered="#{not e.editable}"/&gt;             &lt;/h:column&gt;             &lt;h:column&gt;                 &lt;f:facet name="header"&gt;                     &lt;h:outputText value="Time"/&gt;                 &lt;/f:facet&gt;                 &lt;h:inputText value="#{e.time}" size="20" rendered="#{e.editable}"/&gt;                 &lt;h:outputText value="#{e.time}" rendered="#{not e.editable}"/&gt;             &lt;/h:column&gt;             &lt;h:column&gt;                 &lt;f:facet name="header"&gt;                     &lt;h:outputText value="Edit"/&gt;                 &lt;/f:facet&gt;                 &lt;h:commandLink value="Edit" action="#{eventBean.editAction(e)}"                                 rendered="#{not e.editable}"/&gt;             &lt;/h:column&gt;             &lt;h:column&gt;             &lt;f:facet name="header"&gt;Save&lt;/f:facet&gt;                                             &lt;h:commandButton value="Save Changes" action="#{eventBean.saveAction(e.name,e.location,e.date,e.type,e.time,e.ID)}"&gt;                 &lt;f:ajax render="@form" execute="@form"/&gt;             &lt;/h:commandButton&gt;                         &lt;/h:column&gt;         &lt;/h:dataTable&gt;     &lt;/h:form&gt; &lt;/h:body&gt; </code></pre>  <p>Can anyone find what the cause of the problem? If so how to fix it? Thanks in advance :)</p>