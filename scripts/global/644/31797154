<p>I'm creating XHTML documents client-side as follows:</p>  <pre><code>var xhtmlDocType = document.implementation.createDocumentType(   'html',   '-//W3C//DTD XHTML 1.0 Transitional//EN',   'http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd' ); myDocument = document.implementation.createDocument('http://www.w3.org/1999/xhtml', 'html', xhtmlDocType); </code></pre>  <p>When running this code in Chrome, the output (<code>myDocument.documentElement.outerHTML</code>) is as I expect, and the resulting html element looks like this: <code>&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;</code>, however when running the same code in Firefox, the html element has no xmlns attribute: <code>&lt;html&gt;</code>. The Firefox document also seems to be treated as HTML, doing things like not closing <code>&lt;meta&gt;</code> tags.</p>  <p>Here's a JSFiddle to serve an an example, which can be viewed in Chrome or Firefox to see the difference: <a href="http://jsfiddle.net/70avhuo3/5/" rel="nofollow">http://jsfiddle.net/70avhuo3/5/</a></p>  <p>In my particular use case, I need that xmlns attribute, and Firefox to treat the document as XHTML in order for the document to both be valid and display properly.  How can I get consistency here, either by modifying the way I create the document, or how I am extracting the contents?</p>