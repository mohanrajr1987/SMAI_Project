<p>An environment for a web site at my workplace:</p>  <ul> <li>Windows Server 2012, IIS 8</li> <li>Web.config to add default file index.html</li> <li>XHTML 1.1 Strict html files, a very simple site</li> </ul>  <p>Main file is index.html, and javascript is used to change the data property of an object element is used within the file. That object is then cloned in Javascript to get it to render itself when the data property is changed (yes, hackish, but works fine) and then javascript is called via the onload property to resize that object element to be the same height as its contents.</p>  <p>This is all similar to the old HTML usage of the iframe element, but is XHTML 1.1 Strict compliant with an object instead. Unfortunately, having the property onload within the object element breaks XHTML 1.1 validation.</p>  <p>So I'd like to move that functionality into my javascript file by adding a listener to something like onload or an onready state for the object element. I can get that onload listener to work on the document or window or course, but getting it to work on the object element is a no-go.</p>  <p><strong>My only idea to troubleshoot is to look at adding the listener again when I duplicate the object element. For example, is that listener lost when I duplicate that element?</strong></p>  <p>And please, no jquery solutions (avoiding external libraries for this stand alone site).</p>  <p>Thanks in advance!</p>  <p>html file section...</p>  <pre><code>&lt;object id="mainContent" type="text/html" data="home.html" standby="Loading..." onload="resizeObject(this);"&gt;&lt;/object&gt; </code></pre>  <p>javascript to clone and resize...</p>  <pre><code>function navigateTo(page) {     var objectContent = document.getElementById('mainContent');     objectContent.setAttribute('data', page);     var menus = document.getElementsByClassName('dropdownMenu');     var i;     for (i = 0; i &lt; menus.length; i++)     {         menus[i].setAttribute('class', 'dropdownMenu hidden');     }     //clone and replace object element in order for it to update the DOM     var temp = objectContent.cloneNode(true);     objectContent.parentNode.replaceChild(temp, objectContent); } function resizeObject(obj) {     var h = obj.contentWindow.document.body.scrollHeight;     if (h &lt; 500)     {         h = 650;     }     h = h + 100;     obj.style.height = h + 'px'; } </code></pre>  <p>Listener example that doesn't work...</p>  <pre><code>var Content = document.getElementById('contentMain'); Content.addEventListener("click", function() {     resizeObject(Content); }); </code></pre>