<p>My camel route is configured like this (pseudocode)</p>  <pre><code>from(direct:in).to(jdbc:db).split().body().streaming().parallelProcessing() .process(doSomething).process(createDBquery).out(jdbc:db) </code></pre>  <p>The jdbc endpoint is configured to put out <code>JdbcOutputType.StreamList</code>. The route is triggered by sending a select query into direct:in. Each line from db is handled in <code>doSomething</code>. It creates a special result object that is converted into a query to write the result into db.</p>  <p>My main problem is how to detect if the complete result from db was handled- <strong>I want to know when it is finished</strong>.</p>  <p>I tried to use an EventNotifier and filtered on <code>ExchangeCompletedEvent</code>. But this event seems to be raised for every result written into db. Now i am considering the use of <code>RoutePolicy</code> / overriding "onExchangeDone" but would this change anything?</p>  <p>What are the exact semantics of both especially for routes that create new exchanges (e.g. by split) on their way? Is their a clean way to detect when my route is finished?</p>