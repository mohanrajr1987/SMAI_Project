<p>I have the following route...</p>  <pre><code>&lt;route id="VM01_spit_products"&gt;     &lt;from uri="direct:processXML" /&gt;     &lt;split&gt;         &lt;method ref="CamelSplitOnKey" method="splitIntoBatches" /&gt;          &lt;to uri="vm:processXMLSplit" /&gt;     &lt;/split&gt; &lt;/route&gt;  &lt;route id="VM01_processXML"&gt;     &lt;from uri="vm:processXMLSplit?concurrentConsumers=15" /&gt;     &lt;bean ref="Builder" method="createXMLFile" /&gt;     &lt;to uri="{{ChangeReceiver}}" /&gt; &lt;/route&gt; </code></pre>  <p>I was expecting with the use of VM or SEDA to mean that if the spliter is producing 5 messages, then one of the 15 threads I have defined would pick up each of these messages. When I debug into the Builder class, I can see that the messages are being picked up sequentially. </p>  <p>I see the same if I an using VM or SEDA.</p>  <p>Can someone suggest where I'm going wrong?</p>  <p>Notes:</p>  <ul> <li>Camel 2.6 due to JDK 1.5</li> </ul>  <hr>  <p>New info.</p>  <p>I've added this code into my Builder.java</p>  <pre><code>SedaEndpoint seda = (SedaEndpoint) camelContext.getEndpoint("seda:processXMLSplit"); int size = seda.getExchanges().size(); System.out.println("size ["+size+"]");   </code></pre>  <p>This prints a size of 0 each time.</p>  <p>This makes me think that the split isn't queuing up the messages as I expect.</p>