<p>I am creating an online form builder using Ember 2.0 on the front-end and Rails 4.2 on the back-end with the json_api_resources gem.</p>  <p>In the process of publishing a form, a user must be able to cut/paste a snippet of code into his/her webpage in order to 'ajax in' the form they have configured.</p>  <p>Thus the 'embed-snippet' attribute of the Form model should be read-only. I do not want the contents of the snippet field to be sent back to the server when the user makes a change to the form and re-saves the record.</p>  <p>Some approaches I have considered:</p>  <ul> <li>Modifying the serializer to check for this specific attribute and drop it from the payload before sending it to the back-end</li> <li>Converting the 'embed-snippet' field to a separate model with a relationship to the Form model, and then excluding it somehow from the save</li> <li>Creating a new Ember Data attribute type</li> </ul>  <p>Ideally there would be a better way to deal with this problem.</p>  <p>Something like:</p>  <pre><code>'DS.attr('string', { readOnly: true }) </code></pre>  <p>So my question is, what is the best way to ensure the content of this field does not get sent back to the server?</p>