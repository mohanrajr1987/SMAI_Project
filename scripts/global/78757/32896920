<p>This is my router:</p>  <pre><code>Router.map(function() {   this.route('merchant', { path:'/merchant/:id' }, function() {     this.route('product-tag'); </code></pre>  <p>Currently my api works like this. So I'm trying to get all the product tags that belong to merchant with id: 1781.</p>  <p><a href="http://localhost:3001/merchant/1781/product_tags" rel="nofollow">http://localhost:3001/merchant/1781/product_tags</a></p>  <p>The closest I've gotten is using a the product-tag route doing something like this:</p>  <pre><code>model: function() {   debugger;   var parentModel = this.modelFor('merchant').merchant;   return this.store.find('product-tag', { merchant_id: parentModel.id}); } </code></pre>  <p>This will generate a request: </p>  <p><a href="http://localhost:3000/product_tags?merchant_id=1781" rel="nofollow">http://localhost:3000/product_tags?merchant_id=1781</a></p>  <p>I'd assume that because product_tag is a subroute of merchant it'd take into account the dynamic segment of merchant but that doesn't seem to be the case. </p>  <p>Thanks for the help. </p>  <p>My models are as follows:</p>  <p>Merchant:</p>  <pre><code>export default DS.Model.extend({   user_id: DS.attr('number'),   tags: DS.hasMany('product-tag', {async: true}) }); </code></pre>  <p>product-tag:</p>  <pre><code>export default DS.Model.extend({   merchant: DS.belongsTo('merchant', {async: true}),   name: DS.attr('string'),   active: DS.attr('boolean'),   taggings_count: DS.attr('number') }); </code></pre>