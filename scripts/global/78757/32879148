<p>To explain the issue I'm facing, I have 2 routes : <code>ApplicationRoute</code> and <code>SomeRoute</code>. I would need to wait for <code>ApplicationRoute</code> to resolve <em>before</em> trying to do something with <code>SomeRoute</code>.</p>  <p>The call order I see in debug :</p>  <pre><code>ApplicationRoute.model // which returns a promise SomeRoute.model SomeRoute.setupController ApplicationRoute.setupController </code></pre>  <p>What I would want :</p>  <pre><code>ApplicationRoute.model // which returns a promise ApplicationRoute.setupController SomeRoute.model SomeRoute.setupController </code></pre>  <p>There's probably a detail I'm missing somewhere...</p>  <p><strong>UPDATE</strong></p>  <p>The reason I incist for the <code>ApplicationRoute.setupController</code> to be able before other routes is that I use this to initialize some others controllers.</p>  <pre><code>App.ApplicationRoute = Ember.Route.extend({     model: function() {         return Ember.$.getJSON("api/settings");     },     setupController: function(controller, jsonSettings) {         this.store.pushPayload(jsonSettings);          this.controllerFor("foobar").set("content", this.store.all("foobar"));         this.controllerFor("foobaz").set("content", this.store.all("foobaz"));         this.controllerFor("foobam").set("content", this.store.all("foobam"));     } }); </code></pre>