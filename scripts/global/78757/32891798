<p>Let's says we have a <code>UsersIndexRoute</code> where we load all users.</p>  <pre><code>model() {   return this.store.findAll('users'); } </code></pre>  <p>When we load the page for the first time (hard reload) and get a <code>HTTP 500 error</code>back we get this error in the <code>ApplicationRoute</code>'s <code>errors()</code> and can render a error page and everything is fine.</p>  <p><strong>But:</strong>  Let's says we already loaded the Ember App but only loaded a subset of all users, go to the <code>/users</code> page and call the <code>findAll</code> again, Ember immediately gives back the subset of users we already loaded in the store and fetches all the other users in a background request. </p>  <p>Now in our case we get a <code>HTTP 500 error</code> back in the backgroundReload, but it seems like <a href="https://github.com/emberjs/data/blob/master/packages/ember-data/lib/system/store.js#L1027" rel="nofollow">https://github.com/emberjs/data/blob/master/packages/ember-data/lib/system/store.js#L1027</a> doesn't return the promise array back and we can't catch the error in our <code>findAll</code> method anymore, or receiving any error in the <code>ApplicationRoute</code>'s <code>error()</code>.</p>  <p>My question is: how and where can I catch errors from backgroundReload?</p>