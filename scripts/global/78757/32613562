<p>I have a jsonp request to retrieve feature information via geoserver, the call looks something like this:</p>  <pre><code>import Ember from 'ember';  export default Ember.Component.extend({    _selectParcel: function() {      function handleJson(data){       console.log(data);     }      $.ajax('url/geoserver/wms', {       type: 'GET',       data: {       service: 'WFS',       version: '1.1.0',       request: 'GetFeature',       typeName: 'name_here',       maxFeatures: 10000,       outputFormat: 'text/javascript',       srsname: 'EPSG:4326',       bbox: '-73.68229866027832, 40.97056664236637, -73.68229866027832, 40.97056664236637, EPSG:4326'     },       dataType: 'jsonp',       jsonpCallback: 'callback:handleJson',       jsonp: 'format_options'     });    } }); </code></pre>  <p>The problem that I run into is dealing with the callback scope - in this case, handleJson()</p>  <p>I have also tried</p>  <pre><code>.then(function(){}); </code></pre>  <p>after the ajax call but with no luck.</p>  <p>_selectParcel is going to be called frequently based on mouse movement.</p>  <p>How should the jsonp callback be handled within the Ember component?</p>  <p>I've seen this <a href="http://stackoverflow.com/questions/21654532/how-do-i-use-the-jsonp-datatype-with-ember-data">using ember data with jsonp</a> but im not sure how to interact with an adapter from the component.</p>  <p>Console errors look like : "Uncaught ReferenceError: handleJson is not defined" the way its written above - and "Uncaught ReferenceError: parseResponse is not defined" when using callback=? and a ".then(function(){})" promise</p>