<p>I have a project with several <code>sbt</code> submodules:</p>  <pre><code>Project | +--- acceptance +--- dmz +--- back-end </code></pre>  <p>Both <em>dmz</em> and <em>back-end</em> are Lift projects. <em>Dmz</em> has a full UI, <em>back-end</em> contains Rest calls. <em>Acceptance</em> has acceptance tests (using Selenium and ScalaTest) for the project.</p>  <p><strong>SET UP</strong></p>  <p>When running the tests the first thing the suite does is to start 2 embedded jetty servers for the projects using the following code:</p>  <pre class="lang-scala prettyprint-override"><code>val dmzWarPath = "dmz/target/scala-2.11/classes/webapp" val backendWarPath = "back-end/src/main/webapp"      def startDmz() = startServer(10280, "/dmz", dmzWarPath)     def startInternal() = startServer(10400, "/back-end", backendWarPath)  def startServer(port: Int, contextPath: String, warPath: String): Unit = {        val server = new Server(port)     val context = new WebAppContext()    context.setContextPath(contextPath)    context.setServer(server)    context.setWar(warPath)     server.setHandler(context)    server.setStopAtShutdown(true)     server.start() }  startDmz() startInternal() </code></pre>  <p><strong>ISSUE</strong></p>  <p>Embedded Jetty seems to be loading the first project it finds in the classpath, whatever context I set. If I comment all the code related to load <em>Dmz</em> and run the tests while trying to load <em>back-end</em>, <em>Dmz</em> will be loaded instead if it appears first in the classpath.</p>  <p>I can reproduce this classpath ordering issue in IntelliJ by modifying the classpath in the test launcher so I'm quite confident this is the issue.</p>  <p>Yes, I've run sbt clean, recompiled, even restarted laptop. </p>  <p>Any idea on how to fix this issue? How can I force Jetty to ignore classpath and load the wars I'm providing instead?</p>  <p><strong>TO CLARIFY</strong></p>  <p>As far as I can see I'm pointing Jetty to a path (back-end/src/main/webapp) but it is ignoring that and loading instead the first project it finds in the classpath. </p>  <p>I need to understand why is it ignoring the path I set via context.</p>  <p>I need to understand why is it automatically loading things from classpath without anyone asking.</p>