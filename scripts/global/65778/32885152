<p>I have a rather large database that takes a couple of hours to update. Right now I have a spinner that just loads, but the user has no idea how far along it is. I wonder how it would be possible to make a progress bar. The problem is I am not sure how to approach it.</p>  <p>I have not included my method for updating the data in SQL as it is pretty standard. But I can edit the post an add it if needed. However everytime a row has been updated I echo the following line  <code>$statement-&gt;rowCount() . " records UPDATED successfully";</code></p>  <p>This is my main method for updating my database</p>  <pre><code>function updateDatabase($test, $optionName, $value) { set_time_limit(0); global $DAO; try {     foreach ($test as $post) {         $accesToken = "1581461310.56cbc4a.869be6649a604df4874513126692a3ec";         $updateMedia = 'https://api.instagram.com/v1/media/' . $post['insta_id'] . '?access_token=' . $accesToken;         $insta_stream2 = Connect::instaconn($updateMedia);         $obj = json_decode($insta_stream2, true);         if ($obj['meta']['code'] == 200) {             $DAO-&gt;updatePost($post['insta_id'], $obj);         }     }     $DAO-&gt;updateSettings($optionName, $value);     return "Database has been updated"; } catch (Exception $e) {     return "Database has NOT been updated. Error:" . $e; } } </code></pre>  <p>And I update my database from my <code>index.html</code> via an AJAX call</p>  <pre><code>            $('#updateDatabase').click(function (e) {                 var r = confirm("Warning: Updating the database can take a long time depending on the size. Do you want to update the database?");                                  if (r === true) {                     e.preventDefault();                                         var ajaxurl = '../crawler/api_update_dump.php',                             data = {'action': 'updateDatabase', 'optionName': 'last_update', 'value': currentDate};                     $.get(ajaxurl, data, function (response) {                         // Response div goes here.                         obj = JSON.parse(response);                         console.log("response", obj);                         document.getElementById("lastUpdated").innerHTML = "&lt;font  color='white'&gt;Last Updated: " + new Date().toJSON().slice(0, 10) + "&lt;/font&gt;";                     });                 }             }); </code></pre>  <p>In my php file the AJAX call is recieved the following way</p>  <pre><code> case 'getLastUpdate':             $lastUpdate = $DAO-&gt;getValueFromTable("value", "settings", "option_name", "last_update", "value");             echo json_encode($lastUpdate);             break; </code></pre>  <p>Anyone have any suggestions how I should approach making a progress bar for the update?</p>