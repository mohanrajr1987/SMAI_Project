<p>I have a table with no primary key. I need to execute the following:</p>  <pre><code>UPDATE t1    SET tstamp = now()  WHERE `col1` = 1    AND `col2` = 'this'; </code></pre>  <p>In Workbench it throws <code>Error 1175</code> until I execute this line before the update:</p>  <pre><code>SET SQL_SAFE_UPDATES = 0; </code></pre>  <p>With this line it works just fine.</p>  <p>But when I try to do this in perl it doesn't work. I tried both </p>  <pre><code>$dbh-&gt;do("SET SQL_SAFE_UPDATES = 0"); </code></pre>  <p>and</p>  <pre><code>my $dbh = DBI-&gt;connect("DBI:mysql:$db:$host:$port",$user,$password, { RaiseError =&gt; 1, AutoCommit =&gt; 0, sql_safe_updates =&gt; 0 }) </code></pre>  <p>but it still doesn't work. </p>  <p>How can I get this work in perl?</p>  <p>UPD. I updated the code with @@sql_safe_updates check and commit.</p>  <p>The code:</p>  <pre><code>$sth = $dbh-&gt;prepare("SELECT @\@sql_safe_updates"); $sth-&gt;execute; while(my @row = $sth-&gt;fetchrow_array) { print "sql_safe_updates before: ". $row[0] . "\n"; }  $dbh-&gt;do("SET SQL_SAFE_UPDATES = 0") or die $dbh-&gt;errstr;  $sth = $dbh-&gt;prepare("SELECT @\@sql_safe_updates"); $sth-&gt;execute; while(my @row = $sth-&gt;fetchrow_array) { print "sql_safe_updates after: " . $row[0] . "\n"; }  $query = "UPDATE t1 SET tstamp = now() WHERE `col1` = 1 AND `col2` = 'this'"; $sth = $dbh-&gt;prepare($query); $rv = $sth-&gt;execute or die $sth-&gt;err(); $dbh-&gt;commit; if ("$rv" ne "1") {     $query =~ s/\n/ /g; $query =~ s/  / /g;     print "Failed to run query: $query\n";    exit; } </code></pre>  <p>Output:</p>  <pre><code>sql_safe_updates before: 0 sql_safe_updates after: 0 Failed to run query: UPDATE t1 SET tstamp = now() WHERE `col1` = 1 AND `col2` = 'this' </code></pre>  <p>UPD2. I checked the table - everything works after I commited. It is confusing thought, that $rv is 1 on successful <code>select</code> and 2 on successful <code>update</code> </p>