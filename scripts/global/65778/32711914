<p>Here's the data: </p>  <p>[ TABLE_1 ]</p>  <pre><code>id | prod1  | date1  | prod2  | date2  | prod3  | date3 | ---|--------|--------|--------|--------|--------|-------| 1  | null   | null   | null   | null   | null   | null  | 2  | null   | null   | null   | null   | null   | null  | 3  | null   | null   | null   | null   | null   | null  | </code></pre>  <p>[ TABLE_2 ]</p>  <pre><code>id   |  date       |   product |   -----|-------------|-----------| 1    |  20140101   |   X       |  1    |  20140102   |   Y       |  1    |  20140103   |   Z       |   2    |  20141201   |   data    |  2    |  20141201   |   Y       |  2    |  20141201   |   Z       |   3    |  20150101   |   data2   |  3    |  20150101   |   data3   |  3    |  20160101   |   X       |  </code></pre>  <p>Both tables have other columns not listed here.  <code>date</code> is formatted: yyyymmdd and datatype is <code>int</code>. <code>[ TABLE_2 ]</code> doesn't have empty rows, just tried to make sample above more readable.</p>  <p>Here's the Goal:</p>  <p>I need to update <code>[ TABLE_1 ]</code> <code>prod1</code>,<code>date1</code>,<code>prod2</code>,<code>date2</code>,<code>prod3</code>,<code>date3</code>  with <code>product</code> collected from <code>[ TABLE_2 ]</code> with corresponding <code>date</code> values. </p>  <p>Data must be sorted so that "latest" <code>product</code> becomes <code>prod1</code>,  2nd latest <code>product</code> will be <code>prod2</code> and 3rd is <code>prod3</code>.</p>  <p>Latest <code>product</code>  =  biggest <code>date</code> (int).  If dates are equal, order doesn't matter. (see id=2 and id=3).</p>  <p>Updated <code>[ TABLE_1 ]</code> should be: </p>  <pre><code>id | prod1  | date1    | prod2  | date2    | prod3  | date3    | ---|--------|----------|--------|----------|--------|----------| 1  | Z      | 20140103 | Y      | 20140102 | X      | 20140101 |   2  | data   | 20141201 | Y      | 20141201 | Z      | 20141201 |   3  | X      | 20160101 | data2  | 20150101 | data3  | 20150101 | </code></pre>  <p>Ultimate goal is to get the following :</p>  <p>[ TABLE_3 ]</p>  <pre><code>id | order1             | order2               | order3     |  + Columns from [ TABLE_1 ] ---|--------------------|----------------------|------------|-------------------------- 1  | 20140103:Z         | 20140102:Y           | 20140103:Z | 2  | 20141201:data:Y:Z  | NULL                 | NULL       | 3  | 20160101:X         | 20150101:data2:data3 | NULL       | </code></pre>  <p>I have to admit this exceeds my knowledge and I haven't tried anything. </p>  <p>Should I do it with JOIN or SELECT subquery?</p>  <p>Should I try to make it in one SQL -clause or perhaps in 3 steps,  each <code>prod</code>&amp;<code>date</code> -pair at the time ? </p>  <p>What about creating <code>[ TABLE_3 ]</code> ?  It has to have columns from <code>[ TABLE_1 ]</code>. Is it easiest to create it from <code>[ TABLE_2 ]</code> -data or Updated <code>[ TABLE_1 ]</code> ? </p>  <p>Any help would be highly appreciated. Thanks in advance. </p>  <p>I'll post some of my own shots on comments.</p>