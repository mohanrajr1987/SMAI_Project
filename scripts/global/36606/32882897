<p>I've got the following code snippets in the interactive session in R (I use RStudio)</p>  <pre><code>plot.ng &lt;- ggplot(data=hd.ng, aes(x=col1, y=col2, colour=type, group=type)) +      # other setup </code></pre>  <p>and</p>  <pre><code>plot.ng + geom_hex(alpha=0.3) + geom_density2d(color='black') +           geom_contour(data=gridded.prediction(hd.ng, m.ng), aes(z=prediction), bins=20) + .... </code></pre>  <p>Here, <code>hd.ng</code> is a data frame with data for plotting, and <code>gridded.prediction</code> is a function, which outputs another data frame, based on a data frame, specified in its first argument. Essentially, it uses <code>min</code> and <code>max</code> of its columns to call <code>expand.grid</code>, like in the following</p>  <pre><code>gridded.prediction &lt;- function(df, model) {     grid.glm &lt;- expand.grid(hd=seq(from=min(df$col1), to=max(df$col1), length.out=100),                         cnt=seq(from=min(df$col2), to=max(df$col2), length.out=100) )      grid.glm$prediction &lt;- predict(model, newdata=grid.glm, type="response")     grid.glm } </code></pre>  <p>Generally these plots produce 2d hexbin histogram with some contour lines overplotted, like in the fragment below</p>  <p><a href="http://i.stack.imgur.com/wWcnE.png" rel="nofollow"><img src="http://i.stack.imgur.com/wWcnE.png" alt="enter image description here"></a></p>  <p>Here, hexagonal grid is produced by <code>geom_hex</code> from <code>hd.ng</code> data frame, and contour lines - by <code>geom_contour</code>, but from another data frame, derived from limits of <code>hd.ng</code>.</p>  <p>As far as I understand, <code>geom_contour</code> already knows the underlying data frame, that has been used to produce <code>plot.ng</code>. How can I make it to pass to the <code>gridded.prediction</code> either that data frame, or, preferably min and max values from <code>col1</code> and <code>col2</code>?</p>