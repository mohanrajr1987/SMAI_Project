<p>I am developing a shiny application which aims at comparing plots on the same graph and I want to use ggplot to be able to zoom in my graph.</p>  <p>The problem is the number of plots, which depends on the user selection.  I want to plot the graphs with lines, here is what I have (working example) :</p>  <p>ui.R</p>  <pre><code>shinyUI(fluidPage(      sidebarLayout(     sidebarPanel(                 fluidRow(           #checkboxGroupInput         column((5),                 checkboxGroupInput("model",                                    label = h3("Choix du modele"),                                    choices = c("1","2","3"),                                   selected = 8)         )                   )              ),        mainPanel     (     fluidRow(       column(width = 12, class = "well",              h4("Brush and double-click to zoom"),              plotOutput("plot1", height = 300,                         dblclick = "plot1_dblclick",                         brush = brushOpts(                           id = "plot1_brush",                           resetOnNew = TRUE                         )              )       )     )     )   ) ) ) </code></pre>  <p>server.R</p>  <pre><code># Here is the server part of Shiny  library('shiny') library(ggplot2) library(reshape) library(Cairo)  function(input, output) {     ranges &lt;- reactiveValues(x = NULL, y = NULL)    output$plot1 &lt;- renderPlot({      tsPlot &lt;- seq(from = ISOdate(2012,01,01,0,0,0), to = ISOdate(2012,01,01,23,45,0), by =60*15)     measures &lt;- runif(96)      dataPlot &lt;- data.frame(tsPlot,measures)     list_models &lt;- c("1","2","3")     if(length(input$model) &gt; 0)     {       nb = 0       for(i in 1:length(list_models))       {         values &lt;- runif(96)         dataPlot&lt;- cbind(dataPlot,values)       }     }     dataPlot_melted &lt;- melt(dataPlot,id="tsPlot")      ggplot() +        geom_line(data=dataPlot_melted,aes(tsPlot,value)) +       coord_cartesian(xlim = ranges$x, ylim = ranges$y)    })    # When a double-click happens, check if there's a brush on the plot.   # If so, zoom to the brush bounds; if not, reset the zoom.   observeEvent(input$plot1_dblclick, {     brush &lt;- input$plot1_brush     if (!is.null(brush)) {       ranges$x &lt;- c(brush$xmin, brush$xmax)       ranges$y &lt;- c(brush$ymin, brush$ymax)      } else {       ranges$x &lt;- NULL       ranges$y &lt;- NULL     }   })  } </code></pre>  <p>The problem is solved if I want to plot points. I just have to use geom_point. But if I want to point lines, all the values are put in the same plot. </p>  <p>Does anyone know the trick to get out of this situation ?</p>  <p>Thanks in advance :)</p>