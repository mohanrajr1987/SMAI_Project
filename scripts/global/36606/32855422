<p>I am trying to create a coefficient plot with a scatterplot of data points laid overtop of it. A portion of the data are listed below: </p>  <pre><code>print(dat)                     lower    upper      mode    condition   obsMean p100 p102 p103 p104 p105 ob.h.Black.650  0.693595 0.950305 0.8849853  h.Black.650 0.8122302 0.85 1.00 0.85 0.85 0.85 ob.h.White.650  0.649625 0.930375 0.8306119  h.White.650 0.7852518 0.70 0.95 0.80 0.80 0.90 ob.h.Black.800  0.833255 0.993105 0.9701335  h.Black.800 0.9035971 0.95 1.00 0.95 0.95 1.00 ob.h.White.800  0.802110 0.983230 0.9469604  h.White.800 0.8762590 0.95 0.95 0.80 1.00 0.85 ob.h.Black.950  0.869375 0.995800 0.9804180  h.Black.950 0.9165468 0.90 1.00 0.85 1.00 1.00 ob.h.White.950  0.862895 0.991750 0.9694811  h.White.950 0.9046763 1.00 1.00 0.95 1.00 0.90 ob.h.Black.1100 0.879340 0.996550 0.9885382 h.Black.1100 0.9323741 1.00 1.00 0.90 0.75 0.85 ob.h.White.1100 0.853110 0.994405 0.9773240 h.White.1100 0.9140288 0.95 0.95 1.00 0.90 0.90 </code></pre>  <p>My code produces output shown below:</p>  <pre><code>ggplot(dat, aes(x = reorder(condition, 1:8), y = mode)) + #X is cond, Y is mode   geom_point(size = 4) + #Add in black dots for the modes   geom_pointrange(aes(ymin = lower, ymax = upper)) + #Add in 95% HDI bars   geom_point(aes(x = reorder(condition, 1:8), y = obsMean), size = 4, colour = "red") +   geom_point(aes(x = reorder(condition, 1:8), y = p100), #X is cond, Y is a Ps mean     position = position_jitter(width = .2, height = 0), #jitter the data point     size = 2, colour = "blue") +  #make it small and blue   geom_point(aes(x = reorder(condition, 1:8), y = p102), #X is cond, Y is a Ps mean     position = position_jitter(width = .2, height = 0), #jitter the data point     size = 2, colour = "blue") +  #make it small and blue   geom_point(aes(x = reorder(condition, 1:8), y = p103), #X is condition, Y is a Ps mean     position = position_jitter(width = .2, height = 0), #jitter the data point     size = 2, colour = "blue") +  #make it small and blue   geom_point(aes(x = reorder(condition, 1:8), y = p104), #X is condition, Y is a Ps mean     position = position_jitter(width = .2, height = 0), #jitter the data point     size = 2, colour = "blue") +  #make it small and blue   geom_point(aes(x = reorder(condition, 1:8), y = p105), #X is condition, Y is a Ps mean     position = position_jitter(width = .2, height = 0), #jitter the data point     size = 2, colour = "blue") +  #make it small and blue   coord_cartesian(ylim = c(.6, 1)) + #Scale the graph from .6 to 1   ylab("Hit Rate") + #Add y axis label   theme_bw() +  #Use black and white theme   theme(axis.title.x = element_blank(), #Get rid of the x-axis label     panel.background = element_blank(), #Get rid of the background     panel.grid = element_blank(), #Get rid of the gridlines     panel.border = element_rect(colour = "black", fill = NA, size = 1))  #Add border </code></pre>  <p>Which produces this plot.</p>  <p><a href="http://i.stack.imgur.com/quHlN.png" rel="nofollow"><img src="http://i.stack.imgur.com/quHlN.png" alt="enter image description here"></a></p>  <p>As you can see, the code is inefficient. For each set of points that I want to overlay on the condition mean and confidence interval, I have to enter another line of code. With 139 repetitions in the full dataset, that's particularly cumbersome. I was wondering if there was a more efficient way of overlaying the individual repetitions on the mean and CIs.</p>