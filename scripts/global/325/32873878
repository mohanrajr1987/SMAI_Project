<p>I am developing a '<em>monitor the traffic</em>' kind of an application on the router, where I use the <code>TPROXY</code> feature to intercept the DNS packet &amp; send it to my application server listening on a port. After processing, I forward the packet to the actual destination (i.e., dnsmasq) after modifying the TTL.</p>  <p>JFYI, my firewall rule to TPROXY forward the DNS Response packets to my application server listening on port 2345 looks like this:</p>  <pre><code>iptables -t mangle -A PREROUTING -i &lt;WAN-INTERFACE&gt; -p udp --sport 53 -j TPROXY --tproxy-mark 0x3 --on-port 2345 </code></pre>  <p>At my application server, without the error checks:</p>  <pre><code>sock_fd = socket(AF_INET, SOCK_DGRAM, 0 );  setsockopt(socket_fd, SOL_IP, IP_PKTINFO, &amp;enabled, sizeof(int)); setsockopt(socket_fd, SOL_IP, IP_TRANSPARENT, &amp;enabled, sizeof(int)); setsockopt(socket_fd, SOL_IP, IP_RECVORIGDSTADDR, &amp;enabled, sizeof(int)); setsockopt(socket_fd, SOL_SOCKET, SO_REUSEADDR, &amp;enabled, sizeof(int));  /* client_addr points to the source IP (i.e. upstream DNS server's IP) */ bind(sock_fd, (const struct sockaddr *)client_addr, sizeof(struct sockaddr));  /* dst_addr points to the router IP on the WAN interface */ sendto(sock_fd, dns_packet_buffer, data_len, 0,             (const struct sockaddr *)dst_addr, sizeof(struct sockaddr)); </code></pre>  <p>This <code>sendto</code> succeeds, i.e., no error!!! But, dnsmasq does not receive the data! To be more precise, the fd on which dnsmasq is waiting for data does not become "ready."</p>  <p>At the dnsmasq code, inside <code>check_dns_listeners</code></p>  <pre><code>for (serverfdp = daemon-&gt;sfds; serverfdp; serverfdp = serverfdp-&gt;next)     if (FD_ISSET(serverfdp-&gt;fd, set))         reply_query(serverfdp-&gt;fd, serverfdp-&gt;source_addr.sa.sa_family, now); </code></pre>  <p>the <code>FD_ISSET()</code> returns <code>false</code>. If I do not intercept the DNS response flow then this <code>FD_ISSET()</code> returns true. What am I missing here?</p>