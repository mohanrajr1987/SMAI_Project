<p>I need help figuring out how to get CarrierWave to work with an ActiveResource object.  I am working on a project that currently uses CarrierWave on a standard ActiveRecord object which works very nicely.  However, we are migrating toward a remote file system so I need CarrierWave to work with ActiveResource objects.</p>  <p>I know that CarrierWave allows you to write your own storage engine rather than use say fog, file, or mongo grid_fs but I can't figure out what the flow for this process is.  </p>  <p>Here is the state of my efforts:</p>  <p>ReportDocument class</p>  <pre><code>class ReportDocument    mount_uploader :merchant_geoip_image, ImageUploader  end </code></pre>  <p>Uploader for CarrierWave</p>  <pre><code>class ImageUploader &lt; CarrierWave::Uploader::Base    storage MyCustomStorageEngine  end </code></pre>  <p>My custom storage engine</p>  <pre><code>class MyCustomStorageEngine    def store!(file)    # do custom storage stuff with ActiveResource object here   end    def retrieve!(identifier)    # do custom retrieval stuff with ActiveResource object here   end  end </code></pre>  <p>My issue is that I can't get CarrierWave to call my custom <code>store!</code> and <code>retrieve!</code> methods when I save the <code>ReportDocument</code> object.  The Mongoid ORM defines their storage engine as <code>gridFS</code> which can be found here:  <a href="https://github.com/carrierwaveuploader/carrierwave-mongoid/blob/master/lib/carrierwave/storage/grid_fs.rb" rel="nofollow">https://github.com/carrierwaveuploader/carrierwave-mongoid/blob/master/lib/carrierwave/storage/grid_fs.rb</a></p>  <p>It doesn't seem like I'm doing anything different from the Mongoid ORM implementation.  Any help would be greatly appreciated.</p>