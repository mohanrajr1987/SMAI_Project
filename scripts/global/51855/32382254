<p>I have this in my 2 models:</p>  <pre class="lang-rb prettyprint-override"><code>class Weather   include Mongoid::Document   store_in database: -&gt;{ "myapp_shared_#{Rails.env}" }   ... </code></pre>  <pre class="lang-rb prettyprint-override"><code>class Event   include Mongoid::Document   belongs_to :weather   ... </code></pre>  <p>This is a multi-tenant app, so I have this in my application controller, to change the database based on subdomain:</p>  <pre class="lang-rb prettyprint-override"><code>class ApplicationController &lt; ActionController::Base   before_filter :switch_database    def switch_database     Mongoid.override_database("myapp_#{subdomain_name}_#{Rails.env}")   end   ... </code></pre>  <p>Now when I run Event.first.weather, I see this in my debug log:</p>  <pre><code>D, [2015-09-03T18:38:18] DEBUG -- : MONGODB | myapp_subdomain_development.find | STARTED | {"find"=&gt;"events", "filter"=&gt;{}} D, [2015-09-03T18:38:18] DEBUG -- : MONGODB | myapp_subdomain_development.find | SUCCEEDED | 0.025892s D, [2015-09-03T18:38:18] DEBUG -- : MONGODB | myapp_subdomain_development.find | STARTED | {"find"=&gt;"weathers", "filter"=&gt;{"_id"=&gt;BSON::ObjectId('5522c1d9526f6d6b9f0c0000')}} D, [2015-09-03T18:38:18] DEBUG -- : MONGODB | myapp_subdomain_development.find | SUCCEEDED | 0.00078s </code></pre>  <p>So weather is searched in the override_database, not in the store_in database. If I do not run Mongoid.override_database, then the weather is taken from the app_shared_development database as specified in store_in.</p>  <p>The question is, how do I use override_database as this is a multi-tenant app, but still force certain models to always use the shared database?</p>