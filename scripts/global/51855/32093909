<p>I would like to create one contact for each Device. At this moment this two models are independent, but I am creating a one to one dependency. Let's introduce the context:</p>  <p>given a Device model:</p>  <pre><code>class Device    # some ommited code    belongs_to :contact, autosave: true, index: true end </code></pre>  <p>and given a Contact model which uses alize:</p>  <pre><code>class Contact    # some ommited code    has_one :device    alize :device, :app_id, :type end </code></pre>  <p>I created a task that executes bulk inserts into the contact and device models. </p>  <pre><code>device = Device.find("xxxxxxa2") contact = device.contact device.destroy </code></pre>  <p>The problem here is that <code>device.destroy</code> is automatically removing the <code>device_fields</code> created in the contact document, and I want to maintain this info.</p>  <p><strong>How can I temporarily avoid this <code>after/before_destroy</code> callback?</strong></p>