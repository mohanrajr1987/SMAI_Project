<p>In my database, I have "Jobs" that include a per-user "read/unread" status.  I have implemented this by keeping track of a list of readers for each job.</p>  <pre><code>class Job    has_and_belongs_to_many :readers, :class_name =&gt; "MyApp::User", :inverse_of =&gt; nil end </code></pre>  <p>I would like to do a Mongoid query to find all unread jobs for a given user.  In other words, the query equivalent of:</p>  <pre><code>Job.all.select { |j| !j.readers.include?(user) } </code></pre>  <p>I am open to suggestions about restructuring the data/relationships in a better way to track the read/unread status, but mostly I'm wondering if such a query is fundamentally possible.</p>  <p>Currently I'm using Mongoid 3 but I'm in the process of upgrading to 5 if it matters.</p>