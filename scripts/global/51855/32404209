<p>I am using Mongoid v4.0.2, and I'm running into an interesting issue using <code>.includes()</code>.  I have a record that represents invoices, who has a list of charges.  </p>  <p>I want to query for a single invoice and have the charges be populated after I run the query.  <a href="http://mongoid.github.io/en/mongoid/docs/querying.html" rel="nofollow">According to the docs</a> (search for "Eager Loading"), I should be able to do something like this to have Mongoid populate the charges:</p>  <pre><code>Invoice.includes(:charges).find_by({ _id: &lt;objectId&gt; }) </code></pre>  <p>When I get the record back the charges are still showing up as a list of ObjectId's, and removing the <code>.includes()</code> seems to have no effect one way or another.  I've verified each charge exists in the record I'm querying for, so I'm confused why they aren't populating.</p>  <p>I believe I have the data models set up correctly, but I'll include them here for completeness.</p>  <pre><code>class Invoice   include Mongoid::Document   has_many :charges    field :status, type: String   field :created, type: Time, default: -&gt; { Time.now } end  class Charge   include Mongoid::Document    field :created, type: Time, default: -&gt; { Time.now }   field :transactionId, type: String    field :category, type: String   field :amount, type: Float   field :notes, type: String    belongs_to :invoices end </code></pre>