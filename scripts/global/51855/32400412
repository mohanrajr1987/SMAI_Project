<p>I have the following model:</p>  <pre><code>class User   #Mongoid   ...   field :active_id   ... end </code></pre>  <p>I have a navigation service.</p>  <pre><code>class NavigationService   def initialize(user)     @user = user   end    def user     @user   end    ,,, end </code></pre>  <p>I also have a decorator for the navigatio service to navigate as another user.</p>  <pre><code>class NavigationServiceDecorator   def initialize(navigation_service, new_user)     @user = new_user     @new_navigation = NavigationService.new(new_user)     @old_navigation = navigation_service   end end </code></pre>  <p>What I wanted to do is to whenever the user is decorated, when retrieving its active_id, it would return a specific value (this is just an example):</p>  <pre><code>u = User.first n = NavigationService.new(u) n.user.active_id ---&gt; "2" m = User.last m.active_id ---&gt; "3" o = NavigationServiceDecorator.new(n,m) o.active_id ---&gt; "anywhing I want" </code></pre>  <p>So, basically, I wanted to every call to user active_id inside the decorator to return the result of a method defined inside the decorator. Something like:</p>  <pre><code>alias_method "user.active_id", "override_active_id" </code></pre>  <p>Was I clear?</p>