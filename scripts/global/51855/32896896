<p>I want to a store a field like follows:</p>  <pre><code>CO-1 CO-2 CO-3 ... </code></pre>  <p>I plan to do it in a before_create or after_create callback:</p>  <pre><code>class Contact     include Mongoid::Document      after_create :set_reference_number      def set_reference_number       ...     end end </code></pre>  <p>Since mongodb uses a 12-byte BSON type and not an autoincremented integer, I cannot simply just take the id value of the saved record. I read that mongodb has a findAndModify function that allows you to increment a field, but my field will be stored as a string e.g. "CO-1". Is there anyway to achieve what I want efficiently without resorting to this:</p>  <pre><code>    def set_reference_number       prefix = self.is_a?(Contact) ? 'CO' : 'PR'       last_document = self.class.order_by([:created_at, :desc]).last       if last_document.present?         val = last_document.reference_number.match(/^\w+-(.+)/)[1].to_i         self.reference_number = "#{prefix}-#{val+1}"       else         self.reference_number = "#{prefix}-#{1}"       end       save!     end </code></pre>