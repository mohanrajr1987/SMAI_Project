<p>I have 3 lists - control, parent and child. Whenever an item is added to the control list, I need to copy all the items in the parent into the child (while changing a little) After the process has happened a few times, the child list count will be a multiple of the parent list count, but the parent will remain constant. </p>  <p>I want this to happen when the user clicks the Save button on a new item in the control list.</p>  <p>I have written code in the PreSaveAction and put it in a Script editor web part in the New Item page of the control list.</p>  <p>The code does not perform as needed. I have added alerts so that I can follow what is going on. The last alert I get is in line 42 and it tells me the count on the parent list. I do not get the next alert in line 45 or any other thereafter. Note that there is no action between these two alerts, only a few commented lines. The control is added but the copy does not take place.</p>  <p>Here is the code:</p>  <pre><code>&lt;script type="text/javascript" src="//ajax.aspnetcdn.com/ajax/4.0/1/MicrosoftAjax.js"&gt;&lt;/script&gt; &lt;script type="text/javascript" src="_layouts/15/sp.runtime.js"&gt;&lt;/script&gt; &lt;script type="text/javascript" src="_layouts/15/sp.js"&gt;&lt;/script&gt; &lt;script type="text/javascript"&gt; function PreSaveAction()  {     var clientContext;      var web;     var lists     var inputList;     var outputList;     alert("before caml query"); //  var query = "&lt;View Scope = 'RecursiveAll'&gt;&lt;Query&gt;&lt;Where&gt;&lt;Eq&gt;&lt;FieldRef Name='Active'/&gt;" +  //       "&lt;Value Type='Integer'&gt;1&lt;/Value&gt;&lt;/Eq&gt;&lt;/Where&gt;&lt;/Query&gt;&lt;/View&gt;";     var query = "&lt;Where&gt;&lt;Eq&gt;&lt;FieldRef Name='Active'/&gt;" +          "&lt;Value Type='Integer'&gt;1&lt;/Value&gt;&lt;/Eq&gt;&lt;/Where&gt;";     clientContext = SP.ClientContext.get_current();      web = clientContext.get_web();     lists = web.get_lists();     inputList = lists.getByTitle('ParentList');     outputList = lists.getByTitle('ChildList');     var camlQuery = new SP.CamlQuery();     // return only Active items     camlQuery.set_viewXml(query);     alert("in view xml");     this.inputListItems = inputList.getItems(camlQuery); //Parent     clientContext.load(inputListItems);     alert("after loading list items");     // The copying will be done in the succeeded function     clientContext.executeQueryAsync(Function.createDelegate(this, this.onQuerySucceeded), Function.createDelegate(this, this.onQueryFailed));      return true; };  function onQuerySucceeded(sender, args)  {     alert("start Query Succeeded");     var inputItem = '';     var outputItem = '';     var parentID = 0;     var parentTitle = '';     var contolName = "blah";     alert("Input List count = " + inputListItems.get_count());     // get the reference to the control     // var contolName = document.getElementsByName("Title")[0].value;     alert("in control " + controlName);     var listItemEnumerator = inputListItems.getEnumerator();     alert("after setting Enumerator");     while (listItemEnumerator.moveNext())      {         var inputItem = listItemEnumerator.get_current();         parentID = inputItem.get_id();         parentTitle = inputItem.get_item('Title');         // now create the copy in output         // CreateOutputListItem(parentID, parentTitle, contolName);         outputItem.set_item('Parent', parentTitle);         outputItem.set_item('ParentID', parentID);         outputItem.set_item('Control', contolName);         outputItem.update();         clientContext.load(outputItem);         clientContext.executeQueryAsync(Function.createDelegate(this, this.onWriteSucceeded), Function.createDelegate(this, this.onWriteFailed));     } }  function onWriteSucceeded(sender, args) {      alert('Item created: ' + outputItem.get_id()); }  function onWriteFailed(sender, args)  {      alert('Request failed. ' + args.get_message() + '\n' + args.get_stackTrace()); }   function onQueryFailed(sender, args) {     alert('Request failed. ' + args.get_message() + '\n' + args.get_stackTrace()); } &lt;/script&gt; </code></pre>