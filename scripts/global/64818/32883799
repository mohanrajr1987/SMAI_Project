<p>im having a problem with libgdx .. im creating a game where a little dude is running forword on screen.. the little boy is a dynamic body and i created some floors for him to run on .. the floors are static .. the problem is where the little boy jumps and hit the top floor (in front of it) he stop running forward ..  im depending on the libgdx world physics so im kinda stuck .. hope some one can help me ...</p>  <p>my code for the little boy is:</p>  <pre><code>playerBodyDef = new BodyDef(); playerBodyDef.type = BodyDef.BodyType.DynamicBody; playerBodyDef.position.set(this.playerX / Constants.PIXELTOMETER, this.playerY / Constants.PIXELTOMETER); //        playerBodyDef.fixedRotation = true;      playerBody = this.world.createBody(playerBodyDef);     playerBody.setFixedRotation(true);     playerBody.setLinearVelocity(2f, 0f);      PolygonShape shape = new PolygonShape();     shape.setAsBox(((this.width / 2f) / Constants.PIXELTOMETER), ((this.height / 2f) / Constants.PIXELTOMETER));       FixtureDef fdef = new FixtureDef();     fdef.shape = shape;     fdef.density = 1f;     fdef.friction = 0.0f;      playerBody.createFixture(fdef);     shape.dispose();      MassData md = playerBody.getMassData();     md.mass = 1;     playerBody.setMassData(md);      this.runningBoy = new Box2DSprite(playerBody, this.playerTextureRegion, this.playerX, this.playerY, this.width, this.height, this.playerScale, this.regionNums, this.ticker, this.gameCam); </code></pre>  <p>the box2dsprite update and render is :</p>  <pre><code>public void update(float dt) {     handleInput();      this.gameCam.update();      if (!this.animationOn) {         this.setPosition((this.body.getWorldCenter().x * Constants.PIXELTOMETER) - this.getWidth() / 2,                 (this.body.getWorldCenter().y * Constants.PIXELTOMETER) - this.getHeight() / 2);     }     else     {         this.setPosition((this.body.getWorldCenter().x * Constants.PIXELTOMETER) - this.width / 2,                 (this.body.getWorldCenter().y * Constants.PIXELTOMETER) - this.height / 2);     }      this.setRotation(MathUtils.radiansToDegrees * this.body.getAngle());     this.elapsedTime += dt; }  private void handleInput() {}  public void render(SpriteBatch sb) {     sb.setProjectionMatrix(this.gameCam.combined);      sb.begin();      if (animationOn)     {         sb.draw(this.animation.getKeyFrame(elapsedTime, true), this.getX(), this.getY(),                 this.getOriginX(), this.getOriginY(), this.getWidth(), this.getHeight(), this.getScaleX(), this.getScaleY(), this.getRotation());     }     else     {         sb.draw(this, this.getX(), this.getY(), this.getOriginX(), this.getOriginY(),                 this.getWidth(), this.getHeight(), this.getScaleX(), this.getScaleY(), this.getRotation());     }      sb.end(); } </code></pre>  <p>and the world im creating regular i think with 0, -10 gravity ..</p>