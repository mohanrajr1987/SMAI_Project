<p>I'm working on a game and added a shader, which fades everythin into grayscale and then into black. The shader itself works fine, but when I start it some functions of the Spritebatch and the Sprites stop to work. Color-changes are ignored and the Alpha of anything is always 1. These methods are usually responsible for graphical changes which work very good when the default shader is used:</p>  <pre><code>sprite.setColor(Color.RED); sprite.setAlpha((float)lifeTime/100f); sprite.draw(pBatch); </code></pre>  <p>This code colors a pop up red, changes the alpha and then draws it. When the shader is on, it just draws it, like the first two lines wouldn't exist.</p>  <p>Here's the shader's code:</p>  <p>vertex:</p>  <pre><code>attribute vec4 a_position; attribute vec4 a_color; attribute vec2 a_texCoord0;  uniform mat4 u_projTrans;  varying vec4 v_color; varying vec2 v_texCoords;  void main() {     v_color = a_color;     v_texCoords = a_texCoord0;     gl_Position = u_projTrans * a_position; } </code></pre>  <p>fragment:</p>  <pre><code>#ifdef GL_ES     precision mediump float; #endif  varying vec2 v_texCoords; uniform sampler2D u_texture; uniform mat4 u_projTrans;  uniform float u_fade;  void main() {         float gray_fade = u_fade;         float dark_fade = 1;         if(u_fade &gt;= 1){             gray_fade = 1;             dark_fade = 2-u_fade;         }          vec4 color = texture2D(u_texture, v_texCoords).rgba;         float gRed   = color.r - (color.r - (0.299*color.r +  0.587*color.g + 0.114*color.b))* gray_fade;         float gGreen = color.g - (color.g - (0.299*color.r +  0.587*color.g + 0.114*color.b))* gray_fade;         float gBlue  = color.b - (color.b - (0.299*color.r +  0.587*color.g + 0.114*color.b))* gray_fade;         vec3 grayscale = vec3(gRed * dark_fade, gGreen * dark_fade, gBlue * dark_fade);           gl_FragColor = vec4(grayscale, color.a);  } </code></pre>