<p>I am working on a LibGDX project, and I have a class which (simplified) looks like this:</p>  <pre><code>public static class Note implements Json.Serializable {     public JsonValue data;     @Override public void write (Json json) {         json.writeValue("data", data);     }     @Override public void read (Json json, JsonValue jsonData) {         data = json.readValue("data", JsonValue.class, jsonData);     } } </code></pre>  <p>which, if I try to convert to a string in this way:</p>  <pre><code>Json json = new Json();         json.setOutputType(JsonWriter.OutputType.json);         try {             String jsonString = json.toJson(request);             byte[] data = jsonString.getBytes("UTF-8");             processRawData(data);             return true;         } catch (UnsupportedEncodingException e) {             e.printStackTrace();         } </code></pre>  <p>explodes with StackOverflow:</p>  <pre><code>com.badlogic.gdx.utils.GdxRuntimeException: java.lang.StackOverflowError at com.badlogic.gdx.backends.lwjgl.LwjglApplication$1.run(LwjglApplication.java:127) </code></pre>  <p>Caused by: java.lang.StackOverflowError     at sun.misc.Unsafe.getDouble(Native Method)     at sun.misc.Unsafe.getDouble(Unsafe.java:379)     at sun.reflect.UnsafeDoubleFieldAccessorImpl.getDouble(UnsafeDoubleFieldAccessorImpl.java:69)     at sun.reflect.UnsafeDoubleFieldAccessorImpl.get(UnsafeDoubleFieldAccessorImpl.java:36)     at java.lang.reflect.Field.get(Field.java:379)     at com.badlogic.gdx.utils.reflect.Field.get(Field.java:158)     at com.badlogic.gdx.utils.Json.writeFields(Json.java:266)     at com.badlogic.gdx.utils.Json.writeValue(Json.java:561)     at com.badlogic.gdx.utils.Json.writeFields(Json.java:282)     at com.badlogic.gdx.utils.Json.writeValue(Json.java:561)     at com.badlogic.gdx.utils.Json.writeFields(Json.java:282)     at com.badlogic.gdx.utils.Json.writeValue(Json.java:561)     at com.badlogic.gdx.utils.Json.writeFields(Json.java:282)     at com.badlogic.gdx.utils.Json.writeValue(Json.java:561)     at com.badlogic.gdx.utils.Json.writeFields(Json.java:282) ... many more lines like these....</p>  <p>Can anyone tell me what's wrong here? Is it my implementation somehow which causes the loop, or is it a bug in LibGDX's implementation?</p>