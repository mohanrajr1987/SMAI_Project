<p>I want to do below steps while already in active transaction</p>  <ol> <li>insert/update some records</li> <li>select all those records hold it in memory with non entity copy</li> <li>rollback first step without rolling back parent transaction</li> <li>return result from step 2.</li> </ol>  <p>I have this</p>  <pre><code>@Stateless public class DBWorker {      public Result doWork(boolean isPreview) {         Result result;          if(isPreview) {             em.getTransaction().begin();         }         doSomeWork();         List&lt;SomeEntity&gt; resultOfDoSomeWork = em.createQuery(..).getResultList();         result = copyToNonEntity(resultOfDoSomeWork);          if(isPreview)             em.getTransaction().rollback();          return result;     } } </code></pre>  <p>But gives exception <code>A JTA EntityManager cannot use getTransaction()    IllegalStateException:A JTA EntityManager cannot use getTransaction()</code></p>