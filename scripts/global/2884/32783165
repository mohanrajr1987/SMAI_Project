<p>I have encounter in JPA/Hibernate odd error... I'm getting </p>  <pre><code>PersistentObjectException: detached entity passed to persist </code></pre>  <p>When trying to remove ServicePoint entity that has composite key consisting of ProviderId and ServicePointNumber. (Provider is another entity and ServicePoint represents weak entity dependent on Provider entity). </p>  <p>Code looks like below: </p>  <pre><code>@DELETE         @Path("/{servicePointNumber : \\d+}")         @Produces({MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML})         public Response removeServicePoint( @PathParam("userId") Long userId,                                             @PathParam("servicePointNumber") Integer servicePointNumber,                                             @BeanParam GenericBeanParam params) throws ForbiddenException, NotFoundException {              if(params.getAuthToken() == null) throw new ForbiddenException("Unauthorized access to web service.");             logger.log(Level.INFO, "removing given Service Point by executing ProviderResource.ServicePointResource.removeServicePoint(userId, servicePointNumber) method of REST API");              // find ServicePoint entity that should be deleted             ServicePoint toDeleteServicePoint = servicePointFacade.find( new ServicePointId(userId, servicePointNumber) );             // throw exception if entity hasn't been found             if(toDeleteServicePoint == null)                 throw new NotFoundException("Could not find service point to delete for given id: " + userId + ".");              // remove entity from database             servicePointFacade.remove(toDeleteServicePoint);              return Response.status(Status.NO_CONTENT).build();         } </code></pre>  <p>and implementation of entity facade remove method:  </p>  <pre><code>public void remove(@NotNull T entity) {         getEntityManager().remove(getEntityManager().merge(entity));     } </code></pre>