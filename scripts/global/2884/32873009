<p>I have a Singleton EJB that I'm trying to inject into an Stateless bean, that's also a WS endpoint (Jersey).</p>  <p>The injected singleton is always null.</p>  <p>The project is packed as a war, deployed into Wildfly 9.</p>  <p>I do have a beans.xml placed in WEB-INF.</p>  <p>The web-app version in web.xml is 3.0:</p>  <pre><code>&lt;?xml version="1.0" encoding="UTF-8"?&gt;   &lt;web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" version="3.0"&gt;   &lt;context-param&gt;     &lt;param-name&gt;resteasy.scan&lt;/param-name&gt;     &lt;param-value&gt;false&lt;/param-value&gt;   &lt;/context-param&gt;   &lt;context-param&gt;     &lt;param-name&gt;resteasy.scan.providers&lt;/param-name&gt;     &lt;param-value&gt;false&lt;/param-value&gt;   &lt;/context-param&gt;   &lt;context-param&gt;     &lt;param-name&gt;resteasy.scan.resources&lt;/param-name&gt;     &lt;param-value&gt;false&lt;/param-value&gt;   &lt;/context-param&gt; &lt;/web-app&gt; </code></pre>  <p>Session bean:</p>  <pre><code>@LocalBean @Stateless @Path(UserRestService.RESOURCE_PATH) public class UserRestService {  public static final String RESOURCE_PATH = "user";  @EJB private SingletonEJB singleton; ...  @GET @Path("/test") public Response test() {      if(singleton==null) {         System.out.println("Singleton is null");     }     return Response.ok().build(); } </code></pre>  <p>Singleton:</p>  <pre><code>@Startup @LocalBean @Singleton public class SingletonEJB {  public SingletonEJB() {          System.out.println("&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; constructor"); } </code></pre>  <p>In the wildfly log I can see the JNDI names for both beans:</p>  <pre><code>16:57:30,176 INFO  [org.jboss.as.ejb3.deployment.processors.EjbJndiBindingsDeploymentUnitProcessor] (MSC service thread1-4) JNDI bindings for session bean named UserRestService in deployment unit deployment "rest.war" are as follows:      java:global/rest/UserRestService!com.test.rest.UserRestService     java:app/rest/UserRestService!com.test.rest.UserRestService     java:module/UserRestService!com.test.rest.UserRestService     java:global/rest/UserRestService     java:app/rest/UserRestService     java:module/UserRestService  16:57:30,176 INFO  org.jboss.as.ejb3.deployment.processors.EjbJndiBindingsDeploymentUnitProcessor](MSC service thread 1-4) JNDI bindings for session bean named SingletonEJB in deployment unit deployment "rest.war" are as follows:      java:global/rest/SingletonEJB!com.test.rest.singletons.SingletonEJB     java:app/rest/SingletonEJB!com.test.rest.singletons.SingletonEJB     java:module/SingletonEJB!com.test.rest.singletons.SingletonEJB     java:global/rest/SingletonEJB     java:app/rest/SingletonEJB     java:module/SingletonEJB </code></pre>  <p>And I can see the constructor for the singleton is run. The singleton does not implement any interfaces but is annotated @LocalBean</p>  <p>I've read countless posts all over, have looked at <a href="https://github.com/jersey/jersey/blob/master/examples/jersey-ejb/src/main/java/org/glassfish/jersey/examples/jersey_ejb/resources/MessageBoardResourceBean.java" rel="nofollow">this example</a> yet I haven't figured it out...</p>  <p><strong>LE</strong>: Added an Eclipse importable simplified demo <a href="https://github.com/gandesc/non-working-jersey-ejb-injection" rel="nofollow">here</a></p>