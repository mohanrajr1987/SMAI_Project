<p>I have a structure with a jpa,ejb,backingbean,jsp.  I am able to query the db and return results to the page but when I try to merge (update) ejb it does not work.  No errors but it does not update the value.  For testing I just hard coded the values.  If you can tell me what I am doing work I would really appreciate it:</p>  <p>jpa:</p>  <pre><code>package com.ray.adtf.jpa;  import java.io.Serializable; import javax.persistence.*;   /**  * The persistent class for the GRIDWEIGHT database table.  *   */ @Entity @NamedQueries({ @NamedQuery(name="Gridweight.findAll", query="SELECT g FROM Gridweight g"), @NamedQuery(name = "Gridweight.findByGridid", query = "SELECT g FROM Gridweight g WHERE g.gridid = :gridid")         }) public class Gridweight implements Serializable {     private static final long serialVersionUID = 1L;      @Id     private long gridid;      private String checking;      private String drawing;      private String modeling;      @Column(name="\"RELEASE\"")     private String release;      private String structural;      private String thermal;      public Gridweight() {     }      public long getGridid() {         return this.gridid;     }      public void setGridid(long gridid) {         this.gridid = gridid;     }      public String getChecking() {         return this.checking;     }      public void setChecking(String checking) {         this.checking = checking;     }      public String getDrawing() {         return this.drawing;     }      public void setDrawing(String drawing) {         this.drawing = drawing;     }      public String getModeling() {         return this.modeling;     }      public void setModeling(String modeling) {         this.modeling = modeling;     }      public String getRelease() {         return this.release;     }      public void setRelease(String release) {         this.release = release;     }      public String getStructural() {         return this.structural;     }      public void setStructural(String structural) {         this.structural = structural;     }      public String getThermal() {         return this.thermal;     }      public void setThermal(String thermal) {         this.thermal = thermal;     }  } </code></pre>  <p>ejb:</p>  <pre><code>package com.ray.adtf.ejb;  import com.ray.adtf.jpa.Gridweight;  import javax.ejb.Stateless; import javax.persistence.EntityManager; import javax.persistence.PersistenceContext;   import javax.persistence.PersistenceContextType;  import java.math.BigInteger; import java.util.List;  @Stateless public class GridWeightBean  {     @PersistenceContext     private EntityManager em;      public void updWeight(Gridweight gridweight) {               em.merge(gridweight);            }        public Gridweight getGridweight(Integer vgridid) {         return em.createQuery("FROM Gridweight where gridid = "+ vgridid, Gridweight.class).getSingleResult();      }  } </code></pre>  <p>Backing bean:</p>  <pre><code>package com.ray.adtf.web;  import javax.faces.bean.ManagedBean; import javax.ejb.EJB; import com.ray.adtf.ejb.*; import com.ray.adtf.jpa.Gridweight;  @ManagedBean public class gridWeight {      @EJB     private GridWeightBean ejb;      public Gridweight getGridWeight( int vgridid) {          Gridweight weight1 = ejb.getGridweight(vgridid);         return weight1;      }      public String updWeight() {         Gridweight gw = ejb.getGridweight(2);         gw.setGridid(2);         gw.setDrawing("99");         ejb.updWeight(gw);         return null;     }     } </code></pre>  <p>Thank you !!!</p>