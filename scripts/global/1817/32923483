<p>My Swift / iOS9 framework 'viewer_protocol' uses another and external Objective-C framework (<a href="https://github.com/robbiehanson/CocoaAsyncSocket" rel="nofollow">CocoaAsyncSocket</a>). I'm using Carthage to build CocoaAsyncSocket. So far everything works fine: In have an example App inside my framework Xcode Project using my framework without any problems.</p>  <p>Now I want to use my Framework in a different Xcode Project - although using Carthage. I include only my Framework as a dependency and Carthage automatically resolves the dependencies to CocoaAsyncSocket. I embedded both frameworks into this new Xcode Project and build my App: Everything works fine here - except one warning I can't rid off:</p>  <pre><code>/Users/hibento/Repositories/viewer_protocol/&lt;module-includes&gt;:1:1:  Umbrella header for module 'viewer_protocol' does not include header 'GCDAsyncSocket.h' </code></pre>  <p>This is my framework header: </p>  <pre><code>#import &lt;UIKit/UIKit.h&gt;  //! Project version number for viewer_protocol. FOUNDATION_EXPORT double viewer_protocolVersionNumber;  //! Project version string for viewer_protocol. FOUNDATION_EXPORT const unsigned char viewer_protocolVersionString[];  // In this header, you should import all the public headers of your framework      using statements like #import &lt;viewer_protocol/PublicHeader.h&gt; #import &lt;CocoaAsyncSocket/CocoaAsyncSocket.h&gt; </code></pre>  <p>As you can see CocoaAsyncSocket.h is imported. Furthermore inside my framework the CocoaAsyncSocket.h file is included:</p>  <p><a href="http://postimg.org/image/vqx0uj83b/" rel="nofollow"><img src="http://s15.postimg.org/vqx0uj83b/2015_10_03_at_15_51.jpg" alt="my framework&#39;s folder"></a></p>  <p>What I am missing here? I'm using several others external frameworks inside my framework, there're no warnings for them - all of these external frameworks are written in Swift - CocoaAsyncSocket is pure Objective-C.</p>  <p>This is my frameworks module.modulemap:</p>  <pre><code> framework module viewer_protocol {    umbrella header "viewer_protocol.h"     export *    module * { export * }  }   module viewer_protocol.Swift {      header "viewer_protocol-Swift.h"  } </code></pre>