<blockquote>   <p>I finally found the problem - but can't explain it well. The Webserver and Websocket Server are running on "127.0.0.1:xyz" each. When I access my website with "127.0.0.1:xy/app_dev.php/account" , everything is working, cookies are sent, read and the logged in user is given back by the clientManipulator.</p>      <p>When I access my website with "localhost:xy/app_dev.php/account", I always get back an anonymous user and the cookies are not sent. Can someone explain this to me please - and will this have affects in production mode too ? (e.g. a user can also connect with the IP of the website - and then this would bring me to the same problem, wouldn't it ? )</p> </blockquote>  <p>This question is related to <a href="http://stackoverflow.com/questions/31454122/symfony-2-geniusesofsymfony-websocketbundle/31662286?noredirect=1#comment53567726_31662286">this one</a>. (Symfony 2.7)</p>  <p>I have implemented the Gos Websocket Bundle and can now send messages in realtime to channels, where users can subscribe to. The problem currently is, that I don't have access to the currently logged in User within my Notification Topic class. I already tried all that was subscribed in the related post I linked to.</p>  <p>Currently, I am injecting the "@security.token_storage" into my topic - but as I said the behaviour is the same for the other approaches too. I think this is a "cookie / domain" problem, the cookies are not sent to the websocket server. Here is my configuration:</p>  <p><strong>Symfony / php Webserver:</strong> "Server running on <a href="http://127.0.0.1:8000" rel="nofollow">http://127.0.0.1:8000</a>"</p>  <p><strong>Gos websocket config.yml:</strong></p>  <pre><code>gos_web_socket:   server:     port: 8081        #The port the socket server will listen on     host: 127.0.0.1   #The host ip to bind to     router:       resources:         - @MessageBundle/Resources/config/pubsub/routing.yml   client:     firewall: main     session_handler: @session.handler.pdo   pushers:     zmq:         host: 127.0.0.1         port: 5555         persistent: true         protocol: tcp </code></pre>  <p><strong>@session.handler.pdo in services.yml:</strong></p>  <pre><code>pdo:       class: PDO       arguments:           dsn: mysql:host=%database_host%;port=%database_port%;dbname=%database_name%           user: %database_user%           password: %database_password%       calls:           - [ setAttribute, [3, 2] ] # \PDO::ATTR_ERRMODE, \PDO::ERRMODE_EXCEPTION  session.handler.pdo:       class:     Symfony\Component\HttpFoundation\Session\Storage\Handler\PdoSessionHandler       arguments: [@pdo, {lock_mode: 0}] </code></pre>  <p><strong>Framework session configured to use pdo handler:</strong></p>  <pre><code>session:   # handler_id set to null will use default session handler from php.ini   handler_id:  session.handler.pdo </code></pre>  <p><strong>JavaScript part to connect client with websocket:</strong></p>  <pre><code>var webSocket = WS.connect("ws://127.0.0.1:8000");  webSocket.on("socket/connect", function(session){      session.subscribe("account/notification", function(uri, payload){         console.log("Received message", payload.msg);     });  }); </code></pre>  <hr>  <p>This is my configuration, the token storage gets injected in a service for the Notification Topic. The "onSubscribe" method of the topic gets hit, but the user stays anonymous, even if I am logged in:</p>  <pre><code>public function onSubscribe(ConnectionInterface $connection, Topic $topic, WampRequest $request) {     // always returns anonym     dump($this-&gt;tokenStorage-&gt;getToken()-&gt;getUser());die; } </code></pre>  <p>What did I miss ?</p>  <p>Regards.</p>