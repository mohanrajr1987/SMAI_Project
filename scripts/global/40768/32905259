<p>I'm trying to create a simple chat-like application (planning poker app) with Action Cable. I'm a little bit confused by the terminology, files hierarchy and how the callbacks work.</p>  <p>This is the action that creates user session:</p>  <pre><code>class SessionsController &lt; ApplicationController   def create     cookies.signed[:username] = params[:session][:username]     redirect_to votes_path   end end </code></pre>  <p>A user can then post a vote that should be broadcasted to everyone:</p>  <pre><code>class VotesController &lt; ApplicationController   def create     ActionCable.server.broadcast 'poker',                                  vote: params[:vote][:body],                                  username: cookies.signed[:username]     head :ok   end end </code></pre>  <p>Up to this point everything is clear for me and works fine. The problem is - how do I display the number of connected users? Is there a callback that fires in JS when a user (consumer?) connects? What I want is when I open 3 tabs in 3 different browsers in incognito mode I would like to display "3". When a new user connects, I would like the number to increment. If any user disconnects, the number should decrement.</p>  <p>My <code>PokerChannel</code>:</p>  <pre><code>class PokerChannel &lt; ApplicationCable::Channel   def subscribed     stream_from 'poker'   end end </code></pre>  <p><code>app/assets/javascripts/poker.coffee</code>:</p>  <pre><code>App.poker = App.cable.subscriptions.create 'PokerChannel',    received: (data) -&gt;     $('#votes').append @renderMessage(data)    renderMessage: (data) -&gt;     "&lt;p&gt;&lt;b&gt;[#{data.username}]:&lt;/b&gt; #{data.vote}&lt;/p&gt;" </code></pre>