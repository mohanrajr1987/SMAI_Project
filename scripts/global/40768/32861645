<p>We have a spring mvc with spring websocket configured ('spring-websocket', version:'4.1.0.RELEASE').</p>  <p>We have a simple class that executes the following code:</p>  <pre><code> @Autowired private SimpMessagingTemplate template;   @Override public void push(Long userId, Object message, WebsocketQueue queue) {     String loginName = this.userRepository.getLoginName(userId);     this.template.convertAndSendToUser(                    loginName,                    queue.getMapping(),                    message);  } </code></pre>  <p>This works great with a single tomcat (non clustered environment)</p>  <p>The problem we are facing is when working with a cluster of two tomcats.</p>  <p>If we try to push the message to a user from the actual tomcat he was logged in - it works.</p>  <p>But if we try to push the message from the other tomcat node - it does not reach the user.</p>  <p>1) What can we do?</p>  <p>2) Does changing the websocket queue names to the user login names instead of the default behavior can help us?</p>