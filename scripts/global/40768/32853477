<p>I'm trying to create a programming exercise for setting up a simple push notification system. I'm not sure I have it right, and to be honest I can't say why other than it just feels wrong. On paper, it seems it should work like this:</p>  <ol> <li><p>Client requests a page from the web server with a flag to get a token. If a token exists in the database and isn't expired (using an "expired at" timestamp), return that otherwise generate a new one. Generate them using PHP's <code>openssl_random_pseudo_bytes</code> method.</p></li> <li><p>Once the response is returned to the client, check if a websocket and close it if one exists. Open a new one with the token.</p></li> <li><p>At a future time when some event occurs, a post request is sent to the websocket server from the web server containing the token as the destination user and a message.</p></li> <li><p>If the websocket server has an active connection matching that user's token, send the message but if not then discard it. Inform the web server if it was successful or not. If it was unsuccessful, the web server will create a notification so that on the user's next login, they get the message.</p></li> </ol>  <p>Is this sufficient for something simple? Is there something I'm missing, are there any potential problems? As I said, it will be an exercise mostly but if someone tried to implement this in a production environment what do they need to consider for security?</p>