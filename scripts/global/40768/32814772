<p>Over at <a href="https://github.com/faye/faye-websocket-ruby" rel="nofollow">Faye Websocket for Ruby</a>, there is a specific example that is not working for me.</p>  <p><a href="https://raw.githubusercontent.com/faye/faye-websocket-ruby/master/examples/app.rb" rel="nofollow">https://raw.githubusercontent.com/faye/faye-websocket-ruby/master/examples/app.rb</a></p>  <pre><code>require 'faye/websocket' require 'permessage_deflate' require 'rack'  static  = Rack::File.new(File.dirname(__FILE__)) options = {:extensions =&gt; [PermessageDeflate], :ping =&gt; 5}  App = lambda do |env|   if Faye::WebSocket.websocket?(env)     ws = Faye::WebSocket.new(env, ['irc', 'xmpp'], options)     p [:open, ws.url, ws.version, ws.protocol]      ws.onmessage = lambda do |event|       ws.send(event.data)     end      ws.onclose = lambda do |event|       p [:close, event.code, event.reason]       ws = nil     end      ws.rack_response    elsif Faye::EventSource.eventsource?(env)     es   = Faye::EventSource.new(env)     time = es.last_event_id.to_i      p [:open, es.url, es.last_event_id]      loop = EM.add_periodic_timer(2) do       time += 1       es.send("Time: #{time}")       EM.add_timer(1) do         es.send('Update!!', :event =&gt; 'update', :id =&gt; time) if es       end     end      es.send("Welcome!\n\nThis is an EventSource server.")      es.onclose = lambda do |event|       EM.cancel_timer(loop)       p [:close, es.url]       es = nil     end      es.rack_response    else     static.call(env)   end end  def App.log(message) end </code></pre>  <p>The application does run, however the condition:</p>  <pre><code>App = lambda do |env| </code></pre>  <p>is not being met and is not iterating. Is this file supposed to be ran by an external source? Missing a file?</p>  <p>This is with running the file by command:</p>  <pre><code>ruby app.rb </code></pre>