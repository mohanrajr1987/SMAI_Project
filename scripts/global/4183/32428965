<p>I'm trying to switch between a focused / blurred state for a search bar. Right now the  tag has a click handler that shows an input field if the element is clicked. I'm trying to reverse this effect and hide the visibility of the input field when the user clicks outside the element. </p>  <p>My code is:</p>  <pre><code>var Search = React.createClass({    getInitialState:function(){     return{ inputVisible:false }   },   showInput:function(){     this.setState({ inputVisible:true });   },   componentDidUpdate:function(){     if( this.state.inputVisible ){       this.getDOMNode().focus();     }   },   renderInput: function(){     return (         &lt;input type="text" style={this.props} /&gt;     );   },   renderLink: function(){     return (       &lt;a&gt;&lt;h3 onClick={this.showInput}&gt;Search&lt;/h3&gt;&lt;/a&gt;     );   },   render: function() {     if( this.state.inputVisible ){       return this.renderInput();     }else{       return this.renderLink();     }   } }); </code></pre>  <p>I've tried adding logic to the componentDidUpdate function, so that </p>  <pre><code>if (input.state.isVisible == false ) {     this.getDOMNode().blur(); } </code></pre>  <p>I've also tried adding an onBlur handler to the element and tried creating a hideInput method:</p>  <pre><code>hideInput: function() {     this.setState({ inputVisible:false }); } </code></pre>  <p>and adding to the element:</p>  <pre><code>&lt;a&gt;&lt;h3 onClick={this.showInput} onBlur={this.hideInput}&gt;Search&lt;/h3&gt;&lt;/a&gt; </code></pre>  <p>But something just isn't working. Can anyone point out what I'm doing wrong?</p>