<p>I have this code in a web application (tomcat7):</p>  <pre><code>public InitBean() throws UnknownHostException, Exception {     NetworkServerControl server = new NetworkServerControl(             InetAddress.getByName("localhost"), 1527);     server.start(new PrintWriter(System.err));      String driver = "org.apache.derby.jdbc.ClientDriver";     Class.forName(driver).newInstance();     Connection conn = DriverManager.getConnection("jdbc:derby://localhost:1527/ctc;create=true");  } </code></pre>  <p>The intent is to create a Derby database that can accessed from both inside and outside of the webapp. This is an uncommon use-case involving database ETL tools.</p>  <p>I am getting this error:</p>  <pre><code>Sep 14, 2015 7:23:19 AM org.apache.catalina.core.StandardContext loadOnStartup SEVERE: Servlet /map threw load() exception ERROR XJ041: DERBY SQL error: ERRORCODE: 40000, SQLSTATE: XJ041, SQLERRMC: Failed to create database 'ctc', see the next exception for details.::SQLSTATE: XBM02     at org.apache.derby.client.am.ClientConnection.completeSqlca(Unknown Source)     at org.apache.derby.client.net.NetConnectionReply.parseRdbAccessFailed(Unknown Source)     at org.apache.derby.client.net.NetConnectionReply.parseAccessRdbError(Unknown Source)     at org.apache.derby.client.net.NetConnectionReply.parseACCRDBreply(Unknown Source)     at org.apache.derby.client.net.NetConnectionReply.readAccessDatabase(Unknown Source)     at org.apache.derby.client.net.NetConnection.readSecurityCheckAndAccessRdb(Unknown Source)     at org.apache.derby.client.net.NetConnection.flowSecurityCheckAndAccessRdb(Unknown Source)     at org.apache.derby.client.net.NetConnection.flowUSRIDONLconnect(Unknown Source)     at org.apache.derby.client.net.NetConnection.flowConnect(Unknown Source)     at org.apache.derby.client.net.NetConnection.&lt;init&gt;(Unknown Source)     at org.apache.derby.client.net.ClientJDBCObjectFactoryImpl.newNetConnection(Unknown Source)     at org.apache.derby.jdbc.ClientDriver.connect(Unknown Source)     at java.sql.DriverManager.getConnection(DriverManager.java:664)     at java.sql.DriverManager.getConnection(DriverManager.java:270)     at com.ctc.service.InitBean.&lt;init&gt;(InitBean.java:40) </code></pre>  <p>This is on Windows 7, 64-bit, Java 8, with Tomcat 7.</p>  <p>What could be the problem?</p>  <p><strong><em>UPDATE</em></strong></p>  <p>The exact same code works fine in stand-alone app (J2SE / JUnit), but it fails under Tomcat / Springframework.</p>