<p>I don't know if this question fits this site, but I'll ask anyway: What are the downsides of using static getters? For my website, I use CodeIgniter and I coded a "finder" function in MY_Model.php. The individual Models use this model as a parent and just kind of mirror the database. I would use my finder method to get an object of a model and then with the static getter - also declared in MY_Model.php - get the attributes. Like so:</p>  <pre><code>&lt;?php $article = Article::find(array(     'id' =&gt; $someId, )); echo Article::get($article, 'title'); </code></pre>  <p>or for example if I have to edit an entry, I can just do it like this:</p>  <pre><code>&lt;?php $article = Article::find(array(     'id' =&gt; $someId, )); Article::set($article, 'title', $theTitle)        -&gt;set($article, 'text', $theText); if (!$article-&gt;update()) {     return false; } return true; </code></pre>  <p>The first real downside I know is, that it completely goes against the 'Thin Controller, Fat Model' principle, since I'd only declare the variables in the model, mirroring the table fields plus maybe some individual functions. But it completely erases the necessity to write getter and setter functions for every attribute.</p>