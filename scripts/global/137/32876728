<p>In JavaScript, I have an Object, defined in part of the code I can't touch. I know that you can take a Function and turn it into an Object, but haven't been able to achieve the other way around. I am trying to do this to <code>Document</code>.</p>  <p>I have attempted:</p>  <pre><code>var olddoc = window.document; window.document = function(){   // Some Stuff Here }; for(i in olddoc) {   window.document[i] = olddoc[i]; } </code></pre>  <p>But this does not seem to work for me. It reports that <code>olddoc</code> is <code>undefined</code>.</p>  <p>Please note that I am actually using CoffeeScript and compiling to JS, so there is a <code>(function(){})()</code> wrapper around this code.</p>  <p><strong>Edit</strong>:</p>  <p>I realize now that <code>document</code> cannot be overridden. However, I am still curious whether or not I can make an object also serve as a callable function, with the object already defined. This would be something like:</p>  <pre><code>function merge(obj, func) {     // Magic?     return theMergedObjectAndFunctionHere; } var o = { foo: "bar" } var f = function () {     alert(this.foo); } var z = merge(o,f); z(); // Alerts "bar". </code></pre>