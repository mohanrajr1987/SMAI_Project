<p>I have recently started to do some programming in <code>C#</code>, after spending most of my life in <code>PHP</code>.</p>  <p>In <code>PHP</code> I could do this:</p>  <pre><code>class User {     public __construct($UserId)     {         // Do stuff     } }  class Employee extends User {     public __construct($EmployeeId)     {         // Look up the UserId connected to $EmployeeId         $UserId = hypothetical_get_user_id_func($EmployeeId);         parent::__construct($UserId);     } } </code></pre>  <p>But, in <code>C#</code> I don't seem to have that possibility, since it seems like I must know the <code>$UserId</code> before it enters the first constructor.</p>  <pre><code>public class User {     public User(int UserId)     {         // Do stuff     } }  public class Employee : User {     public Employee(int EmployeeId) : base(***) // I don't know this value yet?     {         // This is where I would find the User Id, and would like to pass         // it to the User class constructor.     } } </code></pre>  <p>Is there any way to achieve what I am trying to do here in C#?</p>  <p>Basically passing a value to the constructor of the main object, which in its own body figures out what value to pass to the base class.</p>