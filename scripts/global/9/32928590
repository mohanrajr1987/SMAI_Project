<p>I am making a user control with 2 ListView controls. I want the 2 ListView controls to have the same Columns AND I want the user to be able to edit the Columns of both, at once, in Designer.</p>  <p>To allow for editing of Columns in the user control's properties, I created a new Columns property for the user control:</p>  <pre><code>    [Serializable]     public class ColumnHeaderCollection : Collection&lt;ColumnHeader&gt;     {         public void AddRange(ColumnHeader[] headers)         {             foreach(ColumnHeader h in headers)                 this.Add(h);         }     }      private ColumnHeaderCollection _Columns = new ColumnHeaderCollection();      [Browsable(true),         DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]     public ColumnHeaderCollection Columns     {         get         {             return _Columns;         }     } </code></pre>  <p>This works on the user control's property sheet pretty well in Designer, and the Designer uses the user control's Columns property's AddRange method to add the ColumnHeaders which were selected by the user in Designer.</p>  <p>The problem, though, is getting the 2 ListView controls, when the user control is drawn, to have their Columns property each be set to the user control's Columns property, so they both draw the same ColumnHeaders and those match what the user did in Designer with the user control's Columns property.</p>  <p>How would I get the 2 ListView controls to make the collections of their Columns properties have the exact same ColumnHeaders as the collection of the user control's Columns property and to have those column headers show properly on the ListView controls?</p>  <p>(Note: The 2 ListView controls each have their View property set to Details.)</p>