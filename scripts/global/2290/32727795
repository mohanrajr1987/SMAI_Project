<p>Currently i am using Doctrine, starting up a connection via:</p>  <pre><code>public function __construct()     {         $config = new Configuration();         $connectionParams = array(             "url" =&gt; "mysql://root:@localhost/test",             "charset" =&gt; "utf8",         );         $this-&gt;connection = \Doctrine\DBAL\DriverManager::getConnection($connectionParams, $config);     } </code></pre>  <p>When using this, it will give me a connection object, that i have to pass into every class / place, where i want to use it.</p>  <p>Therefore i want to make it static, so that i can always access it everywhere with DB::$connection or a static getter for that.</p>  <p>So i copied the exact same function into a static constructor and just changed this:</p>  <pre><code>self::$connection = \Doctrine\DBAL\DriverManager::getConnection($connectionParams, $config); </code></pre>  <p>After that for testing purpose i access it via this:</p>  <pre><code>DB::construct(); $connection = DB::getConnection(); </code></pre>  <p>and pass the <code>$connection</code> variable on like i did before with the normal object instance. Should work right? Doesn't. </p>  <p>Error i am getting is:</p>  <blockquote>   <p>Notice: Undefined offset: 0 in PATH/PDOConnection.php on line 104</p> </blockquote>  <p>and:</p>  <blockquote>   <p>Fatal error: Uncaught exception 'PDOException' with message   'SQLSTATE[42000]: Syntax error or access violation: 1065 Query was   empty'</p> </blockquote>  <p>In the first query i am automatically trying to run. Anybody has a solution here? There isn't much content, when googling "doctrine static constructor" or anything like that. And i absolutely changed nothing except the <code>$connection</code> object i am giving into my main controllers on which they run queries.</p>