<p>I'm having issues with class table inheritance. I tried adding a class <code>AtmosphereStudentRequest</code> which extends another <code>ServiceRequest</code>. I'm getting the following error:</p>  <blockquote>   <p>Entity 'Entities\ServiceRequest\AtmosphereStudentRequest' has to be part of the descriminator map of 'Entities\ServiceRequest' to be properly mapped in the inheritance hierachy. Alternatively you can make 'Entities\ServiceRequest\AtmosphereStudentRequest' an abstract class to avoid this exception from occuring.</p> </blockquote>  <p>The following table inheritance metadata exists in <code>ServiceRequest</code>. Note I'm adding a class, alongside others that existed before and work just fine.</p>  <pre><code>/**                                                                                                                                          * @Entity(repositoryClass="Repositories\ServiceRequestRepository")                                                                          * @InheritanceType("JOINED")                                                                                                                * @DiscriminatorColumn(name="subtype", type="string")                                                                                       * @DiscriminatorMap({"service_request" = "ServiceRequest", "atmosphere_student_requests" = "\Entities\ServiceRequest\AtmosphereStudentRequest", "atmosphere_request" = "\Entities\ServiceRequest\AtmosphereRequest", ... })                                                                                                * @HasLifecycleCallbacks                                                                                                                    * @Table(name="service_requests",indexes={@index(name="service_request_status_idx",                                                         * columns={"status"})})                                                                                                                     */          </code></pre>  <p>I dug into the code throwing the error and verified that the class <code>ServiceRequest</code> <strong>didn't</strong> have <code>AtmosphereStudentRequest</code> in its discriminator mapping list. I also noticed that my changes to the DiscriminatorMap annotation had no effect on the mapping list I was printing. Is caching the culprit? Do I need to run a command to update the new annotations?</p>  <p>I'm new to php, and web dev in php. I used the console doctrine tools to check if the mapping was correct. When I run, <code>php doctrine orm:schema:update</code>. I get the following output:</p>  <pre><code>... Array (     [0] =&gt; Entities\ServiceRequest     ...     [2] =&gt; Entities\ServiceRequest\AtmosphereStudentRequest     [3] =&gt; Entities\ServiceRequest\AtmosphereRequest     ... ) ... Nothing to update - your database is already in sync with the current entity metadata. </code></pre>  <p>I'm using Doctrine 1.2</p>