<p>I have 4 tables, the properties in the entities are all mapped accordingly. I'm trying to query for articles based on selected tags.</p>  <pre><code>articles =&gt; id, title, author_id - NAMESPACE AppBundle/Enity/Article tags =&gt; id, name - NAMESPACE AppBundle/Entity/Tag article_tags =&gt; article_id, tag_id authors=&gt; id, name - NAMESPACE AppBundle/Entity/Author </code></pre>  <p>I've figured out how to get all articles by which tags have the id's related to them in the article_tags table and filter by author id as well. In SQL my query looks like this. Tested and working.</p>  <pre><code>SELECT      articles.title, articles.id, authors.name FROM     article_tags INNER JOIN tags     ON article_tags.tag_id = tags.id INNER JOIN articles      ON article_tags.article_id = article.id INNER JOIN authors     ON authors.id = articles.author_id WHERE     tags.id IN (1,2) </code></pre>  <p>I'm trying to build a query that represents the above sql. So far my understanding is that doctrine will automatically pick up the needed associations based on the ORM assertions in the entities. However I'm not certain how to bring the other entities into the query. This is what I have so far.</p>  <p><strong>my code in the article repo is:</strong></p>  <pre><code>   $qb = $this-&gt;createQueryBuilder('ar')             -&gt;select('ar.title, ar.id, au.name')             -&gt;from('article_tags', 'at')             -&gt;innerJoin('tags', 't', 'WITH', 'at.tag_id = t.id')             -&gt;innerJoin('ar', 'WITH', 'at.article_id = ar.id')             -&gt;innerJoin('authors', 'au', 'WITH', 'au.id = ar.author_id')             -&gt;where('at.id IN (1,2)');      return $qb-&gt;getQuery()-&gt;getResult(); </code></pre>  <p>I have tried the above code with both the 'ON' and 'WITH' keywords.</p>  <p><strong>My error is:</strong> [Semantical Error] line 0, col 76 near 'tags t WITH at.tag_id': Error: Class 'tags' is not defined.</p>