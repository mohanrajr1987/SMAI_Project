<p>I am struggling with some symfony 2 form problem for a while. When trying to save my form I am getting following message:</p>  <blockquote>   <p>A new entity was found through the relationship   'Org\CoreBundle\Entity\CustomLists#customListElements' that was not   configured to cascade persist operations for entity:   Org\CoreBundle\Entity\CustomListElement@000000007db26fee000000007e19f46a.   To solve this issue: Either explicitly call EntityManager#persist() on   this unknown entity or configure cascade persist this association in   the mapping for example @ManyToOne(..,cascade={"persist"}).</p> </blockquote>  <p>I have called persist() method on collection elements and added cascade={"persist"} inside my entity, what was recommended in similar threads here, but it didn't help.</p>  <p>CustomLists.php:</p>  <pre><code> /**      * @var \Doctrine\Common\Collections\Collection      * @ORM\OneToMany(targetEntity="CustomListElement", mappedBy="customList", cascade={"persist"})      */     private $customListElements;  /**      * Add customListElement      *      * @param \Org\CoreBundle\Entity\CustomListElement $customListElement      *      * @return CustomLists      */     public function addCustomListElement(\Org\CoreBundle\Entity\CustomListElement $customListElement)     {         $this-&gt;customListElements[] = $customListElement;          return $this;     }      /**      * Remove customListElement      *      * @param \Org\CoreBundle\Entity\CustomListElement $customListElement      */     public function removeCustomListElement(\Org\CoreBundle\Entity\CustomListElement $customListElement)     {         $this-&gt;customListElements-&gt;removeElement($customListElement);     } </code></pre>  <p>CustomListElement.php:</p>  <pre><code> /**      *       * @ORM\ManyToOne(targetEntity="CustomLists", inversedBy="customListElements", cascade={"persist"})      * @ORM\JoinColumn(name="custom_list", referencedColumnName="id_custom_list", nullable=false)      */     private $customList;    /**      * Set customList      *      * @param \Org\CoreBundle\Entity\CustomLists $customList      *       * @return CustomListElement      */      public function setCustomList(\Org\CoreBundle\Entity\CustomLists $customList = null)     {         $this-&gt;customList = $customList;          return $this;     } </code></pre>  <p>CustomListType.php:</p>  <pre><code>    $builder-&gt;add('customListElements', 'collection', array(             'type' =&gt; new CustomListElementType(),             'label' =&gt; false,             'allow_add' =&gt; true,             'allow_delete' =&gt; true,             'prototype' =&gt; true,             'attr' =&gt; array('class' =&gt; 'form-control')     )); </code></pre>  <p>Contoller:</p>  <pre><code>   if ($form-&gt;isValid()) {         $data = $form-&gt;getData();          $customListElements = $data-&gt;getCustomListElements();          foreach($customListElements as $element){             $element-&gt;setCustomList($data);             $em-&gt;persist($element);             $em-&gt;flush();         }                 $em-&gt;persist($data);         $em-&gt;flush();     } </code></pre>  <p>I have really no idea, what I am doing wrong. I would by thankful for any helpful answers.</p>  <p>EDIT:  Here is my form code:</p>  <pre><code>{% extends 'OrganizerBundle::layout.html.twig' %}  {% block title %}{{ title }}{% endblock %}  {% block header %} {{ parent() }} {% endblock %}  {% block content %}     &lt;div class="col col-md-8"&gt;         &lt;div class="panel panel-success custom-list-form"&gt;           &lt;div class="panel-heading"&gt;             &lt;h3 class="panel-title"&gt;{{ title }}&lt;/h3&gt;           &lt;/div&gt;           &lt;div class="panel-body"&gt;             {{ form_start(form) }}                  {{ form_row(form.listName) }}                  &lt;h3&gt;Elementy&lt;/h3&gt;                  &lt;ul class="elements"                  data-prototype="{% filter escape %}{% include 'OrganizerBundle:CustomLists:elementTemplate.html.twig'  %}{% endfilter %}"&gt;                 {% for tag in form.customListElements %}                     &lt;li&gt;                     &lt;div class="custom-list-element"&gt;                         &lt;div id="customList_customListElements___name__"&gt;                             &lt;div&gt;                                  {{ form_row(tag.elementName) }}                             &lt;/div&gt;                             &lt;div&gt;                                 {{ form_row(tag.elementDescription) }}                             &lt;/div&gt;                             &lt;input type="hidden" id="customList_customListElements___name___elementOrder"                                 name="customList[customListElements][__name__][elementOrder]" /&gt;                         &lt;/div&gt;                         &lt;div class="element-buttons"&gt;                             &lt;i class="fa fa-times remove-element" title="{{ 'Usuń'|trans }}" data-placement="left" data-toggle="tooltip"&gt;&lt;/i&gt;                         &lt;/div&gt;                          &lt;/div&gt;                     &lt;/li&gt;                 {% endfor %}                  &lt;/ul&gt;                 {% do form.customListElements.setRendered %}                 &lt;div class="form-buttons"&gt;{{ form_widget(form.zapisz) }}&lt;/div&gt;             {{ form_end(form) }}           &lt;/div&gt;         &lt;/div&gt;     &lt;/div&gt;     &lt;script&gt;     var $collectionHolder;      var addElemText = '{{ 'Dodaj element'|trans }}';     var $newElementButton = $('&lt;a href="#" class="add_element_link"&gt;&lt;button type="button" class="btn btn-primary btn-sm"&gt;'+              addElemText +'&lt;/button&gt;&lt;/a&gt;');     var $newLinkLi = $('&lt;li&gt;&lt;/li&gt;');      jQuery(document).ready(function() {          $collectionHolder = $('.elements');          $newElementButton.insertBefore($collectionHolder);         $collectionHolder.data('index', $collectionHolder.find(':input').length);          $newElementButton.on('click', function(e) {             e.preventDefault();             addElementForm($collectionHolder, $newLinkLi);         });          function addElementForm($collectionHolder, $newLinkLi) {              var prototype = $collectionHolder.data('prototype');             var index = $collectionHolder.data('index');             var newForm = prototype.replace(/__name__/g, index);              $collectionHolder.data('index', index + 1);              var $newFormLi = $('&lt;li&gt;&lt;/li&gt;').append(newForm);             $collectionHolder.append($newFormLi);         }      });     &lt;/script&gt; {% endblock %} </code></pre>  <p>and my elementTemplate.html.twig prototype template:</p>  <pre><code>&lt;div class="listBox" data-pk="{{ element.idCustomList }}"&gt;     &lt;input type="checkbox" class="list-checkbox"/&gt;     &lt;div class="custom-list-name"&gt;{{ element.listName }}&lt;/div&gt;     &lt;div class="list-elem-count"&gt;{{ 'elementów:'|trans ~ '...' }}&lt;/div&gt;     &lt;div class="list-elem-created"&gt;         &lt;span class="created-text"&gt;{{ 'utworzono:'|trans }}&lt;/span&gt;         &lt;div class="date-created"&gt;{{ '...'  }}&lt;/div&gt;     &lt;/div&gt; &lt;/div&gt; </code></pre>  <p>EDIT 2 : When I am doing <code>doctrine:schema:validate</code>, there is also an error: </p>  <blockquote>   <p>[Mapping]  FAIL - The entity-class 'Org\CoreBundle\Entity\CustomLists'   mapping is invalid:   * The field Org\CoreBundle\Entity\CustomLists#customListElements is on the inverse side of a bi-directional relationship, but the specified   mappedBy association on the target-entity   Org\CoreBundle\Entity\CustomListElement#customList does not contain   the required 'inversedBy="customListElements"' attribute.</p> </blockquote>