<p>This is my PickLocation.java file, i want to load the webview googlemaps from assets </p>  <pre><code>public class PickLocation extends Activity {  private WebView locationPickerView; private EditText searchText; private Button searchButton;  private Float latitude = 0f; private Float longitude = 0f; private Integer zoom = 5; private String locationName; private ReminderDB mDbHelper;  @Override @SuppressLint("SetJavaScriptEnabled") public void onCreate(Bundle savedInstanceState) {     super.onCreate(savedInstanceState);     setContentView(R.layout.place_picker);     mDbHelper = new ReminderDB(this);      if (savedInstanceState!=null) {         latitude = savedInstanceState.getFloat("latitude");         longitude = savedInstanceState.getFloat("longitude");         zoom = savedInstanceState.getInt("zoom");         locationName = savedInstanceState.getString("locationName");     }      // LOCATION PICKER WEBVIEW SETUP     locationPickerView = (WebView) findViewById(R.id.locationPickerView);     locationPickerView.setScrollContainer(false);     locationPickerView.getSettings().setDomStorageEnabled(true);     locationPickerView.getSettings().setJavaScriptEnabled(true);     locationPickerView.addJavascriptInterface(new LocationPickerJSInterface(), "AndroidFunction");      locationPickerView.loadUrl("file:///android_asset/locationPickerPage/index.html");      locationPickerView.setWebChromeClient(new WebChromeClient() {         @Override         public void onProgressChanged(WebView view, int progress) {             if (progress == 100) {                 locationPickerView.loadUrl("javascript:activityInitialize(" + latitude + "," + longitude + "," + zoom + ")");             }         }     });       // EVENT HANDLER FOR PERFORMING SEARCH IN WEBVIEW     searchText = (EditText) findViewById(R.id.searchText);     searchButton = (Button) findViewById(R.id.searchButton);     searchButton.setOnClickListener(new Button.OnClickListener(){         @Override         public void onClick(View view) {             locationPickerView.loadUrl("javascript:if (typeof activityPerformSearch == 'function') {activityPerformSearch(\"" + searchText.getText().toString() + "\")}");         }     });      // EVENT HANDLER FOR ZOOM IN WEBVIEW     Button zoomIncreaseButton = (Button) findViewById(R.id.zoomIncreaseButton);     zoomIncreaseButton.setOnClickListener(new Button.OnClickListener(){         @Override         public void onClick(View view) {             locationPickerView.loadUrl("javascript:activityPerformZoom(1)");         }     });      Button zoomDecreaseButton = (Button) findViewById(R.id.zoomDecreaseButton);     zoomDecreaseButton.setOnClickListener(new Button.OnClickListener(){         @Override         public void onClick(View view) {             locationPickerView.loadUrl("javascript:activityPerformZoom(-1)");         }     });     // ^^^      // EVENT HANDLER FOR SAMPLE QUERY BUTTON     Button sampleQueryButton = (Button) findViewById(R.id.queryButton);     sampleQueryButton.setOnClickListener(new Button.OnClickListener(){         @Override         public void onClick(View arg0) {             AlertDialog alertDialog = new AlertDialog.Builder(PickLocation.this).create();             alertDialog.setTitle("Location Save");             alertDialog.setMessage("lat=" + latitude + ", lng=" + longitude + ", zoom=" + zoom + "\nloc=" + locationName);             alertDialog.show();             boolean result = saveLocation();             if( result)             {                 setResult(RESULT_OK);                 finish();             }         }     }); }  public class LocationPickerJSInterface {     @JavascriptInterface     public void getValues(String latitude, String longitude, String zoom, String locationName){         PickLocation.this.latitude = Float.parseFloat(latitude);         PickLocation.this.longitude = Float.parseFloat(longitude);         PickLocation.this.zoom = Integer.parseInt(zoom);         PickLocation.this.locationName = locationName;     }      // to ease debugging     public void showToast(String toast){         Toast.makeText(PickLocation.this, toast, Toast.LENGTH_SHORT).show();     } }  @Override protected void onSaveInstanceState(Bundle outState) {     outState.putFloat("latitude", latitude);     outState.putFloat("longitude", longitude);     outState.putInt("zoom", zoom);     outState.putString("locationName", locationName); }  private boolean saveLocation(){         String location = locationName;         String lat = String.valueOf(latitude);         String lon = String.valueOf(longitude);         mDbHelper.open();         mDbHelper.createLocation(location, lat, lon);         mDbHelper.close();     return true; }  } </code></pre>  <p>When i run it to load url from assets to obtain the webview, the error shows </p>  <pre><code>java.lang.NullPointerException: Attempt to invoke virtual method 'android.content.res.AssetManager android.content.res.Resources.getAssets()' on a null object reference at android.app.LoadedApk.getAssets(LoadedApk.java:528) at android.app.LoadedApk.makeApplication(LoadedApk.java:584) at android.app.ActivityThread.handleBindApplication(ActivityThread.java:4529) at android.app.ActivityThread.access$1500(ActivityThread.java:151) at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1364) at android.os.Handler.dispatchMessage(Handler.java:102) at android.os.Looper.loop(Looper.java:135) at android.app.ActivityThread.main(ActivityThread.java:5257) at java.lang.reflect.Method.invoke(Native Method) at java.lang.reflect.Method.invoke(Method.java:372) at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:903) at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:698) </code></pre>  <p>Can anyone tell me how to fix this error?</p>  <p>This is my index.html file</p>  <pre><code>&lt;!DOCTYPE html&gt; &lt;html xmlns='http://www.w3.org/1999/xhtml'&gt; &lt;head&gt;     &lt;title&gt;Google Maps Latitude and Longitude Picker jQuery plugin&lt;/title&gt;     &lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8"/&gt;     &lt;meta name="viewport" content="width=device-width, user-scalable=0"/&gt;     &lt;link rel="stylesheet" type="text/css" href="css/common.css"/&gt;     &lt;!-- Dependencies: JQuery and GMaps API should be loaded first --&gt;     &lt;script src="js/jquery-1.7.2.min.js"&gt;&lt;/script&gt;     &lt;script src="http://maps.googleapis.com/maps/api/js?sensor=false"&gt;&lt;/script&gt;     &lt;!-- CSS and JS for our code --&gt;     &lt;link rel="stylesheet" type="text/css" href="css/jquery-gmaps-latlon-picker.css"/&gt;     &lt;script src="js/jquery-gmaps-latlon-picker.js"&gt;&lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;form&gt;     &lt;fieldset class="gllpLatlonPicker"&gt;         &lt;div class="gllpMap"&gt;Google Maps&lt;/div&gt;         &lt;input type="hidden" class="gllpLatitude" value="20"/&gt;         &lt;input type="hidden" class="gllpLongitude" value="20"/&gt;         &lt;input type="hidden" class="gllpZoom" value="5"/&gt;         &lt;input type="hidden" class="gllpLocationName" size=42/&gt;     &lt;/fieldset&gt; &lt;/form&gt;  &lt;!-- FOR ANDROID INTEGRATION --&gt; &lt;script&gt;     function activityResizeMap() {         if ( $('.gllpMap').width() != $(window).width() || $('.gllpMap').height() != $(window).height()) {             $('.gllpMap').width($(window).width());             $('.gllpMap').height($(window).height());         }         setTimeout(activityResizeMap, 1000);     }      function activityInitialize(lat, lng, zoom) {         activityResizeMap();          $('.gllpLatitude').val(lat);         $('.gllpLongitude').val(lng);         $('.gllpZoom').val(zoom);     }      function activityPerformSearch(searchString) {         var searchObject = {             'string' : searchString         };         $(document).trigger("gllp_perform_search", searchObject);     }      function activityPerformZoom(zoomValue) {         var zoom = $(".gllpZoom").val();         zoom = zoom*1 + zoomValue;         $(".gllpZoom").val( zoom &lt; 0 ? 0 : zoom );         $(document).trigger("gllp_update_fields", zoom);     }      $(document).bind("location_changed", function(event, object) {         sendDataBackToAndroid(object);         setTimeout( function() { sendDataBackToAndroid(object); }, 1000);     });      function sendDataBackToAndroid(object) {         var lat  = $('#' + $(object).attr('id') + ' .gllpLatitude').val();         var lng  = $('#' + $(object).attr('id') + ' .gllpLongitude').val();         var zoom = $('#' + $(object).attr('id') + ' .gllpZoom').val();         var loc  = $('#' + $(object).attr('id') + ' .gllpLocationName').val();         AndroidFunction.getValues(lat, lng, zoom, loc);     } &lt;/script&gt; &lt;!-- ^^^ --&gt;  &lt;/body&gt; &lt;/html&gt; </code></pre>