<p>So I'm taking a computer science class, and we have to build a binary expression tree and here is what I have so far:</p>  <pre><code>void buildtree(string str) {     string tmp;     stack&lt;char&gt; opstack;     stack&lt;BTNP&gt; treeStack;     double value;     int i = 0;     while(i &lt; str.length)     {         while(isspace(str[i++]))         {             if(str[i] == '(')             {                 opstack.push(str[i]);             }             else if(isdigit(str[i] || str[i] == '*'))             {                 tmp.clear();                 while(isdigit(str[i]) || str[i] == '+')                 {                     tmp =+ str[i++];                 }             }         }     }     BTNP ptr= new BTN;     ptr-&gt;flag = false;     ptr-&gt;value = value;     ptr-&gt;left = NULL;     ptr-&gt;right = NULL;     treeStack.push(ptr);  } </code></pre>  <p>That is my function to build a tree. My professor had written it on the board and we had to edit it some bit but I keep getting an error with the BTNP part.</p>  <pre><code>stack&lt;BTNP&gt; treestack; </code></pre>  <p>I've been searching everywhere for a sample code to see how to build an expression tree but nothing's come up. Even if I do not get a response a link would be nice. </p>  <p>My errors:</p>  <pre><code>BTNP is not identified. </code></pre>  <p><code>while(i &lt; str.length())</code> gets 3 different errors such as:</p>  <pre><code>Error   3   error C2297: '&lt;' : illegal, right operand has type 'unsigned int (__thiscall std::basic_string&lt;_Elem,_Traits,_Alloc&gt;::* )(void) throw() const'    Error   2   error C2446: '&lt;' : no conversion from 'unsigned int (__thiscall std::basic_string&lt;_Elem,_Traits,_Alloc&gt;::* )(void) throw() const' to 'int'    Error   1   error C3867: 'std::basic_string&lt;_Elem,_Traits,_Alloc&gt;::length': function call missing argument list; use '&amp;std::basic_string&lt;_Elem,_Traits,_Alloc&gt;::length' to create a pointer to member         4   IntelliSense: no instance of overloaded function "std::stack&lt;_Ty, _Container&gt;::push [with _Ty=BET::BTN, _Container=std::deque&lt;BET::BTN, std::allocator&lt;BET::BTN&gt;&gt;]" matches the argument list             argument types are: (BET::BTN *)             object type is: std::stack&lt;BET::BTN, std::deque&lt;BET::BTN, s </code></pre>  <p>The final error I am getting is with the treeStack.push(ptr);</p>  <blockquote>   <p>3   IntelliSense: no instance of overloaded function "std::stack&lt;_Ty, _Container>::push [with _Ty=BET::BTN, _Container=std::deque>]" matches the argument list               argument types are: (BET::BTN *)               object type is: std::stack>></p>      <p>Error 2   error C2664: 'void std::stack&lt;_Ty>::push(BET::BTN &amp;&amp;)' : cannot convert parameter 1 from 'BET::BTN *' to 'BET::BTN &amp;&amp;'</p> </blockquote>  <p>the Code for the tree, or what I assume is somewhat related..</p>  <pre><code>struct BTN {     bool flag;     char op;     double value;     BTN * left;     BTN * right;     BTN * BTNP; }; </code></pre>