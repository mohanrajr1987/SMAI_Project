<p>I need to build dynamic linq expressions on the fly.</p>  <p>This needs to be completely generic and dynamic. I am able to construct some of the simpler expressions but I am struggling to construct more complicated nested expressions.</p>  <p>For example I want to read and construct the following into an expression (dynamically in code)</p>  <pre><code>(user = "me" and (status = "approved" or status = "rejected"  or status = "new")) and (user = "james" and (priority = "important"  or priority = "medium")) or (user = "jane" and (title = "something or title = "test")) </code></pre>  <p>I want to convert this to an expression in the format of <code>Expression&lt;Func&lt;SPListItem, bool&gt;&gt;</code> which I can then pass over to a where clause.</p>  <p>Just to add that I am using Camlex.NET to convert this expression to a Caml query.</p>  <p><strong>Update:</strong></p>  <p>Tried this:</p>  <pre><code>var inner = PredicateBuilder.False&lt;SPListItem&gt;();         inner = inner.Or(x =&gt; x["AssetStatus"] == (DataTypes.Choice)"Submitted - Awaiting Approval");         inner = inner.Or(x =&gt; x["AssetStatus"] == (DataTypes.Choice)"Reviewed - Awaiting Approval");         inner = inner.Or(x =&gt; x["AssetStatus"] == (DataTypes.Choice)"Approval overdue");          var outer = PredicateBuilder.True&lt;SPListItem&gt;();         outer = outer.And(x =&gt; x["IAO"] == (DataTypes.UserId)"1");         outer = outer.And(inner);          var inner2 = PredicateBuilder.False&lt;SPListItem&gt;();         inner2 = inner2.Or(x =&gt; x["AssetStatus"] == (DataTypes.Choice)"Review due");         inner2 = inner2.Or(x =&gt; x["AssetStatus"] == (DataTypes.Choice)"Review overdue");          var outer2 = PredicateBuilder.True&lt;SPListItem&gt;();         outer2 = outer2.And(x =&gt; x["PrimaryIAA"] == (DataTypes.UserId)"1");         outer2 = outer2.And(inner2);          var inner3 = PredicateBuilder.False&lt;SPListItem&gt;();         inner3 = inner3.Or(x =&gt; x["AssetStatus"] == (DataTypes.Choice)"Decommission requested");         inner3 = inner3.Or(x =&gt; x["AssetStatus"] == (DataTypes.Choice)"Decommissioning overdue");          var outer3 = PredicateBuilder.True&lt;SPListItem&gt;();         outer3 = outer3.And(x =&gt; x["IAO"] == (DataTypes.UserId)"1");         outer3 = outer3.And(inner3);          var fullQuery = outer.And(outer2).And(outer3); return Camlex.Query().Where(fullQuery).ToCaml(false).FirstOrDefault().ToString(SaveOptions.DisableFormatting);   </code></pre>  <p>But I get an error:</p>  <p>Expression type 'Constant' is not supported</p>