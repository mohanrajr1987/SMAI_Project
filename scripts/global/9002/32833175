<p>I'm trying to simulate a circuit so that you have three inputs, A, B, and cin, and a sequence of operations to be done to the inputs.  Whenever you push a button on the fpga board it increments the opcode to go to the next operation.  I already previously created a ALU component and am using it to implement this project.  I am trying to use a 3 bit arithmetic unit where B is grounded, A is the opCode, and the cIn is the button signal.  I think trying to feed the output of this arithmetic unit back into it's own input is where the problem is.  Here is what I have so far.  </p>  <pre><code>library ieee; use ieee.std_logic_1164.all;  entity ButtonALU is  port (     A           :   in          std_logic_vector(3 downto 0);     B           :   in          std_logic_vector(3 downto 0);     cIn     :   in          std_logic;     button  :   in          std_logic;     F           :   out     std_logic_vector(3 downto 0);     cOut        :   out     std_logic ); end ButtonALU;  architecture LogicFunction of ButtonALU is  signal CinSig       :       std_logic                           := cIn; signal ButtonSig    :       std_logic                           := NOT button;      --button originally starts as 1. Since the                                                                                                 --button is mapped to the carry in of the                                                                                                  --3 bit Arithmetic Unit, we want 1 to be added                                                                                                 --every time the button is pushed.  So instead                                                                                                 --of having the button go to 0 when it is pushed                                                                                                 --we have go to 1 signal opCodeSig    :       std_logic_vector(2 downto 0) :="000";           --declare opcode starting at 0  component ALU     port     (         A       :       in std_logic_vector (3 downto 0);         B       :       in std_logic_vector (3 downto 0);         opCode:         in std_logic_vector (3 downto 0);         F       :       out std_logic_vector (3 downto 0);         cout    :       out std_logic     ); end component;  --The three bit arithmetic unit is used to increment the opcode.  B is grounded and a is the actual --opcode.  The cIn is mapped to the button.  component Arithemetic_Unit_3bit port (     a           :   in std_logic_vector(2 downto 0);     b           :   in  std_logic_vector(2 downto 0);     cin     :   in std_logic;     F           :   out std_logic_vector(2 downto 0);     cout        :  out std_logic ); end component;  begin  Arithemtic_Unit_1           :       Arithemetic_Unit_3bit port map (     A   =&gt; opCodesig,     B   =&gt; "000",     cIn=&gt; buttonSig,     F   =&gt; opCodesig );  ALU_1                           :       ALU port map (     A               =&gt; A,     B               =&gt; B,     opCode(0)   =&gt; cInSig,                                                  --The least significant bit of the opcode of the entire                                                                                     --ALU is still determined by the carry in     opCode(1)   =&gt; opCodesig(0),     opCode(2)   =&gt; opCodesig(1),     opCode(3)   =&gt; opCodesig(2),     F               =&gt; F,     cOut            =&gt; cout );    end LogicFunction; </code></pre>  <p>I can compile the code but when I simulate it it says that my outputs are all unknowns still.  Please help.  </p>