<p>Ok, so the program I want to build is simple. There are five buttons named from 0 to 4. If any of the buttons are pressed, then the number 0 to 4 is printed in console.</p>  <p><a href="http://i.stack.imgur.com/jwRs1.png"><img src="http://i.stack.imgur.com/jwRs1.png" alt="enter image description here"></a></p>  <p>I have used a GridLayout to place the buttons in the frame. And to set up each button I have created a method, <code>inicializarIG()</code>.</p>  <p>This <code>inicializarIG()</code> method creates an array of 5 buttons and inside a for loop it does:</p>  <ul> <li>Create an instance of a button for each cell in the array of buttons.</li> <li>Set up a mouseListener for each button. The value to print in each Listener is different, it is determined by the index of the loop (AND I WANT TO DO IT BY USING THE INDEX!).</li> <li>Add The button to the main frame.</li> </ul>  <p>Surprisingly, This simple program doesn´t work properly. It always print the number "5" no matter what button is pressed:</p>  <p><a href="http://i.stack.imgur.com/6knT6.png"><img src="http://i.stack.imgur.com/6knT6.png" alt="enter image description here"></a></p>  <p><strong>NOTE</strong>: I had to put the <code>index</code> var outside the <code>inicializarIG()</code> method in order to fulfill the var scope for the Listeners. I don't know if the problem is related, just saying in cause it might help.</p>  <h2>THE CODE:</h2>  <pre><code>import java.awt.EventQueue; import java.awt.GridLayout; import java.awt.event.MouseAdapter; import java.awt.event.MouseEvent;  import javax.swing.JButton; import javax.swing.JFrame;   public class IGrafica {      private JFrame frame;     public int index=0;        public IGrafica(){         frame = new JFrame();         configureFrame();         inicializarIG();      }      public void configureFrame(){         frame.setBounds(100,100,400,400);         frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);         frame.getContentPane().setLayout(new GridLayout(1,5)); //     }       public void inicializarIG(){          //Buttons          JButton [] botones = new JButton [5];          //Loop to set up buttons and add the mouseListener         for (index = 0; index &lt; botones.length; index++) {             botones[index] = new JButton(Integer.toString(index));               //Set up each listener              botones[index].addMouseListener(new MouseAdapter() {                 @Override                 public void mousePressed(MouseEvent e) {                     System.out.println(index);                     //texto.setBackground(colores[index]);                 }                        });              //Add the button             frame.getContentPane().add(botones[index]);          }            }        public void visualizate(){         frame.setVisible(true);     }        public static void main(String[] args) {                 IGrafica window = new IGrafica();         EventQueue.invokeLater(new Runnable() {             public void run() {                 window.visualizate();             }         });      } } </code></pre>  <p>Thank you in advance. Any idea will be welcomed.</p>  <p>Jesús</p>