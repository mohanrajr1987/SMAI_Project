<p>Recently I realized I do not utilize widgets in WordPress enough when developing sidebars in themes so I have spent the last couple of days researching how to develop them properly.  After reviewing a lot of tutorials I have found a number of them on custom building widgets to be outdated.  I did see where I should use the construct:</p>  <pre><code>function __construct() {     parent::__construct(     // Base ID of your widget     'foobar_widget',      // Widget name will appear in UI     __('Give them foo Widget', 'foobar_widget_domain'),      // Widget description     array( 'description' =&gt; __( 'Development widget for testing', 'foobar_widget_domain' ), )      ); } </code></pre>  <p>The <a href="https://codex.wordpress.org/Widgets_API" rel="nofollow">codex</a> is very minimal when it comes to custom widgets.  After browsing SO's tags <a href="/questions/tagged/wordpress-widget" class="post-tag" title="show questions tagged &#39;wordpress-widget&#39;" rel="tag">wordpress-widget</a> and <a href="/questions/tagged/widget" class="post-tag" title="show questions tagged &#39;widget&#39;" rel="tag">widget</a> I didn't see a solution when calling an update for the widget if a textarea is needing tags.  A large number of people show calling the title instance as:</p>  <pre><code>$instance['title'] = ( ! empty( $new_instance['title'] ) ) ? strip_tags( $new_instance['title'] ) : ''; </code></pre>  <p>In my function <code>form()</code> I am needing a textarea that will take user input code, like a copied Google Adsense ad.  The following works but I am unsure if there is a better approach to accepting input from the form:</p>  <pre><code>// Updating widget replacing old instances with new public function update( $new_instance, $old_instance ) {     $instance = array();     $instance['title'] = ( ! empty( $new_instance['title'] ) ) ? strip_tags( $new_instance['title'] ) : '';     $instance['foo1'] = $new_instance['foo1'];     return $instance;     } } </code></pre>  <p>Is there a better way to return the <code>$instance</code> when you need tags without using PHP's <code>strip_tags()</code> ?</p>