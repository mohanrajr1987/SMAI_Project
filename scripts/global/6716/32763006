<p>Sorry if this has been asked before, I could found anything similar and I'm getting loony here. I have written several php widgets for wordpress and everything works fine so far except for one thing. I have a dropdown menu and textfields in some of my widgets. Now when I drag and drop my widgets to the sidebar, the textfields are filled with the desired default values and the dropdown menu is selected on the value i have supplied in defaults array.</p>  <p>Thing is if I change the dropdown menu's selected index, textfields should get updated accordingly (via javascript) based on the selected index (Its basically a contact widget where you can select a contact from the dropdown menu and then edit values like name, address, etc. for that contact before displaying it in frontend), but nothing happens. If I output the current selected index of the dropdown menu, it remains on the default value no matter what index is selected. However, after saving the widget, everything works fine. Now, everything I could find was that apparently, wordpress saves widgets immediately after droping them to the sidebar, but does not update the page. This is only done after hitting the save button. But why doesn't .selectedIndex change?</p>  <p>Anybody knows where im mistaking at?</p>  <p>Sorry if my code is a bit messy, im actually not a php programmer. (The contacts are stored in pf_contact.php, so Contact::contacts() gets me an array of Contact objects with keys 1,2,3...(count(contacts()), and Contact::getContact($i)->asArray() returns the Contact object on index $i as array (that looks like array(){ 'Name' => 'Some Name', 'Street' => 'Example Street 13', 'City' => 'MyCity', etc... }))</p>  <pre><code>/* include pf classes, like contact class. */ require_once(WP_CONTENT_DIR . '/widgets/pf_classes.php');     if ( ! class_exists( 'pf_Contact' ) ) {     add_action('widgets_init', 'pf_contact_widget');      // register widget     function pf_contact_widget()     {         register_widget('pf_Contact');     }      class pf_Contact extends WP_Widget {          /*          * @constructor          */         function pf_Contact()         {             $widget_ops = array('classname' =&gt; 'pf_contact_widget', 'description' =&gt; 'show contact data.');              $control_ops = array('id_base' =&gt; 'pf_contact_widget');              $this-&gt;WP_Widget('pf_contact_widget', 'contact data', $widget_ops, $control_ops);         }          /*          * @function: widget          * @description:          * to display the widget content on the front-end.          */         function widget($args, $instance)         {             extract($args);              // no text before/after the main content.             $before_widget = $after_widget = "";              // grab the id of the currently selected contact.             $id = $instance['contact-id'];              echo $before_widget;             ?&gt;              &lt;!-- main content: frontend --&gt;             &lt;div class="pf-widget-front pf-widget-contact"&gt;                 &lt;!-- display all contact data for the contact that was selected in backend. --&gt;                 &lt;?php foreach(Contact::getContact($id)-&gt;asArray() as $key =&gt; $val){                     // display one line per contact info entry. leave out email because its a link, we'll do that separately further down.                     if(isset($instance['contact-data-field-'.$id.'-'.$key]) &amp;&amp; !empty($instance['contact-data-field-'.$id.'-'.$key]) &amp;&amp; $key != 'E-Mail') {                         // display value of $key-field. Make a line break, but only if its not the postal code because we want to show pcode and city in 1 line...                         echo esc_attr($instance['contact-data-field-'.$id.'-'.$key]),                         $key != 'PLZ' ? '&lt;br/&gt;' : '' ?&gt;                     &lt;?php }                 }                 /* display email link */                 if(isset($instance['contact-data-field-'.$id.'-'.'E-Mail']) &amp;&amp; !empty($instance['contact-data-field-'.$id.'-'.'E-Mail'])){ ?&gt;                     &lt;a href="&lt;?php echo 'mailto:'.$instance['contact-data-field-'.$id.'-'.'E-Mail'] ?&gt;"                        class="pf-widget-link"&gt;&lt;?php echo esc_attr($instance['contact-data-field-'.$id.'-'.'E-Mail']); ?&gt;&lt;/a&gt;&lt;br /&gt;                 &lt;?php } ?&gt;             &lt;/div&gt;             &lt;?php              echo $after_widget;          }          /*          * @function: update          * @description:          * widget update to save widget data during edition.          * copying every single value is only necessary if you want to filter out something.          * the core simply returns new_instance, so why shouldnt we do so?          */         function update($new_instance, $old_instance)         {             return $new_instance;         }          /*          * @function: form          * @description:          * to display the widget content on the back-end.          */         function form($instance) { ?&gt;              &lt;script&gt;                 /*hide all contact data except selected one. This is triggered when the user selects another contact                 * in contact-id select element.*/                 function refresh_contact() {                     var contacts = document.getElementById("&lt;?php echo $this-&gt;get_field_id('contact-data-field'); ?&gt;");                     var selected = document.getElementById("&lt;?php echo $this-&gt;get_field_id('contact-id') ?&gt;");                     selected = selected.selectedIndex;                     contacts = contacts.children;                      for(var i = 0; i &lt; contacts.length; i++){                         if(selected == i)                             contacts[i].style.display = "block";                         else                             contacts[i].style.display = "none";                     }                 }             &lt;/script&gt;              &lt;?php             // default values on init.             $defaults = array(                                 //Standard contact. This is the id of the currently (initially) selected contact. Reference via index.                                 'contact-id' =&gt; (isset($instance['contact-id']) ? $instance['contact-id'] : 1)             );             $instance = wp_parse_args((array) $instance, $defaults);             ?&gt;              &lt;div class="pf-widget-back"&gt;                 &lt;!-- main content: backend; combo box to select which contact from self::$contacts to show in frontend + to potentially edit in backend. --&gt;                 &lt;div id="&lt;?php echo $this-&gt;get_field_id('contact-data-selection'); ?&gt;"&gt;                     &lt;label for="&lt;?php echo $this-&gt;get_field_id('contact-id'); ?&gt;" class="contact-label"&gt;Kontakt ausw√§hlen&lt;/label&gt;                     &lt;select name="&lt;?php echo $this-&gt;get_field_name('contact-id'); ?&gt;" id="&lt;?php echo $this-&gt;get_field_id('contact-id'); ?&gt;" class="widefat" onchange="refresh_contact()" &gt;                     &lt;?php                     foreach (Contact::contacts() as $id =&gt; $contact) {                         echo '&lt;option value="' . $id . '" id="' . $this-&gt;get_field_id('contact-id-'.$id) . '" ', $id == $instance["contact-id"] ? 'selected="selected"' : '' ,' &gt;', $contact-&gt;name, '&lt;/option&gt;';                     }                     ?&gt;                     &lt;/select&gt;                 &lt;/div&gt;                 &lt;!-- main content: backend; editable fields for contact data --&gt;                 &lt;div id="&lt;?php echo $this-&gt;get_field_id('contact-data-field'); ?&gt;"&gt;                     &lt;!-- display every(!) contact in self::$contacts, but hide all of them except the one selected in 'contact-id'-select-element.                         This is necessary because we cant create fields later, so we must create all of them and hide those not selected. --&gt;                     &lt;?php foreach(Contact::contacts() as $id =&gt; $contact) { ?&gt;                         &lt;div name="contact-data-field" id="&lt;?php echo $id; ?&gt;" class="contact-data-field" style="&lt;?php echo $id != $instance['contact-id'] ? 'display:none' : '' ?&gt;"&gt;                             &lt;!-- display a editable field for every property of the contact. --&gt;                             &lt;?php foreach($contact-&gt;asArray() as $key =&gt; $c){ ?&gt;                                 &lt;label for="&lt;?php echo $this-&gt;get_field_id('contact-data-field-'.$id.'-'.$key) ?&gt;" class="contact-label" &gt;&lt;?php echo $key.':'; ?&gt;&lt;/label&gt;                                 &lt;input type="text" id="&lt;?php echo $this-&gt;get_field_id('contact-data-field-'.$id.'-'.$key); ?&gt;"                                        name="&lt;?php echo $this-&gt;get_field_name('contact-data-field-'.$id.'-'.$key); ?&gt;"                                        value="&lt;?php echo isset($instance['contact-data-field-'.$id.'-'.$key]) ? $instance['contact-data-field-'.$id.'-'.$key] : $c; ?&gt;"/&gt;                             &lt;?php } ?&gt;                         &lt;/div&gt;                     &lt;?php } ?&gt;                 &lt;/div&gt;             &lt;/div&gt;             &lt;?php             }     } } ?&gt; </code></pre>