<p>With Visual Studio 2015 I am no longer able to compile and link a simple C++ program using the command line tools.</p>  <p>Consider main.cpp:</p>  <pre><code>#include &lt;stdlib.h&gt; int main() { return 0; } </code></pre>  <p>In previous releases (for example Visual Studio 2012) I was able to compile and link main.cpp easily:</p>  <pre><code>C:\Users\bkircher\src\test&gt;cl main.cpp Microsoft (R) C/C++ Optimizing Compiler Version 17.00.61030 for x64 Copyright (C) Microsoft Corporation.  All rights reserved.  main.cpp Microsoft (R) Incremental Linker Version 11.00.61030.0 Copyright (C) Microsoft Corporation.  All rights reserved.  /out:main.exe main.obj </code></pre>  <p>And done.</p>  <p>With Visual Studio 2015 however, I no longer have proper CRT include and library paths set:</p>  <pre><code>C:\Users\bkircher\src\test&gt;cl main.cpp Microsoft (R) C/C++ Optimizing Compiler Version 19.00.23026 for x64 Copyright (C) Microsoft Corporation.  All rights reserved.  main.cpp main.cpp(1): fatal error C1083: Cannot open include file: 'stdlib.h': No such file or directory </code></pre>  <p>I understand that Microsoft distributes the C runtime as a new Windows operating system component, the Universal CRT.</p>  <p>As described in <a href="http://blogs.msdn.com/b/vcblog/archive/2015/03/03/introducing-the-universal-crt.aspx" rel="nofollow" title="Visual C++ Team Blog: Introducing the Universal CRT">Introducing the Universal CRT</a>, I should use following MSBuild properties to find the appropriate paths</p>  <pre><code>$(UniversalCRT_IncludePath) $(UniversalCRT_LibraryPath_x64) </code></pre>  <p>Despite that, how do I get proper library and include paths for build systems other than devenv or MSBuild?</p>  <p>For the sake of it:</p>  <pre><code>C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC&gt;set include INCLUDE=C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\INCLUDE;C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\ATLMFC\INCLUDE;C:\Program Files (x86)\Windows Kits\10\include\wdf\ucrt;C:\Program Files (x86)\Windows Kits\NETFXSDK\4.6\include\um;C:\Program Files (x86)\Windows Kits\10\include\wdf\shared;C:\Program Files (x86)\Windows Kits\10\include\wdf\um;C:\Program Files (x86)\Windows Kits\10\include\wdf\winrt;  C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC&gt;set lib LIB=C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\LIB\amd64;C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\ATLMFC\LIB\amd64;C:\Program Files (x86)\Windows Kits\10\lib\wdf\ucrt\x64;C:\Program Files (x86)\Windows Kits\NETFXSDK\4.6\lib\um\x64;C:\Program Files (x86)\Windows Kits\10\lib\wdf\um\x64; LIBPATH=C:\Windows\Microsoft.NET\Framework64\v4.0.30319;C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\LIB\amd64;C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\ATLMFC\LIB\amd64;C:\Program Files (x86)\Windows Kits\10\UnionMetadata;C:\Program Files (x86)\Windows Kits\10\References;C:\Program Files (x86)\Windows Kits\10\References\Windows.Foundation.UniversalApiContract\1.0.0.0;C:\Program Files (x86)\Windows Kits\10\References\Windows.Foundation.FoundationContract\1.0.0.0;C:\Program Files (x86)\Windows Kits\10\References\indows.Networking.Connectivity.WwanContract\1.0.0.0;C:\Program Files (x86)\Microsoft SDKs\Windows Kits\10\ExtensionSDKs\Microsoft.VCLibs\14.0\References\CommonConfiguration\neutral; </code></pre>