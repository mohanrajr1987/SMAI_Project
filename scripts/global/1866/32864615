<p>I am using Spring Batch.Following is the jobContext.xml file, <code>JdbcCursorItemReader</code> is reading data from MySQL Database.</p>  <pre><code>&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;beans&gt;      &lt;import resource="infrastructureContext.xml"/&gt;      &lt;batch:job id="readProcessWriteProducts"&gt;         &lt;batch:step id="readWriteProducts"&gt;             &lt;tasklet&gt;                 &lt;chunk reader="reader" processor="processer" writer="writer"  commit-interval="5"&gt; &lt;/chunk&gt;             &lt;/tasklet&gt;                   &lt;/batch:step&gt;     &lt;/batch:job&gt;        &lt;bean id="reader" class="org.springframework.batch.item.database.JdbcCursorItemReader"&gt;         &lt;property name="dataSource" ref="dataSource"&gt;&lt;/property&gt;         &lt;property name="sql" value="SELECT id, name, description, price FROM product"&gt;&lt;/property&gt;         &lt;property name="rowMapper" ref="productItemReader"&gt;&lt;/property&gt;           &lt;/bean&gt;      &lt;bean id="productItemReader" class="com.itl.readprocesswrite.reader.ProductItemReader"&gt;&lt;/bean&gt;      &lt;bean id="processer" class="com.itl.readprocesswrite.processor.ProductItemProcessor"&gt;         &lt;constructor-arg ref="jdbcTemplate"&gt;&lt;/constructor-arg&gt;     &lt;/bean&gt;      &lt;bean id="writer" class="com.itl.readprocesswrite.writer.ProductJdbcItemWriter"&gt;         &lt;constructor-arg ref="jdbcTemplate"&gt;&lt;/constructor-arg&gt;     &lt;/bean&gt; &lt;/beans&gt; </code></pre>  <p>Now, I want to read data from Apache Solr. I tried following code to read data from Apache Solr.</p>  <pre><code>public class SolrJDrive {     public static void main(String[] args) throws MalformedURLException, SolrServerException {          System.out.println("SolrJDrive::main");          SolrServer solr = new CommonsHttpSolrServer("http://localhost:8983/solr");          ModifiableSolrParams params = new ModifiableSolrParams();          params.set("qt", "/select");          params.set("q", "*:*");          params.set("spellcheck", "on");          params.set("spellcheck.build", "true");          QueryResponse response = solr.query(params);          SolrDocumentList results = response.getResults();          for (int i = 0; i &lt; results.size(); ++i) {            System.out.println(results.get(i));          }     }//end of method main }//end of class SolrJDrive </code></pre>  <p>Now how do I integrate this with Spring Batch?</p>