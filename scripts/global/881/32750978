<p>I have two uneven arrays:</p>  <pre><code>a = [1,2,3,4,5,6,7,8,9,10] b = ['d','e','f','g','h','i','j'] </code></pre>  <p>I'd like to bind them so that the object returned looks like this:</p>  <pre><code>result = [[nil, 1], [nil, 2], [nil, 3], ["d", 4], ["e", 5], ["f", 6], ["g", 7], ["h", 8], ["i", 9], ["j", 10]]  </code></pre>  <p>The <code>zip</code> method would not work, as it does the opposite by lining up elements to the front. So far I have:</p>  <pre><code>def bind(a,b,ac=a.count,bc=b.count)   distance = ac - bc &lt; 0 ? bc - ac : ac - bc   min = ac &gt; bc ? b : a   max = ac &gt; bc ? a : b    distance.times { min.unshift(nil) }   return min.zip(max) end </code></pre>  <p>Does ruby have a method to resolve this (or a quicker way to go about it)?</p>