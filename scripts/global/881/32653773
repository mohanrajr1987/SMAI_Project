<p><strong>Context:</strong> </p>  <p>With the help of <a href="http://melander.dk/delphi/dragdrop/" rel="nofollow">http://melander.dk/delphi/dragdrop/</a> i've created a little prototype to Save attachments in a AdsTable (the prototype is build so that the way the Stream is saved can be decided by the user). </p>  <p>Everything works fine so far with the exception of <strong>.ZIP</strong> files. </p>  <p>The <strong>TDropEmptyTarget.OnDrop</strong> event doesn't get the information... to be more precise not even the <strong>TDropEmptyTarget.OnEnter</strong> event triggers</p>  <p>I've found out that the problem lies within the different <strong>tagFORMATETC</strong> of the <strong>.ZIP</strong> file. Compared to an .EXE file they have the same formats except for one</p>  <pre><code>.EXE = (49441, nil, 1, -1, 4) // ClipboardFormatname = 'FileContents' .ZIP = (49159, nil, 1, -1, 1) // ClipboardFormatname = 'FileNameW' </code></pre>  <p>I've managed that the components will accept the Format and i can Drop it... but it won't read the Data correctly. </p>  <p>Simply changing the extention from .ZIP to whatever allows me to drop the file in my control... save it and drag it out... changing it back to .ZIP and everything works fine... but that's the last thing i want. </p>  <p>[EDIT1]</p>  <p><strong>Code To Enable the .ZIP drop (only allows the zip file to be dropped but Data can not be read</strong></p>  <pre><code>  // ClipboardFormat for Zip TFileContentsOnDemandZipFormat = class(TAnsiFileGroupDescriptorClipboardFormat) public   function GetClipboardFormat: TClipFormat; override; end;  function TFileContentsOnDemandZipFormat.GetClipboardFormat: TClipFormat; begin   Result := 49438; end; </code></pre>  <p>...</p>  <pre><code>// Enables to drop Zip-Format aZipFormat.cfFormat := 49159; // aZipFormat = aZipFormat aZipFormat.ptd      := nil; aZipFormat.dwAspect := 1; aZipFormat.lindex   := -1; aZipFormat.tymed    := 4 or 1; aClipboardZipFormat                 :=   TFileContentsOnDemandZipFormat.CreateFormat(aZipFormat.tymed); aClipboardZipFormat.ClipboardFormat := aZipFormat.cfFormat; // VirtualTargetFiles = TVirtualFileStreamDataFormat(fTargetData.DataFormat) aIndex := VirtualTargetFiles.CompatibleFormats.Add(aClipboardZipFormat); // fDropTarget = TDropEmptyTarget fDropTarget.DataFormats.Formats[0].AcceptFormat(VirtualTargetFiles.CompatibleFormats[aIndex].FormatEtc); </code></pre>  <p><strong>All formats for an .EXE file</strong> <strong>EXE-File:</strong></p>  <pre><code>(49438, nil, 1, -1, 1) (50098, nil, 1, -1, 1) (50099, nil, 1, -1, 1) (49454, nil, 1, -1, 4) (50100, nil, 1, -1, 1) (49453, nil, 1, -1, 1) (15, nil, 1, -1, 1) (49158, nil, 1, -1, 1) (49441, nil, 1, -1, 4) = 'FileContents' // Used by the component  </code></pre>  <p><strong>ZIP-File:</strong></p>  <pre><code>(49438, nil, 1, -1, 1) (50098, nil, 1, -1, 1) (50099, nil, 1, -1, 1) (49454, nil, 1, -1, 4) (50100, nil, 1, -1, 1) (49453, nil, 1, -1, 1) (15, nil, 1, -1, 1) (49158, nil, 1, -1, 1) (49159, nil, 1, -1, 1) = 'FileNameW' </code></pre>  <p><strong>Formats accepted by the component</strong> </p>  <pre><code>(49441, nil, 1, -1, x) (49442, nil, 1, -1, x) (49443, nil, 1, -1, x) </code></pre>  <p>[\EDIT1]</p>  <p><strong>Repeatable:</strong></p>  <p>You can download the component here: <a href="http://melander.dk/delphi/dragdrop/" rel="nofollow">http://melander.dk/delphi/dragdrop/</a> </p>  <p>and run the demo <strong>VirtualFileStream</strong> this demo also doesn't allow the .ZIP file for all the same reasons. </p>  <p>You might want to remove the file cap in <strong>DropEmptyTarget1Drop</strong> by removing </p>  <pre><code>if (BufferSize &gt; MaxBufferSize) then    BufferSize := MaxBufferSize; </code></pre>  <p><strong>Question:</strong></p>  <p>Has anyone a simple solution for this problem?</p>