<p>I want to write a library to generate a String from a given regex. However, I run into a problem, if the regex uses a negated character class, like <code>[^a-z]</code>. In this case, I have to place a character into the generated String that does not match <code>[a-z]</code>. Also, I want to be able to define a set of characters that are used preferably, e.g. the set of printable characters.</p>  <p><strong>Question</strong></p>  <p>How do I generate a random character that is not contained in a given array/collection? How can I prefer groups of characters in this process?</p>  <p>An existing function in the libraries would be great, however I wasn't able to find one.</p>  <p>Here is my approach to solve the problem, however I wonder if there is a better algorithm. Also, my algorithm does not prefer a given set of characters, mainly because I do not know how to check if a character is printable or how I get an array/collection/iterable of printable characters.</p>  <pre><code>private void run() {     int i = 1024;     System.out.println(getFirstLegalChar(createExampleIllegalCharArray(i)));     System.out.println((char) i); }  private char getFirstLegalChar(char[] illegalCharArray) {     for (int i = 0; true; i++) {         if (!contains(illegalCharArray, (char) i)) {             return (char) i;         }     } }  private char[] createExampleIllegalCharArray(int size) {     char[] illegalCharArray = new char[size];     for (int i = 0; i &lt; illegalCharArray.length; i++) {         illegalCharArray[i] = (char) i;     }     return illegalCharArray; }  private boolean contains(char[] charArray, char c) {     for (int j = 0; j &lt; charArray.length; j++) {         if (charArray[j] == c) {             return true;         }     }     return false; } </code></pre>