<p>I define some String tokens like this in ANTLR4, with some exceptions surely properly handled in Java:</p>  <pre><code>STRINGLIT: '"'('\\'[bfrnt\\"]|~[\n"EOF])*'"';  ILLEGAL_ESC: '"'(('\\'[bfrnt\\"]|~[\n\\"EOF]))*('\\'(~[bfrnt\\"]|EOF))     {if (true) throw new bkool.parser.IllegalEscape(getText());};  UNCLOSED_STRING: '"'('\\'[bfrnt\\"]|[\n\\"EOF])*     {if (true) throw new bkool.parser.UncloseString(getText());}; </code></pre>  <p>Then I tested with some cases, with:</p>  <pre><code>"This is a string" "String with legal escape \\" "Legal \\n" "Illegal \" "Illegal \n" </code></pre>  <p>No exceptions are thrown. Then with some other cases:</p>  <pre><code>"This is a string "String with legal escape \\" "Legal \\n" "Illegal \" "Illegal \n" </code></pre>  <p>Then it ends up with:</p>  <pre><code>Unclosed string: " </code></pre>  <p>The exceptions are handled by printing the respective improper string with the name of exception</p>  <p>I have been struggling with them for a day and now I'm stuck with it. What is still not okay with my ANTLR definitions?</p>