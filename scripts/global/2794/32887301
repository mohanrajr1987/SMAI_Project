<p>After several hours of code digging and web browsing in search of the solution I have decided to post my problem in here.</p>  <p>I am currently working using Java 8u45. I need to allow dragging selected text from TextField and TextArea. While it works fine for a TextField it does not for TextArea - the selection changes right before the drag.</p>  <p>Below some working example - just select part of the text and drag it somewhere e.g. to Notepad:</p>  <pre><code>public class DnD extends Application {     private static final GridPane rootPane = new GridPane();     private TextField textField;     private TextArea textArea;      public static void main( final String[] args )     {         launch( args );     }      @Override     public void start( final Stage primaryStage )     {         primaryStage.setTitle( "Drag and Drop Application" );          buildGui();          installDnd();          primaryStage.setScene( new Scene( rootPane, 400, 325 ) );         primaryStage.show();     }      private void installDnd()     {         textField.setOnDragDetected( e -&gt; {             if( canDrag( textField, e ) )             {                 Dragboard dragboard = textField.startDragAndDrop( TransferMode.COPY );                 putIntoDragboard( dragboard, textField.getSelectedText() );                 e.consume();             }         } );          textArea.setOnDragDetected( e -&gt; {             if( canDrag( textArea, e ) )             {                 Dragboard dragboard = textArea.startDragAndDrop( TransferMode.COPY );                 putIntoDragboard( dragboard, textArea.getSelectedText() );                 e.consume();             }         } );     }      private void putIntoDragboard( final Dragboard aDragboard, final String aText )     {         ClipboardContent content = new ClipboardContent();         content.put( DataFormat.PLAIN_TEXT, aText );         aDragboard.setContent( content );     }      private boolean canDrag( final HitInfo aHitInfo, final IndexRange aSelection, final String aSelectedText )     {         int insertionPoint = aHitInfo.getInsertionIndex();         // Start drag only if started over selected text         boolean dragOverText = aSelection.getStart() &lt; insertionPoint &amp;&amp; aSelection.getEnd() &gt; insertionPoint;         return dragOverText &amp;&amp; !(aSelectedText == null || aSelectedText.length() == 0);     }      private boolean canDrag( final TextField aTextField, final MouseEvent aEvent )     {         TextFieldSkin skin = (TextFieldSkin)aTextField.getSkin();         HitInfo insertionPointInfo = skin.getIndex( aEvent.getX(), aEvent.getY() );         return canDrag( insertionPointInfo, aTextField.getSelection(), aTextField.getSelectedText() );     }      private boolean canDrag( final TextArea aTextArea, final MouseEvent aEvent )     {         TextAreaSkin skin = (TextAreaSkin)aTextArea.getSkin();         HitInfo insertionPointInfo = skin.getIndex( aEvent.getX(), aEvent.getY() );         return canDrag( insertionPointInfo, aTextArea.getSelection(), aTextArea.getSelectedText() );     }      private void buildGui()     {         textField = new TextField( "text field: sample text" );         textArea = new TextArea( "text area: sample text" );         rootPane.add( textField, 0, 0 );         rootPane.add( textArea, 0, 1 );     } } </code></pre>  <p><strong>Is it possible to make it work without writing my own skin?</strong> There is no way to replace TextAreaBehavior inside TextAreaSkin (just like TextFieldBehavior passed into TextFieldSkin's constructor). </p>  <p>I would be grateful for any help in this matter.</p>