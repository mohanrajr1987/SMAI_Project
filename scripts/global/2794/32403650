<p>I'm trying to get the current word or partial word currently being typed in a JavaFX TextArea to pass to to a very basic AutoComplete getPredictions(String prefix); method. </p>  <p>Right now I am using an Event Handler on KeyTyped and I'm going to track each character typed and concatenate it with the previously typed word, resetting on a space. This is going to have a lot of pitfalls I can see with AutoComplete being turned on in the middle of typing a word, getting the previous word if backspace is hit and the caret is at the end of the word again.</p>  <p>I'm curious to see if there's an alternative approach anyone can think of where I simply get the String for the word from the caret position back to the last space using TextInputControl methods. I haven't got it working my way yet but I'll post what I have at this point.</p>  <p>I basically need to get the current word being typed preserving the current caret position as the use types.</p>  <pre><code>public AutoSpellingTextArea() {      // register and handle KEY_TYPED event     this.addEventHandler(KeyEvent.KEY_TYPED,new EventHandler&lt;KeyEvent&gt;(){          public void handle(KeyEvent t) {              // BUG -- turning on autocomplete in middle of word.             if(autoCompleteOn) {                 //TODO                 String pre = getCurrentPrefix(t.getCharacter());                  if(pre != null) {                     List&lt;String&gt; choices = ac.predictCompletions(pre, NUM_COMPLETIONS);                 }             }         }      }); } </code></pre>  <p><br></p>  <pre><code>private String getCurrentPrefix(String ch) {     String retVal = null;      // space entered     if(ch.equals(" ")) {         lastWord = currentPrefix;         currentPrefix = "";         return retVal;     }      // add next character to prefix string     currentPrefix = currentPrefix + ch;      return retVal;  } </code></pre>