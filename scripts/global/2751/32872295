<p>i'm trying to execute a simple two integer addition with cuda driver api so i wrote this code:</p>  <pre><code>//#include &lt;iostream&gt; //#include &lt;numeric&gt; #include &lt;stdlib.h&gt; #include &lt;stdio.h&gt; #include &lt;cuda.h&gt;  CUdevice device; CUcontext context; CUmodule module; CUfunction function; size_t totalGlobalMem;  char *module_file = (char*) "testex.ptx"; char *kernel_name = (char*) "myadd";  int main(){  CUresult err = cuInit(0);  cuDeviceGet(&amp;device,0);  cuDeviceTotalMem(&amp;totalGlobalMem, device);  cuCtxCreate(&amp;context,0,device);  cuModuleLoad(&amp;module, module_file);  cuModuleGetFunction(&amp;function,module,kernel_name);  int a,b,c; b = 7; a = 2;  CUdeviceptr dev_c,dev_a,dev_b;   cuMemAlloc(&amp;dev_c,sizeof(int)); cuMemAlloc(&amp;dev_a,sizeof(int)); cuMemAlloc(&amp;dev_b,sizeof(int));  cuMemcpyHtoD(dev_a,&amp;a,sizeof(int)); cuMemcpyHtoD(dev_b,&amp;b,sizeof(int));  void *args[3] = {&amp;dev_a,&amp;dev_b,&amp;dev_c};                              //block //thread cuLaunchKernel(function,    1,1,1,  1,1,1,      0,0,args,0);  cuMemcpyDtoH(&amp;c,dev_c,sizeof(int)); cuMemFree(dev_c);  printf("risultato %d",c);  return 0; } </code></pre>  <p>ptx file was generated by nvcc with "nvcc -ptx x.cu ... " command on windows because nvcc, with -ptx option, not work in my linux system.</p>  <p>my kernel in .cu file is:</p>  <pre><code>#include &lt;cuda.h&gt; #include &lt;stdio.h&gt;   extern "C" __global__ void myadd( int a,int b, int *c){     *c = a + b; } </code></pre>  <p>and this is ptx file generated:</p>  <pre><code>// // Generated by NVIDIA NVVM Compiler   // // Compiler Build ID: CL-19324574 // Cuda compilation tools, release 7.0, V7.0.27 // Based on LLVM 3.4svn //  .version 4.2 .target sm_20 .address_size 64      // .globl   myadd      .visible .entry myadd(     .param .u32 myadd_param_0,     .param .u32 myadd_param_1,     .param .u64 myadd_param_2   ) {     .reg .s32   %r&lt;4&gt;;     .reg .s64   %rd&lt;3&gt;;       ld.param.u32    %r1, [myadd_param_0];     ld.param.u32    %r2, [myadd_param_1];     ld.param.u64    %rd1, [myadd_param_2];     cvta.to.global.u64  %rd2, %rd1;     add.s32     %r3, %r2, %r1;     st.global.u32   [%rd2], %r3;     ret; } </code></pre>  <p>i escluded iostream and numeric includes because with them do not compiling. </p>  <p>but this program not work!! my result is -1 what can i do? best reguards</p>