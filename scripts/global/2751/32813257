<p>I am trying to launch a 2D grid with dimensions (65535x1000) but <code>cudaDeviceSynchronize</code> returns code error 6 . My device should support up to 65535 block in y dimension so I don't understand what is happening.Here is my code</p>  <pre><code>#include "cuda_runtime.h" #include "device_launch_parameters.h" #include &lt;stdio.h&gt;  cudaError_t addWithCuda();  __global__ void kernel() {     int i = blockIdx.x*blockIdx.y; }  int main()  {  cudaError_t cudaStatus;  // Choose which GPU to run on, change this on a multi-GPU system. cudaStatus = cudaSetDevice(0); if (cudaStatus != cudaSuccess) {     fprintf(stderr, "cudaSetDevice failed!  Do you have a CUDA-capable GPU installed?"); }   // Launch a kernel on the GPU  dim3 grid(65535,1000) ; kernel&lt;&lt;&lt;grid, 1024&gt;&gt;&gt;();  // Check for any errors launching the kernel cudaStatus = cudaGetLastError(); if (cudaStatus != cudaSuccess) {     fprintf(stderr, "addKernel launch failed: %s\n", cudaGetErrorString(cudaStatus)); }  // cudaDeviceSynchronize waits for the kernel to finish, and returns // any errors encountered during the launch. cudaStatus = cudaDeviceSynchronize();  if (cudaStatus != cudaSuccess) {     fprintf(stderr, "cudaDeviceSynchronize returned error code %d after launching Kernel!\n", cudaStatus); }  // cudaDeviceReset must be called before exiting in order for profiling and // tracing tools such as Nsight and Visual Profiler to show complete traces. cudaStatus = cudaDeviceReset(); if (cudaStatus != cudaSuccess) {     fprintf(stderr, "cudaDeviceReset failed!");     return 1; } system("pause"); return 0; </code></pre>  <p>}</p>