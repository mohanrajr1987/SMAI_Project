<p>Some programs can be executed from anywhere with a single one-word command. An example of this is youtube-dl, which is a python program that can be executed with the simple command <code>youtube-dl [input]</code>. As far as I have understood, this is simply because there exists a file called <code>/usr/bin/youtube-dl</code>, and <code>/usr/bin</code> is in PATH. However, I do not understand what I have to do to make something like this myself. Right now, I have a python project called <code>testproject</code> that includes a python program like this: <code>~/testproject/files/myownprogram.py</code></p>  <p>What do I have to do to make this a binary executable such as youtube-dl?</p>  <p>I know I can make an <code>alias mop="python ~/testproject/files/myownprogram.py"</code>, and this is also what I have done, and it works fine. That is, I can write <code>$ mop</code>, and successfully run my program.  But for curiosity's, and learning's, sake, I want to know how to make a file such as the <code>/usr/bin/youtube-dl</code> file, removing the need for aliases.</p>  <p>I find this hard to find information about in search engines... Any help is greatly appreciated! :-)</p>  <p><strong>Edit:</strong></p>  <p>My question differs from the one marked as duplicate, in that I'm not looking to execute it as a .sh-script. I simply want to execute it as a suffix-less one-word command, similar to all the other executables that are in <code>/usr/bin</code>. :-)</p>  <p>Ex.: <code>$ myown</code> should run my program, without the need for aliases or writing ".sh" or ".py" at the prompt. That is, I want to have a file <code>/usr/bin/myown</code> that somehow runs my <code>testproject</code> at the simple command <code>myown</code>from anywhere.</p>