<p>Ive been looking at parsing some XML data and placing particular values into a nested dictionary. After looking at the data and researching how best to parse the data I have decided XPath parsing is more suitable than child object parsing as, well it isn't structured correctly for child parsing. </p>  <p>So I am looking to move this data into a nested dictionary to output later. My first attempt to add a value seems to have worked but as it hits the first internal item I get an error. I think I understand the error correctly, I know strings are immutable in python but I dont understand why it works on the first key and fails on the second. Could anyone explain or point me to somewhere that does? </p>  <p>The error I am getting is as follows: <code>TypeError: 'str' object does not support item assignment</code> this is on the following line <code>dictionary['host']['port'] = port</code>. As noted this approach seems to work on this line <code>dictionary['host'] = host</code>. <strong>I would also like to note that Im not 100% sure this approach is workable, I am currently playing with ideas on achieving my goal.</strong> </p>  <pre><code>from xml.etree import ElementTree  data_file = 'data.xml'  dictionary = {} dictionary['host'] = {} dictionary['host']['port'] = {} dictionary['host']['port']['service'] = {}   with open(data_file, 'rt') as f:     tree = ElementTree.parse(f)  for node in tree.findall('.//address'):     if (node.attrib.get('addrtype') == 'ipv4'):         host = node.attrib.get('addr')         dictionary['host'] = host         for node in tree.findall('.//port'):             port = node.attrib.get('portid')             dictionary['host']['port'] = port             for node in tree.findall('.//service'):                 product = node.attrib.get('product')                 dictionary['host']['port']['service'] = product </code></pre>