<p>This is my first year in programming and my class was given an assignment to work on using Python. After working on it for a long time me and a friend managed to complete it. For the most part we are confident that everything is correct although our teacher said the code isn't "Efficient" enough. Our teacher told us that we could do this whole assignment by using much less code. We were wondering if anyone could help us reduce some of our line of code and make our assignment more "Efficient". Thank You So Much.</p>  <pre><code>def mainMenu():                     #main menu function      print ("Welcome To Dino's Doughnut Shoppe!")                   option = raw_input("""Enter a number to choose an option:          1: Order          2: Checkout          3: Start Over          4: Exit          Enter: """)           if option.isdigit():        #checks for valid input         if int(option) == 1:    #calls order menu function             order()         if int(option) == 2:    #calls checkout menu function             checkout()         if int(option) == 3:    #goes back to main menu while clearing the variables             global TT             global CC             global VV             global HH             TT = CC = VV = HH = 0             mainMenu()         if int(option) == 4:    #exits             exit     else:         print "\n Invalid input, returning to main menu \n"         mainMenu()                  #repeats function for invalid inputs   def order():                                        #order placement function     choice = raw_input("""Would would you like? 1: Strawberry Twizzler 2: Chocolate-dipped Maple Puff 3: Vanilla Chai Strudel 4: Honey-Drizzled Lemon Dutchie 5: Done Enter number: """)                #prompt for which doughnut/done      if choice.isdigit():                                #checks for valid input         if int(choice) == 1:                            #first choice             T = raw_input("&gt;")                          #prompt for how many             while (T.isdigit() == False):               #while loop for invalid inputs                 print ("\n invalid input, returning to order menu \n") #user instruction                 order()                                 #restarts function             global TT                                   #calls global variable TT (this is for valid inputs. It is outside the while loop)             TT = int(T)                                 #saves the input amount         if int(choice) == 2:                            #same but for choice 2, global variable CC             C = raw_input("&gt;")             while (C.isdigit() == False):                 print ("\n invalid input, returning to order menu \n")                 order()             global CC             CC = int(C)         if int(choice) == 3:                            #same but for choice 3, global variable VV             V = raw_input("&gt;")             while (V.isdigit() == False):                 print ("\n invalid input, returning to order menu \n")                 order()             global VV             VV = int(V)         if int(choice) == 4:                            #same but for choice 4, global variable HH             H = raw_input("&gt;")             while (H.isdigit() == False):                 print ("\n invalid input, returning to order menu \n")                 order()             global HH             HH = int(H)         if int(choice) == 5:                            #this is the 'done' choice, returns to main menu with saved global variables             mainMenu()         else:             print "\n Invalid input, returning to order menu \n"      #repeats function for invalid inputs             order()     order()                                         #this repeats the function so that the user can order again or select done   def checkout():                                     #checkout function     global TT                                       #calls global variables     global CC     global VV     global HH     total = TT*2 + 3.25*CC + 2.75*VV + 2.5*HH       #calculates total cost     print ("you ordered %dT, %dC, %dV, %dH") % (TT, CC, VV, HH) #shows user amount purchased     print ("your total is: %.2f") % total                       #shows user the total bill     confirm = raw_input("confirm (y/n)? ")                       #asks user to confirm     if confirm == 'y':                                          #confirm: clears variables and returns to mainMenu for next order         TT = CC = VV = HH = 0         print "Thank you for choosing shopping at Dino's! Have a wonderful day and do come again!"         mainMenu()     else:         print "\n Returning to order menu \n"         order()                                                 #if unconfirmed, returns to order menu with the SAME variables     mainMenu()                                                      #calls the main menu function to start the whole thing </code></pre>  <h3>This is the question</h3>  <p>Assignment #2 - Dino's Doughnut Shoppe</p>  <p>Dino's Doughnut Shoppe is looking for a new text-based menu to automate the ordering system for their most popular varieties of doughnuts.</p>  <p>The menu should begin by welcoming the user. Following this, the user should have four options:</p>  <p>Order Check out Start over Exit The user should be able to select an option by entering a number.  If the user doesn't select a valid option, the menu should ask again (keep asking until a valid option is selected).  If the user does select a valid option, your code should call a function to perform that task.  Note: Your code should use functions to encapsulate parts of your solution. At the bare minimum, the main menu and each option from the main menu (except Exit), should each be handled in its own function. When the called function is complete, make sure to prompt the customer with the main menu again. Order If the user selects 'Order', a second menu should appear with the following doughnuts:</p>  <p>Strawberry Twizzler Chocolate-dipped Maple Puff Vanilla Chai Strudel Honey-Drizzled Lemon Dutchie Done Selecting any of these options (other than Done) should prompt the user for how many they would like. You should make sure the user enters a valid amount (hint: use isdigit()). If the user selects Done, return to the main menu. All other invalid inputs should simply repeat the menu. Note: you'll need these values later (in checkout) so make use of multiple returns in python.  If a user enters order a second time, you can have the new order replace the old one (i.e., treat it like it was the first order). Check out If the user selects 'Check out' from the main menu, they should be shown a list of how many of each type of doughnut they have ordered. Prompt the user to confirm or cancel their order. If they cancel return to the main menu. If they confirm, show them the total cost of their order. Each doughnut costs a different amount as follows:</p>  <p>Strawberry Twizzler: $2.00 each Chocolate-dipped Maple Puff: $3.25 each Vanilla Chai Strudel: $2.75 each Honey-Drizzled Lemon Dutchie: $2.50 each So, if the user ordered 3 Strawberry Twizzlers, 2 Chocolate-dipped Maple Puffs, and 1 Honey-Drizzled Lemon Dutchie, their total would be: (3*2.00)+(2*3.25)+(0*2.75)+(1*2.50) = 15.00 This value should be printed out in a neatly formatted manner (with exactly 2 decimal places in the total). E.g., Your total comes to $15.00. That user's order should be cleared so that the next user can begin. Remember to thank the user for their business before returning to the main menu. Start Over or Exit If the user selects 'Start over' from the main menu, their current order should be cleared. If the user selects 'Exit' from the main menu, the program should end.</p>  <p>For an idea of how to structure your code click here. Plan ahead in comments and build small parts at a time. Do not assume the user will enter correct input, marks will be alotted to each input above for input checking.</p>