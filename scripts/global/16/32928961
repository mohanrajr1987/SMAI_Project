<p>Given a large Dynamo table with lots of items, I would like to be able to start a scan and later resume iteration on it from an unrelated Python context, as if I had continued calling the <code>next()</code> of <code>gen()</code> on the scan itself.</p>  <p>What I am trying to avoid:</p>  <pre><code>offset = 500 count = 25 scan_gen = engine.scan(AModel).gen() for _ in range(offset):    scan_gen.next() results = [scan_gen.next() for _ in range(count)] </code></pre>  <p>Because this would require restarting the scan from the top, every single time.</p>  <p>I see that the DynamoDB API normally works in a cursor-like fashion with the <code>LastEvaluatedKey</code> property: <a href="http://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_Scan.html" rel="nofollow">http://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_Scan.html</a></p>  <p>Is there a way to use this to jump ahead in scan generator in Flywheel? </p>  <p>Failing that, is there a way to serialize the state of the generator? I have tried pickling the generator, and it causes <code>pickle.PicklingError</code> due to name resolution problems:</p>  <pre><code>&gt;&gt;&gt; with open('/tmp/dump_dynamo_result', 'wb') as out_fp: ...  pickle.dump(engine.scan(AModel).gen(), out_fp, pickle.HIGHEST_PROTOCOL) ...  Traceback (most recent call last):   File "&lt;stdin&gt;", line 2, in &lt;module&gt;   File "/usr/lib/python2.7/pickle.py", line 1370, in dump     Pickler(file, protocol).dump(obj)   File "/usr/lib/python2.7/pickle.py", line 224, in dump     self.save(obj)   File "/usr/lib/python2.7/pickle.py", line 331, in save     self.save_reduce(obj=obj, *rv)   File "/usr/lib/python2.7/pickle.py", line 396, in save_reduce     save(cls)   File "/usr/lib/python2.7/pickle.py", line 286, in save     f(self, obj) # Call unbound method with explicit self   File "/usr/lib/python2.7/pickle.py", line 748, in save_global     (obj, module, name)) pickle.PicklingError: Can't pickle &lt;type 'generator'&gt;: it's not found as __builtin__.generator </code></pre>