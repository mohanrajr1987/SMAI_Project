<p>I faced a problem with using async /await in my add-in application, I have custom task pane and user can download some data with it, so there are problems:</p>  <ol> <li><p>After awaited operation completed the control is not returned to previous execution context. I created example with windows forms and paste the same method with awaiting and it works fine - I can use form controls after await operation, but not in add-in, I have to call custom task pane <strong>Invoke</strong> method. Simple example:</p>  <pre><code>private void SearchPaneButton_Click(object sender, EventArgs e) {     Search(); }  private async void Search() {     var searchText = SearchTextBox.Text;     SearchPaneButton.Text = "Loadingâ€¦";     var data = await new DataServiceClient().GetDataAsync(searchText);     this.Invoke((MethodInvoker)(() =&gt;     {         SearchPaneButton.Text = "Search";         ToggleWorkbookEvents();     })); } </code></pre></li> <li><p>In my add-in I need to handle some events - worksheet changed, worksheet activated/deactivated, but these events disappear and isn't fired after await operation and I have to use something like "toggling"(remove+add) events after each await using. Simple example:</p>  <pre><code>private void ToggleWorkbookEvents() {     var excel = Globals.BPNAddIn.Application;     //need to ensure event will not be set twice     excel.SheetActivate -= CheckSheetForData;     excel.SheetActivate += CheckSheetForData;     if (excel.ActiveWorkbook != null)     {         var activeSheet = Globals.BPNAddIn.GetActiveWorksheet();         //need to ensure event will not be set twice         activeSheet.Change -= Worksheet_Changed;         activeSheet.Change += Worksheet_Changed;     } } </code></pre></li> </ol>  <p>So maybe vsto framework can not support new features(like async await) of last versions .NET Framework?</p>