<p>I have a nodejs library written using the <a href="https://github.com/yortus/asyncawait" rel="nofollow">async/await</a> module. I try to consume it from a library which uses regular callbacks. Here is a sample code:</p>  <pre><code>var async = require('asyncawait/async'); var await = require('asyncawait/await'); var Promise = require('bluebird');  var foo = async (function() {     var resultA = await (Promise.promisify(bar));     return 111; })  function bar(callback) {   setTimeout(callback, 2000) }  function moo() {   var f = async.cps(foo)    f(function(err, res) {     console.log(res)   })  }  moo() </code></pre>  <p>I expected console.log to print 111 but instead it prints:</p>  <pre><code>{ _bitField: 0,   _fulfillmentHandler0: undefined,   _rejectionHandler0: undefined,   _progressHandler0: undefined,   _promise0: undefined,   _receiver0: undefined,   _settledValue: undefined } </code></pre>  <p>btw if I inline the foo implementation in the "async.cps" line it works (but this is not an option since its an external library).</p>  <p>Any idea?</p>