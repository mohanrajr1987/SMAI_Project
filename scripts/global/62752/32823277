<p>I'm trying to use ES7 <code>async</code> / <code>await</code> together with <code>fetch</code>. I know I'm close but I can't get it to work. Here is the code:</p>  <pre><code>class Bar {     async load() {         let url =  'https://finance.yahoo.com/webservice/v1/symbols/goog/quote?format=json';         try {             response = await fetch(url);             return response.responseText;         } catch (e) {             return e.message;         }     } } </code></pre>  <p>which I use as follows:</p>  <pre><code>let bar = new Bar(); bar.load().then(function (val) {     console.log(val); }); </code></pre>  <p><a href="http://codepen.io/anon/pen/XmNBEJ" rel="nofollow">DEMO</a></p>  <p>For some reason I always get into the <code>catch</code> with the message</p>  <pre><code>response is not defined </code></pre>  <p>Any suggestions what I do wrong ?</p>  <p>UPDATE: As suggested in the comments, it might be an issue with <code>fetch</code>, so I tried a simplified (ES5) version:</p>  <pre><code>&lt;!doctype html&gt;  &lt;html&gt;     &lt;head&gt;               &lt;script&gt;             var url =  'https://finance.yahoo.com/webservice/v1/symbols/goog/quote?format=json';             fetch(url, {method: 'get', mode: 'cors'}).then(function (response) {                        console.log(response.responseText);                });         &lt;/script&gt;     &lt;head&gt;     &lt;body&gt;&lt;/body&gt; &lt;html&gt; </code></pre>  <p>And still doesn't work :( However, if I replace fetch it works:</p>  <pre><code>var request = new XMLHttpRequest(); request.open("GET", url, false); request.send(null); console.log(request.responseText); </code></pre>