<p>I am trying to write a function to load some data from the roaming folder on a windows 8 store app.</p>  <p>I get a deadlock (hang) on roamingLoad.Wait() in the Load method;</p>  <p>What is the correct way to do this? What is being done wrong below?</p>  <p>Edit: I should point out that if I step though it in the debugger it works perfectly.</p>  <p>And is there a way to do it without the top method becomeing async? If I do that then every calling method must say await to block until it's done no?</p>  <pre><code>    public override bool Load(string in_FileNameAndDirectory, StreamTask in_StreamTask, bool in_PreferRoaming)     {         if (PreferRoaming &amp;&amp; SupportsRoamingSave)         {             try             {                 Task&lt;bool&gt; roamingLoad = RoamingLoadAsync(in_FileNameAndDirectory, in_StreamTask);                 roamingLoad.Wait();                 return roamingLoad.Result;             }             catch (Exception error)             {                 return false;             }         }         return Load(in_FileNameAndDirectory, in_StreamTask);     }       private async Task&lt;bool&gt; RoamingLoadAsync(string inFileNameAndDirectory, StreamTask inStreamTask)     {         try         {             StorageFolder roamingFolder = ApplicationData.Current.RoamingFolder;             StorageFile sampleFile = await roamingFolder.GetFileAsync(inFileNameAndDirectory);              using (Stream stream = await sampleFile.OpenStreamForReadAsync())                 inStreamTask(stream);         }         catch (Exception error)         {             return false;         }         return true;     } </code></pre>