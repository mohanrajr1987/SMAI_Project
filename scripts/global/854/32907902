<p>I have a set of 30 nodes, each node can connect to one and only one at a time. Moreover, one node cannot connect to another specific one (say, the one with and <code>id= id+15</code>, e.g. 1-16, 2-17... the rule is not relevant, I can change the association node-number). What I am looking for is a matrix where each row is a possible set of connections where all nodes are connected to another and that each nodes connected to all other nodes (except the forbidden ones). It would look like this (read it in pairs)</p>  <pre><code>[1  2   3   4   5   6   7   8   9   10  11  12  13  14  15  16  17  18  19  20  21  22  23  24  25  26  27  28  29  30; 2   3   4   5   6   7   8   9   10  11  12  13  14  15  16  17  18  19  20  21  22  23  24  25  26  27  28  29  1   30; 1   4   2   5   3   6   7   10  8   11  9   12  13  16  14  17  15  18  19  22  20  23  21  24  25  28  26  29  27  30; 4   7   5   8   6   9   10  13  11  14  12  15  16  19  17  20  18  21  22  25  23  26  24  27  28  1   2   29  3   30; ... ] </code></pre>  <p>I was trying to develop this by collecting all the possible non-repeated combination (binomial 30 over 2 => 435) with <code>nchoosek</code> but now I am dealing with the problem of placing all the pairs that I have in a <em>29</em>-by-<em>15</em> pairs matrix without repetition. This would allow me to respect the constraint easily by removing the forbidden pairs from the output of <code>nchoosek</code>.</p>  <p>I am sure this is a known graph problem but I was not able to find anything about that. Does anyone know to implement it?</p>  <p>Edit: ok, one solution I got is to consider N 30x30 matrices, each of them having 1 if one node is connected to another. Therefore, all possible matrices are the ones having one 1 in each row and one 1 in each column (all nodes connected to only one other). What do you think about that?</p>