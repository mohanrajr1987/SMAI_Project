<p>In short, I'm trying to show the user a DateTime field initialized with a timezone aware datetime object, allow them to edit it and post it back. Without doing anything special I get a warning about a non-timezone aware datetime being returned to the form's DateTime field.</p>  <pre><code>/django/db/models/fields/__init__.py:1474: RuntimeWarning:     DateTimeField MyModel.datetimefield received a naive datetime (2015-09-09 15:55:00)     while time zone support is active. </code></pre>  <p>I started by reading <a href="https://docs.djangoproject.com/en/1.8/topics/i18n/timezones/" rel="nofollow">the django time zones docs</a>. I installed pytz (<code>pip install pytz</code>) and made sure <a href="https://docs.djangoproject.com/en/1.8/ref/settings/#use-tz" rel="nofollow"><code>USE_TZ = True</code></a> was set.</p>  <p>I'm using <a href="https://github.com/Miserlou/django-easy-timezones" rel="nofollow">django-easy-timezones</a>, which sets the "current" timezone based on the requester's IP with a call to <a href="https://docs.djangoproject.com/en/dev/topics/i18n/timezones/#selecting-the-current-time-zone" rel="nofollow"><code>timezone.activate()</code></a>. As I understand it, the setting <a href="https://docs.djangoproject.com/en/1.8/ref/settings/#time-zone" rel="nofollow"><code>TIME_ZONE</code></a> would otherwise be used as the default. I'm also also using <a href="https://github.com/nkunihiko/django-bootstrap3-datetimepicker" rel="nofollow"><code>django-bootstrap3-datetimepicker</code></a> for a nice widget in my form.</p>  <p>The timezone doesn't appear to be sent with the initial form data. Instead, the "current" timezone is used to create and send a naive local datetime. From <a href="https://docs.djangoproject.com/en/1.8/topics/i18n/timezones/#time-zone-aware-input-in-forms" rel="nofollow">this</a> I gather the <code>clean_[field]</code> method is meant to assume what comes back in the POST is also in the "current" timezone. Is this done automatically or am I meant to make the data timezone aware myself? If so, why might I be getting the warning?</p>  <p>Would it make more sense to simply send the timezone back and forth, always having a timezone aware datetime? If so, getting the datetime to javascript is discussed <a href="http://stackoverflow.com/questions/455580/json-datetime-between-python-and-javascript">here</a>, but I haven't found a nice way of returning it to the DateTime field format wise (especially with the widget not using a format with a timezone).</p>