<p>I have an FXML class built in SceneBuilder that's being loaded via FXMLLoader with a controller associated with it.  I have put a style class with a pseudo-class on the parent panel of the widget.  The ToggleButton is getting styled fine, but the two labels are not.</p>  <p>As a test, I tried directly giving one of the labels the CSS class.  The behavior was interesting; it picked up on the initial change, but did not have the text color updated when the pseudo class changed.</p>  <p>Below is the SCCEE that's cut out from production code.  All files are directly on the classpath.</p>  <p>CustomButton.fxml:</p>  <pre><code>&lt;?xml version="1.0" encoding="UTF-8"?&gt;  &lt;?import javafx.scene.text.*?&gt; &lt;?import javafx.scene.layout.*?&gt; &lt;?import java.lang.*?&gt; &lt;?import javafx.scene.control.*?&gt;  &lt;Pane maxHeight="-Infinity" maxWidth="-Infinity" minHeight="-Infinity" minWidth="-Infinity" prefHeight="70.0" prefWidth="70.0" styleClass="custom-button" xmlns="http://javafx.com/javafx/8" xmlns:fx="http://javafx.com/fxml/1" fx:controller="CustomButtonController"&gt;    &lt;children&gt;       &lt;ToggleButton fx:id="selectionToggle" mnemonicParsing="false" prefHeight="70.0" prefWidth="70.0" /&gt;       &lt;Label fx:id="dateLabel" alignment="TOP_LEFT" contentDisplay="TOP" layoutX="5.0" layoutY="5.0" mouseTransparent="true" prefHeight="25.0" prefWidth="60.0" styleClass="custom-button" text="Date" wrapText="true" /&gt;       &lt;Label fx:id="eventLabel" alignment="BOTTOM_LEFT" contentDisplay="BOTTOM" layoutX="5.0" layoutY="40.0" mouseTransparent="true" prefHeight="25.0" prefWidth="60.0" text="Event" wrapText="true" /&gt;    &lt;/children&gt; &lt;/Pane&gt; </code></pre>  <p>CustomButtonController.java:</p>  <pre><code>/**  * Sample Skeleton for 'CustomButton.fxml' Controller Class  */  import java.net.URL; import java.util.ResourceBundle;  import javafx.css.PseudoClass; import javafx.event.ActionEvent; import javafx.event.EventHandler; import javafx.fxml.FXML; import javafx.scene.Parent; import javafx.scene.control.Label; import javafx.scene.control.ToggleButton;  public class CustomButtonController {     @FXML // ResourceBundle that was given to the FXMLLoader     private ResourceBundle resources;     @FXML // URL location of the FXML file that was given to the FXMLLoader     private URL location;     @FXML // fx:id="dateLabel"     private Label dateLabel; // Value injected by FXMLLoader     @FXML // fx:id="selectionToggle"     private ToggleButton selectionToggle; // Value injected by FXMLLoader     @FXML // fx:id="eventLabel"     private Label eventLabel; // Value injected by FXMLLoader       private Parent m_parent;       @FXML // This method is called by the FXMLLoader when initialization is complete     void initialize() {         assert dateLabel != null : "fx:id=\"dateLabel\" was not injected: check your FXML file 'CustomButton.fxml'.";         assert selectionToggle != null : "fx:id=\"selectionToggle\" was not injected: check your FXML file 'CustomButton.fxml'.";         assert eventLabel != null : "fx:id=\"eventLabel\" was not injected: check your FXML file 'CustomButton.fxml'.";     }      public void setParent(Parent parent) {         m_parent = parent;          selectionToggle.setOnAction(new EventHandler&lt;ActionEvent&gt;() {             @Override             public void handle(ActionEvent event) {                 m_parent.pseudoClassStateChanged(PseudoClass.getPseudoClass("state2"), selectionToggle.isSelected());                 m_parent.applyCss();             }         });     } } </code></pre>  <p>Main.java:</p>  <pre><code>import javax.swing.JFrame; import javax.swing.JPanel; import javax.swing.SwingUtilities;  import javafx.application.Platform; import javafx.embed.swing.JFXPanel; import javafx.scene.Parent; import javafx.scene.Scene;  public class Main implements Runnable {      @Override     public void run() {         JFrame frame = new JFrame("Test Frame");         frame.setSize(800, 600);          JPanel panel = new JPanel();         frame.setContentPane(panel);          FXMLLoader loader = new FXMLLoader(getClass().getResource("/CustomButton.fxml"));         Parent parent = loader.load();          String cssString = getClass().getResource("/CustomButton.css").toExternalForm();         parent.getStylesheets().add(cssString);          CustomButtonController cont = loader.&lt;CustomButtonController&gt;getController();         cont.setParent(parent);          JFXPanel jfxPanel = new JFXPanel();         jfxPanel.setScene(new Scene(parent));          panel.add(jfxPanel);         frame.setVisible(true);     }      public static void main(String[] args) {         SwingUtilities.invokeLater(new Runnable() {             @Override             public void run() {                 new JFXPanel();                 Platform.runLater(new Main());             }         });     } } </code></pre>  <p>CustomButton.css:</p>  <pre><code>.custom-button:state2 {    -fx-base: cyan;   -fx-text-fill: red;   -fx-fill: yellow;   -fx-stroke: purple; }  .custom-button {    -fx-base: green;   -fx-text-fill: blue; } </code></pre>  <p>Result (top is unselected, bottom is selected):</p>  <p><a href="http://i.stack.imgur.com/ln7zt.png" rel="nofollow"><img src="http://i.stack.imgur.com/ln7zt.png" alt="Result"></a></p>  <p>Note that the ToggleButton obeys -fx-base, the date Label (which directly has the CSS class added to it) obeys -fx-text-fill for its initial color, but does not update on selection), and the event Label doesn't take anything from the CSS.</p>