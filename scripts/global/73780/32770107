<p>When I run the code in Chrome (transpiled to JS) the object is usable upon page load. The issue arises when I run the code in Chromium (native Dart + JS), the object is not loaded, in this case, 0 is printed for dateObject['length'].</p>  <p><strong>date_picker.dart</strong></p>  <pre><code>part of myproject.common.ui;  @Component(     selector: 'date_picker',     templateUrl: "date_picker.html",     useShadowDom: false ) class DatePickerComponent{       DatePickerComponent() {         new Future(() {              var dateObject = context.callMethod("jQuery", ['#date_picker']);             print(dateObject['length']);             var dateChanged = dateObject.callMethod("datetimepicker", [new JsObject.jsify({"format": 'MM/DD/YYYY'})]);             dateChanged.callMethod('on', ['dp.change']);          });     } } </code></pre>  <p><strong>date_picker.html</strong></p>  <pre class="lang-html prettyprint-override"><code>    &lt;div class="form-group"&gt;         &lt;div class='input-group date' id='date_picker'&gt;             &lt;input type='text' class="form-control"/&gt;                     &lt;span class="input-group-addon"&gt;                         &lt;span class="glyphicon glyphicon-calendar"&gt;&lt;/span&gt;                     &lt;/span&gt;         &lt;/div&gt;     &lt;/div&gt; </code></pre>  <p><strong><em>Adding modified date_picker.dart using answer from comments</em></strong></p>  <pre><code>part of my_project.common.ui;  @Component(     selector: 'date_picker',     templateUrl: "date_picker.html",     useShadowDom: false ) @Injectable() class DatePickerComponent implements ShadowRootAware{  void onShadowRoot(_){       new Future((){          var dateObject = context.callMethod("jQuery", ['#date_picker']);         var dateChanged = dateObject.callMethod("datetimepicker", [new JsObject.jsify({"format": 'MM/DD/YYYY'})]);         dateChanged.callMethod('on', ['dp.change']);      }); }     DatePickerComponent(); } </code></pre>