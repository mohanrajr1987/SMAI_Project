<p>I'm trying to put an up button on my action bar, but my app isn't displaying the action bar for the fragment. My main activity's fragment has an action bar, just not the fragment it launches, so when I call <code>getActivity().getActionBar().setDisplayHomeAsUpEnabled(true)</code>, the app throws a nullPointerException. (Stack trace for this below at NPE Stack Trace 1).</p>  <p>I've tried using <code>getActionBar.show()</code> and setting the theme to Theme.Holo.Light, as suggested <a href="http://stackoverflow.com/questions/17950960/android-actionbar-not-visible">here</a>. <code>getActionBar.show()</code>, but that crashes the app with a nullPointerException. When I try to use Theme.Holo.Light, it tells me I have to use an appcompat theme ("You need to use a Theme.AppCompat theme (or descendant) with this activity.")</p>  <p>I've looked around for how to fix that error, but none of the AppCompat themes people suggest solve the problem of there being no action bar on this fragment. Any suggestions people have are appreciated. Code below.</p>  <p>The fragment that won't display an action bar:</p>  <pre><code>import android.annotation.TargetApi; import android.app.Activity; import android.app.Fragment; import android.app.FragmentManager; import android.content.Intent; import android.os.Build; import android.os.Bundle; import android.support.v4.app.NavUtils; import android.text.Editable; import android.text.TextWatcher; import android.util.Log; import android.view.LayoutInflater; import android.view.MenuItem; import android.view.View; import android.view.ViewGroup; import android.widget.Button; import android.widget.CheckBox; import android.widget.CompoundButton; import android.widget.EditText;  import java.util.Date; import java.util.UUID;  public class CrimeFragment extends Fragment { public static final String EXTRA_CRIME_ID = "com.bignerdranch.android.criminalintent,crime_id";  private static final String DIALOG_DATE = "date"; private static final int REQUEST_DATE = 0;  private Crime mCrime; private EditText mTitleField; private Button mDateButton; private CheckBox mSolvedCheckBox;  @Override public void onCreate(Bundle savedInstanceState) {     super.onCreate(savedInstanceState);     setHasOptionsMenu(true);      UUID crimeId = (UUID)getArguments().getSerializable(EXTRA_CRIME_ID);      mCrime = CrimeLab.get(getActivity()).getCrime(crimeId); }  @TargetApi(11) @Override public View onCreateView(LayoutInflater inflater, ViewGroup parent, Bundle savedInstanceState) {     View v = inflater.inflate(R.layout.fragment_crime, parent, false);      if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.HONEYCOMB) {         if (NavUtils.getParentActivityName(getActivity()) != null)  {             //getActivity().getActionBar().setDisplayHomeAsUpEnabled(true);         }     }      mTitleField = (EditText)v.findViewById(R.id.crime_title);     mTitleField.setText(mCrime.getTitle());     mTitleField.addTextChangedListener(new TextWatcher() {         @Override         public void beforeTextChanged(CharSequence s, int start, int count, int after) {             //This space intentionally left blank         }          @Override         public void onTextChanged(CharSequence c, int start, int before, int count) {             mCrime.setTitle(c.toString());         }          @Override         public void afterTextChanged(Editable s) {             //This space intentionally left blank         }     });      mDateButton = (Button)v.findViewById(R.id.crime_date);     updateDate();     mDateButton.setOnClickListener(new View.OnClickListener() {         public void onClick(View v) {             FragmentManager fm = getActivity().getFragmentManager();             DatePickerFragment dialog = DatePickerFragment.newInstance(mCrime.getDate());             dialog.setTargetFragment(CrimeFragment.this, REQUEST_DATE);             dialog.show(fm, DIALOG_DATE);         }     });      mSolvedCheckBox = (CheckBox)v.findViewById(R.id.crime_solved);     mSolvedCheckBox.setChecked(mCrime.isSolved());     mSolvedCheckBox.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {         @Override         public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {             mCrime.setSolved(isChecked);         }     });      return v; }  @Override public void onActivityResult(int requestCode, int resultCode, Intent data)  {     if (resultCode != Activity.RESULT_OK) return;     if (requestCode == REQUEST_DATE)    {         Date date = (Date)data.getSerializableExtra(DatePickerFragment.EXTRA_DATE);         mCrime.setDate(date);         updateDate();     } }  public static CrimeFragment newInstance(UUID crimeId)   {     Bundle args = new Bundle();     args.putSerializable(EXTRA_CRIME_ID, crimeId);      CrimeFragment fragment = new CrimeFragment();     fragment.setArguments(args);      return fragment; }  @Override public boolean onOptionsItemSelected(MenuItem item) {     switch(item.getItemId())    {         case R.id.home:             if (NavUtils.getParentActivityName(getActivity()) != null)  {                 NavUtils.navigateUpFromSameTask(getActivity());             }             return true;         default:             return super.onOptionsItemSelected(item);     } }  private void updateDate()   {     mDateButton.setText(mCrime.getDate().toString()); } } </code></pre>  <p>Fragment XML:</p>  <pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt; &lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android" android:layout_width="match_parent" android:layout_height="match_parent" android:orientation="vertical" &gt;  &lt;TextView     android:layout_width="match_parent"     android:layout_height="wrap_content"     android:text="@string/crime_title_label"     style="?android:listSeparatorTextViewStyle"     /&gt;  &lt;EditText     android:id="@+id/crime_title"     android:layout_width="match_parent"     android:layout_height="wrap_content"     android:hint="@string/crime_title_hint"     /&gt;  &lt;TextView     android:layout_width="match_parent"     android:layout_height="wrap_content"     android:text="@string/crime_details_label"     style="?android:listSeparatorTextViewStyle"     /&gt;  &lt;Button     android:id="@+id/crime_date"     android:layout_width="match_parent"     android:layout_height="wrap_content"     android:layout_marginLeft="16dp"     android:layout_marginRight="16dp"     /&gt;  &lt;CheckBox     android:id="@+id/crime_solved"     android:layout_width="match_parent"     android:layout_height="wrap_content"     android:layout_marginLeft="16dp"     android:layout_marginRight="16dp"     android:text="@string/crime_solved_label"     /&gt; </code></pre>  <p></p>  <p>Activity hosting fragment:</p>  <pre><code>import android.app.Fragment; import android.app.FragmentManager; import android.os.Bundle; import android.support.v13.app.FragmentStatePagerAdapter; import android.support.v4.app.FragmentActivity; import android.support.v4.view.ViewPager;  import java.util.ArrayList; import java.util.UUID;  public class CrimePagerActivity extends FragmentActivity { private ViewPager mViewPager; private ArrayList&lt;Crime&gt; mCrimes;  @Override public void onCreate(Bundle savedInstanceState) {     super.onCreate(savedInstanceState);      mViewPager = new ViewPager(this);     mViewPager.setId(R.id.viewpager);     setContentView(mViewPager);      mCrimes = CrimeLab.get(this).getCrimes();      FragmentManager fm = getFragmentManager();     mViewPager.setAdapter(new FragmentStatePagerAdapter(fm) {         @Override         public int getCount()   {             return mCrimes.size();         }          @Override         public Fragment getItem(int pos) {             Crime crime = mCrimes.get(pos);             return CrimeFragment.newInstance(crime.getId());         }     });      UUID crimeId = (UUID)getIntent().getSerializableExtra(CrimeFragment.EXTRA_CRIME_ID);     for (int i = 0; i &lt; mCrimes.size(); i++)    {         if (mCrimes.get(i).getId().equals(crimeId)) {             mViewPager.setCurrentItem(i);             break;         }     }      mViewPager.setOnPageChangeListener(new ViewPager.OnPageChangeListener() {         public void onPageScrollStateChanged(int state)    {}          public void onPageScrolled(int pos, float posOffset, int posOffsetPixels)  {}          public void onPageSelected(int pos)    {             Crime crime = mCrimes.get(pos);             if (crime.getTitle() != null)   {                 setTitle(crime.getTitle());             }         }     }); } } </code></pre>  <p>Manifest:</p>  <pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt; &lt;manifest xmlns:android="http://schemas.android.com/apk/res/android" package="com.bignerdranch.android.criminalintent" &gt;  &lt;application     android:allowBackup="true"     android:icon="@mipmap/ic_launcher"     android:label="@string/app_name"     android:theme="@style/AppTheme" &gt;     &lt;activity         android:name=".CrimeListActivity"&gt;         &lt;intent-filter&gt;             &lt;action android:name="android.intent.action.MAIN"   /&gt;             &lt;category android:name="android.intent.category.LAUNCHER"   /&gt;         &lt;/intent-filter&gt;     &lt;/activity&gt;        &lt;activity         android:name=".CrimePagerActivity"         android:label="@string/app_name" &gt;            &lt;meta-data android:name="android.support.PARENT_ACTIVITY"                       android:value=".CrimeListActivity"/&gt;     &lt;/activity&gt; &lt;/application&gt; </code></pre>  <p></p>  <p>res/styles:</p>  <pre><code>&lt;resources&gt;  &lt;!-- Base application theme. --&gt; &lt;style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar"&gt;     &lt;!-- Customize your theme here. --&gt; &lt;/style&gt; </code></pre>  <p></p>  <p>NPE Stack Trace 1:</p>  <pre><code>Process: com.bignerdranch.android.criminalintent, PID: 24448 java.lang.NullPointerException         at com.bignerdranch.android.criminalintent.CrimeFragment.onCreateView(CrimeFragment.java:57)         at android.app.Fragment.performCreateView(Fragment.java:1700)         at android.app.FragmentManagerImpl.moveToState(FragmentManager.java:890)         at android.app.FragmentManagerImpl.moveToState(FragmentManager.java:1062)         at android.app.BackStackRecord.run(BackStackRecord.java:684)         at android.app.FragmentManagerImpl.execPendingActions(FragmentManager.java:1453)         at android.app.FragmentManagerImpl.executePendingTransactions(FragmentManager.java:479)         at android.support.v13.app.FragmentStatePagerAdapter.finishUpdate(FragmentStatePagerAdapter.java:167)         at android.support.v4.view.ViewPager.populate(ViewPager.java:1073)         at android.support.v4.view.ViewPager.populate(ViewPager.java:919)         at android.support.v4.view.ViewPager.onMeasure(ViewPager.java:1441)         at android.view.View.measure(View.java:17495)         at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:5363)         at android.widget.FrameLayout.onMeasure(FrameLayout.java:310)         at android.view.View.measure(View.java:17495)         at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:5363)         at android.widget.LinearLayout.measureChildBeforeLayout(LinearLayout.java:1410)         at android.widget.LinearLayout.measureVertical(LinearLayout.java:695)         at android.widget.LinearLayout.onMeasure(LinearLayout.java:588)         at android.view.View.measure(View.java:17495)         at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:5363)         at android.widget.FrameLayout.onMeasure(FrameLayout.java:310)         at com.android.internal.policy.impl.PhoneWindow$DecorView.onMeasure(PhoneWindow.java:2548)         at android.view.View.measure(View.java:17495)         at android.view.ViewRootImpl.performMeasure(ViewRootImpl.java:2285)         at android.view.ViewRootImpl.measureHierarchy(ViewRootImpl.java:1396)         at android.view.ViewRootImpl.performTraversals(ViewRootImpl.java:1595)         at android.view.ViewRootImpl.doTraversal(ViewRootImpl.java:1254)         at android.view.ViewRootImpl$TraversalRunnable.run(ViewRootImpl.java:6632)         at android.view.Choreographer$CallbackRecord.run(Choreographer.java:814)         at android.view.Choreographer.doCallbacks(Choreographer.java:614)         at android.view.Choreographer.doFrame(Choreographer.java:584)         at android.view.Choreographer$FrameDisplayEventReceiver.run(Choreographer.java:800)         at android.os.Handler.handleCallback(Handler.java:733)         at android.os.Handler.dispatchMessage(Handler.java:95)         at android.os.Looper.loop(Looper.java:146)         at android.app.ActivityThread.main(ActivityThread.java:5487)         at java.lang.reflect.Method.invokeNative(Native Method)         at java.lang.reflect.Method.invoke(Method.java:515)         at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1283)         at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1099)         at dalvik.system.NativeStart.main(Native Method) </code></pre>