<p>Is there a way to get a file from an inbound File connector, and generate multiple copies (say, 5) of the same file within that same folder or a different location?  I have tried it with Scatter-Gather component, but it did not turn out the way I expected. Help, please? </p>  <p>If using Scatter-Gather is supposed to work, how do I write a MEL expression to alter the filename, keeping the original extension? My current mule flow is as follows.</p>  <pre><code>&lt;file:connector name="File_Send" readFromDirectory="C:\Users\AnypointStudio\workspace\MessageOut" autoDelete="true" streaming="true" validateConnections="true" doc:name="File"/&gt; &lt;file:connector name="File_Receive" autoDelete="true" streaming="true" validateConnections="true" doc:name="File"/&gt; &lt;spring:beans&gt;     &lt;spring:bean id="readFile" class="java.lang.String"&gt;         &lt;spring:constructor-arg&gt;             &lt;spring:bean class="org.springframework.util.FileCopyUtils" factory-method="copyToByteArray"&gt;                 &lt;spring:constructor-arg type="java.io.InputStream" value="${C:\Users\AnypointStudio\workspace\MessageOut\24730717-99a3-4353-bfcc-d19d3ba7f50a.xml}"/&gt;             &lt;/spring:bean&gt;         &lt;/spring:constructor-arg&gt;     &lt;/spring:bean&gt; &lt;/spring:beans&gt; &lt;flow name="loop_testFlow"&gt;     &lt;file:inbound-endpoint path="C:\Users\AnypointStudio\workspace" connector-ref="File_Send" responseTimeout="10000" doc:name="File"/&gt;     &lt;object-to-byte-array-transformer doc:name="Object to Byte Array"/&gt;     &lt;set-variable variableName="file" value="#[app.registry.readFile]" doc:name="Variable"/&gt;     &lt;scatter-gather doc:name="Scatter-Gather"&gt;         &lt;file:outbound-endpoint path="C:\Users\AnypointStudio\workspace\MessageIn" connector-ref="File_Receive" responseTimeout="10000" doc:name="File"/&gt;         &lt;file:outbound-endpoint path="C:\Users\AnypointStudio\workspace\MessageIn" connector-ref="File_Receive" responseTimeout="10000" doc:name="File"/&gt;     &lt;/scatter-gather&gt; &lt;/flow&gt; </code></pre>