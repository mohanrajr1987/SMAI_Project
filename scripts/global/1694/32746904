<p>I have 3 tables, Hour, Daily, Record</p>  <ul> <li>Hour has Id, StartDate, EndDate, EId, Hours</li> <li>Daily has Id, Date</li> <li>Record has DailyId, EId, HourId</li> </ul>  <p>As soon as the new record is added to Daily table, the new row is generated in Record table with pre filled DailyId and EId values . There is no value for HourId. Therefore, I want to have a trigger so every time new record is inserted to Hour table, it updates the HourId whose value is from Id of Hour table. Obviously, it must match EId and DailyId in tables, additionally, Date of Daily table has to be in between StartDate and EndDate of the new record in Hour table.</p>  <p>Here is my trigger, but it does not work, whenever I add new record to Hour table.</p>  <pre><code>ALTER TRIGGER [dbo].[insertRecord] ON  [dbo].[Hour] AFTER INSERT AS  BEGIN     -- SET NOCOUNT ON added to prevent extra result sets from     -- interfering with SELECT statements.     SET NOCOUNT ON;      DECLARE @EmpId nvarchar, @StartDate datetime, @EndDate datetime,              @EntId int, @ToHourId int      SELECT @EmpId = EId FROM inserted     SELECT @StartDate =  StartDate FROM inserted     SELECT @EndDate = EndDate FROM inserted      SELECT @EntId = a.Id, @ToHourId = c.HourId       FROM (Daily a      JOIN Record b ON a.Id = b.DailyId)      JOIN Hour c ON b.EId = c.EId     WHERE b.EId = @EmpId AND a.Date BETWEEN @StartDate AND @EndDate      -- Insert statements for trigger here      UPDATE Record     SET Record.HourId = @ToHourId     FROM Record     WHERE Record.EId = @EmpId          AND Record.DailyId = @EntId         AND Record.HourId IS NULL  END </code></pre>