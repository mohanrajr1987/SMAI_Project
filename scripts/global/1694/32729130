<p>I am trying to create a trigger for a fake database. Suppose there is a derived attribute named “total_loan” for BANK-BRANCH that is used to maintain the total amount of loan at each branch. I am trying to  design a trigger to maintain this derived attribute. My trigger thus seems to stop my load.sql script shown below:</p>  <pre><code>CREATE TABLE a2_bankbranch ( name           VARCHAR(200)  NOT NULL, branch_num     VARCHAR(200)  NOT NULL, address        VARCHAR(200)  NOT NULL, routing_code   VARCHAR(200)  NOT NULL, total_loan     NUMBER(38), FOREIGN KEY(routing_code) REFERENCES a2_bank(routingcode), PRIMARY KEY(branch_num, routing_code) ); @trig.sql  INSERT INTO a2_bankbranch VALUES ( 'ASB', '5', '3 gladstone rd', '123456', ''); INSERT INTO a2_bankbranch VALUES ( 'ASB', '4', '28 stevee rd', '123456', '');  CREATE TABLE a2_loan ( loan_num       CHAR(10)  PRIMARY KEY, type           VARCHAR(200)  NOT NULL, amount         NUMBER(38)  NOT NULL, contract_date  DATE          NOT NULL, branch_num     VARCHAR(200) NOT NULL, routing_code   VARCHAR(200) NOT NULL, FOREIGN KEY(routing_code) REFERENCES a2_bank(routing_code), Foreign KEY(branch_num) REFERENCES a2_bankbranch(branch_num) );  INSERT INTO a2_loan VALUES ( '323', 'Mortgage', '2000000', TO_DATE('11-03-1994', 'DD-MM-YYYY'), '5', '123456'); INSERT INTO a2_loan VALUES ( '33', 'Car', '2000', TO_DATE('12-08-1994', 'DD-MM-YYYY'), '5', '123456' ); INSERT INTO a2_loan VALUES ( '3243', 'Pesonal', '875', TO_DATE('14-06-1994', 'DD-MM-YYYY'), '5', '123456' ); INSERT INTO a2_loan VALUES ( '6', 'Mortgage', '400500', TO_DATE('11-06-1994', 'DD-MM-YYYY'), '5', '123456' ); </code></pre>  <p>My trigger is shown below, the initial insert is not functioning and I am not sure what to put in my WHERE and SET lines for updating and deletion The trig.sql is shown below</p>  <pre><code>-- Create a trigger that will update the total loan amount --that each bank brach may have  CREATE OR REPLACE TRIGGER ttl AFTER INSERT OR UPDATE OR DELETE OF total_loan ON a2-bankbranch FOR EACH ROW BEGIN IF INSERTING THEN UPDATE a2_loan SET total_loan = total_loan + :NEW.amount WHERE branch_num = :NEW.bank_num; ELSIF UPDATING THEN UPDATE a2_loan SET total_loan = total_loan + amount WHERE ELSE --deleting UPDATE a2_loan WHERE END; </code></pre>  <p>Any help would be greatly appreciated</p>