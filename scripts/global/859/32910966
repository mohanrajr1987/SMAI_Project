<p>Reading through <a href="http://zeroturnaround.com/rebellabs/java-8-explained-applying-lambdas-to-java-collections/" rel="nofollow">this article</a>, I can filter the collection like this:</p>  <pre><code>Set&lt;Status&gt; statusClone = cloner.deepClone(statusList).stream().filter(s -&gt; !(s instanceof FileMetadata)).collect(Collectors.toSet()); </code></pre>  <p>However, I will also need to set the properties simultaneously filtering them.  After filtering them, I currently iterate through each one and then set properties:</p>  <pre><code>for (Iterator&lt;Status&gt; iterator = statusClone.iterator(); iterator.hasNext();)         {             Status s = iterator.next(); //          if (s instanceof FileMetadata) //          { //              iterator.remove(); //              continue; //          }             s.setStatus(JobStatus.UNINITIATED);             s.setLastAccessedTime(0);             s.setOffSet(null);             s.setStreamNo(null);         }         statusList.addAll(statusClone); </code></pre>  <p>Is this possible in Java8 without using foreach?</p>  <p>EDIT: From the comments, I agree that I can clone inside the filter. Thanks.</p>