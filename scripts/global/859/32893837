<p>I am trying to remove the password captured in the parameters from my action filter and replace it with the word "Removed", in order for the parameters to be stored in the database for logging. The password is stored in a <code>ViewModel</code> (depending on the action). Below is sort of a "pseudo-code" as to what I am trying to achieve.</p>  <p>How would I go about masking/replacing the password to be saved in the database? The main issue I am having is that I do not know how to access the password parameter and change it. I have tried getting it using the <code>actionParams.TryGetValue("model, out value)</code> but the problem is that I do not know the type of value and it changes depending on the action. Also, I am unable to call many methods on <code>actionParams["model"]</code> (such as contains) </p>  <pre><code>    public override void OnActionExecuting(ActionExecutingContext filterContext)     {          var actionParam = filterContext.ActionParameters;          // Remove the password from the parameters         if (actionParam.ContainsKey("model") &amp;&amp; actionParam["model"] != null)         {                        // If actionParam["model"].ToLower().Contains("password")             // actionParam["model"]["password"] = "Removed";              // If actionParam["model"].ToLower().Contains("confirm password")             // actionParam["model"]["confirm password"] = "Removed";         }          string str = Json.Encode(filterContext.ActionParameters).Trim();          string par = string.Empty;          if (str.Length &gt; 2)         {             par = str.Substring(1, str.Length - 2).Replace("\"", string.Empty);         }          ActionLog log = new ActionLog()         {             SessionId = filterContext.HttpContext.Session.SessionID,             UserName = (request.IsAuthenticated) ? filterContext.HttpContext.User.Identity.Name : "Anonymous",             Controller = filterContext.ActionDescriptor.ControllerDescriptor.ControllerName,             Action = filterContext.ActionDescriptor.ActionName,             ActionParameters = par,             IsPost = request.HttpMethod.ToLower() == "post" ? true : false,             IPAddress = request.ServerVariables["HTTP_X_FORWARDED_FOR"] ?? request.UserHostAddress,             UserAgent = request.UserAgent,             ActionDate = filterContext.HttpContext.Timestamp         };           //Store the Audit into the Database         ActionLogContext context = new ActionLogContext();         context.ActionLogs.Add(log);         context.SaveChanges();          // Finishes executing the Action as normal         base.OnActionExecuting(filterContext);      } </code></pre>  <p><strong>Example of possible view models</strong></p>  <pre><code>public class LoginViewModel {      [Required]     [Display(Name = "User ID")]     [RegularExpression("^[a-zA-Z0-9]+$", ErrorMessage="Letters and Numbers Only")]     public string UserName { get; set; }      [Required]     [DataType(DataType.Password)]     [Display(Name = "Password")]     public string Password { get; set; }  } public class ResetPasswordViewModel {     [Required]     [EmailAddress]     [Display(Name = "Email")]     public string Email { get; set; }      [Required]     [StringLength(100, ErrorMessage = "The {0} must be at least {2} characters long.", MinimumLength = 6)]     [DataType(DataType.Password)]     [Display(Name = "Password")]     public string Password { get; set; }      [DataType(DataType.Password)]     [Display(Name = "Confirm password")]     [Compare("Password", ErrorMessage = "The password and confirmation password do not match.")]     public string ConfirmPassword { get; set; }      public string Code { get; set; } } </code></pre>  <p><strong>Example of possible action parameters</strong></p>  <pre><code>        public async Task&lt;ActionResult&gt; Login(LoginViewModel model, string returnUrl) </code></pre>