<p>I want to reuse a simple projection with LINQ to Entities, and retain the ability to execute it as a store expression.</p>  <p>I can do this just fine with "select" when projecting an IQueryable. However, I don't see how to transform a single entity without compiling the expression (which then cannot be translated to a store expression).</p>  <p>Here's a simple example:</p>  <pre><code>// I have a simple projection ... Expression&lt;Func&lt;Person, DisplayName&gt;&gt; getDisplayName = (person =&gt; new DisplayName {     FirstName = person.FirstName,     LastName = person.LastName });  // ... that I would like to be able to reuse in multiple places var b = MyDbContext.Gifts.Select(h =&gt; new {     // but this suffers a runtime "failure to translate store expression":     fromName = getDisplayName.Compile(h.giver),     toName = getDisplayName.Compile(h.receiver) }); </code></pre>