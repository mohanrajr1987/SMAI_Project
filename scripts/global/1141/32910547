<p>OK, so it's been years since I've written any ruby code, and my design may be incorrect. With that in mind, I'm writing a small utility to clone project entities in TargetProcess via REST. Target Process has a data model that allows for several types of parent:child relationships:</p>  <pre><code>project:epic:feature:user_story project:feature:user_story project:user_story </code></pre>  <p>However, all the entities are nearly identical from a data structure perspective, so it seemed to make sense to use STI and use models to define the relationships and inheritance. I've created a new Rails app with only these models to verify the error I'm getting when I attempt to associate an Epic with a Feature:</p>  <pre><code>ActiveModel::MissingAttributeError: can't write unknown attribute `epic_id` </code></pre>  <p>Here are the models:</p>  <pre><code>class TargetProcessEntity &lt; ActiveRecord::Base end  class Project &lt; TargetProcessEntity   has_many :epics   has_many :features   has_many :user_stories end  class Project &lt; TargetProcessEntity   has_many :epics   has_many :features end  class Epic &lt; TargetProcessEntity   belongs_to :project   has_many   :features end  class Feature &lt; TargetProcessEntity   belongs_to :project   belongs_to :epic   has_many   :user_stories end  class UserStory &lt; TargetProcessEntity   belongs_to :feature   belongs_to :project end </code></pre>  <p>Here is the schema:</p>  <pre><code>ActiveRecord::Schema.define(version: 20150929122254) do    create_table "epics", force: :cascade do |t|     t.datetime "created_at",               null: false     t.datetime "updated_at",               null: false     t.integer  "target_process_entity_id"     t.integer  "project_id"   end    add_index "epics", ["project_id"], name: "index_epics_on_project_id"   add_index "epics", ["target_process_entity_id"], name: "index_epics_on_target_process_entity_id"    create_table "features", force: :cascade do |t|     t.integer "project_id"     t.integer "epic_id"     t.integer "target_process_entity_id"   end    add_index "features", ["epic_id"], name: "index_features_on_epic_id"   add_index "features", ["project_id"], name: "index_features_on_project_id"   add_index "features", ["target_process_entity_id"], name: "index_features_on_target_process_entity_id"    create_table "projects", force: :cascade do |t|     t.datetime "created_at",               null: false     t.datetime "updated_at",               null: false     t.integer  "target_process_entity_id"   end    add_index "projects", ["id"], name: "index_projects_on_id"   add_index "projects", ["target_process_entity_id"], name: "index_projects_on_target_process_entity_id"    create_table "target_process_entities", force: :cascade do |t|     t.string   "type",             null: false     t.string   "name"     t.text     "description"     t.integer  "source_remote_id"     t.float    "numeric_priority"     t.integer  "owner"     t.datetime "created_at",       null: false     t.datetime "updated_at",       null: false     t.integer  "cloned_remote_id"     t.string   "resource_type"     t.integer  "project_id"   end    create_table "user_stories", force: :cascade do |t|     t.integer  "project_id"     t.integer  "feature_id"     t.datetime "created_at",               null: false     t.datetime "updated_at",               null: false     t.integer  "target_process_entity_id"   end    add_index "user_stories", ["feature_id"], name: "index_user_stories_on_feature_id"   add_index "user_stories", ["project_id"], name: "index_user_stories_on_project_id"   add_index "user_stories", ["target_process_entity_id"], name: "index_user_stories_on_target_process_entity_id"  end </code></pre>  <p>While Epic and Feature both have a project_id, an instance of Feature does not have an epic_id attribute; attempting to assign an epic to feature blows up:</p>  <pre><code>[20] pry(main)&gt; epic = Epic.new =&gt; #&lt;Epic:0x007fcab6c80590  id: nil,  type: "Epic",  name: nil,  description: nil,  source_remote_id: nil,  numeric_priority: nil,  owner: nil,  created_at: nil,  updated_at: nil,  cloned_remote_id: nil,  resource_type: "Epic",  project_id: nil&gt; [21] pry(main)&gt; feature = Feature.new =&gt; #&lt;Feature:0x007fcab6d3ba48  id: nil,  type: "Feature",  name: nil,  description: nil,  source_remote_id: nil,  numeric_priority: nil,  owner: nil,  created_at: nil,  updated_at: nil,  cloned_remote_id: nil,  resource_type: "Feature",  project_id: nil&gt; [22] pry(main)&gt; epic.save    (0.1ms)  begin transaction   SQL (0.3ms)  INSERT INTO "target_process_entities" ("type", "resource_type", "created_at", "updated_at") VALUES (?, ?, ?, ?)  [["type", "Epic"], ["resource_type", "Epic"], ["created_at", "2015-10-02 15:18:13.351578"], ["updated_at", "2015-10-02 15:18:13.351578"]]    (4.6ms)  commit transaction =&gt; true [23] pry(main)&gt; feature.epic = epic ActiveModel::MissingAttributeError: can't write unknown attribute `epic_id` from /Users/kcallahan/.rbenv/versions/2.0.0-p647/lib/ruby/gems/2.0.0/gems/activerecord-4.2.4/lib/active_record/attribute.rb:138:in `with_value_from_database' [24] pry(main)&gt;  </code></pre>  <p>I realize it is extremely possible I am either doing something wrong or have made a poor design decision; any input is hugely appreciated as I've not been able to find anything on this and have been banging my head against it for days!</p>