<p>I have a <code>has_many :through</code> relationship between my <code>Movie</code> and <code>Director</code> models. I'd like to prevent a director creating a movie if he's already created one with that same name. In my join table I've tried using <code>scope</code> in a uniqueness validator but to no avail. What would be the correct approach for validating model specific attributes within a join table? Should this validation exist in either model?</p>  <p>I'm aware of validating within join tables based on a model's <code>id</code> but this question in particular deals with <strong>model specific attributes</strong> (strings, integers, etc.)</p>  <pre><code>class Movie &lt; ActiveRecord::Base   has_many :movie_directors   has_many :directors, through: :movie_directors end  class MovieDirector &lt; ActiveRecord::Base   belongs_to :movie   belongs_to :director    validates_uniqueness_of :name, scope: [:director_id] end  class Director &lt; ActiveRecord::Base   has_many :movie_directors   has_many :movies, through: :movie_directors end </code></pre>