<p>I have a <code>has_many through</code> association setup between my artist and album models. To add to this an album <code>has_many</code> tracks. The tracks also have a <code>has_many through</code> association between artists (i.e. <em>featured artist</em>) where the <code>Feature</code> model serves as the join table.</p>  <p>I want to prevent the album artist(s) from being a <em>featured artist</em> on a track. So for instance:</p>  <pre><code>album = Album.find_by(name: "Justified") track = Album.track.first artist = Artist.find_by(name: "Justin Timberlake")  track.featured_artists &lt;&lt; artist   # ^^ Should raise error since Justin Timberlake is the album's artist </code></pre>  <p><strong>Model Setup</strong></p>  <pre><code>class Album &lt; ActiveRecord::Base   has_many :album_artists   has_many :artists, through: :album_artists end  class Track &lt; ActiveRecord::Base   belongs_to :album    has_many :features   has_many :featured_artists, through: :features, class_name: "Artist", foreign_key: "artist_id" end  class AlbumArtist &lt; ActiveRecord::Base   belongs_to :album   belongs_to :artist    validates_uniqueness_of :artist_id, scope: :album_id end  class Feature &lt; ActiveRecord::Base   belongs_to :track   belongs_to :featured_artist, class_name: "Artist", foreign_key: "artist_id" end  class Artist &lt; ActiveRecord::Base   has_many :album_artists   has_many :albums, through: :album_artists    has_many :features   has_many :tracks, through: :features end </code></pre>  <p>Is there a way to accomplish this using one of the out-of-the-box validation methods? If not how would I go about in creating a custom validator without writing a ridiculously long lookup chain to the album's owner, assuming the validator is in the <code>Feature</code> model?</p>