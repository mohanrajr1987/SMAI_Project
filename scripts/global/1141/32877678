<p>I have a has_many :through association and I have the problem where this join table, video_game_genres is going to have rows inserted into it directly from postgres (not from rails), using a foreign key that is sometimes a string, and sometimes an id.</p>  <p>To account for this, I made the join table have a genre_id, and genre_name.  However, when I setup the associations, when I try to access the genres through the genre_name foreign key, it seems that the named_genre belongs_to association is ignoring the foreign and primary key options...</p>  <pre><code>    class VideoGame &lt; ActiveRecord::Base       has_many :video_game_named_genres, :class =&gt; VideoGameGenre       has_many :video_game_genres       has_many :genres, :through =&gt; :video_game_genres       has_many :named_genres, :through =&gt; :video_game_named_genres, :source =&gt; :genre     end      class Genre &lt; ActiveRecord::Base     end      class VideoGameGenre &lt; ActiveRecord::Base       belongs_to :video_game       belongs_to :genre       belongs_to :named_genre, :foreign_key =&gt; 'genre_name', :primary_key =&gt; 'name'     end </code></pre>  <p>When I do video_game.named_genres.to_sql, I get:</p>  <pre><code>     =&gt; "SELECT \"genres\".* FROM \"genres\" INNER JOIN \"video_game_genres\" ON \"genres\".\"id\" = \"video_game_genres\".\"genre_id\" </code></pre>  <p>As you can see, it is doing the exact same thing if I do video_game.genres.to_sql...  Using the genres.id to video_game_genres.genre_id column instead of genre.name to video_game_genres.genre_name</p>  <p>What am I missing here?</p>