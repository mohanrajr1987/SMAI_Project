<p>I have 3 Models: User, LikeOrder and Like. User has many LikeOrders. A User can like a LikeOrder <strong>only once</strong>. So I created Models as below:</p>  <pre><code>class User &lt; ActiveRecord::Base   has_many :like_orders   accepts_nested_attributes_for :like_orders    has_many :likes, dependent: :destroy end  class LikeOrder &lt; ActiveRecord::Base   belongs_to :user   has_many :likes, dependent: :destroy end  class Like &lt; ActiveRecord::Base   belongs_to :user   belongs_to :like_order end </code></pre>  <p>And Migration for Like Model is:</p>  <pre><code>class CreateLikes &lt; ActiveRecord::Migration   def change     create_table :likes do |t|       t.references :user, index: true, foreign_key: true       t.references :like_order, index: true, foreign_key: true       t.timestamps null: false     end   end end </code></pre>  <p>So when User likes a LikeOrder I do it this way (using <code>likes</code> method directly) without any problem:</p>  <pre><code>class User &lt; ActiveRecord::Base   ...   def like(order)     likes.create(like_order: order) if likes.where(like_order: order).count == 0   end end  class UserController &lt; ApplicationController   def like     @user = User.find(params[:user_id])     @order = LikeOrder.find(params[:order_id])     @user.like @order   end end </code></pre>  <p>There was no problem. My Problem is I want to get Orders that: their <code>status</code> are <code>pending</code> and the <code>id</code> is greater that <code>from_id</code> param and are not liked by logged in User.</p>  <pre><code>class LikeOrder &lt; ActiveRecord::Base   ...   def self.not_likeds(user, from_id)     joins(:likes).where("like_orders.id &gt; ? and like_orders.status = ?", from_id, 'pending')   end end </code></pre>  <p>I'm getting the greater than <code>from_id</code> and <code>pending</code> ones.</p>  <p>I made a <code>Join(:likes)</code> But don't know how to Get Not Liked ones from likes table? I've been trying for 6 hours with no luck.</p>  <p><strong>UPDATED:</strong></p>  <p>Finally I think this is working:</p>  <pre><code>class LikeOrder &lt; ActiveRecord::Base   ...   def self.not_likeds(user, from_id)     not_liked = []     pending_form_id(from_id).each do |order|       not_liked &lt;&lt; order if order.likes.where('user_id = ?', user.id).count == 0      end     not_liked    end end </code></pre>  <p>But there might be another way without any block, using where method. can anyone help?</p>