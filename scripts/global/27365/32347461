<p>I create a NSMutableArray which has 3 nodes, when hero collide with them, self runs 3 different methods(obj_1->method_1, obj_2->method_2....)My problem is when hero collide with obj_1, self sometimes runs method_2, but sometimes it runs well....it seems like "self" mix up with these 3 methods. I don't know which part of my code has gone wrong.</p>  <pre><code>-(void)randomLetter{   obj_array = [[NSMutableArray alloc]initWithCapacity:3];  obj_1 = [SKSpriteNode spriteNodeWithImageNamed:@“1.png"]; obj_1.name = @“1”;  obj_2 = [SKSpriteNode spriteNodeWithImageNamed:@“2.png"]; obj_2.name = @“2”;  obj_3 = [SKSpriteNode spriteNodeWithImageNamed:@“3.png"]; obj_3.name = @“3”;    [obj_array addObject: obj_1]; [obj_array addObject: obj_2]; [obj_array addObject: obj_3];    NSUInteger random_obj = arc4random()%obj_array.count;  obj_x = [obj_array objectAtIndex:random_obj]; [obj_array removeObjectAtIndex:random_obj];   obj_x.physicsBody = [SKPhysicsBody bodyWithCircleOfRadius: obj_x.size.width/2]; obj_x.physicsBody.dynamic = NO; obj_x.physicsBody.categoryBitMask = objCategory; obj_x.physicsBody.contactTestBitMask = heroCategory;  obj_x.position = CGPointMake(self.size.width*1.1, self.size.height*0.5); SKAction *obj_action= [SKAction moveToX:-self.size.width*1.1 duration:5];   [obj_x runAction:obj_action]; [self addChild: obj_x]; }   -(void)didBeginContact:(SKPhysicsContact *)contact{  SKPhysicsBody *firstBody, *secondBody; if (contact.bodyA.categoryBitMask&lt;contact.bodyB.categoryBitMask) {     firstBody = contact.bodyA;     secondBody = contact.bodyB; } else {     firstBody=contact.bodyB;     secondBody=contact.bodyA; }       if ((firstBody.categoryBitMask &amp; heroCategory ) !=0 &amp;&amp; (secondBody.categoryBitMask &amp; objCategory)!=0) {          [self enumerateChildNodesWithName:@“1” usingBlock:^(SKNode *node, BOOL *stop) {              _timeIsUp = NO;              [obj_x removeFromParent];             [self method_1];           }];           [self enumerateChildNodesWithName:@“2” usingBlock:^(SKNode *node, BOOL *stop) {              _timeIsUp = NO;              [obj_x removeFromParent];              [self method_2];          }];           [self enumerateChildNodesWithName:@“3” usingBlock:^(SKNode *node, BOOL *stop) {              _timeIsUp = YES;              [obj_x removeFromParent];              [self method_3];                         }];        } } </code></pre>