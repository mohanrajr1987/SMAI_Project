<p>I need to create a 'global' array accessible from anywhere. I've dug around and think I have create the correct class and initialised it, but when testing the array by adding a string to it it returns NULL.</p>  <p>Global.h</p>  <pre><code>#import &lt;Foundation/Foundation.h&gt;  extern NSMutableArray *testArray; //global array  @interface Global : NSObject  + (Global *) sharedInstance;  + (NSString *) myData; //static method  @end </code></pre>  <p>Global.m</p>  <pre><code>#import "Global.h"  NSMutableArray *testArray;  @implementation Global  + (id) sharedInstance {     static Global  *this   = nil;      if (!this)         this = [[Global alloc] init];      return this; }  - (id) init{      self = [super init];      if (self) {         //initialise here         testArray = [[NSMutableArray alloc] init];     }      return self;  }  - (void)dealloc {     // Should never be called, but just here for clarity really. }  + (NSString *)myData{      return @"myDataBase.db";  } </code></pre>  <p>ViewController.m</p>  <pre><code>#import "Global.h" </code></pre>  <p>This works:</p>  <pre><code>NSLog(@"Testing Globals -- myData = %@", [Global myData]); </code></pre>  <p>This doesn't:</p>  <pre><code>[testArray addObject:[NSString stringWithFormat:@"Added something to the test array"]];  NSLog(@"Testing Globals -- Array = %@", testArray); </code></pre>  <p>Any pointers to where I am going wrong?</p>