<p>How do I deal with <code>\u2019</code> and <code>\u201c</code> type characters when reading UTF-8 encoded JSON into python? I've got a lot of files of this type</p>  <pre><code>{   "id": 1,   "title": "Place names consultation draws to a close",   "releaseDateTime": "2006-07-12T00:00:00+09:30",   "mainContent": "&lt;P&gt;&lt;FONT face=Arial&gt;The Government’s six-week public consultation process into the naming of localities across the ... on ...&lt;/FONT&gt;&lt;/P&gt;\n&lt;P&gt;&lt;FONT face=Arial&gt;Planning ... said nearly 50 submissions have already been received, and encouraged members of the public to submit suggestions or comments before the deadline.&lt;/FONT&gt;&lt;/P&gt;\n&lt;P&gt;&lt;FONT face=Arial&gt;“There are numerous localities throughout the Northern Territory that have one or more ‘unofficial’ names, while other localities have no name at all,” ...  </code></pre>  <p>that I'm reading into a dictionary</p>  <pre><code>for file in files:      with open(file) as ff:         j = json.load(ff)         jrels[j['id']] = j </code></pre>  <p>and then attempting to strip the HTML from</p>  <pre><code>BeautifulSoup(jrels[id]['mainContent'], 'lxml').get_text() </code></pre>  <p>but unfortunately I end up with a whole bunch of unicode characters I'm not sure how to deal with.</p>  <pre><code>u'The Government\u2019s six-week public consultation process into the naming of localities across the ... on ...\nPlanning ... said nearly 50 submissions have already been received, and encouraged members of the public to submit suggestions or comments before the deadline.\n\u201cThere are numerous localities throughout ... that have one or more \u2018unofficial\u2019 names, while other localities have no name at all,\u201d ... </code></pre>  <p>Everything displays properly using <code>print()</code> but I want to be able to build a time-series in <code>Pandas</code> using <code>releaseDateTime</code> and then split the <code>mainContent</code> text into n-grams etc. </p>  <p>Is there a way of reading properly and decoding this without going through the labour of, say, looping through thousands of files, making a dictionary of errant unicode characters using regex, and substituting them that way? </p>  <p>Thanks in advance. </p>