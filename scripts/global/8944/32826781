<p>I'm writing a script to import WordPress content to my Rails application. I need to remove all images from the body of the post. When viewing the post I get an <code>invalid byte sequence in UTF-8</code> error. </p>  <pre><code>require 'action_view' require 'nokogiri' require 'sanitize'  namespace :wordpress do   desc 'Import Worpress Posts'   task import_posts: :environment do |_, _args|     IMAGE_REGEX = /"([a-z\-_0-9\/\:\.]*\.(jpg|jpeg|png|gif))"/i     user_id = User.first[:id]     Blogit::Post.destroy_all     File.open('lib/post.xml') do |file|       items = Nokogiri::XML(file).xpath('//channel//item')       items.each do |item|         body = Sanitize.fragment(item.at_xpath('content:encoded').text).force_encoding('UTF-8')                .encode('UTF-16', invalid: :replace, replace: '')                .encode('UTF-8')          begin           post = Blogit::Post.create(             title: item.at_xpath('wp:post_name').text.strip,             body: body,             blogger_id: user_id,             bootsy_image_gallery: Bootsy::ImageGallery.create           )           images = item.at_xpath('content:encoded').text.scan(IMAGE_REGEX).map(&amp;:first)           post.save(validate: false)           # post.update_column(:created_at, item.at_xpath('wp:post_date_gmt').text + ' +0000')           # if images.any?           #   images.each do |image|           #     post.remote_feature_image_url = image.first           #     post.bootsy_image_gallery.images &lt;&lt; Bootsy::Image.create(remote_image_file_url: image.first)           #   end           #   post.save           # end         rescue StandardError =&gt; e           puts "#{e}"           next         end       end     end   end end </code></pre>  <p>The error is thrown here:</p>  <pre><code>= content_tag(:article, id: "blog_post_#{post.id}", class: "blog_post") do </code></pre>  <p>This is _post.html.slim:</p>  <pre><code>= content_tag(:article, id: "blog_post_#{post.id}", class: "blog_post") do   / Render the header for this blog post   = render "blogit/posts/post_head", post: post    / Render Post Image Slider   / = render "blogit/posts/slider", images: post.bootsy_image_gallery.images if post.bootsy_image_gallery.images.any?    / Render the body of this blog post (as Markdown)   = render "blogit/posts/post_body", post: post    / Render admin links to edit/delete this post   = render "blogit/posts/post_links", post: post    / Render info about the person who wrote this post   = render "blogit/posts/blogger_information", post: post    = render 'elements/tags', post: post    / Render the no. of comments   - if defined?(show_comments_count) and show_comments_count     = render "blogit/posts/comments_count", post: post </code></pre>