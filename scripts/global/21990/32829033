<p>I have xillinux OS (based on ubunutu 12.04.LTS) installed on my hardware (ZYNQ FPGA Board). I have done some hardware reconfiguration and I need to rebuild my kernel after editing the config-3.12.0-xillinux-1.3 file. My question is how do I rebuild the existing kernel on the hardware after making changes to the config file</p>  <p><a href="http://www.wiki.xilinx.com/Uartlite+Driver" rel="nofollow">http://www.wiki.xilinx.com/Uartlite+Driver</a></p>  <p>This is the page above that I am referring to where they say that:</p>  <p>To enable the uartlite driver in the linux kernel you either have to integrate it or build it as kernel module (.ko). You can enable it with:</p>  <pre><code>make menuconfig ---&gt; Device Drivers ---&gt; Character devices ---&gt; Serial drivers ---&gt; Xilinx uartlite serial port support </code></pre>  <p>make menuconfig - I have to enter this command on the OS running on my hardware in the /root/boot/.config folder  to enable it ?</p>  <p>What does , ---> Device Drivers ---> Character devices ---> Serial drivers ---> Xilinx uartlite serial port support THIS MEAN ? I have to change directory ?</p>  <p>The other option as per the link posted above is to add certain lines as below to the config file, for which I would use the nano editor and then save it with ctrl+X and then Y.</p>  <pre><code># integrate into the kernel CONFIG_SERIAL_UARTLITE=y # build as loadable module CONFIG_SERIAL_UARTLITE=m </code></pre>  <p>But they say that, "After that you of course have to rebuild the kernel and deploy it to your Zynq device."</p>  <p>Where zynq is the hardware I am running my OS on. What commands do I have to use to rebuild the existing kernel on my hardware after making changes to the .config file ?</p>  <p>So, after rebuilding the kernel with the changes above, I just reboot to observer the changes ?</p>  <p>EDIT:</p>  <p>I was referring to this link, <a href="http://www.thegeekstuff.com/2013/06/...-linux-kernel/" rel="nofollow">http://www.thegeekstuff.com/2013/06/...-linux-kernel/</a></p>  <p>So, in order to compile the exisiting kernel on the hadrware and build it, I edit the .config file using nano in /boot folder and save it. Then, I type "make" in the same folder as config. Then, I type "make modules" in the same folder Then I type make modules_install Then I type make install Then I reboot the system to see the new kernel installed. Is this the right way of doing it ?</p>  <p>Is this how you recompiled and rebuilt it ?</p>  <p>Currently in my boot directory, there are 4 files. One config file and 3 .dts files. After rebuilding the kernel, this might change ?</p>