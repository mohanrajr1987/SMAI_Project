<p>I am trying to understand and use existing utilities or programmable snippets which allow to measure CPU utilization/performance in terms of Power Consumption, CPU cycles of a function in kernel space.</p>  <p>I have two function snippets which do the same work:</p>  <p><strong>convert ip address to string.</strong></p>  <pre><code>char* inet_ntoa(struct in_addr in, char* buf, size_t* rlen) {          int i;         char* bp;          bp = buf;         for (i = 0;i &lt; 4; i++ ) {                 unsigned int o, n;                 o = ((unsigned char*)&amp;in)[i];                 n = o;                 if ( n &gt;= 200 ) {                         *bp++ = '2';                         n -= 200;                 }else if ( n &gt;= 100 ) {                         *bp++ = '1';                         n -= 100;                 }                 if ( o &gt;= 10 ) {                         int i;                         for ( i = 0; n &gt;= 10; i++ ) {                                 n -= 10;                         }                         *bp++ = i + '0';                 }                 *bp++ = n + '0';                 *bp++ = '.';         }         *--bp = 0;         if ( rlen ) {                 *rlen = bp - buf;         }          return buf; } </code></pre>  <p>AND</p>  <pre><code>char *inet_ntoa (struct in_addr in)     {       unsigned char *bytes = (unsigned char *) &amp;in;       __snprintf (buffer, sizeof (buffer), "%d.%d.%d.%d",               bytes[0], bytes[1], bytes[2], bytes[3]);        return buffer;     } </code></pre>  <p>The later function is from glibc. The former one is my own.</p>  <p>The two function would be called in kernel space. How can I measure there performance to compare.</p>  <p>My machine is Ubuntu 14.04 x86 i686. Linux kernel 3.13.</p>  <p>Kindly Suggest.</p>