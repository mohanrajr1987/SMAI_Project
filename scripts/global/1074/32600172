<p>I've deployed ofbiz Application on Amazon large instance. Here are the basic details.</p>  <p>Software Configuration: </p>  <ol> <li>Java 1.6.0_26</li> <li>Database: My SQL 5.6.17</li> <li>Ofbiz 10.04</li> <li>Max Pool Connection is 512</li> </ol>  <p>Hardware Configuration:</p>  <ol> <li>Memory: 8GB</li> <li>Hard Disk: 300GB</li> </ol>  <p>Memory Allocation Details:</p>  <ol> <li>App1 – 5GB </li> <li>App2 – 4GB </li> <li>Apache and OS(RHL) – 4GB</li> </ol>  <p><strong>Architecture Details</strong>:  We have two application ( App1 and App2) one on Server "A" and another on server "B". We have installed "App1" on server "A" and on that server we have installed Apache 2.2 also. By the help of AJP connector we send request of "App2" to server "B". </p>  <p><strong>AJP Configuration details:</strong> </p>  <pre><code> a) App2:                    &lt;Proxy balancer://live-http&gt;                      BalancerMember ajp://xx.xxx.xxx.xxx:xxxx route=APP01 ttl=600                    &lt;/Proxy&gt;                    &lt;Proxy balancer://live-https&gt;                     BalancerMember ajp://xx.xxx.xxx.xxx:xxxx route=APP01 ttl=600                     &lt;/Proxy&gt; b)  App1:                     &lt;Proxy balancer://live1-http&gt;                      BalancerMember ajp://xx.xxx.xxx.xxx:xxxx route=APP02 ttl=600                    &lt;/Proxy&gt;                    &lt;Proxy balancer://live1-https&gt;                      BalancerMember ajp://xx.xxx.xxx.xxx:xxxx route=APP02 ttl=600                    &lt;/Proxy&gt; </code></pre>  <p><strong>Ofbiz AJP connector details:</strong></p>  <pre><code>            &lt;property name="ajp-connector" value="connector"&gt;             &lt;property name="allowTrace" value="false"/&gt;             &lt;property name="emptySessionPath" value="false"/&gt;             &lt;property name="enableLookups" value="false"/&gt;             &lt;property name="maxPostSize" value="2097152"/&gt;             &lt;property name="protocol" value="AJP/1.3"/&gt;             &lt;property name="proxyName" value=""/&gt;             &lt;property name="proxyPort" value=""/&gt;             &lt;property name="redirectPort" value=""/&gt;             &lt;property name="scheme" value="http"/&gt;             &lt;property name="secure" value="false"/&gt;             &lt;property name="URIEncoding" value="UTF-8"/&gt;             &lt;property name="useBodyEncodingForURI" value="false"/&gt;             &lt;property name="xpoweredBy" value="true"/&gt;             &lt;!-- AJP/13 connector attributes --&gt;             &lt;property name="address" value="0.0.0.0"/&gt;             &lt;property name="backlog" value="10"/&gt;             &lt;property name="maxSpareThreads" value="50"/&gt;             &lt;property name="maxThreads" value="400"/&gt;             &lt;property name="minSpareThreads" value="4"/&gt;             &lt;property name="port" value="8009"/&gt;             &lt;property name="tcpNoDelay" value="true"/&gt;             &lt;property name="soTimeout" value="60000"/&gt;             &lt;property name="tomcatAuthentication" value="true"/&gt; </code></pre>  <p><strong>My.cnf details</strong> </p>  <pre><code># For advice on how to change settings please see # http://dev.mysql.com/doc/refman/5.6/en/server-configuration-defaults.html  [mysqld] # # Remove leading # and set to the amount of RAM for the most important data # cache in MySQL. Start at 70% of total RAM for dedicated server, else 10%. # innodb_buffer_pool_size = 128M # # Remove leading # to turn on a very important data integrity option: logging # changes to the binary log between backups. # log_bin # # Remove leading # to set options mainly useful for reporting servers. # The server defaults are faster for transactions and fast SELECTs. # Adjust sizes as needed, experiment to find the optimal values. # join_buffer_size = 128M # sort_buffer_size = 2M # read_rnd_buffer_size = 2M datadir=/var/lib/mysql socket=/var/lib/mysql/mysql.sock  # Disabling symbolic-links is recommended to prevent assorted security risks symbolic-links=0  # Recommended in standard MySQL setup sql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES   #########for variables ########### lower_case_table_names=1 max_connections=512  [mysqld_safe] log-error=/var/log/mysqld.log pid-file=/var/run/mysqld/mysqld.pid </code></pre>  <p>NOTE: We are using <strong>SOLAR</strong> as a cache system and cache remain there until the application is rebuild again. </p>  <p><strong>Observation:</strong> App1 is working fine and doesn't crash at all. While App2 works fine for 1 hour or 2 hour and when ever user count goes upto 200+  App2 performance goes down, got crashed and after few minutes sometime it come back and sometime it won't. Then I've to restart the APP2 again. </p>  <p><strong>Problem:</strong> : How to fix this? So my APP2 can sustain for the good # of users without crashing.  I guess I've messed up some setting while doing fine tuning. </p>