<p>In my app, I have created web server which is hosting a web app. All the files of web app are placed in assets folder.</p>  <p>Now, i start the web server by running my application and then from crome brower, I try to run my web app by calling index.html file. The html, css part of the page is getting loaded properly but the images are not getting loaded in the page:</p>  <p>Here is my HttpRequestHandlerCode:</p>  <pre><code>public class HomePageHandler implements HttpRequestHandler {     private Context context = null;      private static final Map&lt;String, String&gt; mimeTypes = new HashMap&lt;String, String&gt;() {          {             put("css", "text/css");             put("htm", "text/html");             put("html", "text/html");             put("xhtml", "text/xhtml");             put("xml", "text/xml");             put("java", "text/x-java-source, text/java");             put("md", "text/plain");             put("txt", "text/plain");             put("asc", "text/plain");             put("gif", "image/gif");             put("jpg", "image/jpeg");             put("jpeg", "image/jpeg");             put("png", "image/png");             put("svg", "image/svg+xml");             put("mp3", "audio/mpeg");             put("m3u", "audio/mpeg-url");             put("mp4", "video/mp4");             put("ogv", "video/ogg");             put("flv", "video/x-flv");             put("mov", "video/quicktime");             put("swf", "application/x-shockwave-flash");             put("js", "application/javascript");             put("pdf", "application/pdf");             put("doc", "application/msword");             put("ogg", "application/x-ogg");             put("zip", "application/octet-stream");             put("exe", "application/octet-stream");             put("class", "application/octet-stream");             put("m3u8", "application/vnd.apple.mpegurl");             put("ts", " video/mp2t");         }     };      public HomePageHandler(Context context){         this.context = context;     }      @Override     public void handle(HttpRequest request, HttpResponse response, HttpContext httpContext) throws HttpException, IOException {         //String contentType = "text/html";         //Log.i("Sushill", "..request : " + request.getRequestLine().getUri().toString());         final String requestUri = request.getRequestLine().getUri().toString();         final String contentType = contentType(requestUri);                         String resp = Utility.openHTMLStringFromAssets(context, "html" + requestUri);                         writer.write(resp);                         writer.flush(); //                    }                 }             });             ((EntityTemplate) entity).setContentType(contentType);             response.setEntity(entity);         }     }      /**      * Get content type      *      * @param fileName      *            The file      * @return Content type      */     private String contentType(String fileName) {          String ext = "";         int idx = fileName.lastIndexOf(".");         if (idx &gt;= 0) {             ext = fileName.substring(idx + 1);         }         if (mimeTypes.containsKey(ext)) {             //Log.i("Sushill", "...ext : " + ext);             return mimeTypes.get(ext);         }         else             return "application/octet-stream";     } </code></pre>  <p>To handle image, I tried this but it did not work :</p>  <pre><code>if(contentType.contains("image")) {                     InputStream is = Utility.openImageFromAssets(context, "html" + requestUri);                     char[] buffer = new char[1024];                     try {                         Reader reader = new BufferedReader(new InputStreamReader(is, "UTF-8"));                         int n;                         while ((n = reader.read(buffer)) != -1) {                             writer.write(buffer, 0, n);                         }                     } catch (UnsupportedEncodingException e) {                         e.printStackTrace();                     } catch (IOException e) {                         e.printStackTrace();                     } finally {                         try {                             is.close();                         } catch (IOException e) {                             e.printStackTrace();                         }                     }                 } </code></pre>  <p>Can someone please help me in figuring out how to load the images also in my browser.</p>  <p>Thanks for any help</p>