<p>I am writing an XmlRcp server in Java and am trying to keep track of valid tokens with an ArrayList, but for some reason in between calls from client to server to ArrayList is recreated/emptied and nothing is in it.</p>  <p>The client first connects to the server to request a token by passing a password to the server. If the password is correct, the server returns a token to the client a token and adds that token to an ArrayList of verified tokens. The Client then sends another request to add a message to a different ArrayList of strings on the server, but the client's token can't be validated because the ArrayList that holds the tokens is empty now. Does anyone know why this is happening?</p>  <p>The two methods being used to respond to the client calls are below.</p>  <pre><code>static MessageHandler mess = new MessageHandler(); //has a MessageHander, which is essential and ArrayList of strings that can add a message or get all static TokenHandler th = new TokenHandler(); //private class that keeps a list of valid tokens to check against - located within this class  public String getAuthToken(String uid, String password) {     if(!password.equals("test123")){ //tests if the password is correct, if not it doesn't send a token.         System.out.println("User entered invalid password.");         return "You must enter a valid password to receive a token.";     }      System.out.println("uid: " + uid);     String token = uid + " 10011";     th.addToken(token);     System.out.println("User given token: " + token);     return token; }   public String storeMessage(String token, String Message) {     //validate token     if(th.validateToken(token)){ //if valid token, then store the message         System.out.println("msg=" + Message);         mess.addMessage(Message);         return "Message succesfully stored.";     } else { //if the token passed was not valid, then don't store the message.         return "Invalid token - message could not be stored.";     } } </code></pre>