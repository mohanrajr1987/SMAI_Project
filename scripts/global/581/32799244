<p>Sorry is this is asked somewhere else, but i didn't found it.  The problem is, im triying to upgrade my legacy PHP app to a more secure password hash. Currently i have MD5, but i want to use bycript with the new password_hash() function. I thought of a way, but i dont know if is really secure. This is a simplified code:</p>  <pre><code>if (password_verify($input_password, $user-&gt;password hash) === false) {     if (md5($input_password) === $user-&gt;password_hash) {         user-&gt;password_hash = password_hash(             $input_password,             $currentHashAlgoritm,             $currentHashOptions         );         $user-&gt;save;     } else {         throw new Exception('Invalid Password');     } } //Save login status to session </code></pre>  <p>Basically, what im trying to do is rehash the password if the initial check is bad, but the MD5 check is good. BUT, what happens if someone puts a bad password and:                       </p>  <pre><code>md5($bad_password) == $user-&gt;password_hash (hashed by bycript) </code></pre>  <p>Is a very slim possibility for an user to enter with a bad password.</p>  <p>Is this the only way or is other better way to to that? Thanks to all. And sorry for the bad english.</p>