<p>While coding earlier I noticed something strange about SHA256, in that it seems to generate more integers than letters for the hash. At first I thought I was just imagining it, so I put together a quick test to make sure. Astonishingly, my test seems to prove that SHA256 favors integer values in the hash that it generates. I want to know why this is. Shouldn't the difference between a hash index being a letter and a number be the exact same? Here is my testing example:</p>  <pre><code>namespace TestingApp {     static class Program     {         private static string letters = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";         private static char[] characters = letters.ToCharArray();         private static Random _rng = new Random();          static void Main(string[] args)         {             int totalIntegers = 0;             int totalLetters = 0;             for (int testingIntervals = 0; testingIntervals &lt; 3000; testingIntervals++)             {                 string randomString = NextString(10);                 string checksum = DreamforceChecksum.GenerateSHA256(randomString);                 int integerCount = checksum.Count(Char.IsDigit);                 int letterCount = checksum.Count(Char.IsLetter);                 Console.WriteLine("String: " + randomString);                 Console.WriteLine("Checksum: " + checksum);                 Console.WriteLine("Integers: " + integerCount);                 Console.WriteLine("Letters: " + letterCount);                 totalIntegers += integerCount;                 totalLetters += letterCount;             }             Console.WriteLine("Total Integers: " + totalIntegers);             Console.WriteLine("Total Letters: " + totalLetters);             Console.Read();         }          private static string NextString(int length)         {             StringBuilder builder = new StringBuilder();             for (int i = 0; i &lt; length; i++)             {                 builder.Append(characters[_rng.Next(characters.Length)]);             }             return builder.ToString();         }     } } </code></pre>  <p>and my checksum/hashing class:</p>  <pre><code>using System; using System.Collections.Generic; using System.Linq; using System.Security.Cryptography; using System.Text; using System.Threading.Tasks;  namespace DreamforceFramework.Framework.Cryptography {     public static class DreamforceChecksum     {         private static readonly SHA256Managed _shaManagedInstance = new SHA256Managed();         private static readonly StringBuilder _checksumBuilder = new StringBuilder();         public static string GenerateSHA256(string text)         {             byte[] bytes = Encoding.UTF8.GetBytes(text);             byte[] hash = _shaManagedInstance.ComputeHash(bytes);             _checksumBuilder.Clear();             for (int index = 0; index &lt; hash.Length; index++)             {                 _checksumBuilder.Append(hash[index].ToString("x2"));             }             return _checksumBuilder.ToString();         }          public static byte[] GenerateSHA256Bytes(string text)         {             byte[] bytes = Encoding.UTF8.GetBytes(text);             byte[] hash = _shaManagedInstance.ComputeHash(bytes);             _checksumBuilder.Clear();             for (int index = 0; index &lt; hash.Length; index++)             {                 _checksumBuilder.Append(hash[index].ToString("x2"));             }             return Encoding.UTF8.GetBytes(_checksumBuilder.ToString());         }          public static bool ValidateDataIntegrity(string data, string targetHashcode)         {             return GenerateSHA256(data).Equals(targetHashcode);         }     } } </code></pre>  <p>I have ran my test multiple times, and every time it seems that more integers are generated within the hash than letters. Here are 3 test runs:</p>  <p><a href="http://i.stack.imgur.com/Dceuu.png" rel="nofollow"><img src="http://i.stack.imgur.com/Dceuu.png" alt="enter image description here"></a></p>  <p><a href="http://i.stack.imgur.com/EQnMq.png" rel="nofollow"><img src="http://i.stack.imgur.com/EQnMq.png" alt="enter image description here"></a></p>  <p><a href="http://i.stack.imgur.com/NquOR.png" rel="nofollow"><img src="http://i.stack.imgur.com/NquOR.png" alt="enter image description here"></a></p>  <p><strong><em>Does anyone know why SHA256 seems to favor numbers instead of an equal distribution of both letters and numbers?</em></strong></p>