<pre><code>var int a0 := 0x67452301   //A var int b0 := 0xefcdab89   //B var int c0 := 0x98badcfe   //C var int d0 := 0x10325476   //D      for each 512-bit chunk of message         break chunk into sixteen 32-bit words M[j], 0 ≤ j ≤ 15     //Initialize hash value for this chunk:         var int A := a0         var int B := b0         var int C := c0         var int D := d0     //Main loop:         for i from 0 to 63             if 0 ≤ i ≤ 15 then                 F := (B and C) or ((not B) and D)                 g := i             else if 16 ≤ i ≤ 31                 F := (D and B) or ((not D) and C)                 g := (5×i + 1) mod 16             else if 32 ≤ i ≤ 47                 F := B xor C xor D                 g := (3×i + 5) mod 16             else if 48 ≤ i ≤ 63                 F := C xor (B or (not D))                 g := (7×i) mod 16             dTemp := D             D := C             C := B             B := B + leftrotate((A + F + K[i] + M[g]), s[i])             A := dTemp         end for     //Add this chunk's hash to result so far:         a0 := a0 + A         b0 := b0 + B         c0 := c0 + C         d0 := d0 + D     end for </code></pre>  <p>This is taken from wikipedia, specifically from <a href="https://en.wikipedia.org/wiki/MD5" rel="nofollow">here</a>, to see the full code.</p>  <p>I fail to understand what for example <code>(B and C)</code> produces, as <code>B</code> and <code>C</code> are hexes. (Big endian)</p>