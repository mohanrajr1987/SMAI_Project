<p>Expanding on <a href="http://stackoverflow.com/questions/9104504/expected-number-of-hash-collisions">calculating the number of hash collisions</a>, what is an efficient algorithm to solve for the number of buckets required to ensure the percentage of a collisions is Z for N values (number of collisions/number of values in the hash table)?</p>  <p>For example:</p>  <p>For 10 values and a target of 0.1% collisions, the hash table would need at least 4498 buckets (assuming a hash function with even distribution).</p>  <p>n - m * (1 - ((m - 1)/m)^n) = z * n</p>  <p>where n is the number of values, m is the number of buckets, and z is the percentage of values with hash collisions.</p>