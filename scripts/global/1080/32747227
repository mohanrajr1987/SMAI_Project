<p>I am making a 2D game with shadows and in order to cast shadows from lights i draw visibility polygon. Before i draw it i fond intersection points of rays and then sort these points. I use this algorithm <a href="http://stackoverflow.com/questions/6989100/sort-points-in-clockwise-order">Sort points in clockwise order?</a> </p>  <p>The problem is that i get this exception at some point of the game : </p>  <pre><code>Exception in thread "main" java.lang.IllegalArgumentException: Comparison method violates its general contract! </code></pre>  <p>I have no idea why this is happening. I checked a lot of times for mistakes, but my code is identical to the code in that post.</p>  <p>This is my comparator.</p>  <pre><code>public class SortPoints implements Comparator&lt;Point2D.Double&gt;{      private Point2D.Double center;     public SortPoints(Point2D.Double _center){         center = _center;     }     @Override     public int compare(Point2D.Double o1, Point2D.Double o2) {          if(o1.equals(o2)){//edited if statement            return 0;         }         if (o1.x - center.x &gt;= 0 &amp;&amp; o2.x - center.x &lt; 0)             return 1;         if (o1.x - center.x &lt; 0 &amp;&amp; o2.x - center.x &gt;= 0)             return -1;         if (o1.x - center.x == 0 &amp;&amp; o2.x - center.x == 0) {             if (o1.y - center.y &gt;= 0 || o2.y - center.y &gt;= 0)                 if (o1.y &gt; o2.y)                     return 1;                 else return -1;             if (o2.y &gt; o1.y)                 return 1;             else return -1;         }          // compute the cross product of vectors (center -&gt; a) x (center -&gt; b)         double det = (o1.x - center.x) * (o2.y - center.y) - (o2.x - center.x) * (o1.y - center.y);         if (det &lt; 0)             return 1;         if (det &gt; 0)             return -1;          // points a and b are on the same line from the center         // check which point is closer to the center         double d1 = (o1.x - center.x) * (o1.x - center.x) + (o1.y - center.y) * (o1.y - center.y);         double d2 = (o2.x - center.x) * (o2.x - center.x) + (o2.y - center.y) * (o2.y - center.y);         if(d1 &gt; d2)             return 1;         else return -1;     } } </code></pre>  <p><strong>Edit:</strong> I didn't handle the part where the two points are equal. So i added this at the beggining of the compare method:</p>  <pre><code>if(o1.equals(o2)){    return 0; } </code></pre>