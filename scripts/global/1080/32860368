<p>I have created a method that calculates the time of impact between a moving circle and a line segment:</p>  <pre><code>  function dist(px, py, x1, y1, x2, y2) {         var dx = x2 - x1;         var dy = y2 - y1;          var t = ((px - x1) * dx + (py - y1) * dy) / (dx * dx + dy * dy);          if (t &gt; 1)             t = 1;         else if (t &lt; 0)             t = 0;          return Math.sqrt(Math.pow(x1 + dx * t - px, 2) + Math.pow(y1 + dy * t - py, 2));   }    this.sweep = function(x1, y1, x2, y2, vx, vy) {         var d0 = dist(this.x, this.y, x1, y1, x2, y2);         var d1 = dist(this.x + vx, this.y + vy, x1, y1, x2, y2);          if (Math.abs(d0) &lt;= this.radius) return 0;          if (d0 &gt; this.radius &amp;&amp; d1 &lt; this.radius) return ((d0 - this.radius) / (d0 - d1));          return 1;   } </code></pre>  <p><a href="https://output.jsbin.com/daxafaxuse" rel="nofollow">https://output.jsbin.com/daxafaxuse</a></p>  <p>Instead of returning just a number, I want the sweep function to return the normalX and normalY, like return {time: 0 - 1, nx: -1 - +1, ny: -1 - +1};</p>  <p>What is the most efficient way to aswell calculate the hitnormal and not just the time of impact, without doing some unnecessary calculations in the sweep function?</p>