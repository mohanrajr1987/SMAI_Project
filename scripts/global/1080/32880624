<p>Here's an WPF issue I was never able to find a workaround for. I'm creating software with a Windows 10 look, which means it uses buttons with icons that contains elements of 1px wide. The icons are WPF geometries written in the WPF Geometry mini language, as described <a href="https://rcosic.wordpress.com/2009/08/11/wpf-geometry-mini-language/" rel="nofollow">here</a>.</p>  <p>These geometries don't scale well when Windows is configured with a desktop scaling of more than 100%. This image shows the issue (left = scaling 100%, right = scaling 125%).</p>  <p><a href="http://i.stack.imgur.com/iMyA5.png" rel="nofollow"><img src="http://i.stack.imgur.com/iMyA5.png" alt="enter image description here"></a></p>  <p>The path geometry in the above image is: </p>  <pre><code>&lt;Geometry x:Key="Playlist"&gt;F1 M 0,0L 0,1 17,1 17,0 M 0,6 0,7 21,7 21,6 M 0,12 0,13 13,13 13,12 0,12 Z&lt;/Geometry&gt; </code></pre>  <p>This is then used in a button by setting the button's content to a path with the geometry as data:</p>  <pre><code>&lt;Button&gt;&lt;Path Fill="White" Data="{StaticResource Playlist}"/&gt;&lt;/Button&gt; </code></pre>  <p>I tried all combinations of UseLayoutRounding and SnapsToDevicePixels true and false on the path. SnapsToDevicePixels gives the best result but it still doesn't look right. The image on the right is the best I can get.</p>  <p>So the question: is there a method to add graphics to a WPF application, in such way that they scale perfectly when using Windows desktop scaling?</p>