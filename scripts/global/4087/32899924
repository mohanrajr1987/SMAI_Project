<p>I wanted to lead this question by letting everyone know that this is my first time on stack overflow so if I do not conform to question-asking standards please let me know.</p>  <p>I'm making a program that plays Rock, Paper, Scissors with you, and right as I was approaching the back end of the project this error came up:</p>  <pre><code>Exception in thread "main" java.lang.NullPointerException   at RockPaperScissors.getPlayerThrow(RockPaperScissors.java:93)   at RockPaperScissors.main(RockPaperScissors.java:26) </code></pre>  <p>I'm not sure where I would be using null, but thats what you're here for.</p>  <p>Here is the entire project compiled as it currently is:</p>  <pre><code>public class RockPaperScissors { //sets the constants static final int ROCK = 1; static final int PAPER = 2; static final int SCISSORS = 3;  //creates some variables static int playerThrow, computerThrow, result, timesPlayed, playerWins, computerWins; static String playAgain; static Scanner fru;  /*  * The Results  * 0 = tie  * 1 = Player win  * 2 = Computer win */  public static void main(String[] args) {     //this do while loop is the whole game     do {         //decides the throws of the players         playerThrow = getPlayerThrow();         computerThrow = (int)(Math.random() * 3 + 1);          switch(playerThrow) {         //compares and displays the computer and player         //choices if the player chooses rock         case ROCK:             switch(computerThrow) {             case ROCK:                 result = 0;                 System.out.println("You threw rock and the computer threw rock!");                 break;             case PAPER:                 result = 2;                 System.out.println("You threw rock and the computer threw paper!");                 break;             case SCISSORS:                 result = 1;                 System.out.println("You threw rock and the computer threw scissors!");                 break;             }   break;         //compares and displays the computer and player         //choices if the player throws paper         case PAPER:             switch(computerThrow) {             case ROCK:                 result = 1;                 System.out.println("You threw paper and the computer threw rock!");                 break;             case PAPER:                 result = 2;                 System.out.println("You threw paper and the computer threw paper!");                 break;             case SCISSORS:                 result = 3;                 System.out.println("You threw paper and the computer threw scissors!");                 break;             }   break;         //compares and displays the computer and player         //choices if the player throws scissors         case SCISSORS:             switch(computerThrow) {             case ROCK:                 result = 2;                 System.out.println("You threw scissors and the computer threw rock!");                 break;             case PAPER:                 result = 1;                 System.out.println("You threw scissors and the computer threw paper!");                 break;             case SCISSORS:                 result = 0;                 System.out.print("You threw scissors and the computer threw scissors!");                 break;             }   break;         }         timesPlayed ++;          // will compare and decide the winner of the two players         finish();      } while (timesPlayed &lt; 3); }  public static int getPlayerThrow() {     //prompts weapon choice and stores said choice     System.out.println("Choose your weapon of choice:\n(1 for rock, 2 for paper, 3 for scissors)");     int choice = fru.nextInt();      //checks for validity and returns the choice     if (choice != 1 &amp;&amp; choice != 2 &amp;&amp; choice != 3) {         System.out.print("Not a valid input!\n Please try again: ");         choice = fru.nextInt();     }      return choice; }  //compares and decides the winner of the two players public static void finish() {     //displays the winner of the round accourding to aforementioned possible results     switch(result) {     case 0:         System.out.println("Its a tie!"); break;     case 1:         System.out.println("You are victorious! Man over machine!");          playerWins++; break;     case 2:         System.out.println("The computer has taken the round! Technological singularity approaches!");         computerWins++; break;     }      //cheks if the match is over and displays messages accordingly     switch(timesPlayed) {     case 1: break;     case 2:         if (playerWins == 2 || computerWins == 2) {             if (playerWins == 2) {                 System.out.println("You win the match! Congratulations!\nWould you like to play another match?\n(y for yes, n for no)");                 timesPlayed = 5;                 playAgain = fru.nextLine();                  //checks for validity                 if (playAgain != "y" || playAgain != "n") {                     System.out.print("Not a valid input!\n Please try again: ");                     playAgain = fru.nextLine();                 }             }             else if (computerWins == 2) {                 System.out.println("The computer wins the match!\nPlay again! I know you can beat it.\n(y for yes, n for no)");                 timesPlayed = 5;                 playAgain = fru.nextLine();                  //checks for validity                 if (playAgain != "y" || playAgain != "n") {                     System.out.print("Not a valid input!\n Please try again: ");                     playAgain = fru.nextLine();                 }             }         } break;     //will happen for any amount of times played over 2     default:         if (playerWins == 2) {             System.out.println("You win the match! Congratulations!\nWould you like to play another match?\n(y for yes, n for no)");             playAgain = fru.nextLine();              //checks for validity             if (playAgain != "y" || playAgain != "n") {                 System.out.print("Not a valid input!\n Please try again: ");                 playAgain = fru.nextLine();             }         }         else if (computerWins == 2) {             System.out.println("The computer wins the match!\nPlay again! I know you can beat it.\n(y for yes, n for no)");             playAgain = fru.nextLine();              //checks for validity             if (playAgain != "y" || playAgain != "n") {                 System.out.print("Not a valid input!\n Please try again: ");                 playAgain = fru.nextLine();             }         }     } } } </code></pre>  <p>I understand neither what the error means nor where it comes from. The only information that I have about it comes from skimming google for the error, but it is tough when the questions asked or examples posted are not specific to my project. I have taken multiple steps towards fixing it but none of them seem to do anything.</p>  <p>This could be a complex coding problem or a single character that I have missed, but any and all help is appreciated! Thank you!</p>