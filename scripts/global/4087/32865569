<p>If I compile and run the following class (with Java SE 7, if that matters),</p>  <pre><code>class Foo {      public static void main(String[] args) {         System.out.println(true ? null : 42);         // System.out.println(null);     } } </code></pre>  <p>I get the following output</p>  <pre><code>null </code></pre>  <p>So far, so good. However, if I uncomment the second statement in <code>main</code>, I get a compilation error:</p>  <pre><code>Foo.java:5: error: reference to println is ambiguous, both method println(char[]) in PrintStream and method println(String) in PrintStream match        System.out.println(null);                   ^ </code></pre>  <p>Why does the Java compiler throw this error if the argument of  <code>System.out.println</code> is <code>null</code>, but doesn't if the argument is <code>true ? null : 42</code>?</p>