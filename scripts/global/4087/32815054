<p>I am getting error LNK2019 from the following coding. I'm still new to coding though. Here is the error:</p>  <p>Error  1   error LNK2019: unresolved external symbol "int __cdecl ReadDials(char &amp;,char &amp;,char &amp;,char &amp;,char &amp;,char &amp;,char &amp;,char &amp;)" (?ReadDials@@YAHAAD0000000@Z) referenced in function _main   c:\Users\justin\documents\visual studio 2013\Projects\lab04\lab04\Source.obj    lab04</p>  <p>I have no idea why it is doing this, it wasn't doing this before but now all of a sudden it is forcing this on me. It won't even let me run the program itself. I really need help with this. I have saved the file and everything.</p>  <p>'</p>  <pre><code>#include &lt;iomanip&gt; #include &lt;string&gt; #include &lt;cctype&gt; #include &lt;iostream&gt;  using namespace std;  //prototypes int ReadDials(char &amp;, char &amp;, char &amp;, char &amp;, char &amp;, char &amp;, char &amp;, char &amp;); int ToDigit(char&amp;); void AcknowledgeCall(char, char, char, char, char, char, char, char);  int main()  { //declare variables char c1, c2, c3, c4, c5, c6, c7, c8; int returnValue = 0; while (returnValue != -5 ) {     returnValue = ReadDials(c1, c2, c3, c4, c5, c6, c7, c8);     switch (returnValue)     {     case -1: cout &lt;&lt; "ERROR - An invalid character was entered." &lt;&lt; endl; break;     case -2: cout &lt;&lt; "ERROR - Phone number cannot begin with 0" &lt;&lt; endl; break;     case -3: cout &lt;&lt; "ERROR - Phone number cannot begin with 555" &lt;&lt; endl; break;     case -4: cout &lt;&lt; "ERROR - Hyphen is not in the correct position" &lt;&lt; endl; break;     default: AcknowledgeCall(c1, c2, c3, c4, c5, c6, c7, c8);     } } return 0; }   int ReaDials(char &amp;c1, char &amp;c2, char &amp;c3, char &amp;c4, char &amp;c5, char &amp;c6, char &amp;c7, char &amp;c8) //input data including hyphem { cout &lt;&lt; "Input the phone number or 'Q' to quit: "; cin &gt;&gt; c1; // test first character to see if user wants to leave if (toupper(c1) == 'Q')     return -5; //enter the last 7 cin &gt;&gt; c2 &gt;&gt; c3 &gt;&gt; c4 &gt;&gt; c5 &gt;&gt; c6 &gt;&gt; c7 &gt;&gt; c8; // test each character to see if it is valid int result; result = ToDigit(c1); if ( result == -1)     return -1; result  = ToDigit(c2); if ( result == -1)     return -1; result  = ToDigit(c3); if ( result == -1)     return -1; result  = ToDigit(c5); if ( result == -1)     return -1; result = ToDigit(c6); if (result == -1)     return -1; result = ToDigit(c7); if (result == -1)     return -1; result = ToDigit(c8); if (result == -1)     return -1;  //test for hyphen if (c4 != '-')     return - 1; //check for 0 if (c1 == 0)     return -2;  //check for 555 if (c1 == 5 &amp;&amp; c2 == 5 &amp;&amp; c3 == 5)     return -3;  return 0;  }  int ToDigit(char&amp; digit)  // turns letters to digits { digit = toupper(digit); switch (digit) { case '0': digit = '0'; break; case '1': digit = '1'; break; case '2': digit = '2'; break; case '3': digit = '3'; break; case '4': digit = '4'; break; case '5': digit = '5'; break; case '6': digit = '6'; break; case '7': digit = '7'; break; case '8': digit = '8'; break; case '9': digit = '9'; break; case 'A': digit = '2'; break; case 'B': digit = '2'; break; case 'C': digit = '2'; break; case 'D': digit = '3'; break; case 'E': digit = '3'; break; case 'F': digit = '3'; break; case 'G': digit = '4'; break; case 'H': digit = '4'; break; case 'I': digit = '4'; break; case 'J': digit = '5'; break; case 'K': digit = '5'; break; case 'L': digit = '5'; break; case 'M': digit = '6'; break; case 'N': digit = '6'; break; case 'O': digit = '6'; break; case 'P': digit = '7'; break; case 'Q': digit = '7'; break; case 'R': digit = '7'; break; case 'S': digit = '7'; break; case 'T': digit = '8'; break; case 'U': digit = '8'; break; case 'V': digit = '8'; break; case 'W': digit = '9'; break; case 'X': digit = '9'; break; case 'Y': digit = '9'; break; case 'Z': digit = '9'; break; case '-': digit = '-'; break; default: return -1; } //return 0 to indicate a valid digit return 0; }  void AcknowledgeCall(char c1, char c2, char c3, char c4, char c5, char c6, char c7, char c8)  // displays number { cout &lt;&lt; "the phone number dialed: " &lt;&lt; c1 &lt;&lt; c2 &lt;&lt; c3 &lt;&lt; c4 &lt;&lt; c5 &lt;&lt; c6 &lt;&lt; c7 &lt;&lt; c8 &lt;&lt; endl; } </code></pre>  <p>'</p>