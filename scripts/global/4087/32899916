<p>I'm trying to compile <code>expect</code> statically on my PC, but I seem to run into some strange compiling errors.</p>  <p>I was able to compile <code>tcl</code> statically like this:</p>  <pre><code>./configure --disable-load --disable-shared </code></pre>  <p>Then add to the makefile <code>CFLAGS</code> variable <code>-static</code> keyword. Now after compiling I seem to have a static tcl, and a library:</p>  <pre><code>-rw-rw-r--  1 jlumme jlumme 3284332 loka   2 11:27 libtcl8.6.a </code></pre>  <p>After this, I configure <code>expect</code>:</p>  <pre><code>./configure --with-tclconfig=${TCL_DIR}/unix --disable-shared --disable-load </code></pre>  <p>And then compile (first dynamic):</p>  <pre><code>$ gcc  -pipe -O2 -fomit-frame-pointer -Wall   -Wl,--export-dynamic  -o expect exp_main_exp.o -L/home/jlumme/Downloads/compile/expect5.45 -lexpect5.45 -L/home/jlumme/Downloads/compile/tcl8.6.4/unix -ltcl8.6   -lieee -lm -lpthread -lz </code></pre>  <p>The result looks ok:</p>  <pre><code>$ file expect expect: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), dynamically linked (uses shared libs), for GNU/Linux 2.6.32, BuildID[sha1]=a613c260944117f43bcaebc43c51c421dce273a7, not stripped </code></pre>  <p>But now if I want to attempt a static compilation, I get errors that I dont understand:</p>  <pre><code> gcc  -pipe -O2 -fomit-frame-pointer -Wall   -Wl,--export-dynamic  -o expect exp_main_exp.o -L/home/jlumme/Downloads/compile/expect5.45 -lexpect5.45 -L/home/jlumme/Downloads/compile/tcl8.6.4/unix -ltcl8.6   -lieee -lm -lpthread -lz -static    /home/jlumme/Downloads/compile/tcl8.6.4/unix/libtcl8.6.a(tclUnixCompat.o):     In function `TclpGetGrGid':  tclUnixCompat.c:(.text+0x41c): warning: Using 'getgrgid_r' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking  /home/jlumme/Downloads/compile/tcl8.6.4/unix/libtcl8.6.a(tclUnixCompat.o):     In function `TclpGetGrNam':  tclUnixCompat.c:(.text+0x31c): warning: Using 'getgrnam_r' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking   &lt;HANDFUL OF WARNINGS REMOVED&gt;   /usr/bin/ld: dynamic STT_GNU_IFUNC symbol `tan' with pointer equality in `/usr/lib/gcc/x86_64-linux-gnu/4.9/../../../x86_64-linux-gnu/libm.a(s_tan.o)' can not be used when making an executable; recompile with -fPIE and relink with -pie  collect2: error: ld returned 1 exit status </code></pre>  <p>I dont really understand what this final linking problem is, can someone help ?</p>