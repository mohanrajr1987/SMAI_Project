<p>i have images on a webserver and I convert they in Base64 to receive it on a .Net application. I use this code:</p>  <pre><code>$imagedata = file_get_contents($local_uri); $d = base64_encode($imagedata); </code></pre>  <p>It works perfekt.</p>  <p>Now i had the idea to resize the images to save time for transmission.  So I resize the images with a simple PHP-Framework from <a href="http://deruwe.de/vorschaubilder-einfach-mit-php-realisieren-teil-2.html" rel="nofollow">http://deruwe.de/vorschaubilder-einfach-mit-php-realisieren-teil-2.html</a> </p>  <p>On behind it use ImageJPEG to "return" or create the edited image. On an other post here i read that if you want to use ImageJPEG and translate it on Base64 you have to use this code:</p>  <pre><code>ob_start(); $thumbnail-&gt;output(false, false); $p = ob_get_contents(); ob_end_clean(); $d = base64_encode($p); </code></pre>  <p>The "new" Base64 code seems legit, because if I try to illustrate it with <a href="http://www.freeformatter.com/base64-encoder.html" rel="nofollow">http://www.freeformatter.com/base64-encoder.html</a>, I got a legit image.</p>  <p>BUT due an unknown reason my .Net application will throw an System.NotSupportedException (No imaging component suitable to complete this operation was found.) and don't like the "new" one. </p>  <p>This is my .Net function to convert Base64 String in BitmapImage:</p>  <pre><code>public static BitmapImage getImage(String s)     {         byte[] binaryData = Convert.FromBase64String(s);         BitmapImage bi = new BitmapImage();         bi.BeginInit();         bi.StreamSource = new MemoryStream(binaryData);         bi.EndInit();         return bi;     } </code></pre>  <p>Any idea whats gone wrong or how to fix it?</p>