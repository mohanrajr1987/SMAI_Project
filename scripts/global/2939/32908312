<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  &nbsp; i have Finished my Work but i get this Flickering problem exactelly<br> when i want Resizing my Form (wich has bsNone in BorderStyle Property) from left Margin<br> or bottom Margin, please try this Example first (full code inside):<br>  <a href="https://yadi.sk/d/LcZ1dAi6jUQJn" rel="nofollow">My Example =></a></p>  <p>finally here is the code:<br></p>  <pre><code>const   // frame Width   BORDER_WIDTH = 5;   // Key performance indicators (top-left, top-right ...)   EDGE_SIZE = 15;     var   Form1: TForm1;     implementation     {$R *.dfm}  procedure TForm1.FormMouseMove(Sender: TObject; Shift: TShiftState; X,   Y: Integer); var   fRect: TRect;   fPos: TPoint;   fChangedCursor: Boolean; begin   // Change cursor when the mouse pointer is located on the edge       fChangedCursor := False;   fPos := Point(X, Y);       // top margin   fRect := Rect(EDGE_SIZE, 0, Width - EDGE_SIZE, BORDER_WIDTH);   if PtInRect(fRect, fPos) then   begin     fChangedCursor := True;     Cursor := crSizeNS;     if ssLeft in Shift then     begin     // here the bottom Margin flickering       ReleaseCapture;       PerForm(WM_SysCommand, $F003, 0);     end;   end;       // right margin   fRect := Rect(Width - BORDER_WIDTH, EDGE_SIZE, Width, Height - EDGE_SIZE);   if PtInRect(fRect, fPos) then   begin     fChangedCursor := True;     Cursor := crSizeWE;     if ssLeft in Shift then     begin       ReleaseCapture;       PerForm(WM_SysCommand, $F002, 0);     end;   end;       // Bottom margin   fRect := Rect(EDGE_SIZE, Height - BORDER_WIDTH, Width - EDGE_SIZE,    Height);   if PtInRect(fRect, fPos) then   begin     fChangedCursor := True;     Cursor := crSizeNS;     if ssLeft in Shift then     begin       ReleaseCapture;       PerForm(WM_SysCommand, $F006, 0);     end;   end;       // left margin   fRect := Rect(0, EDGE_SIZE, BORDER_WIDTH, Height - EDGE_SIZE);   if PtInRect(fRect, fPos) then   begin     fChangedCursor := True;     Cursor := crSizeWE;     if ssLeft in Shift then     begin     // here the Right Margin flickering       ReleaseCapture;       PerForm(WM_SysCommand, $F001, 0);     end;   end;       // Top left corner   fRect := Rect(0, 0, EDGE_SIZE, EDGE_SIZE);   if PtInRect(fRect, fPos) then   begin     fChangedCursor := True;     Cursor := crSizeNWSE;     if ssLeft in Shift then     begin       // here the Both Margins flickering       ReleaseCapture;       PerForm(WM_SysCommand, $F004, 0);     end;   end;       // Top right corner   fRect := Rect(Width - EDGE_SIZE, 0, Width, EDGE_SIZE);   if PtInRect(fRect, fPos) then   begin     fChangedCursor := True;     Cursor := crSizeNESW;     if ssLeft in Shift then     begin       // here the both Margins flickering       ReleaseCapture;       PerForm(WM_SysCommand, $F005, 0);     end;   end;     // Bottom right corner   fRect := Rect(Width - EDGE_SIZE, Height - EDGE_SIZE, Width, Height);   if PtInRect(fRect, fPos) then   begin     fChangedCursor := True;     Cursor := crSizeNWSE;     if ssLeft in Shift then     begin     // here the both Margins flickering a Little       ReleaseCapture;       PerForm(WM_SysCommand, $F008, 0);     end;   end;       // Bottom left corner   fRect := Rect(0, Height - EDGE_SIZE, EDGE_SIZE, Height);   if PtInRect(fRect, fPos) then   begin     fChangedCursor := True;     Cursor := crSizeNESW;     if ssLeft in Shift then     begin     // here the Right Margin flickering       ReleaseCapture;       PerForm(WM_SysCommand, $F007, 0);     end;   end;       // Standardcursor      if not fChangedCursor then     Cursor := crDefault; end; </code></pre>