<p>My main code declares a pointer  that needs to be resized from an external function. Ex:</p>  <pre><code>double *vect =NULL; classobj object;  object.func(vect);  //--- print the outcome for(int j=0; j&lt;4; ++j)    cout &lt;&lt; vect[j] &lt;&lt; " .. " &lt;&lt; endl; </code></pre>  <p>where function func() is part of <code>classobj</code> defined in an another file (say <code>classobj.h</code> and <code>.cpp</code>) as</p>  <pre><code>void classobj::func(double *_vect){    _vect  = new double[4];    for(int j=0; j&lt;4; ++j)     _vect[j] = 3.0*j +1 ;  }; </code></pre>  <p>The problem is that <code>vect</code> has not been resized. I get segmentation fault. Any idea please on how to use pointers in this case?</p>