<p>I'd like to ask something about GridBagLayout because whenever I try to put the lblStudentID under lblName it just makes an output wherein it stays in the right side of lblName</p>  <pre><code>import javax.swing.*; import java.awt.*;  public class Student extends JPanel {      JLabel picture;     JLabel lblStudentID = new JLabel("Student ID:");     JLabel lblName = new JLabel("Name:");     JLabel lblProg = new JLabel("Program:");     JLabel lblGen = new JLabel("Gender:");     JPanel panel = new JPanel();      JRadioButton rbtn1 = new JRadioButton("Male");     JRadioButton rbtn2 = new JRadioButton("Female");      JComboBox cmbProg = new JComboBox();      TextField txtStudentID = new TextField();     TextField txtName = new TextField();      GridBagConstraints gbc = new GridBagConstraints();      public void setName() {      }      public Student() {         setLayout(new GridBagLayout());          picture = new JLabel(createImageIcon("images/student.jpg"));         picture.setSize(100, 100);         add(picture);          add(lblName, gbc);         gbc.gridx = 0;         gbc.gridy = 0;         add(txtName, gbc);         gbc.gridx = 1;         gbc.gridy = 0;         add(lblStudentID, gbc);         gbc.gridx = 0;         gbc.gridy = 1;         add(txtStudentID, gbc);         gbc.gridx = 1;         gbc.gridy = 1;     }      private static void createAndShowGUI() {         // Create and set up the window.         JFrame frame = new JFrame("Student");         frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);          frame.setSize(400, 300);         // Display the window.          Student LoginPane = new Student();          LoginPane.setOpaque(true); // content panes must be opaque         LoginPane.setLayout(new FlowLayout());         LoginPane.setBackground(Color.white);         frame.setContentPane(LoginPane);         frame.setVisible(true);      }      protected static ImageIcon createImageIcon(String path) {         java.net.URL imgURL = Student.class.getResource(path);         if (imgURL != null) {             return new ImageIcon(imgURL);         } else {             System.err.println("Couldn't find file: " + path);             return null;         }     }      public static void main(String[] args) {         // Schedule a job for the event-dispatching thread:         // creating and showing this application's GUI.         javax.swing.SwingUtilities.invokeLater(new Runnable() {             public void run() {                 createAndShowGUI();             }         });     } } </code></pre>