<p>The <a href="https://msdn.microsoft.com/en-us/library/system.data.entity.dbset(v=vs.113).aspx" rel="nofollow">documentation for <code>DbSet</code></a> appears not to have any way of returning the number of elements in a <code>DbSet</code>. Perhaps I'm wrong about that. In any case, let me explain my situation:</p>  <p>I have a class <code>Score</code> modeling rows of a table in my database</p>  <pre><code>public partial class Score {     public Score()     {         GameLogs = new HashSet&lt;GameLog&gt;();     }      public int id { get; set; }      [Column("score")]     public int score1 { get; set; }      [StringLength(50)]     public string name { get; set; }      public DateTime playdate { get; set; }      public virtual ICollection&lt;GameLog&gt; GameLogs { get; set; } } </code></pre>  <p>and the model of the table is of type <code>DbSet&lt;Score&gt;</code> and I'm trying to create a method that returns the top 5 rows ordered by <code>score1</code>, or, if the database has fewer than 5 rows, return all the rows ordered by <code>score1</code>. </p>  <p>What I have is</p>  <pre><code>    public DbSet&lt;Score&gt; getTopFiveOrFewerScores ( )     {         return (                   from s in SD.Scores                   orderby s.score1 descending                   select s                 ).Take(Math.Min(SD.Scores.length, 5));     } </code></pre>  <p>The main problem is that I'm putting <code>length</code> there as a placeholder since there apparently isn't a <code>length</code> or equivalent property on a <code>DbSet</code>. Another problem is that Visual Studio is saying</p>  <blockquote>   <p>Cannot implicitly convert type   'System.Linq.IQueryable' to   'System.Data.Entity.DbSet'. An explicit   conversion exists (are you missing a cast?)</p> </blockquote>  <p>on the Take statement. </p>  <p>Any guidance here?</p>