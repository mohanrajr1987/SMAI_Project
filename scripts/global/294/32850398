<p>I am making a client/server socket program where the client can send a hostname request and the server returns the IP address of the hostname. I do not know what wrong but my (get_IP) function seems not to work, even though it returns the hostname correctly on the server side. When I change the buffer size on line 109 to 14 and I resquest "www.google.com" ,from the client side, it works fine. I suspect that the problem is caused by the buffer. A little help?</p>  <pre><code>Server.c  #include &lt;netinet/in.h&gt; #include &lt;arpa/inet.h&gt; #include &lt;sys/socket.h&gt; #include &lt;stdio.h&gt; #include &lt;stdlib.h&gt; #include &lt;unistd.h&gt; #include &lt;errno.h&gt; #include &lt;string.h&gt; #include &lt;sys/types.h&gt; #include &lt;netdb.h&gt;  #define SERVER_PORT   16700    char *get_IP(char *host) {   struct hostent *hent;   int iplen = 15;   char *ip = (char *)malloc(iplen+1);    memset(ip, 0, iplen+1);   if((hent = gethostbyname(host)) == NULL)   {      herror("Can't get IP");      exit(1);   }   if(inet_ntop(AF_INET,(void *)hent-&gt;h_addr_list[0], ip, iplen) == NULL)   {     perror("Can't resolve the host");     exit(1);   }   return ip; }  char *host_page(char *ip) {   int sockfd = 0, n;   char buffer[1024];   struct sockaddr_in host_addr;   char *page = malloc(1024);    memset(buffer, '0' ,sizeof(buffer));   if((sockfd = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP))&lt; 0)       error("\n Error : Could not create socket \n");     host_addr.sin_family = AF_INET;   host_addr.sin_port = htons(80);   host_addr.sin_addr.s_addr = inet_addr(ip);    if(connect(sockfd, (struct sockaddr *)&amp;host_addr, sizeof(host_addr))&lt;0)      error("\n Error : Connect Failed \n");     n = write(sockfd,"GET", 3);   if (n &lt; 0)       error("\n ERROR: writing to socket");     //getting server response   bzero(buffer,1024);   n = read(sockfd,buffer,1023);   if (n &lt; 0)       error("\n ERROR: reading from socket");   strcpy(page, buffer);    close(sockfd);   return page; }   int main(void) {   int sockfd, listenfd = 0,connfd = 0, newsockfd, clilen;    struct sockaddr_in serv_addr, cli_addr;    char buffer[1025];     int n;    /* Establishing communication with socket */    printf("XXXXXX - WELCOME TO PAUL'S PROXY SERVER - XXXXXX \n\n");    sockfd = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);   printf("Connection established... \n\n");    memset(&amp;serv_addr, '0', sizeof(serv_addr));   memset(buffer, '0', sizeof(buffer));    serv_addr.sin_family = AF_INET;   serv_addr.sin_addr.s_addr = htonl(INADDR_ANY);     serv_addr.sin_port = htons((unsigned short)SERVER_PORT);    bind(sockfd, (struct sockaddr*)&amp;serv_addr,sizeof(serv_addr));    if(listen(sockfd, 10) == -1)      error("Failed to listen\n");  /* start communication with client */         newsockfd = accept(sockfd, (struct sockaddr*)&amp;cli_addr, &amp;clilen);   if(newsockfd &lt; 0)      error("ERROR on accept");    //getting hostname request   bzero(buffer, 1024);   n = read(newsockfd, buffer, 14);    if (n &lt; 0)       error("ERROR reading from socket");   printf("client requested IP for: %s \n", buffer);    char ip[40];    strcpy (ip, get_IP(buffer));    char page[2000];      strcpy(page, host_page(ip));      //Sending response to client request   n = write(newsockfd, page, 1024);    if(n&lt;0)      error("ERROR reading from socket");            return 0; } </code></pre>  <hr>  <pre><code>Client.c  #include &lt;sys/socket.h&gt; #include &lt;sys/types.h&gt; #include &lt;netinet/in.h&gt; #include &lt;netdb.h&gt; #include &lt;stdio.h&gt; #include &lt;string.h&gt; #include &lt;stdlib.h&gt; #include &lt;unistd.h&gt; #include &lt;errno.h&gt; #include &lt;arpa/inet.h&gt;  #define SERVER_IP    "129.120.151.94" #define SERVER_PORT  46700  int main(void) {   int sockfd = 0, n;   char buffer[1024];   struct sockaddr_in serv_addr;    memset(buffer, '0' ,sizeof(buffer));   if((sockfd = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP))&lt; 0)       error("\n Error : Could not create socket \n");     serv_addr.sin_family = AF_INET;   serv_addr.sin_port = htons((unsigned short)SERVER_PORT);   serv_addr.sin_addr.s_addr = inet_addr(SERVER_IP);    if(connect(sockfd, (struct sockaddr *)&amp;serv_addr, sizeof(serv_addr))&lt;0)      error("\n Error : Connect Failed \n");    printf("Enter hostname in the form www.host.domain:");   bzero(buffer,1024);   fgets(buffer,1023,stdin);   n = write(sockfd,buffer,strlen(buffer));   if (n &lt; 0)       error("\n ERROR: writing to socket");    printf("\n hostname IP is: ");   bzero(buffer,1024);   n = read(sockfd,buffer,1023);   if (n &lt; 0)       error("\n ERROR: reading from socket");   printf("%s\n",buffer);       return 0; } </code></pre>