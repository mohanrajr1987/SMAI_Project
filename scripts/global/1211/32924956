<p>I'm pretty new to Spring and Spring Web Flow to be precise.  I'm running into the issue of not being able to bind the view with the form on submit :- Here is what I have for code :-</p>  <p>P.s : I don't know what model={} does in the flow XML, but that's what was available in the code already, and changing it to alertForm doesn't change the behavior/</p>  <p>a) JSP</p>  <pre><code>    &lt;form:form name="alertSubmitForm" method="post" id="alertsForm" modelAttribute="alertForm"&gt;             &lt;table class="general"&gt;                 &lt;tr&gt;                     &lt;th&gt;Alert Text                     &lt;/th&gt;                     &lt;td&gt;&lt;form:textarea path="alertText" cols="50" id="alertText" style="padding-top: 11px"&gt;&lt;/form:textarea&gt;                     &lt;/td&gt;                     &lt;td&gt;&lt;span id="characterCount"&gt;&lt;/span&gt;/250                     &lt;/td&gt;                     &lt;td&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;input id="advancedAlertOptions" type="button" value="More" class="primarybtn" style="float:right;"/&gt;&lt;/td&gt;                 &lt;/tr&gt;                 &lt;tr class="advancedAlertOptions" style="display:none"&gt;                     &lt;th&gt;Active Date                     &lt;/th&gt;                     &lt;td&gt;&lt;form:input path="activeDate" id="activeDate" type="date"/&gt;                     &lt;/td&gt;                 &lt;/tr&gt;                 &lt;tr class="advancedAlertOptions"  style="display:none"&gt;                     &lt;th&gt;Expiration Date                     &lt;/th&gt;                     &lt;td&gt;&lt;form:input id="expDate" path="expDate" type="date"/&gt;                     &lt;/td&gt;                 &lt;/tr&gt;                 &lt;tr class="advancedAlertOptions" style="display:none"&gt;                     &lt;th&gt;Author                     &lt;/th&gt;                     &lt;td&gt;&lt;form:input id="author" path="author" type="text" disabled="true" value="${author}" /&gt;                     &lt;/td&gt;                 &lt;/tr&gt;                 &lt;tr class="advancedAlertOptions" style="display:none"&gt;                     &lt;th&gt;Added on                     &lt;/th&gt;                     &lt;td&gt;&lt;form:input id="addedDate" type="date" path="addedDate" disabled="true"/&gt;                     &lt;/td&gt;                 &lt;/tr&gt;             &lt;/table&gt;             &lt;input id="cancelAddAlert" type="button" value="Cancel" class="secondarybtn" style="float:right; margin-left:20px;"/&gt;             &lt;input id="persistAlert" type="submit" value="Add" class="secondarybtn" style="float:right;" name="_eventId_addAlert"/&gt;         &lt;/form:form&gt; </code></pre>  <p>b) Flow XML</p>  <pre><code>    &lt;view-state id="general" view="editMember/general" model="{}" parent="#abstract-member-view"&gt;         &lt;on-entry&gt;             &lt;evaluate expression="new com.company.member.alerts.AlertForm()" result="viewScope.alertForm"/&gt;                  &lt;/on-entry&gt;         &lt;on-render&gt;                      &lt;evaluate expression="alertManagementService.getAlertsList(partyIdMember)" result="viewScope.alerts" /&gt;         &lt;/on-render&gt;                  &lt;transition on="addAlert" to="general" bind="true" &gt;             &lt;evaluate expression="alertManagementService.addAlertToMember(alertForm,partyIdMember)" /&gt;          &lt;/transition&gt;     &lt;/view-state&gt; </code></pre>  <p>c) Service Call</p>  <pre><code>package com.company.member.alerts;      import java.text.DateFormat;     import java.text.ParseException;     import java.text.SimpleDateFormat;     import java.util.ArrayList;     import java.util.Calendar;     import java.util.Date;     import java.util.List;      import org.hibernate.SQLQuery;     import org.springframework.beans.factory.annotation.Autowired;     import org.springframework.stereotype.Service;     import org.springframework.transaction.annotation.Transactional;      import com.company.domain.db.GenericDao;      @Service("alertManagementService")     @Transactional(readOnly = true)     public class AlertManagementServiceImpl implements AlertManagementService {      @Autowired     GenericDao dao;     @Override     public List&lt;AlertForm&gt; getAlertsList(Long memberId) {         String a = "SELECT * FROM PARTY_ALERT WHERE PARTY_ID = "+memberId+ " ORDER BY PA_ACTIVE_DATE";         SQLQuery query = dao.createSQLQuery(a);         List&lt;Object[]&gt; queryResults = query.list();         List&lt;AlertForm&gt; results = new ArrayList&lt;AlertForm&gt;();         for(Object[] arr : queryResults) {             AlertForm alertForm = new AlertForm();             DateFormat df = new SimpleDateFormat("yyyy-MM-dd H:m:s");             try {                 alertForm.setAlertId(Long.valueOf(arr[0].toString()));                 alertForm.setMemberId(Long.valueOf(arr[1].toString()));                 alertForm.setAlertText(arr[2].toString());                 Date acD = df.parse(arr[3].toString());                 alertForm.setActiveDate(acD);                 if(arr[4]!=null) {                     Date expD = df.parse(arr[4].toString());                     alertForm.setExpDate(expD);                 }                 alertForm.setAuthor(arr[5].toString());                 Date adD = df.parse(arr[6].toString());                 alertForm.setAddedDate(adD);                 alertForm.setAddedDate(adD);                 alertForm.setActiveDate(acD);             }              catch (ParseException e) {                 e.printStackTrace();             }             results.add(alertForm);         }          return results;     }      @Override     public void addAlertToMember(AlertForm alert, Long memberID) {         Date expDate;         PartyAlerts partyAlertsDB = new PartyAlerts();         if(alert.getAlertText()!=null) {             partyAlertsDB.setAlertText(alert.getAlertText());             partyAlertsDB.setActiveDate(alert.getActiveDate());             partyAlertsDB.setMemberId(memberID);             if((expDate = alert.getExpDate())!=null) {                 partyAlertsDB.setInactiveDate(expDate);             }         }         else { //hardcoding into DB             partyAlertsDB.setActiveDate(new Date());             partyAlertsDB.setInactiveDate(new Date());             partyAlertsDB.setAlertText("This is a hardcoded alert");             partyAlertsDB.setMemberId(memberID);         }         dao.save(partyAlertsDB);     } } </code></pre>  <p>d) Form Backing Bean</p>  <pre><code>    package com.company.member.alerts;      import java.io.Serializable;     import java.util.Date;       public class AlertForm  implements Serializable{     private static final long serialVersionUID = 1L;     private Long alertId;     private Long memberId;     private String alertText;     private Date activeDate;     private Date expDate;     private Date addedDate;     private String author;      public AlertForm() {     }      public Long getAlertId() {         return alertId;     }     public void setAlertId(Long alertId) {         this.alertId = alertId;     }     public Long getMemberId() {         return memberId;     }     public void setMemberId(Long memberId) {         this.memberId = memberId;     }     public String getAlertText() {         return alertText;     }     public void setAlertText(String alertText) {         this.alertText = alertText;     }     public Date getActiveDate() {         return activeDate;     }     public void setActiveDate(Date activeDate) {         this.activeDate = activeDate;     }     public Date getExpDate() {         return expDate;     }     public void setExpDate(Date expDate) {         this.expDate = expDate;     }     public Date getAddedDate() {         return addedDate;     }     public void setAddedDate(Date addedDate) {         this.addedDate = addedDate;     }     public String getAuthor() {         return author;     }     public void setAuthor(String author) {         this.author = author;     }   } </code></pre>  <p>The issue is that - when I submit the form - alertForm element are NULL . The getter to get all the alerts on render works as expected. </p>  <p>Any help will be highly appreciated. </p>