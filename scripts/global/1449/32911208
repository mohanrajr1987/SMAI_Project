<p>This might seem like an odd question, but I am not very familiar with the Outlook VBA object model. Is it possible to convert each recipient's name and/or email address on an incoming mail message to string and then append that to the body of the email message, then remove it from the recipient list? The reason I ask is because where I work we are limited to 500MB of email storage and apparently when someone mass emails the entire organization without using a distribution list, even a plain text email with like 100 characters can be upwards of 1MB due to the amount of individual recipients.</p>  <p>Either I have no idea what search terms to use on google, or no one has ever had a request like this, because I could not find what I was looking for.</p>  <p>Update: I think I have it figured out for the most part:</p>  <pre><code>Public Sub AppendRecips()  Dim objMsg As Outlook.MailItem 'Object Dim objItem As Object Dim objRecipients As Outlook.Recipients Dim objRecipient As Outlook.Recipient Dim I As Long Dim lngCount As Long Dim str1 As String Dim str2 As String Dim pa As Outlook.PropertyAccessor Dim boolMSGFormat As Boolean  Const PR_SMTP_ADDRESS As String = _     "http://schemas.microsoft.com/mapi/proptag/0x39FE001E"  Set objItem = ActiveExplorer.Selection.Item(1) On Error GoTo ExitSub:  Set objMsg = objItem  Set objRecipients = objMsg.Recipients     lngCount = objRecipients.Count  boolMSGFormat = objMsg.BodyFormat &lt;&gt; olFormatHTML  If lngCount &gt; 5 Then     str1 = "Recipients:"          ' We need to use a count down loop for removing items         ' from a collection. Otherwise, the loop counter gets         ' confused and only every other item is removed.       For I = lngCount To 1 Step -1          Set objRecipient = objRecipients.Item(I)         Set pa = objRecipient.PropertyAccessor          'Debug.Print objRecipient.Name &amp; " SMTP=" &amp; pa.GetProperty(PR_SMTP_ADDRESS)          str2 = Format((pa.GetProperty(PR_SMTP_ADDRESS)), "Text")          'check for html and use html tags in link         If boolMSGFormat Then             str1 = str1 &amp; vbCrLf &amp; Format((objRecipient.Name), "Text") &amp; _             vbCrLf &amp; " - " &amp; str2         Else             str1 = str1 &amp; "&lt;br&gt;" &amp; Format((objRecipient.Name), "Text") &amp; _             "&lt;br&gt;" &amp; "&lt;a href='mailto:" &amp; str2 &amp; "'&gt;" &amp; str2 &amp; "&lt;/a&gt;"         End If          Set pa = Nothing         Set objRecipient = Nothing      Next I Debug.Print "End First Loop" Debug.Print "Begin 2nd Loop" 'Loop again and remove the recipients, doing so in initial loop caused errors      For I = lngCount To 1 Step -1         Set objRecipient = objRecipients.Item(I)         objRecipients.Remove I     Next I       'Check for HTML body     If boolMSGFormat Then         objMsg.Body = objMsg.Body &amp; vbCrLf &amp; _         str1     Else         objMsg.HTMLBody = objMsg.HTMLBody &amp; "&lt;HR&gt;&lt;p&gt;" &amp; _         str1 &amp; "&lt;/p&gt;"     End If      objMsg.Save End If     ExitSub: 'MsgBox "Error"     Set objRecipients = Nothing     Set objMsg = Nothing     Set objItem = Nothing  End Sub </code></pre>  <p>The only thing is that the second loop to remove the recipients is really slow and hangs the application until it finishes.</p>  <pre><code>    For I = lngCount To 1 Step -1         Set objRecipient = objRecipients.Item(I)         objRecipients.Remove I     Next I </code></pre>  <p>Any ideas?</p>