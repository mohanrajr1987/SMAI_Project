<p>I've read this <a href="http://stackoverflow.com/a/3488771/2786156">answer</a> in the end of which the following's written:</p>  <blockquote>   <p>Anything that you can with volatile can be done with synchronized, but   not vice versa.</p> </blockquote>  <p>It's not clear. <a href="https://docs.oracle.com/javase/specs/jls/se7/html/jls-8.html#jls-8.3.1.4">JLS 8.3.1.4</a> defines volatile fields as follows:</p>  <blockquote>   <p>A field may be declared volatile, in which case the Java Memory Model   ensures that all threads see a consistent value for the variable   (ยง17.4).</p> </blockquote>  <p>So, the volatile fields are about memory visibility. Also, as far as I got from the answer I cited, reading and writing to volatile fields are synched. </p>  <p>Synchronization, in turn guarantees that the only one thread has access to a synched block. As I got, it has nothing to do with memory visibility. What did I miss?</p>