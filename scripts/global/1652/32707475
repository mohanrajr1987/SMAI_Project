<p>I was brushing my multi-threading basics. To understand synchronization i created following program-</p>  <pre><code>package thread;  public class SynchronizedCounter implements Runnable{      private static int counter = 0;      public void run() {          while(counter &lt; 10) {             synchronized (SynchronizedCounter.class) {                 System.out.println(Thread.currentThread().getName() + "  :: reads ## " + counter);                 counter++;                 System.out.println(Thread.currentThread().getName() + "  :: updated value ## " + counter);             }          }        }      public static void main(String[] args) {          Thread[] threads = new Thread[5];          for(int i = 0; i &lt; threads.length;  i++) {             threads[i] = new Thread(new SynchronizedCounter(), "Thread-" + i);             threads[i].start();         }          for(int i = 0; i &lt; threads.length;  i++) {             try {                 threads[i].join();             } catch (InterruptedException e) {                 e.printStackTrace();             }         }     } } </code></pre>  <p>Now when i executed, got this result:</p>  <pre><code>Thread-0  :: reads --&gt; 0 Thread-0  :: updated value --&gt; 1 Thread-3  :: reads --&gt; 1 Thread-3  :: updated value --&gt; 2 Thread-0  :: reads --&gt; 2 Thread-0  :: updated value --&gt; 3 Thread-0  :: reads --&gt; 3 Thread-0  :: updated value --&gt; 4 Thread-0  :: reads --&gt; 4 Thread-0  :: updated value --&gt; 5 Thread-0  :: reads --&gt; 5 Thread-0  :: updated value --&gt; 6 Thread-0  :: reads --&gt; 6 Thread-0  :: updated value --&gt; 7 Thread-0  :: reads --&gt; 7 Thread-0  :: updated value --&gt; 8 Thread-0  :: reads --&gt; 8 Thread-0  :: updated value --&gt; 9 Thread-0  :: reads --&gt; 9 Thread-0  :: updated value --&gt; 10 Thread-1  :: reads --&gt; 10 Thread-1  :: updated value --&gt; 11 Thread-2  :: reads --&gt; 11 Thread-2  :: updated value --&gt; 12 Thread-4  :: reads --&gt; 12 Thread-4  :: updated value --&gt; 13 Thread-3  :: reads --&gt; 13 Thread-3  :: updated value --&gt; 14 </code></pre>  <p>Everything looks good but i could not understand why value of "counter" is going beyond 10. How while loop passing even though value is 13 or 14 which is more than 10. I understand that when control tries to enter while it may read different value and when it reaches to print it first time i.e. ":: reads -->". But ideally any thread should increase this value to 10. Please help me to understand where i am missing.</p>  <p>Thank you!! </p>