<p>i'm learning about sync with mutex and have this problem. I need 3 threads, each one print a letter and i've to print the secuence from te tittle in an infinite loop. The idea its that A and B thread make the same thing except the print. My idea was to use a trylock with initial value 1, AorB mutex initial value 1 and C mutex initial value 0. but then realise it only work the first iteration and then write alway 2 (AorB)... Its posible to solve it in this way?</p>  <pre><code>void *rutA(){ //Rut B its the same but print B     while(1){         pthread_mutex_lock(&amp;semAoB);         printf("A");         fflush(stdout);         sleep(1);         if(sem_trywait(&amp;turnoC) == 0){//(AorB)             pthread_mutex_unlock(&amp;semC);         }else{////(AorB)(AorB)             sem_post(&amp;turnoC);             pthread_mutex_unlock(&amp;mutexAoB);         }      }     pthread_exit(NULL); }   void *rutC(){     while(1){         pthread_mutex_lock(&amp;mutexC);         printf("C");         sleep(1);         fflush(stdout);         pthread_mutex_unlock(&amp;semAoB);     }     pthread_exit(NULL);  } </code></pre>