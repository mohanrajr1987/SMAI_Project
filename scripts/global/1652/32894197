<p>I have project where i want to sync the folders continuously:</p>  <ul> <li><code>Folder_server</code> is on server</li> <li><code>Folder_desktop</code> is on my mac system.</li> </ul>  <p>I want to sync both of the folders at run time.</p>  <p>Below are the steps I am doing:</p>  <ol> <li>Data from server: Array of dictionary containing: Name of file, Modification date, Size of file</li> <li>Data from Local: Array of dictionary containing: Name of file, Modification date, Size of file</li> <li>Compare the file name</li> </ol>  <p>If file is absent it gets copied in respective folder.</p>  <p>If the file is present in both of the folders it checks for the modification date-time and modified the file which have previous date (lower date).</p>  <p>Below is the logic:</p>  <pre><code>-(void)get_localfile{ }  -(void)get_serverfile{ } -(void)Compare_Files{     //Upload FILES     for(int i=0;i&lt;[Array_LocalFiles count];i++){         if(![Array_serverobjects containsObject:[Array_LocalFiles objectAtIndex:i]]){             //Upload to server         }else{              NSMutableDictionary *dic=[[NSMutableDictionary alloc] init];             for(int j=0;j&lt;[arr_Dict_server count];j++){                 if([[[arr_Dict_server objectAtIndex:j]valueForKey:@"file"] isEqualToString:[Array_LocalFiles objectAtIndex:i]]){                     NSLog(@"file==server file=&gt;%@",[[arr_Dict_server objectAtIndex:j]valueForKey:@"file"]);                     NSLog(@"file==local file=&gt;%@",[[arr_Dict_Localfile objectAtIndex:i]valueForKey:@"file"]);                      dic=[arr_Dict_server objectAtIndex:j];                      NSDateFormatter *dateFormat = [[NSDateFormatter alloc] init];                     [dateFormat setDateFormat:@"yyyy-MM-dd'T'HH:mm:ss.SSSZZZ"];                      NSDate *date_server = [dateFormat dateFromString:[dic valueForKey:@"timestamp"]];                     NSDate *date_local = [dateFormat dateFromString:[[arr_Dict_Localfile objectAtIndex:i] valueForKey:@"timestamp"]];                      if ( [date_server timeIntervalSinceDate:date_local] == 0) {                         // //NSLog(@"Dates are equal.no action perform");                       }                     if ( [date_server laterDate:date_local] == date_local ) {                         //NSLog(@"%@ file upload to server",[Array_LocalFiles objectAtIndex:i]);                      }                     if ( [date_server laterDate:date_local] == date_server) {                         //NSLog(@"%@ file dowloaded from server",[dic valueForKey:@"file"]);                      }                       break;                 }             }         }       }     //download FILES     for(int i=0;i&lt;[Array_serverobjects count];i++){         if(![Array_LocalFiles containsObject:[Array_serverobjects objectAtIndex:i]]){             //NSLog(@"%@ file dowloaded from server",[Array_serverobjects objectAtIndex:i]);                         }     } } </code></pre>  <p>Now the Scenario is:</p>  <ol> <li><code>desktopfolder</code> is blank and folder in desktop contains file name <code>Apple.doc</code></li> <li>I start my logic. So it will check whether <code>apple.doc</code> is present in desktopfolder. If not, it copies the file in <code>desktopfolder</code>.</li> <li>Now after copying the file in <code>desktopfolder</code>, both the folders contain the file named <code>apple.doc</code>. So it will check for modification date now. So everytime the modification date of <code>desktopfolder</code> is latest (as <code>desktopfolder</code> had copied the file later).</li> <li>Now as per the logic the file which have last modified date is latest file and that file get copy in the respective folder (whether on server or on desktop).</li> </ol>  <p>Now the problem is when I try to edit the file from desktop or replace it from the server it is not allowing me to edit it.</p>  <p>If I try to edit the file it always modify the file contain with the existing one.</p>