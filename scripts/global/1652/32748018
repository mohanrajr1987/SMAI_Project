<p>I am building a concurrent application in Java. To avoid exposing my lock object externally, I have a <code>private</code> <code>final</code> lock object: </p>  <pre><code> private final Object Lock = new Object(); </code></pre>  <p>I use the lock for synchronization between threads: </p>  <pre><code>synchronized (Lock) {      // Do stuff } </code></pre>  <p>I <em>also</em> use the lock to wait for conditions: </p>  <pre><code>while (conditionIsNotMet) {      Lock.wait(); } </code></pre>  <p>Does using the same object for both concurrency patterns cause any issues? Is there anything I should watch out for when doing this? </p>