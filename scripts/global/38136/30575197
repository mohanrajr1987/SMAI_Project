<p>I'm developing modules for an older Drupal 6 website. The current task is to abort the preview generation of custom posters. For this the user can upload his logo and change some text. The form containing these info is submitted and the preview is displayed via ahah. </p>  <p>According to several tutorials I have to do this:</p>  <pre><code>var xhrPool = []; $(document).ajaxSend(function(e, jqXHR, options){   console.log(jqXHR);   xhrPool.push(jqXHR); }); $(document).ajaxComplete(function(e, jqXHR, options) {   xhrPool = $.grep(xhrPool, function(x){return x!=jqXHR}); }); </code></pre>  <p>and later on:</p>  <pre><code>function abortAll() {   hideEverything();   for (var i = xhrPool.length - 1; i &gt;= 0; i--) {     xhrPool[i].abort();   }; } </code></pre>  <p>In case I enter information in all fields except the fileupload, the log returns a valid XmlHttpRequest Object which can be aborted properly. But if I upload a file the .ajaxSend does not contain a valid XmlHttpRequest Object. Example:</p>  <p><img src="http://i.stack.imgur.com/445Pt.png" alt="Returned object"></p>  <p>This object does not contain the .abort() method and causes a "method not found" error. So how can I abort this call?</p>  <p>jQuery Version is 1.2.6 and can not be updated. The solution has to be cross browser compatible.</p>