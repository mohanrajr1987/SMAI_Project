<p>I have to index several relational DBs in a Lucene index (for value-based searching).  Some searches will be for values from a specific DB and others will be for values from all DBs.</p>  <p>I can think of two ways to implement this:</p>  <ol> <li><p>Create one big index and add a field called database_id. Use this field when querying over some specific DB.</p></li> <li><p>Create an index for every DB. When querying one DB, I will direct the query to just one index, when querying all DBs I'll use MultiReader that runs query on all indices.</p></li> </ol>  <p>Option 2 seems more comfortable to me because of easier maintenence and faster querying when querying just one DB. Also I came across several posts that say low-cardinality fields are not good for lucene performance (can someone shed light on this? is this true?).</p>  <p>I'd like to hear community thoughts, what other pros and cons can be?</p>