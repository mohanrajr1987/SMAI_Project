<p>Suppose I have indexed a set of documents and now I am given a set of terms that I known are generated by the indexing process. I would like to get the occurrence of each of these terms, i.e., which document, what offsets. I have done this using, for each term, one postingnums that let me to iterate through the set of documents a term appear in; then within each document, one postingenums to get document vector that contains the offset information of that term in that document. </p>  <p>But this is not very efficient as there is loop inside loop and can go quite slow. The code is below. Any suggestions if this can be done in a better way?</p>  <p>The field schema:</p>  <pre><code>&lt;field name="terms" type="token_ngram" indexed="true" stored="false" multiValued="false" termVectors="true" termPositions="true" termOffsets="true"/&gt; </code></pre>  <p>Code:</p>  <pre><code>IndexReader indexReader = ...//init an index reader Set&lt;String&gt; termSet = .... //set containing e.g., 10000 terms. for(String term: termSet){     //get a postingenum used to iterate through docs containing the term     //this "postings" does not have valid offset information (see comment below)     PostingsEnum postings =             MultiFields.getTermDocsEnum(indexReader, "terms", new BytesRef(term.getBytes()));     /*I also tried:       *PostingsEnum postings =      *       MultiFields.getTermDocsEnum(indexReader, "terms", new BytesRef(term.getBytes()), PostingsEnum.OFFSETS);      * But the resulting "postings" object also does not contain valid offset info (always -1)      */      //now go through each document     int docId = postings.nextDoc();     while (docId != PostingsEnum.NO_MORE_DOCS) {         //get the term vector for that document.         TermsEnum it = indexReader.getTermVector(docId, ngramInfoFieldname).iterator();         //find the term of interest         it.seekExact(new BytesRef(term.getBytes()));         //get its posting info. this will contain offset info         PostingsEnum postingsInDoc = it.postings(null, PostingsEnum.OFFSETS);          //From below, Line A to Line B if I replace "postingsInDoc" with "postings", method "posting.startOffset()" and "endoffset()" always returns -1;          postingsInDoc.nextDoc(); //line A          int totalFreq = postingsInDoc.freq();         for (int i = 0; i &lt; totalFreq; i++) {             postingsInDoc.nextPosition();             System.out.println(postingsInDoc.startOffset(), postingsInDoc.endOffset());         }        //Line B               docId=postings.nextDoc();     } } </code></pre>