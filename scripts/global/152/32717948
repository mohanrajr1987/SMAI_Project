<p>I'm pretty new to Lucene, so forgive me in advance if some of my terminology is wrong.</p>  <p>Lucene offers different types of fields (keyword, text, unstored, unindexed), but it seems it also supports <em>Numeric</em> field, <em>Int</em> field and <em>Float</em> field.</p>  <p>Now, I'm wondering if "<em>the closer the better</em>" functionality exists/or is easy to implement in Lucene:</p>  <p>I want the <strong>creation_date</strong> of a document <strong>stored as the unix time into a float field</strong>. Then I want to be able to compare the unix time given in a query with the indexed unix time of the documents.</p>  <p>Instead of a range query (which checks if the range is between particular bounds) or a boolean query (which checks if the values are the same) <strong>I want to be able to return a sense of similarity based on the time between the unix times.</strong> If the timespan is small it should end up with a higher score than if the timespan is large. Preferably this shouldn't happen linear but instead exponentially for example. So as the title of this question says: <em>The closer, the better</em>.</p>  <p>I've noticed that <strong>ElasticSearch</strong>, which uses Lucene as core offers <a href="https://www.elastic.co/guide/en/elasticsearch/guide/current/decay-functions.html" rel="nofollow">decay function scores</a>, is this the behaviour that I'm looking for and is this present in Lucene?</p>  <p>Lastly, I'm wondering: can one compare this 'type' of scoring together with the default tf-idf scoring that is used to query the body of the documents, in a way that the final score is a combination of the score of the timespan between the documents and the textual similarity of the bodies.</p>