<p>I am trying to modify scores from normal query with different functions defined in function_score. </p>  <p>To find out what scores calculated by my functions are, I specify "boost_mode" to "replace". However, this makes all scores constant: all equal to 1.</p>  <p>Consider following query:</p>  <pre><code>{   "query": {     "function_score": {       "query": {         "terms": {           "name": ["men", "women"]         }       },       "score_mode": "avg",       "functions": [         {           "filter": {             "terms": {               "name": ["men","man"]             }           },           "weight": 2         }       ],       "boost_mode": "replace"     }   },   "explain": true,   "from": 0 } </code></pre>  <p>I am expecting to get different scores here, depending on whether "name" field contain "men" or "man". Such documents are present in index for sure.</p>  <p>Moreover, if I am specifying "explain": true, I am getting score shown in explaination different to one shown in _score field of hit:</p>  <pre><code>{       "_shard":0,     "_node":"ro26nlDuTfiTaIlIgHqg4g",     "_index":"products10",     "_type":"product_basic",     "_id":"0c25fc90433481aac0cce62dd1a21e06",     "_score":1,     "_source":{           "category":[               "Chicago Blues",             "Blues",             "Styles",             "Digital Music"         ],         "site_name":"www.amazon.com",         "name":"Who's That Women?",         "url":"http://rads.stackoverflow.com/amzn/click/B001125F8I",         "price":0.99,         "reviews":[            ],         "breadcrumb":"Digital Music",         "in_stock":true,         "features":[            ],         "pic_urls":[               "http://ecx.images-amazon.com/images/I/51CvgPMwtsL.jpg",             "http://ecx.images-amazon.com/images/I/51CvgPMwtsL.jpg"         ],         "name_semantic_core":[               "Women ?",             "?"         ],         "category_path":"/Chicago Blues/Blues/Styles/",         "visit_datetime":"2014-11-04T11:50:34.169779",         "detected_category":"Digital Music"     },     "_explanation":{           "value":1.2249949,         "description":"function score, no filter match, product of:",         "details":[               {                   "value":1.2249949,                 "description":"product of:",                 "details":[                       {                           "value":2.4499898,                         "description":"sum of:",                         "details":[                               {                                   "value":2.4499898,                                 "description":"weight(name:women in 6181332) [PerFieldSimilarity], result of:",                                 "details":[                                       {                                           "value":2.4499898,                                         "description":"score(doc=6181332,freq=1.0), product of:",                                         "details":[                                               {                                                   "value":0.67790973,                                                 "description":"queryWeight, product of:",                                                 "details":[                                                       {                                                           "value":7.228071,                                                         "description":"idf(docFreq=238699, maxDocs=120967660)"                                                     },                                                     {                                                           "value":0.09378847,                                                         "description":"queryNorm"                                                     }                                                 ]                                             },                                             {                                                   "value":3.6140356,                                                 "description":"fieldWeight in 6181332, product of:",                                                 "details":[                                                       {                                                           "value":1,                                                         "description":"tf(freq=1.0), with freq of:",                                                         "details":[                                                               {                                                                   "value":1,                                                                 "description":"termFreq=1.0"                                                             }                                                         ]                                                     },                                                     {                                                           "value":7.228071,                                                         "description":"idf(docFreq=238699, maxDocs=120967660)"                                                     },                                                     {                                                           "value":0.5,                                                         "description":"fieldNorm(doc=6181332)"                                                     }                                                 ]                                             }                                         ]                                     }                                 ]                             }                         ]                     },                     {                           "value":0.5,                         "description":"coord(1/2)"                     }                 ]             },             {                   "value":1,                 "description":"queryBoost"             }         ]     } } </code></pre>  <p>Here explanation shows "value":1.2249949, while "_score" is 1.</p>  <p>What am I doing wrong? How can I get actual scores calculated using functinon_score functions [before combining with original query scores]?</p>  <p><strong>Update:</strong> Here's what I get if matching product is found. For some reason, score is 1 while it should be 2: <a href="http://i.stack.imgur.com/m8Ok1.png" rel="nofollow"><img src="http://i.stack.imgur.com/m8Ok1.png" alt="explanation for a matching product"></a></p>