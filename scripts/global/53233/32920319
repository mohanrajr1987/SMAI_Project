<p>I am using AlertDialog with Multiple choice to show list of check-able items.</p>  <p>When user selects some of values, I can get theirs index and save it to list. That is working fine. </p>  <p>But I want when user again open AlertDialog to have selected/checked values that he selected before.</p>  <p>Here is the code:</p>  <pre><code> AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());     builder.setMultiChoiceItems(R.array.array_cousine, null,             new DialogInterface.OnMultiChoiceClickListener() {                  @Override                 public void onClick(DialogInterface dialog, int indexSelected,                                     boolean isChecked) {                     if (isChecked) {                         seletedItems.add(++indexSelected);                     } else if (seletedItems.contains(indexSelected)) {                            seletedItems.remove(Integer.valueOf(++indexSelected));                     }                 }             })             // Set the action buttons             .setPositiveButton("OK", new DialogInterface.OnClickListener() {                 @Override                 public void onClick(DialogInterface dialog, int id) {                       String[] expList = getResources().getStringArray(R.array.array_cousine);                      for (int i = 0; i &lt; seletedItems.size(); i++) {                         int selected = seletedItems.get(i);                         String selectedString = expList[selected - 1];                         selectedItemsName.add(selectedString);                     }                      StringBuilder stringBuilder = new StringBuilder();                      for (int j = 0; j &lt; selectedItemsName.size(); j++) {                         String text = selectedItemsName.get(j);                          stringBuilder = stringBuilder.append(" "+text);                      }                      Log.d("TAG", "String builder: " + stringBuilder);                     tvCusine.setText(stringBuilder);                      dialog.dismiss();                  }             })             .setNegativeButton("Cancel", new DialogInterface.OnClickListener() {                 @Override                 public void onClick(DialogInterface dialog, int id) {                     dialog.dismiss();                 }             });      Dialog dialog = builder.create();//AlertDialog dialog;     dialog.show(); </code></pre>  <p>Here is the picture:</p>  <p><a href="http://i.stack.imgur.com/nxtYv.png" rel="nofollow"><img src="http://i.stack.imgur.com/nxtYv.png" alt="enter image description here"></a></p>