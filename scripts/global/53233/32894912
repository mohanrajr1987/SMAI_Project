<p>Hamburger icon is not showing up when the app is launched. However, the code for drawer is working and I need to click on top left corner.</p>  <p>I have looked at several solutions on stackoverflow but none worked. Is this a good way ? I am not adding this drawer in other pages, only in Main Activity. </p>  <p>Drawer Activity</p>  <pre><code>package co.abc.www.def.activity;   import android.content.Intent; import android.support.v4.widget.DrawerLayout; import android.support.v7.app.AppCompatActivity; import android.support.v7.app.ActionBarDrawerToggle; import android.os.Bundle; import android.support.v7.widget.Toolbar; import android.view.Menu; import android.view.MenuItem; import android.view.View; import android.widget.AdapterView; import android.widget.ArrayAdapter; import android.widget.FrameLayout; import android.widget.ListView;  import co.abc.www.def.R;  public class DrawerActivity extends AppCompatActivity {      protected FrameLayout frameLayout;      protected ListView mDrawerList;      protected String[] listArray = {"Home","Tips", "Selfie"};      protected static int position;      /**      *  This flag is used just to check that launcher activity is called first time      *  so that we can open appropriate Activity on launch and make list item position selected accordingly.      * */     private static boolean isLaunch = true;      protected DrawerLayout mDrawerLayout;       private ActionBarDrawerToggle actionBarDrawerToggle;      @Override     protected void onCreate(Bundle savedInstanceState) {         super.onCreate(savedInstanceState);         setContentView(R.layout.activity_drawer);          Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);         if (toolbar != null) {             setSupportActionBar(toolbar);         }          frameLayout = (FrameLayout)findViewById(R.id.content_frame);         mDrawerLayout = (DrawerLayout) findViewById(R.id.drawer_layout);         mDrawerList = (ListView) findViewById(R.id.left_drawer);          // set a custom shadow that overlays the main content when the drawer opens         //mDrawerLayout.setDrawerShadow(R.drawable.drawer_shadow, GravityCompat.START);          // set up the drawer's list view with items and click listener         mDrawerList.setAdapter(new ArrayAdapter&lt;String&gt;(this, R.layout.drawer_list_item, listArray));         mDrawerList.setOnItemClickListener(new AdapterView.OnItemClickListener() {              @Override             public void onItemClick(AdapterView&lt;?&gt; parent, View view,                                     int position, long id) {                  openActivity(position);             }         });          // enable ActionBar app icon to behave as action to toggle nav drawer         assert getSupportActionBar()!=null;         getSupportActionBar().setHomeButtonEnabled(false);         getSupportActionBar().setDisplayHomeAsUpEnabled(false);         getSupportActionBar().setHomeAsUpIndicator(R.drawable.ic_drawer);          actionBarDrawerToggle = new ActionBarDrawerToggle(                 this,                 mDrawerLayout,                 R.string.drawer_open,                 R.string.drawer_close){             @Override             public void onDrawerClosed(View drawerView) {                 getSupportActionBar().setHomeAsUpIndicator(R.drawable.ic_drawer);                 invalidateOptionsMenu(); // creates call to onPrepareOptionsMenu()                 super.onDrawerClosed(drawerView);             }              @Override             public void onDrawerOpened(View drawerView) {                 getSupportActionBar().setTitle(getString(R.string.app_name));                 getSupportActionBar().setHomeAsUpIndicator(R.drawable.ic_hamburger);                 invalidateOptionsMenu(); // creates call to onPrepareOptionsMenu()                 super.onDrawerOpened(drawerView);             }              @Override             public void onDrawerSlide(View drawerView, float slideOffset) {                 super.onDrawerSlide(drawerView, slideOffset);             }              @Override             public void onDrawerStateChanged(int newState) {                 super.onDrawerStateChanged(newState);             }         };         actionBarDrawerToggle.syncState();         mDrawerLayout.setDrawerListener(actionBarDrawerToggle);          /**          * As we are calling BaseActivity from manifest file and this base activity is intended just to add navigation drawer in our app.          * We have to open some activity with layout on launch. So we are checking if this BaseActivity is called first time then we are opening our first activity.          * */         if(isLaunch){             /**              *Setting this flag false so that next time it will not open our first activity.              *We have to use this flag because we are using this BaseActivity as parent activity to our other activity.              *In this case this base activity will always be call when any child activity will launch.              */             isLaunch = false;             openActivity(0);         }      }      protected void openActivity(int position){         /**          * We can set title &amp; itemChecked here but as this BaseActivity is parent for other activity,          * So whenever any activity is going to launch this BaseActivity is also going to be called and          * it will reset this value because of initialization in onCreate method.          * So that we are setting this in child activity.          */         //mDrawerList.setItemChecked(position, true);         //setTitle(listArray[position]);         mDrawerLayout.closeDrawer(mDrawerList);         DrawerActivity.position=position;         switch(position){             case 0:                 startActivity(new Intent(this, MainActivity.class));                 break;              case 1:                 startActivity(new Intent(this, FavouriteTipsActivity.class));                 break;              case 2:                 startActivity(new Intent(this, SelfieActivity.class));                 break;             default:                 break;         }      }      /*     @Override     public boolean onCreateOptionsMenu(Menu menu) {         // Inflate the menu; this adds items to the action bar if it is present.         getMenuInflater().inflate(R.menu.menu_drawer, menu);         return super.onCreateOptionsMenu(menu);     }*/      @Override     public boolean onOptionsItemSelected(MenuItem item) {         // The action bar home/up action should open or close the drawer.         // ActionBarDrawerToggle will take care of this.         if (actionBarDrawerToggle.onOptionsItemSelected(item)) {             return true;         }          switch (item.getItemId()) {             case R.id.action_settings:                 return true;              default:                 return super.onOptionsItemSelected(item);         }     }     /* Called whenever we call invalidateOptionsMenu() */     @Override     public boolean onPrepareOptionsMenu(Menu menu) {         // If the nav drawer is open, hide action items related to the content view         boolean drawerOpen = mDrawerLayout.isDrawerOpen(mDrawerList);         //menu.findItem(R.id.action_settings).setVisible(!drawerOpen);         return super.onPrepareOptionsMenu(menu);     }      /* We can override onBackPressed method to toggle navigation drawer*/     @Override     public void onBackPressed() {         if(mDrawerLayout.isDrawerOpen(mDrawerList)){             mDrawerLayout.closeDrawer(mDrawerList);         }else {             finish();         }     } } </code></pre>  <p>Drawer XML </p>  <pre><code>    &lt;!--       Base activity layout for adding Navigation Drawer in our application.     We will use this layout in BaseActivity for showing navigation drawer and Navigation List Item.     We are going to extend our all the Activities from this BaseActivty so by default every activity will have this layout.     For adding other layout in our activty we have to use below "FrameLayout", as we can not add "setContentView" in this activities.     We will use layout inflater to add our layout in below framelayout.       Code example is below:::::          getLayoutInflater().inflate(R.layout.activity_main, frameLayout);  --&gt; &lt;android.support.v4.widget.DrawerLayout     xmlns:android="http://schemas.android.com/apk/res/android"     android:id="@+id/drawer_layout"     android:layout_width="match_parent"     android:layout_height="match_parent" &gt;      &lt;FrameLayout         android:id="@+id/content_frame"         android:layout_width="match_parent"         android:layout_height="match_parent"&gt;         &lt;android.support.v7.widget.Toolbar             android:id="@+id/toolbar"             android:minHeight="?attr/actionBarSize"             android:layout_width="match_parent"             android:layout_height="wrap_content"             android:background="@color/Home_screen_maroon"&gt;         &lt;/android.support.v7.widget.Toolbar&gt;     &lt;/FrameLayout&gt;      &lt;ListView         android:id="@+id/left_drawer"         android:layout_width="240dp"         android:layout_height="match_parent"         android:layout_gravity="start"         android:background="@color/Home_screen_maroon"         android:choiceMode="none"         android:divider="@android:color/transparent"         android:dividerHeight="0dp" /&gt;  &lt;/android.support.v4.widget.DrawerLayout&gt; </code></pre>  <p>Main Activity will inherit from Drawer Activity and it is failing</p>  <pre><code>package co.abc.www.def.activity;  import android.content.Intent; import android.os.Bundle; import android.os.Environment; import android.support.v7.widget.Toolbar; import android.text.Html; import android.view.ContextThemeWrapper; import android.view.View;  import co.abc.www.def.R; import android.widget.TextView;  import java.io.File; import java.io.IOException; import java.text.DateFormat; import java.text.DecimalFormat; import java.util.Date; import java.util.List; import java.util.Locale; import java.util.Timer; import java.util.TimerTask;  public class MainActivity extends DrawerActivity {     private TextView tv;      @Override     public void onCreate(Bundle savedInstanceState) {         super.onCreate(savedInstanceState);         //setContentView(R.layout.activity_main);         getLayoutInflater().inflate(R.layout.activity_main, frameLayout);         tv=(TextView)findViewById(R.id.tv);     }     @Override     protected void onStart() {         super.onStart();     }      @Override     public void onResume() {         super.onResume();     }      @Override     protected void onPause() {         super.onPause();     }     @Override     protected void onStop() {         super.onStop();     }  } </code></pre>  <p>Main.xml </p>  <pre><code>    &lt;?xml version="1.0" encoding="utf-8"?&gt; &lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"                 xmlns:tools="http://schemas.android.com/tools" android:layout_width="match_parent"                 android:layout_height="match_parent" android:paddingLeft="@dimen/activity_horizontal_margin"                 android:paddingRight="@dimen/activity_horizontal_margin"                 android:paddingTop="@dimen/activity_vertical_margin"                 android:paddingBottom="@dimen/activity_vertical_margin"                 android:background="@color/Home_screen_bg"                 tools:context="co.abc.www.def.activity.MainActivity"                 android:id="@+id/relative_layout_main"     android:orientation="vertical"&gt;             &lt;TextView                 android:id="@+id/tv"                 android:layout_width="wrap_content"                 android:layout_height="wrap_content"                 android:text=""                 android:gravity="center"                 android:textSize="@dimen/fourteen_sp"                 android:textStyle="bold"                 android:textColor="@color/black" /&gt;  &lt;/LinearLayout&gt; </code></pre>