<p>I implement a simply CmdMessenger example to permits Arduino communicate with PC via serial port. </p>  <p>The program intent to listen to serial waiting for the command '0;'. When this command is typed, Arduino reads a temperature sensor and write temperature result to serial. </p>  <p>It work's fine from serial monitor, but I cannot use it with PYthon using pySerial. I think I'm doing something wrong in python implementation, below is the code snippet: EDiTED: the code below runs as expected if I run in debug mode (on PyCharm). I put a breakpoint at beggining on this line:</p>  <pre><code>    if (not self.serialConnection.isOpen()): ... </code></pre>  <p>and run with 'Resume Program' from there and it works. I don't know why it don't run in 'Normal Mode'.</p>  <pre><code>import serial import time  class Temperature:     def __init__(self, comPath='/dev/ttyACM0', bauds=115200):         self.serialConnection = serial.Serial(comPath, bauds, parity=serial.PARITY_ODD, stopbits=serial.STOPBITS_TWO,                                               bytesize=serial.SEVENBITS)      def queryTemperature(self):         if (not self.serialConnection.isOpen()):             self.serialConnection.open()          # prints True:         print self.serialConnection.isOpen()         self.serialConnection.write("0;\n")         time.sleep(2)         while self.serialConnection.inWaiting() == 0:             pass         # don't reach this point. It stops on loop above         time.sleep(2)         iw = self.serialConnection.inWaiting()         temp = (self.serialConnection.read(iw))         self.serialConnection.close()         return temp </code></pre>  <p>and the call of the method queryTemperature: </p>  <pre><code>from temp_read import * dObject = Temperature('COM3') print dObject.queryTemperature(); </code></pre>  <p>the program doesn't finish. It seems that it stops on the loop:</p>  <pre><code>        while self.serialConnection.inWaiting() == 0:             pass </code></pre>  <p>bellow is the arduino sketch:</p>  <pre><code>#include &lt;CmdMessenger.h&gt; #include &lt;OneWire.h&gt; #include &lt;DallasTemperature.h&gt;  int pinTemp = 13;  CmdMessenger cmdMessenger = CmdMessenger (Serial); OneWire oneWire (pinTemp); DallasTemperature sensors (&amp;oneWire);   enum {   kReadTemperature,     kStatus, };  void attachCommandCallbacks (){   cmdMessenger.attach (onUnknownCommand);   cmdMessenger.attach (kReadTemperature, onReadTemperature);   }  void onStatus (){   Serial.println ("status");  }  void onUnknownCommand (){   Serial.println ("unknow"); }  void onReadTemperature (){   Serial.println ("readTemp");   sensors.requestTemperatures();   delay (1500);   float temp = sensors.getTempCByIndex(0);           cmdMessenger.sendCmd(kStatus, (float) temp);  }  void setup() {  Serial.begin(115200);   sensors.begin (); cmdMessenger.printLfCr();    attachCommandCallbacks();   }  void loop() {   cmdMessenger.feedinSerialData();   } </code></pre>