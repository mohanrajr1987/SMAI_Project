<p>I'm trying to define an array of function pointers, where each function contains an <code>int</code> parameter. I'm also trying to set the value of that int parameter in the array declaration</p>  <p>So I have a <code>TIMED_TASK</code> struct, that will hold the function pointer and value I want to pass</p>  <pre><code>typedef struct {    void (*proc)(int);      int delayMsec;      } TIMED_TASK; </code></pre>  <p>Then I have an array of <code>TIMED_TASK</code>s like this</p>  <pre><code>static const TIMED_TASK attractSequence[] = {     { LightsOn, 1000 },     { LightsOff, 500 },     { EndSequence, 0 } }; </code></pre>  <p>And I'd like it to call each of those functions in turn, passing the delay value to each function. This is where I expect I have the wrong syntax (I'm still learning C). I seemingly don't hit my <code>LightsOn()</code> routine at all</p>  <pre><code>void loop() // It's an arduino project :) {   attractSequence[sequence];   sequence++; }  void LightsOn(int pause) {   // I do not hit this routine for some reason?   Serial.print("LIGHTS ON");    Serial.print(pause); }  void LightsOff(int pause) {   Serial.print("LIGHTS OFF");   Serial.print(pause); } </code></pre>  <p>It's entirely possible I'm taking the wrong approach here, but hopefully you can see what I'm trying to achieve. Any advice very welcome!</p>