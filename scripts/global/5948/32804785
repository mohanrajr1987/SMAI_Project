<p>I'm trying to request temperatures from my DS18B20 sensor to post on plot.ly, but it seems my loop function is only running once; after connecting to plot.ly and creating the graph, the temperature is printed once in the serial monitor and does not seem to continue! Any help is greatly appreciated. Here is my code:</p>  <pre><code>#include &lt;Adafruit_CC3000.h&gt; #include &lt;ccspi.h&gt; #include &lt;SPI.h&gt; #include &lt;plotly_streaming_cc3000.h&gt; #include &lt;OneWire.h&gt; #include &lt;DallasTemperature.h&gt;   #define WLAN_SSID       "wifi" #define WLAN_PASS       "********" #define WLAN_SECURITY   WLAN_SEC_WPA2  OneWire  oneWire(10); DallasTemperature sensors(&amp;oneWire);  #define nTraces 1  char *tokens[nTraces] = {"token"};  plotly graph("username", "token", tokens, "filename", nTraces);   void wifi_connect(){   /* Initialise the module */   Serial.println(F("\n... Initializing..."));   if (!graph.cc3000.begin())   {     Serial.println(F("... Couldn't begin()! Check your wiring?"));     while(1);   }    // Optional SSID scan   // listSSIDResults();    if (!graph.cc3000.connectToAP(WLAN_SSID, WLAN_PASS, WLAN_SECURITY)) {     Serial.println(F("Failed!"));     while(1);   }    Serial.println(F("... Connected!"));    /* Wait for DHCP to complete */   Serial.println(F("... Request DHCP"));   while (!graph.cc3000.checkDHCP())   {     delay(100); // ToDo: Insert a DHCP timeout!      unsigned long aucDHCP = 14400; unsigned long aucARP = 3600; unsigned long aucKeepalive = 10; unsigned long aucInactivity = 20; if (netapp_timeout_values(&amp;aucDHCP, &amp;aucARP, &amp;aucKeepalive, &amp;aucInactivity) != 0) {   Serial.println("Error setting inactivity timeout!"); }    } }   void setup() {   graph.maxpoints = 100;   Serial.begin(9600);   sensors.begin();    while (!Serial) {     ; // wait for serial port to connect. Needed for Leonardo only   }    wifi_connect();    bool success;   success = graph.init();   if(!success){while(true){}}   graph.openStream(); }  void loop(void) {     Serial.print("Requesting temperatures...");     sensors.requestTemperatures();     Serial.println("DONE");     Serial.print("Temperature for Device 1 is: ");     Serial.print(sensors.getTempFByIndex(0));     graph.plot(millis(), sensors.getTempFByIndex(0), tokens[0]);     delay(500); } </code></pre>