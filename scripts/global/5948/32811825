<p>I need help with creating a the read method. The read function will read thousands of times continuously, and i want the code to see if any of the code is same as the start bit. For instance, it could be transmitting the following 1100110101... and the read function should realize that the first 4 bit transmissions are not where the startbit starts, but rather from the 5th transmission and then continue reading from there.</p>  <pre><code>int tx_pin; int rx_pin; WirelessComm::WirelessComm(int rxPin, int txPin) { pinMode(rxPin, INPUT); tx_pin = txPin; rx_pin = rxPin;  }  int countDigit(long n) { int count = 0; while (n &gt; 0) {     n /= 10;     count++; } return count; }  void getDigit(char *data, long num) { int cd = countDigit(num); long shift = 1; for (int i = 0; i &lt; cd; i++) {     data[i] = (num / shift) % 10;     shift *= 10; } }  int writeTx(long nibble) {    int i; char data[11]; // warning: I didn't check for buffer overrun! int32_t startBit = 110101L; // larger than 32767, so cannot be in int if(nibble != 0) {     int sbLen = countDigit(startBit);     for (int i = 0; i &lt; (int)(sizeof(data) / sizeof(data[0])); i++) data[i]= 0;     getDigit(data, startBit);     getDigit(data + sbLen, nibble); } else     return -1;  for(i = 0; i &lt; 10; i++) {     if(data[i] == 1)     {         digitalWrite(tx_pin, HIGH);     }     else     {         digitalWrite(tx_pin, LOW);     }  } return 1; }  int readRx(long nibble) { int 1st = digitalRead(rx_pin); int 2nd = digitalRead(rx_pin); int 3rd = digitalRead(rx_pin);  } </code></pre>