<pre><code>int main() {     int n,i,x,j;     queue q;     stack s;     clock_t start,end;     q=create_queue();     printf("\nNO. OF PEOPLE IN QUEUE");     scanf("%d",&amp;n);     printf("\nHEIGHTS OF PEOPLE IN QUEUE");     for(i=1;i&lt;=n;i++)     {         /*x=rand()%50+1;         printf("%d\t",x);*/         scanf("%d",&amp;x);         q=enqueue(q,x);     }     for(i=0;i&lt;n;i++)     {         s=make_stack_empty();         s=push(s,retrive_element(q,i));         for(j=0;j&lt;i;j++)         {             x=retrive_element(q,j);             if(x==pop(s))             {                 s=push(s,x);             }         }         printf("%d\t",get_count(s)-1);         s=make_stack_empty();         s=push(s,retrive_element(q,i));         for(j=i+1;j&lt;n;j++)         {             x=retrive_element(q,j);             if(x==pop(s))             {                 s=push(s,x);             }         }         printf("%d\n",get_count(s)-1);     }     return 0; } </code></pre>  <p>the problem gets heights of n people as input its output is number of people of same height before and after any i'th person i have used stacks and queues. Iteration could have been used but i preferred to stacks. is there any other way to solve the problem? question was posted in spoj.com but my answer was marked wrong. i'm getting correct output but isnt the code efficient?</p>