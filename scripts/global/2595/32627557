<p>I'm currently trying to replicate the css filter "hue-rotate", which produces the same as svg feColorMatrix "hueRotate" across browsers, on the server. I looked at the spec, the firefox implementation and the webkit implementation. I ported each algorithm to ruby, but the results are still different from what I see in my browsers.</p>  <p>I have put togehter a little <a href="https://jsfiddle.net/081xrgeo/1/" rel="nofollow">jsfiddle</a> to see the differences for an example image.</p>  <pre><code>&lt;body&gt; &lt;p&gt;Original image:&lt;/p&gt; &lt;div class="image"&gt;&lt;/div&gt; &lt;p&gt;Browser filtered image: (&lt;- I need this generated on the server!&lt;/p&gt; &lt;div class="image hue-90" &gt;&lt;/div&gt; &lt;p&gt;Webkit/spec algorithm image:&lt;/p&gt; &lt;div class="webkit-algorithm-result"&gt;&lt;/div&gt; &lt;/body&gt; </code></pre>  <p>And here's the plain <a href="http://codepad.org/Km9TfabU" rel="nofollow">ruby-code</a> to convert the image.</p>  <p>The question is: What is the secret ingredient? Why is the resulting image still different?</p>  <p>PS: Even though algorithms of firefox and webkit are slightly different, the result is the same. I tried image magick and gimp which are produce equal results but are again different from browser results AND different from the assumed algorithms above. Phantomjs has other bugs.</p>  <p><a href="https://hg.mozilla.org/mozilla-central/file/390d478480f9/gfx/src/FilterSupport.cpp" rel="nofollow">Firefox Implementation</a></p>  <p><a href="https://github.com/WebKit/webkit/blob/fb3c15607f80e19d7d3773e0cbcabe5bb2d6125e/Source/WebCore/platform/graphics/texmap/TextureMapperShaderProgram.cpp" rel="nofollow">Webkit Implementation</a></p>  <p><a href="http://www.w3.org/TR/SVG/filters.html#feColorMatrixElement" rel="nofollow">Spec</a></p>