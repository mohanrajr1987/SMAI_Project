<p>Ok so I have been struggling to get django-datatables-view to work for some time now. I am finally getting some data loaded onto the table, but only the first 10 rows, and nothing else.</p>  <p>URLS.py</p>  <pre><code>url(r'^order_list_json/$', views.OrderListJson.as_view(), name='order_list_json'), url(r'^test_view/$', views.test_view, name='test_view'), </code></pre>  <p>VIEWS.PY</p>  <pre><code>class OrderListJson(BaseDatatableView):     max_display_length = 500      def get_initial_queryset(self):         print "GET INITIAL QUERY SET"         current_user = self.request.user     # return queryset used as base for futher sorting/filtering     # these are simply objects displayed in datatable     # You should not filter data returned here by any filter values entered by user. This is because     # we need some base queryset to count total number of records.         return CustomRequests.get_all_requests()      def render_column(self, row, column):         # We want to render user as a custom column         if column == 'user':             return '{0} {1}'.format(row.customer_firstname, row.customer_lastname)         else:             return super(OrderListJson, self).render_column(row, column)      def filter_queryset(self, qs):         # use parameters passed in GET request to filter queryset          # simple example:         search = self.request.GET.get(u'search[value]', None)         if search:             qs = qs.filter(name__istartswith=search)          # more advanced example using extra parameters         filter_customer = self.request.GET.get(u'customer', None)          if filter_customer:             customer_parts = filter_customer.split(' ')             qs_params = None             for part in customer_parts:                 q = Q(customer_firstname__istartswith=part)|Q(customer_lastname__istartswith=part)                 qs_params = qs_params | q if qs_params else q             qs = qs.filter(qs_params)         return qs      def prepare_results(self, qs):         # prepare list with output column data         # queryset is already paginated here         json_data = []         for item in qs:             json_data.append([                 item.request.display_id,                 item.request.name             ])         return json_data  def test_view(request):     return render(request, 'core/data_table.html', {'datatable': OrderListJson}   ) </code></pre>  <p>TEMPLATE:</p>  <pre><code>{% block js %}  &lt;script type="text/javascript" src="{{ STATIC_URL }}theme/global/plugins/data-tables/jquery.dataTables.js"&gt;&lt;/script&gt; &lt;script type="text/javascript" src="{{ STATIC_URL }}theme/global/plugins/data-tables/DT_bootstrap.js"&gt;&lt;/script&gt;  &lt;script type="text/javascript"&gt;      $(document).ready(function() {           $('#in_progress_table').dataTable({              "bProcessing": true,              "sAjaxDataProp": 'data',              "sAjaxSource": "{% url 'order_list_json' %}",          }); });   &lt;/script&gt; {% endblock %}  &lt;div class="table-responsive"&gt; &lt;table class="table table-striped table-boardered table-hover dataTable" id="in_progress_table"&gt;       &lt;thead&gt;            &lt;tr&gt;                &lt;th&gt;&lt;/th&gt;                &lt;th&gt;ID&lt;/th&gt;            &lt;/tr&gt;       &lt;/thead&gt;       &lt;tbody&gt;                                                 &lt;/tbody&gt;         &lt;/table&gt; &lt;/div&gt; </code></pre>  <p>So I am not sure if I am going about this in the right way or not, I am passing a orderlist object to my view in the context, but when i try to display it i just get</p>  <pre><code>&lt;core.views.OrderListJson object at 0x1059e7d10&gt; </code></pre>  <p>And if i try to iterate through it to display it, i get an object is not iterable error.</p>  <p>So I am trying to use javascript, but it only loads the first 10 results and none of the functionality of it works.</p>  <p>I am using django-datatables-view 1.12.1</p>  <p>Any help or tips would be very very appreciated!!</p>