<p>I have the following code:</p>  <pre><code>$("#add-new-size-grp").click( function (event) {     event.preventDefault();     $.ajax({         type: "get",         url:"ajax-get-sizes.php",         success: function(result){             $("#sizegrp-table").html(result);             var sizegrpSizesTable = $('#tbl-sizegrp-sizes').DataTable();             //iCheck for checkbox and radio inputs             $('input[type="checkbox"]').iCheck({               checkboxClass: 'icheckbox_polaris',               radioClass: 'iradio_polaris'             });              $("#modalNewSizeGrp").modal();         }     }); }); </code></pre>  <p>Which, in a nutshell, retrieves a chunk of data and from that forms a jQuery <a href="https://www.datatables.net" rel="nofollow">DataTable</a>. This is then returned and shoved into a DIV in the calling page.</p>  <p>The section which starts <code>$('input[type="checkbox"]').iCheck({</code> uses the <a href="http://fronteed.com/iCheck/" rel="nofollow" title="iCheck">iCheck</a> plugin to format the checkboxes which are the first column of the table.</p>  <p>This works perfectly for the first page of data. However, when the user moves to another page, or changes the page length, the newly displayed checkboxes do not have the formatting applied.</p>  <p>I have looked at using the <code>page</code> event to apply the formatting, but can't get it to work properly. Code I have tried is as follows:</p>  <pre><code>$('#tbl-sizegrp-sizes').on( 'page.dt', function () {     var dtable = $('#tbl-sizegrp-sizes').DataTable();     var info = dtable.page.info();     $('input[type="checkbox"]').iCheck({       checkboxClass: 'icheckbox_polaris',       radioClass: 'iradio_polaris'     });  }); </code></pre>  <p>What am I doing wrong?</p>  <p>-- EDIT --</p>  <p>As requested, here is a <a href="https://jsfiddle.net/m4x0u18a/1/" rel="nofollow">fiddle</a> demonstrating the problem. Notice the styled checkboxes on page 1, then switch to any other page.</p>