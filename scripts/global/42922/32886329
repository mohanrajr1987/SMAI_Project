<p>I have created a custom module in Drupal 7. The purpose of the mod is to create some records from the back end and show the records on the front end as a block. I can add/edit/delete/show the records through this module. I have also assigned this mod  to the "Content" region in Block section through the back end. However, the records are not coming on the front end. The entire code of the custom build module is given below.</p>  <p><div class="snippet" data-lang="js" data-hide="false"> <div class="snippet-code"> <pre class="snippet-code-html lang-html prettyprint-override"><code>&lt;?php  /** * @file * Custom functions for this site. */  /** * Implements hook_menu(). */ function my_custom_banner_menu() { $items['admin/custom/my_custom_banner/show'] = array( 'title' =&gt; 'My Custom Table', 'description' =&gt; 'View My Custom Banner.', 'page callback' =&gt; 'my_custom_banner_sort_with_pager_content', 'access arguments' =&gt; array('access my_custom_banner'), 'weight' =&gt; -14, );   $items['admin/custom/my_custom_banner/%/add'] = array( 'title' =&gt; 'My Custom Table', 'description' =&gt; 'View My Custom Table.', 'page callback' =&gt; 'my_custom_banner_add_func', 'access arguments' =&gt; array('access my_custom_banner'), 'weight' =&gt; -14, );  $items['admin/custom/my_custom_banner/%/edit'] = array( 'title' =&gt; 'My Custom Table', 'description' =&gt; 'View My Custom Table.', 'page callback' =&gt; 'my_custom_banner_edit_block_view', 'page argument' =&gt; array(3), 'access arguments' =&gt; array('access my_custom_banner'), 'weight' =&gt; -14, );  $items['admin/custom/my_custom_banner/%/delete'] = array( 'title' =&gt; 'My Custom Table', 'description' =&gt; 'View My Custom Table.', 'page callback' =&gt; 'my_custom_delete', 'page argument' =&gt; array(3), 'access arguments' =&gt; array('access my_custom_banner'), 'weight' =&gt; -14, );   $items['admin/custom/my_custom_banner'] = array( 'title' =&gt; 'My Custom Table', 'description' =&gt; 'View My Custom Table.', 'page callback' =&gt; 'my_custom_banner_sort_with_pager_content', 'access arguments' =&gt; array('access my_custom_banner'), 'weight' =&gt; -14, );   return $items;  // return $items; }  /** * Implements hook_block_view(). */ function my_custom_banner_block_view($block_name = '') { #echo "show"; // in my example I show the form only in the front page. // You can show it where you want, obviously  /** if (drupal_is_front_page()) { return NULL; }   * */    $header = array( array('data' =&gt; t('Custom id'), 'field' =&gt; 'id', 'sort' =&gt; 'asc'), array('data' =&gt; t('Title'), 'field' =&gt; 'title'), array('data' =&gt; t('Status'), 'field' =&gt; 'status'), array('data' =&gt; t('Action')), );  $query = db_select('custom_table', 'c'); $query-&gt;fields('c', array('id', 'title', 'status'));  $table_sort = $query-&gt;extend('TableSort') // Add table sort extender. -&gt;orderByHeader($header); // Add order by headers. $pager = $table_sort-&gt;extend('PagerDefault') -&gt;limit(5); $result = $pager-&gt;execute();  $rows = array(); foreach($result as $res){ $rows[] = array($res-&gt;id, $res-&gt;title, $res-&gt;status); }  // If rows are not empty theme and display the rows.  if (!empty($rows)) { $output = theme('table', array('header' =&gt; $header, 'rows' =&gt; $rows, 'attributes' =&gt; array('id' =&gt; 'sort-table'))); $output .= theme('pager'); } else { $output .= t("No results found"); }     $block['my_custom_banner'] .= theme('item_list', array(     'items' =&gt; $output   ));      return $block;      }  function my_custom_banner_form($form, &amp;$form_state) { // now I add a text field to the form $form['my_custom_banner_title'] = array( '#type' =&gt; 'textfield', '#title' =&gt; t('Title'), '#description' =&gt; t('The Title of the My Custom Table.'), '#size' =&gt; 40, '#maxlength' =&gt; 120, '#required' =&gt; TRUE, );  // Textarea for the body $form['my_custom_banner_description'] = array( '#type' =&gt; 'textarea', '#rows' =&gt; 10, '#columns' =&gt; 40, '#title' =&gt; t('Description'), '#required' =&gt; TRUE, '#description'=&gt; t('The text of My Custom Table .'), );  // Checkbox to indicate. $form['my_custom_active'] = array( '#type' =&gt; 'checkbox', '#title' =&gt; t('Status'), '#description' =&gt; t("Indicates whether the active or inactive."), ); // now I add also a button $form['submit'] = array ( '#type' =&gt; 'submit', '#value' =&gt; t('Save'), ); // and now I assign a my function as handler of the submit event // $form['#validate'][] = 'my_custom_banner_submit_handler'; $form['#submit'][] = 'my_custom_banner_submit_handler'; return $form; }  function my_custom_banner_submit_handler($form, &amp;$form_state) { // this function will be executed after the click // event of the user on the "submit” button. // here I only print a message // you can access a database, redirect, or whatever you want, obviously $error = 1; if ( !isset($form_state['values']['my_custom_banner_title']) || !isset($form_state['values']['my_custom_banner_title']) ) { $error = 0 ; }  if($error){ $my_custom_banner_title = $form_state['values']['my_custom_banner_title']; $my_custom_banner_description = $form_state['values']['my_custom_banner_description']; $nid = db_insert('custom_table') // Table name no longer needs {} -&gt;fields(array( 'title' =&gt; $my_custom_banner_title, 'description' =&gt; $my_custom_banner_description, )) -&gt;execute(); drupal_set_message(t('Record has been added!')); } }   function my_custom_banner_add_func(){ $form = drupal_get_form('my_custom_banner_form'); $block = array ( // 'subject' =&gt; t('Subject'), 'content' =&gt; $form, ); // $block['content'][] .= '&lt;br /&gt;&lt;a href=”add”&gt;Back to Listing&lt;/a&gt;'; return $block; 	 }   function my_custom_banner_sort_with_pager_content() {  	 /** $form = drupal_get_form('my_custom_banner_form'); $block = array ( // 'subject' =&gt; t('Subject'), 'content' =&gt; $form, ); // $block['content'][] .= '&lt;br /&gt;&lt;a href=”add”&gt;Back to Listing&lt;/a&gt;'; return $block; */  $header = array( array('data' =&gt; t('Custom id'), 'field' =&gt; 'id', 'sort' =&gt; 'asc'), array('data' =&gt; t('Title'), 'field' =&gt; 'title'), array('data' =&gt; t('Status'), 'field' =&gt; 'status'), array('data' =&gt; t('Action')), );  $query = db_select('custom_table', 'c'); $query-&gt;fields('c', array('id', 'title', 'status'));  $table_sort = $query-&gt;extend('TableSort') // Add table sort extender. -&gt;orderByHeader($header); // Add order by headers. $pager = $table_sort-&gt;extend('PagerDefault') -&gt;limit(5); $result = $pager-&gt;execute();  $rows = array(); foreach($result as $res){ $rows[] = array($res-&gt;id, $res-&gt;title, $res-&gt;status, "&lt;a href='$res-&gt;id/edit'&gt;Edit&lt;/a&gt; | &lt;a href='$res-&gt;id/delete' onclick='return confirm(\"Are you sure\")'&gt;Delete&lt;/a&gt;"); }  // If rows are not empty theme and display the rows.  if (!empty($rows)) { $output = theme('table', array('header' =&gt; $header, 'rows' =&gt; $rows, 'attributes' =&gt; array('id' =&gt; 'sort-table'))); $output .= theme('pager'); } else { $output .= t("No results found"); } $output .= '&lt;br /&gt;&lt;a href="my_custom_banner/add"&gt;Add new record&lt;/a&gt;'; return $output; }      function my_custom_delete(){ $id = arg(3); $num_updated = db_delete('custom_table') -&gt;condition('id', $id, '=') -&gt;execute(); drupal_set_message(t('Record has been deleted!')); drupal_goto("admin/custom/my_custom_banner/show"); }  /** * Implements hook_block_view(). */ function my_custom_banner_edit_block_view($block_name = '') {  // in my example I show the form only in the front page. // You can show it where you want, obviously   if (drupal_is_front_page()) { return NULL; }    $form = drupal_get_form('my_custom_banner_edit_form');   $block = array ( // 'subject' =&gt; t('Subject'), 'content' =&gt; $form, ); $block['content'][] .= '&lt;br /&gt;&lt;a href="add"&gt;Back to Listing&lt;/a&gt;'; return $block; }      function my_custom_banner_edit_form($form, &amp;$form_state) {  $id = arg(3); $result = db_query('SELECT * FROM {custom_table} WHERE id = :tid', array(':tid' =&gt; $id)); /* foreach($result as $val){ $record = $val; }*/ $record = $result-&gt;fetchObject();  // now I add a text field to the form // with a label and fixed dimensions (you never know…) $form['my_custom_banner_title'] = array( '#type' =&gt; 'textfield', '#title' =&gt; t('Title'), '#value' =&gt; t($record-&gt;title), '#description' =&gt; t('The Title of the My Custom Table.'), '#size' =&gt; 40, '#maxlength' =&gt; 120, '#required' =&gt; TRUE, );  // Textarea for the body $form['my_custom_banner_description'] = array( '#type' =&gt; 'textarea', '#rows' =&gt; 10, '#columns' =&gt; 40, '#title' =&gt; t('Description'), '#value' =&gt; t($record-&gt;description), '#required' =&gt; TRUE, '#description'=&gt; t('The text of My Custom Table .'), ); // hidden for the body $form['id'] = array( '#type' =&gt; 'hidden', '#value' =&gt; t($id), );  // Checkbox to indicate. $form['my_custom_active'] = array( '#type' =&gt; 'checkbox', '#title' =&gt; t('Status'), '#description' =&gt; t("Indicates whether the active or inactive"), ); // now I add also a button $form['submit'] = array ( '#type' =&gt; 'submit', '#value' =&gt; t('Save'), ); // and now I assign a my function as handler of the submit event // $form['#validate'][] = 'my_custom_banner_submit_handler'; $form['#submit'][] = 'my_custom_banner_edit_submit_handler'; return $form; }  function my_custom_banner_edit_submit_handler($form, &amp;$form_state) { // this function will be executed after the click // event of the user on the "submit” button. // here I only print a message // you can access a database, redirect, or whatever you want, obviously $error = 1; if ( !isset($form_state['values']['my_custom_banner_title']) || !isset($form_state['values']['my_custom_banner_title']) ) { $error = 0 ; }  if($error){ $id = $form_state['values']['id']; //var_dump($form_state); $my_custom_banner_title = $form_state['input']['my_custom_banner_title']; $my_custom_banner_description = $form_state['input']['my_custom_banner_description']; $data = array( 'title' =&gt; $my_custom_banner_title, 'description' =&gt; $my_custom_banner_description, ); $num_updated = db_update('custom_table') -&gt;fields($data) -&gt;condition('id', $id, '=') -&gt;execute(); drupal_set_message(t('Record has been Updated!')); } }  /** * Implements hook_permission(). */ function my_custom_banner_permission() { return array( 'access my_custom_banner' =&gt; array( 'title' =&gt; t('View My Custom Table'), // Note: We translate the 'Administer blocks' permission string here with // a separate t() call, to make sure it gets the same translation as when // it's in block_permission(). 'description' =&gt; t('Customizing the My Custom Table requires the !permission-name permission.', array( '!permission-name' =&gt; l(t('Administer blocks'), 'admin/people/permissions', array('fragment' =&gt; 'module-block')), )), ), ); }  function my_custom_banner_block_info() {   $blocks['my_custom_banner'] = array('info' =&gt; t('Custom Banner block'));   return $blocks; }</code></pre> </div> </div> </p>  <p>Awaiting your help.</p>