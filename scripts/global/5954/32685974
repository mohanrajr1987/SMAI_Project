<p><strong>Question:</strong></p>  <p>I am a little confused as to the purpose of the WWDR Intermediate Certificate used in iOS development. After following these steps:</p>  <ol> <li>generate a public/private key pair;</li> <li>generate a certificate signing request (CSR) based on the generated pair, and send it to Apple;</li> <li>receive back a certificate, signed by Apple, that verifies that I own the private key associated with the submitted public key,</li> </ol>  <p>I would already seem to have everything I would need to sign an application (using my private key) and have proved to Apple that I am the owner of the private key. I therefore arrive at the following related questions:</p>  <ul> <li>Why is the WWDR Intermediate Certificate necessary?</li> <li>What information does the WWDR Intermediate Certificate encapsulate?</li> <li>At what stage of the code-signing process is the information encapsulated by the WWDR Intermediate Certificate used, and how?</li> </ul>  <p><strong>Context:</strong></p>  <p>I am an Android developer who has been doing iOS development for the past 3 months. So far, I have built up my understanding of:</p>  <ul> <li>the basic principles of public key cryptography;</li> <li>how PKC allows for the signing of entities;</li> <li>the need for a chain of trust between the individual and a CA for a signature to be useful.</li> </ul>  <p>I have read questions <a href="http://stackoverflow.com/questions/4057241/iphone-what-the-heck-is-a-wwdr-intermediate-certificate">like this one</a> that indicate the WWDR Intermediate Certificate is necessary to validate that all other certificates acquired via CSRs sent to Apple are valid. How is that validation performed? Is downloading an intermediate certificate a typical way to verify that the signer of another certificate is a CA?</p>