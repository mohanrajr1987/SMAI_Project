<p>Hello so I created a InvalidInputExeption exception class and that get used in the setter methods to throw an exception if there is not a valid input</p>  <pre><code>public class kalsi.ContestantInformation {      public void setFirstName(String firstName) throws InvalidInputExeption {         checkInput(firstName, "Please only enter letter in the first name");         this.firstName = firstName.replaceAll("\\s", "").toLowerCase();     }      public void setLastName(String lastName) throws InvalidInputExeption {         checkInput(lastName, "Please only enter letter in the last name");         this.lastName = lastName.replaceAll("\\s", "").toLowerCase();     }      public void setStreetNumber(String streetNumber) throws InvalidInputExeption {         checkInput(streetNumber, "Please only enter numbers in the street number");         this.streetNumber = streetNumber.replaceAll("\\s", "").toLowerCase();     }      public void setStreetName(String streetName) throws InvalidInputExeption {         checkInput(streetName, "Please only enter letter in the street name name");         this.streetName = streetName.replaceAll("\\s", "").toLowerCase();     }      public void checkInput(String s, String message) throws InvalidInputExeption {         char[] array = s.toCharArray();         for (char c : array) {             if (!Character.isLetter(c)) {                 throw new InvalidInputExeption(message);             }         }      }      public void checkInput(int i, String message) throws InvalidInputExeption {         String s = i + "";         char[] array = s.toCharArray();         for (char c : array) {             if (!Character.isDigit(c)) {                 throw new InvalidInputExeption(message);             }         }     } } </code></pre>  <p>And here is the main method in which i invoke the setFirstName using reflection note setFirstName is not the only setter method. all the other methods are in an array of Strings which have the names of the setMethods</p>  <pre><code>public static void main(String[] args)         throws IllegalAccessException, IllegalArgumentException, InvocationTargetException, NoSuchMethodException,         SecurityException, ClassNotFoundException, InstantiationException {     ContestantInformation contestant1 = new ContestantInformation();     String[] questions = { "What is your first name", "What is your last name", "What is your Street Name",             "What is your Sreet Number" };     String[] methods = { "setFirstName", "setLastName", "setStreetName", "setStreetNumber" };     for (int i = 0; i &lt; methods.length; i++) {         do {             try {                 flag = false;                 System.out.println(questions[i]);                 String scannerInput = scanner.nextLine();                 classContestantInfo.getDeclaredMethod(methods[i], stringParameter).invoke(contestant1,                         scannerInput);             } catch (InvocationTargetException e) {                 if (e.getCause() instanceof InvalidInputExeption) {                     System.out.println(e.getMessage());                 }             }         } while (flag);     } } </code></pre>  <p>The problem is when I input something that is not a string it does not re ask the the question or give the error message here is the output.</p>  <blockquote>   <p><code>What is your first name   9   null   What is your last name   </code></p> </blockquote>  <p>it outputs null and moves to the next question even though its supposed to output "Please only enter letter in the first name" and then ask for the user input again</p>  <p>Here is the git clone URL if anyone want to clone the code the program is the RealityShowApplication in the ICS4U repository</p>  <pre><code>https://github.com/simar1998/ICS4U.git </code></pre>