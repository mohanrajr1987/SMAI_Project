<h2>Is <a href="https://developer.apple.com/library/prerelease/mac/documentation/Darwin/Reference/ManPages/man3/wordexp.3.html" rel="nofollow"><code>wordexp</code></a> on <strong>OSX 10.9.5</strong> known to leak memory? And if not, what is wrong with my code?</h2>  <p>On my own local machine running <strong>OSX 10.10.5</strong> I run my code through Valgrind and get <strong>no lost bytes</strong>.</p>  <p><strong>No leaks</strong> on my <strong>Ubuntu Linux</strong> machine either.</p>  <p>However, when I turned on valgrind checks on my <a href="http://www.travis-ci.org" rel="nofollow">travis-ci</a> account that uses <strong>OSX 10.9.5</strong> I suddenly get a leak from memory allocated inside of <a href="https://developer.apple.com/library/prerelease/mac/documentation/Darwin/Reference/ManPages/man3/wordexp.3.html" rel="nofollow"><code>wordexp</code></a> even though I free it using <a href="https://developer.apple.com/library/prerelease/mac/documentation/Darwin/Reference/ManPages/man3/wordexp.3.html" rel="nofollow"><code>wordfree</code></a> as the man page describes:</p>  <pre><code>==8968== LEAK SUMMARY: ==8968==    definitely lost: 1,024 bytes in 1 blocks ==8968==    indirectly lost: 0 bytes in 0 blocks ==8968==      possibly lost: 0 bytes in 0 blocks </code></pre>  <p><strong>OSX 10.9.5</strong> <code>uname</code> output:</p>  <pre><code>Darwin 13.4.0 Darwin Kernel Version 13.4.0: Sun Aug 17 19:50:11 PDT 2014; root:xnu-2422.115.4~1/RELEASE_X86_64 x86_64 </code></pre>  <p><strong>OSX 10.9.5</strong> <code>sw_vers</code> output:</p>  <pre><code>ProductName:    Mac OS X ProductVersion: 10.9.5 BuildVersion:   13F34 </code></pre>  <p><strong>OSX 10.9.5</strong> libc version <strong>1197.1.1</strong> <code>otool -L /usr/lib/libSystem.dylib</code>:</p>  <pre><code>/usr/lib/libSystem.dylib:     /usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1197.1.1) </code></pre>  <p><strong>OSX 10.10.5</strong> libc version <strong>1213.0.0</strong>:</p>  <pre><code>/usr/lib/libSystem.dylib:     /usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1213.0.0) </code></pre>  <p>Relevant code (Please use the link to the full code below if compiling): <a href="https://github.com/JoakimSoderberg/wordexp_test" rel="nofollow">https://github.com/JoakimSoderberg/wordexp_test</a></p>  <pre class="lang-c prettyprint-override"><code>static void xfree(void *p) {     void **pp;     assert(p);      pp = (void **)p;      if (*pp)     {         free(*pp);         *pp = NULL;     } }  char **test_wordexp(const char *cmdline, int *argc) {     char **argv = NULL;     size_t i;     int ret;     wordexp_t p;     memset(&amp;p, 0, sizeof(p));      // Note! This expands shell variables.     if ((ret = wordexp(cmdline, &amp;p, 0)))     {         fprintf(stderr, "wordexp error %d: '%s'\n", ret, cmdline);         return NULL;     }      *argc = p.we_wordc;      if (!(argv = calloc(*argc, sizeof(char *))))     {         fprintf(stderr, "Out of memory!\n");         goto fail;     }      for (i = 0; i &lt; p.we_wordc; i++)     {         if (!(argv[i] = strdup(p.we_wordv[i])))         {             fprintf(stderr, "Out of memory!\n");             goto fail;         }     }      wordfree(&amp;p);      return argv;  fail:     wordfree(&amp;p);      if (argv)     {         for (i = 0; i &lt; (size_t)*argc; i++)         {             xfree(&amp;argv[i]);         }          free(argv);     }      return NULL; } </code></pre>  <p>Full code: <a href="https://github.com/JoakimSoderberg/wordexp_test" rel="nofollow">https://github.com/JoakimSoderberg/wordexp_test</a></p>  <p>Travis job with failed OSX but successful Linux:</p>  <p><a href="https://travis-ci.org/JoakimSoderberg/wordexp_test/builds/83194932" rel="nofollow">https://travis-ci.org/JoakimSoderberg/wordexp_test/builds/83194932</a></p>  <p>Exact line of OSX Travis job with leak error:</p>  <p><a href="https://travis-ci.org/JoakimSoderberg/wordexp_test/jobs/83194937#L78" rel="nofollow">https://travis-ci.org/JoakimSoderberg/wordexp_test/jobs/83194937#L78</a></p>  <p>The <code>wordexp</code> is <a href="https://news.ycombinator.com/item?id=9025572" rel="nofollow">known</a> on OSX for having used Perl in its implementation. But apparently doesn't any more.</p>  <ul> <li><a href="http://opensource.apple.com/source/Libc/Libc-1044.40.1/gen/FreeBSD/wordexp.c" rel="nofollow">Perl version</a></li> <li><a href="http://opensource.apple.com/source/Libc/Libc-1044.1.2/gen/FreeBSD/wordexp.c" rel="nofollow">New verison</a></li> </ul>  <p>Also I did not manage to find the exact source code links that I know is found in the involved libc versions mentioned above.</p>