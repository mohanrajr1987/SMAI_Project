<p>I'd like to:</p>  <ol> <li>insert debug logging statements into my code that I want to be able to turn on and off during development; and</li> <li>then have these statements stripped out entirely in production.</li> </ol>  <p>To accomplish stripping out the logs for production, I've seen that the React project itself uses this idiom:</p>  <pre><code>if ("production" !== process.env.NODE_ENV) {     // warn or log or whatever } </code></pre>  <p>By compiling the modules with <code>process.env.NODE_ENV</code> set to <code>"production"</code> and then running the bundle through a dead code eliminator like UglifyJS, the logs will be eliminated as unreachable.</p>  <p>This is fine, but are there more flexible solutions? I'm thinking something like the <code>debug()</code> Node module, or really some even more powerful, like the Java logging APIs.</p>  <p>I am wondering why I'm not finding a module that combines the <code>("production" !== process.env.NODE_ENV)</code> approach with <code>debug()</code>.</p>