<p>I am having problems with some GLES shaders failing to compile and my app just crashes with "Unfortunately, app has stopped.".  Note this is not all shaders so I am assuming my other code to load and run the shaders is OK.</p>  <p>I have tried adding the following code to my app to detect and display debug info for when a compile fails.</p>  <pre><code>GLES20.glCompileShader(shader); int[] compiled = new int[1]; GLES20.glGetShaderiv(shader, GLES20.GL_COMPILE_STATUS, compiled, 0); if (compiled[0] == 0) {     Log.e("APP", "Could not compile shader");     Log.e("APP", GLES20.glGetShaderInfoLog(Globals.shaderProgram));     Log.e("APP", "Could not compile shader 2"); } </code></pre>  <p>When running from Android Studio (just updated to latest and greatest 1.4 version) the LogCat shows the "Could not compile shader" log entry but does not give me any further info which makes trying to determine why the shader fails difficult.  GLES20.glGetShaderInfoLog does not return anything.  I do also see the next "Could not complile shader 2" so the code continues.</p>  <p>Because the linking fails the app crashes when it gets to the GLES20.glLinkProgram call.  The final logcat error is "glCreateProgram: glError 1281"</p>  <p>Is there any way that I can get more meaningful debug messages from when GLES links (and compiles) my shaders to see what it crashes over?  Under Windows I was able to get info back from the compiler and display error line numbers etc when a shader failed.</p>  <p>Any help greatly appreciated.</p>  <p>Here is the fixed code.  I was referring to the wrong variable. </p>  <pre><code>GLES20.glCompileShader(shader); //checkGlError("VOC", "glCompileShader"); int[] compiled = new int[1]; GLES20.glGetShaderiv(shader, GLES20.GL_COMPILE_STATUS, compiled, 0); if (compiled[0] == 0) {     Log.e("VOC", "Could not compile shader");     Log.e("VOC", GLES20.glGetShaderInfoLog(shader));     GLES20.glDeleteShader(Globals.shaderProgram);     shader = 0;     Log.e("VOC", "Could not compile shader 2"); } </code></pre>  <p>As pointed out by Reto, once I use the variable returned from glGetShaderiv it works and returned the error "0(45) : error C7011: implicit cast from "float" to "vec3".  Seems GLES is more picky with casting.  Where as in Windows (or NVidia) it accepts </p>  <pre><code>vec3 tex = 1.0; </code></pre>  <p>but android (at least my Samsung galaxy note 5) needs</p>  <pre><code>vec3 tex = vec3(1.0,1.0,1.0); </code></pre>  <p>Thanks for the help!  Getting a line number and error makes it so much easier to debug.</p>