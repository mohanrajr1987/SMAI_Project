<p>I'm following a Prolog tutorial that asks to define a symmetric relation.</p>  <p>Say for instance you have the following fact in the knowledge base: </p>  <pre><code>colleague(john,bob). </code></pre>  <p>You also want colleague(bob,john) to be true, and likewise for all colleague facts.</p>  <p>The tutorial says to use the following rule...</p>  <pre><code>colleague(X,Y) :- colleague(Y,X). </code></pre>  <p>But there are issues when I do this when using the following query...</p>  <pre><code>| ? - colleague(john,X). X = bob ? ; X = bob ? ; X = bob ? ; X = bob ? ; ...  | ? - colleague(bob,X). X = john ? ; X = john ? ; X = john ? ; X = john ? ; ... </code></pre>  <p>I think I understand why this is happening - the rule is infinitely recursive? But I'm having issues fixing it. This is what I want...</p>  <pre><code>| ? - colleague(john,X). X = bob ? ; no  | ? - colleague(bob,X). X = john ? ; no </code></pre>  <p>I've had a look at other answers to very similar questions on here, but haven't been able to sort it. I've tried putting using a cut at the end of the rule, which seems to perform better but still repeats itself once for the fact that is included in the knowledge base:</p>  <pre><code>colleague(X,Y) :- colleague(Y,X), !. </code></pre>  <p>_</p>  <pre><code>| ? - colleague(john,X). X = bob ? ; X = bob ? ; no  | ? - colleague(bob,X). X = john ? ; no </code></pre>  <p>Any ideas what I'm doing wrong?</p>