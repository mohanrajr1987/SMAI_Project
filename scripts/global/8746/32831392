<p>I have this issue in Prolog where I'm creating a list, and sometimes predicates that contribute to this list creation return an empty list, <code>[]</code>. In the end I end up with a list that looks like <code>[[1, 2, 3], []]</code> for example, when I'd rather it be <code>[[1, 2, 3]]</code>.</p>  <p>How do I stop that empty list when I return it from being put with the rest of the list? My logic programming isn't terrible strong, but in other languages I'd simply say, if not empty: append, otherwise don't do anything.</p>  <p>Is this possible in Prolog?</p>  <p>EDIT: To put it in an example, say I have the following predicate:</p>  <pre><code>put_together(Value1, Value2, Result) :-     Result = [Value1, Value2]. </code></pre>  <p>I call <code>put_together(1, 2, Result).</code> and get <code>Result = [1, 2]</code> as expected. But if I call, <code>put_together(1, [], Result).</code> I get <code>Result = [1, []]</code> which I don't want, I'd rather have the final empty list gone, which would be simply <code>[1]</code>.</p>