<p>I need to apply my predicate to a list of lists. I heard maplist/3 might be able to do this but my lists within the list may vary in length and maplist likes all the same length lists. </p>  <p>Here is the predicate I need to apply to all lists in the list. It checks if any elements in another list in the same position are the same and if they are it returns false. Ex: compatible([1,2,3,4,5],[1,6,7,3,2]) would return false since the 1 matches in the 1st position. This predicate works for varying lengths of lists.</p>  <pre><code>compatible([],_). compatible(_,[]). compatible([HA|TA],[HB|TB]) :-     HA \= HB,     compatible(TA,TB). </code></pre>  <p>A sample lists of list might look like this:</p>  <pre><code>[[3,4,6,6,7],[8,2,6,3,67],[7,4,7,4,3]],[[8,2,6,3,67],[7,4,7,4,3]]).  Let X and Y be the lists passed in. where X=[[3,4,6,6,7],[8,2,6,3,67],[7,4,7,4,3]] and Y=[[8,2,6,3,67],[7,4,7,4,3]] </code></pre>  <p>I need to apply the predicate to the Y list only. How would I call compatible on the list of lists to do that (keeping in mind varying length).</p>