<p>I had the following code for customer creation and listing:</p>  <pre><code>:-dynamic customer/2.  load:-consult('C:\\customers.txt').  save:-tell('C:\\customers.txt'), listing(customer), told.  %New customer new_customer:-write("Name: "), read(Name),  customer_code(Code), asserta(customer(Code, Name)), save.  customer_code(Code):- customer(C, _, _, _), Code is C + 1. customer_code(1). </code></pre>  <p>So far, so good. The problem is, when trying to do more complex search, filtering and reports in general, I had to use <code>retract</code> to clean the current memory state of the customers.</p>  <p>So, before any listing, I tend to consult the file again (calling <code>load</code>):</p>  <pre><code>list_customers:- load, listing(customer). </code></pre>  <p>What goes wrong here is that more times than not, this new load will cause the <code>listing</code> to repeat the last customer added to the database.</p>  <p>Eg: </p>  <p>C:\customers.txt:</p>  <pre><code>:-dynamic customers/2 (2, 'John') (1, 'Alicia') </code></pre>  <p>listing(customers):</p>  <pre><code>(2, 'John') (2, 'John') (1, 'Alicia') </code></pre>  <p>I've been able to avoid this by using <code>retractall</code> before consulting:</p>  <pre><code>load:- reatractall(customer(_,_)), consult('C:\\customers.txt'). </code></pre>  <p>Is this a good/bad practise? I don't quite understand what's going on here or why this solves the problem.</p>