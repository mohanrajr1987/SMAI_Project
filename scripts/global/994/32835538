<h2>The Setup</h2>  <p>My app uses nested Core Data Managed Object Contexts. The <strong>parent</strong> context is on the main thread. When I need to do work, I create a <strong>child</strong> context on a background GCD serial queue.</p>  <p>In this child context, I create a new entity: <code>LPProject</code> which has a BOOL property: <code>valid</code>. </p>  <p>I set this property to <code>YES</code> when I create the object. When I'm done, I save the child MOC to push these changes back to the parent context.</p>  <hr>  <h2>The Problem</h2>  <p>On the main thread, I have an <code>NSTreeController</code> that powers an <code>NSOutlineView</code>. This TreeController is bound to my main MOC and fetches its content from there.</p>  <p>The trouble is that as soon as I save the <strong>child</strong> MOC, the TreeController re-fetches its content (as it should) BUT the value of the new <code>LPProject</code> entity's <code>valid</code> property is <code>NO</code> when it should be <code>YES</code>. </p>  <p>I've added a bunch of logging statements and here's what I'm seeing. (Note: error-handling has been removed to simplify. As has obtaining permanent IDs for the newly inserted managedObjects before saving the child context):</p>  <pre><code>// Here, we are in a background GCD queue, working on the CHILD context.  NSLog(@"About to save child context. Project Valid?: %i, [newProject.valid boolValue]);  // Result: Project IS valid.  [childContext save:NULL];  // // RIGHT HERE is where the NSTreeController re-fetches and updates its content. See note below //      NSLog(@"Saved child context. Project Valid?: %i", [newProject.valid boolValue]);  // Result: Project IS valid.   NSManagedObjectID *projectID = [newProject.objectID retain];  dispatch_sync(dispatch_get_main_queue(),  ^{     // self.managedObjectContext is the main-thread, parent context.     LPProject *affectedProject = (LPProject *)[self.managedObjectContext objectWithID:projectID];     NSLog(@"Back on main thread, project valid?: %i", [affectedProject.valid boolValue]);  // Result: project IS valid. </code></pre>  <h3>WTF?</h3>  <p>The <code>LPProject</code> entity's <code>valid</code> property is <code>YES</code> at all points that I log it. However, when the TreeController refetches its content (which happens at the point indicated above), it shows the newly added project with <code>NO</code> for <code>valid</code>, even though that same project will show <code>YES</code> at the next NSLog statement after the child context saves. </p>  <p>This happens <strong>randomly</strong>, roughly 50% of the time. I'm at a bit of a loss to explain it or fix it. Any ideas?</p>