<p>I am trying to save an instance of NSColor to a file like this:</p>  <pre><code>  writeF(node.lineColour.hueComponent)   writeF(node.lineColour.saturationComponent)   writeF(node.lineColour.brightnessComponent)   writeF(node.lineColour.alphaComponent) </code></pre>  <p>where the write function is:</p>  <pre><code>  func writeF(var val: CGFloat) -&gt; Bool {         let nsd = NSData(bytes: &amp;val, length: sizeof(CGFloat))     let rv = oStream!.write(UnsafePointer(nsd.bytes), maxLength: sizeof(CGFloat))     return rv &gt; 0   } </code></pre>  <p>And "node.lineColour" is just NSColor.blueColor().  It all compiles OK, but gives a run-time message at the first "writeF" line:</p>  <p>2015-10-01 07:57:43.871 canl[77917:8371660] An uncaught exception was raised 2015-10-01 07:57:43.871 canl[77917:8371660] *** -hueComponent not valid for the NSColor NSCalibratedWhiteColorSpace 0 1; need to first convert colorspace.</p>  <p>Apple documentation on color spaces is very esoteric (if you already understand it then it's a fine reference, but if not then... good luck).  Why is the above code wrong?  Should be able to at least retrieve the color components (CGFloat).</p>