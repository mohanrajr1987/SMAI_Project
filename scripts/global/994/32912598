<p>I have been trying to get some basic math done with NSExpression's expressionValueWithObject(), and the results have been inconsistent.</p>  <p>For example, the following all work just fine:</p>  <pre><code>NSExpression(format: "1+1").expressionValueWithObject(nil, context: nil) as? Float </code></pre>  <p>(returns 2)</p>  <pre><code>NSExpression(format: "1+1.2").expressionValueWithObject(nil, context: nil) as? Float </code></pre>  <p>(returns 2.2)</p>  <pre><code>NSExpression(format: "2**3").expressionValueWithObject(nil, context: nil) as? Float </code></pre>  <p>(returns 8)</p>  <pre><code>NSExpression(format: "sqrt(2**3)").expressionValueWithObject(nil, context: nil) as? Float </code></pre>  <p>(returns 2.82...)</p>  <pre><code>NSExpression(format: "log(2**3)").expressionValueWithObject(nil, context: nil) as? Float </code></pre>  <p>(returns 0.903...)</p>  <p>But other string-equations, seemingly no more complex than these, produce erroneous answers or no answers at all. For example,</p>  <pre><code>NSExpression(format: "1+(1/2)").expressionValueWithObject(nil, context: nil) as? Float </code></pre>  <p>(returns 1, rather than 1.5)</p>  <p>and</p>  <pre><code>NSExpression(format: "43 % 2").expressionValueWithObject(nil, context: nil) as? Float </code></pre>  <p>(returns an error, though Swift itself can natively compute 43 Mod 2 using that same notation)</p>  <p>What am I doing wrong in these last two examples?</p>