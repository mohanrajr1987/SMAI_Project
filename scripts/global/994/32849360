<p>In my code I need to observe that NSBlockOperation was finished and notify through <em>block</em> value. I want to do this without KVO, delegates, and sub-classing. For this purpose I have used GCD and dispatch_group_notify. This code works good for me but I'm not sure about memory management. Is this approach can lead to crash? For example one potential issue can be if <em>block</em> calls after dispatch_release(group);</p>  <pre><code>- (void)collectLastRunnedDate: (void (^)()) block {     NSAssert(block, @"Block should not be nil");      dispatch_group_t group = dispatch_group_create();      dispatch_group_notify(group, dispatch_get_main_queue(), block);      NSBlockOperation * blockOperation = [NSBlockOperation blockOperationWithBlock:^{      dispatch_group_enter(group);      self.lastRunnedDate = [self lastRunnedDateForPeriodicName:@"daily"];      if(!self.lastRunnedDate)     {         self.lastRunnedDate = [self lastRunnedDateForPeriodicName:@"weekly"];     }      if(!self.lastRunnedDate)     {         self.lastRunnedDate = [self lastRunnedDateForPeriodicName:@"monthly"];     }      if(!self.lastRunnedDate)     {         self.lastRunnedDate = [[Preferences sharedInstance] periodicsLastRunned];     }      dispatch_group_leave(group);      dispatch_release(group); }];  [[NSOperationQueue queue] addOperation:blockOperation]; </code></pre>  <p>}</p>