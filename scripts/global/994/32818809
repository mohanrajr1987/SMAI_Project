<p>I have created a function that help to find duplicate files in an array of <code>NSString</code> (array contains the file paths)</p>  <p>here is my function:</p>  <pre><code>-(NSMutableArray *)compareWithList:(NSMutableArray*)fileCompareList // list of file from which we need to find the duplicates of the target                           fileData:(NSData*)_fileData // contains target file data bytes                         fileLength:(UInt32) _fileLenght // contains size of target file {     // result list of the (duplcate)files     NSMutableArray* fileList = [[NSMutableArray alloc]init];      // flag to check if the path is a folder     BOOL isDir;      //stores the size of the file that is being itrated     UInt32 size = 0;     //stores the byte data of the file that is being itrated     NSData *bytes = nil;      //itrating the files in the list one by one in order find the duplicate     for (NSString* sPath in fileCompareList) {         //checking if the file already exists in the result list         if ([fileList indexOfObject:sPath] == NSNotFound)         {             //getting the size of the file             UInt32 size = [sysHelp getSizeOfFile:sPath];             //if the size matches of the target file and the itrated file then go inside             if(size == _fileLenght)             {                 //get the bytes of the file being itrated                 bytes = [[NSData alloc] initWithContentsOfFile:sPath];                  //if the bytes matches then add the itrated file into the result list                 if([bytes isEqualToData:_fileData])                 {                     [fileList addObject:sPath];                 }                 //remove the itrated file data from the array                 bytes = nil;             }         }      }      return fileList; } </code></pre>  <p>Here the problem is that because of the function memory use is getting to high as shown in the screen shot below:</p>  <p><strong>before</strong> <a href="http://i.stack.imgur.com/pyhxb.png" rel="nofollow"><img src="http://i.stack.imgur.com/pyhxb.png" alt="enter image description here"></a></p>  <p><strong>after</strong> <a href="http://i.stack.imgur.com/8NT4I.png" rel="nofollow"><img src="http://i.stack.imgur.com/8NT4I.png" alt="enter image description here"></a></p>  <p><strong>after some time</strong> <a href="http://i.stack.imgur.com/iegcs.png" rel="nofollow"><img src="http://i.stack.imgur.com/iegcs.png" alt="enter image description here"></a></p>  <p>Note; I am using ARC <a href="http://i.stack.imgur.com/zWeAt.png" rel="nofollow"><img src="http://i.stack.imgur.com/zWeAt.png" alt="enter image description here"></a></p>  <p><strong>How am I calling the funciton? here it is:</strong></p>  <pre><code>NSMutableArray* allFilesOfSystem =[[NSMutableArray alloc] init]; allFilesOfSystem = self AllFilesOfDesktopAndSubDirectores];  NSMutableArray* FinalResultArray = [[NSMutableArray alloc] init];  for (int i = 0; i &lt; [allFilesOfSystem count]; i++) {          NSString* filePath = [allFilesOfSystem objectAtIndex:i];          //file to byte array         NSData *bytes = [[NSData alloc] initWithContentsOfFile:filePath];          //file size         UInt32 size = [sysHelp getSizeOfFile:filePath];          [FinalResultArray addObjectsFromArray:[self compareWithList:allFilesOfSystem fileData:bytes fileLength:size]]  } </code></pre>