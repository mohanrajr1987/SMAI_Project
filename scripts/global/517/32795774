<p>my question is how can i increase and decrease size of treeview while expanding and minimizing. i have tree like<a href="http://i.stack.imgur.com/mEE4s.jpg" rel="nofollow"><img src="http://i.stack.imgur.com/mEE4s.jpg" alt="enter image description here"></a> </p>  <p>it should be work like <a href="http://mbostock.github.io/d3/talk/20111018/tree.html" rel="nofollow">this(example is slightly different)</a></p>  <p>above mentioned link, shows us perfect expansion and minimization but in my application i am grabbing record from database and there fore i am creating child nodes in script and assign css class in same script , but when i am expand tree, it will shows width problem and then overlapped  here is my css</p>  <pre><code>.tree ul { padding-top: 20px; position: relative; transition: all 0.5s; -webkit-transition: all 0.5s; -moz-transition: all 0.5s; } .tree li { float: left; text-align: center; list-style-type: none; position:inherit; padding: 20px 5px 0 5px; transition: all 0.5s; -webkit-transition: all 0.5s; -moz-transition: all 0.5s; } /*We will use ::before and ::after to draw the connectors*/ .tree li::before, .tree li::after{ content: ''; position: absolute; top: 0; right: 50%; border-top: 2px solid #960b0b; width:50%; height:20px; } .tree li::after{ right: auto; left:50%; border-left: 2px solid #960b0b; } /*We need to remove left-right connectors from elements without  any siblings*/ .tree li:only-child::after, .tree li:only-child::before { display: none; } /*Remove space from the top of single children*/ .tree li:only-child{ padding-top: 0;} /*Remove left connector from first child and  right connector from last child*/ .tree li:first-child::before, .tree li:last-child::after{ border: 0 none; } /*Adding back the vertical connector to the last nodes*/ .tree li:last-child::before{ border-right: 2px solid #960b0b; border-radius: 0 8px 0 0; -webkit-border-radius: 0 8px 0 0; -moz-border-radius: 0 8px 0 0; } .tree li:first-child::after{ border-radius: 5px 0 0 0; -webkit-border-radius: 5px 0 0 0; -moz-border-radius: 5px 0 0 0; } /*Time to add downward connectors from parents*/ .tree ul ul::before{ content: ''; position: absolute; top: 0; left: 50%; border-left: 2px solid #960b0b; width: 0; height: 20px; } </code></pre>  <p>and here is my script</p>  <pre><code>$(document).ready(function () { var dip; $('body').on('click', '.collapsible', function (e) {     e.preventDefault();     var this1 = $(this);     var data = {         pid: $(this).attr('pid')      };      fd = $(this).attr('pid');     //alert(fd);     var isloaded = $(this1).attr('data-loaded'); //check subchilds already loaded or not     if (isloaded == "false") {         $(this1).addClass("loadingP");         $(this1).removeClass("collapse");          $.ajax({             url: "/Admin/GetChildforTree",             type: "GET",             data: {Id:fd},             dataType: "Json",             success: function (d) {                 $(this1).removeClass("loadingP");                 if (d.length &gt; 0) {                     var $ul = $("&lt;ul&gt;&lt;/ul&gt;", {                         "id": 'treeUl'                     });                       $.each(d, function (i, ele) {                         $ul.append(                             $("&lt;li&gt;&lt;/li&gt;", {"id":'treeLi'}).append(                                              "&lt;span class='collapse collapsible' data-loaded='false' pid='" + ele.ConsumerNo_ + "'&gt;&amp;nbsp;&lt;/span&gt;" +                                             "&lt;span class='Menuspan'id='spantext' &gt;" + ele.ConsumerNo_ + "&lt;/span&gt;"                                                  )                                   )                     });                     $(this1).parent().append($ul);                     $(this1).addClass('collapse');                     $(this1).toggleClass('collapse expand');                     $(this1).closest('li').children('ul').slideDown();                    }                 else {                     $(this1).css({ 'display': 'inline-block', 'width': '15px' });                   }                 $(this1).attr("data-loaded", true);             },             error: function () {                 alert("Error..!");             }         })     }     else {         $(this1).toggleClass("collapse expand");         $(this1).closest('li').children('ul').slideToggle();     }    }); }); </code></pre>