<p>I'm currently working on a dumb down version of iTunes in which tracks can be imported, modified, exported, etc. This is my first large-scale programming project using any language. I've structured the process of changing imported tracks in such a way that each time a track is modified it's deleted from the Treeview Widget and the updated version is reinserted. So tracks are constantly getting new IDs which I make sure to keep updated throughout my entire program. My question, is this an okay way of updating information. Do you think this will lead to any performance issues? And are there better more elegant ways of accomplishing the same goal? How would I go about just editing the rows? Right now I can edit them but the updated content doesn't reflect in the Treeview. self.tree.update() doesn't seem to do anything either. Why is this? Thanks     </p>  <pre><code>def change_genre (self, label):     global currentGenre     # change the current genre the user is working within     currentGenre = label     folder = None     self.status["text"] = "Now working in the " + "'" + str(currentGenre) + "'" + " genre channel"     self.currentGenreDisplayString.set("Current Genre: " + currentGenre)      for directory, name in self.genreDict.items():         if name == currentGenre:             folder = directory             print(directory)      for i in importedTracks:         trackInfo = self.tree.item(i)          print(type(trackInfo['values'][13]))         trackInfo['values'][13] = folder + "/" + trackInfo['values'][13] </code></pre>