<p>I have created javaFX tree with custom Objects (SystemNode).  Tree Items has graphics: check-box and image icon which I have set through updateItems() method.</p>  <p>Whenever I expand or collapse Item in tree ,twice or thrice I get JAVA HEAP MEMORY OUT OF SPACE and whole UI hangs UP.</p>  <p>PS: updateItems() method is invoked every time I expand or collapse tree node I have tried adding event handlers but they didn't work.</p>  <p>Can anyone give some solutions.</p>  <p>Here is how I set cellFactory :</p>  <pre><code>treeView_technicalAreas.setCellFactory(Util.getTreeCellFactory()); </code></pre>  <p>Here is code for cell factory:</p>  <pre><code>public static Callback&lt;TreeView&lt;SystemNode&gt;, TreeCell&lt;SystemNode&gt;&gt; getTreeCellFactory() {     Callback&lt;TreeView&lt;SystemNode&gt;, TreeCell&lt;SystemNode&gt;&gt; callback = new Callback&lt;TreeView&lt;SystemNode&gt;, TreeCell&lt;SystemNode&gt;&gt;() {         @Override         public TreeCell&lt;SystemNode&gt; call(TreeView&lt;SystemNode&gt; p) {             TreeCell&lt;SystemNode&gt; cell = new TreeCell&lt;SystemNode&gt;() {                 @Override                 protected void updateItem(SystemNode t, boolean isEmpty) {                     super.updateItem(t, isEmpty); //To change body of generated methods, choose Tools | Templates.                     if (!isEmpty) {                         System.out.println("util call back : " + t.getSystem().getName());                         setText(t.getSystem().getName());                         HBox hBox = new HBox();                          CheckBox checkBox = new CheckBox();                         checkBox.setSelected(t.getSelected());                         checkBox.selectedProperty().bindBidirectional(t.getSelectedProperty());                         hBox.setSpacing(SPACING_BETWEEN_ICON_AND_CHECKBOX);                         ImageView imageView_icon = null;                          if (t.getSystem().getType() == TYPE.BUSINESS_AREA) {                             imageView_icon = new ImageView(Constant.Image_BUSINESS_AREAS);                         } else if (t.getSystem().getType() == TYPE.TECHNICAL_AREA) {                             imageView_icon = new ImageView(Constant.Image_TECHNICAL_AREAS);                         } else if (t.getSystem().getType() == TYPE.ESW_DOCUMENT) {                             imageView_icon = new ImageView(Constant.Image_ESW_DOCUMENTS);                         } else if (t.getSystem().getType() == TYPE.NOUN_NAME) {                             imageView_icon = new ImageView(Constant.Image_NOUN_NAME);                         } else if (t.getSystem().getType() == TYPE.DESIGN_CHANGE) {                             imageView_icon = new ImageView(Constant.Image_DCC);                         } else if (t.getSystem().getType() == TYPE.VERIFICATION_TASK) {                             imageView_icon = new ImageView(Constant.Image_VERIFICATION_TASK);                         }                          hBox.getChildren().addAll(checkBox, imageView_icon);                         setGraphic(hBox);                     }                 }             };              return cell;         }     };      return callback; } </code></pre>