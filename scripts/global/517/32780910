<p>In Angular (1.2) I'm printing out some <code>li</code> elements using ng-repeat and I conditionally apply to them a class with <code>ng-class</code>.</p>  <pre><code> &lt;li ng-repeat="(linkName, link) in navigation" ng-class="{'treeview':condition}"&gt;     &lt;a href ng-if="link.state" ui-sref="{{link.state}}"&gt;         &lt;i class="fa {{link.icon}}"&gt;&lt;/i&gt;         &lt;span&gt;{{linkName}}&lt;/span&gt;     &lt;/a&gt; &lt;/li&gt; </code></pre>  <p>The class <code>treeview</code> that depends on the <code>condition</code> represents a custom directive that I've defined:</p>  <pre><code>angular.module('app.mymodule') .directive('treeview', function() {     return {         restrict: 'C',         link: function(scope, element, attrs) {             // jquery tree plugin              element.tree();         }     }; }) </code></pre>  <p>This should enable the jquery <strong>tree</strong> plugin on the elements having a <code>treeview</code> class.<br> The problem is that even tough the elements are correctly added to the dom and have a class <code>treeview</code> the custom directive <code>treeview</code> is never evaluated (verified this with a breakpoint).</p>  <p>Instead, if I do a plain</p>  <pre><code>&lt;li class="treeview"&gt;     //... &lt;/li&gt; </code></pre>  <p>Then the directive works as supposed to do.<br> I think it is some sort of conflict over the scope created by ng-repeat..</p>