<p>I have a model that contains a flat list with person objects containing a parent ID. This list is not ordered, so children could come before their parent.</p>  <pre><code>class PersonModel {   int ID;   int Parent;   string Name; } </code></pre>  <p>I want to display this in a Treeview and therefore in the VM I need to define the Children &amp; Parent as a reference to other VM's. SO I have setup my PersonViewModel like so;</p>  <pre><code>class PersonVM {   readonly PersonModel = _Person;   PersonVM Parent;   List&lt;PersonVM&gt; Children;    public Name {     get { return Person.Name; }   }    public PersonVM(PersonModel Person)   {     _Person = Person;   } } </code></pre>  <p>In my TreeView VM I have a constructor that creates PersonVM's from a list of PersonModels;</p>  <pre><code>class TreeViewVM {   public List&lt;PersonVM&gt; PersonList;    TreeViewVM(List&lt;PersonModel&gt; Persons)   {     foreach (PersonModel Person in Persons)     {       PersonList.Add(new PersonVM(Person ));     }   } } </code></pre>  <p>I am now struggling to figure out the proper way of creating the heirarchy between the PersonVM's. I cannot access the Model from my Main VM, and in my thinking it should be like that. However that is where the ID is stored.</p>  <p>So what is the proper way of doing this?</p>