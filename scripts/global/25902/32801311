<p>I have a tableview whose cells change size. I animate the size change by </p>  <pre><code>[tableView beginUpdates]; [tableView endUpdates]; </code></pre>  <p>One of the properties of one of the subviews of the cell I need to animate is a <code>CAShapeLayer</code>'s <code>path</code> property. I animate its size in the <code>layoutSubviews</code> method of its parent view thusly</p>  <pre><code>- (void)layoutSubviews {   [super layoutSubviews];   self.shapeLayer.frame = self.bounds;   CGPathRef p = [self bezierPathForOverlay].CGPath;   if (/*something irrelevant to this question is true*/) {     CABasicAnimation *basicAnimation = [CABasicAnimation animationWithKeyPath:@"path"];     basicAnimation.fromValue = [NSValue value:start                                  withObjCType:@encode(CGPathRef)];     NSValue *pW = [NSValue value:p                     withObjCType:@encode(CGPathRef)];     basicAnimation.toValue = pW;     [self.shapeLayer addAnimation:basicAnimation                            forKey:FKCShapeAnimationPath];   }   self.shapeLayer.path = p; } </code></pre>  <p>My understanding is that because I don't set a duration, the duration of the implicit <code>CATransaction</code> that the system has created will be used, and the shape should change size at the same speed as the cell. Any other properties relating to the timing that I didn't set would be treated similarly.</p>  <p>In practice, however, though the speed is close, it does not seem to be the same, leading to unsightly visual artifacts.</p>  <p>I'm hoping to avoid a solution that involves "in current versions of iOS the duration/animation curve for this animation is this, hard code it" -- in summary, my question is: How can I exactly match animation properties of system animations with Core Animation animations?</p>