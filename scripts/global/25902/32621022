<p>According to the <a href="https://developer.apple.com/library/prerelease/ios/releasenotes/General/iOS90APIDiffs/Swift/UIKit.html">UIKit diff document</a>, in ios9/Swift 2</p>  <p><code>var text: String!</code> has become <code>var text: String?</code></p>  <p>According to the <a href="https://developer.apple.com/library/prerelease/ios/documentation/UIKit/Reference/UITextField_Class/index.html#//apple_ref/occ/instp/UITextField/text">documentation for UITextField</a> it specficially says</p>  <p><code>This string is @"" by default.</code></p>  <p>I don't understand the purpose of this change. Shouldn't that property always be an empty string if the text field exists at all? At what point does this field return an empty string? Once the user interacts with it? Once it's been added to the view hierarchy? At what point does it return <code>nil</code>?</p>  <p>If the text field exists in the first place, is it always safe to assume the text property exists as well? This just seems like it's going to lead to a lot of find/replace <code>.text</code> to <code>.text!</code></p>  <p>I don't see where it's mentioned in the docs so maybe someone has some backstory or help on why this changed.</p>