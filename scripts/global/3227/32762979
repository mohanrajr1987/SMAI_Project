<p>In c#, using service stack redis,  Based on the following url, </p>  <p><a href="https://github.com/ServiceStack/ServiceStack.Redis/wiki/RedisLocks" rel="nofollow">https://github.com/ServiceStack/ServiceStack.Redis/wiki/RedisLocks</a></p>  <p>to lock a string entry, the following method is used.</p>  <pre><code>RedisClient objRedisClient = new RedisClient... // redis working fine objRedisClient.SetEntry("stringkey", "abcd"); using (objRedisClient.AcquireLock(strRedisKey)) {   objRedisClient.SetEntry("stringkey", "efdh"); } </code></pre>  <p>The above SetEntry code works fine for setting string values. But when same code is used to lock a  list, it throws Redis Exception.</p>  <pre><code>  using (objRedisClient.AcquireLock("listkey"))   {       objRedisClient.Lists["listkey"].Push("{}");   } </code></pre>  <p>Acquirelock method works fine, but pushing a new value to the list inside using statement throws the following exception.</p>  <blockquote>   <p>WRONGTYPE Operation against a key holding the wrong kind of value,   sPort: 50371, LastCommand: RPUSH 97:Q {}</p> </blockquote>  <p>It is just a simple console application. Without the acquire lock method, value gets successfully added to the list.</p>  <p>How to lock a redis list in c#?</p>