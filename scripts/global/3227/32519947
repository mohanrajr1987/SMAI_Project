<p><strong>Env:</strong></p>  <pre><code>  Wildfly 8.1   Struts   EJB 3.1   Postgres 9 </code></pre>  <p>Facing a thread deadlock issue. Hoping to get some clarity.</p>  <p><strong>Code:</strong></p>  <ul> <li>An action class calls two updates using an EJB</li> </ul>  <blockquote> <pre><code> bean.writeLockedUpdate(o1) #1  ...  bean.writeLockedUpdate(o1) #2 </code></pre> </blockquote>  <ul> <li>EJB bean's writeLockedUpdate(Object) does plain JDBC update via JPA</li> </ul>  <p><strong>Scenario:</strong></p>  <ul> <li>UserRequestThread1 starts and completed #1 and doing some work within action class</li> <li>UserRequestThread2 started and acquired write lock on the bean and is inside bean.writeLockedUpdate(o1).</li> </ul>  <p>Both user threads trying to modify <strong>same</strong> o1 object.</p>  <p>Thread dump snip for those two threads:</p>  <p><strong>Thread1:</strong></p>  <blockquote>   <p>"default task-56" #558 prio=5 os_prio=0 tid=0x724a4400 nid=0x1674   waiting on condition [0x3d2ef000]    java.lang.Thread.State:   TIMED_WAITING (parking)<br>   at org.jboss.as.ejb3.concurrency.EJBReadWriteLock$WriteLock.tryLock(EJBReadWriteLock.java:209)</p>      <p>at Bean$$$view22.writeLockedUpdate(Unknown Source)</p> </blockquote>  <p><strong>Thread2:</strong></p>  <blockquote>   <p>"default task-43" #530 prio=5 os_prio=0 tid=0x6bf10800 nid=0x15aa   runnable [0x299c8000]    java.lang.Thread.State: RUNNABLE     at   java.net.SocketInputStream.socketRead0(Native Method)<br>   at org.postgresql.core.VisibleBufferedInputStream.readMore(VisibleBufferedInputStream.java:143)</p>      <p>at Bean$$$view22.writeLockedUpdate(Unknown Source)</p> </blockquote>  <p><strong>Possible explanation:</strong></p>  <p>I believe here is what happening.</p>  <ol> <li>thread2 having acquired bean write lock, is wating for DB row lock</li> <li>thread1 having acquired DB row lock, is waiting for bean write lock</li> </ol>  <p>Jconsole doesnt show any deadlock. Guessing its because the second lock being blocked is at DB level</p>  <p><strong>Queation:</strong></p>  <p>Is there a way to verify the above explanation ?</p>  <p>Thanks in advance.</p>