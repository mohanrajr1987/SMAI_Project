<p>In my app I am using threads. So I have a function called pull which runs in a separate thread.</p>  <pre><code>var timerCall = Observable.Timer(TimeSpan.Zero, TimeSpan.FromSeconds(1));    _subscription = timerCall.Subscribe(async res =&gt;         {             List&lt;dynamic&gt; result = pull();              if (result != null &amp;&amp; result.Count &gt; 0)                 await Connection.Broadcast(new                 {                     id = _newestId,                     events = result                 });         }); </code></pre>  <p>Every second I call the thread. I am using lock there as well in my pull function like this</p>  <pre><code>lock (_locker){        // do stuff  } </code></pre>  <p>Lets assume the function pull takes on average 1.2 seconds per call, so this means that in the end I would end up having a large queue. I don't need that. Any ways to prevent it? </p>