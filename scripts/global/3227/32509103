<p>I need to store data, lifetime of which is supposed to be in most cases something like 1-30 minutes (but still can be 1 day / 1 week). It's just a specific of project - lot of bulk operations performed by many users. </p>  <p>So, typical process of working with this data:</p>  <ol> <li>User uploads a document, we parse it and pushing data to the table (insertion of 100-70000 rows)</li> <li>We validate data and show errors to the user</li> <li>User corrects data (single correction - update of 1 row)</li> <li>User runs an action after which all uploaded data from document is deleted from the table.</li> </ol>  <p>That works nice when only single user works with a system. That works nice when many user uploads documents that produces about 1-5 thousands rows.  But after insertion of 10 thousands rows SQL server forces table lock and ... that's is a problem.</p>  <p>So, there are different ways to solve this problem, but they all are ugly: </p>  <ol> <li>Switching to key-value storage - customer doesn't approves using of another storages</li> <li>Can't switch to in-memory solution due to many reasons</li> <li>Group insertion into 2 thousands of rows and specify different transactions for each &amp; handle fails manually - too ugly</li> </ol>  <p>And I want next: turn off any locking on specified table. No consistency is needed, only indexes should work.</p>  <p>How I can achieve that? Any other ideas are appreciated too.</p>