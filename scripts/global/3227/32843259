<p>I have a service bean which provides access to a Map. From time to time I need to rebuild the content of the Map wich takes several seconds and I want to block the access to the map while its rebuilding, because it can be accessed from different Threads.</p>  <pre><code>@Service public class MyService {   private Map&lt;Key,Value&gt; cache = null;   private ReentrantLock reentrantLock = new ReentrantLock();     public void rebuildCache(){      try {        reentrantLock.lock();        cache = new ConcurrentHashMap&lt;&gt;();        ... //processing time consuming stuff and building up the cache        }finally {         reentrantLock.unlock();      }    }     public Value getValue(Key key){      while (lock.isLocked()){}      return cache.get(key);    }    ... } </code></pre>  <p>As you can see I use</p>  <pre><code>while (reentrantLock.isLocked()){} </code></pre>  <p>to check if the lock is locked and wait until its unlocked. This solution seems to be quite dirty. Is there a better solution?</p>  <p>thank you. Phill</p>