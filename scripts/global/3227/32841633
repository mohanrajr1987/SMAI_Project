<p>We want to prevent some concurrency issues in a database (we use event sourcing and want to insert an event to the event log in case the event is a valid one).</p>  <p>The problem is that we need to check if a certain operation is allowed (requiring a SELECT query and some checks in php) and then run a INSERT query to actually perform the operation.</p>  <p>Now, we can simply LOCK the entire table, do our checks and if they succeed, then insert (and remove the lock).</p>  <p>The problem with this is that it locks the entire table, which is overkill (there will be lots of queries on this table). What I would like to do is to lock all queries that want to do this select-insert operation for a specific <code>object_id</code>, but allow queries for all other <code>object_id's</code> to continue as if there is no lock.</p>  <p>I searched a bit but couldn't find a lock attribute command. There seems to be a lock row command in innoDB, but it's not really what we want (I think I'm not 100% sure what it does). We can of course try to manually handle the locks (check if there exists some column with <code>object_id</code> in some seperate lock table and wait untill there is none), but that feels a bit fishy and error prone.</p>  <p>So, here's the actual question: is it possible to lock a table for a specific value of a column (<code>object_id</code>)? It would be awesome if the lock only held for the specific SELECT-INSERT queries, and not for standalone SELECT's, but that doesn't matter that much for now.</p>