<p>I was looking through the source code for <code>DatagramSocket</code> and I found this: </p>  <pre><code>public void disconnect() {     synchronized (this) {         if (isClosed())             return;         if (connectState == ST_CONNECTED) {             impl.disconnect ();         }         connectedAddress = null;         connectedPort = -1;         connectState = ST_NOT_CONNECTED;     } } </code></pre>  <p>My understanding of <a href="https://docs.oracle.com/javase/tutorial/essential/concurrency/syncmeth.html" rel="nofollow">synchronized methods</a> is that they lock on <code>this</code>. So is the code equivalent to the following?  </p>  <pre><code>public synchronized void disconnect() {     if (isClosed())         return;     if (connectState == ST_CONNECTED) {         impl.disconnect ();     }     connectedAddress = null;     connectedPort = -1;     connectState = ST_NOT_CONNECTED; } </code></pre>  <p>Is there a reason why the language designers chose not to use a synchronized method here?</p>