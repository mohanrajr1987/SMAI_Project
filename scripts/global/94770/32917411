<p>I have multi steps form in my application and i would like to save it before go to the next step... I did an simple example, but i'm not sure if it's the right approach. I used resolve config and a service to access to the formData.</p>  <p><strong>Config</strong></p>  <pre><code>app.config(function($stateProvider, $urlRouterProvider) {              $urlRouterProvider.otherwise("/");            $stateProvider             .state('home', {                 url : '/',                 controller : 'appCtrl',                 templateUrl : 'partials/home.html',                 resolve : {                     saveform : function($state, FormData){                      }                 },             })                .state('home.state1', {                     url: "state1",                     templateUrl : 'partials/item1.html',                     resolve : {                         saveform : function($state, FormData){                             return FormData.save();                         }                     },                 })                 .state('home.state2', {           url: "state2",            templateUrl : 'partials/item2.html',           resolve : {             saveform : function($state, FormData){                return FormData.save();              }            }                 })          }); </code></pre>  <p><strong>Controller</strong></p>  <pre><code>app.controller('appCtrl', function($scope, $rootScope, $state, saveform, FormData){         $scope.formData = {};         $scope.tempData = {};          $rootScope.$on('$stateChangeStart', function(event){              console.log($scope.tempData , $scope.formData)              if(!_.isEqual($scope.tempData , $scope.formData)){                 console.log('OK CHANGE DETECTED, SAVE')                  var temp = {}                  FormData.set(angular.copy($scope.formData));              }else{                 console.log('NO CHANGE')             }          });          $rootScope.$on('$stateChangeSuccess', function(event){             var temp = FormData.get();              if(Object.keys(temp).length!=0){                 FormData.cancel();                 angular.copy(temp, $scope.tempData );                 angular.copy(temp, $scope.formData );             }         });      }) </code></pre>  <p><strong>Service</strong></p>  <pre><code>app.service('FormData', function($q, $timeout){         this.formdata = {};          this.save = function(){             if(Object.keys(this.formdata).length===0)                  return false;              var deferred = $q.defer();              $timeout(function() {                 this.formdata.test = "YEAH TEST";                 deferred.resolve(this.formdata);                 //this.formdata = {};             }.bind(this), 1000);              return deferred.promise;          }          this.cancel = function(){             this.formdata = {};         }          this.set = function(data){             this.formdata = data;         }          this.get = function(){             return this.formdata;         }     }) </code></pre>  <p>Example on codepen : <a href="http://codepen.io/anon/pen/RWpZGj" rel="nofollow">http://codepen.io/anon/pen/RWpZGj</a> </p>