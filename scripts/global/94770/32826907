<p>I want to deal with chat private messages, so I have 2 services:</p>  <ul> <li>ChatSocket that connects to the server and returns a socket</li> <li>ChatHistory that keeps chat messages for each private chat session in a map</li> </ul>  <p>In my ChatSocket service I listen for chat private messages and add them to the chat history:</p>  <pre><code>.factory('ChatSocket', function (ChatHistory) {     var socket = io.connect(/* ... */);     socket.on('priv_msg', function (data) {         ChatHistory.push(data.user, data.msg);     });  }); </code></pre>  <p>I also use angular ui router so I can have multiple chat "windows" this way:</p>  <pre><code>.config(function ($stateProvider) {     $stateProvider.state('app.chat', {         url: '/chat/:uid',         views: {             'content': {                 templateUrl: 'templates/chat.html',                 controller: function ($scope, $stateParams, ChatHistory) {                     $scope.messages = ChatHistory.get($stateParams.uid);                     /*                       This returns an array that looks like:                        [                            { nickname: 'myself', msg: 'hello' },                           { nickname: 'someone', msg: 'hi' },                           { nickname: 'myself', msg: 'how r u?' },                       ]                      */                 }              }         }     } }); </code></pre>  <p>This works well, except that since $scope.messages is updated in an external service, I'm really not sure where to call $apply here.</p>  <p>Of course I could add a listener on "priv_msg" event in the controller itself and call $apply there, but this looks a bit overkill:</p>  <pre><code>ChatSocket.on('priv_msg', function (data) {     if (data.user.id == $stateParams.id) {         $scope.$apply();     } }); </code></pre>  <p>Any idea how to make the messages to be updated? My solution may be correct but I'm kind of new to angular so there may be much better way to achieve that, so I'm totally open to any suggestions / examples.</p>