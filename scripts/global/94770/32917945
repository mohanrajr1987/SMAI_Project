<p>I have a parent view that contains a navbar, and inside of that view I have a <code>&lt;div ui-view&gt;</code> element which renders whatever child view I'm on.</p>  <p>I want to conditionally show/hide the navbar within the parent view, based on the route of the child view. Right now, I have this:</p>  <pre><code>&lt;nav ng-show="!vm.hideNavbar"&gt; </code></pre>  <p>The first time my app is loaded, <code>vm.hideNavbar</code> is set to true and this works as expected.</p>  <p>After <code>vm.hideNavbar</code> is changed to false, the bound value is not updated. It is still <code>true</code>.</p>  <p>Every controller in my app extends this <code>BaseController</code>:</p>  <pre><code>export class BaseController {         public hideNavbar: boolean;          constructor(public $scope: IBaseScope, private $state: ng.ui.IStateService) {             if ($state.current.url === '/login') {                 this.hideNavbar = true;             } else {                 this.hideNavbar = false;             }             $scope.vm = this;         }  } </code></pre>  <p>So, everytime a new controller is loaded, it calls the constructor for <code>BaseController</code> and conditionally sets <code>$scope.vm.hideNavbar</code>. If I immediately run <code>$scope.$apply()</code> at the end of this constructor, angular throws errors saying the digest cycle is already being ran.</p>  <p>So, the digest cycle is being ran, but the value in my view is not being updated. My only thought is that I have instantiated more than one copy of the <code>BaseController</code> since my initial controller and the controller I navigated to both extend this controller. So, now, my bound value of <code>vm.hideNavbar</code> is still looking at the old controller.</p>  <p>Am I on the right track with this? How can I solve this issue?</p>