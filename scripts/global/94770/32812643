<p>The user can view product details on a modal window which is represented by a sticky state. The problem is that when the user tries to open more than one product (id 1, 2, 3...), all modals get the content from the latest opened modal.</p>  <pre><code>$stateProvider.state('product', {    url: '/product/:id',    sticky: true,    onEnter: ["$modal", function ($modal) {       $modal.open({          templateUrl: 'product.html',          controller: 'ProductController',          controllerAs: 'vm'       });    }]              });  $stateProvider.state('product.main', {    url: '/product/:id',    views: {       'product@': {           templateUrl: 'main.html',           controller: 'ProductMainController',           controllerAs: 'vm'        }    }      }); </code></pre>  <p>product.html</p>  <pre><code>ProductID: {{vm.productId}} &lt;div ui-view="product"&gt;&lt;/div&gt; </code></pre>  <p>The weird part that I don't understand is that the parent controller (ProductController) executes only once for each opened modal and the printed ProductID is correct, but ProductMainController reloads in all previously opened modals and when it reloads it does that with the data from the latest opened modal.  At first I thought that it is not possible to open the same state multiple times with different parameters but if that's the case the parent controller (ProductController) would reload too. So, is it possible to have loaded multiple sticky states with different parameters? And why the controllers on the substates of the sticky view reload? And why the controller of the sticky state does not reload. </p>