<p>I have included my code below. Basically, when I am loading my view, I am using resolve to get some data. In my service, if my promise is rejected - on error - the resolve gets infinitely called. Is there a better way I should be performing this? </p>  <pre><code>(function () {  function AppService($q, $http, $log, $timeout, pageOptionsModel) {      return {         getPageOptions: function () {              var deferred = $q.defer();              var pageOptions = pageOptionsModel.getPageOptions();              if (pageOptions === null) {                 $http.get("api/HomeApi/GetPageOptions")                     .success(function (response) {                         deferred.resolve(response);                         $log.info("Successfully retriedved page options from service.");                     })                     .error(function (response) {                         deferred.reject("Error");                         $log.error("Errored while retrieving page options from service.");                     });             }             else {                 deferred.resolve(pageOptions);             }              return deferred.promise;          }     }  };  function AppConfig($stateProvider, $urlRouterProvider, $locationProvider) {      $urlRouterProvider.otherwise("line");      // Now set up the states     $stateProvider         .state('line', {             url: "/line",             templateUrl: "app/line/lineTemplate.html",             controller: "lineController",             controllerAs: "line",             resolve: {                 pageOptions: function (appService) {                     return appService.getPageOptions();                 }             }         });      $locationProvider.html5Mode({         enabled: true,         requireBase: false     });  };  angular.module("app", ["ui.router", "ui.bootstrap", "app.line", "app.modal"])     .config(AppConfig)     .factory("appService", AppService);  })(); </code></pre>  <p>Here is my Line Controller which never initializes if my promise is rejected.</p>  <pre><code> (function () {  function LineController($scope, pageOptions) {      var self = this;      // INITIALIZE     self.pageOptions = pageOptions;  };  angular.module("app.line")     .controller("lineController", LineController);   })(); </code></pre>