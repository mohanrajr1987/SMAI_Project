<p>On a Project i use Objective-c 2.0-Swift2.0 and XCode 7.0.</p>  <p>So the matter is: I'm tryin to put some string gotten from txt file in order to be shown into a UiTextView object.  The catch from another Object-C call was fine. The reading of the file txt Was fine</p>  <p>...but the putting String into the UITextView! returns me always Nil. It's a dummy work but... it's still not work!</p>  <p>I tried to do the same as single Application Swift File: it works! p.s. Notice i did a IBoutlet to connect the UIView Object into the StoryBoard to this Class.</p>  <p>Here's the code, if you need more details i would be happy to provide this.</p>  <pre><code>import UIKit  @objc(TextControllerSwift) class TextControllerSwift: UIViewController { var textRoom: String? var textPlaying: String?  @IBOutlet weak var textMuseum: UITextView!  override func viewDidLoad() {     super.viewDidLoad()     realplay() }  override func didReceiveMemoryWarning() {     super.didReceiveMemoryWarning() }  func playText(textSelect: String) { //textSelect REturn a string value from another Object-C Class -See comments in the Segue add in.      textPlaying = textSelect  }   func realPlay(){      let path = NSBundle.mainBundle().pathForResource(textPlaying, ofType:"txt")      if (path != nil){         //read the file         do {             let textRoom = try NSString(contentsOfFile: path!, encoding: NSUTF8StringEncoding)             print(textRoom)         }         catch {/* let's ignore when i didn't find file */}          textMuseum!.text="pippo"  //Nil         print(textMuseum!.text)    //Nil     textMuseum.text=textMuseum.text.stringByAppendingString(String(textRoom))  //Nil      } }} </code></pre>  <p>it give me  "<strong>fatal error: unexpectedly found nil while unwrapping an Optional value</strong>"</p>  <p>Why? Why? in the same project i call another Swift Class and it works really fine. (AKA i followed the guideline for coexisting Swift&amp;Objective-C classes) Thanks a lot in advance for your answers.</p>  <p><strong>EDIT:</strong> Added info about the Caller from Objective-C, maybe this helps. </p>  <pre><code>   `if ([segue.identifier isEqualToString:@"segueIntroTesto"]) {      NSLog(@"%@ in segueIntroTesto" , selectedIntroFilm);     TextControllerSwift *destViewController = segue.destinationViewController;     [destViewController playText:selectedIntroFilm];     }` </code></pre>  <p><strong>EDIT2:</strong>: removed <code>*self.viewDidLoad()*</code> under playText func.</p>  <p><strong>EDIT3:</strong>: splitted the function <code>playText()</code> into another Function to give time to XCode (uffff) to get the new View then i REMOVED the old damned Outlet :D ...cheers I solved Thanks</p>