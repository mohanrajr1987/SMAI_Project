<p>I'm working on an app that should be hidden behind login view. </p>  <p>So in general, I have a tab navigation controller which should hold pretty much the entire app and my logic is when the app loads, the initial View controller is the tab navigation controller, which shows its first View IF the user is logged in. If it's not logged in, they should see login/register page. Both login and register page work with Parse, they are ok and function well. They are presented Modally (using segues) on top of the first View in the Tab view controller. </p>  <p>The issue is that when I login (and I confirm that it works!) the login View controller is not dismissed in order to see the tab view controller and I think that I might have messed something up in the segues. The segue to present the login view if the user is not logged in is made from the protected view (not it's navigation controller, although i tested that too, doesn't work) to login view controller. </p>  <p>Also, the code in the protected page is like this: </p>  <pre><code>override func viewDidAppear(animated: Bool) {     self.performSegueWithIdentifier("segueToLoginView", sender: self) } </code></pre>  <p>Here's what my story board looks like:</p>  <p><a href="http://i.stack.imgur.com/d7qLY.png" rel="nofollow"><img src="http://i.stack.imgur.com/d7qLY.png" alt="enter image description here"></a></p>  <p>So, the login segue is presented modally and here's my code for the login button.</p>  <pre><code>@IBAction func loginButtonTapped(sender: AnyObject) {      let username = usernameTextField.text     let password = passwordTextField.text       // Sends to Parse to see if user exists     PFUser.logInWithUsernameInBackground(username!, password: password!) {         (user: PFUser?, error: NSError?) -&gt; Void in          if user != nil {              // LOGIN Successful             NSUserDefaults.standardUserDefaults().setBool(true, forKey: "isUserLoggedIn")             NSUserDefaults.standardUserDefaults().synchronize()             self.dismissViewControllerAnimated(true, completion: nil)             print("User logged in")          } else {              // Display Failed Login Alert message with confirmation             let failedLoginAttepmt = UIAlertController(                 title: "Ups!",                 message: "Something went wrong, try again...",                 preferredStyle: UIAlertControllerStyle.Alert             )             let confirmAction = UIAlertAction(                 title: "OK!",                 style: UIAlertActionStyle.Default)                 { action in                     self.dismissViewControllerAnimated(true, completion: nil)                 }              failedLoginAttepmt.addAction(confirmAction)             self.presentViewController(failedLoginAttepmt, animated: true, completion: nil)              print("Could not find the user")         } </code></pre>  <p>and this line of code <code>self.dismissViewControllerAnimated(true, completion: nil)</code> should dismiss the modally presented login view controller, as I do see the print statement in the console. </p>  <p>Where's my mistake?</p>