<p>I was trying to understand more about bindings delay and its effects. I've implemented a simple code, but, honestly, I didn't notice any visual difference in the end, with or without delays. Here is the code:</p>  <pre><code>&lt;Window x:Class="Example00.Window1" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"  Title="Window1" Height="300" Width="300"&gt;  &lt;Grid  &gt;        &lt;Grid.RowDefinitions &gt;         &lt;RowDefinition Height="*" /&gt;         &lt;RowDefinition Height="*" /&gt;         &lt;RowDefinition Height="*" /&gt;     &lt;/Grid.RowDefinitions&gt;     &lt;TextBox Name="mySourceElement" Grid.Row="0" &gt;Hello World&lt;/TextBox&gt;     &lt;TextBlock Grid.Row="1"&gt;                     &lt;TextBlock.Text&gt;             &lt;Binding ElementName="mySourceElement" Path="Text" Mode="TwoWay" Delay="60000" /&gt;         &lt;/TextBlock.Text&gt;     &lt;/TextBlock&gt;       &lt;TextBlock Text="{Binding ElementName=mySourceElement, Mode=TwoWay, Path=Text, Delay=50000}" Grid.Row="2" /&gt; &lt;/Grid&gt; </code></pre>  <p> It is basically a code based on a tutorial from Code Project (<a href="http://www.codeproject.com/Articles/29054/WPF-Data-Binding-Part" rel="nofollow">http://www.codeproject.com/Articles/29054/WPF-Data-Binding-Part</a> - example zero), but using .Net 4.5 and with the delays added. I added a very long delay to visually see the difference, however I didn't notice anything different from not using delays.</p>  <p>I wonder if I misunderstood the property - shouldn't the text on the other textboxes wait the "delay" amount to reflect the change typed by the user on the first textbox?</p>