<p>Let's have two code snippets:</p>  <p><strong>A:</strong></p>  <pre><code>public class Foo {     private static Bar _unused = new Bar(); } </code></pre>  <p><strong>B:</strong></p>  <pre><code>public class Foo {     private static Bar _unused;      static Foo()     {         _unused = new Bar();     } } </code></pre>  <p>In case <strong>A</strong> the CLR will not even call the Bar ctor (unless it is debug build or the debugger is attached), however in case <strong>B</strong> it is called under all circumstances.</p>  <p>The thing is that in Bar constructor one can have calls that will make this instance reachable from elsewhere - most typically <em>events subscriptions</em>.</p>  <p>So:</p>  <ul> <li><em>Why are the cases <strong>A</strong> and <strong>B</strong> evaluated differently?</em></li> <li><em>Why the CLR is not calling Bar ctor at all in case <strong>A</strong> - as it should not evaluate it as garbage until ctor is finished and instance is assigned to the appropriate field?</em></li> </ul>