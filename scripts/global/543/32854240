<p>I created this program. It does nothing of interest but use processing power.</p>  <p>Looking at the output with <code>objdump -d</code>, I can see the three <code>rand</code> calls and corresponding <code>mov</code> instructions near the end even when compiling with O3 .</p>  <p>Why doesn't the compiler realize that memory isn't going to be used and just replace the bottom half with <code>while(1){}</code>? I'm using <code>gcc</code>, but I'm mostly interested in what is required by the standard.</p>  <pre><code>/*  * Create a program that does nothing except slow down the computer.  */ #include &lt;cstdlib&gt; #include &lt;unistd.h&gt;  int getRand(int max) {   return rand() % max; }  int main() {   for (int thread = 0; thread &lt; 5; thread++) {     fork();   }   int len = 1000;   int *garbage = (int*)malloc(sizeof(int)*len);   for (int x = 0; x &lt; len; x++) {     garbage[x] = x;   }   while (true) {     garbage[getRand(len)] = garbage[getRand(len)] - garbage[getRand(len)];   } } </code></pre>