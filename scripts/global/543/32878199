<p>I need to find all objects in a list that intersect with at least one other object in the list. This is determined from a few settings:</p>  <ol> <li>A list of "duplicate check" fields (e.g. a Person can intersect on <code>FirstName</code>, <code>LastName</code>, or <code>DOB</code>).</li> <li>The minimum number of fields which must be equal for two Persons to intersect (e.g. if the number is 2, Person A and Person B would intersect if they have either the same <code>FirstName</code> and <code>LastName</code>, the same <code>FirstName</code> and <code>DOB</code>, or the same <code>LastName</code> and <code>DOB</code>).</li> </ol>  <p>What is the most efficient way to determine this? Right now, using SQL and temp tables with <code>GROUP BY</code> statements is most performant, but not good enough. I tried using dictionaries and hardcoding various property checks in C#/LINQ, but that is even worse. I've been looking into disjoint sets and Levenshtein distance, but that seems just as inefficient for a large list. Is this just an NP Complete problem?</p>