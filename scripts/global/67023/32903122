<p>My Fragment class</p>  <pre><code>public class Fragment2 extends Fragment {  public static final String ARG_PAGE = "ARG_PAGE";  private int mPage;    public static Fragment2 newInstance(int page) {     Bundle args = new Bundle();     args.putInt(ARG_PAGE, page);     Fragment2 fragment = new Fragment2();     fragment.setArguments(args);     return fragment; }  DAOClass dao; private List&lt;ChildPojo&gt; cp= new ArrayList&lt;ChildPojo&gt;();    @Override public void onCreate(Bundle savedInstanceState) {     DatabaseHelper myDbHelper = new DatabaseHelper(getActivity());     myDbHelper = new DatabaseHelper(getActivity());     mPage = getArguments().getInt(ARG_PAGE);      try {          myDbHelper.createDataBase();      }catch(SQLException sqle){          throw sqle;      } catch (IOException e) {         e.printStackTrace();     }finally{         myDbHelper.closeDataBase();     }       dao = new DAOClass(getActivity());     dao.open();     this.cp=dao.getStatusesFromCategory(mPage);     super.onCreate(savedInstanceState); }  @Override public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {     View rootView = inflater.inflate(R.layout.fragment2, container, false);      ListView listView = (ListView) rootView.findViewById(R.id.list2);      MySimpleArrayAdapter adapter = new MySimpleArrayAdapter(getActivity(),cp);     listView.setAdapter(adapter);      return rootView; } </code></pre>  <p>}</p>  <p>This is the same fragment used on each tab.. i want to retriev the maintotal value when again fragment loads on swiping tab with diff listView .. as there is only one fragment </p>  <p>Custome Adapter Class</p>  <pre><code>public class MySimpleArrayAdapter extends ArrayAdapter&lt;ChildPojo&gt; { static class ViewHolder {     public TextView text1;     public TextView text2;     public ImageView plusImage;     public TextView counterViewHolder;     public ImageView minusImage;     public TextView hidded; }  private final Context context; private final List&lt;ChildPojo&gt; values; private Maintain[] array = null; private TextView _value; private String _stringVal; double maintotal = 0;  public MySimpleArrayAdapter(Context context,List&lt;ChildPojo&gt; values) {     super(context, R.layout.row_item, values);     this.context = context;     this.values = values; }  @Override public View getView(int position, View convertView, ViewGroup parent) {     View rowView = convertView;     if (rowView == null) {         rowView = LayoutInflater.from(this.getContext())                 .inflate(R.layout.row_item, parent, false);         // configure view holder         ViewHolder viewHolder = new ViewHolder();         viewHolder.text1 = (TextView) rowView.findViewById(R.id.itemName);         viewHolder.text2 = (TextView) rowView.findViewById(R.id.itemPrice);         viewHolder.text1.setHeight(100);         //viewHolder.text1.setTextSize(20);         viewHolder.text1.setMinimumHeight(100);         viewHolder.text2.setHeight(100);         viewHolder.text2.setMinimumHeight(100);          viewHolder.plusImage =(ImageView) rowView.findViewById(R.id.plusButton);         viewHolder.minusImage =(ImageView) rowView.findViewById(R.id.minusButton);         viewHolder.counterViewHolder =(TextView) rowView.findViewById(R.id.countertv);         viewHolder.hidded = (TextView)rowView.findViewById(R.id.hidden);            rowView.setTag(viewHolder);     }      final ViewHolder holder = (ViewHolder) rowView.getTag();       String s = values.get(position).getNamec();     holder.text1.setText(s);     int i = values.get(position).getPrice();     holder.text2.setText(String.format("%d",i));      array = new Maintain[values.size()];      for (int j = 0; j &lt; values.size(); j++) {         array[j] = new Maintain();         array[j].name = values.get(position).getNamec();         array[j].price = values.get(position).getPrice();         array[j].counter = 0;         array[j].total=0;      }      View.OnClickListener increaseListener = new View.OnClickListener() {         @Override         public void onClick(View v) {             View parentRow = (View) v.getParent();             ListView listView = (ListView) parentRow.getParent();               final int position = listView.getPositionForView(parentRow);             int cc = ++array[position].counter;             _stringVal = Integer.toString(cc);             //_value.setText(_stringVal);             holder.counterViewHolder.setText(_stringVal);             //Toast.makeText(getContext(),s,Toast.LENGTH_LONG).show();             maintotal = maintotal+ values.get(position).getPrice();             array[position].setTotal(maintotal);             Toast.makeText(getContext(), Double.toString(maintotal), Toast.LENGTH_SHORT).show();         }     };      holder.plusImage.setOnClickListener(increaseListener);      View.OnClickListener decreaseListener = new View.OnClickListener() {         @Override         public void onClick(View v) {             View parentRow = (View) v.getParent();             ListView listView = (ListView) parentRow.getParent();               final int position = listView.getPositionForView(parentRow);             int cc=0;             if(array[position].counter&gt;0) {                  cc = --array[position].counter;                 _stringVal = Integer.toString(cc);                 holder.counterViewHolder.setText(_stringVal);                 maintotal = maintotal- values.get(position).getPrice();                 array[position].setTotal(maintotal);                 Toast.makeText(getContext(), Double.toString(maintotal), Toast.LENGTH_SHORT).show();             }              //_value.setText(_stringVal);              //Toast.makeText(getContext(),s,Toast.LENGTH_LONG).show();           }     };      holder.minusImage.setOnClickListener(decreaseListener);          return rowView; } </code></pre>