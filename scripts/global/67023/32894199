<p>I try to understand how to ork with new Views, like NestedScroll and CoordinatorLayout. I was stopped by a one problem.  I have followed code:</p>  <pre><code>&lt;android.support.design.widget.CoordinatorLayout     xmlns:android="http://schemas.android.com/apk/res/android"     xmlns:app="http://schemas.android.com/apk/res-auto"     android:id="@+id/main_content"     android:layout_width="match_parent"     android:layout_height="match_parent"     android:fitsSystemWindows="true"&gt;      &lt;android.support.design.widget.AppBarLayout         android:id="@+id/appbar"         android:layout_width="match_parent"         android:layout_height="256dp"         android:fitsSystemWindows="true"&gt;          &lt;android.support.design.widget.CollapsingToolbarLayout             android:id="@+id/collapsing_toolbar"             android:layout_width="match_parent"             android:layout_height="match_parent"             app:layout_scrollFlags="scroll|exitUntilCollapsed"             android:fitsSystemWindows="true"             app:contentScrim="?attr/colorPrimary"             app:expandedTitleMarginStart="48dp"             app:expandedTitleMarginEnd="64dp"&gt;              &lt;ImageView                 android:id="@+id/backdrop"                 android:layout_width="match_parent"                 android:layout_height="match_parent"                 android:scaleType="centerCrop"                 android:fitsSystemWindows="true"                 android:src="@mipmap/ic_launcher"                 app:layout_collapseMode="parallax" /&gt;              &lt;android.support.v7.widget.Toolbar                 android:id="@+id/toolbar"                 android:layout_width="match_parent"                 android:layout_height="?attr/actionBarSize"                 app:popupTheme="@style/ThemeOverlay.AppCompat.Light"                 app:layout_collapseMode="pin" /&gt;          &lt;/android.support.design.widget.CollapsingToolbarLayout&gt;      &lt;/android.support.design.widget.AppBarLayout&gt;      &lt;android.support.v4.widget.NestedScrollView         android:layout_width="match_parent"         android:layout_height="match_parent"         app:layout_behavior="@string/appbar_scrolling_view_behavior"         android:id="@+id/releases_container"         android:foregroundGravity="bottom"&gt;         &lt;fragment             android:layout_height="match_parent"             android:layout_width="match_parent"             class="TestListFragment"             /&gt;     &lt;/android.support.v4.widget.NestedScrollView&gt;  &lt;/android.support.design.widget.CoordinatorLayout&gt; </code></pre>  <p>TestListFragment is default ListFragment with some items. But I can't understand - how can I get the fragment to fill all free space under appBar? Fragment height always is height of one item. Only way I found out - to set specified number. But for different screen it can be bad. </p>  <p><strong>UPDATE:</strong> </p>  <p>Here is xml :</p>  <p>fragment_releases_list.xml </p>  <pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt;     &lt;FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"         xmlns:tools="http://schemas.android.com/tools"           android:layout_width="match_parent"         android:layout_height="wrap_content"         tools:context="com.example.sd.epscape20.ReleasesListFragment"&gt;      &lt;ListView android:id="@android:id/list"         android:layout_width="match_parent"         android:layout_height="wrap_content" /&gt;      &lt;TextView android:id="@android:id/empty"          android:layout_width="match_parent"         android:layout_height="wrap_content"          android:gravity="center" /&gt; &lt;/FrameLayout&gt; </code></pre>  <p>And class:</p>  <pre><code>import android.support.v4.app.Fragment;  public class TestListFragment      extends Fragment      implements AdapterView.OnItemClickListener {      private AbsListView mListView;     private ListAdapter mAdapter;     public ReleasesListFragment() {}     @Override     public void onItemClick(AdapterView&lt;?&gt; adapterView, View view, int i, long l) {}      @Override     public void onCreate(Bundle savedInstanceState) {         super.onCreate(savedInstanceState);          List&lt;String&gt; l = new ArrayList&lt;&gt;();          for(int i=0; i&lt;10; i++)         l.add("item " + i);          mAdapter = new ArrayAdapter&lt;&gt;(getActivity(),                 android.R.layout.simple_list_item_1, android.R.id.text1, l);     }      @Override     public View onCreateView(LayoutInflater inflater, ViewGroup container,                              Bundle savedInstanceState) {         View view = inflater.inflate(                              R.layout.fragment_releaseslist, container, false);         mListView = (AbsListView) view.findViewById(android.R.id.list);         mListView.setAdapter(mAdapter);         mListView.setOnItemClickListener(this);         return view;     } </code></pre>