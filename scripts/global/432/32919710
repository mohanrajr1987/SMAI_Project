<p>I have created 2 class <code>PatientInfo</code> and <code>PatientInfoDirectory</code>. 1 is toinitialize the variable and 2 is to store them in a arraylist. I have created 4 panels <code>createJPanel</code> <code>vitalsignJPanel</code> <code>tableJPanel</code> and <code>viewJPanel</code>. I have used some variables in <code>createJPanel</code>, some in <code>vitalsignJPanel</code> and I want to link both the panels in such a way that it should be viewed together but they are displaying separately. How can I solve this problem. I am new to java therefore forgive me if I have done silly mistakes.</p>  <blockquote>   <p>PatientInfo class</p> </blockquote>  <pre><code>package business;  public class PatientInfo {  private String Name; private String Identity; private int Age; private String Doctor; private String Pharmacy; private int Respiratoryrate; private int Heartrate; private int Systolicbloodpressure; private float Weight; private String timestamp; private String condition;   public int getRespiratoryrate() {     return Respiratoryrate; }  public void setRespiratoryrate(int Respiratoryrate) {     this.Respiratoryrate = Respiratoryrate; }  public int getHeartrate() {     return Heartrate; }  public void setHeartrate(int Heartrate) {     this.Heartrate = Heartrate; }  public int getSystolicbloodpressure() {     return Systolicbloodpressure; }  public void setSystolicbloodpressure(int Systolicbloodpressure) {     this.Systolicbloodpressure = Systolicbloodpressure; }  public float getWeight() {     return Weight; }  public void setWeight(float Weight) {     this.Weight = Weight; }  public String getTimestamp() {     return timestamp; }  public void setTimestamp(String timestamp) {     this.timestamp = timestamp; }  public String getCondition() {     return condition; }  public void setCondition(String condition) {     this.condition = condition; }   public String getDoctor() {     return Doctor; }  public void setDoctor(String Doctor) {     this.Doctor = Doctor; }  public String getPharmacy() {     return Pharmacy; }  public void setPharmacy(String Pharmacy) {     this.Pharmacy = Pharmacy; }   public String getName() {     return Name; }  public void setName(String Name) {     this.Name = Name; }  public String getIdentity() {     return Identity; }  public void setIdentity(String Identity) {     this.Identity = Identity; }  public int getAge() {     return Age; }  public void setAge(int Age) {     this.Age = Age; }  @Override public String toString() {     return Name; } } </code></pre>  <blockquote>   <p>PatientInfoDirectory class</p> </blockquote>  <pre><code>package business;  import java.util.ArrayList;  public class PatientInfoDirectory {  private ArrayList&lt;PatientInfo&gt; PatientInfoList;  public PatientInfoDirectory() { PatientInfoList = new ArrayList&lt;&gt;(); }   public ArrayList&lt;PatientInfo&gt; getPatientInfoList() {     return PatientInfoList; }   public void setPatientInfoList(ArrayList&lt;PatientInfo&gt; PatientInfoList) {     this.PatientInfoList = PatientInfoList; }  public PatientInfo addPatientInfo(){ PatientInfo patientinfo = new PatientInfo(); PatientInfoList.add(patientinfo); return patientinfo; }  public void deletePatientInfo(PatientInfo patientinfoToBeDeleted){ PatientInfoList.remove(patientinfoToBeDeleted); }  public PatientInfo searchByID(String idNumberKey){ for(PatientInfo patientinfo:PatientInfoList){     if(patientinfo.getIdentity().equals(idNumberKey)){     return patientinfo;     } } return null;  }  } </code></pre>  <blockquote>   <p>createJPanel</p> </blockquote>  <pre><code>package userinterface;  import business.PatientInfo; import business.PatientInfoDirectory; import java.awt.CardLayout; import javax.swing.JOptionPane; import javax.swing.JPanel;  public class createJPanel extends javax.swing.JPanel {  private JPanel userProcessContainer; private PatientInfoDirectory patientinfodirectory; private PatientInfo info;   public createJPanel(PatientInfo info) {      this.info=info; }  createJPanel(JPanel userProcessContainer,PatientInfoDirectory    patientinfodirectory) { initComponents();     this.userProcessContainer=userProcessContainer;     this.patientinfodirectory=patientinfodirectory; }                        private void addvitalsignButtonActionPerformed(java.awt.event.ActionEvent  evt) {                                                                try{                      String Name = nameTextField.getText();                     String Identity = idTextField.getText();                     String doctor = doctorTextField.getText();                     int age = Integer.parseInt(ageTextField.getText());                     String pharmacy = pharmacyTextField.getText();                      PatientInfo info = patientinfodirectory.addPatientInfo();                     info.setName(Name);                     info.setIdentity(Identity);                     info.setDoctor(doctor);                     info.setAge(age);                     info.setPharmacy(pharmacy);                     JOptionPane.showMessageDialog(null, "Account Has Been  Added successfully");                      vitalsignJPanel area = new  vitalsignJPanel(userProcessContainer, patientinfodirectory);                     userProcessContainer.add("vitalsign",area);                     CardLayout layout = (CardLayout)userProcessContainer.getLayout();                     layout.next(userProcessContainer);                  }                 else{                         JOptionPane.showMessageDialog(null, "Please Enter All The Fields");                                 }                 }              catch(NumberFormatException e){                 JOptionPane.showMessageDialog(null, "Please Enter Correct  Values", "Error", JOptionPane.ERROR_MESSAGE);                 }   }                                                    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                // TODO add your handling code here:     userProcessContainer.remove(this);     CardLayout layout = (CardLayout)userProcessContainer.getLayout();     layout.previous(userProcessContainer); }                                            private void idTextFieldActionPerformed(java.awt.event.ActionEvent evt) {                                                 // TODO add your handling code here: }                                             private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                // TODO add your handling code here:     try{                  {                     String Name = nameTextField.getText();                     String Identity = idTextField.getText();                     String doctor = doctorTextField.getText();                     int age = Integer.parseInt(ageTextField.getText());                     String pharmacy = pharmacyTextField.getText();                      PatientInfo info =  patientinfodirectory.addPatientInfo();                     info.setName(Name);                     info.setIdentity(Identity);                     info.setDoctor(doctor);                     info.setAge(age);                     info.setPharmacy(pharmacy);                     JOptionPane.showMessageDialog(null, "Account Has Been Added successfully");                     resetFields();                 }     else{                         JOptionPane.showMessageDialog(null, "Please Enter All The Fields");                                 }                 }              catch(NumberFormatException e){                 JOptionPane.showMessageDialog(null, "Please Enter Correct Values", "Error", JOptionPane.ERROR_MESSAGE);                 } }                                            public void resetFields(){ nameTextField.setText(""); idTextField.setText(""); ageTextField.setText(""); doctorTextField.setText(""); pharmacyTextField.setText("");  }  private javax.swing.JButton addvitalsignButton; private javax.swing.JTextField ageTextField; private javax.swing.JButton backButton; private javax.swing.JTextField doctorTextField; private javax.swing.JTextField idTextField; private javax.swing.JLabel jLabel1; private javax.swing.JLabel jLabel2; private javax.swing.JLabel jLabel3; private javax.swing.JLabel jLabel4; private javax.swing.JLabel jLabel5;  private javax.swing.JPanel jPanel1; private javax.swing.JTextField nameTextField; private javax.swing.JTextField pharmacyTextField; private javax.swing.JButton saveButton; // End of variables declaration                    </code></pre>  <p>}</p>  <blockquote>   <p>vitalsignJPanel</p> </blockquote>  <pre><code>package userinterface;  import business.PatientInfo; import business.PatientInfoDirectory; import java.awt.CardLayout; import javax.swing.JPanel; import java.util.Date; import javax.swing.JOptionPane;  public class vitalsignJPanel extends javax.swing.JPanel {  private JPanel userProcessContainer; private PatientInfoDirectory patientinfodirectory; private PatientInfo info;  /**  * Creates new form vitalsignJPanel  * @param userProcessContainer  * @param patientinfodirectory  * @param info  */ public vitalsignJPanel(PatientInfo info) {     initComponents();      this.info=info; }  vitalsignJPanel(JPanel userProcessContainer, PatientInfoDirectory patientinfodirectory) {     //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.     initComponents();     this.userProcessContainer=userProcessContainer;     this.patientinfodirectory=patientinfodirectory; }        private void saveButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                                 try{          int Respiratoryrate = Integer.parseInt(respiratoryrateTextField.getText());         int Heartrate = Integer.parseInt(heartrateTextField.getText());         int Systolicbloodpressure = Integer.parseInt(bloodpressureTextField.getText());         float weight = Float.parseFloat(weightTextField.getText());         String timestamp = new java.text.SimpleDateFormat("MM/dd/yyyy h:mm:ss a").format(new Date());          PatientInfo newAccount = patientinfodirectory.addPatientInfo();         newAccount.setRespiratoryrate(Respiratoryrate);         newAccount.setHeartrate(Heartrate);         newAccount.setSystolicbloodpressure(Systolicbloodpressure);         newAccount.setWeight(weight);         newAccount.setTimestamp(timestamp);            JOptionPane.showMessageDialog(null,"Information Has Been Added Successfully","Success",JOptionPane.PLAIN_MESSAGE);          workareaJPanel table = new workareaJPanel(userProcessContainer, patientinfodirectory);     userProcessContainer.add("workareaJPanel",table);     CardLayout layout = (CardLayout)userProcessContainer.getLayout();     layout.next(userProcessContainer);      JOptionPane.showMessageDialog(null, "Please Enter All The Fields");       }     catch(NumberFormatException e){     JOptionPane.showMessageDialog(null, "Please Enter Correct Values", "Error", JOptionPane.ERROR_MESSAGE);     }   }                                              // Variables declaration - do not modify                      private javax.swing.JLabel bloodpressureLabel; private javax.swing.JTextField bloodpressureTextField; private javax.swing.JLabel heartrateLabel; private javax.swing.JTextField heartrateTextField; private javax.swing.JPanel jPanel1; private javax.swing.JLabel respiratoryrateLabel; private javax.swing.JTextField respiratoryrateTextField; private javax.swing.JButton saveButton1; private javax.swing.JLabel weightLabel; private javax.swing.JTextField weightTextField; // End of variables declaration                    } </code></pre>  <blockquote>   <p>tableJPanel</p> </blockquote>  <pre><code>package userinterface;  import business.PatientInfo; import business.PatientInfoDirectory; import java.awt.CardLayout; import javax.swing.JOptionPane; import javax.swing.JPanel; import javax.swing.table.DefaultTableModel;  public class tableJPanel extends javax.swing.JPanel { private JPanel userProcessContainer; private PatientInfoDirectory patientinfodirectory;   public tableJPanel(JPanel userProcessContainer, PatientInfoDirectory patientinfodirectory) {     initComponents();     this.userProcessContainer=userProcessContainer;     this.patientinfodirectory=patientinfodirectory;     populateTable(); }  public void populateTable(){     DefaultTableModel dtm = (DefaultTableModel)Table.getModel();     dtm.setRowCount(0);      for(PatientInfo account:patientinfodirectory.getPatientInfoList()){     Object row[] = new Object[2];     row[0]=account;     row[1]=account.getCondition();     dtm.addRow(row);     }  }    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {      userProcessContainer.remove(this);     CardLayout layout = (CardLayout)userProcessContainer.getLayout();     layout.previous(userProcessContainer); }                                            private void viewButtonActionPerformed(java.awt.event.ActionEvent evt) {     int selectRow=Table.getSelectedRow();      if(selectRow&gt;=0){          PatientInfo accountToBeViewed = (PatientInfo)Table.getValueAt(selectRow, 0);          viewJPanel view = new viewJPanel(userProcessContainer, accountToBeViewed, this);          userProcessContainer.add("viewaccountJPanel",view);          CardLayout layout = (CardLayout)userProcessContainer.getLayout();          layout.next(userProcessContainer);     }     else{         JOptionPane.showMessageDialog(null, "Please select a row","Error", JOptionPane.ERROR_MESSAGE);     } }                                            private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                   int selectRow=Table.getSelectedRow();      if(selectRow&gt;=0){     //user has selected a row         PatientInfo patientinfoToBeDeleted = (PatientInfo)Table.getValueAt(selectRow, 0);         patientinfodirectory.deletePatientInfo(patientinfoToBeDeleted);         JOptionPane.showMessageDialog(null, "Account has been deleted","Success",JOptionPane.PLAIN_MESSAGE);         populateTable();     }     else{         JOptionPane.showMessageDialog(null, "Please select a row","Error", JOptionPane.ERROR_MESSAGE);     } }                                              private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                  // TODO add your handling code here:      String key = searchTextField.getText();     if(key.length()==0 || key==null){              JOptionPane.showMessageDialog(null, "Please enter your account number","Error", JOptionPane.ERROR_MESSAGE);     }     else{     PatientInfo patientinfo=patientinfodirectory.searchByID(key);     if(patientinfo!=null){      viewJPanel view = new viewJPanel(userProcessContainer, patientinfo, this);      userProcessContainer.add("viewJPanel",view);      CardLayout layout = (CardLayout)userProcessContainer.getLayout();      layout.next(userProcessContainer);     }     else{      JOptionPane.showMessageDialog(null, "This account does not exist","Error", JOptionPane.ERROR_MESSAGE);      }     } }                                               // Variables declaration - do not modify                      private javax.swing.JTable Table; private javax.swing.JButton backButton; private javax.swing.JButton deleteButton; private javax.swing.JScrollPane jScrollPane1; private javax.swing.JButton searchButton; private javax.swing.JTextField searchTextField; private javax.swing.JButton viewButton; // End of variables declaration                    </code></pre>  <p>}</p>  <blockquote>   <p>viewJPanel</p> </blockquote>  <pre><code>package userinterface;  import business.PatientInfo; import business.PatientInfoDirectory; import java.awt.CardLayout; import java.util.Date; import javax.swing.JOptionPane; import javax.swing.JPanel;  public class viewJPanel extends javax.swing.JPanel {  private JPanel userProcessContainer; private PatientInfoDirectory patientinfodirectory; private PatientInfo info; private tableJPanel majp;  /**  * Creates new form viewJPanel  * @param userProcessContainer  * @param info  * @param patientinfodirectory  * @param majp  */ public viewJPanel(JPanel userProcessContainer, PatientInfo info, tableJPanel majp) {     initComponents();     this.userProcessContainer=userProcessContainer;     this.info=info;     this.patientinfodirectory=patientinfodirectory;     this.majp = majp;      nameTextField.setText(info.getName());     idTextField.setText(info.getIdentity());     ageTextField.setText(String.valueOf(info.getAge()));     doctorTextField.setText(info.getDoctor());     pharmacyTextField.setText(info.getPharmacy());        respiratoryrateTextField.setText(String.valueOf(info.getRespiratoryrate()));     heartrateTextField.setText(String.valueOf(info.getHeartrate()));     bloodpressureTextField.setText(String.valueOf(info.getSystolicbloodpressure()));     weightTextField.setText(String.valueOf(info.getWeight()));  }  private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                              userProcessContainer.remove(this);     majp.populateTable();     CardLayout layout = (CardLayout)userProcessContainer.getLayout();     layout.previous(userProcessContainer); }                                          private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {                     nameTextField.setEnabled(true);     idTextField.setEnabled(true);     ageTextField.setEnabled(true);     doctorTextField.setEnabled(true);     pharmacyTextField.setEnabled(true);     respiratoryrateTextField.setEnabled(true);     heartrateTextField.setEnabled(true);     bloodpressureTextField.setEnabled(true);     weightTextField.setEnabled(true);     saveButton.setEnabled(true);     updateButton.setEnabled(false); }                                              private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                 try{      String Name = nameTextField.getText();     String Identity = idTextField.getText();     String doctor = doctorTextField.getText();     int age = Integer.parseInt(ageTextField.getText());     String pharmacy = pharmacyTextField.getText();     int Respiratoryrate = Integer.parseInt(respiratoryrateTextField.getText());         int Heartrate = Integer.parseInt(heartrateTextField.getText());         int Systolicbloodpressure = Integer.parseInt(bloodpressureTextField.getText());         float weight = Float.parseFloat(weightTextField.getText());         String timestamp = new java.text.SimpleDateFormat("MM/dd/yyyy h:mm:ss a").format(new Date());       info.setName(Name);     info.setIdentity(Identity);     info.setDoctor(doctor);     info.setAge(age);     info.setPharmacy(pharmacy);     info.setRespiratoryrate(Respiratoryrate);         info.setHeartrate(Heartrate);         info.setSystolicbloodpressure(Systolicbloodpressure);         info.setWeight(weight);         info.setTimestamp(timestamp);      JOptionPane.showMessageDialog(null, "Account Has Been Updated Successfully","Success",JOptionPane.PLAIN_MESSAGE);       saveButton.setEnabled(true);       updateButton.setEnabled(false);       nameTextField.setEnabled(false);     idTextField.setEnabled(false);     ageTextField.setEnabled(false);     doctorTextField.setEnabled(false);     pharmacyTextField.setEnabled(false);     respiratoryrateTextField.setEnabled(false);     heartrateTextField.setEnabled(false);     bloodpressureTextField.setEnabled(false);     weightTextField.setEnabled(false);      else{         JOptionPane.showMessageDialog(null, "Please Enter All The Fields");     }     }     catch(NumberFormatException e){     JOptionPane.showMessageDialog(null, "Please Enter Correct Values", "Error", JOptionPane.ERROR_MESSAGE);     } }                                            private javax.swing.JTextField ageTextField; private javax.swing.JLabel bloodpressureLabel; private javax.swing.JTextField bloodpressureTextField; private javax.swing.JTextField doctorTextField; private javax.swing.JLabel heartrateLabel; private javax.swing.JTextField heartrateTextField; private javax.swing.JTextField idTextField; private javax.swing.JButton jButton1; private javax.swing.JLabel jLabel1; private javax.swing.JLabel jLabel2; private javax.swing.JLabel jLabel3; private javax.swing.JLabel jLabel4; private javax.swing.JLabel jLabel5; private javax.swing.JPanel jPanel1; private javax.swing.JTextField nameTextField; private javax.swing.JTextField pharmacyTextField; private javax.swing.JLabel respiratoryrateLabel; private javax.swing.JTextField respiratoryrateTextField; private javax.swing.JButton saveButton; private javax.swing.JButton updateButton; private javax.swing.JLabel weightLabel; private javax.swing.JTextField weightTextField;                    </code></pre>  <p>}</p>