<p>I have a Python 3 project that's structured like this:</p>  <pre><code>/project     __init__.py     /models         __init__.py         my_model.py         base_model.py     /tests         __init__.py         test.py </code></pre>  <p>In <code>test.py</code> I want to import <code>my_model</code>. My first attempt was <code>from models import my_model</code>, which threw an <code>ImportError: No module named 'models'</code>. <a href="http://stackoverflow.com/questions/14886143/python-import-module-from-sibling-folder">This question</a> recommended adding an <code>__init__.py</code> file to each directory, which didn't help. <a href="http://stackoverflow.com/a/9446075/676001">Another post</a> said to modify the path with:</p>  <pre><code>import sys; import os sys.path.insert(0, os.path.abspath('..')) </code></pre>  <p>but this throws an error when <code>my_model</code> tries to import from <code>base_model</code>.</p>  <p>This seems really straightforward but I'm stumped. Does anyone have any ideas?</p>