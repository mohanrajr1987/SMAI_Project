<p>I have a question on the import statement: Is it possible to wrongly import a module in the same package with similar name or with the same alias (import [module] as [alias])?</p>  <p>I have a Python project where I keep the running version of the code and the in-work revision under the same directory (any suggestion for better practice is welcome). Directory tree looks like:</p>  <pre><code>Package_A/   config/     ...(__init__.py, some config files)   __init__.py   main.py   main_new.py   module1.py   module1_new.py </code></pre>  <p>where users call main.py, and main.py imports module1.py. The import statement used is:</p>  <pre><code>import module1 as m1 </code></pre>  <p>The in-work revision is main_new.py which call module1_new.py using the following import statement:</p>  <pre><code>import module1_new as m1 </code></pre>  <p>This usually works fine, but once in a while, main.py imports module1_new instead of module1. Am I missing something here? What's the best practice for developing patches?</p>