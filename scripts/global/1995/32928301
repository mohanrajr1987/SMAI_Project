<p>My Driver code:</p>  <pre><code>import org.apache.hadoop.conf.Configured; import org.apache.hadoop.fs.Path; import org.apache.hadoop.io.IntWritable; import org.apache.hadoop.io.Text; import org.apache.hadoop.mapreduce.Job; import org.apache.hadoop.mapreduce.lib.input.FileInputFormat; import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;  public class WordCountDriver extends Configured {      public static void main(String[] args) throws Exception {         Job job = new Job();         job.setJarByClass(WordCountDriver.class);         job.setJobName("wordcountdriver");          FileInputFormat.setInputPaths(job, new Path(args[0]));         FileOutputFormat.setOutputPath(job, new Path(args[1]));          job.setMapperClass(WordCountMapper.class);         job.setReducerClass(WordCountReducer.class);          job.setPartitionerClass(WordCountPartitioner.class);         job.setNumReduceTasks(4);          job.setOutputKeyClass(Text.class);         job.setOutputValueClass(IntWritable.class);          System.exit(job.waitForCompletion(true) ? 0 : -1);     } } </code></pre>  <p>My mapper code:</p>  <pre><code>import java.io.IOException; import java.util.StringTokenizer; import org.apache.hadoop.io.IntWritable; import org.apache.hadoop.io.LongWritable; import org.apache.hadoop.io.Text; import org.apache.hadoop.mapreduce.Mapper;  public class WordCountMapper extends Mapper&lt;LongWritable, Text, Text, IntWritable&gt; {      private final static IntWritable one = new IntWritable(1);     private Text word = new Text();      public void map(LongWritable key, Text value, Context context) throws IOException, InterruptedException {         String line = value.toString();         StringTokenizer tokenizer = new StringTokenizer(line);         while (tokenizer.hasMoreTokens()) {             word.set(tokenizer.nextToken());             context.write(word, one);         }     } } </code></pre>  <p>Reducer code:</p>  <pre><code>import java.io.IOException; import org.apache.hadoop.io.IntWritable; import org.apache.hadoop.io.Text; import org.apache.hadoop.mapreduce.Reducer;  public class WordCountReducer extends Reducer&lt;Text, IntWritable, Text, IntWritable&gt; {      public void reduce(Text key, Iterable&lt;IntWritable&gt; values, Context context)             throws IOException, InterruptedException {         int sum = 0;         for(IntWritable value : values) {             sum += value.get();         }         context.write(key, new IntWritable(sum));     } } </code></pre>  <p>Partitioner code:</p>  <pre><code>import org.apache.hadoop.io.IntWritable;  import org.apache.hadoop.io.Text; import org.apache.hadoop.mapred.JobConf; import org.apache.hadoop.mapred.Partitioner;  public class WordCountPartitioner implements Partitioner&lt;Text, IntWritable&gt; {      @Override     public void configure(JobConf arg0) {         // TODO Auto-generated method stub     }      @Override     public int getPartition(Text key, IntWritable value, int setNumRedTasks) {         String line = value.toString();          if (line.length() == 1) {             return 0;         }         if (line.length() == 2) {             return 1;         }         if (line.length() == 3) {             return 2;         } else {             return 3;         }     } } </code></pre>  <p>Why am I getting this error?</p>