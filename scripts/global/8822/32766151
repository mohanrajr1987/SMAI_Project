<p>i'm currently working on a large software project which uses cmake as build system. But i have a problem to check if another target exists (or will exist).</p>  <p>For example there is root CMakeLists.txt and two modules that can optionally added to the software project as subfolders.</p>  <pre><code>. ├── A │   └── CMakeLists.txt ├── B │   └── CMakeLists.txt └── CMakeLists.txt </code></pre>  <p>In the root CMakeLists these modules are added with the add_subdirectory command:</p>  <pre><code>cmake_minimum_required(VERSION 2.8.11 FATAL_ERROR) project(root) add_subdirectory(./A) add_subdirectory(./B) </code></pre>  <p>In some cases i want to check in module A if module B exists and add an define to the compile options in module A:</p>  <pre><code>cmake_minimum_required(VERSION 2.8.11 FATAL_ERROR) project(A) add_libary(A a.cpp a.hpp) if (TARGET B)     target_compile_definitions(A PUBLIC HAVE_B) endif() </code></pre>  <p>The</p>  <pre><code>if(TARGET target-name) </code></pre>  <p>command will return false because this will only work if the modules are added in the right order to the root CMakeLists.txt.</p>  <p>Is there another check in cmake that doesn't depend on the order of the targets?</p>  <p>Greetings Perry</p>