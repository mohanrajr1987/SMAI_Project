<p>I wanted to know if there is a way to pass some flags to the compiler (g++) only at compile time and not at the linking. Let me explain with an example: I would like to build my program this way:</p>  <pre><code>g++ -c source1.cpp -o source1.o g++ -c source2.cpp -o source2.o g++  source2.o source1.o -o myProgram.c </code></pre>  <p>to do this I have created a CMakeLists.txt file that contains:</p>  <pre><code>PROJECT(myProgram) include_directories("${CMAKE_SOURCE_DIR}/inc") aux_source_directory("${CMAKE_SOURCE_DIR}/src" SRC_FILES) add_executable(${PROJECT_NAME} ${SRC_FILES}) </code></pre>  <p>then add this line to put the "-c" flag to the compiler:</p>  <pre><code>set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -c") </code></pre>  <p>But in this way, cmake add the "-c" flag always, even when g++ is doing the linking, ie:</p>  <pre><code>g++ -c source1.cpp -o source1.o g++ -c source2.cpp -o source2.o g++ -c  source2.o source1.o -o myProgram.c </code></pre>  <p>and logically myProgram will not be created because the g++ does not run linking (-c in the last instruction).</p>  <p>How do I use the flag "-c" (or any other flag) only at compile?</p>