<p>I am trying to store data into NSArray using a button and then retrieve it to be displayed in a table. However, the table remains empty after the button has been pushed. I think the problem might have to do with how the Car object is being added to the array and then stored in NSData. </p>  <p>CarTableViewController.h</p>  <pre><code>#import &lt;UIKit/UIKit.h&gt; #import "CarDetailViewController.h" #import "Car.h"  @interface CarListTableViewController : UITableViewController &lt;UITableViewDataSource, UITableViewDelegate&gt;  @property Car *selectedCar; @property NSMutableArray *listOfCars; @property (strong, nonatomic) IBOutlet UITableView *carTableView; @end </code></pre>  <p>CarTableViewController.m</p>  <pre><code>#import "CarListTableViewController.h" #import "CarEntryViewController.h"  @implementation CarListTableViewController @synthesize selectedCar, listOfCars, carTableView;  - (void)viewDidLoad {     [super viewDidLoad];      carTableView.delegate = self;     carTableView.dataSource = self;  }  - (void)didReceiveMemoryWarning {     [super didReceiveMemoryWarning];     // Dispose of any resources that can be recreated. }  #pragma mark - Table view data source  - (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {     // Return the number of sections.     return 1; }  - (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {     // Return the number of rows in the section.     return listOfCars.count; }   - (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {     UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:@"carCell" forIndexPath:indexPath];      if (cell == nil) {          cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleSubtitle reuseIdentifier:@"carCell"];         cell.selectionStyle = UITableViewCellSelectionStyleNone;         cell.textLabel.lineBreakMode = NSLineBreakByWordWrapping;         cell.textLabel.numberOfLines = 0;      }     Car *tempCar =[listOfCars objectAtIndex:indexPath.row];     cell.textLabel.text =tempCar.make;      return cell; }  - (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath {     [tableView deselectRowAtIndexPath:indexPath animated:true];     selectedCar = [listOfCars objectAtIndex:indexPath.row];     [self performSegueWithIdentifier:@"viewDetailsSegue" sender:nil]; }  #pragma mark - Navigation  - (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {     CarDetailViewController* vc = [segue destinationViewController];     vc.carObject = selectedCar; }  - (NSArray*) retrieveDataFromNSUserDefaults {     NSMutableArray *objectArray = [NSMutableArray new];     NSUserDefaults *currentDefaults = [NSUserDefaults standardUserDefaults];     NSData *dataRepresentingSavedArray = [currentDefaults objectForKey:@"savedArray"];     if (dataRepresentingSavedArray != nil) {         NSArray *oldSavedArray = [NSKeyedUnarchiver unarchiveObjectWithData:dataRepresentingSavedArray];         if (oldSavedArray != nil)             objectArray = [[NSMutableArray alloc]                            initWithArray:oldSavedArray];         else             objectArray = [[NSMutableArray alloc] init];     }     return objectArray; }  - (void)storeDataInNSUserDefaults:(Car *)carToStore {     NSMutableArray *objectArray = [NSMutableArray arrayWithArray:[self retrieveDataFromNSUserDefaults]];     [objectArray addObject:carToStore];     [[NSUserDefaults standardUserDefaults] setObject:[NSKeyedArchiver archivedDataWithRootObject:objectArray] forKey:@"savedArray"]; }  @end </code></pre>