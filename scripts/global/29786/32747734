<p>There are some similar questions that already exist on StackOverflow. I did check them out, and in most cases it returns nil because the <code>NSMutableArray</code> has not been initialised. But in my case I did initialise it. </p>  <p>Here's part of my code :</p>  <pre><code>- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath {     self.storedTimeZones = [[NSMutableArray alloc] init];     NSData *storedData = [[NSUserDefaults standardUserDefaults] dataForKey:@"timeZones"];      if (storedData != nil ) {         self.storedTimeZones = [NSKeyedUnarchiver unarchiveObjectWithData:storedData];     }      NSString *str = [self.smallRegionArray[indexPath.row] stringByReplacingOccurrencesOfString:@"_" withString:@" "];     [self.storedTimeZones addObject: str];     NSLog(str); //the string was printed successfully.     NSLog(@"%lu", (unsigned long)self.storedTimeZones.count); //'0' was printed } </code></pre>  <p><strong>update</strong> @Caleb was right, <code>[NSKeyedUnarchiver unarchiveObjectWithData:storedData</code> returned nil. I solved it by doing this:</p>  <pre><code>- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath {     self.storedTimeZones = [[NSMutableArray alloc] init];     NSData *storedData = [[NSUserDefaults standardUserDefaults] dataForKey:@"timeZones"];     NSMutableArray *ary = [NSKeyedUnarchiver unarchiveObjectWithData:storedData];      if (ary != nil ) {         self.storedTimeZones = ary;     }      NSString *str = [self.smallRegionArray[indexPath.row] stringByReplacingOccurrencesOfString:@"_" withString:@" "];     [self.storedTimeZones addObject: str];     NSLog(str);     NSLog(@"%lu", (unsigned long)self.storedTimeZones.count); //Now it prints `1` } </code></pre>