<p>I am new with the android. I am developing an app that will load content from target url in file. If the url didn't work, it will contact our server to request the correct url. If still fail, then it will ask the url from user input dialog. And it will try to initialize again.  I have code like this:</p>  <pre><code>    if (initialize(target)!=true) {         JSONObject jsonParam = new JSONObject();         try {             jsonParam.put("sns", getSerial(PREF_NAME));             jsonParam.put("code", pwd);         } catch (JSONException e) {             e.printStackTrace();         }          target = getContent(samURL + "/sam_ip", jsonParam);         if (initialize(target)!=true) {             askIpUserDialog();         }     } </code></pre>  <p>and the initialize() as follow</p>  <pre><code>private boolean initialize(String url) {     Boolean success = false;     if ((!url.trim().startsWith("http://")) &amp;&amp; (!url.trim().startsWith("https://"))) {         url = "http://" + url;     }     if (url.endsWith("/")) {         url = url.substring(0,url.length()-1);     }     String sUrl = url + "/android_view";      URL pUrl;     HttpURLConnection urlConn = null;     try {         DataOutputStream printout;         DataInputStream input;         pUrl = new URL (sUrl);         urlConn = (HttpURLConnection) pUrl.openConnection();         urlConn.setDoInput (true);         urlConn.setDoOutput (true);         urlConn.setUseCaches (false);         urlConn.setRequestProperty("Content-Type","application/json");         urlConn.setRequestProperty("Host", "android.schoolportal.gr");         urlConn.connect();          //Create JSONObject here         JSONObject jsonParam = new JSONObject();         jsonParam.put("snc", serialClient);         jsonParam.put("code", pwd);          printout = new DataOutputStream(urlConn.getOutputStream());         String str = jsonParam.toString();         byte[] data = str.getBytes("UTF-8");         printout.write(data);         printout.flush();         printout.close ();          int HttpResult = urlConn.getResponseCode();         if(HttpResult == HttpURLConnection.HTTP_OK){             success = true;             WebView view=(WebView) this.findViewById(R.id.webView);             view.setWebChromeClient(new WebChromeClient());             view.setWebViewClient(new WebViewClient());             view.getSettings().setJavaScriptEnabled(true);             view.loadUrl(sUrl);         }else{             success = false;         }     } catch (IOException e) {         e.printStackTrace();     } catch (JSONException e) {         e.printStackTrace();     } finally{         if(urlConn!=null)             urlConn.disconnect();     }     return success; } </code></pre>  <p>I just know that in android, url connection should run in separate thread. That's why I got the following error:</p>  <pre><code> Caused by: android.os.NetworkOnMainThreadException         at android.os.StrictMode$AndroidBlockGuardPolicy.onNetwork </code></pre>  <p>My question is, how do I use AsyncTask to avoid the error?  I saw there is doInBackground() which I can put the initialize() function there. I saw also there is onPostExecute() event which I can check the result from the doInBackground(), but I don't understand yet how do I retrieve the return of initialize() which placed inside doInBackground()?</p>  <p>Bonus question, later I'd like to place all this job inside an intentservice. Do I need to stil use the asynctask? Does intentservice itself is an asynctask?</p>