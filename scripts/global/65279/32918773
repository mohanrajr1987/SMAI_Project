<p>I have an AsyncTask class called myAsyncTask which has a Seekbar in it. I have a DatePickerDialogFragment class that will return a new DatePickerDialog object, which will store and communicate the date values using a Bundle and a Handler. </p>  <p>What I want to achieve is that as I set the date using the datepicker, the Seekbar will also jump to the correct position on the Seekbar which corresponds to the date value. And as I slide the Seekbar to a position, then call the datepicker, the datepicker will also start will date values that correspond with the date values of the Seekbar. How can I do that?</p>  <p>I have tried to take out much irrelevant part of the code so they will be much easier to read. </p>  <p>MainActivity class:</p>  <pre><code>import android.app.DialogFragment; import android.os.Bundle; import android.os.Handler; import android.support.v4.app.FragmentManager; import android.support.v4.app.FragmentTransaction; import android.support.v7.app.ActionBarActivity; import android.view.Menu; import android.view.MenuItem; import android.view.Window; import android.widget.SeekBar; import android.widget.TextView;  public class MainActivity extends ActionBarActivity {      static final Handler handler = new Handler();      protected static SeekBar seekBar;     public static TextView showyearTextView;     public static String textYear;      private static final int ALERTTAG = 0;      private DialogFragment mDialog;      @Override     protected void onCreate(Bundle savedInstanceState) {         requestWindowFeature(Window.FEATURE_ACTION_BAR);         super.onCreate(savedInstanceState);         setContentView(R.layout.activity_main);          showyearTextView = (TextView) findViewById(R.id.showyear);          //Show this initial value from the start         textYear = Integer.toString(1842);         showyearTextView.setText("Year: " + textYear);          new myAsyncTask(getApplicationContext()).execute(seekBar, null, seekBar);         initializeVariables();         seekBar.invalidate();     }      @Override     public boolean onCreateOptionsMenu(Menu menu) {         // Inflate the menu; this adds items to the action bar if it is present.         getMenuInflater().inflate(R.menu.menu_main, menu);         return true;     }      @Override     public boolean onOptionsItemSelected(MenuItem item) {         // Handle action bar item clicks here. The action bar will         // automatically handle clicks on the Home/Up button, so long         // as you specify a parent activity in AndroidManifest.xml.         int id = item.getItemId();         //noinspection SimplifiableIfStatement         if (id == R.id.more_information) {             showDialogFragment(ALERTTAG);             return true;         }         if (id == R.id.datepicker) {              /** Instantiating DatePickerDialogFragment */             DatePickerDialogFragment datePicker = new DatePickerDialogFragment(myAsyncTask.mHandler);              /** Setting the bundle object on datepicker fragment */             datePicker.setArguments(myAsyncTask.b);              /** Getting fragment manger for this activity */             FragmentManager fm = getSupportFragmentManager();              /** Starting a fragment transaction */             FragmentTransaction ft = fm.beginTransaction();              /** Adding the fragment object to the fragment transaction */             ft.add(datePicker, "date_picker");              /** Opening the DatePicker fragment */             ft.commit();              return true;         }          return super.onOptionsItemSelected(item);     }      private void initializeVariables() {         seekBar = (SeekBar) findViewById(R.id.seekBar1);     }      // Show desired Dialog     void showDialogFragment(int dialogID) {          switch (dialogID) {             // Show AlertDialog             case ALERTTAG:                 // Create a new AlertDialogFragment                 mDialog = AlertDialogFragment.newInstance();                 // Show AlertDialogFragment                 mDialog.show(getFragmentManager(), "Alert");                 break;         }     }  } </code></pre>  <p>myAsyncTask class: </p>  <pre><code>import android.content.Context; import android.os.AsyncTask; import android.os.Bundle; import android.os.Handler; import android.os.Message; import android.widget.SeekBar;  public class myAsyncTask extends AsyncTask&lt;SeekBar, Integer, Void&gt; {      static Bundle b = new Bundle();      static int mDay = 15;     static int mMonth = 7;     static int mYear= 1842;     static int correctYear = 0;      private static Context mContext;      public myAsyncTask (Context context){         mContext = context;     }      /** This handles the message send from DatePickerDialogFragment on setting date */      static Handler mHandler = new Handler(){         @Override         public void handleMessage(Message m){             /** Creating a bundle object to pass currently set date to the fragment */             b = m.getData();             /** Getting the day of month from bundle */             mDay = b.getInt("set_day");             /** Getting the month of year from bundle */             mMonth = b.getInt("set_month");             /** Getting the year from bundle */             mYear = b.getInt("set_year");         }     };      public static int progresValueOut;      public Void doInBackground(SeekBar... seekBar) {          MainActivity.seekBar.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() {              @Override             public void onProgressChanged(SeekBar seekBar, int progresValue, boolean fromUser) {                   // correctYear is the year value that I want to bind between DatePicker and SeekBar                 correctYear = MainActivity.year + progresValue;                 MainActivity.textYear = Integer.toString(correctYear);                 MainActivity.showyearTextView.setText("Year: " + MainActivity.textYear);                             }              @Override             public void onStartTrackingTouch(SeekBar seekBar) {              }              @Override             public void onStopTrackingTouch(SeekBar seekBar) {              }          });         return null;     }      protected void onProgressUpdate(Integer... progress) {         // setProgressPercent(progress[0]);     }      protected void onPostExecute(Void result) {         //showDialog("Downloaded " + result + " bytes");     }  } </code></pre>  <p>DatePickerDialogFragment class:</p>  <pre><code>import android.annotation.SuppressLint; import android.app.DatePickerDialog; import android.app.Dialog; import android.os.Bundle; import android.os.Handler; import android.os.Message; import android.support.v4.app.DialogFragment; import android.widget.DatePicker;  @SuppressLint("ValidFragment") public class DatePickerDialogFragment extends DialogFragment{     static Handler mHandler ;     static int mDay;     static int mMonth;     static int mYear; //how can I bind this value with the correctYear variable in myAsyncTask class?      public static DatePickerDialogFragment newInstance() {         return new DatePickerDialogFragment(mHandler);     }      public DatePickerDialogFragment(Handler h){         /** Getting the reference to the message handler instantiated in MainActivity class */         mHandler = h;     }      @Override     public Dialog onCreateDialog(Bundle savedInstanceState){          /** Creating a bundle object to pass currently set date to the fragment */         Bundle b = getArguments();          /** Getting the day of month from bundle */         mDay = b.getInt("set_day");          /** Getting the month of year from bundle */         mMonth = b.getInt("set_month");          /** Getting the year from bundle */         mYear = b.getInt("set_year");          /** DatePickerDialog's "Set" click listener */         DatePickerDialog.OnDateSetListener listener  = new DatePickerDialog.OnDateSetListener() {              @Override             public void onDateSet(DatePicker view, int year, int monthOfYear, int dayOfMonth) {                 mDay = dayOfMonth;                 mMonth = monthOfYear;                 mYear = year;                  /** Creating a bundle object to pass currently set date to the fragment */                 Bundle b = new Bundle();                  /** Adding currently set day to bundle object */                 b.putInt("set_day", mDay);                  /** Adding currently set month to bundle object */                 b.putInt("set_month", mMonth);                  /** Adding currently set year to bundle object */                 b.putInt("set_year", mYear);                  /** Adding Current date in a string to bundle object */                 b.putString("set_date", "Set Date : " + Integer.toString(mDay) + " / " + Integer.toString(mMonth+1) + " / " + Integer.toString(mYear));                  /** Creating an instance of Message */                 Message m = new Message();                  /** Setting bundle object on the message object m */                 m.setData(b);                  /** Message m is sending using the message handler instantiated in MainActivity class */                 mHandler.sendMessage(m);             }          };          /** Opening the DatePickerDialog window */         return new DatePickerDialog(getActivity(), listener, mYear, mMonth, mDay);     }  }  </code></pre>