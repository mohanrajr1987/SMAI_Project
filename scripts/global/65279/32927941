<p>I am having trouble with displaying the progress dialog spinner. I have looked at several threads and the proposed solutions do not seem to work. </p>  <p>All of the code in this AsyncTask does get called successfully however I cannot see the progress spinner being displayed. This AsycTask is defined in a separate class and it is being called from my fragment where I pass getActivity() as the context. </p>  <p>My thought is that the issue is related to how the context is being given to the progress dialog. </p>  <pre><code>public class ExampleClass {     private class loginAsyncTest  extends AsyncTask&lt;HttpPackage, Void, String&gt;     {         ProgressDialog dialog;         Context spinnerContext;          public void setSpinnerContext(Context context)         {             spinnerContext = context;         }          @Override         protected void onPreExecute()         {             dialog = new ProgressDialog(spinnerContext);             dialog.setMessage("Loading...");             dialog.setIndeterminate(false);             dialog.setProgressStyle(ProgressDialog.STYLE_SPINNER);             dialog.setCancelable(true);             dialog.show();             Log.d("http", "dialog spinner started");         }          protected String doInBackground(HttpPackage... httpParameters)         {             HttpClient client = new DefaultHttpClient();             String url = httpParameters[0].getUrl();             // Get HTTP parameters that are passed in             ArrayList&lt;NameValuePair&gt; parameterList = httpParameters[0].getParameters();             HttpPost post = new HttpPost(url);             String responseJson = "";              try             {                 post.setEntity(new UrlEncodedFormEntity(parameterList));                 HttpResponse response = client.execute(post);                  BufferedReader rd = new BufferedReader(new InputStreamReader(response.getEntity().getContent()));                 String line = "";                 while ((line = rd.readLine()) != null)                 {                     responseJson = responseJson + line;                 }              }             catch (IOException e)             {                 e.printStackTrace();             }              return responseJson;         }          protected void onPostExecute(String result)         {             if(dialog.isShowing())             {                 dialog.dismiss();             }         }     } } </code></pre>