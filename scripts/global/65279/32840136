<p>I have a project in which want to display google map markers from a MySQL database. This is  a tracking system. The coordinates are generated by a GPS device and stored in Database. The user will click to update the markers. I'm having an error in logcat that I don't understand. Here is my code.</p>  <p>MapActivity.java:</p>  <pre><code>import android.app.AlertDialog; import android.os.AsyncTask; import android.os.Bundle; import android.support.v4.app.FragmentActivity; import android.view.View; import android.widget.Button; import android.widget.LinearLayout;  import com.google.android.gms.maps.CameraUpdateFactory; import com.google.android.gms.maps.GoogleMap; import com.google.android.gms.maps.OnMapReadyCallback; import com.google.android.gms.maps.SupportMapFragment; import com.google.android.gms.maps.model.LatLng; import com.google.android.gms.maps.model.MarkerOptions;  import org.json.JSONException; import org.json.JSONObject;  import java.io.BufferedReader; import java.io.IOException; import java.io.InputStream; import java.io.InputStreamReader; import java.net.HttpURLConnection; import java.net.MalformedURLException; import java.net.URL; import java.util.HashMap; import java.util.List;  public class MapsActivity extends FragmentActivity implements OnMapReadyCallback {      GoogleMap mGoogleMap;     Button button;       @Override     protected void onCreate(Bundle savedInstanceState) {         super.onCreate(savedInstanceState);         setContentView(R.layout.activity_maps);         SupportMapFragment map = (SupportMapFragment) getSupportFragmentManager()                 .findFragmentById(R.id.map);         map.getMapAsync(this);          final LinearLayout drawer = (LinearLayout) findViewById(R.id.drawer_kuno);         final Button option = (Button) findViewById(R.id.button4);         button = (Button)findViewById(R.id.btn_update);         button.setOnClickListener(new View.OnClickListener() {             public void onClick(View v) {                 new RetrieveTask().execute();             }         });          drawer.setVisibility(View.INVISIBLE);         option.setVisibility(View.VISIBLE);          option.setOnClickListener(new View.OnClickListener() {              @Override             public void onClick(View view) {                 // TODO Auto-generated method stub                 option.setVisibility(View.INVISIBLE);                 drawer.setVisibility(View.VISIBLE);             }          });          drawer.setOnClickListener(new View.OnClickListener() {              @Override             public void onClick(View view) {                 // TODO Auto-generated method stub                 drawer.setVisibility(View.INVISIBLE);                 option.setVisibility(View.VISIBLE);             }          });      }      @Override     public void onMapReady(GoogleMap map) {          LatLng mab = new LatLng(10.6817889, 122.9555016);         map.addMarker(new MarkerOptions().position(mab).title("MAB RENT A CAR OFFICE"));         map.moveCamera(CameraUpdateFactory.newLatLngZoom(mab, 15));     }      private void addMarker (LatLng latlng) {         MarkerOptions markerOptions = new MarkerOptions();         markerOptions.position(latlng);         markerOptions.title(latlng.latitude + "," + latlng.longitude);         mGoogleMap.addMarker(markerOptions);     }       public void onClick_about(View v) {          AlertDialog alertDialog = new AlertDialog.Builder(MapsActivity.this).create();         alertDialog.setTitle("About us:");         alertDialog.setMessage("Mary Sor Estraza, Faith Hope Claire Cuello Jessa Joy Cadigal Angeli Nicole Morales");         alertDialog.setIcon(R.drawable.appicon);         alertDialog.show();     }      private class RetrieveTask extends AsyncTask&lt;Void, Void, String&gt; {          @Override         protected String doInBackground (Void... params) {             String strUrl = "http://127.0.0.1/location_marker_mysql/retrieve.php";             URL url = null;             StringBuffer sb = new StringBuffer();             try {                 url = new URL(strUrl);                 HttpURLConnection connection = (HttpURLConnection) url.openConnection();                 connection.connect();                 InputStream iStream = connection.getInputStream();                 BufferedReader reader = new BufferedReader (new InputStreamReader(iStream));                 String line = "";                 while ((line = reader.readLine()) !=null) {                     sb.append(line);                 }                  reader.close();                 iStream.close();             } catch (MalformedURLException e) {                 e.printStackTrace();             } catch (IOException e) {                 e.printStackTrace();             }             return sb.toString();         }          @Override         protected void onPostExecute (String result) {             super.onPostExecute(result);             new ParserTask().execute(result);         }     }      private class ParserTask extends AsyncTask &lt;String, Void, List&lt;HashMap&lt;String, String&gt;&gt;&gt; {         @Override         protected List &lt;HashMap &lt;String, String&gt;&gt; doInBackground (String... params) {              MarkerJSONParser markerParser = new MarkerJSONParser();             JSONObject json = null;             try {                  json = new JSONObject(params[0]);             } catch (JSONException e) {                 e.printStackTrace();             }             List&lt;HashMap&lt;String, String&gt;&gt; markerList  = markerParser.parse(json);             return markerList;         }          @Override         protected void onPostExecute(List&lt;HashMap&lt;String, String&gt;&gt; result) {             for(int i=0; i&lt;result.size();i++){                 HashMap&lt;String, String&gt; marker = result.get(i);                 LatLng latlng = new LatLng(Double.parseDouble(marker.get("lat")), Double.parseDouble(marker.get("lng")));                 addMarker(latlng);             }         }     }       } </code></pre>  <p>This is the error in logcat.</p>  <pre><code>09-29 04:54:40.231    1510-1521/com.google.process.gapps E/StrictModeï¹• A resource was acquired at attached stack trace but never released. See java.io.Closeable for information on avoiding resource leaks.       java.lang.Throwable: Explicit termination method 'end' not called             at dalvik.system.CloseGuard.open(CloseGuard.java:184)             at java.util.zip.Inflater.&lt;init&gt;(Inflater.java:82)             at java.util.zip.GZIPInputStream.&lt;init&gt;(GZIPInputStream.java:96)             at java.util.zip.GZIPInputStream.&lt;init&gt;(GZIPInputStream.java:81)             at com.android.okhttp.internal.http.HttpEngine.initContentStream(HttpEngine.java:468)             at com.android.okhttp.internal.http.HttpEngine.readResponse(HttpEngine.java:666)             at com.android.okhttp.internal.http.HttpURLConnectionImpl.execute(HttpURLConnectionImpl.java:347)             at com.android.okhttp.internal.http.HttpURLConnectionImpl.getResponse(HttpURLConnectionImpl.java:296)             at com.android.okhttp.internal.http.HttpURLConnectionImpl.getResponseCode(HttpURLConnectionImpl.java:503)             at com.android.okhttp.internal.http.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:136)             at    com.google.android.gms.http.GoogleHttpClient.a(SourceFile:811)             at com.google.android.gms.http.GoogleHttpClient.a(SourceFile:776)             at com.google.android.gms.http.GoogleHttpClient.execute(SourceFile:667)             at com.google.android.gms.auth.be.w.a(SourceFile:104)             at com.google.android.gms.auth.be.w.a(SourceFile:67)             at com.google.android.gms.auth.be.appcert.a.a(SourceFile:298)             at com.google.android.gms.auth.be.appcert.a.a(SourceFile:134)             at com.google.android.gms.auth.be.appcert.b.a(SourceFile:43)             at com.google.android.gms.auth.c.b.a(SourceFile:62)             at com.google.android.gms.auth.c.a.a(SourceFile:120)             at com.google.android.gms.auth.c.a.a(SourceFile:61)             at             com.google.android.gms.auth.be.cron.AuthCronService.a(SourceFile:44)             at com.google.android.gms.gcm.am.run(SourceFile:135) </code></pre>