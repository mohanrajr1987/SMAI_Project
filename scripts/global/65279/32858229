<p>I am having navigation drawer in which there are 8 menus in the drawer and each menu is having fragment which is downloading different data so each fragment is having its own <code>AsyncTask</code>. Now the problem is when users selects another menu from navigation drawer while first one is fetching data and populating Adapters of first fragment, app gives "unfortunately application stopped"... I want to add one more point so that you will get this more clearly, that is when I am opening the app first fragment starts fetching data and populating Adapter. If I do exit from the app while download of data (of first fragment) app do crashes(because it continues download and updating adapter) because data is being downloaded and trying to update fragment adapter(which is closed on exit) but the fragment has been detached. So basically I want to stop data download of the first fragment when user selects second one and also on exit of the activity.Here is the code of my <code>AsyncTask</code> I want to stop that <code>BufferReader</code> immediately </p>  <pre><code>@Override     protected Integer doInBackground(String... params)     {         Integer result = 0;         HttpURLConnection urlConnection;          try         {             URL url = new URL(params[0]);             urlConnection = (HttpURLConnection) url.openConnection();             int statusCode = urlConnection.getResponseCode();              // 200 represents HTTP OK             if (statusCode ==200)             {                  BufferedReader r = new BufferedReader(new InputStreamReader(urlConnection.getInputStream()));                  StringBuilder response = new StringBuilder();                  String line;                  while ((line = r.readLine()) != null)                 {                     response.append(line);                 }                 parseResult(response.toString());                 result = 1; // Successful             }             else             {                 result = 0; //"Failed to fetch data!";             }         }         catch (Exception e){             if(e.getLocalizedMessage()!=null){                 Log.d(TAG, e.getLocalizedMessage());             }         }         return result;     } </code></pre>