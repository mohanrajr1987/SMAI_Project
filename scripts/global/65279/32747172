<p>I am developing a android wifi -chat application .</p>  <p>Bit of Info about my app : ->A device calls startserver() to act as a server ,another device calls start client() to act as a client</p>  <p>What works: ->A Client can successfully send the data for the first time to the client, but not again and again</p>  <p>->I need to call startserver() again on first device , so that client can send data again .</p>  <p>The startserver() calls this Async task ,the following is its DoinBackgroundMethod</p>  <pre><code>protected String doInBackground(Void... params) {     ServerSocket serverSocket = null;     try {          while(true) {             serverSocket = new ServerSocket(PORT);             Socket client = serverSocket.accept();             StartMSG(client);         }      } catch (IOException e) {         return null;     } finally {          try {              chatclient.changeserverrunning(false);             if (serverSocket == null) {              } else {                 serverSocket.close();             }             return null;         } catch (Exception e) {          }     } //return null; }  protected void StartMSG(Socket client){      try {         InputStream inputstream = client.getInputStream();         ObjectInputStream ois = new ObjectInputStream(inputstream);         Message m = null;         try {             m = (Message) ois.readObject();         } catch (ClassNotFoundException e) {             e.printStackTrace();         }         if (m != null) {             if (m.gettype() == 1) {                 final String my_msg = m.getMessage();//Toast msg afterwards          }      }catch (Exception e){      } } </code></pre>  <p>Client Side Code : It is started when the client hits send button and calls start client method .in which It sets up the Ip values before and bundles them and calls the message sending part as a Intent Service called FileTransferService</p>  <p>Its code is (abstracted) :</p>  <pre><code>protected void onHandleIntent(Intent intent) {      Context context = getApplicationContext();     if(socket==null){         socket = new Socket();     }        if (intent.getAction().equals(ACTION_SEND_FILE)) {         final String msg_type=intent.getExtras().getString(MESSAGE_TYPE);         String host = intent.getExtras().getString(EXTRAS_ADDRESS);          int port = intent.getExtras().getInt(EXTRAS_PORT);              try {                     socket.bind(null);                     socket.connect((new InetSocketAddress(host, port)), SOCKET_TIMEOUT);                    Message m = (Message) intent.getExtras().getSerializable(MESSAGE_INTENT_STR);                 final String my_message=m.getMessage();                  ByteArrayOutputStream baos = new ByteArrayOutputStream();                 ObjectOutputStream oos = new ObjectOutputStream(baos);                   oos.writeObject(m);                  oos.flush();                 oos.close();                  InputStream is = new ByteArrayInputStream(baos.toByteArray());                 OutputStream stream = socket.getOutputStream();                 ChatClient.copyFile(is, stream);              } catch (IOException e) {     } finally {                 if (socket != null) {                     if (socket.isConnected()) {                         try {                             //socket.close();                          } catch (Exception e) {                             // Give up                             e.printStackTrace();                         }                     }                 }             }       }  } </code></pre>