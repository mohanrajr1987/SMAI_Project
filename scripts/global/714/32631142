<p>I want to ask some information to tamtamy community to address an architectural choice. I work on a telecommunication suite, this is based on a proprietary development platform JEE7 oriented (now named, DP). In the requirements analisys phase, a Customer required a strong integration of his AS-IS services in the new products based on our DP. This integration is not a problem.. This topic is our match!</p>  <p>The customer AS-IS services are implemented in IBM RPG program language and they are deployed on a IBM  System I (AS/400). Actually they aren't services but a plethora of programms interfaced with an instance of IBM DB2 database. The CRUD operations on database aren't a problem we can use an ORM artifact. Now, we're studing a way to interact with RPG programs. After a preliminary analysis we found different approaches, two are very intersting:</p>  <ol> <li>JTOpen, it "is a library of Java classes supporting the client/server and internet programming models to a system running IBM i (or i5/OS or OS/400). The classes can be used by Java applets, servlets, and applications to easily access IBM i data and resources" (by <a href="http://jt400.sourceforge.net/" rel="nofollow">http://jt400.sourceforge.net/</a>). The idea is to develop a module to invoke RPG commands via REST (API).</li> <li>Use WebSphere on AS/400 to wrap RPG commands  via Web Service (directly distributed by IBM) here a tutorial: <a href="http://www-01.ibm.com/support/docview.wss?uid=swg27009770&amp;aid=1" rel="nofollow">http://www-01.ibm.com/support/docview.wss?uid=swg27009770&amp;aid=1</a></li> </ol>  <p>We need to understand what solution is better. For example, it's not easy to understand the performance degradation level for both the solution. Can you give us some advices? </p>  <p>Thank you,</p>  <p>Bye</p>