<p>Have tables in database Books and Rating. When user rates, then i am writing that rating separately and every rating is unique.  That way i have many ratings for one Book. </p>  <p>I have this models : </p>  <pre><code>public class Rating     {         public virtual int Id { get; set; }         public virtual float RatingOne { get; set; }         public virtual Books Books { get; set; }     } </code></pre>  <p>and in the books table : </p>  <pre><code>public virtual IList&lt;Rating&gt; RatingList { get; set; }   public virtual void AddRating(Rating rating)         {             rating.Books = this;             RatingList.Add(rating);         } </code></pre>  <p>Also mappings : </p>  <pre><code>RatingMap()         {             Table("Rating");             LazyLoad();              Id(x =&gt; x.Id).Column("Id").GeneratedBy.Identity();              Map(x =&gt; x.RatingOne).Column("RatingOne").Not.Nullable();              References(x =&gt; x.Books).Column("BookId").Cascade.All();         } </code></pre>  <p>and in the Books map :</p>  <pre><code> HasMany(x =&gt; x.RatingList).Cascade.All().Inverse();    </code></pre>  <p>How to get average rating for book using criteria language ?</p>