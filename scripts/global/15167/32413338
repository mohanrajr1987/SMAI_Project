<p>I have the following code that works as part of a Fluent NHibernate query</p>  <pre><code>session.Query&lt;Project&gt;()        .Where(r=&gt;r.IsActive)        .FetchMany(r =&gt; r.ProjectDependencies)        .ThenFetch(r =&gt; r.DependencyProject)        .ThenFetch(r =&gt; r.Owner) </code></pre>  <p>The above code works fine but the issue is that I want to now join and load some additional "attributes" that are joins off of the <code>DependencyProject</code> object besides just Owner (as above).  So I want to do something like this:</p>  <pre><code>session.Query&lt;Project&gt;()        .Where(r=&gt;r.IsActive)        .FetchMany(r =&gt; r.ProjectDependencies)        .ThenFetch(r =&gt; r.DependencyProject)        .ThenFetch(r =&gt; r.Owner)        .AndAlsoFetch(r=&gt;r.Status) </code></pre>  <p>Or maybe like this:</p>  <pre><code>session.Query&lt;Project&gt;()        .Where(r=&gt;r.IsActive)        .FetchMany(r =&gt; r.ProjectDependencies)        .ThenFetch(r =&gt; r.DependencyProject)        .ThenFetch(r =&gt; r.Owner &amp;&amp; r.Status) </code></pre>  <p>Is there anyway to do multiple fetches of properties off of an object that is already being brought in as part of a <code>ThenFetch</code>?</p>