<p>In my service layer I have a method such as this:</p>  <pre><code> public IEnumerable&lt;Project&gt; GetBySpecification(ProjectSpecification specification)         {             using (var unitOfWork = new UnitOfWork(_nHibernateFactory.GetFactory()))             {                 var criteria = unitOfWork.CurrentSession.CreateCriteria&lt;Project&gt;();                  if (specification.CompanyId &gt; 0)                 {                     criteria.Add(Restrictions.Eq("CompanyId", specification.CompanyId));                 }                  return criteria.List&lt;Project&gt;().Skip(specification.Skip).Take(specification.Take);             }         } </code></pre>  <p>The interesting thing is the criteria. When <code>companyId = 0</code> (and doesn't enter the if), the program works, however when I add the criteria it fails.</p>  <p>I get the following error:</p>  <pre><code>could not resolve property: CompanyId of: Domain.Projects.Project </code></pre>  <p>Which makes me wonder, as my <code>ClassMap</code> looks like this:</p>  <pre><code>  public class ProjectMap : ClassMap&lt;Project&gt;     {         public ProjectMap()         {             Table("Project");             Id(p =&gt; p.Id);             Map(p =&gt; p.DateCreated);             Map(p =&gt; p.DateDeleted);             Map(p =&gt; p.Name);             Map(p =&gt; p.Company.Id);         }     } </code></pre>  <p>And my table like this:</p>  <p><a href="http://i.stack.imgur.com/jN5v8.png" rel="nofollow"><img src="http://i.stack.imgur.com/jN5v8.png" alt="enter image description here"></a></p>  <p>(the companyid is a foreign key to a Company table)</p>  <p>I also tried modifying my criteria restriction to Company.Id, but then it could not resolve company.</p>  <p>Any ideas?</p>