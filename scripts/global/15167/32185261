<p>I am using NHibernate and FilterDefinitions of NHibernate. Sometimes when my queries are executed I am getting an SQL Error because of the following SQL:</p>  <pre><code>2015-08-18 08:44:14,971 [20] ERROR NHibernate.AdoNet.AbstractBatcher [(null)] - Could not execute query: select timerecord0_.TimeRecordId as TimeReco1_63_, (case when timerecord0_.DossierId IS NULL THEN 4 Else dbo.AccessRight(ISNULL(timerecord0_.DossierId, 0), :UserIdFilter.userId) End) as formula7_ from TimeRecords timerecord0_ where timerecord0_.TimeRecordId in (@p0 , @p1 , @p2 , @p3 , @p4 , @p5) System.Data.SqlClient.SqlException (0x80131904): Falsche Syntax in der NÃ¤he von ':'.    bei System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)    bei System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)    bei System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean&amp; dataReady)    bei System.Data.SqlClient.SqlDataReader.TryConsumeMetaData()    bei System.Data.SqlClient.SqlDataReader.get_MetaData()    bei System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString)    bei System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task&amp; task, Boolean asyncWrite)    bei System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method, TaskCompletionSource`1 completion, Int32 timeout, Task&amp; task, Boolean asyncWrite)    bei System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method)    bei System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior, String method)    bei System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)    bei System.Data.Common.DbCommand.System.Data.IDbCommand.ExecuteReader()    bei NHibernate.AdoNet.AbstractBatcher.ExecuteReader(IDbCommand cmd) </code></pre>  <p><em>(I have simplified the select part, because there where a huge amount of columns.)</em></p>  <p>If you look closer to the exception, it is shown that the parameter of my FilterDefinition is not replaced with a real value. There are two strange things about that:</p>  <p>1) This is not happening everytime. Actualy it is only happening on some customers computers. 2) I don't even know, what to implement to prevent NHibernate to replace that parameter.</p>  <p>This is my simplified Mapping file, where that filter is living:</p>  <pre><code>    public sealed class TimeRecordMap : ClassMap&lt;TimeRecordDto&gt; {     public TimeRecordMap()     {         Table("TimeRecords");         Map(x =&gt; x.AccessRight).Access.PascalCaseField(Prefix.m).Formula("(case when DossierId IS NULL THEN 4 Else dbo.AccessRight(ISNULL(DossierId, 0), :UserIdFilter.userId) End)").CustomType(typeof(AccessRight)).ReadOnly();         Map(x =&gt; x.DossierId);     } } </code></pre>  <p><em>(again, a lot of properties were omitted for clarity reasons...)</em></p>  <p>The dbo.AccessRight is a scalar-valued function in SQL server.</p>  <p>And this is my FilterDefinition:</p>  <pre><code>public class UserIdFilter : FilterDefinition {     public UserIdFilter()     {         WithName(FilterName).AddParameter(ParameterName, NHibernateUtil.Int32);     }      public const string FilterName = "UserIdFilter";     public const string ParameterName = "userId"; } </code></pre>  <p>Do you have any idea, how this is possible?</p>  <p>Kind regards, Koray</p>