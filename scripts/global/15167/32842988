<p>I am currently working on a Java Swing application in NetBeans with Hibernate guided with this <a href="https://github.com/v-ladynev/fluent-hibernate" rel="nofollow">wonderful repo from GitHub</a>.</p>  <p>From the example code found <a href="https://github.com/v-ladynev/fluent-hibernate/blob/master/fluent-hibernate-examples/src/main/java/com/github/fluent/hibernate/example/mysql/MySqlExample.java" rel="nofollow">here</a>, it basically urges new programmers to open and close SessionFactory connection every time certain queries have been executed:</p>  <pre><code>try {     HibernateSessionFactory.Builder.configureFromDefaultHibernateCfgXml()             .createSessionFactory();     new MySqlExample().doSomeDatabaseStuff(); } catch (Throwable th) {     th.printStackTrace(); } finally {     HibernateSessionFactory.closeSessionFactory(); }  private void doSomeDatabaseStuff() {     deleteAllUsers();     insertUsers();     countUsers();     User user = findUser(USER_LOGIN_A);     LOG.info("User A: " + user); } </code></pre>  <p>Is this a good programming exercise? Isn't it more efficient to open the SessionFactory on app startup and close it on <code>WindowClosing event</code>? What are the drawbacks of each method?</p>  <p>Thanks.</p>