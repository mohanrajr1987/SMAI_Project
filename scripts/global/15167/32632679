<p>I need help about FNHibernate queries. I have sbtKlasorModel like this:</p>  <pre><code> public class SbtKlasorModel : SModuleClass {     public virtual int KlasorId { get; set; }     public virtual string Aciklama { get; set; }     public virtual string Ada { get; set; }     public virtual string KisiAdSoyad { get; set; }     public virtual string Mahalle { get; set; }     public virtual string Parsel { get; set; }     public virtual string SerhAciklama { get; set; }     public virtual DateTime SerhBaslangicTarihi { get; set; }     public virtual DateTime SerhBitisTarihi { get; set; }     public virtual SbtKullaniciModel SerhKullanici { get; set; }     public virtual string Pafta { get; set; }     public virtual string KlasorNo { get; set; }     public virtual string SiraNo { get; set; }     public virtual string AciklamaYeni { get; set; }     public virtual IList&lt;IlskGrupKlasorModel&gt; IlskGrupKlasorList { get; set; }     public virtual IList&lt;DokumanlarModel&gt; DokumanlarList { get; set; }     public virtual IList&lt;DokTaleplerModel&gt; DokTaleplerList { get; set; }      public SbtKlasorModel()     {         IlskGrupKlasorList = new List&lt;IlskGrupKlasorModel&gt;();         DokumanlarList = new List&lt;DokumanlarModel&gt;();         DokTaleplerList = new List&lt;DokTaleplerModel&gt;();     } } </code></pre>  <p>And i have DokumanlarModel like:</p>  <pre><code>public class DokumanlarModel : SModuleClass {     public virtual int DokumanId { get; set; }     public virtual string DokumanAdi { get; set; }     public virtual int DosyaBoyutu { get; set; }     public virtual int Durum { get; set; }     public virtual string EskiPath { get; set; }     public virtual string IndexTahsisKullanici { get; set; }     public virtual DateTime? IndexlenmeTarihi { get; set; }     public virtual string IndexleyenKullanici { get; set; }     public virtual string KaliteKontrolKullanici { get; set; }     public virtual DateTime? KaliteKontrolTarihi { get; set; }     public virtual SbtKlasorModel Klasor { get; set; }     public virtual int KlasordekiSira { get; set; }     public virtual DokNitelikTipModel NitelikTipId { get; set; }     public virtual int OcrDurum { get; set; }     public virtual string Path { get; set; }     public virtual int SayfaSayisi { get; set; }     public virtual DateTime? TaranmaTarihi { get; set; }     public virtual string TarayanKullanici { get; set; }     public virtual int Versiyon { get; set; }     public virtual string OrjinalPath { get; set; }     public virtual IList&lt;LogDokumanModel&gt; LogDokumanList { get; set; }     public virtual IList&lt;DokumanlarOcrModel&gt; DokumanlarOcrList { get; set; }     public virtual IList&lt;DokVersiyonModel&gt; DokVersiyonList { get; set; }     public virtual IList&lt;DokMetaDataArsivModel&gt; DokMetaDataArsivList { get; set; }      public DokumanlarModel()     {         LogDokumanList = new List&lt;LogDokumanModel&gt;();         DokumanlarOcrList = new List&lt;DokumanlarOcrModel&gt;();         DokVersiyonList = new List&lt;DokVersiyonModel&gt;();         DokMetaDataArsivList = new List&lt;DokMetaDataArsivModel&gt;();     } } </code></pre>  <p>Here is mapping:</p>  <p>DokumanlarModelMap:</p>  <pre><code> public class DokumanlarModelMap : ClassMap&lt;DokumanlarModel&gt; {     public DokumanlarModelMap()     {         Table("DOKUMANLAR");          Id(x =&gt; x.DokumanId).Column("DOKUMAN_ID");          Map(x =&gt; x.DokumanAdi).Length(250).Column("DOSYA_ADI");         Map(x =&gt; x.DosyaBoyutu).Column("DOSYA_BOYUTU");         Map(x =&gt; x.Durum).Column("DURUM");         Map(x =&gt; x.EskiPath).Length(250).Column("ESKI_PATH");         Map(x =&gt; x.IndexTahsisKullanici).Length(250).Column("INDEX_TAHSIS_KULLANICI");         Map(x =&gt; x.IndexlenmeTarihi).Column("INDEXLENME_TARIHI");         Map(x =&gt; x.IndexleyenKullanici).Length(250).Column("INDEXLEYEN_KULLANICI");         Map(x =&gt; x.KaliteKontrolKullanici).Length(250).Column("KALITEKONTROL_KULLANICI");         Map(x =&gt; x.KaliteKontrolTarihi).Column("KALITEKONTROL_TARIHI");         Map(x =&gt; x.KlasordekiSira).Column("KLASORDEKI_SIRA_ID");         Map(x =&gt; x.OcrDurum).Column("OCR_DURUM");         Map(x =&gt; x.Path).Length(250).Column("PATH");         Map(x =&gt; x.SayfaSayisi).Column("SAYFA_SAYISI");         Map(x =&gt; x.TaranmaTarihi).Column("TARANMA_TARIHI");         Map(x =&gt; x.TarayanKullanici).Length(250).Column("TARAYAN_KULLANICI");         Map(x =&gt; x.Versiyon).Column("VERSIYON");         Map(x =&gt; x.OrjinalPath).Length(250).Column("ORJINAL_PATH");          Map(x =&gt; x.Record).Length(25).Nullable();         Map(x =&gt; x.RecordDate).Nullable();         Map(x =&gt; x.Edit).Length(25);         Map(x =&gt; x.EditDate);          References(x =&gt; x.Klasor).Column("KLASOR_ID").Index("IX_DOKUMANLAR_KLASORID");         References(x =&gt; x.NitelikTipId).Column("NITELIK_TIP_ID").Index("IX_DOKUMANLAR_NITELIKTIPID");         HasMany(x =&gt; x.LogDokumanList).KeyColumn("DOKUMAN_ID");         HasMany(x =&gt; x.DokVersiyonList).KeyColumn("DOKUMAN_ID");         HasMany(x =&gt; x.DokumanlarOcrList).KeyColumn("DOKUMAN_ID");         HasMany(x =&gt; x.DokMetaDataArsivList).KeyColumn("DOKUMAN_ID");      } } </code></pre>  <p>SbtKlasorModelMap:</p>  <pre><code> public class SbtKlasorModelMap : ClassMap&lt;SbtKlasorModel&gt; {     public SbtKlasorModelMap()     {         Table("SBT_KLASOR");          Id(x =&gt; x.KlasorId).Column("KLASOR_ID");          Map(x =&gt; x.Aciklama).Length(250).Column("ACIKLAMA");         Map(x =&gt; x.Ada).Length(255).Column("ADA");         Map(x =&gt; x.KisiAdSoyad).Length(255).Column("KISI_ADSOYAD");         Map(x =&gt; x.Mahalle).Length(255).Column("MAHALLE");         Map(x =&gt; x.Parsel).Length(255).Column("PARSEL");         Map(x =&gt; x.SerhAciklama).Length(250).Column("SERH_ACIKLAMA");         Map(x =&gt; x.SerhBaslangicTarihi).Column("SERH_BASLANGIC_TARIHI");         Map(x =&gt; x.SerhBitisTarihi).Column("SERH_BITIS_TARIHI");         Map(x =&gt; x.Pafta).Length(255).Column("PAFTA");         Map(x =&gt; x.KlasorNo).Length(255).Column("KLASOR_NO");         Map(x =&gt; x.SiraNo).Length(255).Column("SIRA_NO");         Map(x =&gt; x.AciklamaYeni).Length(255).Column("ACIKLAMA_YENI");          Map(x =&gt; x.Record).Length(25).Nullable();         Map(x =&gt; x.RecordDate).Nullable();         Map(x =&gt; x.Edit).Length(25);         Map(x =&gt; x.EditDate);          References(x =&gt; x.SerhKullanici).ForeignKey("ref_SBT_KLASOR_SBT_KULLANICI").Column("KULLANICI_ID").Index("IX_SBTKLASOR_SBTKULLANICIID");         HasMany(x =&gt; x.DokTaleplerList).KeyColumn("KLASOR_ID");         HasMany(x =&gt; x.DokumanlarList).KeyColumn("KLASOR_ID");         HasMany(x =&gt; x.IlskGrupKlasorList).KeyColumn("KLASOR_ID");     } } </code></pre>  <p>These are my models and mappings. And I have query like this:</p>  <pre><code>   public List&lt;SbtKlasorViewModel&gt; GetFoldersWithIndexedDocuments()     {          using (ISession session = DatabaseProvider.SessionFactory.OpenSession())         {             List&lt;SbtKlasorModel&gt; folders = session.QueryOver&lt;SbtKlasorModel&gt;()                                     .List().ToList();              //Transforming SbtKlasorModel to SbtKlasorViewModel for respose              List&lt;SbtKlasorViewModel&gt; transformedFolders = folders                 .Select(x =&gt; ModelTransformer.TransformModel(x))                 .ToList();              return transformedFolders;         }       } </code></pre>  <p>All of these. Now my question is that: I want SbtKlasorModel List from database.And i need DokumanlarModel List in SbtKlasorModel The query above is working normally. When i execute this query i can get all folder(meaning SbtKlasorModel) with document (meaning DokumanlarModel) list. But I need folder with document list which document.IndexlenmeTarihi is not null. When i check folders documents i want to see only Indexed documents.</p>  <p>How can i do this? How a query i needed? Maybe or creteria? What should i do?</p>  <p>[Date: 28.09.2015] I tried like this:</p>  <pre><code> var criteria = session.CreateCriteria&lt;SbtKlasorModel&gt;()                 .SetFetchMode("Dokumanlar", FetchMode.Eager)                 .CreateAlias("Dokumanlar", "dokuman")                 .Add(Restrictions.IsNotNull("dokuman.IndexlenmeTarihi"));              List&lt;SbtKlasorModel&gt; folders = criteria.List&lt;SbtKlasorModel&gt;().ToList();              ////Transforming SbtKlasorModel to SbtKlasorViewModel for respose              List&lt;SbtKlasorViewModel&gt; transformedFolders = folders                 .Select(x =&gt; ModelTransformer.TransformModel(x)).ToList(); </code></pre>  <p>Not worked. It still get all document in folder. and duplicated folder.</p>  <p>I wish i can tell my question. If need more information about isseu please leave comment. And not yet solved.</p>