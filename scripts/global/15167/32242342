<p>I have created a self-referencing Categories Table [MsSQL 2012] with Fluent nhibernate, during testing, I’ve just been adding the data manually via SSMS; 'but now I wish to do it through code, I’m a little lost?'</p>  <pre><code>public class CategoryMap : ClassMap&lt;CategoryPartRecord&gt; {     public CategoryMap() {         Table("Ceck_CategoryPartRecord");         Id(x =&gt; x.Id).GeneratedBy.Native();          Map(x =&gt; x.Name);          //Relationships-         // Recursive:         // [Category]---&lt;[Category]         References(x =&gt; x.ParentCategory)         HasMany(x =&gt; x.Categories)             .Inverse()             .Cascade.All();     } } </code></pre>  <p>I have tried two approaches:</p>  <pre><code>using (var transactionB = session.BeginTransaction()) { CategoryPartRecord Cat1 = new CategoryPartRecord() { Name = "Exterior" }; CategoryPartRecord Cat2 = new CategoryPartRecord() { Name = "Interior" }; CategoryPartRecord Cat3 = new CategoryPartRecord() { Name = "Garden" };  CategoryPartRecord Cat4 = new CategoryPartRecord() { Name = "Paint" };  Cat1.Categories.Add(Cat4);  session.Save(Cat1); session.Save(Cat2); session.Save(Cat3); transactionB.Commit(); } </code></pre>  <p>.</p>  <pre><code>using (var transactionBB = session.BeginTransaction())  { var Cat = session.Load&lt;CategoryPartRecord&gt;(1); //Contains "Exterior" CategoryPartRecord Cat2 = new CategoryPartRecord() { Name = "Paint" };  Cat.Categories.Add(Cat2);  session.Save(Cat); transactionBB.Commit(); } </code></pre>  <p>Both add the new record containing "Paint", but dont link the relationship correctly, as "CategoryPartRecord_id" is always NULL -- Am I missing something really obvious because neither work? </p>