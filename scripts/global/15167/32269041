<p>I have three objects A, B and City, where B inherits A.</p>  <p>A contains the ID and the Name of this structure.</p>  <pre><code>internal class AMap : ClassMap&lt;A&gt; {     internal AMap()     {         Id(x =&gt; x.ID).GeneratedBy.Assigned().Not.Nullable();         Map(x =&gt; x.Name).Length(255);         Table("A");     } } </code></pre>  <p>B should be an extension object which contains a list of City objects</p>  <pre><code>internal class BMap : SubclassMap&lt;B&gt; {     internal BMap()     {         HasManyToMany(x =&gt; x.Cities).Not.LazyLoad().AsBag().Table("B").Cascade.All();     } } </code></pre>  <p>This should result in the following database structure<br/> <code>Table A:     -  ID     -  Name</code></p>  <p><code>Table B:    -  ID_A    -  ID_City</code></p>  <p>It should be a ManyToMany relationship, so ID_A and ID_City can occur multiple times in Table B</p>  <p>How can I realize this structure in the Fluent NHibernate mapping?</p>  <p>Thanks, Xeno</p>