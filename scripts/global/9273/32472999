<p>I have following XML:</p>  <pre><code>        xml += "&lt;?xml version=\"1.0\" encoding=\"UTF - 8\"?&gt;";         xml += "&lt;root&gt;";         xml += " &lt;success&gt;true&lt;/success&gt;";         xml += " &lt;data&gt;";         xml += "   &lt;item&gt;";         xml += "     &lt;StateId&gt;0&lt;/StateId&gt;";         xml += "     &lt;StateName&gt;Test&lt;/StateName&gt;";         xml += "     &lt;GroupId&gt;0&lt;/GroupId&gt;";         xml += "   &lt;/item&gt;";         xml += " &lt;/data&gt;";         xml += "&lt;/root&gt;"; </code></pre>  <p>Basically I am interested in the root->data->item element only and I am trying to get it:</p>  <pre><code>public static T ConvertXmlToClass&lt;T&gt;(string xml) {     XmlRootAttribute xRoot = new XmlRootAttribute();     xRoot.ElementName = "root";     xRoot.IsNullable = true;     var serializer = new XmlSerializer(typeof(T), xRoot);     return (T)serializer.Deserialize(new StringReader(xml)); } </code></pre>  <p>I am getting empty object, as the actual data is in root->data->item.</p>  <p>I've tried to change  <code>xRoot.ElementName = "root";</code> to  <code>xRoot.ElementName = "root/data";</code> or  <code>xRoot.ElementName = "root/data/item";</code> but I've got:</p>  <blockquote>   <p>InnerException: System.InvalidOperationException          HResult=-2146233079          Message= was not expected.          Source=Microsoft.GeneratedCode</p> </blockquote>  <p>The object class is:</p>  <pre><code>public partial class DocumentStatus {     public DocumentStatus()     {         this.Documents = new HashSet&lt;Document&gt;();         this.DocumentsTrackings = new HashSet&lt;DocumentsTracking&gt;();         this.DocumentsTrackingChildDocuments = new HashSet&lt;DocumentsTrackingChildDocument&gt;();     }     [XmlElement("StateId")]     public int StateId { get; set; }     [XmlElement("StateName")]     public string StateName { get; set; }     [XmlElement("GroupId")]     public Nullable&lt;int&gt; GroupId { get; set; }      public virtual HashSet&lt;Document&gt; Documents { get; set; }     public virtual HashSet&lt;DocumentsTracking&gt; DocumentsTrackings { get; set; }     public virtual HashSet&lt;DocumentsTrackingChildDocument&gt; DocumentsTrackingChildDocuments { get; set; } }     </code></pre>