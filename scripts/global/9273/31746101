<p>I am trying to deserialize some xml. Here it is:</p>  <pre><code>&lt;FooBars xmlns="http://foos"&gt;   &lt;Id1 xmlns="http://bars"&gt;2&lt;/Id1&gt;   &lt;Id2 xmlns="http://bars"&gt;7&lt;/Id2&gt;   &lt;Info xmlns="http://bars"&gt;     &lt;Data&gt;       &lt;Field1&gt;text1&lt;/Field1&gt;       &lt;Field2&gt;text2&lt;/Field2&gt;       &lt;Field3&gt;text3&lt;/Field3&gt;     &lt;/Data&gt;     &lt;Data&gt;       &lt;Field1&gt;text5&lt;/Field1&gt;       &lt;Field2&gt;text6&lt;/Field2&gt;       &lt;Field3&gt;text7&lt;/Field3&gt;     &lt;/Data&gt;   &lt;/Info&gt; &lt;/FooBars&gt; </code></pre>  <p>I tried this:</p>  <pre><code>var myData =  (FooBars)serializer.Deserialize(foobars.CreateReader()); ...   [XmlRoot(ElementName = "FooBars", Namespace = "http://foos")] public class FooBars {     [XmlElement(ElementName = "Id1", Namespace = "http://bars")]     public string Id1 { get; set; }      [XmlElement(ElementName = "Id2", Namespace = "http://bars")]     public string Id2 { get; set; }        [XmlElement(ElementName = "Info", Namespace = "http://bars")]     public List&lt;Data&gt; Info { get; set; }  }  public class Data {     [XmlElement(ElementName = "Field1")]     public string Field1 { get; set; }      [XmlElement(ElementName = "Field2")]     public string Field2 { get; set; } } </code></pre>  <p>But it looks like the Data class is not considered part of the xml, since it is not able to read it. I am getting all the other elements (ids) but not the things defined in Data. Where am I wrong?</p>