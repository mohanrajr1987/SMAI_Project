<p>Ok, this is a tricky one as I am not sure exactly how to ask this question as I'm not sure which part of my setup is causing the problem.</p>  <p><em>Before I start - I don't need to be told to convert everything to WCF at this stage please - I know I should update it, and I will, but right now I have other stuff to do!</em></p>  <p>I have an ASMX web service which I have been running various asp.net web forms websites from for quite a while. Some services are called directly in code, and some are called via jQuery using a proxy file to return JSON to the client.</p>  <p>In the case of a web forms application I have a file named Proxy.aspx which contains in it's code a series of <code>webmethods</code> which fetch data from the Web Service, like this:</p>  <pre><code>Public Class Sam_Proxy     Inherits System.Web.UI.Page     &lt;WebMethod(True), XmlInclude(GetType(iSAM_api.Sam_API.Customer))&gt; _     Public Shared Function doLogin( --- parameters --- ) As iSAM_api.Sam_API.Customer          Dim SAM_Service As New Sam_API.samThinkka_APISoapClient         Dim outputData As iSAM_api.Sam_API.Customer = SAM_Service.doLogin( --- parameters --- )          Return outputData     End Function End Class </code></pre>  <p>I am working on a project using MVC/Razor and am re-creating this Proxy file as an <code>ApiController</code>, the corresponding function from above looking like this:</p>  <pre><code>Public Class ApiInterfaceController     Inherits ApiController     &lt;System.Web.Http.HttpPost&gt; _     Public Function doLogin(&lt;FromBody()&gt; ByVal Data As Dictionary(Of String, String)) As iSAM_api.Sam_API.Customer         Dim SAM_Service As New iSAM_api.Sam_API.samThinkka_APISoapClient         Dim outputData As iSAM_api.Sam_API.Customer = SAM_Service.doLogin( --- Parameters --- )                Return outputData     End Function End Class </code></pre>  <p>To explain the setup behind this, I have my ASMX Web Service registered as a Web Reference in Visual Studio, thus <code>Dim SAM_Service As New iSAM_api.Sam_API.samThinkka_APISoapClient</code> in each bit of code is referencing the service classes created by this.</p>  <p>When I call these functions with jQuery, in both cases I get a successful post and response, but in the <code>ApiController</code> all the properties of the <code>Customer</code> object being returned have the word <code>Field</code> appended to their name.</p>  <p>The <code>Customer</code> object, in brief looks like this:</p>  <pre><code>Public Class Customer     Property Id As Integer = 0     Property Name As String = ""     Property Email As String = ""     Property EmailVerified As Boolean = False     Property Address As String = ""     *** more properties *** End Class </code></pre>  <p>From the web forms post I get an object just like that which I can use directly as JSON, but from the other I get <code>Id</code> as <code>IdField</code> etc.</p>  <p>So, I've spent quite a lot of today Googling for this and ended up with a lot of reference to <code>XmlSerializerFormatAttribute</code>, but I am not sure which way round many of the articles I find are referring to this issue, however, I have found the following:</p>  <ul> <li>If I decorate the <code>webmethod</code> on the web service host with <code>XmlSerializerFormatAttribute</code> as : <code>&lt;WebMethod(), ServiceModel.XmlSerializerFormatAttribute&gt;</code> it makes no difference</li> <li>If I decorate the <code>Customer</code> class on the web service host similarly, it make no difference.</li> </ul>  <p>However, </p>  <ul> <li><p>If I can make it work by editing the <code>reference.vb</code> file which is created by Visual Studio when updating/adding the service reference as follows:</p>  <pre><code>&lt;System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"), _  **System.SerializableAttribute(), _**  System.Diagnostics.DebuggerStepThroughAttribute(), _  System.ComponentModel.DesignerCategoryAttribute("code"), _   System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://localhost:50184/")&gt; _ Partial Public Class Customer     **** Customer Properties *** End Class </code></pre></li> </ul>  <p>Changing this to:</p>  <pre><code>    &lt;System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"), _      **System.ServiceModel.XmlSerializerFormatAttribute(), _**      System.Diagnostics.DebuggerStepThroughAttribute(), _      System.ComponentModel.DesignerCategoryAttribute("code"), _       System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://localhost:50184/")&gt; _     Partial Public Class Customer         **** Customer Properties ***     End Class </code></pre>  <p>So.. how do I get Visual Studio to create this Proxy <code>reference.vb</code> to use <code>System.ServiceModel.XmlSerializerFormatAttribute()</code> instead of <code>System.SerializableAttribute()</code>?</p>