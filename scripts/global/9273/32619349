<p>I have an XML string that has been parsed and updated by jQuery and needs to go back to being a string.  I do not have control over the parser used (a deeply engrained component uses the jQuery parser).</p>  <p>Using <code>(new XMLSerializer()).serializeToString(XMLObj[0]);</code> works just fine everywhere except Internet Explorer where, even under Edge, an extra quotation mark is getting inserted into my DOCTYPE.</p>  <p>Consider the following mini-XML file:</p>  <pre><code>&lt;!DOCTYPE Metadata SYSTEM "someDTD.dtd"&gt; &lt;Metadata&gt;&lt;/Metadata&gt; </code></pre>  <p>Passing this through the following Javascript:</p>  <pre><code>var XMLObj = $($.parseXML("&lt;!DOCTYPE Metadata SYSTEM 'someDTD.dtd'&gt;&lt;Metadata&gt;&lt;/Metadata&gt;")); XMLString = (new XMLSerializer()).serializeToString(XMLObj[0]); console.log(XMLString); </code></pre>  <p>Should result in an almost unchanged string (give or take a self-closing tag).  Instead I get the following:</p>  <pre><code>&lt;!DOCTYPE Metadata SYSTEM" "someDTD.dtd"&gt;&lt;Metadata /&gt; </code></pre>  <p>I have no clue where that quotation mark after <code>SYSTEM</code> is coming from - and ,if jQuery <em>is</em> using <code>Msxml2</code> under the hood, I can't figure out how to access <code>.xml</code>.</p>  <p><strong>Is there some way to force jQuery to use the <code>Msxml2</code> parser?  Is there anyway I can convince the serializer to not put that quotation mark there?</strong></p>