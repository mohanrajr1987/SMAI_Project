<p>I am practicing with wcf and entity framework. In my situation I have two wcf services, one for the read operations, and one for the crud operations. In my front end I am using C# forms. I have taken a record from the wcf service reference for reading, made some modifications and persisting it to the DB through the wcf crud service. I receive a true response from the operation, that shows that it do not throw any errors, but the changes are not saved in the db. I am using adventure works for tests.</p>  <p>CRUD wcf:</p>  <pre><code>public class AWCRUD : IAWCRUD {     public bool updatePerson(Person person)     {         try         {             using (AWEntities ctx = new AWEntities())             {                 ctx.People.Attach(person);                 ctx.Entry(person).State = EntityState.Modified;                 ctx.SaveChanges();                 return true;             }         }         catch (Exception ex)         {             return false;         }     }      public bool updateEmployee(Employee employee)     {         try         {             using (AWEntities ctx = new AWEntities())             {                 ctx.Employees.Attach(employee);                 ctx.Entry(employee).State = EntityState.Modified;                 ctx.SaveChanges();                 return true;             }         }         catch (Exception ex)         {             return false;         }     }  } </code></pre>  <p>READ wcf:</p>  <pre><code>public class WCFAWRead : IWCFAWRead {     ILog log = LogManager.GetLogger(typeof(WCFAWRead));      public PersonDetails getDetails(int entityID)     {         try         {             using (AWEntities ctx = new AWEntities())             {                 var person = (from p in ctx.People                               join det in ctx.Employees on p.BusinessEntityID equals det.BusinessEntityID                               where p.BusinessEntityID == entityID                               select new PersonDetails                               {                                   EntityID = p.BusinessEntityID,                                   Name = p.FirstName,                                   LastName = p.LastName,                                   Title = det.JobTitle,                                   BirthDay = det.BirthDate,                                   Gender = det.Gender                               }).FirstOrDefault();                 return person;             }         }         catch (Exception ex)         {             //log.Error(ex.Message);             return null;         }     }      public List&lt;FullPersonInfo&gt; searchPerson(string chriteria)     {         try         {             using (AWEntities ctx = new AWEntities())             {                 var lChriteria = chriteria.ToLower();                 var person = (from p in ctx.People                               join det in ctx.Employees on p.BusinessEntityID equals det.BusinessEntityID                               where p.FirstName.ToLower().Contains(lChriteria) || p.LastName.ToLower().Contains(lChriteria)                               select new FullPersonInfo                               {                                   Person = p,                                   Employee = det                               }).ToList();                 return person;             }         }         catch (Exception ex)         {             //log.Error(ex.Message);             return null;         }     } } </code></pre>  <p>To cast the different types of Person object that is created from the wcf service reference, I use the following piece of code:</p>  <pre><code>DataContractSerializer seri = new DataContractSerializer(typeof(AWReadReference.Person));             using (var writer = XmlWriter.Create("p.xml"))             {                 seri.WriteObject(writer,person);             }             var deser = new DataContractSerializer(typeof(AWCrudReference.Person));             using (var reader = XmlReader.Create("p.xml"))             {                 this.person = (AWCrudReference.Person)deser.ReadObject(reader);             } </code></pre>  <p>Does anyone have any idea why it is happening and a solution? </p>