<p>I have a class that extends <code>ObservableCollection</code> and I'm writing files with this information using <code>XmlSerializer</code>.  The code below is an example not actual code.</p>  <pre><code>public class Container : ObservableCollection&lt;Element&gt; {     int Field1 {get; set;}     string Name {get; set;}    } </code></pre>  <p>Now I have another class which contains Container as a field</p>  <pre><code>[Serializable] public class TopLevel {    public Container Cont1 {get; set;}    public Container Cont2 {get; set;}  } </code></pre>  <p>I then serialize it using the following:</p>  <pre><code>        using (var stream = new FileStream(filePath, FileMode.OpenOrCreate))         {                                  var format = new XmlSerializer(typeof(TopLevel));                  format.Serialize(stream, TopLevelInstance);                         } </code></pre>  <p><strong>My problem is that the fields <code>Field1</code> and <code>Name</code> are not included in the serialized file.  It has the lists of Elements contained by it but not the added fields.</strong></p>  <p>Any idea why this is happening or maybe a solution? Example output:</p>  <pre><code> &lt;Cont1&gt;   &lt;--! THE FIELDS SHOULD BE HERE BUT ARE MISSING--&gt;     &lt;Element&gt;       &lt;Name&gt;First&lt;/Name&gt;       &lt;X&gt;210&lt;/X&gt;       &lt;Y&gt;112&lt;/Y&gt;       &lt;YTol&gt;5&lt;/YTol&gt;       &lt;XTol&gt;5&lt;/XTol&gt;       &lt;Description&gt;Description&lt;/Description&gt;       &lt;PixelCount&gt;20&lt;/PixelCount&gt;     &lt;/Element&gt;      &lt;Element&gt;       &lt;Name&gt;First&lt;/Name&gt;       &lt;X&gt;210&lt;/X&gt;       &lt;Y&gt;112&lt;/Y&gt;       &lt;YTol&gt;5&lt;/YTol&gt;       &lt;XTol&gt;5&lt;/XTol&gt;       &lt;Description&gt;Description&lt;/Description&gt;       &lt;PixelCount&gt;20&lt;/PixelCount&gt;     &lt;/Element&gt;   &lt;/Cont1&gt; </code></pre>