<p>I'm trying to write a script that'll simply count the occurrences of \r\n\r\n in a file. (Opening the sample file in vim binary mode shows me the ^M character in the proper places, and the newline is still read as a newline).</p>  <p>Anyway, I know there are tons of solutions, but they don't seem to get me what I want.</p>  <p>e.g. <code>awk -e '/\r/,/\r/!d'</code> or using <code>$'\n'</code> as part of the grep statement.</p>  <p>However, none of these seem to produce what I need. I can't find the <code>\r\n\r\n</code> pattern with grep's "trick", since that just expands one variable. The awk solution is greedy, and so gets me way more lines than I want/need.</p>  <p>Switching grep to binary/Perl/no-newline mode seems to be closer to what I want, e.g. <code>grep -UPzo '\x0D'</code>, but really what I want then is <code>grep -UPzo '\x0D\x00\x0D\x00'</code>, which doesn't produce the output I want.</p>  <p>It seems like such a simple task.</p>