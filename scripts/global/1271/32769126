<p>TL;DR: How to execute a command on each grep match that is produced while piping tail -f into grep.</p>  <p>I am currently using <code>tail -f file | grep exception</code>to follow all the exceptions thrown by a service. One of the issues is that the line that has the exception doesn't have all the information I need, but it does contain an <code>ID</code> that identifies all the log lines generated by that request.</p>  <p>What I want to do is to to print all lines that have a certain <code>ID</code> once grep matches a line with exception.</p>  <p>Using the help from this question <a href="http://stackoverflow.com/questions/13402119/how-to-grep-and-execute-a-command-for-every-match">How to grep and execute a command (for every match)</a></p>  <p>I manage to make it work for the <code>CAT</code> command, like this:</p>  <pre><code>cat myFile |  egrep -i "exception" | #find lines with exception egrep -o "ID=[A-Z]{10}" | #for those lines, select out only the id while read line;  do #for each id    cat myFile | grep $line; #show all the lines that have that id done </code></pre>  <p>that works fine and prints all the lines with matching ID, however when I change the <code>cat</code> to <code>tail -f</code> it wont work, it wont print anything. What am I doing wrong?</p>