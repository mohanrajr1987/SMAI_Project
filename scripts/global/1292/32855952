<p>I have an abstract class (AveragedDataRecord) which I need to abstract even further (DataRecord) so I can extend it to the original class and a new concrete class (SummedDataRecord) and I'm having problems getting some of the methods to translate from the original abstract class up to the new super class.</p>  <pre><code>public abstract class DataRecord{   protected abstract DataRecord getFirstRecord(ArrayList&lt;T&gt; dataList);   protected abstract DataRecord getLastRecord(ArrayList&lt;T&gt; dataList);    protected DateTime getFirstRecordTimestamp(ArrayList&lt;T&gt; dataList){     DateTime result   = new DateTime(DEFAULT_DATETIME);     DataRecord record = this.getFirstRecord(dataList);     if(null != record)       result = record.getRecordDateTime();     return result;   }    protected DateTime getLastRecordTimestamp(ArrayList&lt;T&gt; dataList){     DateTime result   = new DateTime(DEFAULT_DATETIME);     DataRecord record = this.getLastRecord(dataList);     if(null != record)       result = record.getRecordDateTime();     return result;   } }  public abstract class AveragedDataRecord extends DataRecord&lt;AveragedDataRecord&gt; {   public AveragedDataRecord getFirstRecord(ArrayList&lt;AveragedDataRecord&gt; dataList){     // Implementation   }    public AveragedDataRecord getLastRecord(ArrayList&lt;AveragedDataRecord&gt; dataList){     // Implementation   }    public static void myMethod(ArrayList&lt;AveragedDataRecord&gt; dataList){     // beginning of method code     fileWriter.write(itemA, itemB, **getLatestTimestamp(dataList)**);     // end of method code   } } </code></pre>  <p>The issue that I am having is that the noted method call above shows an error.  The "quick fix" is suggesting that getLatestTimestamp() needs to be static.  </p>  <p>Making getLatestTimestamp() static gives me an error on the declaration because Java "cannot make static reference to non-static type T".</p>  <p>I've chased this up and down the quick fixes and haven't found any mention of this particular problem in the forums I belong to nor on Google.  I can't believe I'm the only person this ever happened to but if the solution to this is out there, I haven't been fortunate enough to find it.</p>