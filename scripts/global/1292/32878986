<p>Suppose I have 3 DLL's. DLL #1 and #2 depend on DLL #3. DLL #3 contains a static class such as:</p>  <pre><code>public class ImportTimer {      public static bool EnableProcessorTimerLogging { get; set; }     public static bool EnableTimerLogging { get; set; }      public static DateTime SourceDataDetectionTimestamp { get; set; }     public static DateTime LastEndProcessTimestamp { get; set; }      static ImportTimer()     {         EnableProcessorTimerLogging = false;         EnableTimerLogging = false;          SourceDataDetectionTimestamp = DateTime.Now;         LastEndProcessTimestamp = DateTime.Now;     }      ... } </code></pre>  <p>All of the methods are static. DLL #1 and #2 do not know about each other (no dependencies on the other). When I invoke any method from DLL #1 and then invoke the same method on DLL #2, I see a new copy of the static object get created in DLL #2 (it is not using the same copy as DLL #1). So now I have 2 copies of ImportTimer when I only wanted one for both DLL's to share. How can I get the 2 DLL's to share the same static instance?</p>