<p>Class <code>A</code> contains:</p>  <ul> <li>static <code>Strings</code></li> <li>a static <code>Map</code> that is populated in the class's static block</li> <li>a static method, say <code>getStr()</code>, that returns a <code>String</code> built from the static <code>Strings</code></li> </ul>  <p>Class <code>B</code> contains:</p>  <ul> <li>a static <code>Map</code></li> <li>a static block that populates the <code>Map</code> using <code>A.getStr()</code></li> </ul>  <p>Will <code>B</code>'s static block <em>always</em> successfully populate its map?  I'm assuming that the JVM is able to handle this.  Could there be any issue with regards to the order in which the static blocks are executed when the classes are loaded, which in turn could not guarantee <code>B</code> populating the map correctly? I'd like to be certain, and perhaps understand the mechanism behind this.</p>