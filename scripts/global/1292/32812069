<p>I have tried to find an answer about this specificity but can not find any.</p>  <p>I have in the code below an instruction inside brackets that has only the <code>static</code> keyword as header.</p>  <p>I do understand clearly what it does and could guess their use just like any of the other <code>static</code> methods/variables but I can not put a name on it.</p>  <p>It's not a variable nor a method (it does not return anything, not even "<code>void</code>") and certainly not a constructor since the <code>static</code> keyword is used.</p>  <p>What do we call this type of special "methods"?</p>  <p>Here is the code :</p>  <pre><code>    public class Test{      static {         System.out.println("What do we call this?");     }      public Test(){         System.out.println("Instance of Test created");     }      public static void main(String[] args) {         new TestSon().go();     }      public void go(){         System.out.println("Go method Test");     }  }  class TestSon extends Test{      static {         System.out.println("Same here...");     }      public TestSon(){         System.out.println("Instance of TestSon created");     }      @Override     public void go() {         System.out.println("Go method son");     } } </code></pre>  <p>The output :</p>  <pre><code>What do we call this? Same here... Instance of Test created Instance of TestSon created Go method son </code></pre>