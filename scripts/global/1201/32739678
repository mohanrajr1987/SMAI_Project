<p>I am interested in hosting a <a href="https://ghost.org/" rel="nofollow">Ghost blog</a> (<a href="http://docs.ghost.org/" rel="nofollow">docs</a>) on a subdomain, on an <a href="http://expressjs.com/" rel="nofollow">Express</a> based server with virtual host separation (using <a href="https://github.com/expressjs/vhost" rel="nofollow">vhost</a>).</p>  <p>My current routing to the separate modules of the site is as follows: Main file, server.js, has code in the following pattern:</p>  <pre><code>var vhost = require('vhost');  var server = require('express')()     // kv module:     .use(vhost('kv.*', require('./kv').app))      // Route to api server:     .use(vhost('api.*', require('./api').app))      // Main routes to redirect all other subdomains to main server:     .use(vhost('*',    require('./main').app))     .use(vhost('*.*',  require('./main').app))     .listen(80, function () {         console.log('Server listening on port %s', server.address().port); }); </code></pre>  <p>In this configuration, I have subdirectories, running independent sites for kv and API subdomains.</p>  <p>The trick is: instead of using <code>server.listen()</code> in the sub-servers, I use <code>exports.app</code> to return the serve object, and the main router will pass the requests, so that if <code>kv</code> module contains:</p>  <pre><code>var app = require('express')();  app.get('/', function (req, res) {     res.status(200).send('KV!'); });  exports.app = app; </code></pre>  <p>..browsing to <code>kv.myserver.com</code> subdomain will result in <code>KV!</code> with status code <code>200</code>.</p>  <h2>Getting to the point:</h2>  <p>I'm interested in using the same method in order to route requests to <code>blog.</code> subdomain, but I'm unable to modify Ghost's code to return a valid app for me to depend on. </p>  <p>In Practice, adding:</p>  <pre><code>.use(vhost('blog.*', require('./blog').app)) </code></pre>  <p>where <code>'./blog'</code> path can be replaced with any of Ghost's files, modified to return an express app.</p>  <p>Is that possible? Modifying the Ghost blog code is no problem. </p>  <p>Any kind of help is much appreciated. </p>