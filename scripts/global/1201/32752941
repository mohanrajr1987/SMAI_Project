<p>My file structure:</p>  <ul> <li>Source  <ul> <li>client  <ul> <li>app  <ul> <li>modules  <ul> <li>controller</li> <li>html</li> <li>module</li> <li>route</li> </ul></li> </ul></li> </ul></li> <li>server  <ul> <li>app.js  <ul> <li>gulp file</li> </ul></li> </ul></li> </ul></li> </ul>  <p>I am using $stateprovider it works fine when i redirected using ui-sref and when I refresh page controller is not loaded.</p>  <p>Code snippet:</p>  <p>app.js:</p>  <pre><code>'use strict';  var express = require('express'),     app = express(),     router = express.Router(),     path=require("path"),     morgan = require('morgan'),     bodyParser = require('body-parser'),     methodOverride = require('method-override'),     config=require('./../../gulp.config');       app.use('/bower_components', express.static(path.join(__dirname + config.server.bower)));     app.use(express.static(path.join(__dirname, config.server.root)));     app.use(morgan('dev'));     app.use(bodyParser.urlencoded({'extended':'true'}));     app.use(bodyParser.json());     app.use(bodyParser.json({ type: 'application/vnd.api+json' }));     app.use(methodOverride());     app.get('/', function(req, res) {         res.sendFile('index.html', { root: path.join(__dirname, config.server.root) });     });     app.get('/login',function(req,res){        res.sendFile('login.html', { root: path.join(__dirname, config.server.root+'/app/login/') });    });    app.get('/signup',function(req,res){        res.sendFile('signup.html', { root: path.join(__dirname, config.server.root+'/app/signup/') });    });     app.listen(config.serverPort); </code></pre>  <p>Gulpfile.js:</p>  <pre><code>var gulp         = require('gulp'),     browserSync  = require('browser-sync'),     reload       = browserSync.reload,     plumber      = require('gulp-plumber'),     config   = require('./gulp.config'),     browserify = require('gulp-browserify'),     sass=require('gulp-sass'),     nodemon=require('gulp-nodemon'),     sourcemaps = require('gulp-sourcemaps'),     started = false;  // Script task  gulp.task('scripts', function() {     console.log('Script start');     gulp.src([config.scripts.src])         .pipe(plumber())         .pipe(reload({             stream: true         }));     console.log('Script end'); });   // Html task gulp.task('html', function() {     console.log('HTML start');     gulp.src(config.html.src)         .pipe(reload({             stream: true         }));     console.log('HTML end'); });  // brewser sync gulp.task('browser-sync', ['nodemon'] ,function() {     console.log('Browser-sync start');     browserSync.init(null, {             proxy: "http://localhost:"+config.serverPort,         files: [config.browserSyncPath],         port: config.browserPort     });   console.log('Browser-sync end'); });   gulp.task('nodemon' ,function (cb){   console.log('Nodemon start');     return nodemon({         script: config.nodemonPath     })   .on('start', function () {         if (!started) {             cb();             started = true;         }     })   .on('restart', function () {       setTimeout(function reload() {        browserSync.reload({          stream: false        });      }, 500);     });     console.log('Nodemon end'); })    // // watch task gulp.task('watch', function() {     console.log('Watch start');     gulp.watch(config.watch.script, ['scripts']);     gulp.watch(config.watch.styles, ['styles']);     gulp.watch(config.watch.html, ['html']);     console.log('Watch end'); });  // // sass file   gulp.task('styles', function() {     console.log('Styles start');     gulp.src(config.styles.src)     .pipe(plumber())       .pipe(sourcemaps.init())       .pipe(sass({           errLogToConsole: false,         }))       .pipe(sourcemaps.write())       .pipe(gulp.dest(config.styles.dest))       .pipe(reload({           stream: true       }));       console.log('Styles end'); }); // Default task gulp.task('dev', ['scripts', 'styles', 'html', 'browser-sync', 'watch'], function() {     console.log('Development starts'); }); </code></pre>