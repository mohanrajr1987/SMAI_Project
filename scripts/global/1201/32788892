<p>We are working on a website with a static frontend, API Gateway + Lambda as the backend, DynamoDB as the DB. I saw there were a couple similar questions to this one, but I'm looking to understand the matter throughly to build a complete and robust solutions, since I hope to build several websites using this stack.</p>  <p>This one is a fairly basic website: we have an <code>index.html</code> page, a <code>blog.html</code> page and a <code>portfolio.html</code> page. We also have an html page for single portfolio entries (let's call it <code>portfolio-entry.html</code>) and a page for single blog articles (let's call it <code>blog-post.html</code>).</p>  <p>So I see there's a way to specify an index page and an error page, so you can have a nice clean url for your index. There are also rewrite rules, which are more like redirects.</p>  <p>I guess my best bet to deliver different blog posts would be to pass a query string to <code>blog-post.html</code> ("mywebsite.com/blog-post.html?post=post-alias") and have the <code>.js</code> ask the API different content depending on the query string.</p>  <p>Is there a way using S3 to route <code>mywebsite.com/blog/post-alias/</code> to <code>mywebsite.com/blog-post.html?post=post-alias</code> and pass the response to the client without redirecting? I'm both interested in "client-side url rewriting" via JS to have nice URLs for humans AND server-side routing to catch crawler requests and have SEO/indexing of pages for specific posts, for example.</p>  <p>How should I go about this? Is there a way to achieve all this using what S3 and JS provide or do I have to put a proxy/router (like nginx) in front of S3 to handle route requests?</p>  <p>We are really committed to the whole S3-ApiGateway-Lambda-Dynamo architecture and we would really love to do without server.</p>