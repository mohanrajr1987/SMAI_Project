<p>Im having trouble with a mime-type download rutine on my website.</p>  <p>The code runs by linking to an ashx file and works fine in IE but CHROME corrupts the downloaded file.</p>  <p>NB! If I isolate the code (without context prefix) on a serverside button it works on both CHROME and IE.</p>  <p>Any hint is appreciated.</p>  <p>regards Mark</p>  <p>my ashx source:</p>  <pre><code>&lt;%@ WebHandler Language="C#" Class="Handler" %&gt;  using System; using System.Web; using System.IO; using System.Web.SessionState;  public class Handler : IHttpHandler, IReadOnlySessionState {     public void ProcessRequest (HttpContext context) {    string filepath = context.Server.MapPath("~/filelib") + "/" + "test.pdf";  if (File.Exists(filepath)) {                          FileInfo fi = new FileInfo(filepath);      string fileExt = fi.Extension;     string fileSize = fi.Length.ToString();      context.Response.Clear();     context.Response.Buffer = true;     context.Response.ClearContent();     context.Response.ClearHeaders();     context.Response.ContentType = GetMimeType(fileExt);      context.Response.AppendHeader("Content-Disposition", "attachment; filename=" + fi.Name);     context.Response.AddHeader("Content-Length", fileSize);      context.Response.WriteFile(filepath);     context.Response.Flush();     context.Response.Close();     context.Response.End();                          }   else {     HttpContext.Current.Response.Write("File not found"); }    }   public string GetMimeType(string ext) {     switch (ext.ToUpper())     {         case ".PDF":             return "application/pdf";         case ".DOC":         case ".DOCX":             return "application/msword";                         case ".GIF":             return "image/gif";                      case ".JPG":             return "image/jpeg";         case ".PNG":              return "image/png";         case ".BMP":              return "image/bmp";         case ".TIF":              return "image/tiff";                       default:             return "application/octet-stream";      }  }  public bool IsReusable { get { return false;} } } </code></pre>