<p>I am quite new to Android and really need help here. I am trying to write an app which allow users to update the account automatically when the users login. This is my design: <strong>"LoginActivity -> UpdateActivity -> MainActivity"</strong>. In UpdateActivity, There is a ProgressBar and a TextView to show the progress. <strong>I hope this app could download the information while showing the progress at the same time</strong>. I tried the following design:</p>  <pre><code>int now; int max; ProgressBar Bar; TextView Progress; private Handler UpdateHandler;    private Handler UIHandler; int UD=0; @Override protected void onCreate(Bundle savedInstanceState)  {     super.onCreate(savedInstanceState);     setContentView(R.layout.updating);     Bar=(ProgressBar)findViewById(R.id.progressBar_H);     Progress=(TextView)findViewById(R.id.Progress); } @Override protected void onStart() {     super.onStart();      UpdateHandler = new Handler();     UpdateHandler.post(Run_Update);     UIHandler = new Handler()     {         @Override         public void handleMessage(Message msg)          {              if(msg.what==1)//change view here             {                 Bar.setMax(max);                 Bar.setProgress(now);                 Progress.setText(now+"/"+max);             }             if(msg.what==2)//finish update, go to main             {                 Intent intent = new Intent();                 intent.setClass(UpdateActivity.this, MainActivity.class);                 startActivity(intent);                 finish();             }                            super.handleMessage(msg);           }     }; }  final Runnable Run_Update = new Runnable()  {     public void run()      {         //when update is done, UD will become 1         if(UD==0){Log.v("Run_Update","UD=0");checkUpdate();}         if(UD==1)         {             Log.v("Run_Update","UD=1");             try {                 Thread.sleep(1000);             } catch (InterruptedException e) {                 // TODO Auto-generated catch block                 e.printStackTrace();             }         }     }  };  private void checkUpdate() {     /*--     Some Bulky things here.     Need to run first to get the 'max' value of the ProgressBar     */--      max=UpdateCount;     for(i=0;i&lt;UpdateCount;i++)     {            //Send message =&gt; change views         Message m = new Message();                                         m.what = 1;                         UpdateActivity.this.UIHandler.sendMessage(m);          /*--         More Bulky things here.         The Main Course of Updating         */--      }     //Send message =&gt; start main     Message m = new Message();                                     m.what = 2;                     UpdateActivity.this.UIHandler.sendMessage(m); } </code></pre>  <p>The whole downloading runs well, and I can reach MainActivity without mistakes. However, <strong>the Content View announced in onCreate: "setContentView(R.layout.updating);" only appear for a very short time after downloads are already made</strong>.</p>  <p>I tried to investigate it and it is the result:</p>  <ul> <li>02:33:29.921 LoginActivity  OnPause</li> <li>02:33:30.001 UpdateActivity OnCreate</li> <li>02:33:30.011 UpdateActivity OnStart</li> <li>02:33:30.011 UpdateActivity OnResume</li> <li>02:33:30.091 Run_Update     UD=0</li> <li>02:33:31.773 Run_Update     UD=1</li> <li>02:33:32.774 Choreographer  Skipped 165 frames! The application may be doing too much work on its main thread</li> <li>02:33:32.994 MSG            2</li> <li>02:33:33.215 UpdateActivity onPause</li> <li>02:33:33.285 MainActivity   onCreate</li> <li>02:33:33.415 MainActivity   onStart</li> <li>02:33:33.425 MainActivity   onResume</li> <li>02:33:33.965 UpdateActivity onStop</li> <li>02:33:33.965 UpdateActivity onDestory</li> <li>02:33:34.256 LoginActivity onStop</li> <li>02:33:34.256 LoginActivity onDestory</li> </ul>  <p>Download is done between UD=0 and UD=1. When the data increase, the time will also be quite long. However, the "setContentView" only appears after UpdateActivity went to OnStop.</p>  <p>I thought this problem might be related to something I didn't know: 1. When is an activity become foreground 2. when is a layout set</p>  <p>Also, I really need to know the way to fix the problem.</p>  <p>Any help is extremely appreciated!</p>