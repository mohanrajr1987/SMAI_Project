<p>I need a set of nested dictionaries in the form {a:{}{b:{},{c:{}}}} where a,b and c are the keys. I have tried the following code.</p>  <pre><code>from collections import defaultdict def dictizeString(string,dictionary) :     while string.startswith('/'):         string = string[1:]     parts = string.split('/',1)      if len(parts)&gt;1:         branch = dictionary.setdefault(parts[0],[dict()])         dictionary[parts[0]].append(dict())         dictizeString(parts[1], branch)     else:         if dictionary.has_key(parts[0]):             dictionary[parts[0]]=dict()         else:             dictionary[parts[0]]=[dict()]             dictionary[parts[0]].append(dict())                  d={}  dictizeString('/a/b/c/d', d) print d </code></pre>  <p>Execution of this code results in an error ''list' object has no attribute 'setdefault''. The code works for the first iteration(i.e for a) but throws the above error for the second iteration(i.e b). </p>  <p>The append functionality works for the else section in the last 6 lines of the code.I tried to use the same logic in the if case, but it is throwing an error.</p>