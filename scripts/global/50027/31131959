<p>I am creating custom phone book which reads phone book contacts and displays inside my application. So I am creating a long list selector and a listbox inside it. </p>  <p>My listbox will contain phone contact name and list of phone number with the check box under the particular name. I wrote an event trigger inside my listbox to make track of the checkbox is clicked or not. </p>  <p>PROBLEM : Event is not firing in the view model. I suspect since the listbox is present inside another list(long list selector), event is not firing. </p>  <p>Here is xaml code:</p>  <pre><code>&lt;phone:LongListSelector Grid.Row="3" LayoutMode="List" ItemsSource="{Binding PhoneBookDataSource}" IsGroupingEnabled="True" HideEmptyGroups="True"&gt;         &lt;phone:LongListSelector.ItemTemplate&gt;             &lt;DataTemplate&gt;             &lt;StackPanel Orientation="Vertical" &gt;                     &lt;TextBlock Text="{Binding PhoneContactName}" FontWeight="SemiBold" FontSize="36" Foreground="Green"&gt;&lt;/TextBlock&gt;                     &lt;ListBox ItemsSource="{Binding LstPhoneContactNumber,Mode=TwoWay}" ScrollViewer.VerticalScrollBarVisibility="Disabled" ScrollViewer.HorizontalScrollBarVisibility="Disabled"&gt;                         &lt;i:Interaction.Triggers&gt;                                 &lt;i:EventTrigger EventName="Tap"&gt;                                     &lt;i:InvokeCommandAction Command="{Binding PhoneNumberCheckedStateChangeCommand}" /&gt;                                 &lt;/i:EventTrigger&gt;                             &lt;/i:Interaction.Triggers&gt;                         &lt;ListBox.ItemTemplate&gt;                             &lt;DataTemplate&gt;                                 &lt;Grid Width="480"&gt;                                     &lt;TextBlock Text="{Binding PhoneNumberItem}" FontSize="25" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="Gray"&gt;&lt;/TextBlock&gt;                                     &lt;CheckBox Foreground="Black" Background="Black" VerticalAlignment="Center" HorizontalAlignment="Right" IsChecked="{Binding IsPhoneNumberItemChecked,Mode=TwoWay}"&gt;&lt;/CheckBox&gt;                                 &lt;/Grid&gt;                             &lt;/DataTemplate&gt;                         &lt;/ListBox.ItemTemplate&gt;                     &lt;/ListBox&gt;             &lt;/StackPanel&gt;             &lt;/DataTemplate&gt;         &lt;/phone:LongListSelector.ItemTemplate&gt;         &lt;phone:LongListSelector.GroupHeaderTemplate&gt;             &lt;DataTemplate&gt;                 &lt;Border Background="Transparent" Padding="5"&gt;                     &lt;Border Background="{StaticResource PhoneAccentBrush}" BorderBrush="{StaticResource PhoneAccentBrush}" BorderThickness="2" Width="62"       Height="62" Margin="0,0,18,0" HorizontalAlignment="Left"&gt;                         &lt;TextBlock Text="{Binding Key}" Foreground="{StaticResource PhoneForegroundBrush}" FontSize="48" Padding="6"          FontFamily="{StaticResource PhoneFontFamilySemiLight}" HorizontalAlignment="Left" VerticalAlignment="Center"/&gt;                     &lt;/Border&gt;                 &lt;/Border&gt;             &lt;/DataTemplate&gt;         &lt;/phone:LongListSelector.GroupHeaderTemplate&gt;         &lt;phone:LongListSelector.JumpListStyle&gt;             &lt;Style TargetType="phone:LongListSelector"&gt;                 &lt;Setter Property="GridCellSize"  Value="113,113"/&gt;                 &lt;Setter Property="LayoutMode" Value="Grid" /&gt;                 &lt;Setter Property="ItemTemplate"&gt;                     &lt;Setter.Value&gt;                         &lt;DataTemplate&gt;                             &lt;Border Background="{Binding Converter={StaticResource BackgroundConverter}}" Width="113" Height="113" Margin="6" &gt;                                 &lt;TextBlock Text="{Binding Key}" FontFamily="{StaticResource PhoneFontFamilySemiBold}" FontSize="48" Padding="6"             Foreground="{Binding Converter={StaticResource ForegroundConverter}}" VerticalAlignment="Center"/&gt;                             &lt;/Border&gt;                         &lt;/DataTemplate&gt;                     &lt;/Setter.Value&gt;                 &lt;/Setter&gt;             &lt;/Style&gt;         &lt;/phone:LongListSelector.JumpListStyle&gt;     &lt;/phone:LongListSelector&gt; </code></pre>  <p>Here is my view model:</p>  <pre><code>public DelegateCommand PhoneNumberCheckedStateChangeCommand { get; set; }     public DelegateCommand SendSMSCommand { get; set; }  public CustomPhoneBookViewModel(INavigationService nav, IDataService data, IAESEnDecrypt encrypt, IGeoLocationService geoLocation, IMessageBus msgBus, ISmartDispatcher smartDispatcher)         : base(nav, data, encrypt, geoLocation, msgBus, smartDispatcher)     {         IsProgressBarBusy = true;         PhoneContactsList = new ObservableCollection&lt;PhoneBookEntity&gt;();         PhoneBookDataSource = new ObservableCollection&lt;LLSAlphaKeyGroup&lt;PhoneBookEntity&gt;&gt;();         InitializeDelegateCommands();         GetDeviceResolution();         ReadPhoneBook();     }  private void OnPhoneNumberItemCheckedStateChangedCommand()     {         try         {             foreach (var parentItem in PhoneBookDataSource)             {                 foreach (var childItem in parentItem)                 {                     foreach (var item in childItem.LstPhoneContactNumber)                     {                         if (item.IsPhoneNumberItemChecked)                             IsSendSMSButtonEnabled = true;                         return;                     }                 }                 IsSendSMSButtonEnabled = false;             }         }         catch { }         finally         {             SendSMSCommand.RaiseCanExecuteChanged();         }     } </code></pre>  <p>Any suggestions is appreciated!!</p>