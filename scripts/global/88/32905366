<p>Here, i have 20 you tube link in MySQL database, and i want to create you tube List view with thumbnail, description, and title?</p>  <h1>FragmentBvideo.java</h1>  <pre><code>public class FragmentBvideo extends Fragment {     public static String DEVELOPER_KEY ="AIzaSyBIIs0u0NXhsZguv8nCNvSzUmflTt7K1Ek"; // Log tag private static final String TAG = MainActivityTabs.class.getSimpleName();  // restaurant json url private static final String url = "MySql API"; private ProgressDialog pDialog; private ArrayList&lt;VideoModal&gt; videoModalItemList = new ArrayList&lt;VideoModal&gt;(); private ListView list; private CustomVideoAdapter vadapter; @Override public View onCreateView(LayoutInflater inflater, final ViewGroup container, Bundle savedInstanceState) {     View view = inflater.inflate(R.layout.fragment_b_video, container, false);      // call the views with this layout     list = (ListView) view.findViewById(R.id.list_b);      // you see, you need to find the view with "view.find..."     vadapter = new CustomVideoAdapter(getActivity(), videoModalItemList);     list.setAdapter(vadapter);      // Showing progress dialog before making http request     pDialog = new ProgressDialog(getActivity());     pDialog.setMessage("Loading...");     pDialog.show();     pDialog.setCanceledOnTouchOutside(false);      // Creating volley request obj     final JsonArrayRequest restaurantReq = new JsonArrayRequest(url,new Response.Listener&lt;JSONArray&gt;()     {         @Override         public void onResponse(JSONArray response)         {             Log.d(TAG, response.toString());             hidePDialog();              // Parsing json             for (int i = 0; i &lt; response.length(); i++) {                 try {                     JSONObject result = response.getJSONObject(i);                     String getUrl = result.getString("videoModal");                      String Video_Id = getYoutubeVideoId(getUrl);                      Toast.makeText(getActivity(),Video_Id,Toast.LENGTH_SHORT).show();                     Bundle args = new Bundle();                     args.putString("geturl", Video_Id);                      VideoModal videoModal = new VideoModal();                      // adding restaurant to restaurants array                     videoModalItemList.add(videoModal);                 } catch (JSONException e) {                     e.printStackTrace();                 }             }              // notifying list adapter about data changes             // so that it renders the list view with updated data             vadapter.notifyDataSetChanged();         }     },             new Response.ErrorListener()             {                 @Override                 public void onErrorResponse(VolleyError error)                 {                     VolleyLog.d(TAG, "Error: " + error.getMessage());                     hidePDialog();                  }             });      // Adding request to request queue     AppController.getInstance().addToRequestQueue(restaurantReq);      //Jump to next fragment onClickItem     list.setOnItemClickListener(new AdapterView.OnItemClickListener() {         @Override         public void onItemClick(AdapterView&lt;?&gt; parent, View view, int position, long id) { //                String vVideo = videoModalItemList.get(position).getVidurl(); // //                Bundle args = new Bundle(); //                args.putString("geturl",Video_Id);              FragmentDdetail newFragment = new FragmentDdetail();             android.support.v4.app.FragmentTransaction transaction = getFragmentManager().beginTransaction(); //                newFragment.setArguments(args);             transaction.replace(R.id.framelayout_b, newFragment).addToBackStack(null);             transaction.commit();         }      });     return view; }  @Override public void onDestroy() {     super.onDestroy();     hidePDialog(); }  private void hidePDialog() {     if (pDialog != null)     {         pDialog.dismiss();         pDialog = null;     } }  public static String getYoutubeVideoId(String youtubeUrl) {     String video_id="";     if (youtubeUrl != null &amp;&amp; youtubeUrl.trim().length() &gt; 0 &amp;&amp; youtubeUrl.startsWith("http"))     {          String expression = "^.*((youtu.be"+ "\\/)" + "|(v\\/)|(\\/u\\/w\\/)|(embed\\/)|(watch\\?))\\??v?=?([^#\\&amp;\\?]*).*"; // var regExp = /^.*((youtu.be\/)|(v\/)|(\/u\/\w\/)|(embed\/)|(watch\?))\??v?=?([^#\&amp;\?]*).*/;         CharSequence input = youtubeUrl;         Pattern pattern = Pattern.compile(expression,Pattern.CASE_INSENSITIVE);         Matcher matcher = pattern.matcher(input);         if (matcher.matches())         {             String groupIndex1 = matcher.group(7);             if(groupIndex1!=null &amp;&amp; groupIndex1.length()==11)                 video_id = groupIndex1;         }     }     return video_id; } } </code></pre>  <p>here is my adepter, i don't how to create this</p>  <h1>CustomVideoAdapter</h1>  <pre><code>public class CustomVideoAdapter extends ArrayAdapter&lt;VideoModal&gt; { private Context context; private LayoutInflater inflater; private List&lt;VideoModal&gt; videoModalItems;  public CustomVideoAdapter(Context context, List&lt;VideoModal&gt; objects) {     super(context, IGNORE_ITEM_VIEW_TYPE, objects);     inflater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE); }  @Override public View getView(int position, View view, ViewGroup parent) {     if (view == null) {         view = inflater.inflate(R.layout.list_video_row, null);     }      TextView textView = (TextView) view.findViewById(R.id.v_title);     textView.setText(getItem(position).getTitle());     TextView disabledText = (TextView) view.findViewById(R.id.v_descreption);     disabledText.setText(getItem(position).getDescription());      if (isEnabled(position)) {         disabledText.setVisibility(View.INVISIBLE);         textView.setTextColor(Color.WHITE);     } else {         disabledText.setVisibility(View.VISIBLE);         textView.setTextColor(Color.GRAY);     }      return view; } } </code></pre>  <p>this is my getter setter class</p>  <h1>VideoModal.java</h1>  <pre><code>public class VideoModal { private String title; private String description; private String thumbnailURL; private String id;  public String getId() {     return id; }  public void setId(String id) {     this.id = id; }  public String getTitle() {     return title; }  public void setTitle(String title) {     this.title = title; }  public String getDescription() {     return description; }  public void setDescription(String description) {     this.description = description; }  public String getThumbnailURL() {     return thumbnailURL; }  public void setThumbnailURL(String thumbnail) {     this.thumbnailURL = thumbnail; }     } </code></pre>