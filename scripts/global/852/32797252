<p>I have the following service (with removed variables):</p>  <pre><code>angular     .module('app')     .factory('Employee', function($resource) {         return $resource("https://api.mongolab.com/api/1/databases/:dbName/collections/:collectionName/:id",         {apiKey: apiKey, dbName: dbName, collectionName: collectionName},         { update: { method: 'PUT' } }); }); </code></pre>  <p>I have the following code in my add/edit form controller for creating/retrieving an employee:</p>  <pre><code>if($stateParams.id === "add") {     $scope.employee = new Employee(); } else {     $scope.employee = Employee.get({id: $stateParams.id}); } </code></pre>  <p>Now, on my form I have a <code>Save</code> button that has the following function attached to it:</p>  <pre><code>if($scope.employee._id) {     $scope.employee.$update({id:$scope.employee._id}); } else {     $scope.employee._id = $scope.employee.jmbg;     $scope.employee.$save(); } </code></pre>  <p>The "Add" functionality works as expected, but when I update an existing employee I get the following error:</p>  <pre><code>400 Bad Request - Invalid object { "_id" : "000" , "jmbg" : "000" , "name" : "Bilbo" , "surname" : "Hagins" , "email" : "bibi@bibi.com" , "$promise" : { } , "$resolved" : true} - Document field names can't start with '$' (Bad Key: '$promise') </code></pre>  <p>Now, my <code>$scope.employee</code> really does contain these two fields, but this is the first time I encountered such an error and I've already had this functionality on other projects (even one which uses the same MongoLab API for the backend and as far as I can tell there isn't any difference in the code from that other project and this one).</p>  <p>Also note that there is no configuration of any kind in my angular app.</p>