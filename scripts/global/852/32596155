<p>i have a basic API on serverside, which is requested by my Swift-App.</p>  <p>For now i can load the resources from the API and display the data:</p>  <pre><code>import Foundation import SwiftyJSON import Alamofire  class RestApiManager {      var resources: JSON = [          "resources": [              "articles": [],              "categories": []          ],      ]      let apiUrl: String     let apiUsername: String     let apiPassword: String      var resourceToBeCalled: String = ""      init(apiUrl: String, apiUsername: String, apiPassword: String) {          self.apiUrl = apiUrl         self.apiUsername = apiUsername         self.apiPassword = apiPassword          requestArticleResource()         requestCategegoryResource()      }      // Article Resource     func requestArticleResource() {          self.resourceToBeCalled = "articles"          getArticleResource() { responseObject, error in              let articleResource = JSON(responseObject!)              self.resources["resources"]["articles"] = articleResource          }      }      func getArticleResource(completion: (responseObject: NSDictionary?, error: NSError?) -&gt; ()) {          collectDataFromApi() { responseObject, error in              completion(responseObject: responseObject, error: error)          }      }      // Category Resource     func requestCategegoryResource() {          self.resourceToBeCalled = "categories"          getCategoryResorce() { responseObject, error in              let categoryResource = JSON(responseObject!)              self.resources["resources"]["categories"] = categoryResource          }      }      func getCategoryResorce(completion: (responseObject: NSDictionary?, error: NSError?) -&gt; ()) {          collectDataFromApi() { responseObject, error in              completion(responseObject: responseObject, error: error)          }      }      // COLLECT DATA METHOD     func collectDataFromApi(completionHandler: (responseObject: NSDictionary?, error: NSError?) -&gt; ()) {          prepareHttpRequest(completionHandler)      }      // PREPARE HTTP REQUEST METHOD     func prepareHttpRequest(completionHandler: (responseObject: NSDictionary?, error: NSError?) -&gt; ()) {          let alamofireRequest = Alamofire.request(.GET, "\(self.apiUrl)" + "/api/" + "\(self.resourceToBeCalled)")          alamofireRequest.authenticate(user: self.apiUsername, password: self.apiPassword)          alamofireRequest.responseJSON { request, response, responseObject, error in              completionHandler(responseObject: responseObject as? NSDictionary, error: error)          }      }      func getData() -&gt; JSON {          return self.resources      }  } </code></pre>  <p>This is my RestApiManager.</p>  <p>In my TableViewController this Manager is called to retrieve the data:</p>  <pre><code>var result: JSON = []  override func viewDidLoad() {     super.viewDidLoad()      var restApiManager = RestApiManager(apiUrl: "http://example.com", apiUsername: "test", apiPassword: "test")      let seconds = 10.0     let delay = seconds * Double(NSEC_PER_SEC)     var dispatchTime = dispatch_time(DISPATCH_TIME_NOW, Int64(delay))      dispatch_after(dispatchTime, dispatch_get_main_queue(), {          self.result = restApiManager.getData()      }) } </code></pre>  <p>In this TableViewController i just created an instance of the class(RestApiManager) and waited 10 seconds to let the data load from the API.</p>  <p>This is quite dirty.</p>  <p>Thats why i wanted to include a progress-bar to the display the progress in the TableView, i already know how a progress-bar works and i already visited the progress-method of Alamofire, but i am not sure if its even possible to include this progress-bar in my existing app-structure.</p>  <p>If anyone could share his knowledge, would be great.</p>  <p>Thanks and Greetings!</p>