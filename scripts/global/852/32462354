<p>I have multiple Models in my Angular Application, and many of them use nested routes for getting data.</p>  <p>I thought in two ways to solve my problem, but none of them solved in a intelligent way until now.</p>  <p>What I need is to parse my response from the server, that is encapsulated with a few metadata when querying models on DB, the response is like:</p>  <pre><code>{ count: 1, limit: 5, models: [&lt;models&gt;] page: 1 pages: 1 } </code></pre>  <p>I have successfully configured the defaults of <code>query</code> to parse that, and return an object with a <code>$metadata</code> with the data:</p>  <pre><code>.config(['$resourceProvider', function($resourceProvider) {     $resourceProvider.defaults.actions.query.transformResponse = function (data){         data = angular.fromJson(data);         data.models.$metadata = _.omit(data, 'models');         return data.models;     };      $resourceProvider.defaults.actions.query.interceptor = {         response: function (response) {             response.resource.$metadata = response.data.$metadata;             return response.resource;         }     }  }]) </code></pre>  <p>But now, I wanted to use an endpoint like: <code>/users/:eventId/friends</code>. The problem with that, is that I must define that endpoint in the <code>User</code> resource model, like this:</p>  <pre><code>return $resource(API_URL+'/users/:userId',{     userId: '@_id', },{     friends: {         url: API_URL + '/users/:userId/friends',         method: 'GET',         isArray: true,     } }) </code></pre>  <p>But in this way, the default won't work. I know it's possible to set a custom interceptor/transformer for every action, but that is not intelligent, as I want to do that with ALL <code>isArray=true</code> requests. The question remaining: How to use that as default, no matter what the name of the request is?</p>  <p>Also, the reason why I'm not doing that kind of request in another Resource (in this case, 'Friends'), is that I can reach 'Friends' from multiple endpoints, and the 'query' would only be used for a single case, not multiple.</p>