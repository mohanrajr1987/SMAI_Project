<p>I want to load any <strong>resource</strong> from any assembly (of the same app) using only its uri. Both assemblies are part of the same application.</p>  <p>Because I want to be able to load from any assembly, I can't use "App" or "Application" which is not defined in a general Dll.</p>  <p>I think part or the answer is using : <code>System.Reflection.Assembly.GetCallingAssembly().GetManifestResourceStream(path);</code></p>  <p>But I can't find how to properly find/extract/resolve the assembly from the uri?</p>  <p>Notes:</p>  <ul> <li>The resource is actually defined as "Resource".</li> <li>The resource is not par of a WPF resource dictionary.</li> <li>The resource is actually an XML file but could be anything</li> </ul>  <p>Up to now (~3 hours after), after using reflector, it seems that using static System.Windows.Application.GetResourceStream(uri).Stream has advantages like resource caching. It is bad because it is hooked to WPF (System.windows). I'm looking for a better way (non depending on any specific UI framework) to do the job.</p>