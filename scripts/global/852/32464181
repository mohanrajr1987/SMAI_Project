<p>I have to delete items in a for loop the moment I close a bootstrap modal. Currently I am setting a delay of 3 secs on the modal close, so that the delete can happen within those 3secs in the background but this is not very efficient. What is the best way to ensure that the modal closes only when all the items are deleted successfully? Perhaps by making the delete synchronous ? Or promises?</p>  <pre><code>$scope.idList = [1, 2, 3]; $scope.deleteItems = function(deleteList){     angular.forEach( deleteList, function(item) {         DeleteAPI.remove({itemId: item}, {}, $scope.delSuccess, $scope.delError);     }); } $scope.close = function(){     var pmodal = $modal.open( {             templateUrl: 'route/pmodal.html',             controller: 'DeleteCtrl'         } );         pmodal.result.then(             function(check) {},              function(check) {                 if ( check=='proceed' ) {                     $scope.deleteItems( $scope.idList );                     $timeout( function() {                         $modalInstance.dismiss('cancel');                     }, 3000);                 }             },             function(check) {}         );  } </code></pre>