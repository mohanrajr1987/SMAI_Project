<p>I'm new and I'm learning webdriver and java:) I have beginner question.</p>  <p>I created classes whit <code>locators(findBy)</code> and methods working with this locators (<code>senKeys()</code>, <code>click()</code>, etc.) - I use <code>pagefactory</code>.</p>  <pre><code>HomePage LoginPage ... </code></pre>  <p>My main class <code>AddNewLeadTest</code> is a class where i initialize method from classes with locators, and I do it like this:</p>  <pre><code>HomePage hp = new HomePage(driver); hp.loginButton.click()  </code></pre>  <p>I would like do to this like this:</p>  <pre><code>HomePage.loginButton.click() </code></pre>  <p>It's faster and I will not have to create in <code>AddNewLeadTest</code> new object for everyone <code>xxxPage</code> class.</p>  <p>How should I write class/method to simplify creating new object?</p>  <p>I found example I would like to use in my project(in C#), but I don't know how to use it in Java. See below.</p>  <pre class="lang-csharp prettyprint-override"><code>public static class Pages {     private static T GetPage&lt;T&gt;() where T : new()     {         var page = new T();         PageFactory.InitElements(Browser.Driver, page);         return page;     }  public static AboutPage About {     get { return GetPage&lt;AboutPage&gt;(); } }  public static TopNavigationPage TopNavigation {     get { return GetPage&lt;TopNavigationPage&gt;(); } }  public static HomePage Home {     get { return GetPage&lt;HomePage&gt;(); } }  public static ContactPage Contact {     get { return GetPage&lt;ContactPage&gt;(); } }  public static RegisterPage Register {     get { return GetPage&lt;RegisterPage&gt;(); } }  public static LoginPage Login {     get { return GetPage&lt;LoginPage&gt;(); } }  public static ManageAccountPage ManageAccount {     get { return GetPage&lt;ManageAccountPage&gt;(); } } </code></pre>  <p>In this example calling method is like this:</p>  <pre><code>public void CanRegisterNewAccount()         {             Pages.Register.Goto();             Pages.Register.RegisterNewUser();             } </code></pre>  <p>So its very simple and clear.</p>