<p>I'm using Specflow/Selenium to automate test of a web application I'm working on in the ASP.Net environment. Most of the 'button clicks' lead to complete page loads. I execute the following lines of code to execute when clicking such a button, but it's a flickering piece of code - sometimes it finds the element and other times it fails. Why is that?</p>  <pre><code>public class CreateQuestionPOM : BasePOM {     //Flickering find!     [FindsBy(How = How.XPath, Using = "//label[text()[contains(.,'True/False')]]")]      private IWebElement trueFalseOption;      [FindsBy(How = How.XPath, Using = "//a[@ct='Button' and @title='Next']")]     private IWebElement nextButton;       public CreateQuestionPOM(IWebDriver driver) : base(driver) { }      public void CreateTrueFalseQuestion()     {                     trueFalseOption.Click();         nextButton.Click();          WebDriverWait wait = new WebDriverWait(GetDriver(), TimeSpan.FromSeconds(20));         wait.Until(driver1 =&gt; ((IJavaScriptExecutor)GetDriver()).ExecuteScript("return document.readyState").Equals("complete"));     }  } </code></pre>  <p>The above method signature is similar to all button clicks that happen on the page. The above piece of code is called after a previous button is clicked. The method is very similar to the above - wait for <code>document.readystate</code> to be <code>complete</code>. But why does this flicker so often and what is the recommended solution?</p>