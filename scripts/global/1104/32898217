<p>our app has an angular overlay that is always in the dom (although not always visible).. and sometimes when I attempt to click on elements on the page, Selenium throws an error...</p>  <blockquote>   <p>Element is not clickable at point (544, 297). Other element would   receive the click: div class="overlay" style="transition-property:   opacity; -webkit-transition-property: opacity; transition-duration:   300ms; -webkit-transition-duration: 300ms; transition-timing-function:   ease-in-out; -webkit-transition-timing-function: ease-in-out; display:   block; opacity: 0;"></p> </blockquote>  <p>Does anyone else experience this? webdriver .isDisplayed always reports that it is false, even when it is still inhibiting clicks.</p>  <p>I have written some code that attaches to protractor's waitForAngular function that checks for various states of the overlay's dom element (to wait until it has a display: attribute with value "none"). This helps a lot and I no longer experience this issue unless the browser is executing in the background. If the browser is not in foreground, then I hit the overlay issue very frequently. While protractor is waiting (based on my wait for angular override), if I bring the browser to foreground, then the test immediately begins continuing to execute and the dom state changes for the overlay.</p>  <p>Would love any thoughts from people with insight.</p>  <p>I assume the .isDisplayed not working properly seems to be a webdriver issue. And I also assume that the overlay being stuck in a specific dom state in the background to be an angular issue.</p>