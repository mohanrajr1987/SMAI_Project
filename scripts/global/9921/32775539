<p>Note: All error handling code is omitted for simplicity. I handled them locally, and no errors were produced.</p>  <p>In Golang, I tried to use the code below to read from a <code>http.Request.Body</code> from a POST request:</p>  <pre><code>func readBody(req *http.Request) string {     bytes, _ := httputils.DumpRequestOut(req, true)     return string(bytes) } </code></pre>  <p>It shows a non-zero Content-Length, but no content returned: </p>  <pre><code>ContentLength=413 with Body length 0 </code></pre>  <p>. I tried with the code below, also no luck:</p>  <pre><code>func readBody(req *http.Request) string {     bytes, _ := ioutil.ReadAll(req.Body)     return string(bytes) } </code></pre>  <p>It returns an empty string. After googling, I found a blog about this problem: <a href="https://medium.com/@xoen/golang-read-from-an-io-readwriter-without-loosing-its-content-2c6911805361" rel="nofollow">Golang: Read from an io.ReadWriter without losing its content</a>. I tried to follow the pattern, still no luck:</p>  <pre><code>func readBody(req *http.Request) string {     bodyBytes, _ := ioutil.ReadAll(req.Body)     // Restore the io.ReadCloser to its original state     req.Body = ioutil.NopCloser(bytes.NewBuffer(bodyBytes))     // Use the content     return string(bodyBytes) } </code></pre>  <p>Any suggestions? Thanks in advance :)</p>