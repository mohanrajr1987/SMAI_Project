<p>Is it possible to have multiple OneToOne relationships within an entity using SQLite.Net.Async Extensions PCL 1.3.0?</p>  <p>Example:</p>  <pre><code>[Table("body")] public class Body {     [OneToOne(CascadeOperations = CascadeOperation.All)]     [Column ("left")]     public Hand Left { get; set; }      [OneToOne(CascadeOperations = CascadeOperation.All)]     [Column ("right")]     public Hand Right { get; set; } }  [Table("hand")] public class Hand {     // In this I do not need a reference back to Body. } </code></pre>  <p>I have been trying using the following answer:</p>  <p><a href="http://stackoverflow.com/questions/29004856/sqlite-net-extension-both-one-to-one-and-one-to-many-relationships-between-two-e">SQLite-Net Extension both one-to-one and one-to-many relationships between two entities</a></p>  <p>And with these site as inspiration also:</p>  <p><a href="https://bitbucket.org/twincoders/sqlite-net-extensions/overview" rel="nofollow">https://bitbucket.org/twincoders/sqlite-net-extensions/overview</a></p>  <p><a href="https://bitbucket.org/twincoders/sqlite-net-extensions/src/65a1f8519347c40c948855cfc1a1d4d8bbcc8748/Tests/ReflectionExtensionsTests.cs?at=master&amp;fileviewer=file-view-default" rel="nofollow">https://bitbucket.org/twincoders/sqlite-net-extensions/src/65a1f8519347c40c948855cfc1a1d4d8bbcc8748/Tests/ReflectionExtensionsTests.cs?at=master&amp;fileviewer=file-view-default</a></p>  <p>Unfortunately with no luck so far. Is it even possible?</p>