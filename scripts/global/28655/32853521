<p>I am new to c++ and how can i retrive data from sqlite3 db using SELECT query and callback method in my SqliteUtil class?</p>  <p>I know that the data can be collected using the callback method</p>  <p><strong>Method scheme readRecords() -> executeQuery() -> sqlite3_exec(callback)</strong></p>  <p>SqliteUtil.cpp</p>  <pre><code>#include "SqliteUtil.hpp"  // for readRecords method **static int SqliteUtil::callback(?char *record?, int argc, char **argv, char **azColName) {     for(int i=0; i &lt; argc; i++){         cout &lt;&lt;     azColName[i];         cout &lt;&lt; "\t";         cout &lt;&lt; argv[i] ? argv[i] : "NULL";         cout &lt;&lt; "\n";     }     cout &lt;&lt; "\n";**     return 0; }  // Thats execute query, just for DRY. void SqliteUtil::executeQuery(string sql) {     sql += ";";     int result = sqlite3_exec(db, sql.c_str(), callback, ?records_s?, &amp;zErrMsg);     printError(result); }   void SqliteUtil::readRecords(vector&lt;string&gt; columns = {}, vector&lt;string&gt; order = {}) {     string sql = "SELECT";     if (columns.size() == 0 ) {         sql += " * ";     } else {         sql += " " + joinStrArray(columns) + " ";     }     sql += "from " + table;      if (order.size() != 0) {         sql += " ORDER BY " + joinStrArray(order) + " ASC";     }      executeQuery(sql); } </code></pre>  <p>SqliteUtil.hpp</p>  <pre><code>#ifndef SQLITE_UTIL_H #define SQLITE_UTIL_H  #include &lt;string&gt; #include &lt;vector&gt; #include &lt;iostream&gt; #include "../sqlite/sqlite3.h" using namespace std;  class SqliteUtil {     private:         string path; //path to database         string table; //current table         sqlite3 *db; //database reference         char *zErrMsg;         const char* data;         //vector&lt;vector&lt;string&gt;&gt; records;         char **records;          string joinStrArray(vector&lt;string&gt; lines, int quoted=0);         !!!!static int callback( ?char *records ?, int argc, char **argv, char **azColName);         !!!!void executeQuery(string sql);         void printError(int code);      public:         SqliteUtil(string dbPath, string tableName);         //Setters and Getters         void setPath(string dbPath);         string getPath();         void setTable(string tableName);         string getTable();          //Methods for work with Sqlite3         void openDb();         void closeDb();         void createTable(vector&lt;string&gt; columns);         void deleteTable();         void createRecord(vector&lt;string&gt; values);         !!!!void readRecords(vector&lt;string&gt; columns = {}, vector&lt;string&gt; order = {});         string updateRecord();         void deleteRecord(string id = "0"); };  #endif </code></pre>