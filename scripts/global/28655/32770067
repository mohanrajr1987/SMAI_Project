<p>I know that there are a lot of questions on PBKDF2 and hashes, but most of them seem to talk about bits. Perhaps that is what I need to learn more about, but I'm hoping there is something more straight-forward for my problem.</p>  <p>Note: These are two separate programs (so the variables will seem to repeat, but do not).</p>  <p>The first creates a hashed password and stores it in the db ... This is working fine.</p>  <pre><code>from pbkdf2 import crypt import sqlite3  cemail = input("Email: ") cpassword = input("Password: ") pwhash = crypt(cpassword) connection = sqlite3.connect('/Users/Air/Desktop/users.db') cursor_v = connection.cursor() cursor_v.execute("insert into user (cemail, cpassword) values (?,?)", (cemail, pwhash)) connection.commit() cursor_v.close() </code></pre>  <p>The problem is here, where I go to check the database for the original hashed password. Once the hashed password went into the database from the first program, is that it? Is it gone forever (i.e. not able to be compared to something else later, like another password during login)? </p>  <pre><code>cemail = input("Login with Email: ") cpassword = input("Login with Password: ") pwhash = crypt(cpassword) connection = sqlite3.connect('/Users/Air/Desktop/users.db') cursor_v = connection.cursor() cursor_v.execute("SELECT * FROM user WHERE cemail=? AND cpassword=?", (cemail,pwhash)) row = cursor_v.fetchone() if pwhash == crypt(pwhash, cpassword):     print("Welcome") else:     print("Invalid") </code></pre>  <p>Any help or guidance is appreciated.</p>