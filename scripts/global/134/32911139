<p>Looks like AngularJS <code>$filter("orderBy")</code> works not the same way as <code>Array.prototype.sort</code>.  I wrote example for this problem:</p>  <p><strong>Template:</strong></p>  <pre><code>&lt;div ng-app="app" ng-controller="ctrl"&gt;     &lt;div&gt;arr1 angular &lt;/br&gt;{{ arr1ang }}&lt;/div&gt;     &lt;div&gt;arr2 angular &lt;/br&gt;{{ arr2ang }}&lt;/div&gt;     &lt;div&gt;arr1 js &lt;/br&gt;{{ arr1js }}&lt;/div&gt;     &lt;div&gt;arr2 js &lt;/br&gt;{{ arr2js }}&lt;/div&gt; &lt;/div&gt; </code></pre>  <p><strong>Controller:</strong></p>  <pre><code>angular.module('app', []);  function ctrl ($scope, $filter) {     arr1 = [       {value: "AA"},        {value: "AB"},        {value: "aa"},        {value: "ab"}     ];     arr2 = [       {value: "d"},        {value: "D"},        {value: "w"},        {value: "e"},        {value: "i"},        {value: "O"},        {value: "o"},        {value: "r"}     ];      $scope.arr1ang = $filter('orderBy')(arr1, "value");     $scope.arr2ang = $filter('orderBy')(arr2, "value");      function comp(a,b){         if (a.value &gt; b.value)             return 1;         else if (b.value &gt; a.value)             return -1;         else             return 0;     }      arr1.sort(comp);     arr2.sort(comp);     $scope.arr1js = arr1;     $scope.arr2js = arr2; }  angular   .module('app')   .controller('ctrl', ctrl); </code></pre>  <p><strong>Result:</strong></p>  <pre><code>arr1 angular [{"value":"AA"},{"value":"aa"},{"value":"AB"},{"value":"ab"}] arr2 angular [{"value":"d"},{"value":"D"},{"value":"e"},{"value":"i"},{"value":"O"},{"value":"o"},{"value":"r"},{"value":"w"}] arr1 js [{"value":"AA"},{"value":"AB"},{"value":"aa"},{"value":"ab"}] arr2 js [{"value":"D"},{"value":"O"},{"value":"d"},{"value":"e"},{"value":"i"},{"value":"o"},{"value":"r"},{"value":"w"}] </code></pre>  <p>I made a Codepen example about it <a href="http://codepen.io/anon/pen/MapJwV?editors=101" rel="nofollow">here</a>.</p>  <p>I don't understand something or it is a bug in AngularJS? </p>