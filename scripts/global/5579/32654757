<p>(Java, JUnit, Selenium, WebDriver)</p>  <p>For my job I've been tasked with testing a web application that primarily runs as an SWF file, but for the purposes of test automation, we have a JavaScript version.</p>  <p>I am trying to do a simple task. I want to click the logout button. Here is the snippet of code dealing with that.</p>  <pre><code>// Clicks the log out button Actions actions = new Actions(driver); WebElement logout = driver.findElement(By.xpath(".//*[@id='flow']/div[1]/div/div[7]/div/div[3]/div[4]/div/div/div/div/div/div/div/div[4]/div/img")); actions.moveToElement(logout).click().build().perform(); </code></pre>  <p>So, running this script has odd functionality. The button will not be clicked, but upon manually hovering my mouse over the button, the button will (without any other manual input) act as though it was clicked and never released.</p>  <p>So the two problems are moveToElement(logout) does not move me to the button, and the .click().build().perform() does not function how I expected it to either.</p>  <p>Been researching and trying different answers all week. I'm hoping I'm just making a stupid mistake. Does anyone have a suggestion?</p>  <p>EDIT: So far we have tried to find a new xpath (current xpath seems to be the xpath to the image of the button), record the click on the Selenium IDE (Selenium IDE doesn't recognize the button), and attempt a direct .click() command.</p>