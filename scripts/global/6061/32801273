<p>I have a jax-rs REST service, using JEE 7 (deployed in glassfish), which has a method to process HTTP POST on the resource:</p>  <pre><code>@POST @Path(value="{dId}") @Consumes(MediaType.MULTIPART_FORM_DATA) @Produces(MediaType.APPLICATION_JSON) public Response sendStatus(@Context HttpServletRequest request) </code></pre>  <p>I try to extract the multipart data as:</p>  <pre><code>Collection&lt;Part&gt; parts = request.getParts(); if(parts==null || parts.isEmpty()){         lg.warn("Empty/non-existent parts in request body!");         return sendBadRequestError(sp); } </code></pre>  <p>I then try to simulate a client multipart POST request, using RestClient(from wiztools.org), with atleast 2 parts of different content-types ( boundary delimiter is automatically set by the RESTClient tool).</p>  <p>I verify in wireshark that its a proper request that is sent from the RESTClient( no malformed packet etc).</p>  <p>However, all the request seems to hit the block containing the <em>Empty/non-existent parts in request body</em> message, indicating there were no parts found in the request.</p>  <p>I searched around in Stackoverflow many times before posting, and all the examples/solutions relate to use-case where one is uploading a file/image, which is not the case am dealing with. </p>  <p>My rest service just consumes a multipart request, which can consist of one part with JSON data, another part with simple string or other JSON data.</p>  <p>Is there something am missing - please help?.Is there someother technique to parse the multipart data that hits a REST service?</p>  <p>Please advice.</p>  <p>Thanks. J</p>