<p>I have problem with REST service I'm trying to make. I use GlassFish 4.1 and Jersay 2.1 which is built-in. </p>  <pre><code>@Path("/driver") @RequestScoped public class DriverResource {     private static Logger logger = LogManager.getLogger(DriverResource.class);          @Inject         private DriverManager driverManager;          private SharedResponseFactory responseFactory = new SharedResponseFactory();          @GET         @Path("/login/{pesel}/{password}")         @Produces("application/json")         public Response logIn(@PathParam("pesel") String pesel, @PathParam("password") String password) {             try {                 Driver driver = driverManager.logIn(pesel, password);                  logger.debug("Zalogowano kierowcÄ™: " + driver.getFullName());                 return responseFactory.getSuccesResponse(driver);             } catch (ErrorDAOException e) {                 logger.catching(e);                 return responseFactory.getFailureResponse(e);             } catch (NoDataFoundDAOException e) {                 logger.catching(e);                 return responseFactory.getFailureResponse(e);             } catch (Exception e) {                 logger.catching(e);                 return responseFactory.getFailureResponse(e);             }         }     } </code></pre>  <p>When I'm trying to return my Entity I get response like this:</p>  <pre><code>{} </code></pre>  <p>In my Entities there are many cyclic references and I don't operate on actual implementation but interfaces. I need to make it the way Retrofit in my Android application could deserialize it. </p>  <p>Glassfish's logs are empty, there are no errors related to rest. I have no idea how to make it working.</p>  <p>I tried to use <code>@JsonIdentityInfo</code> to handle cyclic references and <code>@JsonTypeInfo</code> to make interfaces possible to desserialize.</p>  <p>I think there's a small trick that will make it working but unfortunately I don't know it...</p>