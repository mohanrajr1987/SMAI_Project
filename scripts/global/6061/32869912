<p>Since I'm struggling on documentation about CDI, I hope this question could become a useful resource for the correct CDI annotations to use in Jersey/Glassfish.</p>  <p>Say we have an application <code>BookStore</code>:</p>  <pre><code>package my.bookstore;  import javax.ws.rs.ApplicationPath; import org.glassfish.jersey.server.ResourceConfig;  @ApplicationPath("/bookstore") public class BookStore extends ResourceConfig {     public BookStore() {         this.packages("my.bookstore.resource");     } } </code></pre>  <p>We want to make <code>Book</code> entities accessible via a RESTful service:</p>  <pre><code>package my.bookstore.entity;  public class Book {     public String isbn;     public String title;     public String author;      public Book(String isbn, String title, String author) {         this.isbn = isbn;         this.title = title;         this.author = author;     } } </code></pre>  <p>So we need a <code>DAO</code> to access the datastore:</p>  <pre><code>package my.bookstore.dao;  import my.bookstore.entity.Book; import java.util.List;  public interface BookDAO {     public List&lt;Book&gt; getAllBooks(); } </code></pre>  <p>And its implementation:</p>  <pre><code>package my.bookstore.dao;  import my.bookstore.entity.Book; import java.util.List; import java.util.ArrayList;  public class DefaultBookDAO implements BookDAO {     public List&lt;Book&gt; getAllBooks() {         List&lt;Book&gt; bookList = new ArrayList&lt;&gt;();         list.add(new Book("1234", "Awesome Book", "Some Author"));         return bookList;      } } </code></pre>  <p>Then I want to inject the <code>DefaultBookDAO</code> into the RESTful service:</p>  <pre><code>package my.bookstore.resource;  import javax.inject.Inject; import javax.ws.rs.GET; import javax.ws.rs.Path; import javax.ws.rs.Produces; import javax.ws.rs.core.MediaType;  @Path("/books") public class BookResource {     @Inject    BookDAO dao;     @GET    @Produces(MediaType.APPLICATION_JSON)    public List&lt;Book&gt; getBooks() {        return this.dao.getAllBooks();    } } </code></pre>  <p>Now, when deploying the application I get:</p>  <pre><code>Unsatisfied dependencies for type BookDAO with qualifiers @Default </code></pre>  <p>since I need to make CDI aware of it; but how? I tried various combinations of <code>@Named</code>, <code>@Default</code>, <code>@Model</code>, <code>@Singleton</code>, <code>@Stateless</code> and many resources such as questions and blog articles have they own interpretation of them.</p>  <p>What are the correct, plain CDI annotation to use to make this injection work in Jersey/Glassfish?</p>