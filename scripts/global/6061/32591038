<p>I'm building an application on Glassfish 4.1. The application is a Rest API. For the client part, I have created a java JFrame class with a number of classes underlying to use the Rest API using Jaxb. Lots to do still but that's off topic.</p>  <p>I'm using Netbeans for the development. For testing my JFrame class, I simply run it from out of Netbeans (Select class, menu Run > Run File). I want to take it a step further though and deliver the client application by means of java webstart. I use other apps which also do this and I think it is a neat way to deliver your java gui to a client (alternatives welcome?). Maybe I'll go to a browser based solution later but that's not a goal in the near future.</p>  <p>Now the webstart. I have tried 2 methods:</p>  <ol> <li>following the java tutorials: <a href="https://docs.oracle.com/javase/tutorial/deployment/webstart/index.html" rel="nofollow">https://docs.oracle.com/javase/tutorial/deployment/webstart/index.html</a></li> </ol>  <p>Within the project of my Rest API, I created an index.html file containing the following line:</p>  <pre><code>&lt;script&gt;         deployJava.launchWebStartApplication("launch.jnlp") &lt;/script&gt; </code></pre>  <p>Then the launch.jnlp:</p>  <pre><code>&lt;?xml version="1.0" encoding="UTF-8" standalone="no"?&gt; &lt;jnlp codebase="http://&lt;hostname&gt;:8080/" href="launch.jnlp" spec="1.0+"&gt;     &lt;information&gt;         &lt;title&gt;ClientTool&lt;/title&gt;         &lt;vendor&gt;Bla&lt;/vendor&gt;         &lt;homepage href=""/&gt;         &lt;description&gt;Bla&lt;/description&gt;         &lt;description kind="short"&gt;Bla&lt;/description&gt;     &lt;icon href="bla.png" kind="default"/&gt; &lt;offline-allowed/&gt; &lt;/information&gt;     &lt;update check="background"/&gt;     &lt;security&gt; &lt;all-permissions/&gt; &lt;/security&gt;     &lt;resources&gt;         &lt;j2se version="1.7+"/&gt;         &lt;jar href="ClientTool.jar" main="true"/&gt;     &lt;/resources&gt;     &lt;application-desc main-class="gui.ClientFrame"&gt;     &lt;/application-desc&gt; &lt;/jnlp&gt; </code></pre>  <p>I have deployed this, the index.html opens and starts the launch.jnlp. So far so good, but not really:</p>  <pre><code>com.sun.deploy.net.FailedDownloadException: Unable to load resource: http://&lt;hostname&gt;:8080/ClientTool.jar     at com.sun.deploy.net.DownloadEngine.actionDownload(Unknown Source)     at com.sun.deploy.net.DownloadEngine.downloadResource(Unknown Source)     at com.sun.deploy.cache.ResourceProviderImpl.getResource(Unknown Source)     at com.sun.deploy.cache.ResourceProviderImpl.getResource(Unknown Source)     at com.sun.javaws.LaunchDownload$DownloadTask.call(Unknown Source)     at java.util.concurrent.FutureTask.run(Unknown Source)     at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)     at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)     at java.lang.Thread.run(Unknown Source) </code></pre>  <p>Makes sense because I don't have a Jar file explicitly created. I obviously need to do this, but how? Must I create a seperate project in NetBeans to create the JAR? And where to put it exactly on the glassfish host?</p>  <ol start="2"> <li>by creating a new project in Netbeans, type Enterprise application client. </li> </ol>  <p>This works really well, You get a webstart out of the box, deploy it on glassfish and you're done. Well not really, because since Java 7 21, security has been enhanced and the way Glassfish creates the webstart config, it does not work.</p>  <p>See following threads for this issue. It is a reported bug but nog handled since months. And the alternative to use a lower version than Java 7 21 is simply not ok imo. Version 7 cannot even be downloaded anymore.</p>  <p><a href="http://stackoverflow.com/questions/26307580/signed-java-web-start-application-with-glassfish-4-1-and-java7">Signed Java web start application with Glassfish 4.1 and Java7</a> <a href="https://java.net/jira/browse/GLASSFISH-21305" rel="nofollow">https://java.net/jira/browse/GLASSFISH-21305</a></p>  <p>Still investigating a bit further on what is going wrong exactly, the following trace was what I found:</p>  <pre><code>java.lang.SecurityException: JAR manifest codebase mismatch for http://&lt;hostname&gt;:8080/___JWSappclient/___app/ClientGUI/ClientGUIClient.jar     at com.sun.deploy.security.DeployManifestChecker.verify(Unknown Source)     at com.sun.deploy.security.DeployManifestChecker.verify(Unknown Source)     at com.sun.javaws.security.AppPolicy.grantUnrestrictedAccess(Unknown Source)     at com.sun.javaws.security.JNLPSignedResourcesHelper.checkSignedResourcesHelper(Unknown Source)     at com.sun.javaws.security.JNLPSignedResourcesHelper.checkSignedResources(Unknown Source)     at com.sun.javaws.Launcher.prepareResources(Unknown Source)     at com.sun.javaws.Launcher.prepareAllResources(Unknown Source)     at com.sun.javaws.Launcher.prepareToLaunch(Unknown Source)     at com.sun.javaws.Launcher.prepareToLaunch(Unknown Source)     at com.sun.javaws.Launcher.launch(Unknown Source)     at com.sun.javaws.Main.launchApp(Unknown Source)     at com.sun.javaws.Main.continueInSecureThread(Unknown Source)     at com.sun.javaws.Main.access$000(Unknown Source)     at com.sun.javaws.Main$1.run(Unknown Source)     at java.lang.Thread.run(Unknown Source) </code></pre>  <p>So apparently glassfish is doing something wrong with the codebase config.</p>  <p>Any thoughts please on how to get Glassfish and Java webstart to work?</p>  <p>Sapphron</p>