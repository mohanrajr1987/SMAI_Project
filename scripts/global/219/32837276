<p>I want to generate JWT using JavaScript on HTML page.</p>  <p>I looked at Online JWT service <a href="http://kjur.github.io/jsrsasign/tool_jwt.html" rel="nofollow">Click Here</a>, but can't get proper idea.</p>  <p>So is there any solution to generate JWT using JavaScript in HTML page.</p>  <p>I've encode and decode method in c# code. but i want to encode parameter from java script and will decode in c# code.</p>  <p>My c# Code look like:</p>  <pre><code> public static string Encode(object payload, byte[] key, JwtHashAlgorithm algorithm)         {             var segments = new List&lt;string&gt;();             var header = new { typ = "JWT", alg = algorithm.ToString() };              byte[] headerBytes = Encoding.UTF8.GetBytes(jsonSerializer.Serialize(header));             byte[] payloadBytes = Encoding.UTF8.GetBytes(jsonSerializer.Serialize(payload));              segments.Add(Base64UrlEncode(headerBytes));             segments.Add(Base64UrlEncode(payloadBytes));              var stringToSign = string.Join(".", segments.ToArray());              var bytesToSign = Encoding.UTF8.GetBytes(stringToSign);              byte[] signature = HashAlgorithms[algorithm](key, bytesToSign);             segments.Add(Base64UrlEncode(signature));              return string.Join(".", segments.ToArray());         }           public static string Decode(string token, byte[] key, bool verify = true)         {             var parts = token.Split('.');             var header = parts[0];             var payload = parts[1];             byte[] crypto = Base64UrlDecode(parts[2]);              var headerJson = Encoding.UTF8.GetString(Base64UrlDecode(header));             var headerData = jsonSerializer.Deserialize&lt;Dictionary&lt;string, object&gt;&gt;(headerJson);             var payloadJson = Encoding.UTF8.GetString(Base64UrlDecode(payload));              if (verify)             {                 var bytesToSign = Encoding.UTF8.GetBytes(string.Concat(header, ".", payload));                 var keyBytes = key;                 var algorithm = (string)headerData["alg"];                  var signature = HashAlgorithms[GetHashAlgorithm(algorithm)](keyBytes, bytesToSign);                 var decodedCrypto = Convert.ToBase64String(crypto);                 var decodedSignature = Convert.ToBase64String(signature);                  if (decodedCrypto != decodedSignature)                 {                     throw new SignatureVerificationException(string.Format("Invalid signature. Expected {0} got {1}", decodedCrypto, decodedSignature));                 }             }              return payloadJson;         } </code></pre>  <p>Your answer will appreciable. </p>  <p>Thanks,</p>  <p>Hardik</p>