<p>I have the python code encryption by AES. I've already made compatible it <a href="http://stackoverflow.com/questions/29013414/encrypt-and-decrypt-by-aes-algorithm-in-both-python-and-android">with android</a>.  I googled but i couldn't fine the same solution in IOS xcode. The big problem is to deal with options like padding, hashing key, iv size and MODE_CBC. Do anyone can help me?</p>  <pre><code>import base64 import hashlib from Crypto import Random from Crypto.Cipher import AES   class AESCipher:      def __init__(self, key):         self.bs = 16         self.key = hashlib.sha256(key.encode()).digest()      def encrypt(self, message):         message = self._pad(message)         iv = Random.new().read(AES.block_size)         cipher = AES.new(self.key, AES.MODE_CBC, iv)         return base64.b64encode(iv + cipher.encrypt(message)).decode('utf-8')      def decrypt(self, enc):         enc = base64.b64decode(enc)         iv = enc[:AES.block_size]         cipher = AES.new(self.key, AES.MODE_CBC, iv)         return self._unpad(cipher.decrypt(enc[AES.block_size:])).decode('utf-8')      def _pad(self, s):         return s + (self.bs - len(s) % self.bs) * chr(self.bs - len(s) % self.bs)      @staticmethod     def _unpad(s):         return s[:-ord(s[len(s)-1:])]    t = AESCipher('this is my key') enc = t.encrypt('Hello World') print(enc.decode('utf-8'))    t2 = AESCipher('this is my key') print(t2.decrypt(enc)) </code></pre>