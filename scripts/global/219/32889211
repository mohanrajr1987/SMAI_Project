<p>I am working on a Spring-MVC application in which I am planning to use Jasypt so we can encrypt some sensitive text-fields. These fields are entered by user manually, and the reason to choose Jasypt was because it works transparently with Hibernate, which we are using. </p>  <p>Now, the situation is that there is already data in those text-fields which is plain. If I were to use the annotation and mark the field as to be encrypted, then the already existing data in the text-field will be useless as Jasypt will try to decrypt it and fail or give some garbled data. </p>  <p>Is there a way in Jasypt in which I can manually encrypt the data and then save it, because I have code to retrieve all the text-field and I can easily iterate through them and encrypt them as necessary. If yes, can anyone point me to how I can do it. </p>  <p>Currently I only have the annotation added in my code in this fashion :</p>  <pre><code>@Entity @Table(name = "groupnotes") public class GroupNotes {      @Id     @Column(name = "mnoteid")     @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "mnote_gen")     @SequenceGenerator(name = "mnote_gen", sequenceName = "mnote_seq")     private int mnoticesid;    @Column(name = "mnotetext")     @Type(type="encryptedString")     private String mnotetext;      @Column(name = "mnoteheadline")     @Type(type="encryptedString")     private String mnotetag; </code></pre>