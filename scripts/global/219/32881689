<h1>Original Question</h1>  <p>I have a properties file located in Tomcat and a properties file for testing located in src/test/resources.</p>  <p>At the moment I have the following setup. My properties files are loaded in my XML files <strong>config.xml</strong></p>  <pre><code>&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;!-- Repository and Service layers --&gt; &lt;beans xmlns="http://www.springframework.org/schema/beans"     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"     xmlns:cache="http://www.springframework.org/schema/cache"     xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"     xsi:schemaLocation="     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd     http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd"&gt;      &lt;!-- ========================= RESOURCE DEFINITIONS ========================= --&gt;      &lt;context:component-scan base-package="be.omniatravel.service" /&gt;     &lt;context:property-placeholder          location="file:${catalina.base}/conf/omniatravel.properties"         ignore-unresolvable="true" /&gt;       &lt;tx:annotation-driven /&gt;  &lt;/beans&gt; </code></pre>  <p><strong>test-config.xml</strong></p>  <pre><code>&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;!-- Repository and Service layers --&gt; &lt;beans xmlns="http://www.springframework.org/schema/beans"     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"     xmlns:cache="http://www.springframework.org/schema/cache"     xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"     xsi:schemaLocation="     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd     http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd"&gt;      &lt;!-- ========================= RESOURCE DEFINITIONS ========================= --&gt;      &lt;context:component-scan base-package="be.omniatravel.service" /&gt;     &lt;context:property-placeholder          location="classpath:omniatravel_test.properties"         ignore-unresolvable="true" /&gt;       &lt;tx:annotation-driven /&gt;  &lt;/beans&gt; </code></pre>  <p>And I am able to access these values by doing placing this in my Java files</p>  <pre><code>public class SunnycarsClient extends WebServiceGatewaySupport {      @Value("${sunnycars.serviceUri}")     private String uri; // provided by the webservice      @Value("${sunnycars.operatingKey}")     private String key; // provide by the webservice      @Value("${sunnycars.passphrase}")     private String passphrase; // provided by the webservice  } </code></pre>  <p>At the moment the operatingKey and passphrase are stored in these properties as plane text. I want to store them as an encrypted value to minimize the risk and still be able to access in the way I do now.</p>  <h1>Update 1</h1>  <p>So what i did now is replace the content of config.xml to</p>  <pre><code>&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;!-- Repository and Service layers --&gt; &lt;beans xmlns="http://www.springframework.org/schema/beans"     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"     xmlns:cache="http://www.springframework.org/schema/cache"     xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"     xsi:schemaLocation="     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd     http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd"&gt;      &lt;!-- ========================= RESOURCE DEFINITIONS ========================= --&gt;      &lt;context:component-scan base-package="be.omniatravel.service" /&gt;      &lt;!-- bean definitions --&gt;      &lt;bean         class="org.jasypt.spring.properties.EncryptablePropertyPlaceholderConfigurer"&gt;         &lt;constructor-arg&gt;             &lt;bean class="org.jasypt.encryption.pbe.StandardPBEStringEncryptor"&gt;                 &lt;property name="config"&gt;                     &lt;bean class="org.jasypt.encryption.pbe.config.EnvironmentStringPBEConfig"&gt;                         &lt;property name="algorithm" value="PBEWithMD5AndDES" /&gt;                         &lt;property name="passwordEnvName" value="APP_ENCRYPTION_PASSWORD" /&gt;                     &lt;/bean&gt;                 &lt;/property&gt;             &lt;/bean&gt;         &lt;/constructor-arg&gt;         &lt;property name="locations"&gt;             &lt;list&gt;                 &lt;value&gt;file:${catalina.base}/conf/omniatravel.properties&lt;/value&gt;             &lt;/list&gt;         &lt;/property&gt;     &lt;/bean&gt;      &lt;bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"         destroy-method="close"&gt;         &lt;property name="sunnycarsMarshallerUri"&gt;             &lt;value&gt;${sunnycars.marshallerUri}&lt;/value&gt;         &lt;/property&gt;         &lt;property name="sunnycarsServiceUri"&gt;             &lt;value&gt;${sunnycars.serviceUri}&lt;/value&gt;         &lt;/property&gt;         &lt;property name="sunnycarsContextPath"&gt;             &lt;value&gt;${sunnycars.contextPath}&lt;/value&gt;         &lt;/property&gt;         &lt;property name="sunnycarsOperatingKey"&gt;             &lt;value&gt;${sunnycars.operatingKey}&lt;/value&gt;         &lt;/property&gt;         &lt;property name="sunnycarsPassphrase"&gt;             &lt;value&gt;${sunnycars.passphrase}&lt;/value&gt;         &lt;/property&gt;     &lt;/bean&gt;      &lt;tx:annotation-driven /&gt;  &lt;/beans&gt; </code></pre>  <p>But it's still not clear to me how I should access these from my Java code.</p>  <p>Also in the propeties files I should replace  <strong>sunnycars.operatingKey = THE_KEY</strong> with <strong>sunnycars.operatingKey = enc(ENCRYPTED_KEY)</strong>, but how do you get the ENCRYPTED_KEY value?</p>