<p>I'm trying to encrypt and decrypt text using <code>TripleDESCryptoServiceProvider</code>.</p>  <p>My requirement is for same plaintext, ciphertext should not be same, for this I have generated different <a href="https://msdn.microsoft.com/en-us/library/system.security.cryptography.symmetricalgorithm.iv(v=vs.110).aspx" rel="nofollow">vector</a> each time.</p>  <p>This is code to Encrypt and Decrypt text.</p>  <pre><code>public string EncryptString(string PlainText)         {             GenerateIV();             GenerateKey();             if (PlainText == null || PlainText.Length &lt;= 0)             {                 throw new ArgumentNullException("Invalid Plaintext.");             }              if (Key == null || Key.Length &lt;= 0)             {                 throw new ArgumentNullException("Key Can Not Be Null Or Empty.");             }              if (IV == null || IV.Length &lt;= 0)             {                 throw new ArgumentNullException("Vector Can Not Be Null Or Empty.");             }              byte[] encryptedText;              using (TripleDESCryptoServiceProvider tdsObj = new TripleDESCryptoServiceProvider())             {                 if (!isKeyStrengthChecked)                 {                     bool isWeekKey = TripleDESCryptoServiceProvider.IsWeakKey(Key);                     if (isWeekKey)                     {                         throw new Exception("Weak Key.");                     }                     else                     {                         isKeyStrengthChecked = true;                     }                 }                 tdsObj.Key = Key;                 tdsObj.IV = IV;                 tdsObj.Mode = CipherMode.CBC;                 tdsObj.Padding = PaddingMode.PKCS7;                 ICryptoTransform encryptor = tdsObj.CreateEncryptor(tdsObj.Key, tdsObj.IV);                 using (MemoryStream msEncrypt = new MemoryStream())                 {                     using (CryptoStream csEncrypt = new CryptoStream(msEncrypt, encryptor, CryptoStreamMode.Write))                     {                         using (StreamWriter srEncrypt = new StreamWriter(csEncrypt))                         {                             srEncrypt.Write(PlainText);                         }                         encryptedText = msEncrypt.ToArray();                     }                 }             }             return Convert.ToBase64String(encryptedText);         }          public string DecryptString(string cipherText)         {             GenerateIV();             GenerateKey();             if (cipherText == null || cipherText.Length &lt;= 0)             {                 throw new ArgumentNullException("Invalid CipherText.");             }              if (Key == null || Key.Length &lt;= 0)             {                 throw new ArgumentNullException("Key Can Not Be Null Or Empty.");             }              if (IV == null || IV.Length &lt;= 0)             {                 throw new ArgumentNullException("Vector Can Not Be Null Or Empty.");             }              byte[] cipherBytes = Convert.FromBase64String(cipherText);             string PlainText = null;             using (TripleDESCryptoServiceProvider tdsDecrypt = new TripleDESCryptoServiceProvider())             {                 tdsDecrypt.Key = Key;                 tdsDecrypt.IV = IV;                 tdsDecrypt.Mode = CipherMode.CBC;                 tdsDecrypt.Padding = PaddingMode.PKCS7;                 ICryptoTransform decrytor = tdsDecrypt.CreateDecryptor(Key, IV);                 using (MemoryStream msDecrypt = new MemoryStream(cipherBytes))                 {                     using (CryptoStream csDecrypt = new CryptoStream(msDecrypt, decrytor, CryptoStreamMode.Read))                     {                         using (StreamReader srDecrypt = new StreamReader(csDecrypt))                         {                             PlainText = srDecrypt.ReadToEnd();                         }                     }                 }             }             return PlainText;         } </code></pre>  <p>My complete Code Is Here <strong><a href="https://dotnetfiddle.net/2hek29" rel="nofollow">.Net Fiddle</a></strong></p>  <p>But when I decrypt Text, I'm not getting the same plain text. What's wrong I have Done. </p>