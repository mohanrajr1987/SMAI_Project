<p>I know this question was asked before. but i really don't know how to do this.</p>  <p>I created a j2me app and a webservice in a tomcat server, it works perfect on HTTP, <strong>Now</strong> i need to connect to HTTPS/TLS.</p>  <p><strong>To do that i followed this steps:</strong></p>  <ol> <li>using KeyTool i generate a .keystore file in the serverâ€“side. </li> <li>i run HTTPS correctly in tomcat (in web browser).</li> <li>i took the .keystore and i import it to my WTK keys stores. by using Mekeytool.</li> </ol>  <p>When i try to connect to my <a href="https://server-ip/webservice" rel="nofollow">https://server-ip/webservice</a>, using this snippet of code:</p>  <pre><code>public class HttpsMIDlet extends MIDlet implements CommandListener, Runnable { private Display mDisplay; private Form mForm;  public void startApp() {     mDisplay = Display.getDisplay(this);      if (mForm == null) {         mForm = new Form("HttpsMIDlet");          mForm.addCommand(new Command("Exit", Command.EXIT, 0));         mForm.addCommand(new Command("Send", Command.SCREEN, 0));         mForm.setCommandListener(this);     }      mDisplay.setCurrent(mForm); }  public void pauseApp() { }  public void destroyApp(boolean unconditional) { }  public void commandAction(Command c, Displayable s) {     if (c.getCommandType() == Command.EXIT)         notifyDestroyed();     else {         Form waitForm = new Form("Connecting...");         mDisplay.setCurrent(waitForm);         Thread t = new Thread(this);         t.start();     } }  public void run() {     String url = "https://server-ip/webserive";      try {         // Query the server and retrieve the response.         HttpsConnection hc = (HttpsConnection) Connector.open(url);          SecurityInfo si = hc.getSecurityInfo();         Certificate c = si.getServerCertificate();         String subject = c.getSubject();         System.out.println();          String s = "Server certificate subject: \n" + subject;         Alert a = new Alert("Result", s, null, null);         a.setTimeout(Alert.FOREVER);         mDisplay.setCurrent(a, mForm);          hc.close();     } catch (IOException ioe) {         Alert a = new Alert("Exception", ioe.toString(), null, null);         System.out.println(ioe.toString());         a.setTimeout(Alert.FOREVER);         mDisplay.setCurrent(a, mForm);     } } </code></pre>  <p><strong>It throws this Exception:</strong></p>  <pre><code>java.io.IOException: Bad record type (21) or version (3.3) at com.sun.midp.ssl.Record.rdRec(+284) at com.sun.midp.ssl.Record.rdRec(+5) at com.sun.midp.ssl.Handshake.getNextMsg(+17) at com.sun.midp.ssl.Handshake.rcvSrvrHello(+5) at com.sun.midp.ssl.Handshake.doHandShake(+29) at com.sun.midp.ssl.SSLStreamConnection.&lt;init&gt;(+173) at com.sun.midp.ssl.SSLStreamConnection.&lt;init&gt;(+12) at com.sun.midp.io.j2me.https.Protocol.connect(+214) at com.sun.midp.io.j2me.http.Protocol.streamConnect(+57) at com.sun.midp.io.j2me.http.Protocol.startRequest(+12) at com.sun.midp.io.j2me.http.Protocol.sendRequest(+38) at com.sun.midp.io.j2me.http.Protocol.sendRequest(+6) at com.sun.midp.io.j2me.http.Protocol.openInputStream(+9) </code></pre>  <p>Some help please. thank you.</p>