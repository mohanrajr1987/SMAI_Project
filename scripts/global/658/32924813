<p>I'm trying to implement a simple file upload using akka http. My attempt looks as follows:</p>  <pre><code>    import akka.actor.ActorSystem     import akka.event.{LoggingAdapter, Logging}     import akka.http.scaladsl.Http     import akka.http.scaladsl.model.{HttpResponse, HttpRequest}     import akka.http.scaladsl.model.StatusCodes._     import akka.http.scaladsl.server.Directives._     import akka.stream.{ActorMaterializer, Materializer}     import com.typesafe.config.Config     import com.typesafe.config.ConfigFactory     import scala.concurrent.{ExecutionContextExecutor, Future}     import akka.http.scaladsl.model.StatusCodes     import akka.http.scaladsl.model.HttpEntity     import java.io._     import akka.stream.io._      object UploadTest extends App {       implicit val system = ActorSystem()       implicit val executor = system.dispatcher       implicit val materializer = ActorMaterializer()        val config = ConfigFactory.load()       val logger = Logging(system, getClass)        val routes = {         pathSingleSlash {           (post &amp; extractRequest) {              request =&gt; {               val source = request.entity.dataBytes               val outFile = new File("/tmp/outfile.dat")               val sink = SynchronousFileSink.create(outFile)               source.to(sink).run()               complete(HttpResponse(status = StatusCodes.OK))             }           }         }       }        Http().bindAndHandle(routes, config.getString("http.interface"), config.getInt("http.port"))      } </code></pre>  <p>There are several issues with this code:</p>  <ol> <li>Files larger than the configured entity size cannot be uploaded: <code>Request Content-Length 24090745 exceeds the configured limit of 8388608</code></li> <li>Executing two uploads in a row result in a <code>dead letters encountered.</code> exception.</li> </ol>  <p>What is the best way to overcome the size limitations and how can I properly close the file such that a subsequent upload will overwrite the existing file (ignoring concurrent uploads for the moment)?</p>