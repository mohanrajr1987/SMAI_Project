<p>I have a simple Dockerfile as follows</p>  <pre><code>FROM ubuntu:latest  ADD crontab /etc/cron.d/test-cron  RUN chmod a+x /etc/cron.d/test-cron RUN touch /var/log/cron.log  CMD cron &amp;&amp; tail -f /var/log/cron.log </code></pre>  <p>and the content of <code>crontab</code> file is as simple as</p>  <pre><code>* * * * * root echo "Hello world" &gt;&gt; /var/log/cron.log 2&gt;&amp;1 # empty line </code></pre>  <p>When I run this on my local OS X machine (with docker-machine running), it works fine ("Hello world" is printed to log file every minute). However, when I try to run it on an Ubuntu machine, the cron job does not run (empty log file). </p>  <p>Here's the command I use to run the container</p>  <pre><code>docker build -t crontest . docker run --name cron crontest </code></pre>  <p>I am not sure why this would be the case. I wonder if something is wrong with the Ubuntu box that I have (wrong time setting?). I have tried to restart that machine to no effect. I currently do have other docker containers running on the Ubuntu box and they're running fine.</p>  <p>Any suggestion on what I could do to debug/ fix this would be hugely appreciated.</p>  <p>EDIT:</p>  <p>After going inside the container (<code>docker exec -it cron /bin/bash</code>), I can verify that cron is running there:</p>  <pre><code>root@a2ad451af8d9:/# ps -ef | grep cron root         1     0  0 20:15 ?        00:00:00 /bin/sh -c cron &amp;&amp; tail -f /var/log/cron.log root         6     1  0 20:15 ?        00:00:00 cron root         7     1  0 20:15 ?        00:00:00 tail -f /var/log/cron.log root        25    11  0 20:21 ?        00:00:00 grep --color=auto cron </code></pre>