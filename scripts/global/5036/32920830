<p>Consider following program:</p>  <pre><code>#include &lt;iostream&gt; struct Test {     int&amp; ref1;     int&amp; ref2;     int&amp; ref3; }; int main() {     std::cout&lt;&lt;sizeof(Test)&lt;&lt;'\n'; } </code></pre>  <p>I know that C++ compiler can optimize the reference variables entirely so that they won't take any space in memory at all. </p>  <p>I tested a above demo program to see the output.  But when I compile &amp; run on g++ 4.8.1 it gives me output 12.  It looks like compiler isn't optimizing the reference variables. I was expecting size of the Test struct to be 1.  I've also used <code>-Os</code> command line option but it still gives me output 12. I have also tried this program on MSVS 2010  compiled with <code>/Ox</code> command line option but it looks like Microsoft compiler isn't performing any optimization at all.</p>  <p>The three reference variables are unused &amp; they aren't associated with any other variable. Then why compilers aren't optimizing them?</p>