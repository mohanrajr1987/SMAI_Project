<p>So I have this function:</p>  <pre><code>addDataToList(..., QVariant metadata) { } </code></pre>  <p>The relevant <code>QVariant</code> constructor in this case is: <code>QVariant(const QString &amp; val)</code>.</p>  <p>Now I have a function <code>foo()</code>, from where I call <code>addDataToList()</code> function. How do I pass a valid value to the <code>QVariant</code> object?</p>  <p>If I have something like this:</p>  <pre><code>void foo() {     QString str = "String";     addDataToList(..., QVariant(str)); } </code></pre>  <p>It will not work because <code>str</code> object will go out of scope, leading into undefined behavior.</p>  <p>But if I create the string on heap, something like this:</p>  <pre><code>void foo() {     QString *str = new QString("String");     addDataToList(..., QVariant(*str)); } </code></pre>  <p>It will work, but there will be some memory leaks (because <code>QVariant</code> doesn't take ownership of the passed pointer).</p>  <p>How do I solve this situation?</p>  <p>EDIT: This is the actual implementation of <code>addDataToList(...)</code>:</p>  <pre><code>void TPMSvalidator::addDataToList(const QString &amp;data, bool useMetadata, MessageTypes type, QVariant metadata) {     QString text;     QIcon okIcon(QDir::currentPath() + "\\Resources\\Icons\\ok3.png");     QIcon notOkIcon(QDir::currentPath() + "\\Resources\\Icons\\notok.png");     QIcon noticeIcon(QDir::currentPath() + "\\Resources\\Icons\\warning2.png");      if (data != QString()) {         QListWidgetItem *data_w = new QListWidgetItem;          if (type == MessageTypes::notification) {             data_w-&gt;setBackgroundColor(QColor(Qt::GlobalColor::gray));             data_w-&gt;setTextColor(QColor(Qt::GlobalColor::black));             data_w-&gt;setIcon(noticeIcon);             text.append("NOTICE: ");         }         else if (type == MessageTypes::telegramOkInfo) {             data_w-&gt;setBackgroundColor(QColor(Qt::GlobalColor::gray));             data_w-&gt;setTextColor(QColor(Qt::GlobalColor::black));             data_w-&gt;setIcon(okIcon);             text.append("INFO: ");         }         else if (type == MessageTypes::telegramNotOkInfo) {             data_w-&gt;setBackgroundColor(QColor(Qt::GlobalColor::gray));             data_w-&gt;setTextColor(QColor(Qt::GlobalColor::red));             data_w-&gt;setIcon(notOkIcon);             text.append("INFO: ");         }         else if (type == MessageTypes::warning) {             data_w-&gt;setBackgroundColor(QColor(Qt::GlobalColor::darkYellow));             data_w-&gt;setTextColor(QColor(Qt::GlobalColor::black));             text.append("WARNING: ");         }         else {             data_w-&gt;setBackgroundColor(QColor(Qt::GlobalColor::darkRed).light(130));             data_w-&gt;setTextColor(QColor(Qt::GlobalColor::white));             data_w-&gt;setIcon(notOkIcon);             text.append("ERROR: ");         }          text.append(data);         data_w-&gt;setText(text);         data_w-&gt;setFont(QFont("Helvetica"));          if (useMetadata) {             data_w-&gt;setData(Qt::UserRole, metadata);         }          ui.listData-&gt;addItem(data_w);          if (ui.autoScrollCheckBox-&gt;isChecked()) {             ui.listData-&gt;scrollToBottom();         }     } } </code></pre>