<p>Hi there I've got a fast question ( closed-ended question ) I faced while studying boxing and unboxing concept in C#:</p>  <p>The variable of "object" type, which is a reference type variable, can take   a copy of value type variable or of a reference type variable.</p>  <p>Let's consider an object type variable declared in the stack.</p>  <p>Firstly, it's taking a copy of a value type variable:</p>  <pre><code>int a; object b = a; </code></pre>  <p>And secondly it's taking a copy of a reference type variable:</p>  <pre><code>string c; object d = c; </code></pre>  <p>Now the question here is: Compared to the first object-type variable ( object b ) which is represented in the memory by a reference in the stack with the data of int-type in the heap, the second object-type variable ( object d ) would it have a reference in the stack to  the data of string text in the heap or rather it would have a reference in the stack to another reference in the heap to the data of string text?</p>  <p>In other words does:</p>  <pre><code>string X = "ABC"; </code></pre>  <p>equals:</p>  <pre><code>object Y = "ABC"; </code></pre>  <p>or either:</p>  <pre><code>object Z = X; </code></pre>  <p>or not</p>  <p>.........</p>  <p>Thank you guys in advance.</p>