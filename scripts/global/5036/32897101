<p>I have this code:</p>  <pre><code>#include &lt;cstdio&gt; #include &lt;string&gt;  using namespace std;  const string &amp; func() {     static string staticString = "one";     printf("%s\n", staticString.c_str());     return staticString; }  int main( int argc, char ** argv ) {     string firstString = func();     firstString = "two";     printf("%s\n", firstString.c_str());     func();     return 0; } </code></pre>  <p>The output is</p>  <pre><code>one two one </code></pre>  <p>The part that puzzles me is that if I remove <code>const</code> from <code>func()</code> the output is exactly the same. I expected it to be:</p>  <pre><code>one two two </code></pre>  <p>If I'm getting a string <em>reference</em> from <code>func()</code> (when it doesn't have the <code>const</code> keyword), why is it being reset when I call <code>func()</code> again?</p>