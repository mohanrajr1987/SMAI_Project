<p>After failing to find a way to hide ONLY events on calendar, I was thinking about deleting all events once the user clicks the "month" button. How would I implement that?`</p>  <pre><code>$scope.uiConfig = {     calendar: {         height: 450,         editable: false,         selectable: true,         header: {             left: 'title',             center: '',             right: 'month today prev,next'         },         eventClick: $scope.alertOnEventClick,         eventDrop: $scope.alertOnDrop,         eventResize: $scope.alertOnResize,         eventRender: $scope.eventRender,         dayClick: $scope.alertOnDateClick,         timeClick: $scope.alertTest     } }; </code></pre>  <p>Here is the function of the month button, I THINK. This is located in fullcalendar.js </p>  <pre><code>var MonthView = BasicView.extend({ // Produces information about what range to display computeRange: function(date) {     var range = BasicView.prototype.computeRange.call(this, date); // get value from super-method     var rowCnt;      // ensure 6 weeks     if (this.isFixedWeeks()) {         rowCnt = Math.ceil(range.end.diff(range.start, 'weeks', true)); // could be partial weeks due to hiddenDays         range.end.add(6 - rowCnt, 'weeks');     }      return range; },   // Overrides the default BasicView behavior to have special multi-week auto-height logic setGridHeight: function(height, isAuto) {      isAuto = isAuto || this.opt('weekMode') === 'variable'; // LEGACY: weekMode is deprecated      // if auto, make the height of each row the height that it would be if there were 6 weeks     if (isAuto) {         height *= this.rowCnt / 6;     }      distributeHeight(this.dayGrid.rowEls, height, !isAuto); // if auto, don't compensate for height-hogging rows },   isFixedWeeks: function() {     var weekMode = this.opt('weekMode'); // LEGACY: weekMode is deprecated     if (weekMode) {         return weekMode === 'fixed'; // if any other type of weekMode, assume NOT fixed     }      return this.opt('fixedWeekCount'); }});` </code></pre>