<p>I'm writing an application that shows notifications trough baloontips over notifyicon. There are two kinds of notifications I want to display - normal baloontip and clickable baloontip. I want clickable baloontips to open some url in web browser. The problem is that events stacks over baloontip. I'm not sure if this explanation says anything, so here's an example:</p>  <p>code:</p>  <pre><code>NotifyIcon ni = new NotifyIcon();  void showClickableNotification(string title, string content, string url) { ni.BaloonTipClicked += new EventHandler((sender, e) =&gt; ni_BalloonTipClicked(sender, e, url)); ni.ShowBaloonTip(1, title, content, ToolTipIcon.Info); }  void ni_BalooTipClicked(object sender, EventArgs e, string url) { Process.Start(url); } </code></pre>  <p>every use of <code>showClickableNotification</code> will assign one more <code>url</code> to <code>BallonTipClicked</code> event</p>  <p>I want to clear event after notification will hide, to prevent opening multiple tabs unassociated with current notification.</p>  <p>Also, when normal notification is shown after a clickable one it's click opens all the stacked urls as well.</p>  <p>I tried to assign an empty function for <code>ni.BaloonTipClicked += emptyFunction</code> this, but <code>+=</code>  operator just adds another event to the pool instead of overwriting it. <code>-=</code> does not work since I'm adding <code>new</code> event every time. I guess I could do some global variable that holds current <code>url</code> and avoid assigning <code>new</code> everytime (<code>-=</code> would work then), but it looks like cheap workaround. Is there any (correct?) way to do it? </p>