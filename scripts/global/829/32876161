<p>Something strange happens in Chrome for desktop and android (seems to be webkit related):</p>  <ul> <li>If you add a <code>webkitTransitionEnd</code> event listener to an element it fires correctly when a CSS animation ends.</li> <li>If you then add another listener to the same element but listening to the <code>transitionend</code> event it will be the only one triggered on CSS animation end. The first one stops being fired.</li> </ul>  <p>You would expect to see both handlers executed but somehow the first one gets canceled or the <code>webkitTransitionEnd</code> event does not get dispatched anymore.</p>  <p>I've set up a demo here: <a href="http://jsfiddle.net/vbachev/kfrh5uba/" rel="nofollow">http://jsfiddle.net/vbachev/kfrh5uba/</a></p>  <p>Since Chrome uses both the prefixed and unprefixed event names, several versions ago it used to fire these event handlers twice (there are many SO threads about this). I'm guessing at some point they tried fixing it by firing only the unprefixed event.</p>  <p>The problem I'm seeing is that once I create an event listener for <code>transitionend</code> it breaks other functionality already listening for <code>webkitTransitionEnd</code>. The target element just stops emitting the prefixed event. Yes, ideally all handlers should be migrated to <code>transitionend</code> but in the meantime this browser behavior does not seem correct.</p>  <p>Is this the expected behavior? Has anyone else come across this?</p>  <p>Thank you!</p>