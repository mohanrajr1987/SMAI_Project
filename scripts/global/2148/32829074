<p>I'm having problems tracking an array initialized to an empty Type (table of varchar2) object. It's inside a loop and outputs indexes from what I think is coming from the database. I've done my research with the "as table of varchar2" and I think it just simply means a column of a table with varchar as a type.</p>  <p>From what I understood, the "invArry" declared as the type "item_val" in the "item_inv" header just basically means invArry is a varchar, since item_val is a varchar right? But I got confused when in the item_inv body, the invArry is initialized to item_val again. Was it initialized to a varchar again? Or does         the type item_val already pointing out to a column in the database? If it's the latter, I'm not sure how it got pointed to the database.</p>  <pre><code>    create or replace TYPE "item_inv" AS OBJECT     (invArry item_val,    --invArry declared as item_val     CONSTRUCTOR FUNCTION item_inv              RETURN SELF AS RESULT,     CONSTRUCTOR FUNCTION item_inv( recrd VARCHAR2 )              RETURN SELF AS RESULT,     ) FINAL; </code></pre>  <p>=========</p>  <pre><code>    create or replace TYPE BODY "item_inv" AS      CONSTRUCTOR FUNCTION item_inv              RETURN SELF AS RESULT        IS        BEGIN           invArry := item_val    --invArry initialized to item_val. Whut           RETURN;        END; </code></pre>  <p>=========</p>  <pre><code>    create or replace TYPE "item_val" AS TABLE OF VARCHAR2( 240 );     --item_val object, does this points already to the database or just an empty object </code></pre>