<p>I have a simple index.php linked to Apache server in XAMPP on Windows. I am trying to see how Google Direction Service API works with this JavaScript example and also want to play about with it for a bit.  But in order to make use of it, I need to create a server key, which i correctly added my IP address to and it generated a random key for me. But now that I have this key how do I put it into this php file so that It allows me to view the map because of course this one is just an example and gives me an Authorization error. </p>  <p>I read on Google developers page that "To specify a key in your request, include it as the value of a key parameter."  which may be the problem but how do I do that if that is my answer? The API key for this is declared right at the bottom. </p>  <pre><code>&lt;!DOCTYPE html&gt; &lt;html&gt;   &lt;head&gt;     &lt;meta name="viewport" content="initial-scale=1.0, user-scalable=no"&gt;     &lt;meta charset="utf-8"&gt;     &lt;title&gt;Directions service (complex)&lt;/title&gt;     &lt;style&gt;       html, body {         height: 100%;         margin: 0;         padding: 0;       }       #map {         height: 100%;       }       #warnings-panel {         width: 100%;         height:10%;         text-align: center;       } #floating-panel {   position: absolute;   top: 10px;   left: 25%;   z-index: 5;   background-color: #fff;   padding: 5px;   border: 1px solid #999;   text-align: center;   font-family: 'Roboto','sans-serif';   line-height: 30px;   padding-left: 10px; }      &lt;/style&gt;   &lt;/head&gt;   &lt;body&gt;     &lt;div id="floating-panel"&gt;     &lt;b&gt;Start: &lt;/b&gt;     &lt;select id="start"&gt;       &lt;option value="penn station, new york, ny"&gt;Penn Station&lt;/option&gt;       &lt;option value="grand central station, new york, ny"&gt;Grand Central Station&lt;/option&gt;       &lt;option value="625 8th Avenue, New York, NY, 10018"&gt;Port Authority Bus Terminal&lt;/option&gt;       &lt;option value="staten island ferry terminal, new york, ny"&gt;Staten Island Ferry Terminal&lt;/option&gt;       &lt;option value="101 E 125th Street, New York, NY"&gt;Harlem - 125th St Station&lt;/option&gt;     &lt;/select&gt;     &lt;b&gt;End: &lt;/b&gt;     &lt;select id="end"&gt;       &lt;option value="260 Broadway New York NY 10007"&gt;City Hall&lt;/option&gt;       &lt;option value="W 49th St &amp; 5th Ave, New York, NY 10020"&gt;Rockefeller Center&lt;/option&gt;       &lt;option value="moma, New York, NY"&gt;MOMA&lt;/option&gt;       &lt;option value="350 5th Ave, New York, NY, 10118"&gt;Empire State Building&lt;/option&gt;       &lt;option value="253 West 125th Street, New York, NY"&gt;Apollo Theater&lt;/option&gt;       &lt;option value="1 Wall St, New York, NY"&gt;Wall St&lt;/option&gt;     &lt;/select&gt;     &lt;/div&gt;     &lt;div id="map"&gt;&lt;/div&gt;     &amp;nbsp;     &lt;div id="warnings-panel"&gt;&lt;/div&gt;     &lt;script&gt; function initMap() {   var markerArray = [];    // Instantiate a directions service.   var directionsService = new google.maps.DirectionsService;    // Create a map and center it on Manhattan.   var map = new google.maps.Map(document.getElementById('map'), {     zoom: 13,     center: {lat: 40.771, lng: -73.974}   });    // Create a renderer for directions and bind it to the map.   var directionsDisplay = new google.maps.DirectionsRenderer({map: map});    // Instantiate an info window to hold step text.   var stepDisplay = new google.maps.InfoWindow;    // Display the route between the initial start and end selections.   calculateAndDisplayRoute(       directionsDisplay, directionsService, markerArray, stepDisplay, map);   // Listen to change events from the start and end lists.   var onChangeHandler = function() {     calculateAndDisplayRoute(         directionsDisplay, directionsService, markerArray, stepDisplay, map);   };   document.getElementById('start').addEventListener('change', onChangeHandler);   document.getElementById('end').addEventListener('change', onChangeHandler); }  function calculateAndDisplayRoute(directionsDisplay, directionsService,     markerArray, stepDisplay, map) {   // First, remove any existing markers from the map.   for (var i = 0; i &lt; markerArray.length; i++) {     markerArray[i].setMap(null);   }    // Retrieve the start and end locations and create a DirectionsRequest using   // WALKING directions.   directionsService.route({     origin: document.getElementById('start').value,     destination: document.getElementById('end').value,     travelMode: google.maps.TravelMode.WALKING   }, function(response, status) {     // Route the directions and pass the response to a function to create     // markers for each step.     if (status === google.maps.DirectionsStatus.OK) {       document.getElementById('warnings-panel').innerHTML =           '&lt;b&gt;' + response.routes[0].warnings + '&lt;/b&gt;';       directionsDisplay.setDirections(response);       showSteps(response, markerArray, stepDisplay, map);     } else {       window.alert('Directions request failed due to ' + status);     }   }); }  function showSteps(directionResult, markerArray, stepDisplay, map) {   // For each step, place a marker, and add the text to the marker's infowindow.   // Also attach the marker to an array so we can keep track of it and remove it   // when calculating new routes.   var myRoute = directionResult.routes[0].legs[0];   for (var i = 0; i &lt; myRoute.steps.length; i++) {     var marker = markerArray[i] = markerArray[i] || new google.maps.Marker;     marker.setMap(map);     marker.setPosition(myRoute.steps[i].start_location);     attachInstructionText(stepDisplay, marker, myRoute.steps[i].instructions);   } }  function attachInstructionText(stepDisplay, marker, text, map) {   google.maps.event.addListener(marker, 'click', function() {     // Open an info window when the marker is clicked on, containing the text     // of the step.     stepDisplay.setContent(text);     stepDisplay.open(map, marker);   }); }      &lt;/script&gt;     &lt;script src="https://maps.googleapis.com/maps/api/js?key=API_KEY&amp;signed_in=true&amp;callback=initMap"         async defer&gt;&lt;/script&gt;   &lt;/body&gt; &lt;/html&gt; </code></pre>