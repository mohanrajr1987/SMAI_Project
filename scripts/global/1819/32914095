<p>So I’m using this code to dropMarkers on my map... The function takes the to address string, from address string and the base URL of the controller where several places are stored (with name, lat, lng). It drops markers and on clicking those markers it shows an info box from which I can jump to that controller and start editing the place.</p>  <pre><code>// RouteBoxer functions function route(from, to, url) {   // Clear any previous route boxes from the map    if(debug)     clearBoxes();    // Convert the distance to box around the route from miles to km   distance = parseFloat(distance);    var request = {     origin: from,     destination: to,     travelMode: google.maps.DirectionsTravelMode.DRIVING   }    // Make the directions request   var test = directionService.route(request, function(result, status) {      if (status == google.maps.DirectionsStatus.OK) {       directionsRenderer.setDirections(result);        // Box around the overview path of the first route       var path = result.routes[0].overview_path;       var boxes = routeBoxer.box(path, distance);       if(debug)         drawBoxes(boxes);        for(key in boxes)         {           var swLat = boxes[key].getSouthWest().lat();           var swLng = boxes[key].getSouthWest().lng();           var neLat = boxes[key].getNorthEast().lat();           var neLng = boxes[key].getNorthEast().lng();            if(!isNaN(swLat) || !isNaN(swLng) || !isNaN(neLat) ||!isNaN(neLng)) {             $.ajax({               url: url,               type: 'POST',               dataType: 'json',               data: {                 swLat: swLat,                 swLng: swLng,                 neLat: neLat,                 neLng: neLng               },             })             .done(function( data ) {               dropMarkers(data);               console.log(markers.length);             })             .fail(function() {               //console.log( "error" );             })             .always(function() {               //console.log( "complete" );             });           }         }     } else {       alert("Directions query failed: " + status);     }   }); } </code></pre>  <p>The dropMarkers basically setMarkers in the map and also adds it to an array variables <code>var markers = []</code>. I want some code to execute once all markers have been dropped but strangely I’m not able to figure out how to do this. I tried putting an <code>alert(‘All markers dropped, No. of markers:’ + markers.length)</code> at the end of the for loop but it executes early before the markers have been dropped and displays 0. I even tried putting this at the last before line of the this route function, and it gave the same behaviour. The <code>console.log(markers.length)</code> however works and shows me progressively that the markers array is getting filled so I’m looking for a way to call a function when the last set of markers are dropped.</p>  <p>I read another stack overflow answer and tried this code in my init() block.</p>  <pre><code>google.maps.event.addListener(directionsRenderer, 'directions_changed',function(){    if(this.get('directions')){      alert(‘All markers dropped, No. of markers:’ + markers.length)    }   }); </code></pre>  <p>This too executes prematurely and shows 0 markers i.e. before the markers are even dropped. How to call a function after all the markers have been dropped? Thanks</p>