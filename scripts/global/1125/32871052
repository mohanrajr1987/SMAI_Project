<p>I'm newer Django-rest user. I have djangorest project with models (this is a semplified version with only one field):</p>  <pre><code>class Tour(models.Model):     tour_num = models.IntegerField(null=False, blank=False, default=0) </code></pre>  <p>and serializers:</p>  <pre><code>class TourSerializer(serializers.HyperlinkedModelSerializer):     def __init__(self, *args, **kwargs):         kwargs['partial'] = True         super(serializers.HyperlinkedModelSerializer, self).__init__(*args, **kwargs)      class Meta:         model = Tour         fields = ('url', 'id', 'tour_num')      def update(self, instance, validated_data):         instance.tour_num = validated_data.get('tour_num ', instance.tour_num ) </code></pre>  <p>In another Python project I want to add data using the PUT message, i.e.:</p>  <pre><code>PUT /Tour/1/  HTTP/1.0\r\n Content-Type: application/json\r\n Content-Length: 14\r\n\r\n{\"tour_num\":5}\r\n </code></pre>  <p>Where the JSON message is "{\"tour_num\":5}"</p>  <p>Is there a way to generate automatically the JSON message using the class inside models.py and serializers.py? Something like this:</p>  <pre><code>t = models.Tour() t.tour_num = 5 tser = serializers.TourSerializer(t) json_message = tser.data </code></pre>  <p>I tried this solution but lots of errors appear in line of import of Tour and TourSerializer classes.</p>  <p>Can some one explain me what's the errors?</p>  <p>Thanks. Rudy</p>