<p>I have a HyperlinkedModelSerializer set up with a few references to other models using the HyperlinkedRelatedField.  This works just fine:</p>  <pre><code>class LicenseSerializer(serializers.HyperlinkedModelSerializer): style = serializers.HyperlinkedRelatedField(                                         view_name='styles-detail',                                         queryset=Style.objects.all()                                        )  order = serializers.HyperlinkedRelatedField(                                         view_name='orders-detail',                                         queryset=Order.objects.all()                                        ) </code></pre>  <p>But I need to do some data transformation on some of the other fields, and so I setup <code>to_internal_value</code> </p>  <pre><code>    def to_internal_value(self, data):     return data </code></pre>  <p>At which point the HyperlinkedRelatedField no long work. I get an error back saying: </p>  <p><code>Cannot assign "'[hyperlinked identity url]'": "[Model.attribute]" must be a "[hyperlinked model]" instance.</code></p>  <p>Which, at least to me, suggests the HyperlinkedRelatedField are no longer working?</p>  <p>Here's a dump of the Serializer when it crashes:</p>  <pre><code>LicenseAppSerializer(context={'request': &lt;rest_framework.request.Request object at 0x03E9D870&gt;}, data={'price': 0, 'style': u'http://localhost:8000/api/1/styles/69/', 'years': 30, 'order': 'http://localhost:8000/api/1/orders/44/', 'qty': 80}): url = HyperlinkedIdentityField(view_name='licenseapp-detail') start = DateField(allow_null=True, required=False) end = DateField(allow_null=True, required=False) price = DecimalField(decimal_places=2, max_digits=10) years = IntegerField(allow_null=True, required=False) qty = IntegerField() order = HyperlinkedRelatedField(queryset=Order.objects.all(), view_name='order-detail') style = HyperlinkedRelatedField(queryset=Style.objects.all(), view_name='style-detail') </code></pre>  <p>What am I doing wrong here?</p>  <p>Thanks for your time!</p>