<p>I'm making a <code>JSON</code> from my Database made with <code>LINQ to SQL</code>. I've set up <code>Serialization Mode Unidirectional</code> (so I can serialize data), and once I query my Object (<code>User</code>) I convert it to <code>JSON</code>:</p>  <pre><code>[WebMethod] public User GetUserByID(int ID) {     User user = db.User.Where(p =&gt; p.ID == ID).FirstOrDefault();     var json = JsonConvert.SerializeObject(user, new IsoDateTimeConverter());     return user; } </code></pre>  <p>The problem is that on the resulting <code>JSON</code>, the nested data/objects (i.e. the relationship I have for that Object to others Object/Tables) are <code>null</code>.</p>  <p>So, for example, if I have 3 Phone numbers (1-n relationship) for that user, instead of retrieve a <code>JSON</code> array with these (3) numbers, it puts:</p>  <pre><code>"Phones": null, </code></pre>  <p>how can I "force" the <code>User</code> to be queried with all data/relationship inside it?</p>  <p>And if I do this query (for example) before serialize:</p>  <pre><code>var phones = m_oAlumno.Telefono.ToList(); </code></pre>  <p>it says "Self referencing loop detected for type 'User'."</p>