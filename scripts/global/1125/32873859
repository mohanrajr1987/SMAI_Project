<p>I'm trying to use big.matrix objects in my R code, but I'm having trouble saving them to a file using <code>saveRDS</code>, which is how I normally save objects:</p>  <pre><code>&gt; library(bigmemory) Loading required package: bigmemory.sri Loading required package: BH  bigmemory &gt;= 4.0 is a major revision since 3.1.2; please see packages biganalytics and and bigtabulate and http://www.bigmemory.org for more information.  &gt; x &lt;- big.matrix(5, 2, type="integer", init=0, + dimnames=list(NULL, c("alpha", "beta"))) &gt; saveRDS(x, "bigmem-test.RDS") &gt; y &lt;- readRDS("bigmem-test.RDS") &gt; y An object of class "big.matrix" Slot "address": &lt;pointer: (nil)&gt;  &gt; print(y[])   *** caught segfault *** address 0x51, cause 'memory not mapped'  Traceback:  1: .Call("GetMatrixAll", x@address)  2: GetAll.bm(x)  3: .local(x, ...)  4: y[]  5: y[]  Possible actions: 1: abort (with core dump, if enabled) 2: normal R exit 3: exit R without saving workspace 4: exit R saving workspace Selection: 3 </code></pre>  <p>I assume that saveRDS is somehow failing to realize that the big.matrix object is actually a pointer to some other memory, and is effectively just saving a pointer. Is there any way I can work around this?</p>  <p>(I don't really want to use a file-backed big.matrix object because the object I actually want to save is a complex data structure containing one or more big.matrix objects, so then I would need a backing file for each big.matrix contained in the object, and then the object would be serialized to an indeterminate number of files instead of just one.)</p>