<p>So, I'm using sequelize.js with <code>tedious</code>for mssql support. MSSQL = SQL Server 2008</p>  <p>Well, So there is this big table named Clientes. I have to fetch data from it, but it is quite huge so I'll have to paginate trhough</p>  <p>I tried the 'right way', as in the docs:</p>  <pre><code>app.use('/clientes', function(req, res){       var page = req.params.page || 0;       sequelize.Clientes.findAll({limit: 30, offset: 5  })         .then(function(result) {       res.json({result: result});     }); }); </code></pre>  <p>It should work, BUT it uses a query that is something like</p>  <p><code>SELECT .......... from [Clientes] as [Clientes] ORDER BY [CNPJ] OFFSET 5 ROWS FETCH NEXT 30 ROWS ONLY;</code> and the SQL Server return a terrible <code>Invalid usage of the option NEXT in the FETCH statement</code>!</p>  <p>So, after lots of search, I got to a point that apparently FETCH will not work with SQL 2008. That being said (and sad) I tried to force TDS version to 7_3_A. I did this using </p>  <pre><code>dialectOptions: {       tdsVersion: '7_3_A' }, </code></pre>  <p>but the query sintax did not change with this :(</p>  <p>I'm not sure what to do anymore.... I even will use another way instead of paginate... I found a nice sintax to SQL pagination (involving <code>row_number()</code>) , but I was not able to perform it as a raw query on sequelyze. <code>myModel.query('SQL QUERY HERE')</code> returned undefined function oO'</p>  <p>Any helps will be appreciated</p>