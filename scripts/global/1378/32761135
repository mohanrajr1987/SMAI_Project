<p>I am trying to make datatables play well with my rest API. Let me just state right of the bat: <strong>"The REST api will not be changed!</strong>.</p>  <p>When using serverside processing, datatables wants to send specific query parameters and expects to get back a specific format. This, to me, is bullocks. Noone wants to modify their backend to match the convention of a third party library (although, I suppose, it is great that there is a default provided).</p>  <p>I have set up my table like so:</p>  <pre><code>{     "processing": true,     "serverSide": true,     "ajax": {       "url": "/api/customers/",       "dataSrc": "results",       "data": function (data, settings) {         // Modify query parameters to match my API         data.page = ...         data.page_size = ...         return data       }     },     ... } </code></pre>  <p>As you can tell, i have used the <code>ajax.data</code> property to govern what the table requests from the API. This is great. works like a charm. When the response returns, it looks like this</p>  <pre><code>{     "count": 85,     "next": "http://myurl.com/?page=2",     "previous": null,     "results": [         ...  // The actual data     ] } </code></pre>  <p>From my configuration, you can tell that I use <code>ajax.dataSrc</code> to have the table pick up the <code>results</code> property, but I can't find any documentation regarding how to pick up pagination info from my response. I have tried modifying my configuration to</p>  <pre><code>{     ...     "ajax": {       "url": "/api/customers/",       "dataSrc": function(data) {           return {               recordsTotal: data.count,               recordsFiltered: ...,               data: data.results,               ...           }       },       ...     },     ... } </code></pre>  <p>But that just threw an error. Does not seem to be possible... So then, what can I do?</p>