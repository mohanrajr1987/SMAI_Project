<p>I have a classic ASP page in which I use remote scripting.</p>  <p>Following are the script tags used at the top of asp file to include remote scripting:</p>  <pre><code>&lt;script language="JavaScript" src="_ScriptLibrary/RS.htm"&gt;&lt;/script&gt; &lt;script language="JavaScript"&gt;RSEnableRemoteScripting("_ScriptLibrary")&lt;/script&gt; </code></pre>  <p><strong>Note:</strong> I also tried changing the path of script library as following:</p>  <pre><code>&lt;script language="JavaScript"&gt;RSEnableRemoteScripting("/_ScriptLibrary")&lt;/script&gt; </code></pre>  <p>ScriptLibrary folder has got all the necessary files as listed below: <br/>  1. RS.ASP <br/>  2. RS.HTM <br/>  3. RSProxy.class <br/></p>  <p>ScriptLibrary folder is available at the same level where my asp page is located.</p>  <p>In the asp page I make a call to RSExecute function of RS.HTM file as follows:</p>  <pre><code>co6 = RSExecute(url, "ResultString", Type); </code></pre>  <p>but  When I run the code in IE, I get the following error:</p>  <p><strong>this.rsapplet.startRequest(request.id,url_context,url,this.REQUEST_MODE_COMPLETE);` Object doesn't support property or method 'startRequest'</strong></p>  <p>When I run the code in firefox / chrome, I get the following error: <br/> <strong>TypeError: this.rsapplet.startRequest is not a function</strong></p>  <p>Exception is thrown from the folllowing function in RS.HTM:</p>  <pre><code>function _MSRS_startRequest(url,method,args,cb,ecb,context) </code></pre>  <p>I googled the error but didn't find a solution.  It seems more like a configuration / Installation error than coding. <br/> I didn't find any valid installation too for Remote Scripting 1.0b. I got one link that downloads zip file containing RS.HTM, RS.ASP and RSProxy.class that I already have with me.</p>  <p>Kindly help me</p>  <p>Following is the extract from RS.HTM file: <code> function RSEnableRemoteScripting(codebase)     {         MSRS = new _MSRS_Object();         if (typeof(codebase) == 'undefined')         {   // assume applet is in _ScriptLibrary directory off the webroot             var secondSlash, path;             codebase = '';             if ((secondSlash = (path = window.location.pathname).indexOf('/',1)) != -1)                 codebase = path.substring(0,secondSlash);             codebase += '/_ScriptLibrary';         }         document.write('&lt;' + 'APPLET name=RSAspProxyApplet codebase=' + codebase + ' code=RSProxy.class height=0 width=0>');<br>     }</p>  <pre><code>function RSExecute(url,method) { var cb, ecb, context; var params = new Array; var pn = 0; var len = RSExecute.arguments.length; for (var i=2; i &lt; len; i++)     params[pn++] = RSExecute.arguments[i];  return MSRS.invokeMethod(url,method,params); }   function _MSRS_invokeMethod(url,method,args) { var cb, ecb, context; var params = new Array; var pn = 0; var i = 0; for (var i=0; i &lt; args.length; i++) {     if (typeof(args[i]) == 'function')     {         pn = -1;    // no more params         if (typeof(cb) == 'undefined')             cb = args[i];         else             ecb = args[i];     }     else if (pn != -1)     {         params[pn++] = args[i];     }     else         context = args[i]; } return MSRS.startRequest(url,method,params,cb,ecb,context); }    function _MSRS_startRequest(url,method,args,cb,ecb,context) { alert('URL: ' + url); var request = new RSCallObject(cb,ecb,context); if (this.rsapplet == null) {     if (typeof(document.RSAspProxyApplet) == 'object')         this.rsapplet = document.RSAspProxyApplet;     else if (typeof(document.thisForm) == 'object' &amp;&amp; typeof(document.thisForm.RSAspProxyApplet) == 'object')         this.rsapplet = document.thisForm.RSAspProxyApplet;     else     {         errmsg = 'ERROR:\nCannot locate proxy which supports Remote Scripting.\nWas RSEnableRemoteScripting method invoked?';         request.status = MSRS_FAIL;         request.message = errmsg;          alert(errmsg);     } } console.log(this.rsapplet); if (request.status != MSRS_FAIL) {      url = this.buildURL(url,method,args);     url_context = window.location.href; // May not be 'window.location.pathname'     this.rsapplet.startRequest(request.id,url_context,url,this.REQUEST_MODE_COMPLETE);     if (typeof(cb) == 'function')     {         if (this.pollCount++ == 0)             this.setRequestPoll();     }     else     {   // wait synchronously for response         request.wait();     } } return request; } </code></pre>  <p></code></p>