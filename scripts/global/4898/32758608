<p>Here is the situation. I made a custom button control :</p>    <pre class="lang-cs prettyprint-override"><code>public partial class EButton : Control, IButtonControl </code></pre>  <p>This control contains a button. I use getters/setters to edit his properties in designer, like this :</p>  <pre class="lang-cs prettyprint-override"><code>[DesignerSerializationVisibility(DesignerSerializationVisibility.Visible)] [Browsable(true)] public UIButton Button {     get     {         return EBtn;     }     set     {         EBtn = value;     } } </code></pre>  <p>Now, I can access all of my button's properties in the designer.</p>  <p>My problem is that no matter what I define, this is always overrid by the default properties in my control. </p>  <p>Example :  In my control, the BackColor of the button is set to white. In a specific form, I want this button red, so I set BackColor properties to red in the designer <strong>of the form.</strong>  When I reload the designer, the value has return to White.</p>  <p>I don't want to make a setters for each property of the button. This is a specific control (<a href="http://www.janusys.com/controls/" rel="nofollow">http://www.janusys.com/controls/</a>) and it has A LOT of useful properties which I want to adapt for each specific situation. </p>  <p>Anyone has a solution ?</p>  <p>Thanks</p>