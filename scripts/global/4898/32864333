<p>I have function </p>  <pre><code>func findObjectInArray(array: [AnyObject], field: String?, fieldValue: AnyObject, startFromTheBeginning: Bool, minIndexTemp: Int, maxIndexTemp: Int) -&gt; AnyObject? </code></pre>  <p>And there I have:</p>  <pre><code>var minIndex = minIndexTemp         var maxIndex = maxIndexTemp         if (array.count == 0 || minIndex &lt; 0 || maxIndex &lt; 0) {             return nil         }         if (minIndex &gt; maxIndex) {             let rem = minIndex;             minIndex = maxIndex;             maxIndex = rem;         }         if (maxIndex &gt;= array.count) {             maxIndex = array.count - 1;         }         let startIndex = startFromTheBeginning ? minIndex : maxIndex;         let endIndex = startFromTheBeginning ? maxIndex : minIndex;          for (var i = startIndex; (startFromTheBeginning ? i &lt;= endIndex : i &gt;= 0); (startFromTheBeginning ? i++ : i--)) {             let object = array[i]             var objectFieldValue: AnyObject? = nil             if (field != nil) {                 print("test = ", (object as! SAd).adID)                 objectFieldValue = object.valueForKeyPath(field!)             } </code></pre>  <p>I logs before crash I see <code>test =  1</code> . So it means that <code>object</code> was converted to <code>SAd</code> and it has the field <code>adID</code>, but on the row <code>objectFieldValue = object.valueForKeyPath(field!)</code> application crashes with error:</p>  <pre><code> *** Terminating app due to uncaught exception 'NSUnknownKeyException', reason: '[&lt;Project.SAd 0x12d731930&gt; valueForUndefinedKey:]: this class is not key value coding-compliant for the key adID </code></pre>  <p>Here is the class </p>  <pre><code>class SAd: NSObject {     var adID: Int!     var bloggerID: Int!     var createdOn: NSDate!     var duration: Int!     var fav: Int!     var price: Double!     var text: String!     var countries: [String]!     var categories: [String]!     var deleted: Bool! } </code></pre>  <p><strong>Actually, you can test the same behavio in your code very simply:</strong></p>  <p>create class:</p>  <pre><code>class STest: NSObject {     var idTest: Int?     var strTest: String? } </code></pre>  <p>and in your AppDelegate file:</p>  <pre><code>func application(application: UIApplication, didFinishLaunchingWithOptions launchOptions: [NSObject: AnyObject]?) -&gt; Bool {     let testObj1 = STest()     testObj1.idTest = 1     testObj1.strTest = "test"     let objValue = testObj1 .valueForKeyPath("idTest")      return true } </code></pre>  <p>you will see the crash at line <code>let objValue = testObj1 .valueForKeyPath("idTest")</code></p>  <p><strong>but if you replace this line with <code>let objValue = testObj1 .valueForKeyPath("strTest")</code> it will work. So the problem is in Int value</strong></p>