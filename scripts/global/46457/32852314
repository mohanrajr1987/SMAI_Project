<p>I have 2 tables: <code>freq.table</code> has the distribution of types per land, <code>match.table</code> says which types match</p>  <pre><code>#freq.table               #match.table        typeA  typeB   |         typeA typeB   aland   30.0   70.0   |   typeA  TRUE  TRUE bland   70.0   30.0   |   typeB  TRUE FALSE </code></pre>  <p>Now I want a new table like <code>freq.table</code> but with different values:<br> For each point in <code>freq</code> (country, type), the new value should be the sum of all (country,type_m) where (type,type_m) is TRUE in match.table.<br> One could also say I want to merge <code>freq[country,]</code> and <code>match[type,]</code> matching types' frequencies but only the columns where <code>match</code> is <code>TRUE</code>.<br> So in <code>matches</code> I store the matching types and <code>freq[country,matches]</code> gives me all frequencies that I need.</p>  <pre><code>match_table = read.table(file='donor_for.table', header=T, stringsAsFactors = FALSE) freq        = read.table(file='frequency.table', header=T, stringsAsFactors = FALSE)  fill_table &lt;- function(FUN){        newfr &lt;-freq   for (country in rownames(freq)){     for (type in colnames(freq)){       newfr[country, type] &lt;- FUN(country, type)     }   }   return(newfr) }  fill_table2 &lt;- function(FUN){       newfr &lt;-freq   newfr[] &lt;- outer(rownames(freq), colnames(freq), FUN=FUN)   return(newfr) }  find_donor &lt;- function(country, type_receiver) {   matches=colnames(match_table)[match_table[type_receiver,]==TRUE]   return( sum(freq[country,matches]) )    #24 } </code></pre>  <p>While <code>fill_table(find_donor)</code> works, <code>fill_table2(find_donor)</code>(which is supposed to do the same but more consise) yields:</p>  <pre><code> Error in `[.data.frame`(freq, country, matches) :    undefined columns selected  6 stop("undefined columns selected")  5 `[.data.frame`(freq, country, matches) at blood.r#24 4 freq[country, matches] at blood.r#24 3 FUN(X, Y, ...)  2 outer(rownames(freq), colnames(freq), FUN = FUN) at blood.r#18 1 fill_table2(find_donor) </code></pre>