<p>Iâ€™m using the function <code>binning</code> from the <code>sm</code> package to take the plotted x,y coordinates and place them into discrete bins.  This creates a frequency table where the number of bins are determined by user input of SampleSize.</p>  <pre><code>    num_bins &lt;- max(x_max,y_max)/SampleSize     bin_breaks &lt;- matrix(c(bins,bins), num_bins+1,2)     frequency &lt;- binning(combo_points,breaks=bin_breaks,nbins=num_bins)$table.freq </code></pre>  <p>Output of my 'frequency' table is in the format...</p>  <pre><code>       x1  x2  x3  x4  x5...     y1  0   5     y2  0     y3  0     y4     y5     .     .     . </code></pre>  <p>But I need to convert it to a list format for all values of x and y...</p>  <pre><code>    x  y  count     1  1  0     1  2  0     1  3  0     2  1  5     .  .  .     .  .  . </code></pre>  <p>I want to convert this table into a data.frame list of x,y,count where x and y are now really just the x,y coordinate of the bin itself.  I'm currently doing this by setting up a data.frame to list the bin coordinates (freq_points$x and freq_points$y), then running a for loop that searches for the data in the table that matches the values of for each row of my freq_points data.frame to create a new vector (z) for which each iteration of the for loop appends to... but with over 3.4-million bins, this process takes hours.</p>  <pre><code>    for (i in 1:length(frequency)){     z&lt;-append(z,frequency[freq_points$y[i],freq_points$x[i]])} </code></pre>  <p>Can someone recommend a more elegant solution?  Is there a more direct way to convert from a table to a list?  I'm very new in R, perhaps I'm using the terms 'table' and 'list' incorrectly here.  I hope the formats given above help to clarify my question.</p>  <p>output from 'dput(frequency)' <a href="http://i.stack.imgur.com/k1fz9.jpg" rel="nofollow"><img src="http://i.stack.imgur.com/k1fz9.jpg" alt="output from &#39;dput(frequency)&#39;"></a></p>