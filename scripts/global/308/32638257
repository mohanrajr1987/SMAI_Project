<p>I did a bit of searching, but the only results I found regarded anti-aliasing and the mechanics behind it.</p>  <p>I want to use a multi-sample buffer for things other than anti-aliasing.  Specifically, what I have in mind is a form of order-independent transparency, storing a different color and depth value in each sample (ideally the N fragments closest to the camera).</p>  <p>Is this even possible in the first place?  Has it been done before, and if so how?  Even if it were possible, is it any more memory-efficient than just allocating another N framebuffers?</p>  <p>If something like this would require a compute shader or OpenCL, that's fine, I'm just curious to see if it's possible in the first place.</p>  <p>This question isn't specific to OpenGL or DirectX, since the hardware would be the same in either case.</p>  <p>PS. Please don't just point me towards other methods of order-independent transparency, this question is specifically about whether the multisample buffer can be used for atypical means.</p>