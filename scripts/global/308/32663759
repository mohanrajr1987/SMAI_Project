<p>I am following <a href="https://msdn.microsoft.com/en-us/library/windows/apps/hh825871.aspx" rel="nofollow">official Direct X and XAML interop tutorial</a> on Direct X - XAML interop in Windows Store app using <a href="https://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.media.imaging.virtualsurfaceimagesource.aspx" rel="nofollow">VirtualSurfaceImageSource</a>. The problem I am encountering here is that when the app is resumed after being suspended for inactivity, the rendering area blacks out. Chasing the problem in Visual Studio reveals that it fails at the line</p>  <pre class="lang-c prettyprint-override"><code>HRESULT beginDrawHR = m_vsisNative-&gt;BeginDraw(updateRect, &amp;bigSurface, &amp;offset); </code></pre>  <p>as in the tutorial. The HRESULT message says that</p>  <p><strong>The GPU device instance has been suspended. Use GetDeviceRemovedReason to determine the appropriate action.</strong></p>  <p>Doing what it says i.e. calling <code>GetDeviceRemovedReason</code>, I get <code>DXGI_ERROR_DRIVER_INTERNAL_ERROR</code> as the reason the device is removed which I have no idea to resolve. For the original <code>HRESULT</code>, I think the reason for GPU instance to be suspended is due to <code>Trim</code>ing of 3D device when the app is about to suspend (otherwise, the app will NOT pass certification). When it resumes, somehow the GPU instance does not get resumed. Hence, the drawing code never executes after resuming as <code>BeginDraw</code> never succeed, resulting in a black canvas. Removing the trimming code, it renders the content perfectly when resuming app but after a while, I get NULL pointer access for common resources such as brushes created using <code>CreateSolidColorBrush</code>.</p>  <p>Unfortunately, there is no hint how to handle the device removed in the tutorial:</p>  <pre class="lang-c prettyprint-override"><code>HRESULT beginDrawHR = m_vsisNative-&gt;BeginDraw(updateRect, &amp;bigSurface, &amp;offset); if (beginDrawHR == DXGI_ERROR_DEVICE_REMOVED || beginDrawHR == DXGI_ERROR_DEVICE_RESET) {     // device changed } else {     // draw to IDXGISurface } </code></pre>  <p>How should I resolve the error?</p>