<p>I am experiencing strange problems using C++AMP and using multiple <code>accelerator_view</code>s.</p>  <p>I narrowed down the problem to the following code:</p>  <pre><code>#include &lt;amp.h&gt; #include &lt;amp_graphics.h&gt; #include &lt;d3d11.h&gt;  using concurrency::accelerator_view; using namespace concurrency::direct3d; using namespace concurrency::graphics;  struct Image {   typedef unsigned short PixelType;   enum{ Width = 512, Height = 512, Area = Width * Height };   PixelType pixels[ Area ];    texture&lt; unorm, 2 &gt; getTexture( accelerator_view view ) {     return texture&lt; unorm, 2 &gt;( Height, Width, pixels, Area * sizeof(Image::PixelType), 8 * sizeof(Image::PixelType), view );   } };  int main() {   ID3D11Device* dev = nullptr;   ID3D11DeviceContext* devcon = nullptr;   D3D11CreateDevice(0, D3D_DRIVER_TYPE_HARDWARE, 0, D3D11_CREATE_DEVICE_DEBUG, 0, 0, D3D11_SDK_VERSION, &amp;dev, 0, &amp;devcon);    Image image;    {     // no problem here      auto view1 = create_accelerator_view(dev);     auto view2 = create_accelerator_view(dev);      auto tex1 = image.getTexture(view1);     auto tex2 = image.getTexture(view2);   }    {     // will crash when out-of-scope      auto view1 = create_accelerator_view(dev);     auto tex1  = image.getTexture(view1);      auto view2 = create_accelerator_view(dev);     auto tex2 = image.getTexture(view2);   }    return 0; }; </code></pre>  <p>What I get is an Access Violation 0xC0000005. Call Stack:</p>  <pre><code>vcamp120d.dll!Concurrency::details::_D3D_utils::_Release_D3D_object(IUnknown * * _Obj) Line 278 C++ vcamp120d.dll!Concurrency::details::_D3D11_engine::_Release(void * _Object) Line 1865   C++ vcamp120d.dll!Concurrency::details::_D3D_buffer_data::~_D3D_buffer_data() Line 432  C++ vcamp120d.dll!Concurrency::details::_D3D_buffer_data::`scalar deleting destructor'(unsigned int)    C++ vcamp120d.dll!Concurrency::details::_D3D_accelerator_view_impl::_Release_buffer(Concurrency::details::_Buffer * _Buf) Line 1250 C++ vcamp120d.dll!Concurrency::details::_Buffer::~_Buffer() Line 790    C++ msvcr120d.dll!__CallSettingFrame@12()   Unknown msvcr120d.dll!___FrameUnwindToState()   Unknown msvcr120d.dll!___InternalCxxFrameHandler()  Unknown msvcr120d.dll!___CxxFrameHandler3() Unknown ntdll.dll!ExecuteHandler2@20()  Unknown ntdll.dll!ExecuteHandler@20()   Unknown ntdll.dll!ExecuteHandler2@20()  Unknown </code></pre>  <p>I am using Visual Studio Professional 2013 ( Update 4 ).</p>  <p>The funny thing is, that I can get rid of the crash when I reorder the statements.</p>  <p>The crash does only show up when I create the device using the <code>D3D11_CREATE_DEVICE_DEBUG</code>flag.</p>