<p>I have it as a private member of a class.</p>  <pre><code>ID3D11ShaderResourceView** texture_pool; </code></pre>  <p>I set it to NULL in the class constructor like this:</p>  <pre><code>texture_pool = NULL; </code></pre>  <p>Then I initialize it like this in the class initialization:</p>  <pre><code>texture_pool = new ID3D11ShaderResourceView*[texture_count]; for (int n = 0; n &lt; texture_count; n++) texture_pool[n] = NULL; </code></pre>  <p>And in the class destructor I release it like this:</p>  <pre><code>for (int n = 0; n &lt; texture_count; n++) SAFE_RELEASE(texture_pool[n]); SAFE_DELETE_ARRAY(texture_pool); </code></pre>  <p>But sometimes my program crashes when I exit it and the debbuger point at this line as the cause of the crash:</p>  <pre><code>for (int n = 0; n &lt; texture_count; n++) SAFE_RELEASE(texture_pool[n]); </code></pre>  <p>If I remove that line everything works smooth, but I'm worried about possible memory leaks if I dont release the array.</p>  <p>So, can I just remove that line and everything will be cleaned up porperly?</p>  <p>These are the defined lines for the release and delete instructions:</p>  <pre><code>#define SAFE_RELEASE(p) { if ( (p) ) { (p)-&gt;Release(); (p) = 0; } } #define SAFE_DELETE(a) if( (a) != NULL ) delete (a); (a) = NULL; #define SAFE_DELETE_ARRAY(a) if( (a) != NULL ) delete[] (a); (a) = NULL; </code></pre>