<p>that's my code to handle double jump.But sometimes it doesn't work.</p>  <p>First time I touch the screen my character jumps up ( variable doublejump = true ) . When I touch the screen a second time my character jumps higher(double jump = false)(double jump worked).</p>  <p>But sometimes when I touch the screen for the first time(no need to touch the screen a second time) doublejump variable = false(double jump not working as I expected)</p>  <p>Help me fix that</p>  <p>My code:</p>  <pre><code>     void FixedUpdate ()         {             isGrounded = GroundedCheck ();             if (gm.gameState == GameManager.GameState.playing) {                  foreach (GameObject g in gm.deadObjects) {                     if (g.name == "P13") {                         g.GetComponent&lt;Mygroup&gt; ().targetName = "P12";                     } else if (g.name == "P12") {                         g.GetComponent&lt;Mygroup&gt; ().targetName = "P11";                     } else if (g.name == "P11") {                         g.GetComponent&lt;Mygroup&gt; ().targetName = "P10";                     } else if (g.name == "P10") {                         g.GetComponent&lt;Mygroup&gt; ().targetName = "P9";                     } else if (g.name == "P9") {                         g.GetComponent&lt;Mygroup&gt; ().targetName = "P8";                     } else if (g.name == "P8") {                         g.GetComponent&lt;Mygroup&gt; ().targetName = "P7";                     } else if (g.name == "P7") {                         g.GetComponent&lt;Mygroup&gt; ().targetName = "P6";                     } else if (g.name == "P6") {                         g.GetComponent&lt;Mygroup&gt; ().targetName = "P5";                     } else if (g.name == "P5") {                         g.GetComponent&lt;Mygroup&gt; ().targetName = "P4";                     } else if (g.name == "P4") {                         g.GetComponent&lt;Mygroup&gt; ().targetName = "P3";                     } else if (g.name == "P3") {                         g.GetComponent&lt;Mygroup&gt; ().targetName = "P2";                     } else if (g.name == "P2") {                         g.GetComponent&lt;Mygroup&gt; ().targetName = "P1";                     } else if (g.name == "P1") {                         g.GetComponent&lt;Mygroup&gt; ().targetName = "P0";                     } else if (g.name == "P0") {                         g.GetComponent&lt;Mygroup&gt; ().targetName = null;                     }                 }                 if (this.gameObject.name == "P0") {                     targetName = "";                 } else if (this.gameObject.name == "P1")                     targetName = "P0";                 else if (this.gameObject.name == "P2")                     targetName = "P1";                 else if (this.gameObject.name == "P3")                     targetName = "P2";                 else if (this.gameObject.name == "P4")                     targetName = "P3";                 else if (this.gameObject.name == "P5")                     targetName = "P4";                 else if (this.gameObject.name == "P6")                     targetName = "P5";                 else if (this.gameObject.name == "P7")                     targetName = "P6";                 else if (this.gameObject.name == "P8")                     targetName = "P7";                 else if (this.gameObject.name == "P9")                     targetName = "P8";                 else if (this.gameObject.name == "P10")                     targetName = "P9";                 else if (this.gameObject.name == "P11")                     targetName = "P10";                 else if (this.gameObject.name == "P12")                     targetName = "P11";                  target = GameObject.Find (targetName);                  if (isGrounded) {                     jumping = false;                     doubleJump = false;                     jumpAnim = false;      if (this.gameObject.name == "P0" &amp;&amp; isGrounded &amp;&amp; !doubleJump &amp;&amp; !jumping) {                 if (Input.GetMouseButtonDown (0) &amp;&amp; this.gameObject.name == "P0") {                         jumping = true;                         rid.velocity = new Vector3 (0, 50f * jump, 0);                         doubleJump = true;                     }                 }     if (this.gameObject.name == "P0" &amp;&amp; !isGrounded &amp;&amp; doubleJump &amp;&amp; jumping) {         if (Input.GetMouseButtonDown (0) &amp;&amp; this.gameObject.name == "P0") {                         rid.velocity = new Vector3 (0, 60f * jump, 0);                         doubleJump = false;                     }                 }  if (target != null &amp;&amp; this.gameObject.name != "P0" &amp;&amp; isGrounded &amp;&amp; target.GetComponent&lt;Mygroup&gt; ().doubleJump &amp;&amp; !target.GetComponent&lt;Mygroup&gt; ().isGrounded) {                     StartCoroutine (Jump ());                 }      if (target != null &amp;&amp; this.gameObject.name != "P0" &amp;&amp; !isGrounded &amp;&amp; doubleJump &amp;&amp; !target.GetComponent&lt;Mygroup&gt; ().isGrounded &amp;&amp; !target.GetComponent&lt;Mygroup&gt; ().doubleJump) {                     StartCoroutine (JumpDouble ());                 }         }         IEnumerator Jump ()         {             yield return new WaitForSeconds (time);              if (gameObject.name == "P1")                 rid.velocity = new Vector3 (0, 49.6f * jump, 0);             if (gameObject.name == "P2")                 rid.velocity = new Vector3 (0, 49.4f * jump, 0);             if (gameObject.name == "P3")                 rid.velocity = new Vector3 (0, 49.2f * jump, 0);             if (gameObject.name == "P4")                 rid.velocity = new Vector3 (0, 49f * jump, 0);             if (gameObject.name == "P5")                 rid.velocity = new Vector3 (0, 48.8f * jump, 0);             if (gameObject.name == "P6")                 rid.velocity = new Vector3 (0, 48.6f * jump, 0);             if (gameObject.name == "P7")                 rid.velocity = new Vector3 (0, 48.4f * jump, 0);             if (gameObject.name == "P8")                 rid.velocity = new Vector3 (0, 48.2f * jump, 0);             if (gameObject.name == "P9")                 rid.velocity = new Vector3 (0, 48f * jump, 0);             if (gameObject.name == "P10")                 rid.velocity = new Vector3 (0, 47.8f * jump, 0);             if (gameObject.name == "P11")                 rid.velocity = new Vector3 (0, 47.6f * jump, 0);             if (gameObject.name == "P12")                 rid.velocity = new Vector3 (0, 47.4f * jump, 0);              jumping = true;             doubleJump = true;          }         IEnumerator JumpDouble ()         {             yield return new WaitForSeconds (time);             if (doubleJump) {                  if (gameObject.name == "P1")                     rid.velocity = new Vector3 (0, 59.8f * jump, 0);                 if (gameObject.name == "P2")                     rid.velocity = new Vector3 (0, 59.6f * jump, 0);                 if (gameObject.name == "P3")                     rid.velocity = new Vector3 (0, 59.4f * jump, 0);                 if (gameObject.name == "P4")                     rid.velocity = new Vector3 (0, 59.2f * jump, 0);                 if (gameObject.name == "P5")                     rid.velocity = new Vector3 (0, 59f * jump, 0);                 if (gameObject.name == "P6")                     rid.velocity = new Vector3 (0, 58.8f * jump, 0);                 if (gameObject.name == "P7")                     rid.velocity = new Vector3 (0, 58.6f * jump, 0);                 if (gameObject.name == "P8")                     rid.velocity = new Vector3 (0, 58.4f * jump, 0);                 if (gameObject.name == "P9")                     rid.velocity = new Vector3 (0, 58.2f * jump, 0);                 if (gameObject.name == "P10")                     rid.velocity = new Vector3 (0, 58f * jump, 0);                 if (gameObject.name == "P11")                     rid.velocity = new Vector3 (0, 57.8f * jump, 0);                 if (gameObject.name == "P12")                     rid.velocity = new Vector3 (0, 57.6f * jump, 0);                 doubleJump = false;                 jumping = false;             }         } </code></pre>