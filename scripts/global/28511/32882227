<p>I wrote SurfaceShader with bumped texture.</p>  <p>I apply my material to a sphere. I can see the sphere <strong>in Scene View</strong>, but I can't see the sphere <strong>in Game View.</strong></p>  <p>When I apply other shaders to the sphere, I can see the sphere in GameView. <a href="http://i.stack.imgur.com/q2gq0.png" rel="nofollow"><img src="http://i.stack.imgur.com/q2gq0.png" alt="enter image description here"></a> <a href="http://i.stack.imgur.com/zrdZo.png" rel="nofollow"><img src="http://i.stack.imgur.com/zrdZo.png" alt="enter image description here"></a></p>  <p>I found <a href="http://forum.unity3d.com/threads/should-a-bumped-diffuse-shader-show-up-in-the-game-view-or-unity-remote.108109/" rel="nofollow">the same question</a> in Unity Community. </p>  <p>I understood I should use not Vertex Lighting but Pixel Lighting.</p>  <p>But I couldn't understand which settings should I change. Should I modify my shader or my settings?</p>  <p>My shader is the following.</p>  <pre><code>Shader "Custom/MyShader2"{     Properties{         _Bump("Bump",2D) = "white"{}         _DiffuseColor("Diffuse Color", Color) = (1.0,1.0,1.0)         _Specular("Specular",Range(1.0,50.0)) = 15.0         _Alpha("Alpha",Range(0,1)) = 1     }     SubShader{         Tags{             "RenderType" = "Opaque"         }         CGPROGRAM         #pragma surface surf Original alpha         struct Input{             float4 color: COLOR;             float2 uv_Bump;         };         float3 _DiffuseColor;         float _Specular;         sampler2D _Bump;         float _Alpha;         half4 LightingOriginal( SurfaceOutput s, half3 lightDir, half3 viewDir, half atten) {             half diff = max(0,dot(s.Normal,lightDir));             half spec = max(0,dot(s.Normal,normalize(lightDir + viewDir)));             spec = pow(spec, _Specular);             half trans = 1.0 - max(0,dot(s.Normal, viewDir)) + spec;             half4 c;             c. rgb = (s.Albedo * _LightColor0.rgb * diff + _LightColor0.rgb * spec / 2) * (atten * 2);             c.a = trans;             return c;         }         void surf( Input IN, inout SurfaceOutput o) {             o.Albedo = _DiffuseColor * _Alpha;;             o.Normal = UnpackNormal(tex2D(_Bump,IN.uv_Bump));             o.Alpha = _Alpha;         }         ENDCG     }     FallBack "Diffuse" } </code></pre>  <p>Thanks anyway.</p>