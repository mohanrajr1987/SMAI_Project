<p>I'm using my own volume controller:</p>  <pre><code>        xenoVolumeProvider = new VolumeProviderCompat(VolumeProviderCompat.VOLUME_CONTROL_RELATIVE, maxXenoVolume, XenoAmp.getAndSetPref("xenoVol", maxXenoVolume / 2)) {             @Override             public void onAdjustVolume(int direction) {                 super.onAdjustVolume(direction);                 actionSetVolumeByTick(direction);                 //Logger.d("Wart vol=" + mSession.getController().getPlaybackInfo().getCurrentVolume());             }         };         mSession.setPlaybackToRemote(xenoVolumeProvider); </code></pre>  <p>While it (surprisingly) works as expected (apart from a bug on Android 4 that causes FC, unsurprisingly) MediaControllerCompat.Callback's onAudioInfoChanged never gets called, although all other callbacks do.</p>  <p>Since Google's MediaController/MediaSession documentation is (unsurprisingly) non-existant maybe I'm missing something. Maybe I should somehow call onAudioInfoChanged myself on each volume change, but HOW?</p>  <p>There's this callback, that works:</p>  <pre><code>        xenoVolumeProvider.setCallback(new VolumeProviderCompat.Callback() {             @Override             public void onVolumeChanged(VolumeProviderCompat volumeProvider) {                 // maybe I can call onAudioInfoChanged from here?             }         }); </code></pre>  <p>but then again how would I call MediaControllerCompat.Callback's onAudioInfoChanged from there? Any ideas?</p>