<p>I want to be able to find out incremental changes of postgresql tables. </p>  <p>I know I could use timestamp method: add a timestamp column, and when a row is updated, I could save a timestamp with it, and then could query rows changed after a specified timestamp. Database trigger is not an option for me for some reason, and if don't use database trigger, I have to generate timestamp on web servers, which needs to use NTP to control the time tolerance between servers, and this is also not an option for me as I don't have the control of the servers.  </p>  <p>So I'm turning to another solution: select rows that are modified after a specified transaction id. In Postgres txid_current() could return the current transaction id, and I could get incremental updates by sql "select * from table_name where xmin > {transaction_id}".</p>  <p>After some simple testing I find it works. One known issue is that the transaction id will grow over time and one day will needs to reset by postgres, but I'm considering to temporarily disable the incremental updates feature when transaction id is approaching the max value and re-enabling it after the reset is done.</p>  <p>The question is:  I'm not sure if transaction id and xmin could be reliably used to detect incremental changes (except the known transaction_id overflow/reset issue).</p>  <p>Thanks for any suggestions on incremental updates. Maybe there're some other ways to query incremental updates.</p>