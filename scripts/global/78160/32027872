<p>I'm trying to upload an excel file then move on it rows and parse its data and store at SQL. the process takes too long time(maybe 15 min). during this server-side process, connection closed and occurred this error: "The server closed the connection without sending any data" I'm using mvc 4 , entityframework, sqlserver 2014.</p>  <p>when my excel file is not very large (and process takes time one or two minutes) it's OK.</p>  <p>its the process code:</p>  <pre><code>public void FetchExcel_Parse_Save(int YearInt, int MonthInt, HttpPostedFileBase File)     {         string _FilePath = Server.MapPath(string.Format("~/Files/Excel/{0}", File.FileName));         File.SaveAs(_FilePath);         string pathToExcelFile = _FilePath;         var excel = new ExcelQueryFactory(pathToExcelFile);         string sheetName = excel.GetWorksheetNames().FirstOrDefault();         var persons = from a in excel.Worksheet(sheetName) select a;         List&lt;Row&gt; list = persons.ToList();         string PersonalCode = string.Empty;         PersianCalendar pc = new PersianCalendar();         UpdateWorkLocation(list);         List&lt;DAL.WorkLocation&gt; WorkLocationList = db.WorkLocations.ToList();         DAL.User _user = new DAL.User();         foreach (var item in list)         {             string PersonalCode_temp = item["شماره كارمندي"].Value.ToString();              if (PersonalCode != PersonalCode_temp &amp;&amp; PersonalCode_temp != string.Empty)//next person             {                 PersonalCode = PersonalCode_temp;                 string FirstName = item["نام"].Value.ToString();                 string LastName = item["نام خانوادگی"].Value.ToString();                 string Gender = item["جنسیت"].Value.ToString();                 string NationaCode = item["کد ملی"].Value.ToString();                 string WorkTitle = item["عنوان شغلی"].Value.ToString();                 bool JJEnable = item["حوزه ج ج"].Value.ToString() == "فعال" ? true : false;                 string WorkState = item["وضعیت فعالیت"].Value.ToString();                 string Shift = item["شیفت"].Value.ToString();                 string PostNumber = item["پست"].Value.ToString();                 string DoorOrBuilding = item["درب یا ساختمان"].Value.ToString();                 string PostLocation = item["محل پست"].Value.ToString();                 string MelliAccountNumber = item["شماره حساب ملی"].Value.ToString();                 string TejaratAccountNumber = item["شماره حساب تجارت"].Value.ToString();                 string TejaratCardNumber = item["شماره کارت بانک تجارت"].Value.ToString();                 string TotalBaseWage = item["جمع حقوق پایه"].Value.ToString();                 string AdditionalWorkHourBase = item["ساعت اضافه کار بر اساس پایه"].Value.ToString();                 string Role = item["مسئولیت"].Value.ToString();                 if (db.Users.Where(w =&gt; w.PersonalCode == PersonalCode).Any())//exist user                 {                     DAL.User user = db.Users.Where(w =&gt; w.PersonalCode == PersonalCode).FirstOrDefault();                     user.AdditionalWorkHourBase = AdditionalWorkHourBase;                     user.DoorOrBuilding = DoorOrBuilding;                     user.Firstname = FirstName;                     user.Gender = Gender;                     user.JJEnable = JJEnable;                     user.Lastname = LastName;                     user.MelliAccountNumber = MelliAccountNumber;                     user.NationalCode = NationaCode;                     user.PostLocation = PostLocation;                     user.PostNumber = PostNumber;                     user.Role = Role;                     user.Shift = Shift;                     user.TejaratAccountNumber = TejaratAccountNumber;                     user.TejaratCardNumber = TejaratCardNumber;                     user.TotalBaseWage = TotalBaseWage;                     user.WorkState = WorkState;                     user.WorkTitle = WorkTitle;                     _user = user;                     db.Entry(_user).State = EntityState.Modified;                 }//end of exist user                 else//new user                 {                     DAL.User user = new DAL.User()                     {                         AdditionalWorkHourBase = AdditionalWorkHourBase,                         DoorOrBuilding = DoorOrBuilding,                         Firstname = FirstName,                         Gender = Gender,                         JJEnable = JJEnable,                         Lastname = LastName,                         MelliAccountNumber = MelliAccountNumber,                         NationalCode = NationaCode,                         Password = PersonalCode,                         PersonalCode = PersonalCode,                         PostLocation = PostLocation,                         PostNumber = PostNumber,                         Role = Role,                         Shift = Shift,                         TejaratAccountNumber = TejaratAccountNumber,                         TejaratCardNumber = TejaratCardNumber,                         TotalBaseWage = TotalBaseWage,                         Username = PersonalCode,                         UserType = 2,                         WorkState = WorkState,                         WorkTitle = WorkTitle                     };                     _user = user;                     db.Users.Add(_user);                 }//end of new user             }//end of next pesron              string WorkLocationName = item["محل اضافه کار "].Value.ToString();             if (WorkLocationList.Any(a =&gt; a.Location == WorkLocationName))//for avoid of save last rows of excel file             {                 string DaysHoursAndTotalPerMonth = string.Empty;                 for (int i = 24; i &lt;= 54; i++)                 {                     DaysHoursAndTotalPerMonth += item[i].Value.ToString() + "#";                 }                 for (int i = 56; i &lt;= 60; i++)                 {                     DaysHoursAndTotalPerMonth += item[i].Value.ToString() + "#";                 }                 //long UserId = db.Users.Where(w =&gt; w.PersonalCode == PersonalCode).FirstOrDefault().Id;                 long LocationId = WorkLocationList.Where(w =&gt; w.Location == WorkLocationName).FirstOrDefault().Id;                 if (_user.WorkItemHours.Count &gt; 0 &amp;&amp; _user.WorkItemHours.Any(a =&gt; a.WorkLocationId == LocationId &amp;&amp; a.Year == YearInt &amp;&amp; a.Month == MonthInt))//exist WorkItemHour record                 {                     DAL.WorkItemHour wih = _user.WorkItemHours.Where(a =&gt; a.WorkLocationId == LocationId &amp;&amp; a.Year == YearInt &amp;&amp; a.Month == MonthInt).FirstOrDefault();                     wih.DaysHourAndTotalPerMonth = DaysHoursAndTotalPerMonth;                     db.Entry(wih).State = EntityState.Modified;                 }                 else//new workitemhour record                 {                     DAL.WorkItemHour wih = new DAL.WorkItemHour()                     {                         DaysHourAndTotalPerMonth = DaysHoursAndTotalPerMonth,                         Month = MonthInt,                         //UserId = UserId,                         WorkLocationId = LocationId,                         Year = YearInt,                     };                     db.WorkItemHours.Add(wih);                     _user.WorkItemHours.Add(wih);                 }                 //db.SaveChanges();             }         }//end of FOREACH         db.SaveChanges();     } </code></pre>