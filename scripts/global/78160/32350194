<p>I am using .AsExpandable() extension of LinqKIT to dynamically generate Where expression.</p>  <p>For example,</p>  <pre><code>Expression&lt;Func&lt;Asset, bool&gt;&gt; assetNamePredicate = m =&gt; m.AssetName == "abc"; Expression&lt;Func&lt;Asset, bool&gt;&gt; assetPurchaseDateFromPredicate = m =&gt; m.PurchaseDate &gt; DateTime.Now.AddDays(-10); Expression&lt;Func&lt;Asset, bool&gt;&gt; whereExpression = t =&gt; assetNamePredicate.Invoke(t) &amp;&amp; assetPurchaseDateFromPredicate.Invoke(t);   return new entitiesContainer().Set&lt;Asset&gt;().AsExpandable().Where(whereExpression).ToList&lt;Asset&gt;(); </code></pre>  <p>Now the Asset entity contains AssetTypeID which is having a foreign key to ID field of AssetType table. But When I try to write Include statement to include AssetType in the resultset, it doesn't work, and the AssetType property for each Asset entity is null always...  however, the same thing works fine if I don't use .AsExpandable() extension. </p>  <p>Any idea of how we can use AsExpandable() extension for resultset to load related entities.</p>  <p>P.S. - my scenario is a bit complicated than the sample code I have provide, so I can't avoid using this extension for sure.. </p>