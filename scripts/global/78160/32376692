<p>My entity looks as follows:</p>  <pre><code>public class AddPatientReportDentalChartInput : IInputDto {     [Required]     [MaxLength(PatientReportDentalChart.TeethDesc)]     public string Image { get; set; }      [Required]     public virtual int PatientID { get; set; }     [Required]     public virtual  int TeethNO { get; set; }     public string SurfaceDefault1 { get; set; }     public string SurfaceDefault2 { get; set; }     public string SurfaceDefault3 { get; set; }     public string SurfaceDefault4 { get; set; }     public string SurfaceDefault5 { get; set; } } </code></pre>  <p>And the method by which i want to update is:</p>  <pre><code>public async Task addPatientReportDentalChart(AddPatientReportDentalChartInput input) {     var pid = input.PatientID;     var chartdetails = _chartReportRepository                         .GetAll()                         .WhereIf(!(pid.Equals(0)),                                    p =&gt; p.PatientID.Equals(pid)).ToList();      if (chartdetails.Count&gt;0)     {         //Update should be apply here          //please suggest me the solution using updatesync     }     else      {          var patientinfo = input.MapTo&lt;PatientReportDentalChart&gt;();         await _chartReportRepository.InsertAsync(patientinfo);     } } </code></pre>  <p>What is the equivalent of <code>InsertAsync</code> when I want to update an existing entity? Is there an <code>UpdateAsync</code> equivalent method?</p>