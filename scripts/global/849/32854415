<p>I have a Gradle application with a Groovy file here:</p>  <pre><code>src/main/com/foo/bar/applicationEntryPoint.groovy </code></pre>  <p>I also have an executable in the resources folder</p>  <pre><code>src/main/resources/myExecutable </code></pre>  <p>that I want to call from applicationEntryPoint.groovy. I've done this like so:</p>  <pre><code>String[] command = ["./myExecutable"]     Process schema_maker = Runtime.getRuntime().exec(command) </code></pre>  <p>I did this by compiling the Groovy into a Jar so that I am in a folder that contains the following:</p>  <pre><code> foo-1.0-snapshot.jar  myExecutable  </code></pre>  <p>Then I can do the following</p>  <pre><code>java -jar foo-1.0-snapshot.jar </code></pre>  <p>But now I've created a build.gradle that bundles both the Groovy and the executable together like so:</p>  <pre><code>group = 'com.foo.bar' version = '1.0-SNAPSHOT' apply plugin: 'groovy' apply plugin: 'java' apply plugin: 'application' mainClassName = 'com.foo.bar.applicationEntryPoint' sourceCompatibility = 1.5 targetCompatibility = 1.5 </code></pre>  <p>That creates a distributions executable called foo in build:</p>  <pre><code>/build/distributions/foo-1.0-SNAPSHOT/bin/foo </code></pre>  <p>After the distro bundling, how do I tell bash where to find ./myExecutable inside of the foo executable? </p>