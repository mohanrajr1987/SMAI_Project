<p>I am using a Groovy library call ws-lite for web service testing. The way it works is it takes a closure and generate XML and send it to a web service end point.</p>  <p>See below for a simple example of what this closure looks like:</p>  <pre><code>def bookXml = {     books {         book(available: "20", id: "1") {             title("Don Xijote")             author(id: "1", "Manuel De Cervantes")         }         book(available: "14", id: "2") {             title("Catcher in the Rye")             author(id: "2", "JD Salinger")         }         book(available: "13", id: "3") {             title("Alice in Wonderland")             author(id: "3", "Lewis Carroll")         }     } } </code></pre>  <p>Will generate XML in the request as below:</p>  <pre><code>&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;books&gt;    &lt;book available="20" id="1"&gt;       &lt;title&gt;Don Xijote&lt;/title&gt;       &lt;author id="1"&gt;Manuel De Cervantes&lt;/author&gt;    &lt;/book&gt;    &lt;book available="14" id="2"&gt;       &lt;title&gt;Catcher in the Rye&lt;/title&gt;       &lt;author id="2"&gt;JD Salinger&lt;/author&gt;    &lt;/book&gt;    &lt;book available="13" id="3"&gt;       &lt;title&gt;Alice in Wonderland&lt;/title&gt;       &lt;author id="3"&gt;Lewis Carroll&lt;/author&gt;    &lt;/book&gt; &lt;/books&gt; </code></pre>  <p>In order to make my clients more flexible, I normally pass the data structure from my test to the client as a map:</p>  <pre><code>def bookMap = [     books: [[                     id       : "1",                     available: "20",                     title    : "Don Xijote",                     author   : [                             id  : "1",                             name: "Manuel De Cervantes"                     ]             ], [                     id       : "2",                     available: "14",                     title    : "Catcher in the Rye",                     author   : [                             id  : "2",                             name: "JD Salinger"                     ]             ], [                     id       : "3",                     available: "13",                     title    : "Alice in Wonderland",                     author   : [                             id  : "3",                             name: "Lewis Carroll"                     ]             ]     ] </code></pre>  <p>]</p>  <p>This is how the client looks like now:</p>  <pre><code>def bookXml = {     books {         bookMap.books.book.each {             book(available: it.available, id: it.id) {                 title(it.available.title)                 author(id: it.author.id, it.author.name)             }         }     } } </code></pre>  <p>One thing I want to do is in the bookXml closure, is there a way that I can take out a tag, if the value in my data structure is null?</p>  <p>For example, if title of my first book is null in the map, then in the closure, it won't create this tag title for book one.</p>  <p>I know how this can be done in groovy collection using collectentries for map and collect for list, but I don't know much about transforming closure.</p>  <p>Can you please share some insight with me?</p>  <p>Thanks.</p>