<p>I've got a function in an Angular controller like so:</p>  <pre><code>(function () {     'use strict';     var controlledID = 'Clause.Clause';     angular.module('docapp').controller(controlledID, ['$scope', 'common', 'taskSvc', 'clauseSvc', Clauses]);      function Clauses($scope, clauseSvc, taskSvc, common) {         $scope.GetContractMaster = function GetContractMaster() {             clauseSvc.getAll()             .then(function (response) {                 $scope.ContractMaster.rowData = response.d.results;                 console.log(response.d.results);             });         };         $scope.GetContractMaster();    }; } })(); </code></pre>  <p>My Services</p>  <pre><code>(function () {     'use strict';     var app = angular.module('docapp');     app.factory("clauseSvc", ["baseSvc", function (baseService) {         var listEndPoint = '/_api/web/lists/';         var getAll = function () {             var query = listEndPoint + "GetByTitle('CLAUSE_MST')/Items?$select=Title,Title,Desc,nodes/ID&amp;$expand=nodes";             return baseService.getRequest(query);         };         return {             getAll: getAll         };     }]); })(); </code></pre>  <p>baseService</p>  <pre><code>"use strict"; (function () {     angular.module("docapp")         .factory("baseSvc", ["$http", "$q", function ($http, $q) {             var baseUrl = _spPageContextInfo.siteAbsoluteUrl;             var getRequest = function (query) {                 var deferred = $q.defer();                 $http({                     url: baseUrl + query,                     method: "GET",                     headers: {                         "accept": "application/json;odata=verbose",                         "content-Type": "application/json;odata=verbose"                     }                 })                     .success(function (result) {                         deferred.resolve(result);                     })                     .error(function (result, status) {                         deferred.reject(status);                     });                 return deferred.promise;             };              return {                 getRequest: getRequest              };         }]); })(); </code></pre>  <p>Getting error</p>  <pre><code>[true]  [SYSERR] clauseSvc.getAll is not a function Object {exception: TypeError: clauseSvc.getAll is not a function at n.GetContractMaster </code></pre>  <p>Need help</p>