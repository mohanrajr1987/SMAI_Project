<p>I have a Rest application which is built using Jersey 2.22. I am able to deploy this application to my local Tomcat but when i try to deploy this to JBoss AS I get this error message:</p>  <pre><code>        11:28:49,527 WARN  [org.jboss.modules] (MSC service thread 1-4) Failed to define class com.eteller.common.rest.core.RESTServletContainerWrapper in Module "deployment.eTellerRest.war:main" from Service Module Loader: java.lang.LinkageError: Failed to link com/eteller/common/rest/core/RESTServletContainerWrapper (Module "deployment.eTellerRest.war:main" from Service Module Loader)                   at org.jboss.modules.ModuleClassLoader.defineClass(ModuleClassLoader.java:396)           ....            11:28:49,538 WARN  [org.jboss.as.ee] (MSC service thread 1-4) JBAS011006: Not installing optional component com.eteller.common.rest.core.RESTServletContainerWrapper due to exception: java.lang.ClassNotFoundException: com.eteller.common.rest.core.RESTServletContainerWrapper from [Module "deployment.eTellerRest.war:main" from Service Module Loader]                   at org.jboss.modules.ModuleClassLoader.findClass(ModuleClassLoader.java:190) [jboss-modules.jar:1.1.1.GA]                   at org.jboss.modules.ConcurrentClassLoader.performLoadClassUnchecked(ConcurrentClassLoader.java:468) [jboss-modules.jar:1.1.1.GA]           .....            11:28:49,563 INFO  [org.apache.catalina.core.ContainerBase.[jboss.web].[default-host].[/eTellerRest]] (MSC service thread 1-4) Marking servlet eTellerRestServices as unavailable           11:28:49,563 ERROR [org.apache.catalina.core.ContainerBase.[jboss.web].[default-host].[/eTellerRest]] (MSC service thread 1-4) Servlet /eTellerRest threw load() exception: java.lang.ClassNotFoundException: com.eteller.common.rest.core.RESTServletContainerWrapper from [Module "deployment.eTellerRest.war:main" from Service Module Loader]                   at org.jboss.modules.ModuleClassLoader.findClass(ModuleClassLoader.java:190)   </code></pre>  <p>I am staying away from defining the Servlet mapping in the web.xml, instead, we are using an annotation based Servlet wrapper that registers our rest packages. Here are the details of my application and its configuration.</p>  <p>The RESTServletContainerWrapper class looks like this:</p>  <pre><code>package com.eteller.common.rest.core;     import javax.servlet.annotation.WebInitParam;   import javax.servlet.annotation.WebServlet;     import org.glassfish.jersey.servlet.ServletContainer;     @WebServlet (name="eTellerRestServices",urlPatterns="/api/*",             initParams={@WebInitParam(name="javax.ws.rs.Application",                                       value="com.eteller.common.rest.core.RESTApplication")     },loadOnStartup=5)     public class RESTServletContainerWrapper extends ServletContainer{       public static final long serialVersionUID = 1L;   } </code></pre>  <p>The RESTApplication class that add packages used for scanning rest components is this:</p>  <pre><code>package com.eteller.common.rest.core;     import org.glassfish.jersey.server.ResourceConfig;   import org.glassfish.jersey.server.model.Resource;     public class RESTApplication extends ResourceConfig {      public RESTApplication(){     // register a Cross Origin Response Filter     System.out.println("Registring CORS Filter");     register(CORSResponseFilter.class);      // Register all classes in the REST packages     System.out.println("Registring Packages");           ResourceConfig rc = packages(true, "com.eteller.customer.rest");           for (Resource r : rc.getResources()) {               System.out.println("[com.eteller.customer.rest] Registered resource &lt;" + r.getName() + "&gt;");           }            //Inspect current ResourceConfig           for (Resource r : getResources()) {               System.out.println("Registered resource &lt;" + r.getName() + "&gt;");           }      }   }   </code></pre>  <p>The CORSResponseFilter class:</p>  <pre><code>package com.eteller.common.rest.core;     import java.io.IOException;     import javax.ws.rs.container.ContainerRequestContext;   import javax.ws.rs.container.ContainerResponseContext;   import javax.ws.rs.container.ContainerResponseFilter;   import javax.ws.rs.core.MultivaluedMap;     public class CORSResponseFilter implements ContainerResponseFilter{       @Override     public void filter(ContainerRequestContext requestContext,ContainerResponseContext responseContext) throws IOException {     MultivaluedMap&lt;String, Object&gt; headers = responseContext.getHeaders();     headers.add("Access-Control-Allow-Origin", "*");     }   }  </code></pre>  <p>And the class which has my Rest service looks like this:</p>  <pre><code>package com.eteller.customer.rest;       import java.util.ArrayList;   import java.util.List;     import javax.ws.rs.Consumes;   import javax.ws.rs.GET;   import javax.ws.rs.POST;   import javax.ws.rs.PUT;   import javax.ws.rs.Path;   import javax.ws.rs.PathParam;   import javax.ws.rs.Produces;   import javax.ws.rs.QueryParam;   import javax.ws.rs.core.MediaType;   import javax.ws.rs.core.Response;   import javax.xml.bind.annotation.XmlRootElement;     import org.json.JSONException;     import com.eteller.customer.model.CustomerInfo;   import com.eteller.customer.model.CustomerList;   import com.eteller.customer.model.CustomerProducts;       @Path("/PR/customers")   @XmlRootElement   public class Customers{       public List&lt;CustomerInfo&gt; customerList = new ArrayList&lt;CustomerInfo&gt;();     public ArrayList&lt;CustomerProducts&gt; productList = new ArrayList&lt;CustomerProducts&gt;();      public Customers()     {     CustomerProducts p1 = new CustomerProducts("checking", "sole", "60715", "9011245", 120.00);     CustomerProducts p2 = new CustomerProducts("saving", "sole", "60785", "483255", 120.00);     productList.add(p1);     productList.add(p2);     CustomerInfo c1 = new CustomerInfo("Alpha","1",productList);      CustomerInfo c2 = new CustomerInfo("Beta","2");      productList.clear();     CustomerProducts p3 = new CustomerProducts("checking", "sole", "45987", "1321481", 180.00);     CustomerProducts p4 = new CustomerProducts("saving", "sole", "78125", "483255", 12000.00);     productList.add(p3);     productList.add(p4);     CustomerInfo c3 = new CustomerInfo("Gamma","3",productList);      CustomerInfo c4 = new CustomerInfo("Delta","4");     CustomerInfo c5 = new CustomerInfo("Epsilon","5");      productList.clear();     CustomerProducts p5 = new CustomerProducts("checking", "sole", "90915", "1548481", 1170.65);     CustomerProducts p6 = new CustomerProducts("saving", "sole", "80525", "879654", 1.34);     productList.add(p5);     productList.add(p6);     CustomerInfo c6 = new CustomerInfo("Zeta","6",productList);      customerList.add(c1);     customerList.add(c2);     customerList.add(c3);     customerList.add(c4);     customerList.add(c5);     customerList.add(c6);     }      @Path("/{customerCIF}")     @GET     @Produces(MediaType.APPLICATION_JSON)     public Response detailCustomer(     @PathParam("customerCIF") String customerCIF){      System.out.println("Inside the GET Customer");     List&lt;CustomerInfo&gt; customerFound = new ArrayList&lt;CustomerInfo&gt;();      for (CustomerInfo customerFind:customerList){     if (customerFind.cif.equals(customerCIF)){     customerFound.add(customerFind);     }     }     CustomerList customerResult = new CustomerList(customerFound);     customerFound = null;     return Response.ok(customerResult,MediaType.APPLICATION_JSON).build();     }   </code></pre>  <p>This is my build.xml:</p>  <pre><code>&lt;?xml version="1.0" encoding="UTF-8" standalone="no"?&gt;&lt;!DOCTYPE project&gt;   &lt;project basedir="." default="build" name="eTellerRest"&gt;       &lt;property environment="env"/&gt;       &lt;property name="debuglevel" value="source,lines,vars"/&gt;       &lt;property name="target" value="1.7"/&gt;       &lt;property name="source" value="1.7"/&gt;       &lt;path id="Web App Libraries.libraryclasspath"&gt;           &lt;pathelement location="Sharedlib/java-json.jar"/&gt;           &lt;pathelement location="Sharedlib/jersey/ext/aopalliance-repackaged-2.4.0-b31.jar"/&gt;           &lt;pathelement location="Sharedlib/jersey/lib/jersey-client.jar"/&gt;           &lt;pathelement location="Sharedlib/jersey/ext/asm-debug-all-5.0.4.jar"/&gt;           &lt;pathelement location="Sharedlib/jersey/ext/jersey-guava-2.22.jar"/&gt;           &lt;pathelement location="Sharedlib/jersey-moxy/org.eclipse.persistence.asm-2.5.0.jar"/&gt;           &lt;pathelement location="Sharedlib/jersey-moxy/org.eclipse.persistence.asm-2.5.0-rc2.jar"/&gt;           &lt;pathelement location="Sharedlib/jersey-moxy/org.eclipse.persistence.moxy-2.5.0.jar"/&gt;           &lt;pathelement location="Sharedlib/jersey/api/javax.ws.rs-api-2.0.1.jar"/&gt;           &lt;pathelement location="Sharedlib/jersey-moxy/org.eclipse.persistence.moxy-2.5.0-sources.jar"/&gt;           &lt;pathelement location="Sharedlib/jersey/ext/hk2-utils-2.4.0-b31.jar"/&gt;           &lt;pathelement location="Sharedlib/jersey/ext/validation-api-1.1.0.Final.jar"/&gt;           &lt;pathelement location="Sharedlib/jersey/ext/jaxb-api-2.2.7.jar"/&gt;           &lt;pathelement location="Sharedlib/webservices-rt.jar"/&gt;           &lt;pathelement location="Sharedlib/jersey/lib/jersey-server.jar"/&gt;           &lt;pathelement location="Sharedlib/jersey/ext/persistence-api-1.0.jar"/&gt;           &lt;pathelement location="Sharedlib/jersey/ext/javax.inject-2.4.0-b31.jar"/&gt;           &lt;pathelement location="Sharedlib/jersey/lib/jersey-container-servlet.jar"/&gt;           &lt;pathelement location="Sharedlib/jersey/ext/javax.annotation-api-1.2.jar"/&gt;           &lt;pathelement location="Sharedlib/jersey/lib/jersey-container-servlet-core.jar"/&gt;           &lt;pathelement location="Sharedlib/jersey-moxy/jersey-media-moxy-2.13.jar"/&gt;           &lt;pathelement location="Sharedlib/jersey-moxy/org.eclipse.persistence.core-2.5.0.jar"/&gt;           &lt;pathelement location="Sharedlib/jersey-moxy/jersey-entity-filtering-2.13.jar"/&gt;           &lt;pathelement location="Sharedlib/jersey/ext/hk2-locator-2.4.0-b31.jar"/&gt;           &lt;pathelement location="Sharedlib/jersey-moxy/org.eclipse.persistence.antlr-2.5.0.jar"/&gt;           &lt;pathelement location="Sharedlib/jersey/ext/osgi-resource-locator-1.0.1.jar"/&gt;           &lt;pathelement location="Sharedlib/jersey/ext/javax.servlet-api-3.0.1.jar"/&gt;           &lt;pathelement location="Sharedlib/jersey/ext/hk2-api-2.4.0-b31.jar"/&gt;           &lt;pathelement location="Sharedlib/jersey/ext/org.osgi.core-4.2.0.jar"/&gt;           &lt;pathelement location="Sharedlib/jaxb-xjc.jar"/&gt;           &lt;pathelement location="Sharedlib/jersey/lib/jersey-media-jaxb.jar"/&gt;           &lt;pathelement location="Sharedlib/jersey/ext/javassist-3.18.1-GA.jar"/&gt;           &lt;pathelement location="Sharedlib/jersey/lib/jersey-common.jar"/&gt;           &lt;pathelement location="WebContent/WEB-INF/classes"/&gt;       &lt;/path&gt;       &lt;path id="EAR Libraries.libraryclasspath"/&gt;       &lt;path id="eTellerRest.classpath"&gt;           &lt;pathelement location="build/classes"/&gt;           &lt;path refid="Web App Libraries.libraryclasspath"/&gt;           &lt;path refid="EAR Libraries.libraryclasspath"/&gt;       &lt;/path&gt;       &lt;target name="init"&gt;           &lt;mkdir dir="build/classes"/&gt;           &lt;copy includeemptydirs="false" todir="build/classes"&gt;               &lt;fileset dir="src"&gt;                   &lt;exclude name="**/*.launch"/&gt;                   &lt;exclude name="**/*.java"/&gt;               &lt;/fileset&gt;           &lt;/copy&gt;       &lt;/target&gt;       &lt;target name="clean"&gt;           &lt;delete dir="build/classes"/&gt;       &lt;/target&gt;       &lt;target depends="clean" name="cleanall"/&gt;       &lt;target depends="build-subprojects,build-project" name="build"/&gt;       &lt;target name="build-subprojects"/&gt;       &lt;target depends="init" name="build-project"&gt;           &lt;echo message="${ant.project.name}: ${ant.file}"/&gt;           &lt;javac debug="true" debuglevel="${debuglevel}" destdir="build/classes" includeantruntime="false" source="${source}" target="${target}"&gt;               &lt;src path="src"/&gt;               &lt;classpath refid="eTellerRest.classpath"/&gt;           &lt;/javac&gt;       &lt;/target&gt;       &lt;target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/&gt;       &lt;target name="CustomerRESTClient (1)"&gt;           &lt;java classname="com.eteller.customer.rest.client.CustomerRESTClient" failonerror="true" fork="yes"&gt;               &lt;classpath refid="eTellerRest.classpath"/&gt;           &lt;/java&gt;       &lt;/target&gt;       &lt;target name="SessionRESTClient"&gt;           &lt;java classname="com.eteller.customer.rest.client.SessionRESTClient" failonerror="true" fork="yes"&gt;               &lt;classpath refid="eTellerRest.classpath"/&gt;           &lt;/java&gt;       &lt;/target&gt;       &lt;target name="TransactionRESTClient"&gt;           &lt;java classname="com.eteller.customer.rest.client.TransactionRESTClient" failonerror="true" fork="yes"&gt;               &lt;classpath refid="eTellerRest.classpath"/&gt;           &lt;/java&gt;       &lt;/target&gt;        &lt;target name="war" description="Bundles the application as a WAR file" depends="clean, build"&gt;       &lt;mkdir dir="WebContent/WEB-INF/classes"/&gt;        &lt;copy includeemptydirs="false" todir="WebContent/WEB-INF/classes"&gt;               &lt;fileset dir="build/classes"&gt;               &lt;include name="**/*.class"/&gt;               &lt;/fileset&gt;       &lt;/copy&gt;        &lt;war destfile="eTellerRest.war"           basedir="WebContent"           needxmlfile="false"&gt;       &lt;/war&gt;   &lt;/target&gt;   &lt;/project&gt;    </code></pre>  <p>This is my web.xml to ignore JBoss scanning for RestEasy:</p>  <pre><code>&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0"&gt;       &lt;display-name&gt;eTellerRest&lt;/display-name&gt;       &lt;welcome-file-list&gt;         &lt;welcome-file&gt;index.html&lt;/welcome-file&gt;         &lt;welcome-file&gt;index.htm&lt;/welcome-file&gt;         &lt;welcome-file&gt;index.jsp&lt;/welcome-file&gt;         &lt;welcome-file&gt;default.html&lt;/welcome-file&gt;         &lt;welcome-file&gt;default.htm&lt;/welcome-file&gt;         &lt;welcome-file&gt;default.jsp&lt;/welcome-file&gt;       &lt;/welcome-file-list&gt;      &lt;!-- JBoss-specific; Prevent default JAX-RS implementation (RestEasy) from      scanning application as this conflicts with Jersey --&gt;         &lt;context-param&gt;         &lt;param-name&gt;resteasy.scan&lt;/param-name&gt;         &lt;param-value&gt;false&lt;/param-value&gt;       &lt;/context-param&gt;        &lt;context-param&gt;         &lt;param-name&gt;resteasy.scan.providers&lt;/param-name&gt;         &lt;param-value&gt;false&lt;/param-value&gt;       &lt;/context-param&gt;        &lt;context-param&gt;         &lt;param-name&gt;resteasy.scan.resources&lt;/param-name&gt;         &lt;param-value&gt;false&lt;/param-value&gt;       &lt;/context-param&gt; &lt;/web-app&gt; </code></pre>  <p>Regards Ali.</p>