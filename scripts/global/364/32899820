<p>I have some XML returned from a REST interface that I am trying to parse with XPath and example of which is:</p>  <pre><code>            &lt;parameter&gt;                 &lt;name&gt;employee first name&lt;/name&gt;                 &lt;value&gt;TestF&lt;/value&gt;             &lt;/parameter&gt;             &lt;parameter&gt;                 &lt;name&gt;employee id&lt;/name&gt;                 &lt;value&gt;3345&lt;/value&gt;             &lt;/parameter&gt;             &lt;parameter&gt;                 &lt;name&gt;date of commencement&lt;/name&gt;                 &lt;value&gt;02 Oct 2015, 10:52:00&lt;/value&gt;             &lt;/parameter&gt;             &lt;parameter&gt;                 &lt;name&gt;employee surname&lt;/name&gt;                 &lt;value&gt;TestL&lt;/value&gt;             &lt;/parameter&gt; </code></pre>  <p>I'm struggling because all of the nodes are named identically, in pairs of     <code>&lt;name</code>> <code>&lt;value</code>>.</p>  <p>What I'm trying to do is find a <code>&lt;Parameter</code>> node that has a specific <code>&lt;name</code>> node and return the <code>&lt;value</code>> node of that parameter, I hope that makes sense!</p>  <p>What I thought would work is find the correct <code>&lt;name</code>> node, then just use the 'following-sibling' function to grab the value but I simply cannot get it to work.</p>  <p>What I have ended up with is:</p>  <pre><code>//parameter/name[text()[contains(.,'team')]]/following-sibling::value </code></pre>  <p>I've also tried value[1] at the end along with many combinations!</p>  <p>Where I can substitute 'team' with whatever thing I'm looking for, example 'employee id'.</p>