<p><em>(sorry I just didn't found a better title)</em></p>  <p>As Django newbie (that has just experience with small projects) I'm asking myself what is best practise for bigger projects (not single apps!) which should be hosted by different admins on their own servers and get an own livecycle. Just a few examples:</p>  <ul> <li><a href="http://osqa.net" rel="nofollow">OSQA</a></li> <li><a href="https://github.com/translate/pootle" rel="nofollow">pootle</a></li> <li><a href="http://www.django-cms.org" rel="nofollow">Django CMS</a></li> <li><a href="https://github.com/ninuxorg/nodeshot" rel="nofollow">Nodeshot</a></li> <li><a href="https://github.com/holgerd77/django-dynamic-scraper" rel="nofollow">Django Dynamic Scraper</a></li> <li>...</li> </ul>  <p>So are there any advices or any texts that dive into how you </p>  <ul> <li>timeline/versioning on dependencies, models, APIs, Django versions, libraries ...</li> <li>keeping userdata / avoid corruption</li> <li>allow customization (settings, templates, models, ...)</li> <li>easy deployment on various OSes and server architectures</li> <li>...</li> </ul>  <p>Are there any tools or workflows which compare different approaches to avoid this problems with the Django ecosystem?</p>