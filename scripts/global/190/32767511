<p>I am developing a Java project with a public API based on Dropwizard (<a href="http://www.dropwizard.io/" rel="nofollow">http://www.dropwizard.io/</a>).</p>  <p>As suggested in the Dropwizard User Manual I divided my code in three maven submodules: <code>project-api</code>, <code>project-application</code> and <code>project-client</code>, where <code>project-application</code> and <code>project-client</code> depend on <code>project-api</code>.</p>  <p>Now I want to publish my client - obviously without publishing the application. That means the published jar should only contain the classes of <code>project-client</code> and <code>project-api</code> and no other dependencies. To me this seams like a very basic/common task, but I am not getting it to work and I can not find any good references (I'm pretty new to maven).</p>  <p>What is the correct "maven" way to solve this problem? Creating a 4th submodule that combines the sources of <code>project-api</code> and <code>project-client</code> using the shades plugin? If yes, how do I generate the javadoc:jar that is necessary for publishing?</p>  <p>Or I is it better to publish the <code>project-api</code> and <code>project-client</code> as two separate projects and don't merge them?</p>  <p>Thanks for your help! Philipp</p>