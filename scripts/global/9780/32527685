<p>I am doing embedded ARM programming with gcc 4.9. I've been using the <code>-Wconversion</code> switch because it's in my company's default dev tool configuration. I'm using the stdint.h <a href="http://electronics.stackexchange.com/q/145017/38335">types</a> (uint8_t, uint32_t, etc).</p>  <p>The compiler creates warnings every time I perform a compound assignment or even simple addition. For example:</p>  <pre><code>uint8_t u8 = 0; uint16_t u16;  // These cause warnings: u8 += 2; u8 = u16 &gt;&gt; 8; </code></pre>  <p>The "common method" to fix this is to use casts, as discussed <a href="http://stackoverflow.com/q/12941878/3380131">here</a> and <a href="http://stackoverflow.com/q/18629780/3380131">here</a>:</p>  <pre><code>u8 = (uint8_t)(u8 + 2); u8 = (uint8_t)(u16 &gt;&gt; 8); </code></pre>  <p>In addition to this being ugly, I keep running into convincing evidence that casting is generally bad practice.</p>  <p>My questions:</p>  <ol> <li>Why is it bad to use typecasts in this way?</li> <li>Do I lose anything by simply omitting <code>-Wconversion</code> and letting the compiler do implicit conversions for me?</li> </ol>