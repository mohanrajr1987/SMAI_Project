<p>Consider:</p>  <pre><code>int32_t f() {   return 0x80000000; } </code></pre>  <p>Why doesn't that cause a compiler warning (at least on GCC)? 0x80000000 is out of the range of <code>int32_t</code> (<code>INT32_MAX</code> is <code>0x7fffffff</code>). I believe this should cause an implicit cast - is that correct?</p>  <p>Further consder:</p>  <pre><code>if (f() == 0x80000000)   foo(); </code></pre>  <p>The above causes no warning on GCC. However</p>  <pre><code>int32 ret = f(); if (ret == 0x80000000)    baz(); </code></pre>  <p>Causes "warning: comparison between signed and unsigned integer expressions". I believe this is because 0x80000000 has type <code>unsigned int</code> due to being out of <code>int</code>'s range. Is that correct? </p>  <p>Assuming none of my assumptions are wrong, why doesn't the first comparison cause a warning?</p>