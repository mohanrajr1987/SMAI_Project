<p>I just started with Extjs and I have few basic doubts.I have created a simple view(ScreenPropertiesPage) which has 1 select box and 1 custom view inside it. onchange of the select box value, view field is updated which is done in controller. I am done with creating view and controller which has listener for onchange select box value and updates associated view field.</p>  <p>But now the problem is : in my application I have to create 4  instances of ScreenPropertiesPage view and when onchange event is triggered from any views the textbox of 1st view is updated always. How to combine the event to specific view? What is the best procedure to combine controller and views and to reuse it(Even link to the documents from where I can learn controller view reusability is enough)?  Any help is greatly appreciated.</p>  <p>Code skeleton for view:</p>  <pre><code>Ext.define('Configurator.view.screenproperties.ScreenPropertiesPage', {     extend: 'Ext.container.Container',     alias: 'widget.screenpropertiespage',     requires: [         'Configurator.store.screenproperties.ScreenProperties'     ],     autoScroll: true,      config: {         overLayMode: false     },     initComponent: function () {         var me = this;         this.items = [{             xtype: 'container',             componentCls: 'screenComboSelectorPanel',             layout: {                 type: 'hbox',                 align: 'center',                 pack: 'center'             },             items: [{                 xtype: 'combo',                 store: Ext.create(                     'Configurator.store.screenproperties.ScreenProperties'                 ),                 itemId: 'screenSelector',                 margin: 3,                 width: 400,                 listConfig: {                     maxHeight: 200                 },                 fieldLabel: 'Screen Name',                 disabledCls: 'disabledBtn',                 disabled: me.getOverLayMode(),                 queryMode: 'local',                 emptyText: '-SELECT-',                 valueField: 'screenName',                 displayField: 'screenName',                 forceSelection: true,                 selectOnTab: true,                 autoSelect: true,                 height: 25,                 tpl: Ext.create('Ext.XTemplate',                     '&lt;tpl for="."&gt;',                     '&lt;div class="x-boundlist-item comboContainer "&gt;&lt;div class="rowExpanedrTextArea " style=""&gt;{screenName}   &lt;/div&gt;{[this.isExpandable(xkey,parent,values,xindex)]}&lt;/div&gt;',                     '&lt;/tpl&gt;'                 ),                 displayTpl: Ext.create('Ext.XTemplate',                     '&lt;tpl for="."&gt;',                     '{screenName}',                     '&lt;/tpl&gt;'                 )             }]         }, {             xtype: 'screenpropertieseditor',             itemId: 'messagesEditor',             margin: '25',             header: true,             frame: false,             border: true,             collectionName: 'messages',             title: 'Messages'         }]          me.callParent(arguments);     } }); </code></pre>  <p>When user changes the value in combobox I want to update the screenpropertieseditor type view.</p>  <p>Controller for view : </p>  <pre><code>Ext.define('Configurator.controller.ScreenProperties', {     extend: 'Ext.app.Controller',      refs: [{         ref: 'screenPropertiesPage',         selector: 'screenpropertiespage'     }, {         ref: 'screenSelector',         selector: 'screenpropertiespage combobox[itemId=screenSelector]'     }, {         ref: 'screenPropertiesMessagesEditor',         selector: 'screenpropertieseditor[itemId=messagesEditor]'     }, {         ref: 'screenPropertiesPage',         selector: 'screenpropertiespage'     }],      init: function (application) {         var me = this;         this.control({             'screenpropertiespage combobox[itemId=screenSelector]': {                 change: this.screenPropertiesPageStoreHandler             }         });     },      screenPropertiesPageStoreHandler: function (thisObj, eOpts) {         var messagesEditor = this.getScreenPropertiesMessagesEditor();         var screenSelector = this.getScreenSelector();         var screenSelected = screenSelector.getValue();         //Screen tile store first time loading handling         if (screenSelected === undefined) {             screenSelected = screenSelector.getStore().getAt(0).data.screenName;         }          var selectedRecord = screenSelector.getStore().findRecord(             'screenName',             screenSelected, 0, false, false, true);         if (selectedRecord != undefined) {             Ext.apply(messagesEditor, {                 'screenName': screenSelected             });             try {                 messagesEditor.bindStore(selectedRecord.messages());             } catch (e) {}         }     } }); </code></pre>  <p>ScreenPropertiesPage will hava lot more extra fields along with this. I have to create multiple instances of ScreenPropertiesPage. screenPropertiesPageStoreHandler method of Configurator.controller.ScreenProperties will be triggered whenever value changes in the combobox of any ScreenPropertiesPage view. But since my ref and selector in controller are not proper it always refers to the first ScreenPropertiesPage view.</p>