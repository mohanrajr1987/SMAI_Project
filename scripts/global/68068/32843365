<p>I have an object wich caches windows with all their internal structure (form, other ui elements). So when a user opens a window which has already been cached, it does create it from scratch, but takes if from cache and just show it like this:</p>  <pre><code>winCache[id_group].show(); </code></pre>  <p>So, for each <code>id_group</code>, there is a <code>window</code> which may be cached in <code>winCache</code>. The problem is that I want to reset a <code>form</code>, which is inside the <code>window</code>, and populate it with new data from database. I try to do it like this:</p>  <pre><code>if(winCache[id_group]){     winCache[id_group].removeListener('show');     winCache[id_group].addListener('show', function () {       populate_form(this, id_field); // &lt;-- this method retreives data from database     // and sets the form       });     winCache[id_group].show();   } else { // window was not cached and has to be created from scratch   var win = ...   win.show();   // ... some BIG procedure   winCache[id_group] = win; // next time it will be taken from cache } </code></pre>  <p>But the problem is, for some insane reason, <code>ExtJS</code> duplicates <code>show</code> listeners infinitely. So, for example, if I open <code>winCache[10]</code> seven times for the same <code>id_group</code> = <code>10</code>, but for different <code>id_field</code>s (id_field = 1, id_field = 2, ..., id_field = 7), then <code>show</code> listener will be triggered seven times - for each id_field. And that is incredible stupidity. So, my question is why <code>ExtJS</code> duplicates listeners? And why doesn't <code>removeListener</code> work???</p>