<p>I have a dataGrid whose cells contain commandLinks. Cliking on one link opens a popup which displays a selectOneRadio and a “Modify” commandLink.</p>  <p>In my backing bean, a select() method enables to preselect the item value corresponding to the cliked cell. A modifyItemValue() method saves the selected item value. </p>  <p>How can I get, in these methods, informations on the cliked item ?</p>  <p>I have tried to use f:param, but the parameters don’t have correct values (idIt = null , selectedItemValue = “”).</p>  <pre><code>&lt;p:panel&gt;         &lt;p:dataGrid layout="grid" value="#{ib.bloc.groups}" var="group" columns="#{ib.bloc.groupsSize}"&gt;             &lt;p:panel&gt;                    &lt;f:facet name="header"&gt;                     &lt;h:outputText value="#{group.name}"&gt;&lt;/h:outputText&gt;                 &lt;/f:facet&gt;                 &lt;p:dataGrid layout="grid" value="#{group.items}" var="item" columns="#{group.colNumber}"&gt;                      &lt;f:param name="idIt" value="#{item.id}" /&gt;                     &lt;f:param name="valIt" value="#{item.status}" /&gt;                     &lt;h:commandLink&gt;                         &lt;h:graphicImage value="/img/#{item.image.id}/#{item.image.type}"/&gt;                           &lt;rich:componentControl target="popup" operation="show" /&gt;                     &lt;/h:commandLink&gt;                 &lt;/p:dataGrid&gt;             &lt;/p:panel&gt;         &lt;/p:dataGrid&gt;         &lt;s:hasRole name="MODIFY"&gt;              &lt;rich:popupPanel id="popup" modal="true" autosized="true" resizeable="false" onmaskclick="#{rich:component('popup')}.hide()" onbeforeshow="#{ib.select()}"&gt;                 &lt;f:facet name="controls"&gt;                     &lt;h:outputLink value="#" onclick="#{rich:component('popup')}.hide();                             return false;"&gt;                      &lt;/h:outputLink&gt;                 &lt;/f:facet&gt;                 &lt;h:selectOneRadio id="valueItem" value="#{ib.selectedItemValue}" required="false" label="Valeur Item" class="radio" &gt;                     &lt;f:selectItem itemValue="0"     itemLabel="Normal"/&gt;                     &lt;f:selectItem itemValue="1"     itemLabel="Warning"/&gt;                     &lt;f:selectItem itemValue="2"     itemLabel="Error"/&gt;                 &lt;/h:selectOneRadio&gt;                 &lt;h:commandLink value="Modify" action="#{ib.modifyItemValue(ib.selectedItemValue)}"/&gt;             &lt;/rich:popupPanel&gt;         &lt;/s:hasRole&gt;  &lt;/p:panel&gt; </code></pre>  <p>the managed bean :</p>  <pre><code>@ManagedBean(name = "ib") @ViewScoped public class IndexBean implements Serializable {  private Bloc bloc; private String selectedItemValue; private String idIt; private String valIt;  @PostConstruct public void init() { // initialization of this.bloc }  private String getItemIdParam(FacesContext context) {     Map&lt;String, String&gt; parameters = context.getExternalContext().getRequestParameterMap();     return parameters.get("idIt"); }  private String getItemValueParam(FacesContext context) {     Map&lt;String, String&gt; parameters2 = context.getExternalContext().getRequestParameterMap();     return parameters2.get("valIt"); }  public void modifyItemValue(String itemValue) {      FacesContext context = FacesContext.getCurrentInstance();     this.idIt = getItemIdParam(context);     Jpa jpa = new Jpa();     jpa.modifyItemValue(idIt, itemValue); }  public void select() {     FacesContext context = FacesContext.getCurrentInstance();     this.valIt = getItemValueParam(context);     this.selectedItemValue = valIt; } // all getters/setters } </code></pre>