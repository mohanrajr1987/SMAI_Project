<p>I maintain a web application that have a page with the tag <code>&lt;f:event</code>. I have rewrote a method in a service class for it to throw a business exception. However, when the business exception is thrown, it isn't caught in managed bean and the exception is showed on the page. Seems that my code <code>try/catch</code> doesn't work.</p>  <p>In XHTML:</p>  <pre><code>&lt;f:event listener="#{resourceBean.init(enrollment)}" type="preRenderView" /&gt; </code></pre>  <p>Listener method in Managed Bean:</p>  <pre><code>private boolean canCreateResource;  public void init(Enrollment enrollment) {     (...)      try {         canCreateResource = resourceService.canCreateResource(enrollment);     } catch (BusinessException e) {         canCreateResource = false;     } } </code></pre>  <p>Method in service class:</p>  <pre><code>public boolean canCreateResource(Enrollment enrollment) {     if (...) {         if (mandateService.isCoordinator(user, course)) {             return true;         } else {             throw new BusinessException("Undefined business rule.");         }     }      return false; } </code></pre>  <p>From what I read on other sites, I suppose I have to implement some JSF's handler class. But which and how?</p>  <hr>  <p>EDITED</p>  <p>OBS 1: The <code>BusinessException</code> class extends <code>RuntimeException</code> class.</p>  <p>OBS 2: The attribute <code>canCreateResource</code> was created to control the render of a button.</p>