<p>This is my flow (simplified):</p>  <pre><code>&lt;view-state id="create" view="createCustomer.xhtml"&gt;     &lt;transition on="create" to="end"&gt;         &lt;evaluate expression="controller.validateCustomerFilled(customer)"/&gt;     &lt;/transition&gt; &lt;/view-state&gt;  &lt;end-state id="end" view="customerCreated.xhtml"&gt;     &lt;on-entry&gt;         &lt;evaluate expression="controller.createCustomer(customer)"/&gt;     &lt;/on-entry&gt; &lt;/end-state&gt; </code></pre>  <p>and my Facelet (also simplified):</p>  <pre><code>&lt;p:commandButton value="Test Ajax" action="create" update="content, messages"/&gt; &lt;p:commandButton value="Test No Ajax" action="create" ajax="false"/&gt; </code></pre>  <p>As long as "customerCreated.xhtml" doesn't contain a h:form, everything seems to work fine. But if it does exist, the following exception gets thrown:</p>  <pre><code>java.lang.IllegalStateException: The current state 'end' of this flow 'customer/create' is not a view state - view scope not accessible at org.springframework.webflow.engine.impl.FlowSessionImpl.getViewScope(FlowSessionImpl.java:119) at org.springframework.webflow.engine.impl.RequestControlContextImpl.getViewScope(RequestControlContextImpl.java:130) at org.springframework.faces.webflow.FlowResponseStateManager.saveState(FlowResponseStateManager.java:106) at org.springframework.faces.webflow.FlowResponseStateManager.getViewState(FlowResponseStateManager.java:100) at javax.faces.application.StateManager.getViewState(Unknown Source) at javax.faces.application.StateManagerWrapper.getViewState(Unknown Source) at com.sun.faces.context.PartialViewContextImpl.renderState(Unknown Source) at com.sun.faces.context.PartialViewContextImpl.processPartial(Unknown Source) at org.primefaces.context.PrimePartialViewContext.processPartial(PrimePartialViewContext.java:60) at javax.faces.context.PartialViewContextWrapper.processPartial(Unknown Source) at javax.faces.component.UIViewRoot.encodeChildren(Unknown Source) at javax.faces.component.UIComponent.encodeAll(Unknown Source) at com.sun.faces.application.view.FaceletViewHandlingStrategy.renderView(Unknown Source) at com.sun.faces.application.view.MultiViewHandler.renderView(Unknown Source) at javax.faces.application.ViewHandlerWrapper.renderView(Unknown Source) at com.sun.faces.lifecycle.RenderResponsePhase.execute(Unknown Source) at com.sun.faces.lifecycle.Phase.doPhase(Unknown Source) at com.sun.faces.lifecycle.LifecycleImpl.render(Unknown Source) at org.springframework.faces.support.LifecycleWrapper.render(LifecycleWrapper.java:54) at org.springframework.faces.webflow.JsfView.render(JsfView.java:87) at org.springframework.webflow.action.ViewFactoryActionAdapter.doExecute(ViewFactoryActionAdapter.java:40) at org.springframework.webflow.action.AbstractAction.execute(AbstractAction.java:188) at org.springframework.webflow.execution.ActionExecutor.execute(ActionExecutor.java:51) at org.springframework.webflow.engine.EndState.doEnter(EndState.java:100) at org.springframework.webflow.engine.State.enter(State.java:194) at org.springframework.webflow.engine.Transition.execute(Transition.java:228) at org.springframework.webflow.engine.impl.FlowExecutionImpl.execute(FlowExecutionImpl.java:395) at org.springframework.webflow.engine.impl.RequestControlContextImpl.execute(RequestControlContextImpl.java:214) at org.springframework.webflow.engine.TransitionableState.handleEvent(TransitionableState.java:116) at org.springframework.webflow.engine.Flow.handleEvent(Flow.java:547) at org.springframework.webflow.engine.impl.FlowExecutionImpl.handleEvent(FlowExecutionImpl.java:390) at org.springframework.webflow.engine.impl.RequestControlContextImpl.handleEvent(RequestControlContextImpl.java:210) at org.springframework.webflow.engine.ViewState.handleEvent(ViewState.java:231) at org.springframework.webflow.engine.ViewState.resume(ViewState.java:195) at org.springframework.webflow.engine.Flow.resume(Flow.java:537) at org.springframework.webflow.engine.impl.FlowExecutionImpl.resume(FlowExecutionImpl.java:259) at org.springframework.webflow.executor.FlowExecutorImpl.resumeExecution(FlowExecutorImpl.java:169) at org.springframework.webflow.mvc.servlet.FlowHandlerAdapter.handle(FlowHandlerAdapter.java:228) at org.springframework.faces.webflow.JsfFlowHandlerAdapter.handle(JsfFlowHandlerAdapter.java:57) at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959) at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893) at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970) at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872) at javax.servlet.http.HttpServlet.service(HttpServlet.java:595) at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846) at javax.servlet.http.HttpServlet.service(HttpServlet.java:668) at com.ibm.ws.webcontainer.servlet.ServletWrapper.service(ServletWrapper.java:1285) at com.ibm.ws.webcontainer.servlet.ServletWrapper.handleRequest(ServletWrapper.java:776) at com.ibm.ws.webcontainer.servlet.ServletWrapper.handleRequest(ServletWrapper.java:473) at com.ibm.ws.webcontainer.filter.WebAppFilterManager.invokeFilters(WebAppFilterManager.java:1143) at com.ibm.ws.webcontainer.servlet.CacheServletWrapper.handleRequest(CacheServletWrapper.java:81) at com.ibm.ws.webcontainer.WebContainer.handleRequest(WebContainer.java:927) at com.ibm.ws.webcontainer.osgi.DynamicVirtualHost$2.run(DynamicVirtualHost.java:262) at com.ibm.ws.http.dispatcher.internal.channel.HttpDispatcherLink$TaskWrapper.run(HttpDispatcherLink.java:955) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) at java.lang.Thread.run(Thread.java:744) </code></pre>  <p>This doesn't happen when using a regular h:commandButton without Ajax (when using f:ajax, simply nothing happens on the client side).</p>  <p>Using: - Spring 4.2.0 - Spring Webflow 2.4.2 - Primefaces 5.2 - Mojarra 2.2.9</p>