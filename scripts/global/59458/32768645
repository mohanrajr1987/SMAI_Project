<p>I have an issue with dependant selectonemenus in Primefaces datatables for which I haven't found an answer.  I assume others have had the same issue so there must be a solution for it.  What's going on is that when I edit a row in a data table then cancel the edit, whatever change I made to the first selectonemenu remains in the backing object and does not revert to its original value. Here are the steps to reproduce:</p>  <ol> <li>Open a row for editing</li> <li>change a value in the first column (you can verify that the second column list has changed.</li> <li>cancel the row edit</li> <li>The first column value does not revert to original</li> </ol>  <p>I think it has something to do with the ajax call to the backing bean's listener.  It's like the value is getting posted.  This is not desirable behavior.  Is there a fix for this?</p>  <p>I am including code samples below:</p>  <pre><code>&lt;html xmlns="http://www.w3.org/1999/xhtml"   xmlns:h="http://java.sun.com/jsf/html"   xmlns:f="http://java.sun.com/jsf/core"  xmlns:ui="http://java.sun.com/jsf/facelets"  xmlns:p="http://primefaces.org/ui"&gt;    &lt;f:view contentType="text/html"&gt; &lt;h:head&gt;       &lt;title&gt;         &lt;ui:insert name="title"&gt;Example One&lt;/ui:insert&gt;     &lt;/title&gt; &lt;/h:head&gt;    &lt;h:body&gt;     &lt;h:form id="form"&gt;         &lt;p:growl id="msgs" showDetail="true"/&gt;         &lt;p:messages/&gt;         &lt;p:dataTable id="editTable" var="item" value="#{exampleOne.items}" editable="true" scrollable="false" scrollHeight="350" rowIndexVar="rowIndex"&gt;             &lt;p:ajax event="rowEdit" listener="#{exampleOne.onRowEdit}" update=":form:msgs" /&gt;             &lt;p:ajax event="rowEditCancel" listener="#{exampleOne.onRowCancel}" update=":form:msgs" /&gt;             &lt;p:ajax event="rowEditInit" listener="#{exampleOne.onRowInit}" /&gt;              &lt;p:column headerText="Name" style="width: 100px;"&gt;                 &lt;p:cellEditor&gt;                     &lt;f:facet name="output"&gt;&lt;h:outputText value="#{item.name}"/&gt;&lt;/f:facet&gt;                     &lt;f:facet name="input"&gt;&lt;p:inputText id="tagId" value="#{item.name}" style="width:100%"/&gt;&lt;/f:facet&gt;                 &lt;/p:cellEditor&gt;             &lt;/p:column&gt;              &lt;p:column headerText="Column One" style="width: 200px;"&gt;                 &lt;p:cellEditor&gt;                     &lt;f:facet name="output"&gt;&lt;h:outputText value="#{item.columnOneValue}"/&gt;&lt;/f:facet&gt;                     &lt;f:facet name="input"&gt;                         &lt;p:selectOneMenu id="columnOneId" value="#{item.columnOneValue}" style="width:100%"&gt;                             &lt;p:ajax event="change" listener="#{exampleOne.onColumnOneChange}" update="columnTwoId" /&gt;                             &lt;f:selectItem itemLabel="Select Column One" itemValue="" noSelectionOption="true" /&gt;                             &lt;f:selectItems value="#{exampleOne.columnOneSelectItems}" var="columnOneSelectItem" itemLabel="#{columnOneSelectItem}" itemValue="#{columnOneSelectItem}"/&gt;                         &lt;/p:selectOneMenu&gt;                     &lt;/f:facet&gt;                 &lt;/p:cellEditor&gt;             &lt;/p:column&gt;              &lt;p:column headerText="Column Two" style="width: 125px;"&gt;                 &lt;p:cellEditor&gt;                     &lt;f:facet name="output"&gt;&lt;h:outputText value="#{item.columnTwoValue}"/&gt;&lt;/f:facet&gt;                     &lt;f:facet name="input"&gt;                         &lt;p:selectOneMenu id="columnTwoId" value="#{item.columnTwoValue}" style="width:100%"&gt;                             &lt;f:selectItem itemLabel="Select Column Two" itemValue="" noSelectionOption="true" /&gt;                             &lt;f:selectItems value="#{exampleOne.columnTwoSelectItems}" var="columnTwoSelectItem" itemLabel="#{columnTwoSelectItem}" itemValue="#{columnTwoSelectItem}"/&gt;                         &lt;/p:selectOneMenu&gt;                     &lt;/f:facet&gt;                 &lt;/p:cellEditor&gt;             &lt;/p:column&gt;              &lt;p:column headerText="Edit" style="width: 75px;"&gt;                 &lt;p:rowEditor /&gt;             &lt;/p:column&gt;           &lt;/p:dataTable&gt;     &lt;/h:form&gt; &lt;/h:body&gt; &lt;/f:view&gt; &lt;/html&gt;    package com.windhaven_consulting.breezy.controller.ui;  import java.io.Serializable; import java.util.ArrayList; import java.util.Collections; import java.util.HashMap; import java.util.List; import java.util.Map;  import javax.annotation.PostConstruct; import javax.faces.application.FacesMessage; import javax.faces.bean.ManagedBean; import javax.faces.bean.SessionScoped; import javax.faces.component.UIOutput; import javax.faces.context.FacesContext; import javax.faces.event.AjaxBehaviorEvent;  import org.apache.commons.lang3.StringUtils; import org.primefaces.event.RowEditEvent;  import com.windhaven_consulting.breezy.component.MountedBoard;  @ManagedBean @SessionScoped public class ExampleOne implements Serializable {  private List&lt;Item&gt; items = new ArrayList&lt;Item&gt;();  private List&lt;String&gt; columnOneSelectItems = new ArrayList&lt;String&gt;();  private Map&lt;String, List&lt;String&gt;&gt; columnOneToColumnTwoMap = new HashMap&lt;String, List&lt;String&gt;&gt;();  private List&lt;String&gt; columnTwoSelectItems;  /**  *   */ private static final long serialVersionUID = 1L;  @PostConstruct public void postConstruct() {     items.add(new Item("item 1", "Select One", "Select One A"));     items.add(new Item("item 2", "Select Two", "Select Two A"));     items.add(new Item("item 3", "Select Three", "Select Three A"));      columnOneSelectItems.add("Select One");     columnOneSelectItems.add("Select Two");     columnOneSelectItems.add("Select Three");      List&lt;String&gt; columnTwoSelectItems = new ArrayList&lt;String&gt;();     columnTwoSelectItems.add("Select One One");     columnTwoSelectItems.add("Select One Two");     columnTwoSelectItems.add("Select One Three");     columnOneToColumnTwoMap.put("Select One", columnTwoSelectItems);      columnTwoSelectItems = new ArrayList&lt;String&gt;();     columnTwoSelectItems.add("Select Two One");     columnTwoSelectItems.add("Select Two Two");     columnTwoSelectItems.add("Select Two Three");     columnOneToColumnTwoMap.put("Select Two", columnTwoSelectItems);      columnTwoSelectItems = new ArrayList&lt;String&gt;();     columnTwoSelectItems.add("Select Three One");     columnTwoSelectItems.add("Select Three Two");     columnTwoSelectItems.add("Select Three Three");     columnOneToColumnTwoMap.put("Select Three", columnTwoSelectItems); }  public void onRowInit(RowEditEvent event) { }  public void onRowEdit(RowEditEvent event) { }  public void onRowCancel(RowEditEvent event) { }  public void onColumnOneChange(final AjaxBehaviorEvent event) {     String selectedValue = (String) ((UIOutput) event.getSource()).getValue();      if(StringUtils.isNotEmpty(selectedValue)) {         columnTwoSelectItems = columnOneToColumnTwoMap.get(selectedValue);     }     else {         columnTwoSelectItems = Collections.emptyList();     } }  public List&lt;Item&gt; getItems() {     return items; }  public List&lt;String&gt; getColumnOneSelectItems() {     return columnOneSelectItems; }  public List&lt;String&gt; getColumnTwoSelectItems() {     return columnTwoSelectItems; } } </code></pre>