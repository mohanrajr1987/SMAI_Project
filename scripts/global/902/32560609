<p>I have a code that fetches some values in Java in a call passed from a JS file written in dojo. Below is the code:</p>  <pre><code>getDataFromConfig : function() {      var deferredObj=new dojo.Deferred();      if(!jsonForSearch)                          {         var serviceParams = new Object();         serviceParams.key="getLookUpConfigForSearch";         Request.invokePluginService("ClaimsPlugin", "ClaimsPluginService",         {             requestParams: serviceParams,             requestCompleteCallback: function(response) {                 if(response.Success == true)                 {                        jsonForSearch=response;                     debugger;                     deferredObj.callback(response);                 }                 else                 {                     globalThis.raiseException(response);                 }             }         });     }      if(jsonForSearch)         deferredObj.callback(jsonForSearch);     return deferredObj; } </code></pre>  <p><code>jsonForSearch</code> is a global variable which is used to check if it contains value and if yes then don't fetch the values again. Below is the code is used to call this function : </p>  <pre><code>this.getDataFromConfig().then(function() {          _this.doCustomStuff(kwArgs, field, containerNode, _this); }); </code></pre>  <p>But controls gets in <code>requestCompleteCallback</code> for lot many times. Is there a way to restrict this? I used deferred but it doesn't seem to be working properly.</p>