<p>I'm showing a dijit dialog whenever the selection changes in a dijit select.  The problem is that I get an "Uncaught Range Error: Maximum call stack exceeded" whenever the dialog is not manually closed (click the X in upper right corner of dialog) before making another selection in the dijit select.  I've tried hiding the dialog using the .hide() method prior to using the .show() method -- but I still get the same error.  Any ideas to prevent this error?</p>  <p>//template with select:</p>  <pre><code>    &lt;div&gt;     &lt;br /&gt;&lt;select name="selectMAS" style="width: 150px; height:20px;"                                     data-dojo-type="dijit/form/Select" data-dojo-attach-point="selectMAS"                      data-dojo-attach-event="onChange:MASChange"&gt;&lt;/select&gt; &lt;/div&gt; </code></pre>  <p>//code to open the dialog from select:</p>  <pre><code>MASChange: function (evt) { //show the dialog when the selection changes (content of the dialog changes with the selection) NSRF.NSRFDialog.show();//NSRF created in postcreate of class   } </code></pre>  <p>//Dialog template:</p>  <pre><code>&lt;div&gt;     &lt;div data-dojo-type="dijit/Dialog" title="New Service Request Form" data-dojo-attach-point="NSRFDialog" class="nonModal"&gt;         TEST &lt;/div&gt; &lt;/div&gt; </code></pre>  <p>//Dialog Code:</p>  <pre><code>define([   "dojo/_base/declare",   "dijit/_WidgetBase",   "dijit/_TemplatedMixin",   "dijit/_WidgetsInTemplateMixin",    "dojo/dom", "dojo/ready", "dojo/dom-style", "dojo/on",   "dojo/text!Templates/test.htm" ], function (declare, _WidgetBase, _TemplatedMixin, _WidgetsInTemplateMixin,     dom, ready, style, on,     NSRFTpl) {     return declare([_WidgetBase, _TemplatedMixin, _WidgetsInTemplateMixin], {         templateString: NSRFTpl,          postCreate: function () {          },         destroy: function () {              this.inherited(arguments);         },        showForm: function () {             //fill in some info in the form later         },       }); }); </code></pre>  <p>Thanks</p>  <p>looking at the call stack the error is occuring: Select.js</p>  <pre><code>    try {     this.focusNode.focus() } catch (a) {} }, focusChild: function(a) {         a &amp;&amp; this.set("value", a.option)     }, _getFirst: function() {         var a = this._getChildren();         return a.length ? a[0] : null     }, _getLast: function() {         var a = </code></pre>  <p>init.js</p>  <pre><code>    try {     a.focus() } catch (c) {} } })); b(function() {     var a = v.registerWin(r.get(document));     c("ie") &amp;&amp; d(window, "unload", function() {         a &amp;&amp; (a.remove(), a = null)     }) }); s.focus = function(a) {     v.focus(a) }; for (var w in v) /^_/.test(w) || (s.focus[w] = "function" == typeof v[w] ? g.hitch(v, w) : v[w]); v.watch(function(a, c, b) {     s.focus[a] = b }); return v }) }, "dijit/hccss": function() {     define(["dojo/dom-class", </code></pre>