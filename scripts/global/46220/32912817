<p>I'm looking for a way to whitelist fonts that pages in Chrome can use. In Firefox I would just simply disable <em>Allow pages to choose their own fonts, instead of my selections above</em> in content settings but Chrome seems to be keen on letting web designers force ugly and often unreadable fonts on us.</p>  <p>I don't want to use <code>* { font-family: sans; }</code> style in Stylish, because I want to keep sans (or serif) and monospace sections, and web designers, insane as they are, usually keep those at the end of the <code>font-family</code> list.</p>  <p>I've done my research and I still can't figure out how to do it via Chrome extension API.</p>  <p>I considered intercepting requests for CSS files and modifying them in response but this isn't possible via current API.</p>  <p>I could also traverse the DOM tree, inspect CSS on each node and replace it appropriately but it'd expensive. Moreover this wouldn't work for pages which build the content from JavaScript. So I'd have to use <code>MutationObserver</code>s and that would be way too expensive.</p>  <p>If I could somehow read CSS files that the current tab is using, I could collect the rules with <code>font-family</code> style and inject appropriate <code>&lt;style&gt;</code> element into the page via content script. But I couldn't find a way to read those CSS file via current API. (I'd also have to read <code>&lt;style&gt;</code> rules embedded in HTML but that's doable).</p>  <p>I could also do it via some proxy but I'm not sure how to (securely) cope with SSL.</p>  <p>I could get close with fontconfig. It gets rid of Arial but doesn't work for external (and usually most ugly) CSS fonts.</p>  <p><strong>Is it possible to achieve my goal via current Chrome extension API? How? If not, what would be the workaround?</strong></p>  <p>I don't care about inline styles and styles set from JavaScript. I can live with those. Vast majority of pages I'm concerned about use styles from external stylesheets.</p>  <p><strong>EDIT</strong></p>  <p>wOxxOm's advice to modify <code>document.styleSheets</code> is the way to do it and I've made a simple extension that worked on <s>all</s> sites! Unfortunately, in current Chrome, <code>CSSStyleSheet#cssRules</code> returns <code>null</code> for stylesheets loaded outside of page origin <a href="https://code.google.com/p/chromium/issues/detail?id=45786" rel="nofollow">https://code.google.com/p/chromium/issues/detail?id=45786</a>. T_T</p>  <p>(I'll of course publish the extension on GitHub and post the link here after I polish it).</p>  <p><strong>EDIT 2</strong></p>  <p>As wOxxOm suggested, blocking web fonts is also an option (though less ideal I'd say) and there even exist good open source extension for it <a href="https://chrome.google.com/webstore/detail/disable-web-fonts/olmabeadgbpmhllgdkemfdnmkngkbkeg" rel="nofollow">https://chrome.google.com/webstore/detail/disable-web-fonts/olmabeadgbpmhllgdkemfdnmkngkbkeg</a>. It needs some white list for iconic fonts though. Local fonts can then be managed via fontconfig.</p>  <p>This issue is probably related to ugly looking web fonts <a href="https://code.google.com/p/chromium/issues/detail?id=173207" rel="nofollow">https://code.google.com/p/chromium/issues/detail?id=173207</a>.</p>  <p><strong>EDIT 3</strong></p>  <p>I ended up with this nice (and open source) extension <a href="https://chrome.google.com/webstore/detail/font-blocker/knpgaobajhnhgkhhoopjepghknapnikl" rel="nofollow">https://chrome.google.com/webstore/detail/font-blocker/knpgaobajhnhgkhhoopjepghknapnikl</a>. It's a blacklist but that's enough for my needs and it works with iconic fonts. As far as I can tell, to implement a font whitelist extension I'd have to be able to enumerate all fonts loaded by a web page and that appears to be impossible in current Chrome (see first edit).</p>