<p>While running jboss with quartz job it's shows <code>**service.exception.UserServiceException: No jobs in STARTED state found as well. Needs attention! It should not ideally happen where no SUCCESS or STARTED jobs were found. One of them must exist!</code>**I don't know ,why this is happening...How to find the solution? In this start job only it shows an exception..</p>  <p>Here <strong>SchedulerData is Bussiness object</strong></p>  <pre><code>  @Override             @Transactional(propagation = Propagation.REQUIRES_NEW)             public SchedulerData startJob() throws UserServiceException {                 log.info("********************************************************************************");                 log.info("Current Reminder  Job kicked off from node " + SERVER_NODE_NAME);                 log.info("********************************************************************************");                  if (null == SERVER_NODE_NAME) {                     throw new UserServiceException("Server node name cannot be null. Aborting job process!");                 }                  int jobLock = IRingeeConstants.JOB_LOCK_NO;                  try {                     // Fetching last successful job                     SchedulerData schedulerData = reminderJobDAOImpl.findLastSuccessfulJob(jobLock);                     if (schedulerData != null) {                         log.info("Last Successful Run's Scheduler Data: " + schedulerData.toString());                     }                      // If no last successful job then check for job failure                     if (null == schedulerData) {                         List&lt;SchedulerData&gt; schedulerDataList = reminderJobDAOImpl.checkForFailedJob();                         if (null != schedulerDataList &amp;&amp; schedulerDataList.size() == 1) {                             // getting failed scheduler data                             SchedulerData failedSchedulerData = schedulerDataList.get(0);                             log.info("Failed Scheduler Data: " + failedSchedulerData.toString());                             String previousNodeName = failedSchedulerData.getNodeName();                              // Scenario 1: if it is the same node that failed last time,                             // then mark job status to "FAILED"                             if (SERVER_NODE_NAME.equalsIgnoreCase(previousNodeName)) {                                 log.info("Job failed from the same node " + previousNodeName + " last time.");                                 log.info("Changing the status of failedSchedulerData to " + IRingeeConstants.JOB_FAILED);                                 failedSchedulerData.setJobStatus(IRingeeConstants.JOB_FAILED);                                 reminderJobDAOImpl.updateScheduler(failedSchedulerData);                                 // Scenario 2: Job was started by another node and may                                 // or may not be currently running                             } else if (null != failedSchedulerData &amp;&amp; !SERVER_NODE_NAME.equalsIgnoreCase(previousNodeName)) {                                 log.warn("Job was started by " + previousNodeName + " and may currently be running");                                 log.warn("Current run from node " + SERVER_NODE_NAME + " didn't exectue. Either previous job from node " + previousNodeName + " failed, or  is currently in progress");                                 // throws node failure exception                                 throw new UserServiceException("Current run from node " + SERVER_NODE_NAME + " didn't exectue. Either previous job from node " + previousNodeName                                         + " failed, or  is currently in progress");                             }                         } else if (null != schedulerDataList &amp;&amp; schedulerDataList.size() &gt; 1) {                             // throws node failure exception                             throw new UserServiceException("Multiple nodes are in STARTED state. Aborting job exectuion at node " + SERVER_NODE_NAME);                         } else if (null == schedulerDataList || (null != schedulerDataList &amp;&amp; schedulerDataList.size() == 0)) {                             // throws node failure exception      **HERE ONLY IT THROWS AN EXCEPTION**                             throw new UserServiceException(                                     "No jobs in STARTED state found as well. Needs attention! It should not ideally happen where no SUCCESS or STARTED jobs were found. One of them must exist!");                         }                     }                     // Insert new record                     return insertNextJob();                 } catch (UserDataException updDataExp) {                     throw new UserServiceException(" error while starting the job", updDataExp);                 }             } </code></pre>  <p>This is my log</p>  <pre><code>DEBUG [org.quartz.core.JobRunShell] (scheduler_Worker-1) Calling execute on job DEFAULT.reminderJob 13:00:00,018 INFO  [com.ringeeapp.web.job.ReminderTask] (scheduler_Worker-1) inside the reminder task 13:00:00,020 INFO  [com.ringeeapp.web.job.ReminderTask] (scheduler_Worker-1)  todays date ==== Sat Oct 03 13:00:00 IST 2015 13:00:00,023 INFO  [com.ringeeapp.service.util.SendReminderMessageProcessImpl] (scheduler_Worker-1) ******************************************************************************** 13:00:00,026 INFO  [com.ringeeapp.service.util.SendReminderMessageProcessImpl] (scheduler_Worker-1) Current Reminder  Job kicked off from node ringeeapp001 13:00:00,030 INFO  [com.ringeeapp.service.util.SendReminderMessageProcessImpl] (scheduler_Worker-1) ******************************************************************************** 13:00:00,037 DEBUG [org.springframework.jdbc.core.JdbcTemplate] (scheduler_Worker-1) Executing prepared SQL query 13:00:00,040 DEBUG [org.springframework.jdbc.core.JdbcTemplate] (scheduler_Worker-1) Executing prepared SQL statement [ SELECT REMINDER_JOB_ID, LAST_RUN_TIME, REC_PROCESSED, NODE_NAME, JOB_STATUS, JOB_LOCK, ERROR_DESC FROM  REMINDER_JOB   WHERE JOB_STATUS =  ? AND JOB_LOCK = ?  FOR UPDATE ] 13:00:00,052 DEBUG [org.springframework.jdbc.datasource.DataSourceUtils] (scheduler_Worker-1) Fetching JDBC Connection from DataSource 13:00:00,055 DEBUG [org.jboss.jca.core.connectionmanager.pool.strategy.OnePool] (scheduler_Worker-1) MySqlDS: getConnection(null, null) [1/20] 13:00:00,071 DEBUG [org.springframework.jdbc.datasource.DataSourceUtils] (scheduler_Worker-1) Returning JDBC Connection to DataSource 13:00:00,074 DEBUG [org.jboss.jca.core.connectionmanager.pool.strategy.OnePool] (scheduler_Worker-1) MySqlDS: returnConnection(609ed771, false) [1/19] 13:00:00,079 INFO  [com.ringeeapp.dataaccess.util.ReminderJobDAOImpl] (scheduler_Worker-1)  No previous job found with the JOB_STATUS =  SUCCESS and  JOB_LOCK = 0 13:00:00,083 DEBUG [org.springframework.jdbc.core.JdbcTemplate] (scheduler_Worker-1) Executing prepared SQL query 13:00:00,085 DEBUG [org.springframework.jdbc.core.JdbcTemplate] (scheduler_Worker-1) Executing prepared SQL statement [ SELECT REMINDER_JOB_ID, LAST_RUN_TIME, REC_PROCESSED, NODE_NAME, JOB_STATUS, JOB_LOCK, ERROR_DESC  FROM REMINDER_JOB WHERE JOB_STATUS = ? ] 13:00:00,090 DEBUG [org.springframework.jdbc.datasource.DataSourceUtils] (scheduler_Worker-1) Fetching JDBC Connection from DataSource 13:00:00,094 DEBUG [org.jboss.jca.core.connectionmanager.pool.strategy.OnePool] (scheduler_Worker-1) MySqlDS: getConnection(null, null) [1/20] 13:00:00,099 DEBUG [org.springframework.jdbc.datasource.DataSourceUtils] (scheduler_Worker-1) Returning JDBC Connection to DataSource 13:00:00,101 DEBUG [org.jboss.jca.core.connectionmanager.pool.strategy.OnePool] (scheduler_Worker-1) MySqlDS: returnConnection(609ed771, false) [1/19] 13:00:00,104 INFO  [com.ringeeapp.dataaccess.util.ReminderJobDAOImpl] (scheduler_Worker-1) SchedulerData: [] 13:00:00,107 ERROR [stderr] (scheduler_Worker-1) com.ringeeapp.service.exception.UserServiceException: No jobs in STARTED state found as well. Needs attention! It should not ideally happen where no SUCCESS or STARTED jobs were found. One of them must exist!  13:00:00,111 ERROR [stderr] (scheduler_Worker-1)    at com.ringeeapp.service.util.SendReminderMessageProcessImpl.startJob(SendReminderMessageProcessImpl.java:153)  13:00:00,114 ERROR [stderr] (scheduler_Worker-1)    at com.ringeeapp.web.job.ReminderTask.StartJob(ReminderTask.java:41)  13:00:00,117 ERROR [stderr] (scheduler_Worker-1)    at com.ringeeapp.web.job.ReminderJob.executeInternal(ReminderJob.java:32)  13:00:00,120 ERROR [stderr] (scheduler_Worker-1)    at org.springframework.scheduling.quartz.QuartzJobBean.execute(QuartzJobBean.java:75)  13:00:00,123 ERROR [stderr] (scheduler_Worker-1)    at org.quartz.core.JobRunShell.run(JobRunShell.java:202)  13:00:00,125 ERROR [stderr] (scheduler_Worker-1)    at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573) </code></pre>