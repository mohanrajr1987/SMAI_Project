<p>I can't seem to find a way to (wondering if it is indeed possible) to perform a LINQ query on the DBContext giving only items that are not marked for deletion.</p>  <p>e.g.</p>  <pre><code>// Mark one or more items in the DBContext for deletion. (from di in DbContext.DeliveryItems where di.Id == myId select di).ToList().ForEach(di =&gt; this.Context.DeleteObject(di)); </code></pre>  <p>Can I then perform a query that will ignore the deleted objects (without of course having to fire a SaveChanges())?</p>  <pre><code>decimal? weight = (from s in this.Context.Stocks                    where di.Id == myId                    select s.GrossWeight).Sum(); </code></pre>  <p>i.e. I only want the sum of weights for stock entities that have not been marked for deletion.</p>  <p><strong>EDIT:</strong> Couldn't get ChangeTracker() reference working so ended up doing the following...</p>  <pre><code>List&lt;int&gt; deletedDeliveryItems = this.Context.ObjectStateManager.GetObjectStateEntries(System.Data.EntityState.Deleted)                                  .Where(x =&gt; x.EntityKey.EntitySetName == "DeliveryItems")                                  .Select(x =&gt; ((DeliveryItem)x.Entity).Id).ToList();  decimal? sumWeightOfDeletedDeliveryItems = (from s in DbContext.Stocks                                             where deletedDeliveryItems.Count &gt; 0 &amp;&amp;                                             deletedDeliveryItems.Contains(s.Id)                                             select s.GrossWeight).Sum(); </code></pre>