<p>UPDATE : 09/03/15</p>  <p>Ok, I tried to do a .Join instead: </p>  <pre><code>    [System.Web.Http.HttpGet]     public IQueryable&lt;RunOfferPublish&gt; RunOfferPublishes()     {         var showIds = _showSecurityCache.GetRunIdsForCurrentUser().AsEnumerable();         return Context.RunOfferPublishes.Join(showIds, r =&gt; r.RunOffer.Run.showId, i =&gt; i, (r, i) =&gt; r);     } </code></pre>  <p>I get another exception saying that my query is nested to deep. I made a method to reduce the nesting and get the runIds instead. However, there's much more ids..</p>  <pre><code>    [System.Web.Http.HttpGet]     public IQueryable&lt;RunOfferPublish&gt; RunOfferPublishes()     {         var runIds = _showSecurityCache.GetRunIdsForCurrentUser().AsEnumerable();         return Context.RunOfferPublishes.Join(runIds, r =&gt; r.RunOffer.RunId, i =&gt; i, (r, i) =&gt; r);     } </code></pre>  <p>I get a stackoverflow exception, there's to much runs. </p>  <p>Then I tried to remove get a liste of all the entities, and do the where in memory. Like this:</p>  <pre><code>    [System.Web.Http.HttpGet]     public IQueryable&lt;RunOfferPublish&gt; RunOfferPublishes()     {         var showIds = _showSecurityCache.GetShowIdsForCurrentUser();         var list = Context.RunOfferPublishes.ToList();         return list.Where(i =&gt; showIds.Contains(i.RunOffer.Run.ShowId)).AsQueryable();     } </code></pre>  <p>This "works", it returns the list of entities. However, I get an issue with Breeze </p>  <blockquote>   <p>'System.Linq.EnumerableQuery' does not contain a definition for 'Include'</p> </blockquote>  <pre><code>at CallSite.Target(Closure , CallSite , Object , String ) at System.Dynamic.UpdateDelegates.UpdateAndExecute2[T0,T1,TRet](CallSite site, T0 arg0, T1 arg1) at CallSite.Target(Closure , CallSite , Object , String ) at Breeze.WebApi.QueryHelper.&lt;&gt;c__DisplayClass14.&lt;ApplyExpand&gt;b__11(String expand) at System.Collections.Generic.List`1.ForEach(Action`1 action) at Breeze.WebApi.QueryHelper.ApplyExpand(IQueryable queryable, String expandsQueryString) at Breeze.WebApi.QueryHelper.ApplySelectAndExpand(IQueryable queryable, NameValueCollection map) at Breeze.WebApi.BreezeQueryableAttribute.OnActionExecuted(HttpActionExecutedContext actionExecutedContext) at System.Web.Http.Filters.ActionFilterAttribute.CallOnActionExecuted(HttpActionContext actionContext, HttpResponseMessage response, Exception exception) at System.Web.Http.Filters.ActionFilterAttribute.&lt;&gt;c__DisplayClass2.&lt;System.Web.Http.Filters.IActionFilter.ExecuteActionFilterAsync&gt;b__0(HttpResponseMessage response) at System.Threading.Tasks.TaskHelpersExtensions.&lt;&gt;c__DisplayClass41`2.&lt;Then&gt;b__40(Task`1 t) at System.Threading.Tasks.TaskHelpersExtensions.ThenImpl[TTask,TOuterResult](TTask task, Func`2 continuation, CancellationToken cancellationToken, Boolean runSynchronously) </code></pre>  <p>Thus, I'm still stuck. </p>  <p>----- Issue Update Above ----</p>  <p>I'm trying to investigate an issue with this controller method:</p>  <pre><code>        [System.Web.Http.HttpGet]         public IQueryable&lt;RunOfferPublish&gt; RunOfferPublishes()         {         var showIds = _showSecurityCache.GetShowIdsForCurrentUser();         var query = Context.RunOfferPublishes.Where(rop =&gt; showIds.Contains(rop.RunOffer.Run.ShowId)).AsQueryable();         return query;     } </code></pre>  <p>The showIds array is a list of 212 small integers (0 to 212). The RunOfferPublishes is a table in the DBContext (Context)</p>  <p>If I removed the .Where the query is working but it throws an outof memory exception with it. I tried to see what the generated SQL was but I believe it does not reach this point because I don't see it through the SQL Profiler.</p>  <p>The exception : </p>  <pre><code>System.OutOfMemoryException: Exception of type 'System.OutOfMemoryException'  was thrown. at System.Collections.Generic.List`1.set_Capacity(Int32 value) at System.Collections.Generic.List`1.EnsureCapacity(Int32 min) at System.Collections.Generic.List`1.InsertRange(Int32 index, IEnumerable`1 collection) at System.Collections.Generic.List`1.AddRange(IEnumerable`1 collection) at System.Data.Query.PlanCompiler.CTreeGenerator.VisitBinaryJoin(Node joinNode, DbExpressionKind joinKind) at System.Data.Query.PlanCompiler.CTreeGenerator.Visit(LeftOuterJoinOp op, Node n) at System.Data.Query.InternalTrees.LeftOuterJoinOp.Accept[TResultType](BasicOpVisitorOfT`1 v, Node n) at System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.VisitNode(Node n) at System.Data.Query.PlanCompiler.CTreeGenerator.VisitAsRelOp(Node inputNode) at System.Data.Query.PlanCompiler.CTreeGenerator.VisitJoinInput(Node joinInputNode) at System.Data.Query.PlanCompiler.CTreeGenerator.VisitBinaryJoin(Node joinNode, DbExpressionKind joinKind) at System.Data.Query.PlanCompiler.CTreeGenerator.Visit(LeftOuterJoinOp op, Node n) at System.Data.Query.InternalTrees.LeftOuterJoinOp.Accept[TResultType](BasicOpVisitorOfT`1 v, Node n) at System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.VisitNode(Node n) at System.Data.Query.PlanCompiler.CTreeGenerator.VisitAsRelOp(Node inputNode) at System.Data.Query.PlanCompiler.CTreeGenerator.VisitJoinInput(Node joinInputNode) at System.Data.Query.PlanCompiler.CTreeGenerator.VisitBinaryJoin(Node joinNode, DbExpressionKind joinKind) at System.Data.Query.PlanCompiler.CTreeGenerator.Visit(LeftOuterJoinOp op, Node n) at System.Data.Query.InternalTrees.LeftOuterJoinOp.Accept[TResultType](BasicOpVisitorOfT`1 v, Node n) at System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.VisitNode(Node n) at System.Data.Query.PlanCompiler.CTreeGenerator.VisitAsRelOp(Node inputNode) at System.Data.Query.PlanCompiler.CTreeGenerator.VisitJoinInput(Node joinInputNode) at System.Data.Query.PlanCompiler.CTreeGenerator.VisitBinaryJoin(Node joinNode, DbExpressionKind joinKind) at System.Data.Query.PlanCompiler.CTreeGenerator.Visit(LeftOuterJoinOp op, Node n) at System.Data.Query.InternalTrees.LeftOuterJoinOp.Accept[TResultType](BasicOpVisitorOfT`1 v, Node n) at System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.VisitNode(Node n) at System.Data.Query.PlanCompiler.CTreeGenerator.VisitAsRelOp(Node inputNode) at System.Data.Query.PlanCompiler.CTreeGenerator.VisitJoinInput(Node joinInputNode) at System.Data.Query.PlanCompiler.CTreeGenerator.VisitBinaryJoin(Node joinNode, DbExpressionKind joinKind) at System.Data.Query.PlanCompiler.CTreeGenerator.Visit(LeftOuterJoinOp op, Node n) at System.Data.Query.InternalTrees.LeftOuterJoinOp.Accept[TResultType](BasicOpVisitorOfT`1 v, Node n) at System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.VisitNode(Node n) at System.Data.Query.PlanCompiler.CTreeGenerator.VisitAsRelOp(Node inputNode) at System.Data.Query.PlanCompiler.CTreeGenerator.VisitJoinInput(Node joinInputNode) at System.Data.Query.PlanCompiler.CTreeGenerator.VisitBinaryJoin(Node joinNode, DbExpressionKind joinKind) at System.Data.Query.PlanCompiler.CTreeGenerator.Visit(LeftOuterJoinOp op, Node n) at System.Data.Query.InternalTrees.LeftOuterJoinOp.Accept[TResultType](BasicOpVisitorOfT`1 v, Node n) at System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.VisitNode(Node n) at System.Data.Query.PlanCompiler.CTreeGenerator.VisitAsRelOp(Node inputNode) at System.Data.Query.PlanCompiler.CTreeGenerator.VisitJoinInput(Node joinInputNode) at System.Data.Query.PlanCompiler.CTreeGenerator.VisitBinaryJoin(Node joinNode, DbExpressionKind joinKind) at System.Data.Query.PlanCompiler.CTreeGenerator.Visit(LeftOuterJoinOp op, Node n) at System.Data.Query.InternalTrees.LeftOuterJoinOp.Accept[TResultType](BasicOpVisitorOfT`1 v, Node n) at System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.VisitNode(Node n) at System.Data.Query.PlanCompiler.CTreeGenerator.VisitAsRelOp(Node inputNode) at System.Data.Query.PlanCompiler.CTreeGenerator.Visit(FilterOp op, Node n) at System.Data.Query.InternalTrees.FilterOp.Accept[TResultType](BasicOpVisitorOfT`1 v, Node n) at System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.VisitNode(Node n) at System.Data.Query.PlanCompiler.CTreeGenerator.VisitAsRelOp(Node inputNode) at System.Data.Query.PlanCompiler.CTreeGenerator.BuildProjection(Node relOpNode, IEnumerable`1 projectionVars) at System.Data.Query.PlanCompiler.CTreeGenerator.Visit(PhysicalProjectOp op, Node n) at System.Data.Query.InternalTrees.PhysicalProjectOp.Accept[TResultType](BasicOpVisitorOfT`1 v, Node n) at System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.VisitNode(Node n) at System.Data.Query.PlanCompiler.CTreeGenerator..ctor(Command itree, Node toConvert) at System.Data.Query.PlanCompiler.ProviderCommandInfoUtils.Create(Command command, Node node, List`1 children) at System.Data.Query.PlanCompiler.CodeGen.Process(List`1&amp; childCommands, ColumnMap&amp; resultColumnMap, Int32&amp; columnCount) at System.Data.Query.PlanCompiler.PlanCompiler.Compile(List`1&amp; providerCommands, ColumnMap&amp; resultColumnMap, Int32&amp; columnCount, Set`1&amp; entitySets) at System.Data.EntityClient.EntityCommandDefinition..ctor(DbProviderFactory storeProviderFactory, DbCommandTree commandTree) at System.Data.EntityClient.EntityProviderServices.CreateCommandDefinition(DbProviderFactory storeProviderFactory, DbCommandTree commandTree) at System.Data.EntityClient.EntityProviderServices.CreateDbCommandDefinition(DbProviderManifest providerManifest, DbCommandTree commandTree)  at System.Data.Common.DbProviderServices.CreateCommandDefinition(DbCommandTree commandTree)  at  System.Data.Objects.Internal.ObjectQueryExecutionPlan.Prepare(ObjectContext context, DbQueryCommandTree tree, Type elementType, MergeOption mergeOption, Span span, ReadOnlyCollection`1 compiledQueryParameters, AliasGenerator aliasGenerator)  at System.Data.Objects.ELinq.ELinqQueryState.GetExecutionPlan(Nullable`1 forMergeOption)  at System.Data.Objects.ObjectQuery.ToTraceString()  at System.Data.Entity.Internal.Linq.InternalQuery`1.ToString()  at System.Data.Entity.Infrastructure.DbQuery`1.ToString()  at ******************MainController.RunOfferPublishes() in  </code></pre>