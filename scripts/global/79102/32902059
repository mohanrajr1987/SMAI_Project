<p>I am using Parse as the backend for an app I'm working on. I was wondering if there is an optimal algorithm to query for only 'unseen' new objects. </p>  <p>What I am planning on doing is something like adding a user to the viewed object's relation and later querying all objects to check for the absence of the user. This seems to be O(n* all users who have seen an 'n') complexity which is a bit too much.</p>  <p>Another way to do this is to add the object to a user's key 'seen' and to then query for all objects the user has not seen. </p>  <p>Maybe a much more efficient way could be (assuming I view these objects chronologically) is to mark the first and last objects I see, and only show ones before or after those points using the createdAt key. Then I guess to show new objects outward from those points to not have to divide into multiple queries.</p>  <p>Ideally I'd like to shuffle through the objects, but I also would like to keep this algorithm as efficient as possible.</p>