<p>I have a case where I have 2 edittext email and password. When any one gets focus say email the hint moves up and becomes the heading. In this animation i translate the textview(hint) up and at the same time scale it down to 0.8f.  At the same time the second textview say password looses focus, if its still empty i want to reverse the animation and put back the heading as hint. To sum up hint moves up as heading and gets back to hint position if the edittext remains empty. I have two different animation set for both the editText views, they work well individually but on parallel execution one of them doesnt show up instead the hint becomes invisible. </p>  <p>My code is as follows :</p>  <pre><code>email.setOnFocusChangeListener(new View.OnFocusChangeListener() {         @Override         public void onFocusChange(View view, boolean b) {                if(b &amp;&amp; emailAnimated==false){                 Log.d("email1", "called");                  AnimationSet animSet = new AnimationSet(true);                 animSet.setFillAfter(true);                 animSet.setFillEnabled(true);                 animSet.setDuration(800);                 TranslateAnimation translate = new TranslateAnimation(0, 0, 0, -60);                 animSet.addAnimation(translate);                 ScaleAnimation scale = new ScaleAnimation(1f, 0.8f, 1f, 0.8f);                 animSet.addAnimation(scale);                 emailText.startAnimation(animSet);                 emailAnimated=true;             }else if(emailAnimated==true)             {                 Log.d("email2", "called");                  AnimationSet animSet = new AnimationSet(true);                 animSet.setFillAfter(true);                 animSet.setFillEnabled(true);                 animSet.setDuration(800);                 TranslateAnimation translate = new TranslateAnimation(0, 0, 0, -60);                 animSet.addAnimation(translate);                 ScaleAnimation scale = new ScaleAnimation(1f, 0.8f, 1f, 0.8f);                 animSet.addAnimation(scale);                 //Reverse the animation if losses focus                  animSet.setInterpolator(new ReverseInterpolator());                 emailText.startAnimation(animSet);                 emailAnimated=false;              }         }     });      password.setOnFocusChangeListener(new View.OnFocusChangeListener() {         @Override         public void onFocusChange(View view, boolean b) {              if(b &amp;&amp; passwordAnimated==false){                 Log.d("pass1", "called");                  AnimationSet animSet = new AnimationSet(true);                 animSet.setFillAfter(true);                 animSet.setFillEnabled(true);                 animSet.setDuration(800);                 TranslateAnimation translate = new TranslateAnimation(0, 0, 0, -60);                 animSet.addAnimation(translate);                 ScaleAnimation scale = new ScaleAnimation(1f, 0.8f, 1f, 0.8f);                 animSet.addAnimation(scale);                  passwordText.startAnimation(animSet);                 passwordAnimated=true;             }             else if(passwordAnimated==true)             {                 Log.d("pass2", "called");                  AnimationSet animSet = new AnimationSet(true);                 animSet.setFillAfter(true);                 animSet.setFillEnabled(true);                 animSet.setDuration(800);                 TranslateAnimation translate = new TranslateAnimation(0, 0, 0, -60);                 animSet.addAnimation(translate);                 ScaleAnimation scale = new ScaleAnimation(1f, 0.8f, 1f, 0.8f);                 animSet.addAnimation(scale);                 animSet.setInterpolator(new ReverseInterpolator());                  passwordText.startAnimation(animSet);                 passwordAnimated=false;             }            }     });  </code></pre>  <p>Just to make it more understandable, else if condition of email will be called whenever if condition of password is true and vies versa and thats how 2 animation sets are called.</p>