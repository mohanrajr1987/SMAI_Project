<p>I am trying to pass the hour and minute from an EditText string into a calendar object and then put the hour and minute into a Bundle to be to set to a TimePickerFragment.  The string is from a previously selected time that the user enters on the EditText line.  I split the string into hour and minute parts using "Integer.parseInt".  When I run, I get "Invalid int: "07PM" [which are the minutes from 5:07 PM for example].  Additional error lines say "at java.lang.Integer.invalidInt at java.lang.Integer.parse at java.lang.Integer.parseInt."  Is the parse not working because the "PM" is being included in the split?  Any other ideas on what is causing the problem?</p>  <p>Activity file:</p>  <pre><code>{  Calendar tcal = Calendar.getInstance();    String timeStr = gEditText.getText().toString().replace(" ", "");    String[]timeParts = timeStr.split(":");               tcal.set(Calendar.HOUR, Integer.parseInt(timeParts[0]));               tcal.set(Calendar.MINUTE, Integer.parseInt(timeParts[1]));               Bundle timebundle = new Bundle();               timebundle.putInt("hour", tcal.get(Calendar.HOUR));               timebundle.putInt("minute", tcal.get(Calendar.MINUTE)); } </code></pre>  <p>TimePicker file:</p>  <pre><code>public class TimePickerFragment extends DialogFragment implements TimePickerDialog.OnTimeSetListener { public Dialog onCreateDialog(Bundle savedInstanceState) { if (getArguments() != null) {     cal = Calendar.getInstance();     hour = getArguments().getInt("hour");     minute = getArguments().getInt("minute");     cal.set(Calendar.HOUR, Calendar.MINUTE); } TimePickerDialog dialog = new TimePickerDialog(getActivity(), this , hour, minute, false); dialog.setTitle("Select a Due Time"); return dialog; }    public void onTimeSet(TimePicker view, int hourOfDay, int minute) { txtTime = (EditText) getActivity().getWindow().getDecorView().getRootView().findViewById(R.id.GEditText); String AM_PM = "";  Calendar displaytime = Calendar.getInstance(); displaytime.set(Calendar.HOUR_OF_DAY, hourOfDay); displaytime.set(Calendar.MINUTE, minute);  if (displaytime.get(Calendar.AM_PM) == Calendar.AM)     AM_PM = "AM";  else if (displaytime.get(Calendar.AM_PM) == Calendar.PM)     AM_PM = "PM";  String minuteString; if (minute &lt; 10)     minuteString = "0" + minute; else     minuteString = "" + minute;  String hours = (displaytime.get(Calendar.HOUR)== 0) ? "12" :    displaytime.get(Calendar.HOUR) + ""; txtTime.setText(hours + ":" + minuteString + " " + AM_PM + " ");  txtTime.setSelection(txtTime.getText().length()); } </code></pre>