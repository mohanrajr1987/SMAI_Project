<p>i mean editText created programmatically. I want to get the data inputted from those editText i created.</p>  <p>These are i've done so far.</p>  <p><strong>VARIABLES</strong></p>  <pre><code>private GridLayout gridLayout;  //for tasks int rowIndex = 2; int colIndex = 1; int rowIndex2 = 2; int colIndex2 = 0;  int i=0; int j=0;  //database variables MyDBAdapter dbhandler; </code></pre>  <p>To be able to create an editText in a gridlayout by a button click.</p>  <p>When "add new Task" button is clicked:</p>  <pre><code>public void addTask(View view) {         i++;         Map&lt;String, Integer&gt; idsMap = new HashMap&lt;String, Integer&gt;();         String tname = "task" + Integer.toString(i);         EditText editText = new EditText(this);         GridLayout.LayoutParams param = new GridLayout.LayoutParams();         param.height = ViewGroup.LayoutParams.WRAP_CONTENT;         param.width = GridLayout.LayoutParams.MATCH_PARENT;         param.rowSpec = GridLayout.spec(rowIndex);         param.columnSpec = GridLayout.spec(colIndex);         editText.setTextColor(Color.BLACK);         editText.setBackgroundResource(android.R.drawable.edit_text);         editText.setText(tname);         editText.setLayoutParams(param);          TextView textView = new TextView(this);         GridLayout.LayoutParams param2 = new GridLayout.LayoutParams();         param2.rowSpec = GridLayout.spec(rowIndex2);         param2.columnSpec = GridLayout.spec(colIndex2);         textView.setPadding(30, 0, 0, 0);         textView.setTextColor(Color.BLACK);         textView.setTypeface(Typeface.DEFAULT_BOLD);          textView.setLayoutParams(param2);          if (rowIndex &gt; 1) {             textView.setText("TASK "+Integer.toString(i)+": ");             editText.setId(i);             idsMap.put(tname, i);         }          gridLayout.addView(editText);         gridLayout.addView(textView);         rowIndex++;         rowIndex2++;         this.j = 0;     } </code></pre>  <p>When "Add new Subtask" button is clicked:</p>  <pre><code>public void addSubtask(View view) {         j++;         Map&lt;String, Integer&gt; idsMap = new HashMap&lt;String, Integer&gt;();         String taskno = "task" + Integer.toString(i) + "subtask" + Integer.toString(j);         EditText editText = new EditText(this);         GridLayout.LayoutParams param = new GridLayout.LayoutParams();         param.height = ViewGroup.LayoutParams.WRAP_CONTENT;         param.width = GridLayout.LayoutParams.MATCH_PARENT;         param.rowSpec = GridLayout.spec(rowIndex);         param.columnSpec = GridLayout.spec(colIndex);         editText.setTextColor(Color.BLACK);         editText.setBackgroundResource(android.R.drawable.edit_text);         editText.setText(taskno);         editText.setLayoutParams(param);          TextView textView = new TextView(this);         GridLayout.LayoutParams param2 = new GridLayout.LayoutParams();         param2.rowSpec = GridLayout.spec(rowIndex2);         param2.columnSpec = GridLayout.spec(colIndex2);         textView.setPadding(30,0,0,0);         textView.setTextColor(Color.BLACK);          textView.setLayoutParams(param2);          if (rowIndex &gt; 1) {             textView.setText("Subtask "+Integer.toString(j)+": ");             editText.setId(j);             idsMap.put(taskno, j);         }          gridLayout.addView(editText);         gridLayout.addView(textView);         rowIndex++;         rowIndex2++;     } </code></pre>  <p><strong>IT WOULD LOOK LIKE THIS FOR EXAMPLE:</strong></p>  <p><strong>TASK 1:</strong> ___________</p>  <p>Subtask 1: ________</p>  <p>Subtask 2: ________</p>  <p><strong>TASK 2:</strong> ___________</p>  <p>Subtask 1: ________</p>  <p><strong>TASK 3:</strong> ___________</p>  <p>Assuming the user is done inputting the necessary info and clicks the submit button. <strong>THE PROBLEM COMES IN. I DONT KNOW HOW TO GET ALL THE VALUES BASED on the number of editText created by the user.</strong></p>  <pre><code>public void submit(){          submit.setOnClickListener(new View.OnClickListener() {             @Override             public void onClick(View v) {                 //implementation                 String task1 = task1.getText().toString(); // It would only get task1     String subtask1 = task1subtask1.getText().toString(); // It would only get subtask1 of task 1              }         } </code></pre>  <p>That kind of implementation is not usable since i dont know how many editTexts of tasks and subtasks that the user created. HELPPPP T___T </p>