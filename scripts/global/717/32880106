<p>we have a stored procedure that takes in four parameters that can be null - as an example</p>  <pre><code>@FirstName NVARCHAR(50) @LastName NVARCHAR(50) @Age INT @PhoneNumber NVARCHAR(15) </code></pre>  <p>We have a person table with a primary key called <code>ID (INT, NOT NULL, IDENTITY)</code></p>  <p>Until now we have been running a query against the database like so</p>  <pre><code>SELECT *  FROM Person  where FirstName = ISNULL(@FirstName, FirstName)    AND LastName = ISNULL(@LastName, LastName)    AND AGE = ISNULL(@Age, AGE)    and PhoneNumber = ISNULL(@PhoneNumber, PhoneNumber) </code></pre>  <p>I was wondering if it's possible to do the above utilising the MERGE statement of MSSQL</p>  <p>e.g.</p>  <pre><code>create table #personSearch (ID INT NOT NULL)  MERGE #personSearch AS T       USING Person AS S     ON             T.ID = S.ID     WHEN NOT MATCHED BY TARGET      AND s.ID = @ID     THEN       INSERT (ID)     VALUES (s.ID); </code></pre>  <p>That would pull across those records in the person table that do not exist in the temp table - my question is how would I do the other clauses?</p>  <p>Is it even worth using MERGE to do this?</p>  <p>Thanks</p>