<p>My requirement is little different from regular branch merge. It is something like </p>  <p>Branches in my local and server repo -> Branch-1, Branch-2 &amp; Master  </p>  <ul> <li><p>On the event of…</p>  <p>creating a merge request.</p>  <p>pushing changes to the head/source branch</p>  <p>pushing changes to the base/target branch</p></li> </ul>  <p>…do…</p>  <pre><code>attempt a merge of the HEAD/source onto the target. </code></pre>  <p>EG: (git clone target, git remote add source..., git fetch source. git checkout -b attempted-merge; git merge..)</p>  <p>push a new ref to the repo “refs/merge-requests/{id}/head” (git push origin target/:merge-requests/{id}/head)</p>  <p>If there were no merge conflicts, push “refs/merge-requests/{id}/merge” (git push origin attempted-merge:merge-requests/{id}/merge)</p>  <p>Comment on the merge request with the status (using :+1: or :-1: to include a vote of approval)</p>  <p>In this process we are creating a new branch called ATTEMPTED-MERGE. But this branch while pushed should not exactly be pushed to the server instead it should be given a new REFS name (EG: refs/merge-request/{ID}/merge).</p>  <p>So this would actually contains the merge but is not been pushed to the server instead stored in a temporary location where it can been seen in local repo but not in remote repo. This is because of validating the merge and authorizing the merge to actually happen if everything is correct (means if all the code is there as expected and ready for a clean merge). Then once approved it will be merged on the remote repo.</p>  <p>This is the scenario which i have right now. Not able to understand how to do this in SCRIPT and make it automate so that this script should run when a merge is requested.</p>  <p>Inputs to this script are</p>  <p>Source URL, Source Branch, Target URL &amp; Target Branch.</p>  <p>Once these are given the script should run and depending on the input values it should perform the merge in GITLAB.</p>  <p>Can any one help me out how to do this .. !!!!</p>