<p>We are a medium level organization with around 40 developers. We have multiple branches for different releases for simultaneous development.</p>  <p>The problem that we face when we merge release-branch on master is, there are two many commits involved and overwhelming to understand all the changes that went in and developer who is merging branches is unable to decide which chunks to let in and which to not. Sometimes auto-merged files themselves are catching lots of wrong merges.</p>  <p>How do big companies go about doing these merges in more efficient and collaborative way? Any popular git workflows you are aware of? something like they create a new merged branch and ask all the developers to check/comment if merge properly happened and they actually merge to master?</p>  <p>Please advice</p>