<p>I'm trying to mix 2 WAV files into a single WAV file. The files will always be the exact same duration and have the same format (16 bit, 44.1 kHz, signed, little endian, mono). Both WAVs are put into to byte arrays using a ByteArrayOutputStream using AudioSystem.getAudioInputSream to ensure I'm just getting the PCM data and no headers. </p>  <p>With the help of a few other threads, I've been able to successfully combine the arrays, but not without introducing a significant amount of noise to the signal. It definitely doesn't sound like clipping or distortion, but I have tried averaging the sum of each pair of bytes for safety which just makes everything quieter, noise and all.</p>  <p>Any insight would be greatly appreciated! I've tried two methods which should do the same thing, and seem to produce the same sonic results.</p>  <p>The first, simpler method:</p>  <pre><code>private byte[] mixBuffers(byte[] bufferA, byte[] bufferB) {     byte[] array = new byte[bufferA.length];     for (int i=0; i&lt;bufferA.length; i++) {         array[i] = (byte) ((bufferA[i] + bufferB[i]));     }     return array; } </code></pre>  <p>And the second,  more specific method:</p>  <pre><code>private byte[] mixBuffers(byte[] bufferA, byte[] bufferB) {     byte[] array = new byte[bufferA.length];      for (int i=0; i&lt;bufferA.length; i+=2) {         short buf1A = bufferA[i+1];         short buf2A = bufferA[i];         buf1A = (short) ((buf1A &amp; 0xff) &lt;&lt; 8);         buf2A = (short) (buf2A &amp; 0xff);          short buf1B = bufferB[i+1];         short buf2B = bufferB[i];         buf1B = (short) ((buf1B &amp; 0xff) &lt;&lt; 8);         buf2B = (short) (buf2B &amp; 0xff);          short buf1C = (short) (buf1A + buf1B);         short buf2C = (short) (buf2A + buf2B);          short res = (short) (buf1C | buf2C);          array[i] = (byte) res;         array[i+1] = (byte) (res &gt;&gt; 8);     }      return array; } </code></pre>  <p>If it helps, here's how I'm getting the files into the byte arrays:</p>  <pre><code>{     ByteArrayOutputStream baos = new ByteArrayOutputStream();     AudioInputStream ais;     ais = AudioSystem.getAudioInputStream(audioFile);     int read;     byte[] buffer = new byte[1024];     while ((read = ais.read(buffer)) != -1) {         baos.write(buffer, 0, read);     }     baos.flush();     byte[] byteBufferA = baos.toByteArray();      baos = new ByteArrayOutputStream();     ais = AudioSystem.getAudioInputStream(audioFile2);     buffer = new byte[1024];     while ((read = ais.read(buffer)) != -1) {         baos.write(buffer, 0, read);     }     baos.flush();     byte[] byteBufferB = baos.toByteArray();      byte[] byteBufferC = mixBuffers(byteBufferA, byteBufferB); } </code></pre>