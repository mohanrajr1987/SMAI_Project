<p>i am using parse sdk in my application and now i am facing a big problem.I am using about  5- 6 notifications and they all open same activity as defined in </p>  <pre><code>    PushService             .setDefaultPushCallback(getApplicationContext(), Yesno.class); </code></pre>  <p>so i need to open all 6 different activites at all 6 different notification i dont know how to do that please help !!!!!</p>  <pre><code>package com.example.testmap12;  import java.util.HashMap;  import android.app.Application;  import com.matesnetwork.callverification.Cognalys; import com.parse.Parse; import com.parse.ParseInstallation; import com.parse.ParseUser; import com.parse.PushService;  public class Intialize extends Application {     public void onCreate() {         super.onCreate();         Parse.initialize(this, "dNQrAY3Jb35SB6LCmELcUYyoSoceH3VSHd1y8fg5",                 "LEmlmyMaDGpIlzrD6vT8s7OtgWCCCWl90VyPOYz1");          Cognalys.enableAnalytics(getApplicationContext(), true, true);         PushService                 .setDefaultPushCallback(getApplicationContext(), Yesno.class);         ParseInstallation.getCurrentInstallation().saveInBackground();     }      public static void updateParseInstallation(ParseUser user) {         ParseInstallation installation = ParseInstallation                 .getCurrentInstallation();         installation.put(Constants.KEY_USER_ID, user.getObjectId());         installation.saveInBackground();     }      public static int GENERAL_TRACKER = 0;      public enum TrackerName {         APP_TRACKER, // Tracker used only in this app.         GLOBAL_TRACKER, // Tracker used by all the apps from a company. eg:                         // roll-up tracking.         ECOMMERCE_TRACKER, // Tracker used by all ecommerce transactions from a                             // company.     }      // HashMap&lt;TrackerName, Tracker&gt; mTrackers = new HashMap&lt;TrackerName,     // Tracker&gt;();     //     // synchronized Tracker getTracker(TrackerName trackerId) {     // if (!mTrackers.containsKey(trackerId)) {     //     // GoogleAnalytics analytics = GoogleAnalytics.getInstance(this);     // Tracker t = analytics.newTracker(R.xml.global_tracker);     // mTrackers.put(trackerId, t);     //     // }     // return mTrackers.get(trackerId);     // } } </code></pre>