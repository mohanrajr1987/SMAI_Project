<p>I'm trying to add a custom view to a notification. In this view, there would be buttons that do something. I tried the solutions given to this problem but I can't seem to make it work. I have a single class NotificationMessage that does the job, and added these two lines in the AndroidManifest.xml (as found in the solutions online):</p>  <pre><code>&lt;receiver android:name="NotificationMessage$NotificationSwitchButtonListener" /&gt; &lt;uses-permission android:name="android.permission.CAMERA" /&gt; </code></pre>  <p>Here is the class NotificationMessage, with its inner class "NotificationSwitchButtonListener":</p>  <pre><code>public class NotificationMessage { private Context context;  public NotificationMessage(Context context){     this.context = context;     createNotification(); }  public void createNotification(){      RemoteViews remoteViews = new RemoteViews(context.getPackageName(), R.layout.notification_layout);     Intent resultIntent = new Intent(context, MainActivity.class);     // The stack builder object will contain an artificial back stack for the      // started Activity.     // This ensures that navigating backward from the Activity leads out of     // your application to the Home screen.     TaskStackBuilder stackBuilder = TaskStackBuilder.create(context);      // Adds the back stack for the Intent (but not the Intent itself)     stackBuilder.addParentStack(MainActivity.class);     // Adds the Intent that starts the Activity to the top of the stack     stackBuilder.addNextIntent(resultIntent);     PendingIntent resultPendingIntent = stackBuilder.getPendingIntent(0, PendingIntent.FLAG_UPDATE_CURRENT);      Intent switchIntent = new Intent(context, NotificationSwitchButtonListener.class);     PendingIntent pendingSwitchIntent = PendingIntent.getBroadcast(context, 0, switchIntent, 0);      remoteViews.setOnClickPendingIntent(R.id.button1, pendingSwitchIntent);      NotificationCompat.Builder mBuilder =             new NotificationCompat.Builder(context)                     .setSmallIcon(R.drawable.notification_icon)                     .setContent(remoteViews)                     .setAutoCancel(true);      mBuilder.setContentIntent(resultPendingIntent);     NotificationManager mNotificationManager =             (NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE);     // mId allows you to update the notification later on.     mNotificationManager.notify(1, mBuilder.build());  }  private class NotificationSwitchButtonListener extends BroadcastReceiver {      private boolean isOn = false;      @Override     public void onReceive(Context context, Intent intent) {         Log.d("Here", "I am here");         if(context.getPackageManager().hasSystemFeature(PackageManager.FEATURE_CAMERA_FLASH)){             Camera cam = Camera.open();             if(!isOn) {                 Camera.Parameters p = cam.getParameters();                 p.setFlashMode(Camera.Parameters.FLASH_MODE_TORCH);                 cam.setParameters(p);                 cam.startPreview();             }             else{                 cam.stopPreview();                 cam.release();                 cam = null;             }         }     } } </code></pre>  <p>}</p>  <p>I'm trying to switch the flash light to on or off, but I can't get to the onReceive(..) method. The Log.d(...) message doesn't show neither.</p>  <p>What is wrong in my code?</p>