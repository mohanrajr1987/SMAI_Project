<p>I am building mobile apps for iOS and Android using PhoneGap Build. In my simplest apps I was using the word 'notification' to mean the messages similar to Javascript's <code>alert()</code> displayed immediately to the user within the webview. This is <code>navigator.notification.alert()</code></p>  <p>Now I need to build a more complicated app (using plugins) which can display messages in a device's general notification area, when my app is not in the foreground. </p>  <p><a href="http://i.stack.imgur.com/iYTMB.png" rel="nofollow"><img src="http://i.stack.imgur.com/iYTMB.png" alt="Examples"></a></p>  <p>There seems to be several phrases I am not sure I understand correctly...</p>  <ol> <li><p><strong>Local Notifications</strong>: the app decides when to create these, and they can be scheduled for future dates. They will display regardless of the app being running/background/terminated. </p></li> <li><p><strong>Remote Notifications</strong>: a server decides when to create these, and they are sent to the app by a service controlled by Apple or Google. Also called <strong>Push Notifications</strong>. They will also display regardless of the app being running/background/terminated.</p></li> <li><p>Is there a <strong>third type</strong> of homebrew notification where the app makes a HTTP call to a server every 10 minutes, and creates a notification when it receives instructions to do so? This is called 'pull' I suppose. It will only work when the app is still running in the background (unless you make use of the BackgroundFetch plugin, which is Android only).</p></li> </ol>  <p><strong>Is the above correct?</strong> What have I misunderstood? Is the third type prone to problems?</p>