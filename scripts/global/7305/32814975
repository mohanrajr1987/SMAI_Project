<p>I'm trying to make a directive to encapsulate and reuse the following angular-ui element:</p>  <pre><code>&lt;div class="input-group"&gt;  &lt;input type="text" class="form-control" datepicker-popup="{{format}}" data-ng-model="mv.dateReviewed" is-open="statusDateReviewed.opened" ng-required="true" close-text="Close" /&gt;  &lt;span class="input-group-btn"&gt;  &lt;button type="button" class="btn btn-default" ng-click="openDateReviewed($event)"&gt;&lt;i class="glyphicon glyphicon-calendar"&gt;&lt;/i&gt; &lt;/button&gt;  &lt;/span&gt; &lt;/div&gt; </code></pre>  <p>Surprised that <a href="https://angular-ui.github.io/bootstrap/#/getting_started" rel="nofollow">angular-ui</a> components are called directives but are actually controllers (must be missing something here).</p>  <p>To summarize I've got 5 of those on a form and in 2 differents parts of my app, I'd like to be able to do something like</p>  <pre><code>&lt;date-picker data-format="dd/MM/yyyy" data-ng-model="oneWMS.dateReviewed" data-is-open="statusDateReviewed.opened" data-ng-click="openDateReviewed($event)"&gt;&lt;/date-picker&gt;  </code></pre>  <p>And in my directive</p>  <pre><code>angular.module('myApp').directive('datePicker',datePicker);  function datePicker() {       return {         restrict: 'AE',         require: 'ngModel',         scope: {             format: '@format',             ngModel: '@ngModel',             isOpen: '@isOpen',             ngClick: '@ngClick'              },         template: '&lt;div class="input-group"&gt;' +                  '&lt;input type="text" class="form-control" datepicker-popup="{{format}}" data-ng-model="oneWMS.dateReviewed" is-open="{{isOpen}}" ng-required="true" close-text="Close" /&gt;' +                  '&lt;span class="input-group-btn"&gt;' +                  '&lt;button type="button" class="btn btn-default" ng-click="{{ngClick}}"&gt;&lt;i class="glyphicon glyphicon-calendar"&gt;&lt;/i&gt; &lt;/button&gt;' +                  '&lt;/span&gt;' +              '&lt;/div&gt;',         link: function(scope, iElement, iAttrs) {                 // all the directive code                 console.log(iAttrs.format); // works                 console.log(iAttrs.ngModel); // works                 console.log(iAttrs.isOpen); // works                 console.log(iAttrs.ngClick); // works </code></pre>  <p>The template works for the format but breaks with anything else (ngModel, isOpen, ngClick)</p>  <p>I get an error message</p>  <pre><code>Error: [$parse:syntax] Syntax Error: Token '{' invalid key at column 2 of the expression [{{isOpen}}] starting at [{isOpen}}]. </code></pre>  <p>Any idea?</p>  <p>(PS: I would love to see someone use that angular-ui datepicker as a directive, with all the formatting...)</p>