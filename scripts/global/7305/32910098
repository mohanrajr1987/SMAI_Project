<p>I've got a SQL DB column for DateTime Birthday on a customer object. The database allows that field to be null, but occasionally our users populate the data (from another system) with <code>1/1/1900</code>.</p>  <p>I'd like to have my DatePicker field show nothing when the date in the DB is either null or <code>DateTime.Parse("1900-01-01 00:00:00.000")</code>. (It doesn't have to be fully blank, but can have the DatePicker field's standard default of <code>" / / "</code>.</p>  <p>I've been trying this:</p>  <pre><code>dtBirthday.Value = customer.Birthday.HasValue ? customer.CustomerOptions.Birthday.Value : DateTime.Parse("1900-01-01 00:00:00.000"); </code></pre>  <p>That works fairly well for the null birthdays, but doesn't allow for the date in <code>customer.Birthday</code> actually being <code>DateTime.Parse("1900-01-01 00:00:00.000")</code>.</p>  <p><strong>Update</strong> I did, in fact, google this, and attempted to use </p>  <pre><code>            var nullDate = DateTime.Parse("1900-01-01 00:00:00.000");             if (customer.Birthday.Value == nullDate)             {                 dtBirthday.Format = eDateTimePickerFormat.Custom;                 dtBirthday.CustomFormat = " ";                 dtBirthday.Value = DateTime.FromOADate(0);                 dtBirthday.Enabled = true;             }             else             {                 dtBirthday.Format = eDateTimePickerFormat.Custom;                 dtBirthday.CustomFormat = "M/d/yyyy";                 dtBirthday.Value = customer.Birthday.Value;                 dtBirthday.Enabled = true;             }             //dtBirthday.Value = customer.Birthday.HasValue ? customer.Birthday.Value : DateTime.Parse("1900-01-01 00:00:00.000");             if (customer.Anniversary.Value == nullDate)             {                 dtAnniv.Format = eDateTimePickerFormat.Custom;                 dtAnniv.CustomFormat = " ";                 dtAnniv.Value = DateTime.FromOADate(0);                 dtAnniv.Enabled = true;             }             else             {                 dtAnniv.Format = eDateTimePickerFormat.Custom;                 dtAnniv.CustomFormat = "MM/dd/yyyy";                 dtAnniv.Value = customer.Anniversary.Value;                 dtAnniv.Enabled = true;             }             //dtAnniv.Value = customer.Anniversary.HasValue ? customer.Anniversary.Value : DateTime.Parse("1900-01-01 00:00:00.000"); </code></pre>  <p>It does just about exactly what I want, except that the empty fields are completely disabled, even though I've specifically set them to enabled=true.</p>