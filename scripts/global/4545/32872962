<p>I'm trying to compile a project with Opencv but I keep getting this problem: Error:(5, 18) error: cannot find symbol class R</p>  <p>The error is occurring in this: import org.opencv.R; </p>  <p>This is just a part of the code where I'm getting the error:</p>  <pre><code>package br.raphael.extended; import java.util.List; import org.opencv.R; import org.opencv.android.Utils; import org.opencv.core.Mat; import org.opencv.core.Size; import org.opencv.highgui.Highgui;  import br.raphael.detector.FpsMeterExtended; import android.app.Activity; import android.app.AlertDialog; import android.content.Context; import android.content.DialogInterface; import android.content.res.TypedArray; import android.graphics.Bitmap; import android.graphics.Canvas; import android.util.AttributeSet; import android.util.Log; import android.view.SurfaceHolder; import android.view.SurfaceView;  /**  * This is a basic class, implementing the interaction with Camera and OpenCV library.  * The main responsibility of it - is to control when camera can be enabled, process the frame,  * call external listener to make any adjustments to the frame and then draw the resulting  * frame to the screen.  * The clients shall implement CvCameraViewListener.  */ public abstract class CameraBridgeViewBaseExtended extends SurfaceView implements SurfaceHolder.Callback {      private static final String TAG = "CameraBridge";     private static final int MAX_UNSPECIFIED = -1;     private static final int STOPPED = 0;     private static final int STARTED = 1;      private int mState = STOPPED;     private Bitmap mCacheBitmap;     private CvCameraViewListener2 mListener;     private boolean mSurfaceExist;     private Object mSyncObject = new Object();      protected int mFrameWidth;     protected int mFrameHeight;     protected int mMaxHeight;     protected int mMaxWidth;     protected int mPreviewFormat = Highgui.CV_CAP_ANDROID_COLOR_FRAME_RGBA;     protected int mCameraIndex = -1;     protected boolean mEnabled;     protected FpsMeterExtended mFpsMeter = null;      public CameraBridgeViewBaseExtended(Context context, int cameraId) {         super(context);         mCameraIndex = cameraId;     }      public CameraBridgeViewBaseExtended(Context context, AttributeSet attrs) {         super(context, attrs);          int count = attrs.getAttributeCount();         Log.d(TAG, "Attr count: " + Integer.valueOf(count));          TypedArray styledAttrs = getContext().obtainStyledAttributes(attrs, R.styleable.CameraBridgeViewBase);         if (styledAttrs.getBoolean(R.styleable.CameraBridgeViewBase_show_fps, false))             enableFpsMeter();          mCameraIndex = styledAttrs.getInt(R.styleable.CameraBridgeViewBase_camera_id, -1);          getHolder().addCallback(this);         mMaxWidth = MAX_UNSPECIFIED;         mMaxHeight = MAX_UNSPECIFIED;     } </code></pre>