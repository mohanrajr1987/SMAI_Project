<p>I want to use following function in my code. I want it to take given string, cut all leading zeros and return a string without the leading zeros. For example I give it <code>'00023'</code> and it shall return <code>'23___'</code> (<code>_</code> is space) I have this function in my code:</p>  <pre><code>function cut_zeros(string) implicit none     character(5) :: cut_zeros, string     integer:: string_limit, i      string_limit = 5      do i= 1, string_limit         if (string(i)/='0') then             cut_zeros = string(i : string_limit)             exit         endif     enddo  end function cut_zeros </code></pre>  <p>I really don't know what problem the compiler has. It gives this information:</p>  <pre><code>   cut_zeros = string(i : string_limit)                         1 Error: Syntax error in argument list at (1) </code></pre>  <p>I also have another question? Is it possible to make the function assumed length? So that I can pass a string of any length to it? As far as I understand it is not possible, because the return value of a function cannot be assumed length, right?</p>