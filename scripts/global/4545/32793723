<p>I am trying to test Fortran/C mixed language by using module and procedure. I used the base example case from this link: <a href="http://cftcc.iccas.ac.cn/upload/doc/ifc/f_ug1/pgwusmod.htm" rel="nofollow">http://cftcc.iccas.ac.cn/upload/doc/ifc/f_ug1/pgwusmod.htm</a> but when I try to modify the code, I start to get the error like </p>  <pre><code>"_initfo_", reference from: _MAIN__ in main.o ld: symbol(s) not found for architecture x86_64.  </code></pre>  <p>here is my code:</p>  <pre><code>new.F &gt;&gt;       MODULE EXAMP       use iso_c_binding          REAL, bind(C) :: A(3)          INTEGER I1, I2          CHARACTER(80) LINE          TYPE MYDATA              SEQUENCE              INTEGER N              CHARACTER(30) INFO           END TYPE MYDATA       END MODULE EXAMP cnew.c &gt;&gt; /* C  code accessing module data */ extern float a[3]; extern int examp_mp_i1, examp_mp_i2; extern char examp_mp_line[80]; //extern void usemodule(); extern struct {     int n;     char info[30]; } examp_mp_mydata;  void pythagoras (float *c){     *c = (float) sqrt(a[0]*a[0] + a[1]*a[1]); }  void initfo(float *aa){      *aa = a[0]+a[1]+a[2]; } main.F &gt;&gt; ! Fortran 95/90 Module including procedure       MODULE CPROC         INTERFACE             SUBROUTINE PYTHAGORAS ( res)             !DEC$ ATTRIBUTES C :: PYTHAGORAS             !DEC$ ATTRIBUTES REFERENCE :: res ! res is passed by REFERENCE because its individual attribute !: overrides the subroutine's C attribute             REAL res ! a and b have the VALUE attribute by default because ! the subroutine has the C attribute             END SUBROUTINE         END INTERFACE         END MODULE  ! Fortran 95/90 Module including procedure       MODULE CCPROC         INTERFACE             SUBROUTINE INITFO (aa)             REAL aa             END SUBROUTINE         END INTERFACE         END MODULE          PROGRAM MAIN         USE EXAMP ! Fortran 95/90 Module including procedure         USE CPROC         USE CCPROC         A(1)=1.0         A(2)=2.0         A(3)=3.0         WRITE(*,*) A(1)         CALL PYTHAGORAS ( X)         WRITE(*,*) X          CALL INITFO(Y)         WRITE(*,*) Y         END PROGRAM MAIN </code></pre>  <p>I am using intel compilers. this is what I did to compile:</p>  <pre><code>icc -c cnew.c ifort -c new.f ifort -o test main.f new.o cnew.o </code></pre>  <p>I am really new to fortran. I really hope someone can point me to a right direction. </p>  <p>Thanks,</p>  <p>Jing</p>