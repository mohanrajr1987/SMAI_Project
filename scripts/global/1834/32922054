<p>I am building a GUI application to monitor/control remote embedded client devices.  Each client's state machine is maintained in a master dictionary and is to be represented in the GUI as an instance of a tab (Frame) in a Notebook widget.  I want to instantiate a tab (defined as a class in my application) whenever a new client registers and hide or forget the tab when the client link times out.  I'll re-instantiate if/when the client re-registers.</p>  <p>I'm new to Python, Tkinter and OO in general and am struggling with program structure.  I need to continuously loop through the dictionary records to refresh the GUI, but I've concluded I can't iterate within the root.mainloop() structure.  So "external" changes in state machine dictionary records or elements need to refresh corresponding GUI Notebook tab instances externally, including creating and removing instances of my tab class.</p>  <p>I'm confident there is a standard practice but I haven't progressed sufficiently in my learning to figure this out.  Some quick suggestions to nudge me in the right direction would be appreciated.</p>