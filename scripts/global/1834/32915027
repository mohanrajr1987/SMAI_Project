<p>I have a large body of data that takes the following form: [Array of four integers], {Set of strings pertaining to that array of integers}. For example,</p>  <pre><code>[1,1,1,8],{"(1+1+1)*8"}  [1,1,2,8],{"1*(1 + 2)*8","(1 + 2)/(1/8)"} </code></pre>  <p>etc.</p>  <p>I have thousands of these pairs saved in an external text file, and need to be able to recall individual lines on the basis of the four integers in the key. One solution would seem to be to read the text file into a dictionary at launch time, but the obvious formulation for the dictionary</p>  <pre><code>let myDict2:Dictionary&lt;Array&lt;Int&gt;, Array &lt;String&gt;&gt; = [[1,1,1,8]: ["(1+1+1)*8"],[1,1,2,8]: ["1*(1 + 2)*8","(1 + 2)/(1/8)"]] </code></pre>  <p>fails because "Type 'Array' does not conform to protocol 'Hashable'."</p>  <p>But we can transform the key from an array of integers into a string, and try with this:</p>  <pre><code>let myDict2:Dictionary&lt;String, Array &lt;String&gt;&gt; = ["1118": ["(1+1+1)*8"],"1128": ["1*(1 + 2)*8","(1 + 2)/(1/8)"]] </code></pre>  <p>No error, and it even looks like we can extract a result with</p>  <pre><code>let matches2=myDict2["1128"] // correctly returns ["1*(1 + 2)*8", "(1 + 2)/(1/8)"] </code></pre>  <p>But when we try to pull an element from that answer with <code>matches2[0]</code>, we get <code>"Cannot subscript a value of type '[String]?'"</code></p>  <p>Banging randomly on my keyboard, I got this to work with <code>matches2![0]</code> but I have no idea why.</p>  <ol> <li>Is there some way to make my original dictionary attempt [array of ints, set of strings] work?</li> <li>In the second formulation [string, set of strings], Why does <code>matches2![0]</code> work and <code>matches2[0]</code> not?</li> <li>Is a dictionary a reasonable approach to this, or is there some other data structure that might better accomplish my goal?</li> </ol>