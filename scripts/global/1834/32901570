<p>I have 2 nested dictionaries and I want to sort it with 2 criteria. First to orderby by Value.Count and then to order inside dictionary by Value(decimal). I fail with the second sort, because b.Value.Values get Collection which is not sortable. How can solve it ?</p>  <pre><code>string path = @"D:\";         string saveReportPath = Environment.GetFolderPath(Environment.SpecialFolder.Desktop);     Dictionary&lt;string, Dictionary&lt;string, long&gt;&gt; folderContent = new Dictionary&lt;string, Dictionary&lt;string, long&gt;&gt;();      string[] files = Directory.GetFiles(path);      foreach (var file in files)     {         string key = Regex.Match(file, @"\.[a-z\d]+$").Value;         if (!folderContent.ContainsKey(key))         {             folderContent.Add(key, new Dictionary&lt;string, long&gt;());         }         FileInfo currentFileInfo = new FileInfo(file);         folderContent[key].Add(currentFileInfo.Name, currentFileInfo.Length);     } Dictionary&lt;string, Dictionary&lt;string, decimal&gt;&gt; folderContent =    new Dictionary&lt;string, Dictionary&lt;string, decimal&gt;&gt;();  var orderedDict = folderContent     .OrderByDescending(a =&gt; a.Value.Count)     .ThenBy(b =&gt; b.Value.Values); </code></pre>  <p>Simple input</p>  <pre><code>D:\ </code></pre>  <p>Output</p>  <pre><code>    .jpg --FileName.jpg - 1237128kb --FileName.jpg - 12371282323kb --FileName.jpg - 1237122323232238kb .zip Class.cs - 123kb and so on.......... </code></pre>