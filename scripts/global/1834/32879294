<p>Basically a map cannot be added/deleted by two different threads concurrently , so it needs to be synchronized. </p>  <p>And i know that the Thread Local Storage concept in c++ is thread safe and can be accessed by many threads.</p>  <pre><code>    std::map&lt;int,int&gt; * pTemp= (std::map&lt;int,int&gt; *) TlsGetValue(sTlsIndex);     if (pTemp== NULL)     {         pTemp= new std::map&lt;int,int&gt;;         TlsSetValue(sTlsIndex, pTemp);     } </code></pre>  <p>If i put the map in TLS and access it from different child threads add/ delete/ modify the map , then should it be synchronized ?</p>  <p>Since TLS is already synchronized and my map is inside that. </p>