<p>Hello I have a file with this format:</p>  <pre><code>1 5 2 6 3 6 4 5 5 6 5 7 5 8 ... </code></pre>  <p>and what I want is to make a dictionary like this:</p>  <pre><code>1:5 2:6 3:6 4:5 5: 1, 4, 6, 7, 8 6: 2, 3, 5, .... </code></pre>  <p>The file is the connections between nodes of an undirected graph and I would like to convert it to a dictionary with the node as the key and the neighbors of this node as values (adjacency list).</p>  <p>My problem is that I don't know how to retrieve the data from the file to match the node with all his neighbors.</p>  <p>I tried this,</p>  <pre><code>nodeList = list() with open(file) as inputfile:     for line in inputfile.readlines():         nodeList.append(tuple(line.strip().split()))  d = defaultdict(list) for k, v in nodeList:     d[k].append(v) </code></pre>  <p>and the result is a dictionary: <code>[...('5', ['6', '7', '8']),..., ('1', ['5']),.., ('4', ['5']).....]</code> but it's not exactly correct, because for example I want <code>4</code> and <code>1</code> to appear as the value in key <code>5</code>.</p>