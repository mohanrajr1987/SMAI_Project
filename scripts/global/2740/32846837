<p>I have a table that is generated from the database. This table will be enclosed in a form. Below is the result on a browser:</p>  <p><a href="http://i.imgur.com/NLZzgwP.png" rel="nofollow">http://i.imgur.com/NLZzgwP.png</a> (Low rep problems)</p>  <p>Below is the JSP/JSTL code:</p>  <pre><code>&lt;%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%&gt; &lt;%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %&gt; &lt;%@ taglib uri="http://java.sun.com/jsp/jstl/sql" prefix="sql" %&gt; &lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8"&gt; &lt;title&gt;Issues&lt;/title&gt; &lt;style type="text/css"&gt; table { border-collapse: collapse; } table, th, td { border: 1px solid black; } td { padding: 10px; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;sql:setDataSource var="myDS" driver="com.mysql.jdbc.Driver" url="jdbc:mysql://localhost:3306/pdfdb" user="user" password="*******" /&gt; &lt;sql:query var="listIssues" dataSource="${myDS}"&gt;  SELECT BookId from Book; &lt;/sql:query&gt;      &lt;form method="get" action="fileDownload"&gt;         &lt;div align="center"&gt;             &lt;table&gt;                 &lt;caption&gt;List of Issues&lt;/caption&gt;                     &lt;tr&gt;                         &lt;th&gt;Magazine Issue #&lt;/th&gt;                         &lt;th&gt;Download&lt;/th&gt;                     &lt;/tr&gt;                     &lt;c:forEach var="issue" items="${listIssues.rows}"&gt;                     &lt;tr&gt;                         &lt;td&gt;&lt;c:out value="${issue.BookId}" /&gt;&lt;/td&gt;                         &lt;td&gt;&lt;input name='&lt;c:out value="${issue.BookId}" /&gt;' type="submit" value="Download"&gt;&lt;/td&gt;                             &lt;/tr&gt;                     &lt;/c:forEach&gt;             &lt;/table&gt;         &lt;/div&gt;     &lt;/form&gt; &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>Now, what I want is for the download button to be kind of linked with the id/Issue number that is placed on the same row as the button such that, when the user clicks the  download button, it passes the id/magazine issue number to the url telling the browser that the user wants to download the corresponding magazine issue number of that button clicked. Below is the servlet I use to implement this:</p>  <pre><code>package com.mypackage.fileDownload;  import java.io.IOException; import java.io.InputStream; import java.io.OutputStream; import java.sql.Blob; import java.sql.Connection; import java.sql.DriverManager; import java.sql.PreparedStatement; import java.sql.ResultSet; import java.sql.SQLException;  import javax.servlet.ServletContext; import javax.servlet.ServletException; import javax.servlet.annotation.WebServlet; import javax.servlet.http.HttpServlet; import javax.servlet.http.HttpServletRequest; import javax.servlet.http.HttpServletResponse;    /** * Servlet implementation class FileDownloadServlet  */ @WebServlet("/fileDownload") public class FileDownloadServlet extends HttpServlet { private static final long serialVersionUID = 1L;  //size of byte buffer to send file private static final int BUFFER_SIZE = 4096;  //database connection settings private String dbUrl = "jdbc:mysql://localhost:3306/pdfdb"; private String dbUser = "user"; private String dbPass = "******";  /**  * @see HttpServlet#doGet(HttpServletRequesrequest,HttpServletResponse response)  */ protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {     //get upload id from URL's parameters     String uploadId = request.getParameter("name");      Connection con = null; //connects to the database      try {         //connects to the database         Class.forName("com.mysql.jdbc.Driver");         con = DriverManager.getConnection(dbUrl, dbUser, dbPass);          //queries the database         String sql = "SELECT * FROM Book WHERE BookId = ?";         PreparedStatement pstmt = con.prepareStatement(sql);         pstmt.setString(1, uploadId);          ResultSet result = pstmt.executeQuery();         if(result.next()) {             //gets file name and file blob data             String fileId = result.getString("BookId");             Blob blob = result.getBlob("BookContent");             InputStream inputStream = blob.getBinaryStream();             int fileLength = inputStream.available();              System.out.println("File length = " + fileLength);             ServletContext context = getServletContext();              //Sets MIME type for the file download             String mimeType = context.getMimeType(fileId);             if(mimeType == null) {                 mimeType = "application/octet-stream";             }              //set content properties and header attributes for the response             response.setContentType(mimeType);             response.setContentLength(fileLength);             String headerKey = "Content-Disposition";             String headerValue = String.format("attachment; filename=\"%s\"", fileId);              response.setHeader(headerKey, headerValue);              //writes the file to the client             OutputStream outStream = response.getOutputStream();             byte[] buffer = new byte[BUFFER_SIZE];             int bytesRead = -1;              while((bytesRead = inputStream.read(buffer)) != -1) {                 outStream.write(buffer, 0, bytesRead);             }              inputStream.close();             outStream.close();          } else {             //no file found             response.getWriter().print("File not found for the id: " + uploadId);         }     } catch(SQLException ex) {         ex.printStackTrace();         response.getWriter().print("SQL Error: " + ex.getMessage());     } catch(IOException ex) {         ex.printStackTrace();         response.getWriter().print("IO Error: " + ex.getMessage());     } catch(ClassNotFoundException ex) {         ex.printStackTrace();         response.getWriter().print("Class Missing Error: " + ex.getMessage());     }         finally {         if(con != null) {             //closes the database connection              try {                 con.close();             } catch(SQLException ex) {                 ex.printStackTrace();                }             }         }     }  } </code></pre>  <p>Well, from the way I have done this, it is not working the way I wanted it to. For example, if you run this code on the server and click any of the download buttons, the url will be something like </p>  <blockquote>   <p>issue.jsp?1=Download</p> </blockquote>  <p>which is weird.It will also display on the browser</p>  <blockquote>   <p>File not found for the id: null</p> </blockquote>  <p>I expect something like(on the url) </p>  <blockquote>   <p>issue.jsp?Download=1</p> </blockquote>  <p>where 1 is the issue being downloaded. My database has two columns: the IssueId and fileContent(content of file stored in BLOB). </p>  <p>I think I have explained enough and the concept is clear. Any help will be appreciated and this is as far as I could go with my code &amp; research. Thanks!</p>