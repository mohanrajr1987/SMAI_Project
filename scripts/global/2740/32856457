<p>I've got an oracle database set up with a rows in it.  Using hibernate, I can retrieve all rows as a list of objects.  Now that I've got the list of objects, I want to use the list of objects to get the attributes, but I don't want it to be static.  For instance, this is static - meaning, for every row(product) that is returned, I would have to manually input the index. This wouldn't work if there were 1000 rows.  How could I go about coding a loop for something like this? </p>  <p>Here is the problematic static code: </p>  <pre><code>    HttpSession session= request.getSession();      ProductDAO daoOperations = new ProductDAOImpl();      List productList = daoOperations.retrieveAllProducts();     temp = (Product) prodList.get(0);     temp1 = (Product) prodList.get(1);     temp2 = (Product) prodList.get(2);     temp3 = (Product) prodList.get(3);      int prod_id = temp.getProd_id();     String prod1_name = temp.getProd_name();     String prod1_desc = temp.getProd_description();     Float prod1_price = temp.getProd_price();      session.setAttribute("prod1_id", prod_id);     session.setAttribute("prod1_name", prod1_name);     session.setAttribute("prod1_desc", prod1_desc);     session.setAttribute("prod1_price", prod1_price);      RequestDispatcher rd=request.getRequestDispatcher("/productlist.jsp");     rd.forward(request, response); </code></pre>