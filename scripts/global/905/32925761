<p>I am using React JS with the Spotify Web API to implement an web api search, and each page shows 10 results, and a next button. Each track has an html5 audio tag, which allows me to play a preview of the song. When the next 10 results are rendered, the html renders correctly (with the new audio source) but when I play it, it plays the songs from the original 10 results.</p>  <p>Interestingly, the second page displays the first set of songs, and then from the third page you can hear the second set of songs. Everything else (album art, title) updates correctly.</p>  <p>How can I fix this issue?</p>  <p><a href="http://i.stack.imgur.com/a3lk7.png" rel="nofollow"><img src="http://i.stack.imgur.com/a3lk7.png" alt="track and html"></a></p>  <p>page render code:</p>  <pre><code>pageGet(page) {    var value = false;    Object.keys(this.state.inputs).map(key =&gt; {      if (this.state.inputs[key] != "") {        value = true;      }    });    if (value) {      var url = this.buildUrl(page);      axios.get(url)      .then((res) =&gt; {        this.setState({          items: res.data.tracks.items,          total: res.data.tracks.total,          page: page        })      });    }  } </code></pre>  <p>renders:</p>  <pre><code>   &lt;SpotifyResults      tracks={this.state.items}      page={this.state.page}      total={this.state.total}      next={this.next.bind(this)}    /&gt; </code></pre>  <p>Spotify Results:</p>  <pre><code>displayTracks() {   return this.props.tracks.map((track, i) =&gt; {     return (       &lt;SpotifyTrack         key={i}         track={track}       /&gt;     );   }); } </code></pre>  <p>Spotify Track:</p>  <pre><code>render() {   return (     &lt;div className="track-container"&gt;       &lt;div className="album-cover"&gt;         &lt;img src={this.props.track.album.images[0].url}/&gt;       &lt;/div&gt;         &lt;div className="track-header"&gt;           &lt;p&gt;{this.displayTitle()}&lt;/p&gt;           &lt;br/&gt;           &lt;span&gt;{this.props.track.artists[0].name}&lt;/span&gt;         &lt;/div&gt;       &lt;div className="track-player"&gt;           &lt;audio controls&gt;             &lt;source src={this.props.track.preview_url+".mp3"} type="audio/mpeg"/&gt;             Your browser does not support the audio element.           &lt;/audio&gt;       &lt;/div&gt;     &lt;/div&gt;   ) } </code></pre>