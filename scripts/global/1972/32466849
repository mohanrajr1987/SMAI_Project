<p>I'm having trouble making sense of this .htaccess file I've inherited at my new job. I'm a graphic designer / marketer learning web development. Our site has a bunch of duplication errors and I want to rename our links and have them 301 redirected.</p>  <p>This is the first part of the .htaccess file:</p>  <pre><code>RewriteEngine Off  RewriteCond %{HTTP_HOST} !^blog.asseenontvhot10.com$ [NC] RewriteCond %{REQUEST_URI} !/sitemap\.xml  AddType text/html .shtml, .html, .htm   AddHandler server-parsed .shtml, .html, .htm AddHandler application/x-httpd-php5 .html .htm .shtml #Options FollowSymLinks Includes -Indexes </code></pre>  <p>From what I understand the first part links our blog to the main site, and I'm not sure what the next line does.  The addtype line and the ones that follow enable .htaccess to read/write those filetypes?</p>  <p>Here is the part that I believe is relevant and what I need to change:</p>  <pre><code>RewriteEngine on  rewritecond %{http_host} ^[^.]+\.[^.]+$ [nc] rewriterule ^(.*)$ http://www.%{http_host}/$1 [r=301,nc] RewriteRule default.html /home.html RewriteRule contact\.html /cgi-bin/commerce.cgi?display=contact RewriteRule about\.html /cgi-bin/commerce.cgi?display=about RewriteRule register\.html /cgi-bin/commerce.cgi?register=action RewriteRule products\.html /cgi-bin/commerce.cgi?listcategories RewriteRule parent_category/(.*)/(.*)/ /cgi-bin/commerce.cgi?listcategories=action&amp;parent=$1 RewriteRule category/(.*)/(.*)/(.*)\.html /cgi-bin/commerce.cgi?search=action&amp;category=$1&amp;page=$3 RewriteRule category/(.*)/(.*)/ /cgi-bin/commerce.cgi?search=action&amp;category=$1 RewriteRule category/(.*).html /cgi-bin/commerce.cgi?search=action&amp;page=$1 RewriteRule product/(.*)/(.*)/ /cgi-bin/commerce.cgi?preadd=action&amp;key=$1 RewriteRule basket\.html /cgi-bin/commerce.cgi?display=basket RewriteRule log-in\.html /cgi-bin/commerce.cgi?login RewriteRule home\.html /cgi-bin/commerce.cgi?display=home RewriteRule search\.html /cgi-bin/commerce.cgi?display=search RewriteRule all-items\.html /cgi-bin/commerce.cgi?search RewriteRule update_user\.html /cgi-bin/commerce.cgi?displayuser=action RewriteRule order_history\.html /cgi-bin/commerce.cgi?orderhistory RewriteRule logout\.html /cgi-bin/commerce.cgi?logout RewriteRule specials\.html /cgi-bin/commerce.cgi?search=action&amp;keywords=nav_specials </code></pre>  <p>I know the first part forces www. and does a 301 redirect, even though I haven't seen this way of accomplishing it on any guide I've read. The first thing I really need to change is making the home page 301 redirect from: <a href="http://www.asseenontvhot10.com/cgi-bin/commerce.cgi?display=home" rel="nofollow">http://www.asseenontvhot10.com/cgi-bin/commerce.cgi?display=home</a> to <a href="http://www.asseenontvhot10.com/" rel="nofollow">http://www.asseenontvhot10.com/</a></p>  <p>So far as I can tell the RewriteRule makes this an option but dosn't force it. Will adding [r=301] to the end of the rewriterule work?  I've also read that there is code you need to add for .cgi to work as .php does but I'm totally lost there.</p>  <hr>  <p>Update: I tried adding this line to the bottom -</p>  <pre><code>Redirect 301 /cgi-bin/commerce.cgi?display=home / </code></pre>  <p>and I got a 500 error.</p>  <hr>  <p>2nd Update: I added this code:</p>  <pre><code>RewriteRule about\.html /cgi-bin/commerce.cgi?display=about RewriteCond %{QUERY_STRING} ^display=about$ RewriteRule ^cgi-bin/commerce\.cgi$ /about [R=301] </code></pre>  <p>And it 404'd. When I replaced the .htaccess file with the back up and the about page still 404's... Now I'm really at a loss and don't know how to revert the site. I don't even know where the redirect would be stored outside of the htaccess file once it's reverted.</p>  <hr>  <p>3rd Update: (making progress) I added this code:</p>  <pre><code>RewriteRule about\.html /cgi-bin/commerce.cgi?display=about RewriteCond %{QUERY_STRING} ^display=about$ RewriteRule ^cgi-bin/commerce\.cgi$ /about\.html? [R=301] </code></pre>  <p>and I got a redirect loop. It was finally redirecting to about.html which I thought the first rule renamed /cgi-bin/commerce.cgi?display=about to, but it redirected to it over and over again.</p>