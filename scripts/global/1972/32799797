<p>My Goal is that my SSI (shtml) will parse POST data parameters and return a long encrypted string which will be based on those parameters. I am using IIS as the server.</p>  <p>My constraints:</p>  <ol> <li>I can't change the url - /document.shtml</li> <li>The shtml need to return only the base 64 string result.</li> </ol>  <p>What i tried:</p>  <ol> <li>Use of "exec cgi" in the shtml, this way:</li> </ol>  <p>document.shtml:</p>  <p><div class="snippet" data-lang="js" data-hide="false"> <div class="snippet-code"> <pre class="snippet-code-html lang-html prettyprint-override"><code>&lt;!--#exec cgi="/pythonApp/test.py?sdfsdf=sdfsdf" --&gt;</code></pre> </div> </div> </p>  <p>test.py (simplified version , without the encryption logic behind):</p>  <p><div class="snippet" data-lang="js" data-hide="false"> <div class="snippet-code"> <pre class="snippet-code-html lang-html prettyprint-override"><code>import cgitb cgitb.enable() import base64,urllib,json,os,sys import cgi  print "Content-Type: text/plain;charset=utf-8" print  cl, _ = cgi.parse_header(os.environ['CONTENT_LENGTH']) if (int(cl)&gt;0): 	data = sys.stdin.read(int(cl)) 	input_j = json.loads(data)  	print "AB : ",input_j["AB"]  else: 	print "Failed to read POST request"</code></pre> </div> </div> </p>  <p>The problem here, is that if i send post request to .../test.py , then it works, but if i send the request to document.shtml, the content length will still be positive as described by the environment variable, but the stdin will get an error.</p>  <ol start="2"> <li>My other idea was to read the POST data , somehow from the shtml itself and pass it to the cgi , this way:</li> </ol>  <p><div class="snippet" data-lang="js" data-hide="false"> <div class="snippet-code"> <pre class="snippet-code-html lang-html prettyprint-override"><code>&lt;!--#exec cgi="/pythonApp/test.py?sdfsdf=sdfsdf" --&gt;</code></pre> </div> </div> </p>  <p>The problem , is that i looked over the net and haven't found a way to do it from the shtml.</p>  <p>Any suggestions? am i missing something simple?</p>