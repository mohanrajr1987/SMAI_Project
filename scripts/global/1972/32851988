<p>I'm trying to mimic the following curl command that works perfectly:</p>  <pre><code>curl -k -i -d @content.json -H "Content-Type: application/json" -H "Accept: applicaztion/json" https://localhost:909/api/authenticateUser </code></pre>  <p>I'm mimicking the curl command in Ruby/rails. I'm using the rest-client gem. The target is an API written in old-style Perl. The problem is that the API does NOT "see" the payload that is sent in the new ruby code:</p>  <pre><code>pload = '&lt;string&gt;'.to_json response = RestClient::Request.execute(url: 'https://localhost:909/api/authenticateUser', method: :post, payload: pload, accept: :json, content_type: :json, verify_ssl: false) </code></pre>  <p>What is going wrong? Is my Ruby code bad or is the Perl code "too stupid/old" to pick up the payload from ruby. This is the Perl code:</p>  <pre><code>my $data = $cgi-&gt;param('POSTDATA') || ""; </code></pre>  <p>I tend to think the problem is with my ruby code since the old Perl code receives the payload properly from the curl command above and from some other old Perl code.</p>  <p>Thanks for the help.</p>