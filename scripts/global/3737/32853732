<p>I have a custom form <code>CreateAdminForm</code> where an admin in the backend can create a new Admin user. I created my own form model so I can handle the passsword. They just fill out username, nicename, email, password, select the status (active, banned, deleted), and choose a role (Root, Super, Admin). They enter the password as normal, and the custom form encrypts it. - I have checks so Root can create anything, Super can only create regular Admins, and regular admins can not create any other admins at all.</p>  <p>I actually had this working on my last project, but I bypassed the <code>isNewRecord</code> because I created the forms in their respective view files (create.php and update.php) instead of them both using the same <code>_form.php</code> file. It isn't a big deal, but I would like to follow the way Yii does things and get the <code>_form.php</code> file handling the forms again, if possible.</p>  <p>Since I am now using my own model <code>CreateAdminForm</code> instead of <code>Admin</code> model (which is a spin off of <code>User</code>), it does not have access to <code>isNewRecord</code>.</p>  <p>How can I get <code>_form.php</code> to use <code>isNewRecord</code> with my custom <code>CreateAdminForm</code> model?</p>  <p>Truncated CreateAdminForm:</p>  <pre><code>class CreateAdminForm extends Model {     public $nicename;     public $username;     public $email;     public $password;     public $role;     public $status;      public function createAdmin()     {         if ($this-&gt;validate()) {             $admin = new Admin();             $admin-&gt;nicename = $this-&gt;nicename;             $admin-&gt;username = $this-&gt;username;             $admin-&gt;email = $this-&gt;email;             $admin-&gt;role = $this-&gt;role;             $admin-&gt;status = $this-&gt;status;             $admin-&gt;setPassword($this-&gt;password);             $admin-&gt;generateAuthKey();             if ($admin-&gt;save()) {                 return $admin;             }         }          return null;     } } </code></pre>  <p>_form.php :</p>  <pre><code>&lt;div class="admin-form"&gt;      &lt;?php $form = ActiveForm::begin(); ?&gt;      &lt;?= $form-&gt;field($model, 'username')-&gt;textInput(['maxlength' =&gt; true]) ?&gt;      &lt;?= $form-&gt;field($model, 'nicename')-&gt;textInput(['maxlength' =&gt; true]) ?&gt;      &lt;?= $form-&gt;field($model, 'email')-&gt;textInput(['maxlength' =&gt; true]) ?&gt;      &lt;?= $form-&gt;field($model, 'role')-&gt;dropDownList(         $model-&gt;getUserRoleDropdown(),         ['prompt'=&gt;' - Admin Role - ']     ) ?&gt;      &lt;?= $form-&gt;field($model, 'status')-&gt;dropDownList(         $model-&gt;getUserStatusDropdown(),         ['prompt'=&gt;' - Admin Status - ']     ) ?&gt;      &lt;?= (!$model-&gt;isNewRecord) ? Html::a('Change Password!', ['admin/change-admin-password', 'id' =&gt; $model-&gt;id]) . '&lt;br /&gt;&lt;br /&gt;' : '' ?&gt;      &lt;div class="form-group"&gt;         &lt;?= Html::submitButton($model-&gt;isNewRecord ? 'Create' : 'Update', ['class' =&gt; $model-&gt;isNewRecord ? 'btn btn-success' : 'btn btn-primary']) ?&gt;     &lt;/div&gt;      &lt;?php ActiveForm::end(); ?&gt;  &lt;/div&gt; </code></pre>