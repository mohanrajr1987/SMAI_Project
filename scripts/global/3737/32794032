<p>Say I have three(3) Data Mapper Classes</p>  <pre><code>class Note {     public $note_id;     public $note_text;     public $note_datetime;   }  class Tag {     public $tag_id;     public $tag_name; }  class NoteTag {     public $note_id;     public $tag_id; } </code></pre>  <p>and I have a select in my Note service</p>  <pre><code>$DB-&gt;query("     SELECT *       FROM Note as n     LEFT JOIN NoteTag as nt ON nt.note_id = n.note_id     LEFT JOIN Tag as t ON t.tag_id = nt.tag_id     ORDER BY n.note_datetime desc     "); </code></pre>  <p>I have no problem doing a simple query like "SELECT * from Note" and setting the results to the data mapper properties. But What is the best way to get the complex results into their respective data mappers so that it can be returned to the controller for rendering?</p>  <p>I was thinking the best return structure would be something like this so that i would have access to all the data from the query if i needed.</p>  <pre><code>(Object) Note     -&gt;note_id, 1     -&gt;note_text, test note     -&gt;note_datetime, 2015-09-26     -&gt;(Object) NoteTag         -&gt;note_id, 1         -&gt;tag_id, 1         -&gt;(Object) Tag             -&gt;tag_id, 1             -&gt;tag_name, school </code></pre>  <p>instead of a "flat" return which is how the query will return it with dup column names</p>  <pre><code>(Object) Note     -&gt;note_id, 1     -&gt;note_text, test note     -&gt;note_datetime, 2015-09-26     -&gt;note_id, 1     -&gt;tag_id, 1     -&gt;(Object) Tag     -&gt;tag_id, 1     -&gt;tag_name, school </code></pre>  <p>Would it be better to do multiple calls to the db as I populate down the foreign key chain and build it that way?</p>  <p>Or set up a business class and only return the fields in the structure I need based on the query columns and data mapper properties?</p>  <p>Am I way off base? Thoughts?</p>