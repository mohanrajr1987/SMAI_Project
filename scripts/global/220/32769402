<p>I want to have a program that takes 2 arguments, the first a master password and the second an easy to remember string, relevant to the generated password. It processes this information and turns it into a string. So my passwords wouldn't be written anywhere, I would just remember the master password and the easy to remember string for each password. For example something like </p>  <pre><code>get-password --master-pass Gh3vBF2d --name stackoverflow </code></pre>  <p>would get my password for Stackoverflow.</p>  <p>I tried to do it with sha512. It takes a hardcoded salt + master password + the relevant string and goes 60k+ rounds and  returns the hash.</p>  <p>This is far from perfect as the hash is hex, so it has low entropy. I'd like the output to consist of alphanumerics, lower case and upper case and some special characters. I tried to convert it to base64 and the output is too short. Not only that, but the generated passwords seem similar, for example: N2Q5MjJkZWM=, N2YzNGRkYWQ=</p>  <p>Anyone has an idea how I could generate a high entropy password, about 16-20 chars in length and it must not generate similar passwords.</p>