<p><strong>What I Need</strong></p>  <p>I have a scrollView with the following hierarchy :</p>  <blockquote>   <p>ScrollView<br>   . ^ contentView(UIView)<br>   . - ^ view1(yellow)<br>   . - ^ view2(gray)</p> </blockquote>  <p><a href="http://i.stack.imgur.com/ELjFf.png" rel="nofollow"><img src="http://i.stack.imgur.com/ELjFf.png" alt=""></a></p>  <p><code>view1</code>(Yellow) has a fixed height and is pinned to the top of the contentView. I have specified all the constraints except for the height <code>view2</code>. coz I am adding a subview to <code>view2</code>(gray) programmatically and will be of random height.</p>  <p>The problem is that I am at a loss on how to set the height constraint of <code>view2</code>. scrollview needs to have constraints running from top through bottom in order to calculate the <code>contentSize</code>. But the height of <code>view2</code> will only be fixed after the subview is added, which will have all the necessary constraints for determining the height, of course.</p>  <p><strong>What I  tried</strong></p>  <p><strong>1)</strong> My first plan was to add the subview and set its constraints programmatically to make the scrollview happy. like so :</p>  <pre><code>detailsView = [ProfileDetailsView instantiateFromNib]; [self.detailHolder addSubview:detailsView];  [self.detailHolder addConstraint:[NSLayoutConstraint constraintWithItem:detailsView                                                       attribute:NSLayoutAttributeTop                                                       relatedBy:NSLayoutRelationEqual                                                          toItem:self.detailHolder                                                       attribute:NSLayoutAttributeTop                                                      multiplier:1.0                                                        constant:0.0]];  [self.detailHolder addConstraint:[NSLayoutConstraint constraintWithItem:detailsView                                                       attribute:NSLayoutAttributeLeading                                                       relatedBy:NSLayoutRelationEqual                                                          toItem:self.detailHolder                                                       attribute:NSLayoutAttributeLeading                                                      multiplier:1.0                                                        constant:0.0]];  [self.detailHolder addConstraint:[NSLayoutConstraint constraintWithItem:detailsView                                                       attribute:NSLayoutAttributeBottom                                                       relatedBy:NSLayoutRelationEqual                                                          toItem:self.detailHolder                                                       attribute:NSLayoutAttributeBottom                                                      multiplier:1.0                                                        constant:0.0]];  [self.detailHolder addConstraint:[NSLayoutConstraint constraintWithItem:detailsView                                                       attribute:NSLayoutAttributeTrailing                                                       relatedBy:NSLayoutRelationEqual                                                          toItem:self.detailHolder                                                       attribute:NSLayoutAttributeTrailing                                                      multiplier:1.0                                                        constant:0.0]]; </code></pre>  <p>The problem is that xcode gives me an error that <code>ScrollView has ambiguous scrollable content height</code>. I cannot give a fixed height for <code>view2</code> because the subview that I am later adding will have all the necessary constraints to set the <code>ScrollView</code>'s `contentSize.</p>  <p><strong>2)</strong> Then I tried adding a height constraint to <code>view2</code> with a lower priority so that when the subviews constraints kick in, the height constraint would get overriden. but that doesn't seem to work for some reason.</p>