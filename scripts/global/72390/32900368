<p>I know that explicit instantiation declarations suppress following implicit instantiations. But what if there is only an explicit instantiation definition? Does it suppress following implicit instantiations also?</p>  <p>For example:</p>  <pre><code>#include &lt;vector&gt;  template class std::vector&lt;int&gt;;  // Explicit template instantiation definition.  int main() {     std::vector&lt;int&gt; a;  // Implicit instantiation. } </code></pre>  <p>Does the explicit template instantiation definition suppress the implicit instantiation that follows? I know that the implicit instantiation is suppressed if I make the explicit definition into a declaration by prepending the <code>extern</code> keyword.</p>