<p>I've implemented a very based ParallelFor algorithm as follows:</p>  <pre><code>inline void ParallelFor( const size_t startIdx, const size_t endIdx, std::function&lt; void( size_t ) &gt;&amp;&amp; fn, const size_t numThreads = std::thread::hardware_concurrency() ) {     const size_t portion = std::max( 1, (endIdx - startIdx) / numThreads );     std::vector&lt; std::thread &gt; threads;     for ( size_t i = startIdx; i &lt; endIdx; i += portion )     {         int from    = i;         int to      = (i + portion) &lt;= endIdx ? (i + portion) : endIdx;          threads.push_back( std::thread( [=,&amp;fn]()              {                 for ( int j = from; j &lt; to; ++j )                     fn( j );             } ) );     }     std::for_each( threads.begin(), threads.end(), []( std::thread&amp; x )          {              x.join();         } ); } </code></pre>  <p>However when I build it says that the threads.push_back function is "attempting to reference a deleted function".</p>  <p>I can't understand what I'm doing wrong.  Can someone point out where I'm going wrong?</p>  <p><strong><em>EDIT:</em></strong> The compiler is VStudio 2015</p>  <p>There is tonnes more to the error as follows:</p>  <pre><code>1&gt;C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xmemory0(657): error C2280: 'std::thread::thread(const std::thread &amp;)': attempting to reference a deleted function 1&gt;  C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\thread(73): note: see declaration of 'std::thread::thread' 1&gt;  C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xmemory0(775): note: see reference to function template instantiation 'void std::allocator&lt;_Ty&gt;::construct&lt;_Objty,const std::thread&amp;&gt;(_Objty *,const std::thread &amp;)' being compiled 1&gt;          with 1&gt;          [ 1&gt;              _Ty=std::thread, 1&gt;              _Objty=std::thread 1&gt;          ] 1&gt;  C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xmemory0(775): note: see reference to function template instantiation 'void std::allocator&lt;_Ty&gt;::construct&lt;_Objty,const std::thread&amp;&gt;(_Objty *,const std::thread &amp;)' being compiled 1&gt;          with 1&gt;          [ 1&gt;              _Ty=std::thread, 1&gt;              _Objty=std::thread 1&gt;          ] 1&gt;  C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xmemory0(920): note: see reference to function template instantiation 'void std::allocator_traits&lt;_Alloc&gt;::construct&lt;_Ty,const std::thread&amp;&gt;(std::allocator&lt;_Ty&gt; &amp;,_Objty *,const std::thread &amp;)' being compiled 1&gt;          with 1&gt;          [ 1&gt;              _Alloc=std::allocator&lt;std::thread&gt;, 1&gt;              _Ty=std::thread, 1&gt;              _Objty=std::thread 1&gt;          ] 1&gt;  C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xmemory0(920): note: see reference to function template instantiation 'void std::allocator_traits&lt;_Alloc&gt;::construct&lt;_Ty,const std::thread&amp;&gt;(std::allocator&lt;_Ty&gt; &amp;,_Objty *,const std::thread &amp;)' being compiled 1&gt;          with 1&gt;          [ 1&gt;              _Alloc=std::allocator&lt;std::thread&gt;, 1&gt;              _Ty=std::thread, 1&gt;              _Objty=std::thread 1&gt;          ] 1&gt;  C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xmemory(379): note: see reference to function template instantiation 'void std::_Wrap_alloc&lt;std::allocator&lt;_Ty&gt;&gt;::construct&lt;std::thread,const std::thread&amp;&gt;(_Ty *,const std::thread &amp;)' being compiled 1&gt;          with 1&gt;          [ 1&gt;              _Ty=std::thread 1&gt;          ] 1&gt;  C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xmemory(379): note: see reference to function template instantiation 'void std::_Wrap_alloc&lt;std::allocator&lt;_Ty&gt;&gt;::construct&lt;std::thread,const std::thread&amp;&gt;(_Ty *,const std::thread &amp;)' being compiled 1&gt;          with 1&gt;          [ 1&gt;              _Ty=std::thread 1&gt;          ] 1&gt;  C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xmemory(416): note: see reference to function template instantiation '_FwdIt std::_Uninit_copy&lt;_InIt,_FwdIt,std::allocator&lt;_Ty&gt;&gt;(_InIt,_InIt,_FwdIt,std::_Wrap_alloc&lt;std::allocator&lt;_Ty&gt;&gt; &amp;,std::_Nonscalar_ptr_iterator_tag)' being compiled 1&gt;          with 1&gt;          [ 1&gt;              _FwdIt=std::thread *, 1&gt;              _InIt=const std::thread *, 1&gt;              _Ty=std::thread 1&gt;          ] 1&gt;  C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xmemory(427): note: see reference to function template instantiation '_FwdIt std::_Uninit_copy&lt;const std::thread*,_Iter,_Alloc&gt;(_InIt,_InIt,_FwdIt,_Alloc &amp;)' being compiled 1&gt;          with 1&gt;          [ 1&gt;              _FwdIt=std::thread *, 1&gt;              _Iter=std::thread *, 1&gt;              _Alloc=std::_Wrap_alloc&lt;std::allocator&lt;std::thread&gt;&gt;, 1&gt;              _InIt=const std::thread * 1&gt;          ] 1&gt;  C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vector(1672): note: see reference to function template instantiation '_FwdIt std::_Uninitialized_copy&lt;_Iter,std::thread*,std::_Wrap_alloc&lt;std::allocator&lt;_Ty&gt;&gt;&gt;(_InIt,_InIt,_FwdIt,_Alloc &amp;)' being compiled 1&gt;          with 1&gt;          [ 1&gt;              _FwdIt=std::thread *, 1&gt;              _Iter=std::_Vector_const_iterator&lt;std::_Vector_val&lt;std::_Simple_types&lt;std::thread&gt;&gt;&gt;, 1&gt;              _Ty=std::thread, 1&gt;              _InIt=std::_Vector_const_iterator&lt;std::_Vector_val&lt;std::_Simple_types&lt;std::thread&gt;&gt;&gt;, 1&gt;              _Alloc=std::_Wrap_alloc&lt;std::allocator&lt;std::thread&gt;&gt; 1&gt;          ] 1&gt;  C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vector(751): note: see reference to function template instantiation 'std::thread *std::vector&lt;std::thread,std::allocator&lt;_Ty&gt;&gt;::_Ucopy&lt;std::_Vector_const_iterator&lt;std::_Vector_val&lt;std::_Simple_types&lt;std::thread&gt;&gt;&gt;&gt;(_Iter,_Iter,std::thread *)' being compiled 1&gt;          with 1&gt;          [ 1&gt;              _Ty=std::thread, 1&gt;              _Iter=std::_Vector_const_iterator&lt;std::_Vector_val&lt;std::_Simple_types&lt;std::thread&gt;&gt;&gt; 1&gt;          ] 1&gt;  C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vector(751): note: see reference to function template instantiation 'std::thread *std::vector&lt;std::thread,std::allocator&lt;_Ty&gt;&gt;::_Ucopy&lt;std::_Vector_const_iterator&lt;std::_Vector_val&lt;std::_Simple_types&lt;std::thread&gt;&gt;&gt;&gt;(_Iter,_Iter,std::thread *)' being compiled 1&gt;          with 1&gt;          [ 1&gt;              _Ty=std::thread, 1&gt;              _Iter=std::_Vector_const_iterator&lt;std::_Vector_val&lt;std::_Simple_types&lt;std::thread&gt;&gt;&gt; 1&gt;          ] 1&gt;  C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vector(742): note: while compiling class template member function 'std::vector&lt;std::thread,std::allocator&lt;_Ty&gt;&gt;::vector(const std::vector&lt;_Ty,std::allocator&lt;_Ty&gt;&gt; &amp;)' 1&gt;          with 1&gt;          [ 1&gt;              _Ty=std::thread 1&gt;          ] </code></pre>