<p>I have a variadic template class with set function, that fills interal array:</p>  <pre><code>template &lt;size_t Dim&gt; class Vector { public:      void SetValueTemplate(size_t index)     {         return;     }      template &lt;typename X0, typename ...Xn&gt;     void SetValueTemplate(size_t index, X0 x0, Xn... xn)     {         val[index] = x0;         SetCenterValueTemplate(index + 1, xn...);     }      template &lt;typename ...X0&gt;     void SetValue(X0... t0)     {         SetValueTemplate(0, t0...);     }  private:     double val[Dim]; }; </code></pre>  <p>Problem is, that I can call this</p>  <pre><code>Vector&lt;3&gt; v; v.SetValue(0, 1, 2, 4, 5); </code></pre>  <p>and it compiles correctly. Can I limit this to not compile? I can use <code>static_assert</code>, but is it possible without it?</p>