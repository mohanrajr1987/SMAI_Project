<p>I have a uint64 variable which often only requires high or low 32 bit access. I am using a 32-bit ARM Cortex M0, and to help with speed and I am trying to overlap the uint64 variable with two uint32 variables in C, using anonymous structures in the hope of avoiding pointer arithmetic to access members.</p>  <p>Is what I am trying to do possible? It could be that using a named union is just as fast, but now I'm just intrigued if it can be done without. The following does not compile successfully:</p>  <p><a href="http://goo.gl/ejx37y" rel="nofollow">http://goo.gl/ejx37y</a></p>  <pre><code>#include &lt;stdint.h&gt;  volatile union {   uint64_t ab;   struct { uint32_t a, b; }; };  int main(void) {   a = 1; }; </code></pre>