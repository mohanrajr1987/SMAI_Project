<p>Just as in database design (1NF etc), I'm requesting design rules / principles when designing software for embedded platforms. Are there such?</p>  <ul> <li>When / when not to create sub-threads / state machines.</li> <li>What / what not to be in the interrupt space.</li> <li>What to log / warn / cause reboot / shutdown.</li> <li>Hardware abstractions.</li> <li>etc..</li> </ul>  <p>Update: I'm primarily asking regarding smaller embedded systems (PICxx) with customized hardware and with a low-level RTOS.</p>