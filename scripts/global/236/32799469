<p>I am Using PIC24FJ128GB202 I want to communicate with a slave device which does not need to respond. So configuration is as follows  <a href="http://i.stack.imgur.com/AlpOe.png" rel="nofollow"><img src="http://i.stack.imgur.com/AlpOe.png" alt="enter image description here"></a></p>  <p>I have written code as</p>  <pre><code>    /*   * File:   main.c  * Author: Nikhil  *  * Created on September 18, 2015, 2:59 PM  */  #include &lt;stdio.h&gt; #include &lt;stdlib.h&gt; #define FCY 16000000UL #include &lt;xc.h&gt; #include &lt;libpic30.h&gt; #include&lt;GenericTypeDefs.h&gt; #include &lt;p24FJ128GB202.h&gt;  _CONFIG4(DSWDTPS_DSWDTPS5 &amp; DSWDTOSC_LPRC &amp; DSBOREN_OFF &amp; DSWDTEN_OFF &amp; DSSWEN_OFF &amp; PLLDIV_PLL8X &amp; I2C1SEL_DISABLE &amp; IOL1WAY_OFF) _CONFIG3(WPFP_WPFP63 &amp; SOSCSEL_OFF &amp; WDTWIN_PS75_0  &amp; BOREN_OFF &amp; PLLSS_PLL_FRC &amp; WPDIS_WPDIS &amp; WPCFG_WPCFGDIS &amp; WPEND_WPSTARTMEM) //&amp; PLLSS_PLL_FRC _CONFIG2(POSCMD_NONE &amp; WDTCLK_LPRC &amp; OSCIOFCN_ON  &amp; FCKSM_CSDCMD &amp; FNOSC_FRCPLL  &amp; ALTRB6_RETAIN &amp; ALTCMPI_CxINC_RX &amp; WDTCMX_WDTCLK &amp; IESO_OFF)//&amp; FNOSC_FRCPLL _CONFIG1(WDTPS_PS1024 &amp; FWPSA_PR128 &amp; WINDIS_OFF &amp; FWDTEN_OFF &amp; ICS_PGx1 &amp; LPCFG_ON &amp; GCP_OFF &amp; JTAGEN_OFF)    void __attribute__((__interrupt__,__auto_psv__)) _SPI1Interrupt(void);   void SPI_write() { PORTAbits.RA2 =0;     SPI1BUFL = 0xAAAA;    } void SPI_delay() {     short i;     for(i=0;i&lt;8;i++)     ;   } void SPI_config(){     SPI1CON1Lbits.SPIEN = 0 ;     __builtin_write_OSCCONL(OSCCON &amp; 0xbf);         // Unlock PPS     RPOR1bits.RP2R = 7;                             //SPI SDO1     RPOR1bits.RP3R = 8;                             //SPI SCK1     SPI1STATLbits.SPIROV =0;                        //OVERflow Flag reset     SPI1CON1Lbits.MSTEN = 1;                        //SPI Master     SPI1CON1Lbits.MODE = 1;                         //16- bit Data transfer     SPI1CON1Lbits.CKE = 0;     SPI1CON1Lbits.CKP =0;        __builtin_write_OSCCONL(OSCCON | 0x40);      // Lock PPS     SPI1CON1Lbits.SPIEN = 1 ; }  static inline void init_io(void) {         /* Digital Mode */         ANSA = 0;         ANSB = 0;          /* Reset O/P */         LATB = 0;         LATA =0 ;      /* O/D Off */     ODCA = 0;     ODCB = 0;         /* Define Outpot port */         TRISB = 0 ;         TRISA =0 ; }   int main (void)  {     CLKDIVbits.CPDIV = 0x01;     init_io();     SPI_config();     //////////////////////////////// SPI Interrupt ////////////////////////////////     _SPI1IP = 1;     _SPI1IF =  0;     SPI1IMSKLbits.SRMTEN = 0x01;         _SPI1IE =1;   //////////////////////////////// main code //////////////////////////////////////////     while(1)     {       SPI_write();       __delay_ms(1);     }    return 0;  }      void __attribute__((__interrupt__, __auto_psv__)) _SPI1Interrupt(void) {     // Clear SPI1 1 interrupt flag     _SPI1IF = 0;       PORTAbits.RA2 =1;     } </code></pre>  <p>I am receiving clock and data properly. But the port A (slave select) goes high while SPI transfer. </p>  <p><a href="http://i.stack.imgur.com/i64b1.jpg" rel="nofollow"><img src="http://i.stack.imgur.com/i64b1.jpg" alt="enter image description here"></a>I have tried millions of combinations of delays  </p>  <p>I have even tried SPIwrite as:</p>  <pre><code>void SPI_write() { PORTAbits.RA2 =0; short temp,temp1;       SPI1BUFL = 0xAAAA;     __delay_ms(1);     temp = SPI1BUFL;     temp1 =SPI1BUFH;     while(!SPI1STATLbits.SPIRBF);    } </code></pre>  <p>and also tried to enable disable pin before and after writing<br> Like </p>  <pre><code>PORTAbits.RA2 =0; SPI_write(); PORTAbits.RA2 =1; </code></pre>  <p>Still same error</p>  <p>Please please please!!! help I am getting frustrated with this error</p>