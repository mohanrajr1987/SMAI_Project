<p>I have a generic question regarding obtaining a <strong><em>very high latency</em></strong>. I am coding for a target device which has <strong>Windows Embedded Pro 7</strong>. So i would assume that I can get real time performance (from what I have read). I am using "<strong>System.Timers</strong>" for setting a time cycle.Below is an example in </p>  <pre><code>    public void updateCycle50ms( )     {         Stopwatch t = Stopwatch.StartNew();         System.TimeSpan timer50ms = System.TimeSpan.FromMilliseconds(50);             while (1 == 1)         {             // Sending Message             CANSEND(ref msg);  // This function sends Message over CAN network.               while (t.Elapsed &lt; timer50ms)             {                 // do nothing             }         }     } </code></pre>  <p>What I try to do is send a message every <strong>50 milliSecond</strong>, but at the the cycle takes from <strong>29ms to 90ms</strong> (I can see it at receiving end). Can you guys tell me why I am not able to achieve my goal. Do I need to use another .Net class or there are special classes which can be used in <strong>Windows Embedded</strong> to get Real Time Performance (or closer to it).</p>