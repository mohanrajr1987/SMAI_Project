<p>Recently, I am facing a - to me - strange behavior in my embedded software.</p>  <p><strong>What I got:</strong> Running a 32 bit AVR32 controller, starting the program from an external SDRAM, as the file size is too big to start it directly from the micro-controller flash. Due to the physical memory map, the memory areas are split between: </p>  <blockquote>   <p>stack (start at 0x1000, length of 0xF000) ( &lt; 0x1000 is protected by the MPU)</p>      <p>EBI SDRAM (start at 0xD0000000, length of 0x00400000).</p> </blockquote>  <hr>  <p><strong>What happens:</strong> Unfortunately I got an exception, which is not reproducible. Looking at my given stack trace, the following event irregular occurs:</p>  <blockquote>   <p>Name: Bus error data fetch - Event source: Data bus - Stored Return Address: First non-completed instruction</p> </blockquote>  <p>Additionally, the stack pointer has a valid value, whereas the address where the exception occurs (last entry point for fetching instructions), points into the memory nirvana (e.g. 0x496e6372, something around 0x5..., 0x6....). I guess, this has to be the "First non-completed instruction", the manual is talking about.  However, the line in my source code is always the same: accessing a member function from a data array via pointer. </p>  <pre><code>      if(mSomeArray[i])       {          mSomeArray[i]-&gt;someFunction(); &lt;-- Crash       } </code></pre>  <p>The thing is: adding or deleting other source code makes the event disappear and return again.</p>  <hr>  <p><strong>What I thought about:</strong> Something is corrupting my memory (mapping). What kinds of errors are possible for this? </p>  <ul> <li>A buffer overflow? </li> <li>The SDRAM controller could be turned off, so it loses some data. That is not impossible, but rather improbably</li> <li>The stack is big enough, I already checked this with a watermark</li> <li>The Data Bus Rate and AVR clock are set correctly</li> </ul>  <hr>  <p><strong>How to solve this:</strong> More assert? Unfortunately I cannot debug this with AVRStudio. Anyone a hint or idea? Or am I missing something obvious?</p>  <hr>  <h2>Edit:</h2>  <p><strong>Mentioned approaches from users:</strong> </p>  <ul> <li>Check for addresses of function pointer and array entries</li> <li>Overwrite of stack array</li> <li>Not properly written interrupts</li> <li>Not initialized pointers</li> <li>Check for array access via <code>i</code> at crash case</li> <li>use exception handler address for illegal memory access</li> <li>use <code>snprintf</code> instead of <code>sprintf</code></li> </ul>