<p>C and some other languages have <a href="https://en.wikipedia.org/wiki/Bitwise_operation#Bit_shifts" rel="nofollow">bitwise shifts</a>. They usually have at least logical shifts (actually those are arithmetic when using them to signed integers and logical when integers are unsigned)<a href="https://en.wikipedia.org/wiki/Bitwise_operation#Shifts_in_C.2C_C.2B.2B.2C_C.23_and_Python" rel="nofollow">[source]</a>:</p>  <ul> <li>shift left (<code>&lt;&lt;</code>)</li> <li>shift right (<code>&gt;&gt;</code>)</li> </ul>  <p>In Java there is also an logical shift right (<code>&gt;&gt;&gt;</code>). There is no separate logical shift right, because its the same as arithmetic shift right. <a href="https://en.wikipedia.org/wiki/Bitwise_operation#Shifts_in_Java" rel="nofollow">[source]</a></p>  <p>When coding assembly language I sometimes need <em>circular shifts</em> (<code>crc</code>, <code>crl</code>, <code>ror</code> and <code>rol</code>). Sometimes I'd like to note them as symbols instead of letter combinations when planning or writing documentation. I was unable to find any symbols for them.</p>  <p>From <a href="https://en.wikipedia.org/wiki/Bitwise_operation#Circular_rotates_in_C_and_C.2B.2B" rel="nofollow">wikipedia</a>:</p>  <blockquote>   <p>There are also compiler-specific intrinsics implementing circular shifts, like _rotl8, _rotl16, _rotr8, _rotr16 in Microsoft Visual C++. Clang provides some rotate intrinsics for Microsoft compatibility that suffers the problems above.[9] GCC does not offer rotate intrinsics.</p> </blockquote>  <p><strong>Are there established symbols for bitwise circular shifts?</strong></p>