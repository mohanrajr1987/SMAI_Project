<p>In my Sharepoint 2010 app, I'm handling most events client-side with jQuery. However, for the saving of data to the Sharepoint list, and the generation of a PDF file with that data, I want to handle that server-side, with C#.</p>  <p>I tried to invoke a C# event this way:</p>  <p>0) Aded an HTML button in my project's *.ascx file:</p>  <pre><code>&lt;button type="button" name="saveData" id="saveData"&gt;Save Data&lt;/button&gt; </code></pre>  <p>1) Added jQuery to respond to that button being clicked (in the same *.ascx file):</p>  <pre><code>$("#saveData").click(function () {       $('#hiddenSave').trigger('valuechanged');   }); </code></pre>  <p>2) Created a hidden element in the server-side C# (in the *.ascx.cs file):</p>  <pre><code>HiddenField hiddenSave = null;  protected void Page_Load(object sender, EventArgs e) {     base.OnPreRender(e);      hiddenSave = new HiddenField();     hiddenSave.ID = "hiddenSave";     hiddenSave.ValueChanged += new EventHandler(hiddenSave_ValueChanged);     this.Controls.Add(hiddenSave); }  protected void hiddenSave_ValueChanged(object sender, EventArgs e) {     GeneratePDF(); }  private void GeneratePDF() {     ;//bla } </code></pre>  <p>But I never reach the "ValueChanged" event handler; $("#saveData").click() fires, but not hiddenSave_ValueChanged().</p>  <p>So do I need a tweak to this, or a completely different approach? How can I do as much as possible client-side with jQuery, but also run server-side/C# code where necessary, in a Sharepoint 2010 app?</p>  <h2>UPDATE</h2>  <p>A little more detail, and about additional things I've tried: I'm creating a button on a Sharepoint page dynamically (in C#) in my *.ascx.cs file:</p>  <pre><code>Button btnSave = null;  protected void Page_Load(object sender, EventArgs e) {     base.OnPreRender(e);          this.Controls.Add(new LiteralControl("&lt;br /&gt;"));     btnSave = new Button();     btnSave.ID = "btnSave";     btnSave.Text = "Save the Data";      btnSave.Click += new EventHandler(btnSave_Click);     btnSave.Visible = false;     this.Controls.Add(btnSave); }  protected void btnSave_Click(object sender, EventArgs e) {     btnSave.Text = "You clicked me!";      PostTravelData ptd = new PostTravelData(); } </code></pre>  <p>I set it visible at the right time in the client-side jQuery in the *.ascx file:</p>  <pre><code>$('#btnSave').show(); </code></pre>  <p>However, clicking the button does not reach the btnSave_Click() event - the breakpoint there is never reached, nor is the button's text changed. Why not?</p>  <p>Even when I don't set the button invisible (comment out the "btnSave.Visible = false;" line), the click handler isn't reached...is Page_Load() too late? Is there an earlier page event I can use that would work?</p>  <p>I tried moving it from Page_Load() to OnPreRender(), too, like this:</p>  <pre><code>protected void OnPreRender(EventArgs e) {     this.Controls.Add(new LiteralControl("&lt;br /&gt;"));     btnSave = new Button();     btnSave.ID = "btnSave";     btnSave.Text = "Save the Data";     btnSave.Click += new EventHandler(btnSave_Click);     //btnSave.Visible = false;     this.Controls.Add(btnSave); } </code></pre>  <p>...(and OnRender()) but the button doesn't even display...</p>  <p>And, trying a different tack, I commented out the dynamic creation server-side code and tried to attach to a button created in the HTML (*.ascx file):</p>  <pre><code>&lt;button type="button" name="saveData" id="saveData" runat="server" onclick="saveData_Click"&gt;Save Data&lt;/button&gt; </code></pre>  <p>(by adding the "runat server" and the onclick handler), and then adding this "code-behind" (*.ascx.cs)):</p>  <pre><code>protected void saveData_Click(object sender, EventArgs e) {     PostTravelData ptd = new PostTravelData();     SaveToList(ptd);     GeneratePDF(ptd); }         </code></pre>  <p>...but there was still no joy in Mudville -- the breakpoint in the handler is not reached.</p>  <p>Yet another attempt was:</p>  <p>In the *.ascx:</p>  <pre><code>&lt;asp:Button runat="server" id="saveData" name="saveData" onclick="saveData_Click" Text="Bla" /&gt; </code></pre>  <p>In the code-behind:</p>  <pre><code>saveData.Click += saveData_Click; </code></pre>  <p>The "Bla" button is created, but clicking on it reaches not the breakpoint in the "saveData_Click" handler.</p>  <p>I even adapted some code from <a href="http://blogs.learnnowonline.com/2013/12/27/create-child-controls-microsoft-sharepoint-2010/#comment-1042" rel="nofollow">here</a> like so:</p>  <pre><code>Button btnSave = null;  . . .  protected override void CreateChildControls() {     btnSave = new Button();     btnSave.Width = new Unit(150, UnitType.Pixel);     btnSave.Text = "Can you see me?";     btnSave.Click += new EventHandler(btnSave_Click);     Controls.Add(btnSave); } </code></pre>  <p>...but I still do not reach the "protected void btnSave_Click(object sender, EventArgs e)" handler when I click the button.</p>  <p>Surely there's a way to get a handle on the button server-side and manipulate it (specifically, respond to its click event)...?!?</p>