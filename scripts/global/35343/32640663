<p>I thought HTML5 was backwards compatible - so why does Sharepoint 2010 knock me sprawling to the ground when I try to use the new input type "date"?</p>  <p>That's apparently the problem here; my Web Part project throws a runtime exception on the "Control control = Page.LoadControl(_ascxPath);" line here:</p>  <pre><code>[ToolboxItemAttribute(false)] public class PostTravelWizardWebPart : WebPart {     // Visual Studio might automatically update this path when you change the Visual Web Part project item.     private const string _ascxPath = @"~/_CONTROLTEMPLATES/PostTravelWizard/PostTravelWizardWebPart/PostTravelWizardWebPartUserControl.ascx";      protected override void CreateChildControls()     {         Control control = Page.LoadControl(_ascxPath);         Controls.Add(control);     } } </code></pre>  <p>The exception is, "<em>System.Web.HttpParseException was unhandled by user code   Message='date' is not a valid type for an input tag.</em>"</p>  <p><em>Manzanas del Camino del Toro!</em></p>  <p>This happens after adding this code:</p>  <p>0) Added the "runat="server"" to this HTML in the *.ascx file:</p>  <pre><code>&lt;input type="date" style="width=100px" id="formfilledout" name="formfilledout" runat="server" /&gt; </code></pre>  <p>1) Added this C# helper method:</p>  <pre><code>// from http://stackoverflow.com/questions/4955769/better-way-to-find-control-in-asp-net // for getting html elements by id public static class ControlExtensions {     public static Control FindControlRecursive(this Control control, string id)     {         if (control == null) return null;         //try to find the control at the current level         Control ctrl = control.FindControl(id);          if (ctrl == null)         {             //search the children             foreach (Control child in control.Controls)             {                 ctrl = FindControlRecursive(child, id);                  if (ctrl != null) break;             }         }         return ctrl;     } } </code></pre>  <p>2) Called that method from the Web Part's (*.ascx.cs file) Page_Load method like so:</p>  <pre><code>protected void Page_Load(object sender, EventArgs e) {     base.OnPreRender(e);      . . .      Control ctrl = this.FindControlRecursive("formfilledout");     bool ctrlIsNull = false;     if (null == ctrl)     {         ctrlIsNull = true;     } } </code></pre>  <p>I have a breakpoint in the "ctrlIsNull = true;" line, but it doesn't even reach that. It immediately fails.</p>  <p>Even when I commented out the entire section above, though (everything in Page_Load() below "base.OnPreRender(e);" it still fails in the same way.</p>  <p>So I removed the "runat="server"" directive from the "formfilledout" input date, and that prevents the exception - so why does adding "runat="server"" to an html input element of type "date" cause the sky to fall?</p>  <p>It's another "Catch-22" because the "ctrlIsNull = true;" is hit; so with the "runat server" it fails; without it, the html input element is not found by Id.</p>  <p>There's got to be an easier way to access html elements (and their values) than jumping through these flaming hoops and running through these pummeling gauntlets.</p>