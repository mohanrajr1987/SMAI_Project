<p>I'm working on a <code>QR Scanner</code> View Application. I want to get Scanner output into a <code>ListView</code> on <code>Activity</code> Class.. But when i scanned a QR code when its returning to <code>listView</code> Class the application getting force close. Can anyone tell me whats the problem.. Thanks in Advance!! :)</p>  <p>Here's my <strong>customList class</strong> where <code>ArrayAdapter</code> located.</p>  <pre><code>public class customList extends ArrayAdapter&lt;String&gt; { private final Activity context; private final String[]itmName; private final Integer[]itmPrice; public customList(Activity context, String[]itmName, Integer[]itmPrice){     super(context, R.layout.columnview, itmName);     this.context = context;     this.itmName = itmName;     this.itmPrice = itmPrice; }  @Override public View getView(int position, View view, ViewGroup parent){     LayoutInflater inflater = context.getLayoutInflater();     View rowView = inflater.inflate(R.layout.columnview, null, true);     TextView txtViewName = (TextView) rowView.findViewById(R.id.itmCol);     TextView txtViewPrice = (TextView) rowView.findViewById(R.id.priceCol);     txtViewName.setText(itmName[position]);     txtViewPrice.setText(itmPrice[position]);     return rowView; } } </code></pre>  <hr>  <p><strong>Here's my ScannerActivity Class</strong></p>  <pre><code>public class QRScanMenu extends Activity { String itmName; Integer itmPrice; @Override protected void onCreate(Bundle savedInstanceState) {     super.onCreate(savedInstanceState);     setContentView(R.layout.qrscannermenu);      HandleClick handleClick = new HandleClick();     findViewById(R.id.QRButton).setOnClickListener(handleClick);     findViewById(R.id.ExitButton).setOnClickListener(handleClick);    }  private class HandleClick implements View.OnClickListener{     public void onClick(View arg0){         try{             Intent intent = new Intent("com.google.zxing.client.android.SCAN");             switch (arg0.getId()){                 case R.id.QRButton:                     intent.putExtra("SCAN_MODE", "QR_CODE_MODE");                     break;                  case R.id.ExitButton:                     Intent i = new Intent(QRScanMenu.this, MainActivity.class);                     startActivity(i);                     break;             }             startActivityForResult(intent, 0);         }         catch (ActivityNotFoundException ex){             showDialog(QRScanMenu.this, "No Scanner Application Found", "Download Scanner Application?", "Yes", "No").show();         }     } }  private static AlertDialog showDialog(final Activity activity, CharSequence title, CharSequence message, CharSequence btnYes, CharSequence btnNo){     AlertDialog.Builder downloadDialog = new AlertDialog.Builder(activity);     downloadDialog.setTitle(title);     downloadDialog.setTitle(message);     downloadDialog.setPositiveButton(btnYes, new DialogInterface.OnClickListener() {         @Override         public void onClick(DialogInterface dialog, int which) {             Uri uri = Uri.parse("market://search?q=pname:" + "com.google.zxing.client.android");             Intent intent = new Intent(Intent.ACTION_VIEW, uri);             try {                 activity.startActivity(intent);             } catch (ActivityNotFoundException ex) {              }         }     });     downloadDialog.setNegativeButton(btnNo, new DialogInterface.OnClickListener() {         @Override         public void onClick(DialogInterface dialog, int which) {          }     });     return downloadDialog.show(); }  public void onActivityResult(int reqCode, int resCode, Intent intent){     if (reqCode == 0){         TextView qrStatus = (TextView) findViewById(R.id.statusText);         TextView qrResult = (TextView) findViewById(R.id.resultText);         ListView listView = (ListView) findViewById(R.id.qrItmList);          if(resCode == RESULT_OK){             qrStatus.setText(intent.getStringExtra("SCAN_RESULT_FORMAT"));             qrResult.setText(intent.getStringExtra("SCAN_RESULT"));             String scanRes = intent.getStringExtra("SCAN_RESULT");             StringTokenizer tokenizer = new StringTokenizer(scanRes, ":");             itmName = tokenizer.nextToken();             final String[] newd = new String[1];             newd[1]=itmName;             itmPrice = Integer.valueOf(tokenizer.nextToken());             Integer[] newI = new Integer[1];             newI[1]=itmPrice;              customList adapter = new customList(QRScanMenu.this, newd, newI);             listView.setAdapter(adapter);              listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {                 @Override                 public void onItemClick(AdapterView&lt;?&gt; parent, View view, int position, long id) {                     Toast.makeText(QRScanMenu.this, "You Clicked at "+newd, Toast.LENGTH_SHORT).show();                 }             });                //adapter.add(itmName);             //adapter.add(itmPrice);         }         else if (resCode == RESULT_CANCELED){             qrStatus.setText("Press QR Scan button to Scan Item");             qrResult.setText("Scan Cancelled");         }     } } } </code></pre>  <hr>  <p>I want to view the Values assigned into these two Variables(mentioned above) into the ListView while a user scanning an item.</p>  <pre><code>String scanRes = intent.getStringExtra("SCAN_RESULT");     StringTokenizer tokenizer = new StringTokenizer(scanRes, ":");     itmName = tokenizer.nextToken();     itmPrice = Integer.valueOf(tokenizer.nextToken()); </code></pre>