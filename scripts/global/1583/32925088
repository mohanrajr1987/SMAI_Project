<p>i have a string-array having all the elements in string resources, now i am using google voice recognition to convert speech to text i want the text to be compared or filtered with my list-view adapter i want the text generated by voice recognition to be compared with my list-view item or search in the list-view item</p>  <p>my voiceserach xml</p>  <pre><code>&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"     android:layout_width="fill_parent"     android:layout_height="fill_parent"     android:orientation="vertical"      android:background="@drawable/bg"&gt;      &lt;TextView         android:id="@+id/textView1"         android:layout_width="wrap_content"         android:layout_height="wrap_content"         android:text="Please note the voice serach work only with the internet"         android:textColor="#ff0000"         android:textSize="10dp" /&gt;      &lt;ImageView         android:id="@+id/start_reg"         android:layout_width="wrap_content"         android:layout_height="75dp"         android:src="@drawable/mic"         android:layout_gravity="center" /&gt;   &lt;LinearLayout     android:layout_width="match_parent"     android:layout_height="wrap_content"      android:orientation="horizontal"&gt;      &lt;Button         android:id="@+id/hindButton"         android:layout_width="wrap_content"         android:layout_height="wrap_content"         android:layout_weight="0.44"         android:text="hindi" /&gt;      &lt;Button         android:id="@+id/engButton"         android:layout_width="wrap_content"         android:layout_height="wrap_content"         android:layout_weight="0.36"         android:text="english" /&gt;  &lt;/LinearLayout&gt; &lt;EditText      android:id="@+id/speech"     android:layout_height="wrap_content"     android:layout_width="fill_parent"     android:hint="your voice search word"     /&gt; &lt;ListView     android:id="@+id/list"     android:layout_width="match_parent"     android:layout_height="wrap_content" &gt; &lt;/ListView&gt;  &lt;/LinearLayout&gt; </code></pre>  <p>my VoiceSearchActivity</p>  <pre><code>public class VoiceSearchActivity extends Activity {     ImageView Start;     private static final int REQUEST_CODE = 1234;     EditText Speech;     Dialog match_text_dialog;     ListView textlist;     ArrayList&lt;String&gt; matches_text;     Button hindb, engb;     private ListView list;     private EditText speech;     private ArrayList&lt;Dictionary&gt; arrayList;     private static DrawerLayout drawerLayout;     private ListView drawerListView;     private Resources res;     private VoiceSearchAdapterHinglish adapter;     private static VoiceSearchActivity vss;      @Override     protected void onCreate(Bundle savedInstanceState) {          super.onCreate(savedInstanceState);         setContentView(R.layout.voice_search);          Start = (ImageView) findViewById(R.id.start_reg);         Speech = (EditText) findViewById(R.id.speech);         hindb = (Button) findViewById(R.id.hindButton);          vss = this;          hindb.setOnClickListener(new OnClickListener() {              @Override             public void onClick(View v) {                 try {                     list = (ListView) findViewById(R.id.list);                     arrayList = new ArrayList&lt;Dictionary&gt;();                     res = getResources();                     String hinglish[] = res.getStringArray(R.array.hinglish);                     String english[] = res.getStringArray(R.array.english);                      for (int i = 0; i &lt; hinglish.length; i++) {                         Dictionary dc = new Dictionary(hinglish[i], english[i]);                         arrayList.add(dc);                      }                     adapter = new VoiceSearchAdapterHinglish(                             VoiceSearchActivity.this, arrayList);                     list.setAdapter(adapter);                     String text = speech.getText().toString()                             .toLowerCase(Locale.getDefault());                     adapter.filter(text);                 } catch (Exception e) {                     Toast.makeText(VoiceSearchActivity.this, "" + e, 300)                             .show();                 }              }         });          // speech = (EditText)findViewById(R.id.speech);          Start.setOnClickListener(new OnClickListener() {             @Override             public void onClick(View v) {                 Animation animation1 = AnimationUtils.loadAnimation(                         getApplicationContext(), R.anim.shake1);                 Start.startAnimation(animation1);                  if (isConnected()) {                     Intent intent = new Intent(                             RecognizerIntent.ACTION_RECOGNIZE_SPEECH);                     intent.putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL,                             RecognizerIntent.LANGUAGE_MODEL_FREE_FORM);                     startActivityForResult(intent, REQUEST_CODE);                 } else {                     Toast.makeText(getApplicationContext(),                             "Plese Connect to Internet", Toast.LENGTH_LONG)                             .show();                 }             }          });      }      public boolean isConnected() {         ConnectivityManager cm = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);         NetworkInfo net = cm.getActiveNetworkInfo();         if (net != null &amp;&amp; net.isAvailable() &amp;&amp; net.isConnected()) {             return true;         } else {             return false;         }     }      @Override     protected void onActivityResult(int requestCode, int resultCode, Intent data) {         if (requestCode == REQUEST_CODE &amp;&amp; resultCode == RESULT_OK) {              match_text_dialog = new Dialog(VoiceSearchActivity.this);             match_text_dialog.setContentView(R.layout.dialog_matches_frag);             match_text_dialog.setTitle("Select Matching Text");             textlist = (ListView) match_text_dialog.findViewById(R.id.list);             matches_text = data                     .getStringArrayListExtra(RecognizerIntent.EXTRA_RESULTS);             ArrayAdapter&lt;String&gt; adapter = new ArrayAdapter&lt;String&gt;(this,                     android.R.layout.simple_list_item_1, matches_text);             textlist.setAdapter(adapter);             textlist.setOnItemClickListener(new AdapterView.OnItemClickListener() {                  @Override                 public void onItemClick(AdapterView&lt;?&gt; parent, View view,                         int position, long id) {                     try {                         Speech.setText("" + matches_text.get(position));                         match_text_dialog.hide();                      } catch (Exception e) {                         Toast.makeText(VoiceSearchActivity.this, "" + e, 300)                                 .show();                     }                  }             });             match_text_dialog.show();          }         super.onActivityResult(requestCode, resultCode, data);     }  } </code></pre>  <p>my voice adapter class for arraylist mainating words</p>  <pre><code>public class VoiceSearchAdapterHinglish extends BaseAdapter {     private ArrayList&lt;Dictionary&gt; list;     private LayoutInflater inf;     private ArrayList&lt;Dictionary&gt; arraylist;     private VoiceSearchActivity mContext;      public VoiceSearchAdapterHinglish(VoiceSearchActivity vss,             ArrayList&lt;Dictionary&gt; arrayList) {         // TODO Auto-generated constructor stub         Log.d("ADAPTER OPENS", "ADAPPPPPPPPPPPPPPPP");         mContext = vss;         list = arrayList;         inf = LayoutInflater.from(vss);         this.arraylist = new ArrayList&lt;Dictionary&gt;();         this.arraylist.addAll(arrayList);     }      @Override     public int getCount() {         // TODO Auto-generated method stub         return list.size();     }      @Override     public Object getItem(int position) {         // TODO Auto-generated method stub         return list.get(position);     }      @Override     public long getItemId(int position) {         // TODO Auto-generated method stub         return position;     }      @Override     public View getView(final int position, View convertView, ViewGroup parent) {         // TODO Auto-generated method stub         Log.d("OPPENIN getView", "getView in HinglishAdapter");          final LinearLayout view = (LinearLayout) inf.inflate(                 R.layout.list_item, parent, false);          final ViewHolder holder = new ViewHolder();          holder.hinglish = (TextView) view.findViewById(R.id.hindi);         holder.english = (TextView) view.findViewById(R.id.english);          holder.hinglish.setText(list.get(position).getHinglish());         holder.english.setText(list.get(position).getEnglish());          view.setOnClickListener(new OnClickListener() {              @Override             public void onClick(View v) {                 // TODO Auto-generated method stub                  Intent intent = new Intent(mContext, SingleItemView.class);                  intent.putExtra("hinglish", (list.get(position).getHinglish()));                  intent.putExtra("english", (list.get(position).getEnglish()));                  mContext.startActivity(intent);              }         });          return view;     }      // Filter Class     public void filter(String charText) {         charText = charText.toLowerCase(Locale.getDefault());         list.clear();         if (charText.length() == 0) {             list.addAll(arraylist);         } else {             for (Dictionary dc : arraylist)                 if (dc.getHinglish().toLowerCase(Locale.getDefault())                         .contains(charText)) {                     list.add(dc);                 }         }         notifyDataSetChanged();     }      public class ViewHolder {          TextView hinglish;         TextView english;     } } </code></pre>  <p>string.xml</p>  <pre><code> &lt;string-array name="hinglish"&gt;                &lt;item&gt;aad&lt;/item&gt;         &lt;item&gt;aadesh&lt;/item&gt;         &lt;item&gt;aadha&lt;/item&gt; &lt;/string-array&gt;     &lt;string-array name="english"&gt;               &lt;item&gt;shield, cover&lt;/item&gt;      &lt;item&gt;instruction&lt;/item&gt;      &lt;item&gt;half&lt;/item&gt;      &lt;/string-array&gt; </code></pre>  <p>please help in searching the voice to text converted text to xompare or filter with the listview item</p>