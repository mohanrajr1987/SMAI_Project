<p>I have a <code>ListView</code> with a custom <code>ListAdapter</code>:</p>  <pre><code>import android.content.Context; import android.graphics.Bitmap; import android.view.LayoutInflater; import android.view.View; import android.view.ViewGroup; import android.widget.ArrayAdapter; import android.widget.ImageView; import android.widget.TextView; import com.nostra13.universalimageloader.core.DisplayImageOptions; import com.nostra13.universalimageloader.core.ImageLoader; import com.nostra13.universalimageloader.core.assist.ImageSize; import com.nostra13.universalimageloader.core.listener.SimpleImageLoadingListener;  import java.util.ArrayList;  /**  * Created by Tukajo on 10/1/2015.  */ public class CharacterListAdapter extends ArrayAdapter&lt;Character&gt; implements ResourceDownloader.OnTaskCompleted {     private ImageView charImgView = null;      public CharacterListAdapter(Context context, int textViewResourceId) {         super(context, textViewResourceId);     }      public CharacterListAdapter(Context context, int resource, ArrayList&lt;Character&gt; items) {         super(context, resource, items);     }      @Override     public View getView(int position, View convertView, ViewGroup parent) {          View v = convertView;         if (v == null) {             LayoutInflater vi;             vi = LayoutInflater.from(getContext());             v = vi.inflate(R.layout.custom_character_list_row, null);         }          Character p = getItem(position);         charImgView = (ImageView) v.findViewById(R.id.characterImageView);         if (p != null) {             ImageSize targetSize = new ImageSize(200, 200);             ImageLoader imageLoader = ImageLoader.getInstance();             DisplayImageOptions options = new DisplayImageOptions.Builder().showImageOnLoading(R.drawable.ic_person_brown_600_48dp)                     .showImageForEmptyUri(R.drawable.ic_person_brown_600_48dp)                     .showImageOnFail(R.drawable.ic_person_brown_600_48dp)                     .cacheInMemory(false)                     .cacheOnDisk(true)                     .build();             imageLoader.loadImage(p.getPhoto(), targetSize, options, new SimpleImageLoadingListener() {                 @Override                 public void onLoadingComplete(String imageUri, View view, Bitmap loadedImage) {                     charImgView.setImageBitmap(loadedImage);                 }             });          }          return v;     }      @Override     public void onTaskCompleted(Bitmap bitmap) {         charImgView.setImageBitmap(bitmap);     } } </code></pre>  <p>However running the list, I get the images "loading" in storage, but the default drawables are still loading.</p>  <p>Here is a screenshot with what I mean:</p>  <p><a href="http://i.stack.imgur.com/RWU3B.png" rel="nofollow"><img src="http://i.stack.imgur.com/RWU3B.png" alt="enter image description here"></a></p>