<p>I'm in the situation where I have to translate python expression to Latex Bitmap for the enduser (who feels confident enough to write python functions by himself but prefers to watch result in Latex).</p>  <p>I'm using Matplotlib.mathtext to do the job (from a translated latex raw string) with the following code.</p>  <pre><code>import wx import wx.lib.scrolledpanel as scrolled  import matplotlib as mpl from matplotlib import cm  from matplotlib import mathtext  class LatexBitmapFactory():     """ Latex Expression to Bitmap """     mpl.rc('image', origin='upper')     parser = mathtext.MathTextParser("Bitmap")      mpl.rc('text', usetex=True)     DefaultProps = mpl.font_manager.FontProperties(family = "sans-serif",\                                                     style = "normal",\                                                     weight = "medium",\                                                     size = 6)     # size is changed from 6 to 7  #-------------------------------------------------------------------------------     def SetBitmap(self, _parent, _line, dpi = 150, prop = DefaultProps):         bmp = self.mathtext_to_wxbitmap(_line, dpi, prop = prop)         w,h = bmp.GetWidth(), bmp.GetHeight()         return wx.StaticBitmap(_parent, -1, bmp, (80, 50), (w, h)) #-------------------------------------------------------------------------------     def mathtext_to_wxbitmap(self, _s, dpi = 150, prop = DefaultProps):         ftimage, depth = self.parser.parse(_s, dpi, prop)         w,h = ftimage.get_width(), ftimage.get_height()         return wx.BitmapFromBufferRGBA(w, h, ftimage.as_rgba_str())   EXP = r'$\left(\frac{A \cdot \left(vds \cdot rs + \operatorname{Vdp}\left(ri, Rn, Hr, Hd\right) \cdot rh\right) \cdot \left(rSurf + \left(1.0 - rSurf\right) \cdot ft\right) \cdot \left(1.0 - e^{- \left(\left(lr + \frac{\operatorname{Log}\left(2\right)}{tem \cdot 86400.0}\right)\right) \cdot tFr \cdot 3600.0}\right)}{rc \cdot \left(lr + \frac{\operatorname{Log}\left(2\right)}{tem \cdot 86400.0}\right) \cdot tFr \cdot 3600.0} + 1\right)$'  class aFrame(wx.Frame):     def __init__(self, title="Edition"):         wx.Frame.__init__(self, None, wx.ID_ANY, title=title, size=(600,400),                           style=wx.DEFAULT_DIALOG_STYLE|wx.RESIZE_BORDER)         self.SetBackgroundColour(wx.Colour(255,255,255))          sizer = wx.FlexGridSizer(cols=25, vgap=4, hgap=4)         panel = scrolled.ScrolledPanel(self)         image_latex = LatexBitmapFactory().SetBitmap(panel, EXP)          sizer.Add(image_latex, flag=wx.EXPAND|wx.ALL)         panel.SetSizer(sizer)         panel.SetAutoLayout(1)         panel.SetupScrolling()   app = wx.App(redirect=True, filename="latexlog.txt") frame = aFrame() frame.Show() app.MainLoop() </code></pre>  <p>with size=6, the following picture is displayed <a href="http://i.stack.imgur.com/QeBYa.png" rel="nofollow"><img src="http://i.stack.imgur.com/QeBYa.png" alt="Did you find the &quot;!&quot; ?"></a></p>  <p>with size=7, I have this one <a href="http://i.stack.imgur.com/kQBWn.png" rel="nofollow"><img src="http://i.stack.imgur.com/kQBWn.png" alt="perfect !"></a></p>  <p>The latex expression is correct, the second picture is correct. I don't have any error message, just a right parenthesis replaced with "!".</p>  <p>If I continue writing the expression I still have "!" with size 6.</p>  <p><a href="http://i.stack.imgur.com/tLUq7.png" rel="nofollow"><img src="http://i.stack.imgur.com/tLUq7.png" alt="T_T"></a></p>  <p>If the expression is simpler, the right parenthesis is correctly displayed.</p>  <p>Any idea to solve it ?</p>