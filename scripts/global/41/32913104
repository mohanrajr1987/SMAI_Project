<p>I am relatively new to MVC, and here's where I'm at:</p>  <p>I have 2 Models:</p>  <p>The Site model -</p>  <pre><code>SiteID() As Integer Name() As String Latitude() As Double Longitude() As Double </code></pre>  <p>And the Device model -</p>  <pre><code>DeviceID() As Integer Make() As String Model() As String Serial() As String Site() As Site </code></pre>  <p>As you can see, a Device is linked to a Site. In the DB Context, the Devices table contains the foreign key "Site_SiteID" as shown:</p>  <p><a href="http://i.stack.imgur.com/scKEh.png" rel="nofollow"><img src="http://i.stack.imgur.com/scKEh.png" alt="DB Context"></a></p>  <p>What I'm trying to do is in the Device views for Create and Edit, make it so the Site field is a <code>DropDownListFor</code>, whose list contains the Sites that exist in the Site table.  Then save the selected site as the device's site.</p>  <p>This is what I put in the Create view for creating the list that will be in the drop down...followed by the DropDownListFor:</p>  <pre><code>@ModelType TestWebApplication2.Device @Code     ViewData("Title") = "Create"      Dim selectSite As New List(Of SelectListItem)     Dim db = New TestWebApplication2.Models.TestWebApplication2Context     Dim listOfSites As List(Of Site)     listOfSites = (From site In db.Sites Select site).ToList()      For Each item In listOfSites         selectSite.Add(New SelectListItem() With {.Value = item.SiteID, .Text = item.Name})     Next  End Code   &lt;div class="form-group"&gt;      @Html.LabelFor(Function(model) model.Site, htmlAttributes:=New With {.class = "control-label col-md-2"})      &lt;div class="col-md-10"&gt;          @Html.DropDownListFor(Function(model) model.Site, selectSite), New With {.htmlAttributes = New With {.class = "form-control"}})          @Html.ValidationMessageFor(Function(model) model.Site, "", New With {.class = "text-danger"})      &lt;/div&gt;  &lt;/div&gt; </code></pre>  <p>This is the Create post in <code>DevicesController</code>:</p>  <pre><code>    &lt;HttpPost()&gt;     &lt;ValidateAntiForgeryToken()&gt;     Async Function Create(&lt;Bind(Include:="DeviceID,Make,Model,Serial,Site")&gt; ByVal device As Device) As Task(Of ActionResult)         If ModelState.IsValid Then             db.Devices.Add(device)             Await db.SaveChangesAsync()             Return RedirectToAction("Index")         End If         Return View(device)     End Function </code></pre>  <p>This works in that I can get the list of Sites in the drop down in the Create page, but when I hit "Save", it gives me an error like "The value '1' is invalid".  This is because it's trying to pass in a string (being that's the type that is the list item's Value) instead of a Site.</p>  <p>So one thing I tried was setting the Value for each drop down list item to the site item itself, like so:</p>  <pre><code>    selectSite.Add(New SelectListItem() With {.Value = item, .Text = item.Name}) </code></pre>  <p>But it gives me an error that it can't cast a Site to a String, and so you can't pass back the whole object.</p>  <p>So then I tried instead to set the device's Site by getting it by ID in the Controller, like so (note "Site" was taken out of the Bind list):</p>  <pre><code>    &lt;HttpPost()&gt;     &lt;ValidateAntiForgeryToken()&gt;     Async Function Create(&lt;Bind(Include:="DeviceID,Make,Model,Serial")&gt; ByVal device As Device) As Task(Of ActionResult)         If ModelState.IsValid Then             Dim thisSite As Integer = CInt(Request.Form.Get("Site"))             device.Site = (From site In db.Sites Where site.SiteID = thisSite Select site).FirstOrDefault()             db.Devices.Add(device)             Await db.SaveChangesAsync()             Return RedirectToAction("Index")         End If         Return View(device)     End Function </code></pre>  <p>This does work to set the Device's Site, but it is not actually saved to the DB (I'm assuming because the DB wants to only hold the foreign key, not an actual Site object).  So the next time I go to like the Index or Details page, the device's site is <code>Nothing</code>.</p>  <p>I would imagine there must a way to do this, but I'm not sure what else to try from here.  Any help is appreciated!</p>