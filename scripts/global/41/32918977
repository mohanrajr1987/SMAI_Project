<p>This is not working for me. I couldn't find the answer on MSDN or elsewhere after having spent too much time on it. What am I missing?</p>  <pre><code>Public Class PrinterInfo     Implements IEquatable(Of PrinterInfo)     Public PrinterName As String     Public PrinterDesc As String      'default equality comparer for class vb.net     Public Overloads Function Equals(ByVal other As PrinterInfo) As Boolean _        Implements IEquatable(Of PrinterInfo).Equals         Return other.PrinterName = Me.PrinterName     End Function  End Class  Public ReadOnly Property PrinterInfoList(ByVal Normal As NormalCopier) As List(Of PrinterInfo)     Get         Dim pList1 As List(Of PrinterInfo) = GetList         pList1.Sort()         Return pList1.Distinct.ToList     End Get End Property </code></pre>  <p>I get the list just fine but I want only distinct items. I tried to implement an equality comparer but it's not working. I'm getting multiple duplicates. What do I need to do to get only distinct values?</p>  <p><a href="https://msdn.microsoft.com/en-us/library/vstudio/bb338049%28v=vs.100%29.aspx?f=255&amp;MSPPError=-2147217396" rel="nofollow">MSDN: Enumerable.Distinct(Of TSource)</a></p>  <p><a href="https://msdn.microsoft.com/en-us/library/vstudio/ms132151%28v=vs.100%29.aspx?f=255&amp;MSPPError=-2147217396" rel="nofollow">MSDN: IEqualityComparer(Of T) Interface</a></p>  <p><a href="http://stackoverflow.com/questions/22896232/get-distinct-values-out-of-listobject">This seems similar but I don't understand it</a></p>  <p>I'd like to avoid Linq GroupBy if I can. That just seems clumsy to me.</p>