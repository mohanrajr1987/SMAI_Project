<p>I want to make a simple function that allows me to output error-logs to a file somewhere outside of my project directory. I don't want these random error logs to be included in the project files at the repository, so rather than risk 'forgetting' to delete them, I'd rather just write them somewhere else. </p>  <p>I want to make the code usable across different accounts by including the %username% wildcard in the directory path. However, the <code>FileUtils.dir_p</code> function creates the directorty <code>C:/Users/%username%/</code> rather than the intended </p>  <pre><code>def log_to_file(params)          time = Time.now.strftime('%Y-%m-%d_%H.%M.%S')      dir = "C:/Users/%username%/Documents/RailsDevLogs/#{time.to_s}.txt"      #this doesn't work      #dir = "C:/Users/majinbuu/Documents/RailsDevLogs/#{time.to_s}.txt"      #this works      begin         FileUtils.mkdir_p('C:/Users/%username%/Documents/RailsDevLogs/')              unless File.exist?('C:/Users/%username%/Documents/RailsDevLogs/')          logs = File.open(dir,'a+')         logs.write(params)         logs.close()      rescue =&gt; e         puts "dir error =&gt; #{e}"     end end </code></pre>  <p>So my question is, can I use wildcards (<strong>[EDIT] sorry, ENVIRONMENT VARIABLES</strong>) in Ruby file strings, and if so, how do I used them?</p>