<p>I am new to unit testing and I am trying to test that a new <code>Employee</code> record should not be inserted into the database.  When I call <code>Context.SaveChanges()</code> it does not throw the error in the unit test, but when I try it out in the <code>Controller</code> it throws an error like expected.  </p>  <p>I am guessing that the <code>Employee</code> entity isn't being added to the context in the unit test so when I call <code>SaveChanges()</code> nothing is actually being saved?  Any help would be appreciated!</p>  <p>Unit Test</p>  <pre><code>[Test] [ExpectedException(typeof(DbEntityValidationException))] public void ShouldNotSaveEmptyEmployee() {     var mockSet = new Mock&lt;DbSet&lt;Employee&gt;&gt;();      var mockContext = new Mock&lt;SqlContext&gt;();     mockContext.Setup(m =&gt; m.Employees).Returns(mockSet.Object);      var sut = new EmployeeRepository(mockContext.Object);     sut.Save(new Employee()); } </code></pre>  <p>Repository:</p>  <pre><code>public void Save(Employee employee) {     if (employee.EmployeeId &gt; 0)     {         Context.Entry(employee).State = EntityState.Modified;     }     else     {         Context.Employees.Add(employee);     }      Context.SaveChanges(); } </code></pre>