<p>If came across a weird problem while writing some <code>NUnit</code> tests. The tests were more complex, but I broke it down to the following code.</p>  <pre><code>[Test] public void MyTest() {     // Assert.That(test(), Is.True.After(1000, 100)); // Fail     Assert.That(() =&gt; test(), Is.True.After(1000, 100)); // Success }  static int count = 0;  bool test() {     Console.WriteLine(++count);     if (count == 2)         return true;     return false; } </code></pre>  <p>Why does the test only succeed when I use the lambda expression?</p>  <p><strong>EDIT:</strong></p>  <p>To make it more clear:  In the first line it seems that <code>test()</code> only gets executed once while <code>() =&gt; test()</code> gets executed multiple times.</p>