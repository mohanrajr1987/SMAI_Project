<p>I have a <code>RelayCommand</code> that I am trying to test. The <code>RelayCommand</code> contains a <code>Service Call</code> to Authenticate my user. Shown below:</p>  <pre><code>private MvxCommand _signIn; public MvxCommand SignIn {     get     {         return _signIn ?? (_signIn = new MvxCommand(() =&gt;         {             BasicHttpBinding binding = new BasicHttpBinding(BasicHttpSecurityMode.Transport);             EndpointAddress endpoint = new EndpointAddress(AppResources.AuthService);             var client = new MyService(binding, endpoint);             client.AuthorizeCompleted += ((sender, args) =&gt;             {                 try                 {                     if (args.Result)                     {                         //Success.. Carry on                     }                 }                 catch (Exception ex)                 {                     //AccessDenied Exception thrown by service                     if (ex.InnerException != null &amp;&amp; string.Equals(ex.InnerException.Message, "Access is denied.", StringComparison.CurrentCultureIgnoreCase))                     {                         //Display Message.. Incorrect Credentials                     }                     else                     {                         //Other error... Service down?                     }                 }             });              client.AuthorizeAsync(UserName, Password, null);          }));     } } </code></pre>  <p>But now I am using <code>NUnit</code> to test my <code>ViewModels</code> and I am stumped on how to test my <code>RelayCommand</code></p>  <p>I can do:</p>  <pre><code>[Test] public void PerformTest() {     ViewModel.SignIn.Execute(); } </code></pre>  <p>But this returns no information on whether the <code>SignIn</code> method succeeded or not.</p>  <p>How do I test a <code>RelayCommand</code> containing a <code>Service Call</code>?</p>