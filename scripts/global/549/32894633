<p>Here I wrote simplest program to reproduce my crash inside mysqlpp::Connection::query():</p>  <pre><code>#include &lt;mysql++.h&gt;  int main(int argc, char* argv[]) {     mysqlpp::Connection conn(false);     if (conn.connect("neutrino", "localhost", "root", "1"))     {         mysqlpp::Query query = conn.query("select 1;");     }      return 0; } </code></pre>  <p>And here is my CMakeLists.txt:</p>  <pre><code>cmake_minimum_required (VERSION 3.2) project (mysqlpptest)  add_executable(mysqlpptest main.cpp)  target_include_directories(mysqlpptest     PRIVATE         /usr/include/mysql         /usr/include/mysql++ )  target_link_libraries(mysqlpptest         -lmysqlclient         -lmysqlpp ) </code></pre>  <p>Everything is compiled and linked well, but query() crashes with segmentation fault.</p>  <p>Database is created, so connect() returns true. Here is also mysql terminal test:</p>  <pre><code>glaz@glaz-linux:~$ mysql -u root -p Enter password:  Welcome to the MySQL monitor.  Commands end with ; or \g. Your MySQL connection id is 190 Server version: 5.6.25-0ubuntu0.15.04.1 (Ubuntu)  Copyright (c) 2000, 2015, Oracle and/or its affiliates. All rights reserved.  Oracle is a registered trademark of Oracle Corporation and/or its affiliates. Other names may be trademarks of their respective owners.  Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.  mysql&gt; use neutrino; Reading table information for completion of table and column names You can turn off this feature to get a quicker startup with -A  Database changed mysql&gt; select 1; +---+ | 1 | +---+ | 1 | +---+ 1 row in set (0,00 sec) </code></pre>  <p>Any ideas where to dig the crash?</p>  <p>Updated: Call stack is useless because libraries are without debuggin info:</p>  <pre><code>?? () std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_extract_int&lt;unsigned short&gt;(std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt;, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt;, std::ios_base&amp;, std::_Ios_Iostate&amp;, unsigned short&amp;) const () std::num_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::do_get(std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt;, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt;, std::ios_base&amp;, std::_Ios_Iostate&amp;, unsigned short&amp;) const () std::ostream::seekp(long, std::_Ios_Seekdir) () mysqlpp::Query::Query(mysqlpp::Connection*, bool, char const*) () mysqlpp::Connection::query(char const*) () main (argc=1, argv=0x7fffffffded8) </code></pre>