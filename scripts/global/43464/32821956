<p>I am trying to get my head around this all - being a newbie at Redis and I previously haven't really tried to cache a query like this. Documentation wise I didn't get very far, so I give it a try here: </p>  <p>This is the query I fire in my rails application and this I would like to cache: </p>  <pre><code>@products = Product.includes(:product_category, :product_teasers).where("products.lang_" + I18n.locale.to_s + " = ? AND products.active = ?", true, true).order('product_categories.id').group_by(&amp;:product_category) </code></pre>  <p>So basically I have product categories and each category has 0..n products. </p>  <pre><code>model/product_categories.rb   has_many :products  model/products.rb   belongs_to :product_category </code></pre>  <p>Not all Categories are displayed in each languages, and same applies to products - not shown in all languages. Hence there are language flags in both tables. I.e.: lang_at, lang_de, lang_ch_de, lang_fr, etc. Hence the I18n. </p>  <p>The query works fine - the caching doesn't however. </p>  <p>This is how I fetch the products:</p>  <pre><code>  def fetch_products     products = $redis.get("products")     if products.nil?       products = Product.includes(:product_category, :product_teasers).where("products.lang_" + I18n.locale.to_s + " = ? AND products.active = ?", true, true).order('product_categories.id').group_by(&amp;:product_category).to_json       $redis.set("products", products)     end     @products = JSON.parse products   end </code></pre>  <p>When I call it in rails console - I can only see the products inside. </p>  <p>When I loop through it:</p>  <pre><code>- @products.each do |category, products|   %p= category.name   ..   - products.each do |product|   .. </code></pre>  <p>It fails when I try to access category.name</p>  <p>On closer inspection category contains the following: </p>  <pre><code>"#&lt;ProductCategory:0x007ffd13315d68&gt;" </code></pre>  <p>Whilst products contains the Products. </p>  <p>Anyone knows how to solve this? PS: Redis is correctly set up. In rails console I can set and get values. I also checked products and it is there.</p>  <p>Thank you!</p>