<p>In redis I store objects in a sorted set. In my solution, it's important to be able to run a ranged query by dates, so I store the items with the score being the timestamp of each items, for example:</p>  <pre><code>#   Score   Value 0   1443476076  {"Id":"92","Ref":"7ADT","DTime":1443476076,"ATime":1443901554,"ExTime":0,"SPName":"7ADT33CFSAU6","StPName":"7ADT33CFSAU6"} 1   1443482969  {"Id":"11","Ref":"DAJT","DTime":1443482969,"ATime":1443901326,"ExTime":0,"SPName":"DAJTJTT4T02O","StPName":"DAJTJTT4T02O"} </code></pre>  <p>However, in other situations I need to find a single item in the set based on it's ID. I know I can't just query this data structure as if it were a nosql db, but I tried using <code>ZSCAN</code>, which didn't work.</p>  <pre><code>ZSCAN MySet 0 MATCH Id:92 count 1 </code></pre>  <p>It returns; "empty list or set"</p>  <p>Maybe I need to serialize different? I have serialized using Json.Net.</p>  <p>How, if possible, can I achieve this; using dates as score and still be able to lookup an item by it's ID?</p>  <p>Many thanks,</p>  <p>Lars</p>  <p><strong>Edit:</strong></p>  <p>Assume it's not possible, but any thoughts or inputs are welcome:</p>  <p>Ref: <a href="http://openmymind.net/2011/11/8/Redis-Zero-To-Master-In-30-Minutes-Part-1/" rel="nofollow">http://openmymind.net/2011/11/8/Redis-Zero-To-Master-In-30-Minutes-Part-1/</a></p>  <blockquote>   <p>In Redis, data can only be queried by its key. Even if we use a hash,   we can't say get me the keys wherever the field race is equal to   sayan.</p> </blockquote>  <p><strong>Edit 2:</strong></p>  <p>I tried to do:</p>  <pre><code>ZSCAN MySet 0 MATCH *87*  127.0.0.1:6379&gt; ZSCAN MySet 0 MATCH *87* 1) "192" 2) 1) "{\"Id\":\"64\",\"Ref\":\"XQH4\",\"DTime\":1443837798,\"ATime\":1444187707,\"ExTime\":0,\"SPName\":\"XQH4BPGW47FM\",\"StPName\":\"XQH4BPGW47FM\"}"    2) "1443837798"    3) "{\"Id\":\"87\",\"Ref\":\"5CY6\",\"DTime\":1443519199,\"ATime\":1444172326,\"ExTime\":0,\"SPName\":\"5CY6DHP23RXB\",\"StPName\":\"5CY6DHP23RXB\"}"    4) "1443519199" </code></pre>  <p>And it finds the desired item, but it also finds another one with an occurance of 87 in the property ATime. Having more unique, longer IDs might work this way and I would have to filter the results in code to find the one with the exact value in its property. </p>  <p>Still open for suggestions.</p>