<p>I use Sidekiq for job processing. Using Foreman, I set up six processes in my Procfile:</p>  <pre><code>redirects: bundle exec sidekiq -c 10 -q redirects redirects2: bundle exec sidekiq -c 10 -q redirects redirects3: bundle exec sidekiq -c 10 -q redirects redirects4: bundle exec sidekiq -c 10 -q redirects redirects5: bundle exec sidekiq -c 10 -q redirects redirects6: bundle exec sidekiq -c 10 -q redirects </code></pre>  <p>These processes performed at about 1600+ jobs (simple job to increment some hashes in Redis) per second with all 10 threads busy most of the time. I scaled my Digital Ocean droplet from 8 to 12-core, and performance fell to ~400 per second. For each process, there are only 3-5 busy threads out of 10.</p>  <p>What I did to try to fix the issue:</p>  <ul> <li>Make <code>perform</code> method empty</li> <li>Use less/more process count</li> <li>Use less/more concurrency</li> <li>Split queue to server-specific queues (there are three express.js clients from another servers puts jobs in queues)</li> <li>Trying with different <code>hz</code> values in redis.conf</li> <li>Setting <code>somaxconn</code> to 1024 (<code>tcp-backlog</code> in redis.conf too)</li> <li>Turning off RDB save and use only AOF</li> <li>Flush all Redis dbs (there are two databases for all that logic: one for sidekiq and another for hashes in my workers)</li> <li>Running sidekiq from terminal without Foreman (to check if it is Foreman issue)</li> </ul>  <p>None of above helped me. What could have caused the performance loss?</p>