<pre><code>var redis = require("redis"), client = redis.createClient();  for(var i =0 ; i &lt; 1000000; i++){     client.publish('channel_1', 'hello!'); } </code></pre>  <p>After the code is executed, the Node process consumes 1.2GB of memory and stays there; GC does not reduce allocated memory. If I simulate 2 million messages or 4x500000, node crashes with memory error.</p>  <p>Node: 0.8.*, tried 4.1.1 later but nothing changed<br> Redis: 2.8 , works well (1MB allocated memory).</p>  <p>My server will be publishing more than 1 million messages per hour. So this is absolutely not acceptable (process crashing every hour).</p>  <p>updated test</p>  <pre><code>var redis = require("redis"),     client = redis.createClient();  var count = 0; var x;  function loop(){     count++;     console.log(count);      if(count &gt; 2000){         console.log('cleared');         clearInterval(x);     }     for(var i =0 ; i &lt; 100000; i++){         client.set('channel_' + i, 'hello!');     }  }  x = setInterval(loop, 3000); </code></pre>  <p>This allocate ~ 50Mb, with peak at 200Mb, and now GC drop memory back to 50Mb</p>