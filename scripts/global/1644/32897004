<p>This is mainly a performance question, because I sometimes see it in developers' examples for executing JavaScript.</p>  <p>When it comes to more strict languages like C or Java, conditions are important to prevent execution of functions that require <strong>not null</strong> data. And generally, checking for nulls helps prevent parts of the program from executing, thus minimizing memory consumption (a shallow explanation, I know).</p>  <p>But when it comes to JavaScript, errors generally don't prevent the rest of your script from executing. Now, in the case of jQuery, initializing DOM behavior on an element requires the CSS selector to return at least one result. But if there are no results, no errors are thrown.</p>  <p>My question is this: is there any performance or memory consumption difference in the browser when considering these two examples:</p>  <p><strong>Case 1:</strong> <em>You check the DOM before executing the jQuery library function.</em></p>  <pre><code>var carousel = $('[data-carousel]'); if( carousel.length &gt; 0) {     carousel.slick({         adaptiveHeight: true,         lazyLoad: 'progressive'     }); } </code></pre>  <p><strong>Case 2:</strong> <em>You execute the jQuery library function without first checking for the existence of the desired selection.</em></p>  <pre><code>$('[data-carousel]').slick({     adaptiveHeight: true,     lazyLoad: 'progressive' }); </code></pre>  <p><strong>EDIT</strong> I wanted to outline a couple of assumptions here to see if this makes any noteworthy differences in how this question is answered:</p>  <ol> <li>Existence of the desired DOM element is not known before execution.</li> <li>Every page throughout the site may have one or more carousels (0-3 approximately).</li> <li>Each DOM element has additional <code>data</code> attributes for which I check and executing carousel behavior changes (e.g. <code>data-carousel-autoplay</code> modifies and refreshes the carousel initialized on that DOM element.</li> </ol>  <p><strong>Comparisons between JavaScript and other languages are greatly appreciated!</strong></p>