<p>I'm asked to write a recursive function in python:</p>  <pre><code>def exact_change( target_amount, L ): </code></pre>  <p>where the input target_amount is a single non-negative integer value and the input L is a list of positive integer values. Then, exact_change should return either True or False: it should return True if it’s possible to create target_amount by adding up some-or-all of the values in L. It should return False if it’s not possible to create target_amount by adding up some-or-all of the values in L.</p>  <p>For example, L could represent the coins you have in your pocket and target_amount could represent the price of an item – in this case, exact_change would tell you whether or not you can pay for the item exactly.</p>  <pre><code>exact_change( 42, [25, 1, 25, 10, 5, 1] )  True  exact_change( 42, [25, 1, 25, 10, 5] )  False </code></pre>  <p>I've looked up some of the 'change-making problem' solutions, but I can't really figure out how to program this function.</p>  <p>Can anybody help me?</p>