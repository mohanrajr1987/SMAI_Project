<p>Given a Javascript map object of dependencies and their dependencies, determine order to install them <br>Example => <br>Input =  {     <br>    &nbsp;&nbsp;&nbsp;&nbsp;p1: [p2, p3],     <br>    &nbsp;&nbsp;&nbsp;&nbsp;p2: [p3],     <br>    &nbsp;&nbsp;&nbsp;&nbsp;p3: [] <br>} <br>Output =  [p3, p2, p1] <br>I really feel like theres a dynamic or recursive solution to this that I cant figure out. Is this true, can it be done better than my approach? Heres my approach with a while loop.</p>  <pre><code>function installDeps(depsList) {     var installed = [];     var order = [];      while (order.length &lt; Object.keys(depsList).length) {          for (var depsItem in depsList) {              if (!installed[depsItem]) {                 var installable = true;                  for (var dep = 0; dep &lt; depsList[depsItem].length; dep++) {                     if (!installed[depsList[depsItem][dep]]) {                         installable = false;                         break;                     }                 }                  if (installable) {                     order.push(depsItem);                     installed[depsItem] = true;                 }             }         }     }      return order; } </code></pre>