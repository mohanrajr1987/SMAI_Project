<p>today I found a very weird thing.</p>  <p>Using C# and ManagementObjectCollection I was recursively checking and killing process children. What happen is that one of process children child was parent of the main process.</p>  <p>Tree representation:</p>  <pre><code>explorer.exe (PID: 1234)  |  someProgram.exe  (PID: 880)      |      externalProgram.exe  (PID: 885)          |          other.exe  (PID: 999)          |          other.exe  (PID: 998)          |          other.exe  (PID: 997)             |             explorer.exe (PID: 1234)          |          other.exe  (PID: 996)          |         ... </code></pre>  <p>Main idea was to kill someProgram.exe and all it's children recursively. But the recursion never ends because of cycle relation.</p>  <p>Temporary solution is to keep process that I want to kill parent ID (i.e. 1234) and check if it occur while "digging". If it pop up as a child stop "digging". But here happens another thing - if I kill other.exe it kills whole tree, because killing parent kills children...</p>  <p>I'm looking for any clue what could cause this situation and how to properly kill process tree.</p>  <p>Any ideas?</p>  <p>PS: I can't control creation of "other.exe" processes. They are spawned by process that I'm running.</p>