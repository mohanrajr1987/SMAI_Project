<p>I have to iterate through all members of a class and display them in a Tree. The Tree-Handling can be ignored for now, at this point I'd be satisfied with just getting all class members in a simple list.</p>  <p>All the examples I could find (for instance <a href="http://stackoverflow.com/questions/20554103/recursively-get-properties-child-properties-of-a-class">Recursively Get Properties &amp; Child Properties Of A Class</a>) only return the first two members of the following class <code>cTest</code>:</p>  <pre><code>public class cTest {     public String str1;     public int intwert1;     public cParent Parent = new cParent(); }  public class cParent {     public String parentStr1; } </code></pre>  <p>The field <code>public cParent Parent</code> is not found and not processed recursively. I could already tell that for the following code:</p>  <pre><code>Type t = typeof(cTest); PropertyInfo[] propertyInfos; MemberInfo[] propertyMembers; propertyInfos = t.GetProperties(); propertyMembers = t.GetMembers(); </code></pre>  <p>...<code>propertyInfos</code> does not contain <code>public cParent Parent</code>, but <code>propertyMembers</code> does contain <code>public cParent Parent</code>!</p>  <p><strong>edit</strong></p>  <p>thx, but still stuck. The following code gives the same informations for all class members</p>  <pre><code>        foreach (FieldInfo p in t.GetFields())         {             Console.WriteLine("-");             Console.WriteLine(p.GetType().ToString());             Console.WriteLine(p.Name.ToString());             Console.WriteLine(p.MemberType.GetType().ToString());             Console.WriteLine(p.MemberType.GetTypeCode().ToString());             Console.WriteLine(p.MemberType.ToString());         }   </code></pre>  <p>output:     ^</p>  <pre><code>System.Reflection.RtFieldInfo str1 System.Reflection.MemberTypes Int32 Field - System.Reflection.RtFieldInfo int1 System.Reflection.MemberTypes Int32 Field - System.Reflection.RtFieldInfo Parent System.Reflection.MemberTypes Int32 Field </code></pre>