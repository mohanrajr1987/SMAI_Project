<p>I'm trying to create an asp function that takes a 2 dimensional array and creates a tree view in the form of unordered lists from that array.</p>  <p>ex:</p>  <pre><code>Array: | canada | ontario | markham |        | canada | ontario | toronto |        | usa    | newyork | newyork | </code></pre>  <p>would create:</p>  <pre><code>&lt;ul&gt;    &lt;li&gt;Canada       &lt;ul&gt;          &lt;li&gt;ontario             &lt;ul&gt;                &lt;li&gt;markham&lt;/li&gt;                &lt;li&gt;toronto&lt;/li&gt;             &lt;/ul&gt;          &lt;/li&gt;       &lt;/ul&gt;   &lt;li&gt;usa      &lt;ul&gt;         &lt;li&gt;newyork            &lt;ul&gt;               &lt;li&gt;newyork&lt;/li&gt;            &lt;/ul&gt;         &lt;/li&gt;      &lt;/ul&gt;   &lt;/li&gt; &lt;/ul&gt;  </code></pre>  <p><strong>My Code</strong></p>  <pre><code>' displayTreeStruct(array, int, int, array, string) : displayTreeStruct uses objArr (a 2D rendition of a resultSet)     '               to display a tree in unordered list format     '               Using prevResults as a position storage to determine the depth to place the next element at,     '                   the function recurses through changing colPositionPtr and rowPositionPtr to retrieve     '                   the next element in objArr.     '               movementAlongArray is a string that helps determine whether to increase/decrease/keep depth for     '                   the next object     Function displayTreeStruct(prevResults, colPositionPtr, rowPositionPtr, objArr, movementAlongArray)          If rowPositionPtr &lt;= UBound(objArr, 2) Then              If movementAlongArray = "goingDown" Then ' Increase in Depth                  currItem = objArr(colPositionPtr, rowPositionPtr)                 prevItem = prevResults(colPositionPtr)                  If colPositionPtr &lt;= UBound(prevResults) Then                     If colPositionPtr = UBound(prevResults) Then ' We reached the leaf nodes                         call displayTreeStruct(prevResults, colPositionPtr, rowPositionPtr, objArr, "stationary")                     Else                         If currItem &lt;&gt; prevItem Then ' If true, it's a new element and we can create a new ul heading                             If colPositionPtr = 0 Then ' Find a way to make this li open                                 %&gt;                                 &lt;li data-jstree='{"icon":"css/images/treeGlobe.png"}'&gt;&lt;%=currItem %&gt;                                     &lt;ul&gt;                                 &lt;%                             Else                                 %&gt;                                 &lt;li data-jstree='{"icon":"css/images/treeGlobe.png"}'&gt;&lt;%=currItem %&gt;                                     &lt;ul&gt;                                 &lt;%                             End If                              prevResults(colPositionPtr) = currItem                             call displayTreeStruct(prevResults, colPositionPtr + 1, rowPositionPtr, objArr, "goingDown")                         End If                     End If                 End If              ElseIf movementAlongArray = "goingUp" Then ' Decrease in Depth                  currItem = objArr(colPositionPtr, rowPositionPtr)                 prevItem = prevResults(colPositionPtr)                  %&gt;                 &lt;/li&gt;                 &lt;%                 If currItem = prevItem Then ' Already looked at this node if true, decrease in depth                     call displayTreeStruct(prevResults, colPositionPtr + 1, rowPositionPtr, objArr, "goingDown")                 ElseIf colPositionPtr = 0 AND currItem &lt;&gt; prevItem Then ' New node, go down it                     For i = 0 to UBound(prevResults)                         prevResults(i) = "N/A"                     Next                     %&gt;                         &lt;/ul&gt;                     &lt;/li&gt;                     &lt;%                     call displayTreeStruct(prevResults, 0, rowPositionPtr, objArr, "goingDown")                 Else                     prevResults(colPositionPtr) = "N/A"                     %&gt;&lt;/ul&gt;&lt;%                     call displayTreeStruct(prevResults, colPositionPtr - 1, rowPositionPtr, objArr, "goingUp")                 End If              ElseIf movementAlongArray = "stationary" Then ' loop through child nodes                  Dim listDone : listDone = false                 While listDone = false ' Loop through all the leaf nodes                      currItem = objArr(colPositionPtr, rowPositionPtr)                     prevItem = prevResults(colPositionPtr)                     prevParent = prevResults(colPositionPtr - 1)                     currParent = objArr(colPositionPtr - 1, rowPositionPtr)                      If currParent = prevParent Then                         If currItem &lt;&gt; "" Then                             %&gt;                             &lt;li data-jstree='{"icon":"css/images/treeGlobe.png"}'&gt;&lt;%=currItem%&gt;&lt;/li&gt;                             &lt;%                         End If                         prevResults(colPositionPtr) = currItem                          If rowPositionPtr = UBound(objArr, 2) Then                             listDone = true                         Else                             rowPositionPtr = rowPositionPtr + 1                         End If                     ElseIf currItem = prevItem Then ' This node has children, increase in depth                         call displayTreeStruct(prevResults, colPositionPtr + 1, rowPositionPtr, objArr, "goingDown")                     Else ' We're done with this list, decrease in depth                         listDone = true                         call displayTreeStruct(prevResults, colPositionPtr - 1, rowPositionPtr, objArr, "goingUp")                     End If                 wend                  prevResults(colPositionPtr) = "N/A"              End If          End If      End Function </code></pre>  <p><strong>The Problem</strong></p>  <p>My function doesn't allow the stack to unwind and after a certain depth or number or results it causes a stack overflow. I was wondering if somebody could take a look and give me some tips. Looking mainly for pseudocode or problem approaches, not for actual code.</p>