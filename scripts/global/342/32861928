<p>I'm currently working on a C++ project handed to me by a co worker and I've run into a problem using <strong><code>std::queue</code></strong>.</p>  <p>The program is designed to read in 18 byte message files and decode into their relative parts. There are 5 different types of message that can be decoded and the user chooses which types they want to be decoded when the program loads. All the messages are stored in 1 file that contains around 9418588 messages, so the program reads in the large file, decodes the first 4 bytes of the first message and determines what type of message it is. It then stores the message in a queue designated for that message type. Later on in the program, once all the telegrams are in the appropriate queue, the program decodes the remaining bytes of the message and outputs the relevant parts to a .csv file.</p>  <p>The test I'm running at the moment decodes 2 different types of messages, stores them in the relevant queue, decodes them and outputs them. The thing is I'm getting different outputs on two different machines I'm testing on, using the exact same code/program and input file:</p>  <ul> <li><strong>64bit Mac OSX 4GB RAM, i7 Quad Core - running a 32bit Windows 10 Virtual Machine with 1GB of RAM and 2 cores</strong></li> </ul>  <p>This Machine gives a correct output. There are 401 lines in the output .csv. When debugging the program shows that there are 1154 TypeA messages in the TypeA queue and 524441 TypeB messages in the TypeB queue. As I said, this is what should be happening. It also has the correct value of total input messages = 9418588.</p>  <ul> <li><strong>32bit Windows 10 with 2GB of RAM and Pentium Dual Core CPU (64bit CPU)</strong></li> </ul>  <p>This Machine gives an incorrect output. There are 388 lines in the output .csv. When debugging the program shows that there are 1154 TypeA messages in the TypeA queue and 523992 TypeB messages in the TypeB queue. Basically this machines runs out of TypeA messages. It does however have the correct value of total input messages = 9418588.</p>  <p>As I said the code is exactly the same, the only thing I can think is that the difference in hardware is causing the second computer to stores less messages in the queue but I have no idea why this would be happening. </p>  <p>I'm not sure if I need to provide any code for the question, or if it's a simple answer. I hope someone can shed some light on the issue. The program uses threading if that helps, if any more information is needed please ask.</p>  <p>Thanks in advance</p>