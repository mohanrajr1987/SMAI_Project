<p>I'm using an application written in LabVIEW (an engineering software framework/programming language) to run about twenty thousand simulations. Each simulation takes about 5 mins to complete, and results will be dumped into a database hosted in a laptop in my local network. I'm using SQL Express as my database. </p>  <p>Each simulation job has a set of starting parameters that will be passed to the application. This could be as simple as a string of characters that the application would parse into valid simulation characteristics, but I'm not sure exactly how to structure this.</p>  <p>Because the simulations would take about 3 months to run on one computer, I want to add in the capability for the database computer to be able to "schedule" jobs. That way, I can run the application on any computer in my local network (I have 5 available) for a few simulations, and stop simulations when I need to use it for other things. The database computer will hand out these jobs as they get requested by the application, as well as continuously run jobs itself.</p>  <p>How would I go about setting up this queue from an SQL point of view? The framework I currently have in mind would work something like this: Database has 3 tables in addition to tables used to store simulation data. The tables contain CompletedJobs,RunningJobs, and JobsToRun. The application would request a job from JobsToRun, and place that job's ID into the RunningJobs table. It would then parse the job's ID for relevant information, run the simulation, and if it exits without errors, move the job ID to the CompletedJobs table.</p>  <p>Would this work?</p>