<p>So I am building a simulator in order to simulate some load balancing algorithms. I have created 2 vectors of Cores and Dispatchers as shown below:</p>  <pre><code>std::vector&lt;std::unique_ptr&lt;Dispatcher&gt; &gt; vDisp; std::vector&lt;std::unique_ptr&lt;Core&gt; &gt; vCore; </code></pre>  <p>The class dispatcher has a queue for the cores in order to assign to them the jobs.</p>  <pre><code>std::queue&lt;Core&gt; disp_core_queue;  </code></pre>  <p>Plus I have some functions in order to handle this queue:</p>  <pre><code>void add_core_q(Core&amp; p){ disp_core_queue.push(p); } Core get_core_q(){ return disp_core_queue.front(); } </code></pre>  <p>When the program initializes I populate the cores and disps like this:</p>  <pre><code>for (auto i=0; i&lt;dispNumb; ++i) {     vDisp.push_back(std::unique_ptr&lt;Dispatcher&gt; (new Dispatcher));     std::cout&lt;&lt;"Disp n."&lt;&lt;i&lt;&lt;" Created"&lt;&lt;std::endl; } </code></pre>  <p>My problem is that I cannot get a Core from the vector and store it inside a Dispatcher's queue. I have tried many ways but it seems C++ punishes me for various reasons. My last try was this one from inside the Dispatcher:</p>  <pre><code>    int kore = random_core();     this-&gt;add_core_q(vCore.at(kore)); </code></pre>  <p>Which gave this error in compile time:</p>  <p><strong>error: no matching function for call to 'Dispatcher::add_core_q(_gnu_cxx::__alloc_traits > >::value_type&amp;) '</strong> </p>  <p><em>candidate is:</em></p>  <p><strong>void Dispatcher::add_core_q(Core&amp;)</strong></p>  <p><strong>no known conversion for argument 1 from '__gnu_cxx::__alloc_traits > >::value_type {aka std::unique_ptr}' to 'Core&amp;'</strong></p>  <p>If anyone could give me a hint I would greatly appreciate it. Thanks in advance.</p>