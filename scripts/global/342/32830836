<p>I am looking at the implementation of Queue from Cracking the Code Interview 5th Edition.</p>  <p>The explanation of enqueue is as follows:</p>  <pre><code>class Queue {     Node first, last;      void enqueue(Object item) {         // This indicates the Queue is empty         // so we set both first and last as          // the same item         if(first == null) {             last = new Node(item);             first = last;         } else {             last.next = new Node(item);             last = last.next;         }     } } </code></pre>  <p>I understand what is going on in the if-statement. This conditional deals with an empty queue. So if the queue is empty, and we're trying to add an item to the queue, the item added is both the first and last item. </p>  <p>However, what I am not understanding is what's going on in the else statement. The book first assigns the item as the <code>last.next</code>, and then assigns <code>last</code> as <code>last.next</code>. Wouldn't this make both the last and last's next element the same thing? Also, I illustrated the queue. Is this an accurate illustration of the positions of <code>last</code> and <code>last.next</code>?</p>  <pre><code>[      |      |      |      ]      ^     ^   last  last.next </code></pre>