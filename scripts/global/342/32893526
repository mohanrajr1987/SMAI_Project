<p>I'm using <a href="https://docs.python.org/3.4/library/index.html" rel="nofollow">Python 3.4</a> and am trying to figure out the correct way to "call_later" for coroutines. Specifically, I'm trying to use the <a href="https://docs.python.org/3.4/library/asyncio-queue.html#asyncio.Queue.put" rel="nofollow">asyncio.Queue.put</a> (which is a coroutine) with <a href="https://docs.python.org/3.4/library/asyncio-eventloop.html?highlight=asyncio.baseeventloop#asyncio.BaseEventLoop.call_later" rel="nofollow">asyncio.BaseEventLoop.call_later</a>. This doesn't work because call_later only allows callbacks and not coroutines. I haven't been able to find a builtin function to behave like call_later for coroutines. This is what I ended up doing to solve my problem but it doesn't seem very eloquent. Is there a better way to do what I'm trying to do?</p>  <pre><code>@asyncio.coroutine def func(self):     data = self.queue.get()     try:         #do some stuff     except Exception as e:         logger.warn(e)          @asyncio.coroutine         def queue_put_delay(data):             yield from asyncio.sleep(self.retry_delay)             yield from self.queue.put(data)          asyncio.async(queue_put_delay(data), loop=self.loop)     finally:         #do some stuff         asyncio.async(func(), loop=self.loop) </code></pre>