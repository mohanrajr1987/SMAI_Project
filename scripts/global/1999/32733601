<p>I happened to read an integration document about MD5withRSA, getting confused by the following steps(they provide platform_private_key.pem):</p>  <p><strong>1.generate cert using provided platform_private_key.pem：</strong> openssl req -new -x509 -days 365 -key platform_private_key.pem -out platform_cert.crt</p>  <p><strong>2.create pfx file：</strong> openssl pkcs12 -export -out platform_cert.pfx -inkey platform_private_key.pem -in platform_cert.crt</p>  <p><strong>3.get snk format file from pfx：</strong> sn -p platform_cert.pfx platform_public.snk</p>  <p><strong>4.convert snk file using Base64 encoding and upload to their(the platform) backend</strong></p>  <p>Could anyone explain the logic here? why design like this,I have limited knowledge of RSA, my understanding is as long as the platform hold private key, and client hold public key, that's enough, why client bother to generate a snk from private_key.pem provided by the platform and have to let the platform hold the snk also?</p>  <p>thanks</p>