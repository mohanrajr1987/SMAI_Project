<p>I'm trying to sign a string using BouncyCastle library.  My code works, but the resulting string is full of weird characters and my instinct says something is wrong about it. My code looks like this</p>  <pre><code>Security.addProvider(new BouncyCastleProvider()); FileReader fileReader = new FileReader(new File("certs/private.pem")); PEMReader r = new PEMReader(fileReader); PrivateKey privateKey = (PrivateKey) r.readObject(); r.close() String toSign = "hello world"; Signature signature = Signature.getInstance("SHA1withRSA","BC"); signature.initSign(privateKey); signature.update(toSign.getBytes("UTF-8")); byte[] signedArray = signature.sign(); String signedString = new String(signedArray, "UTF-8"); </code></pre>  <p>And the resulting string (signedString) looks (awfully) like this:</p>  <blockquote>   <p>�����jc.������c�1�#�ٶ����E8����a��f8���t�~W�{%��\Z#��it��ҽ;�n��k�n{U>&amp;�d�_���&amp;�?�N��g�   z\�k�g���e~�S4��ƎG�g��U�:��s>i�%YL�n3�����Y��9����T���}�Usb���&amp;�����eշѾUr�Y�ڝ[j�h~mu\3U��j���c�U�ac����t��No-��1J�B]�</p> </blockquote>  <p>The private.pem was generated with this command</p>  <pre><code>openssl req -new -x509 -days 3652 -nodes -out private.crt -keyout private.pem.  </code></pre>  <p>Any help or hint will be very appreciated.</p>  <p><strong>SOLVED</strong></p>  <p>What I did was to encode de byte array to Base64 using this line</p>  <pre><code>byte[] encodedArray = org.bouncycastle.util.encoders.Base64.encode(signedArray);  </code></pre>  <p>and voalá!</p>