<p>I created a back end java and deployed it into tomcat 8. The goal is to receive mobile messages using GCM XMPP. My web applications have spring 4.2.0 and smack 4.0.6.</p>  <p>Dependencies:</p>  <pre><code>&lt;dependency&gt;     &lt;groupId&gt;org.igniterealtime.smack&lt;/groupId&gt;     &lt;artifactId&gt;smack-core&lt;/artifactId&gt;     &lt;version&gt;4.0.6&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt;     &lt;groupId&gt;org.igniterealtime.smack&lt;/groupId&gt;     &lt;artifactId&gt;smack-tcp&lt;/artifactId&gt;     &lt;version&gt;4.0.6&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt;     &lt;groupId&gt;org.igniterealtime.smack&lt;/groupId&gt;     &lt;artifactId&gt;smack-extensions&lt;/artifactId&gt;     &lt;version&gt;4.0.6&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt;     &lt;groupId&gt;org.igniterealtime.smack&lt;/groupId&gt;     &lt;artifactId&gt;smack-java7&lt;/artifactId&gt;     &lt;version&gt;4.0.1&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt;     &lt;groupId&gt;org.springframework.integration&lt;/groupId&gt;     &lt;artifactId&gt;spring-integration-xmpp&lt;/artifactId&gt;     &lt;version&gt;4.2.0.RELEASE&lt;/version&gt; &lt;/dependency&gt;     </code></pre>  <p>Bean for XMPP Connection:</p>  <pre><code>@Configuration public class GcmXmppConnection {      private static final String GCM_SERVER = "gcm.googleapis.com";      @Value("${sender.id}@gcm.googleapis.com")     private String username;      @Value("${server.api.key}")     private String password;      @Value("${gcm.xmpp.host}")     private String host;      @Value("${gcm.xmpp.port}")     private int port;      @Value("${gcm.xmpp.debuggable}")     private boolean debuggable;      @Bean(name = "xmppConnection")     public XmppConnectionFactoryBean xmppConnectionFactoryBean() {          ConnectionConfiguration configuration = new ConnectionConfiguration(host, port);         configuration.setSecurityMode(ConnectionConfiguration.SecurityMode.enabled);         configuration.setReconnectionAllowed(true);         configuration.setRosterLoadedAtLogin(false);         configuration.setSendPresence(false);         configuration.setSocketFactory(SSLSocketFactory.getDefault());                 configuration.setCompressionEnabled(false);         configuration.setDebuggerEnabled(debuggable);          XmppConnectionFactoryBean connectionFactoryBean = new XmppConnectionFactoryBean(configuration);         connectionFactoryBean.setUser(username);         connectionFactoryBean.setPassword(password);          return connectionFactoryBean;     } } </code></pre>  <p>In spring application context:</p>  <pre><code>&lt;int-xmpp:inbound-channel-adapter id="gcmInboundAdapter"                               channel="gcmInboundNotificationChannel" xmpp-connection="xmppConnection"                               extract-payload="false" auto-startup="true" /&gt;   &lt;int:channel id="gcmInboundNotificationChannel"/&gt; </code></pre>  <p>The server starts and connects without problems. So, how do I handle incoming messages from devices ? I would like to have a method where messages were treated before being sent to targets. Can someone help me ? Thanks!</p>