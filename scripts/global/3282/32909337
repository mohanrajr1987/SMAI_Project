<p>In my chat Application I fetch my friendlist through api,receive my roster presence through xmpp in receiver.     After comparing both list finally displaying contactlist with Presence in listview of fragment,but in between if user select contactlist fragment and there presence list and roster list comparision not done than list doesn't load and application crash occur.     Than How can I solve this issue related fragment and listview control?</p>  <p>//oncreatview method</p>  <pre><code>    try{           new fetchfriendlist().execute(operation.getUserJABBERId("active"));         checkonlinestaus();       }     catch(Exception e)     {         e.printStackTrace();     } </code></pre>  <p>}</p>  <pre><code>public void onResume() {     // TODO Auto-generated method stub     super.onResume();          checkonlinestaus();  }   public void checkonlinestaus() {     IntentFilter intentFilter = new IntentFilter("com.example.boblchat.NEW_PRESENCE");     try {          mReceiver = new BroadcastReceiver() {              @SuppressLint("NewApi")             @Override             public void onReceive(Context context, Intent intent) {                   String[] userid = intent.getStringArrayExtra("userid");                 presence_userid=new String[userid.length];                 presence_userid = userid ;                 System.out.println("list" + presence_userid[0] + presence_userid [1]);                 String[] presence = intent.getStringArrayExtra("userpresence");                 userpresence = new String[presence.length];                 userpresence = presence ;                  loadContacts();              }         };          getActivity().registerReceiver(mReceiver, intentFilter);     } catch (Exception e) {          e.printStackTrace();     }  } </code></pre>  <p>//Load the contacts from database(tbl_friend) to the listview with comapre with roster list presence</p>  <p>public void loadContacts() {</p>  <pre><code>    lst_contactlist = new ArrayList&lt;Contactdata&gt;();      try {          Cursor contactlist = operation.selectdata("select * from "                 + DBConstant.FRIEND_TABLE + " WHERE " + DBConstant.FRIEND_IS_BLOCKED + "='0'");         String contact_presence="";          while (contactlist.moveToNext()) {              String contact_name = contactlist.getString(contactlist                     .getColumnIndex(DBConstant.FRIEND_NAME));              String contact_jid = contactlist.getString(contactlist                     .getColumnIndex(DBConstant.FRIEND_JABBER_ID));              for(int i=0;i&lt;presence_userid.length;i++)             {                 String[] presenceid =presence_userid[i].split("@");                 if(contact_jid.equals(presenceid[0]))                 {                     contact_presence = userpresence[i];                     Log.i("get presence",contact_jid + presenceid[0] + contact_presence);                     break;                 }                 else                 {                     //i++;                 }              }              String contact_status = contactlist.getString(contactlist                     .getColumnIndex(DBConstant.FRIEND_STATUS));             String contact_profile = contactlist.getString(contactlist                     .getColumnIndex(DBConstant.FRIEND_PROFILE));             String contact_no = contactlist.getString(contactlist                     .getColumnIndex(DBConstant.FRIEND_CONTACT_NO));             String profileprivacy = contactlist.getString(contactlist                     .getColumnIndex(DBConstant.FRIEND_PROFILE_VISIBLE));             String statusprivacy = contactlist.getString(contactlist                     .getColumnIndex(DBConstant.FRIEND_STATUS_VISIBLE));             String aboutmeprivacy = contactlist.getString(contactlist                     .getColumnIndex(DBConstant.FRIEND_ABOUTME_VISIBLE));             String aboutme = contactlist.getString(contactlist                     .getColumnIndex(DBConstant.FRIEND_ABOUTME));             String contact_Email=contactlist.getString(contactlist.getColumnIndex(DBConstant.FRIEND_EMAIL));                    if (!contact_profile.equals(""))                 contact_profile = Environment.getExternalStorageDirectory()                         + "/Profiles/" + contact_profile;               System.out.println("final state" + contact_presence);             lst_contactlist.add(new Contactdata(contact_jid,                     contact_profile, contact_name, contact_status,                     contact_no,contact_Email,profileprivacy,contact_presence,statusprivacy,aboutmeprivacy,aboutme));          }         aa_contactlist = new ContactlistAdapater(getActivity()                 .getApplicationContext(), R.layout.contactlist_row_layout,                 lst_contactlist);         lvcontact_list.setAdapter(aa_contactlist);     } catch (Exception e) {      } } </code></pre>  <p>//friendlist fetch from server through api</p>  <pre><code>    @Override     protected String doInBackground(String... params) {          parser = new JsonParser();         friendlist = new ArrayList&lt;NameValuePair&gt;();         friendlist.add(new BasicNameValuePair("uid", params[0]));         String contactdata = parser.getStringfromUrl(url,friendlist);         Log.i("contactdata", contactdata); </code></pre>  <p>}</p>  <p>}</p>