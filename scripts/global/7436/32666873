<p>I am currently working on some Java code in Eclipse and trying to use a try-catch statement inside of a do-while statement. My current code is as follows:</p>  <pre><code>import java.util.Scanner; import java.util.InputMismatchException; import java.util.Random; public class GG_HighLowInvalid{      public static void main(String[] args){          Scanner cg = new Scanner(System.in);          //Assign and define variables         int guess, rand;         guess = 0;         rand = 10;          //Create loop         do              try{                 guess = 0;                 //Ask for a guess                 System.out.print("Enter your guess: ");                  //Record the guess                 guess = cg.nextInt();             }             catch(InputMismatchException exception){                  System.out.println("Your guess must be an integer.");              }         while  (guess != rand);       } } </code></pre>  <p>When I put in any number, the code works fine and will loop to ask for another input and when 10 is entered, the code stops as it is supposed to (because guess becomes equal to rand). However, if I put in anything that is not an integer (such as "No"), an infinite loop occurs where the output prints the following:</p>  <p>"Your guess must be and integer."</p>  <p>"Enter your Guess: Your guess must be an integer."</p>  <p>"Enter your Guess: Your guess must be an integer."</p>  <p>"Enter your Guess: Your guess must be an integer."</p>  <p>repeating forever until the program is externally terminated. </p>  <p>Since the while statement is (guess != rand), why is a non-integer causing this infinite loop? Shouldn't the manual input under the try-statement be called again? Any assistance in understanding this would be greatly appreciated. Also, I am pretty new to Java, so sorry in advance if I am having simple issues.</p>