<p>I have to change the contents of .config file in my .jar file, I have copied the contents of config file from .jar folder and created one .config file outside the .jar file location.Now I created one method which is taking my <code>.jar-file</code>, <code>.config file name</code> and an <code>inputstream to this newly created .config file</code>. The method creates a temporary .jar file with contents copied from original jar and finally renames temp .jar file to original one and deleting original one. It is working fine but the .jar file created is corrupted and is not opening. What might be the issue, here is my code...</p>  <pre><code>def createNewJar(jarToEdit:String, entryToEdit: String, isp:InputStream) = {       val tempJar = File.createTempFile(jarToEdit, null, new File("/home/administrator/Sources/Scala/rationaltab-launchpad"))       val jar = new JarFile(jarToEdit)      val entries = jar.entries()      val buffer = new Array[Byte](1024)      val newJar = new JarOutputStream(new FileOutputStream(tempJar))      var delFlag = false      var bytesRead = 0       while(entries.hasMoreElements) {              try {                  val entry = entries.nextElement()                 val is = jar.getInputStream(entry)                 var newEntry = entry                  if (newEntry.getName.equals(entryToEdit)) {                    newEntry = new JarEntry(entryToEdit)                  }                 newJar.putNextEntry(newEntry)                 if (!newEntry.getName.equals(entryToEdit)) {                  while ( {bytesRead = is.read(buffer); bytesRead != -1 }) {                     newJar.write(buffer, 0, bytesRead)                   }                }                 if (newEntry.getName.equals(entryToEdit)) {                   while ( { bytesRead = isp.read(buffer); bytesRead != -1 }) {                    newJar.write(buffer, 0, bytesRead)                  }                }              newJar.closeEntry()        } catch { case e :Exception =&gt; e.printStackTrace() }       }      delFlag = true     if (delFlag) {        val origFile = new File(jarToEdit)        origFile.delete()        tempJar.renameTo(origFile)     }   } </code></pre>