<p>I have a Maven project. It includes 2 jars A and B, each of them requires com.zeroc.Ice jar. Problem is, jar A requires Ice 3.4.2, and jar B requires Ice 3.3.1.</p>  <p>Problem is, that when running project with Ice-3.4.2, some deep internal class of jar B throws NoSuchMethodError (and in fact, there is no such method in this version), and it works the same way with Ice 3.3.1, but now jar A throws NoClassDefFoundError (somewhere deep inside). Looks like there was a significant change between those versions of Ice, and 3.4.2 is not backward compatible.</p>  <p>Is there any way I could include both jars and "tell" which Ice version should be used for each of them (A and B)? I am looking for solution, where there is no need to play with code of jars A or B - is it possible?</p>