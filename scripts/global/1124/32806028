<p>In an app, I'm building a component relies on a user being able to send an image (along with some parameters) to a server (built using Flask/python). I'm firing an HTTP POST as a multipart/form-data</p>  <p>First time doing this, so I googled for some samples and saw that most people use a (buffered/print)writer to write the message as they build it to the output stream. I decided to first compose the entire message in the form of a String and then write it as bytes to the server. i.e write the whole thing as a string including the image bytes then convert to byte[] and write to the server stream.</p>  <p>This method worked perfectly for just parameters, but when an image is involved the resultant file on the server is un-readable. I understood early on that converting the image's bytes to a string was the culprit so what I did was change my code to first compose the pre-image-byte multipart message (as string), convert to bytes, write to the server and finally write just the raw image bytes to the server. </p>  <p>This fixed the problem, and the server is now decoding the image correctly. However I am still wondering is there some way I can transfer the picture's raw bytes as a string for it to be decoded correctly? (reminder: server is in Flask) and if not then please explain to me why not?</p>  <p>I apologize if this is a very dumb question but would certainly like getting my head around this whole thing.</p>  <p>EDIT: converting String to bytes using String.getBytes().</p>