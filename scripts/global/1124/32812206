<p>I have the following C# encryption logic that I am trying to convert to node, I am completely lost at this point. Here is my C# code:</p>  <pre><code> public static class Encryption {     public static string EncryptString(string s)     {         return string.IsNullOrEmpty(s)             ? ""             : Convert.ToBase64String(EncryptBytes(Encoding.Unicode.GetBytes(s), true));     }      public static string DecryptString(string s)     {         return s == "" ? "" : Encoding.Unicode.GetString(EncryptBytes(Convert.FromBase64String(s), false));     }      private static byte[] EncryptBytes(byte[] bin, bool isEncrypt)     {         byte[] desKey =         {             28, 8, 154, 12, 168, 128, 4, 54, 186, 177, 1, 55, 4, 29, 284, 128, 175, 111, 5, 168, 74, 49, 46, 9]         };         byte[] desIv = {52, 167, 216, 125, 186, 68, 162, 252};         using (var des = new TripleDESCryptoServiceProvider())         {             using (var ms = new MemoryStream())             {                 var encms = isEncrypt                     ? new CryptoStream(ms, des.CreateEncryptor(desKey, desIv), CryptoStreamMode.Write)                     : new CryptoStream(ms, des.CreateDecryptor(desKey, desIv), CryptoStreamMode.Write);                 encms.Write(bin, 0, bin.Length);                 encms.FlushFinalBlock();                 var ss1 = ms.ToArray();                 encms.Close();                 return ss1;             }         }     } } </code></pre>  <p>And my node.js version looks like this:</p>  <pre><code>module.exports.encryptString = function(stringToEncrypt) {     return processString(stringToEncrypt, false); }  module.exports.decryptString = function(stringToDecrypt) {     return processString(stringToDecrypt, true); } function processString(str, isEncrypted) {  var desKey = [28, 8, 154, 12, 168, 128, 4, 54, 186, 177, 1, 55, 4, 29, 284, 128, 175, 111, 5, 168, 74, 49, 46, 9]; var desIv = [52, 167, 216, 125, 186, 68, 162, 252]; var crypto = require('crypto');  var alg = 'des-ede-cbc';  if (isEncrypted) {     var decipher = crypto.createDecipheriv(alg, desKey, desIv);     var decoded = decipher.update(str, 'binary', 'ascii');     decoded += decipher.final('ascii');      return decoded; } else {     var cipher = crypto.createCipheriv(alg, desKey, desIv);     var encoded = cipher.update(str, 'ascii', 'base64');     encoded += cipher.final('base64');     return encoded; }  } </code></pre>  <p>When I run the processString with ('test123', true), I get the following error:</p>  <pre><code>Error: Must give cipher-type, key, and iv as argument </code></pre>  <p>It is failing on the line:</p>  <pre><code>var cipher = crypto.createCipheriv(alg, desKey, desIv); </code></pre>  <p>Do I need to convert the desKey and desIv?</p>