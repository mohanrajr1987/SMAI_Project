<p>I've already read this:</p>  <p><a href="http://stackoverflow.com/questions/492483/setting-the-correct-encoding-when-piping-stdout-in-python#">Setting the correct encoding when piping stdout in Python</a></p>  <p>And I'm trying to stick with the rule of thumb: "<em>Always use Unicode internally. Decode what you receive, and encode what you send.</em>"</p>  <p>So here's my main file:</p>  <pre><code># coding: utf-8  import os import sys  from myplugin import MyPlugin if __name__ == '__main__':     c = MyPlugin()     a = unicode(open('myfile.txt').read().decode('utf8'))     print(c.generate(a).encode('utf8')) </code></pre>  <p>What is getting on my nerves is that:</p>  <ul> <li>I read in a utf8 file so I decode it.</li> <li>then I force convert it to unicode which gives  <code>unicode(open('myfile.txt').read().decode('utf8'))</code></li> <li>then I try to output it to a terminal</li> <li>on my Linux shell I need to re-encode it to utf8, and <em>I guess this is normal</em> because I'm working all this time on an unicode string, then to output it, I have to re-encode it in utf8 (correct me if I'm wrong here)</li> <li>when I run it with Pycharm under Windows, it's twice utf8 encoded, which gives me things like <code>agrÃ©able, dÃ©jÃ</code>. So if I remove <code>encode('utf8')</code> (which changes the last line to <code>print(c.generate(a))</code> then it works with Pycharm, but doesn't work anymore with Linux, where I get: <code>'ascii' codec can't encode character u'\xe9' in position</code> blabla you know the problem.</li> </ul>  <p>If I try in the command line:</p>  <ul> <li>Linux/shell ssh: <code>import sys sys.stdout.encoding</code> I get <code>'UTF-8'</code></li> <li>Linux/shell <em>in my code</em>: <code>import sys sys.stdout.encoding</code> I get <code>None</code> WTF??</li> <li>Windows/Pycharm: <code>import sys sys.stdout.encoding</code> I get <code>'windows-1252'</code></li> </ul>  <p>What is the best way to code this so it works on both environments?</p>