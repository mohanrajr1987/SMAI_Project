<p>So I have RVM installed, put root and $account into the rvm group.</p>  <p>$account installs ruby 1.9.3-p551 into RVM and I set up RVM to enable</p>  <pre><code>rvm use 1.9.3 </code></pre>  <p>And then I check</p>  <pre><code>ruby -v ruby 1.9.3-p551 (2014-11-13 revision 48407) [x86_64-freebsd10.1] </code></pre>  <p>Which confirms that ruby has been changed from the system-wide 2.1 to the rvm-masked 1.9.3</p>  <p>The service I attempt to run is Snorby if that helps open any eyes, and so I start it with</p>  <pre><code>service snorby start </code></pre>  <p>To which it replies</p>  <pre><code>ruby1.9.3-p551 is not installed. To install do: 'rvm install ruby-1.9.3-p551' ruby1.9.3-p551 is not installed. To install do: 'rvm install ruby-1.9.3-p551' ruby1.9.3-p551 is not installed. ruby: ruby-1.9.3-p551 not available via rvm (exit code 1) </code></pre>  <p>If I interpreted it right, ruby was the one that returned the last error which makes me think some script is either expecting ruby-1.9.3-p551 to be in an environment variable that it is not, or when I attempt to run a service script, it is run under a different user and therefore needs to be added to the rvm group.</p>  <p>To try and confirm, I ran grep in one of the directories that almost all involved files reside:</p>  <pre><code>grep -rnwl '/usr/local' -e "is not installed" </code></pre>  <p>Just to find the possible script that would be reading this error, almost all the ones returned were ruby or rvm related. I'm unsure where to go next with this as reinstalling 1.9.3 does not fix the issue and I do not want to modify configs haphazardly.</p>  <p>Addendum_1.1:</p>  <p>Upon further research the rest of Addendum_1 is misinformed, in the script $0 would resolve to the correct directory, therefore both accounts resolve properly to</p>  <pre><code>/correct/directory </code></pre>  <p>I will italicize the remainder of Addendum_1 to leave it as background material.</p>  <p><em>I looked into the service script and realized that it attempts to read the .ruby-version in the wrong directory for the $account I have, on all other accounts the following code:</em></p>  <pre><code>echo $(cd $(dirname $0)/.. &amp;&amp; pwd) </code></pre>  <p><em>results in:</em></p>  <pre><code>/correct/dir </code></pre>  <p><em>But in $account the result is:</em></p>  <pre><code>/ </code></pre>  <p>Addendum_2:</p>  <p>Further research reveals that $? is being used to check exit codes and they are not lining up at all. When I test the exit code in $account by doing</p>  <pre><code>rvm use $version &gt;/dev/null; echo $? </code></pre>  <p>It returns 0, which is that everything's fine.</p>  <p>When I edit the script though and force it to echo $? after it uses</p>  <pre><code>rvm use $dynamically_acquired_version &gt;/dev/null </code></pre>  <p>It returns 1, which makes me suspect the script is being run as a different $account. I even checked if $version = $dynamically_acquired_version and they both are identical.</p>  <p>Addendum_3:</p>  <p>My suspicions are confirmed by injecting the following right at the beginning of the script:</p>  <pre><code>if [ -z "$USER" ]; then   echo "USER IS NULL" fi </code></pre>  <p>The user is changed, and in fact is not even defined, the way I have RVM installed is that only root and $account are in the rvm group. Hopefully things will clear up extremely soon.</p>  <p>I'll update this further when more results come up, if anyone happens upon this though feel free to throw me a bone while I'm digging.</p>