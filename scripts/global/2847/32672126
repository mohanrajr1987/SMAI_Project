<p>When trying to run a ruby script <code>ruby dispatch.fcgi</code> I get the error </p>  <pre><code>/pathtorvm/.rvm/rubies/ruby-2.2.0/lib/ruby/site_ruby/2.2.0/rubygems/core_ext/kernel_require.rb:54:in `require': cannot load such file -- fcgi (LoadError) from /pathtorvm/.rvm/rubies/ruby-2.2.0/lib/ruby/site_ruby/2.2.0/rubygems/core_ext/kernel_require.rb:54:in `require' from dispatch.fcgi:8:in `&lt;main&gt;' </code></pre>  <p>I am trying to follow Dreamhost's <a href="http://wiki.dreamhost.com/Rvm" rel="nofollow">Rvm</a>/<a href="http://wiki.dreamhost.com/Ruby_on_Rails" rel="nofollow">Rails</a> install guide as well as multiple blog posts:</p>  <p><a href="http://danielstrunk.me/blog/2014/07/01/configuring-rails-projects-fastcgi-dreamhost-shared-hosting/" rel="nofollow">Configuring Rails projects with FastCGI for Dreamhost shared hosting</a><br> <a href="http://adamish.com/blog/archives/775" rel="nofollow">RAILS 4.0.0 WITH RUBY 2.0 ON A DREAMHOST SHARED SERVER</a></p>  <p>I am using rvm => 1.26.11, ruby => 2.2.0, rails 4.2.2 successfully and have even tried ruby 2.0.0. I have tried to point all of my env_vars to the proper place but I am not 100% sure the $PATH var is setup properly.</p>  <p>I am using the bundler gem to install my gems and have <code>require 'fcgi'</code> inside of the Gemfile. Also I have removed the Gemfile.lock file and tried to run bundle install again. I thought maybe ruby-2.2.0 is causing problems but ruby-2.0.0 produced the same result &amp; <a href="http://adamish.com/blog/archives/775" rel="nofollow">RAILS 4.0.0 WITH RUBY 2.0 ON A DREAMHOST SHARED SERVER</a> clearly shows it working with ruby-2.0.0</p>  <p><code>dispatch.fcgi</code></p>  <pre><code>#!/pathtorvm/.rvm/rubies/ruby-2.2.0/bin/ruby  # Dreamhost clears environment variables when calling dispatch.fcgi, set again ENV['RAILS_ENV'] = 'production' ENV['HOME'] ||= `echo ~`.strip ENV['GEM_HOME'] = File.expand_path('~/.gems') ENV['GEM_PATH'] = File.expand_path('~/.gems') require 'fcgi' require '/pathtoapplication'sfile/config/boot.rb' require '/pathtoapplication'sfile/config/environment.rb'  class Rack::PathInfoRewriter         def initialize(app)                 @app = app         end          def call(env)                 env.delete('SCRIPT_NAME')             parts = env['REQUEST_URI'].split('?')             env['PATH_INFO'] = parts[0]             env['QUERY_STRING'] = parts[1].to_s             @app.call(env)         end end  #Rack::Handler::FastCGI.run Rack::PathInfoRewriter.new(ApplicationNamefoundin~../config/application.rb::Application) </code></pre>