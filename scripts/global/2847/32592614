<p>Lets say you write a gem containing classes within a module. If one installs that gem and wishes to create an object instance from that class, how do they successfully do that in another rb document? Here is my gem class.</p>  <p>require "Sentencemate/version"</p>  <pre><code>module Sentencemate   #Object used to emulate a single word in text.   class Word     def initialize(word)       @word = word     end     def append(str)       @word = @word &lt;&lt; str       return @word     end     def get       return @word     end     def setword(str)       @word = str     end     def tag(str)       @tag = str     end   end # Object used to emulate a sentence in text.   class Sentence     def initialize(statement)       @sentence = statement       statement = statement.chop       statement = statement.downcase       lst = statement.split(" ")       @words = []       for elem in lst         @words &lt;&lt; Word.new(elem)       end       if @sentence[@sentence.length-1] == "?"         @question = true       else         @question = false       end     end     def addword(str)       @words &lt;&lt; Word.new(str)     end     def addword_to_place(str, i)       @words.insert(i, Word.new(str))     end     def set_word(i, other)       @words[i].setword(other)     end     def [](i)       @words[i].get()     end     def length       @words.length     end     def addpunc(symbol)       @words[self.length-1].setword(@words[self.length-1].get &lt;&lt; symbol)     end     def checkforword(str)       for elem in @words         if elem.get == str           return true         end       end       return false     end   end end  </code></pre>  <p>in Rubymine, I will try the following in the Irb console:</p>  <pre><code>/usr/bin/ruby -e $stdout.sync=true;$stderr.sync=true;load($0=ARGV.shift) /usr/bin/irb --prompt simple Switch to inspect mode. &gt;&gt; require 'Sentencemate' =&gt; true &gt;&gt; varfortesting = Sentence.new("The moon is red.") NameError: uninitialized constant Sentence     from (irb):2     from /usr/bin/irb:12:in `&lt;top (required)&gt;'     from -e:1:in `load'     from -e:1:in `&lt;main&gt;' </code></pre>  <p>What would be the proper way to be able to use the classes in the gem that I installed?</p>