<p>I have an NLP task which has 3 components. I tried few methods (mentioned in the end) but I am not able to get good results.</p>  <ol> <li>Detecting temporal expressions in a statement</li> <li>Classifying then as either <strong>time stamp</strong>, <strong>time trigger</strong> or <strong>time period</strong>.</li> <li>Equate each expression to its DateTime equivalent.</li> </ol>  <p>Example:</p>  <p>Taking reference time as <strong>2000 hrs, Thursday, July 20th, 2015</strong></p>  <ol> <li><p><strong>time stamp</strong> :</p>  <p>I want to book a cab 20 minutes from now</p>  <pre><code>Answer: [tStamp]2020 hrs, Thursday, July 20th </code></pre></li> <li><p><strong>time trigger</strong> : </p>  <p>Any timer after 2 is fine</p>  <pre><code>Answer:  [tTrigger] - start - 0200 hrs,July 21st 2015 </code></pre>  <p>Before 5 is good</p>  <pre><code>[tTrigger] - start - now, 2000hrs, July 20th, 2015 : end - 0500 hrs, July 21st, 2015 </code></pre></li> <li><p><strong>time period</strong>:</p>  <p>I was working in san francisco for last two years</p>  <pre><code>[tPeriod] -  2013-2015 </code></pre></li> </ol>  <p>I tried to do this with regex gives very generic results. Second option I read was to try to make the model learn from Naive Bays classifier but naive bays learns exact words and not phrases.</p>  <p>I came across <a href="https://pypi.python.org/pypi/parsedatetime/" rel="nofollow">parsedatetime 1.5</a> package in python which is awesome to some extent in converting phrases to timestamps which solves 3. of mentioned problem but still I am not able to solve detention and classification.</p>