<p>i would like to get the base form of a word using Stanford in java.</p>  <p>`public class baseForm {</p>  <pre><code>protected StanfordCoreNLP pipeline;      public baseForm() {         // Create StanfordCoreNLP object properties, with POS tagging         // (required for lemmatization), and lemmatization         Properties props;         props = new Properties();         props.put("annotators", "tokenize, ssplit, pos, lemma");          /*          * This is a pipeline that takes in a string and returns various analyzed linguistic forms.           * The String is tokenized via a tokenizer (such as PTBTokenizerAnnotator),           * and then other sequence model style annotation can be used to add things like lemmas,           * POS tags, and named entities. These are returned as a list of CoreLabels.           * Other analysis components build and store parse trees, dependency graphs, etc.           *           * This class is designed to apply multiple Annotators to an Annotation.           * The idea is that you first build up the pipeline by adding Annotators,           * and then you take the objects you wish to annotate and pass them in and           * get in return a fully annotated object.          *           *  StanfordCoreNLP loads a lot of models, so you probably          *  only want to do this once per execution          */         this.pipeline = new StanfordCoreNLP(props);     }      public List&lt;String&gt; lemmatize(String documentText)     {         List&lt;String&gt; lemmas = new LinkedList&lt;String&gt;();         // Create an empty Annotation just with the given text         Annotation document = new Annotation(documentText);         // run all Annotators on this text         this.pipeline.annotate(document);         // Iterate over all of the sentences found         List&lt;CoreMap&gt; sentences = document.get(SentencesAnnotation.class);         for(CoreMap sentence: sentences) {             // Iterate over all tokens in a sentence             for (CoreLabel token: sentence.get(TokensAnnotation.class)) {                 // Retrieve and add the lemma for each word into the                 // list of lemmas                 lemmas.add(token.get(LemmaAnnotation.class));             }         }         return lemmas;     }       public static void main(String[] args) {         System.out.println("Starting Stanford Lemmatizer...");         String st=" Fulton County Grand Jury said Friday an investigation of Atlanta 's recent primary election produced no evidence that any irregularities took place ";          String text = "But , of course , he remembered now .";         baseForm slem = new baseForm();         System.out.println(slem.lemmatize(text)+"\n"); </code></pre>  <p>} } `</p>  <p>that's work when the input is a sentence but when the input is a single word that don't give the wanted result for exemple when the input is the word "remembered".the output is "remembered" and not "remember"</p>  <p>any one can help me</p>