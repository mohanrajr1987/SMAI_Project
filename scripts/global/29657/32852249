<p>I'm new to LESS, so there's a good chance the answer to this is obvious and I'm just not seeing it.</p>  <p>I have a situation where I want to be able to add certain combinations of classes and pseudoclasses to an element and then style its sibling element based on those cases. I'm trying to use nesting and the ampersand to not repeat the sibling element.</p>  <p>Here's what I started with. It works, but requires me to repeat the <code>sibling</code> element many times:</p>  <pre><code>base {     &amp; + sibling {         /* sel: base + sibling */     }      &amp;.class1 {         &amp; + sibling {             /* sel: base.class1 + sibling */         }          &amp;.class2 + sibling {             /* sel: base.class1.class2 + sibling */         }     }      &amp;.class3 + sibling {         /* sel: base.class3 + sibling */     } } </code></pre>  <p>Here is what I tried that didn't work in order to avoid repeating <code>sibling</code> constantly:</p>  <pre><code>sibling {     base + &amp; {         /* sel(expected): base + sibling            sel(actual):   base + sibling            SUCCESS */         &amp;.class1 {             /* sel(expected): base.class1 + sibling                sel(actual): base + sibling.class1                FAILURE */              &amp;.class2 {                 /* sel(expected): base.class1.class2 + sibling                    sel(actual): base + sibling.class1.class2                    FAILURE */             }         }          &amp;.class3 {             /* sel(expected): base.class3 + sibling                sel(actual): base + sibling.class3                FAILURE */         }     } } </code></pre>  <p>I understand why it didn't work, but I don't see a way in LESS to do this without repeating <code>sibling</code> all over the place, and it seems like it should be possible. Anyone smarter than me see something I'm missing?</p>