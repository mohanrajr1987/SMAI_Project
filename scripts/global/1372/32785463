<p>We are developing a tracking application using VS 2012 Windows application targeting windows 8.1.</p>  <p>We are using the GeoCoordinateWatcher Class. For some reason it seems that if the first fix is from a wifi and you then turn off the wifi, the application can't get a satellite fix ( the watcher state keeps returning no data). It can only see the wifi location.</p>  <p>Same issue seems to appear if the first fix is from a GPS satellite. </p>  <p>Not sure if this is a hardware or a software issue... But I need the watcher to use both sources based on availability.</p>  <p>Appreciate any insight on this issue.</p>  <p>Following is the part of the code responsible to capture the GPS. Its called on a timer that works every XX.</p>  <pre><code>private string SendingData()     {         try         {              DataXML = "";             string result = "";             Write_Trace_File("SendingData: Watcher Status: " + watcher.Status.ToString());             if (watcher.Status != GeoPositionStatus.Ready)             {                 try                 {                     watcher.TryStart(true,TimeSpan.FromSeconds(10));                 }                 catch (Exception exp)                 {                     Write_Trace_File(exp.Message);                 }             }             string cur_long = "";             string cur_lat = "";             string cur_speed = "";             if (watcher.Position.Location.IsUnknown)             {                 Write_Trace_File("SendingData: GPS not captured yet.");                 if (currlatitude.ToString() != "0.0" &amp;&amp; currlatitude.ToString() != "" &amp;&amp; currlatitude.ToString() != "0")                 {                     Write_Trace_File("SendingData:Using Cached GPS.GPS last captured at" + lastPosDate);                     cur_long = currlongtitude.ToString();                     cur_lat = currlatitude.ToString();                     if (speed.ToString() != "0")                     {                         cur_speed = speed.ToString();                     }                   }                 else                 {                     Write_Trace_File("SendingData:No Cached GPS.");                     return "";                 }             }             else             {                 Write_Trace_File("SendingData:Using Captured GPS.");                 cur_long = watcher.Position.Location.Longitude.ToString();                 cur_lat = watcher.Position.Location.Latitude.ToString();                 cur_speed = watcher.Position.Location.Speed.ToString();             }       } </code></pre>