<p>In my web application (more precisely a Vaadin TouchKit one, but the problem is the same with a simple html test page) I use GPS to retrieve the user's position. When I access it from a browser, it works. But if I access it from a WebView, it doesn't even try detecting GPS position and fails with a <code>POSITION_UNAVAILABLE</code> error.</p>  <p>Doing some research, it seems to me that I implemented all needed code, so I guess I am forgetting something which is usually implied by others. Here some snippets from my code:</p>  <pre><code>myWebView.setWebChromeClient(new WebChromeClient() {     @Override     public void onGeolocationPermissionsShowPrompt(String origin, GeolocationPermissions.Callback callback) {         callback.invoke(origin, true, true);     } });  WebSettings myWebSettings = myWebView.getSettings(); myWebSettings.setJavaScriptEnabled(true); myWebSettings.setGeolocationDatabasePath(getFilesDir().getPath()); myWebSettings.setGeolocationEnabled(true);  myWebView.loadUrl("http://192.168.2.50/Myapp"); // OR //myWebView.loadUrl("file:///android_asset/gps.html"); </code></pre>  <p>Permissions from my Manifest file:</p>  <pre><code>&lt;uses-permission android:name="android.permission.INTERNET" /&gt; &lt;uses-permission android:name="android.permission.ACCESS_GPS" /&gt; &lt;uses-permission android:name="android.permission.ACCESS_ASSISTED_GPS" /&gt; &lt;uses-permission android:name="android.permission.ACCESS_LOCATION" /&gt; &lt;uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION"/&gt; &lt;uses-permission android:name="android.permission.ACCESS_FINE_LOCATION"/&gt; </code></pre>  <p>As I said, when accessing the webapp from chrome, GPS works fine. What am I forgetting?</p>