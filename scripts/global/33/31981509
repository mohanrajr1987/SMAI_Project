<p>I have noticed that my classes tend to be larger/longer compared to code I tend to read online. The code below is intended as an example, but I am more interested in the way to think about and how to approach the problem.</p>  <p>As you will see the class handles many roles and I would love to learn on how to refactor it into other classes and examples, if possible, on practical solutions. Links to books/guides on how to solve this problem would be great.</p>  <p>So I have a Backend class with the following declaration. I am using C#, but I think that my question covers other languages.</p>  <pre class="lang-cs prettyprint-override"><code>public static class Backend {     //These classes are the equivalent classes of a cloud database tables     //Using them to map the tables to objects in my app     public class User{}     public class Place{}     public class SubPriority{}     public class Question{}     public class Parent{}     public class Response{}     public class SubParent{}      //initialize the local and cloud databases     public static async void init();      //Add place to local database     public static string AddPlace(string name, string buildingType)      //Retrieve places from local database     public static List&lt;Place&gt; RetrievePlaces()      //Delete a place from local database     public static bool DeletePlace(string placeID)      public static string AddSubPriority(String name)     public static List&lt;SubPriority&gt; RetrieveSubPriorities()     public static bool DeleteSubPriority(string placeID, int ID)      //Sync local db with cloud     public static async Task&lt;bool&gt; SyncWithCloud()      //Download SubParents from the cloud     public static async Task&lt;List&lt;SubParent&gt;&gt; DownloadSubParents()      //Retrieve SubParents from local     public static List&lt;SubParent&gt; RetrieveSubParents(int parentid)     ...     ...     ...     //Similar methods for parents and questions        //Handling login     public static async Task&lt;bool&gt; Login(string userName, string pass)     static async Task&lt;bool&gt; LoginOnline(string userName, string pass)     static bool LoginOffline(string userName, string pass)      //Check for internet connectivity     static async Task&lt;bool&gt; isConnectedToInternet()     static bool InternetAvailable() } </code></pre>