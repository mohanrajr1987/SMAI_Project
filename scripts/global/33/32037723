<p>For an AI I'm using random values to decide which action to perform next (only when there is nothing rule based to do). Some of the actions should be picked more often than others.</p>  <p>The idea is to define a group of probabilities and pick an action from the probs  2 twice as often then an action with 1, the action 4 with a five times higher probability.</p>  <pre><code>action prob 0         1 1         2 (twice as often than 1) 2         2 3         2 4         5 (5 times morer often than 1) </code></pre>  <p>Is there a wellknown algorithm for this behaviour or a more mathematical approach?</p>  <p>My test implementation is somewhat awkward. I would prefer to avoid the inner loop. </p>  <pre><code>public static void main(String[] args) {     int[] counts = new int[5];     int[] props = { 1 ,2 ,2 ,2 ,5 };     int sum = 0;     for (int i = 0; i &lt; props.length ; i++) {         sum += props[i];     }     for ( int i = 0 ; i &lt; 100 ; i++ ) {         int rand = (int) (Math.random() * sum);         for ( int j = 0 ; j &lt; props.length ; j++ ) {             if ( rand - props[j] &lt;= 0 ) {                 counts[j] = counts[j] + 1;             }         }     }     for ( int j = 0 ; j &lt; props.length ; j++ ) {         System.out.println( "count " + j + "=" + counts[j] );     } } </code></pre>  <p>Depending on the test run it produces results like:</p>  <pre><code>count 0=14 count 1=25 count 2=25 count 3=25 count 4=50 </code></pre>