<p>I know according to open closed principle, something like class,interface,code.... should be unchanged when add new functions or contents, but is file also in this case?</p>  <p>I was designing a game, the game have some monster information, and the game (in client side) may download or replace some file if there are new monsters to add or update.</p>  <p>I was worrying what should be the format of monster information: 1 file with all monster information or each monster has individual file?</p>  <p>1.Store all monster information into a single file (e.g.:monsterlist.json),each time add new monster it will replace the file e.g.:</p>  <pre><code>{       "monsterList":[         {             "id":1,             "hp":100,             "attack":230,         },         {             "id":2             "hp":500             "attack":980         }     ] } </code></pre>  <p>2.Each monster has a individual file,each time add a new monster will also add a new monster json:</p>  <p>monster1.json</p>  <pre><code>{     "id":1,     "hp":100,     "attack":230, } </code></pre>  <p>monster2.json</p>  <pre><code>{     "id":2,     "hp":500,     "attack":980, } </code></pre>  <p>At start I think case 1 is most convenient, because when I add or update any monsters I only need to replace monsterlist.json, but for case 2, I need to know which json is new (may need extra row to store the update status in server database).</p>  <p>But suddenly I remember open closed principle, adding something new should not modify the current content, it seems not reasonable to replace a file when a new monster is added.</p>  <p>The above is just the example of why I think if "file" includes in open closed principle, not asking which format is better. The main point I want to ask is not which file format is better, but the definition of open closed principle, because I cannot find any definition that mentions "file", once it is confirmed, I can deduce which format of file should use.</p>