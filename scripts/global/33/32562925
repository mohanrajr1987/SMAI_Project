<p>I guess most people know that one problem before to start with a project: which programming language to choose</p>  <p>I did some research and still didn't come to a conclusion for which language (which also depends on the available libraries to choose)</p>  <p>The application I'm going to make is a server application with a binary protocol on top of TCP (operation codes and operation parameters)</p>  <p>My requirements are:</p>  <ul> <li>Event driven network library (optionally with extensions to easily define an own protocol)</li> <li>easy parallelization (the required event driven network requests should be handled on multiple cores)</li> <li>Good performance and memory usage (because server will handle many requests)</li> <li>Object oriented</li> <li>Library for Postgres</li> <li>run on unix systems (mainly linux)</li> <li>I don't want to reinvent the wheel (I don't want to build all myself using basic C sockets and boost for multi-threading - I prefer a stable and maintained library built by people who have more experience with such so I can focus on the actual tasks of the server application)</li> </ul>  <p>My current considerations:</p>  <ul> <li>Java with netty.io (pro: good implementation of OO and netty.io provides required network handling (and easy implementation of custom binary protocol), con: bad performance and memory usage)</li> <li>Swift (pro: nice, modern language with good reference pointer reliability etc., con: no useful network library found, NSStream is not open-source and therefore cannot be used on linux - overall the worst candidate although I have sympathy with the language itself)</li> <li>C++ with asio (pro: good performance and memory usage, acceptable implementation of OO, con: manual memory management, how good does the asynchronous model with asio really work?)</li> </ul>  <p>What do you think of my current considerations, do you know any more libraries that fulfill my needs and other programming languages (together with libaries) you would suggest?</p>