<p>I want to get the sum values for each key in all dictionaries of a list, and if a key is not present in one of the dictionaries, then its value is considered 0. </p>  <p>Suppose I have two dictionaries as such:</p>  <pre><code>d1 = {'a' : 2, 'b' : 1, 'c' : 1} d2 = {'a' : 3, 'b' : 1.1, 'd' : 2} mylist = [d1, d2] </code></pre>  <p>and I would like to define a <code>sum</code> function such that</p>  <pre><code>&gt;&gt;&gt; sum(mylist) {'a' : 5, 'b' : 2.1, 'c' : 1, 'd' : 2} </code></pre>  <p>If I only have two dictionaries, I can do</p>  <pre><code>&gt;&gt;&gt; for key, value in d2.items(): ...    try: ...        d1[key] -= value ...    except KeyError: #if the key isn't in d1 ...        d1[key] = -value  &gt;&gt;&gt; d1 {'a' : 5, 'b' : 2.1, 'c' : 1, 'd' : 2} </code></pre>  <p>But this is not extendable to an arbitrary number of dictionaries. </p>  <p>I also tried</p>  <pre><code>&gt;&gt;&gt; {k: sum(e[k] for e in mylist) for k in mylist[0]} {'a' : 5, 'b' : 2.1, 'c' : 1} </code></pre>  <p>But this doesn't give me the sum for elements that aren't in the first list (I'm missing the sum for 'd' in my example). </p>  <p>I could create a dictionary with all of the possible keys and add it to the front of my list</p>  <pre><code>&gt;&gt;&gt; d0 = {'a' : 0, 'b' : 0, 'c' : 0, 'd' : 0} &gt;&gt;&gt; newlist = [d0, d1, d2] &gt;&gt;&gt; {k: sum(e[k] for e in newlist) for k in newlist[0]} {'a' : 5, 'b' : 2.1, 'c' : 1, 'd' : 2} </code></pre>  <p>But creating <code>d0</code> will be tedious. </p>  <p>I could also use <code>Counter</code> from <code>collections</code></p>  <pre><code>&gt;&gt;&gt; counterlist = [Counter(d) for d in mylist] &gt;&gt;&gt; result = Counter() &gt;&gt;&gt; for c in counterlist: ...    result.update(c) &gt;&gt;&gt; dict(result) </code></pre>  <p>But I'm not too happy about switching back and forth to <code>Counter</code>. </p>  <p>Or, I could implement an 'update-like' function </p>  <pre><code>&gt;&gt;&gt; def add(e, f): ...    for key, value in f.items(): ...        try: ...            e[key] -= value ...        except KeyError: ...            e[key] = -value  &gt;&gt;&gt; result = dict() &gt;&gt;&gt; for d in mylist: ...    add(result, d) &gt;&gt;&gt; result {'a' : 5, 'b' : 2.1, 'c' : 1, 'd' : 2} </code></pre>  <p>But this makes me feel like I'm reinventing the wheel. </p>  <p>Is there a more pythonic way of doing this?</p>