<p>I'm at my wit's end when it comes to adding up the <strong>individual</strong> sums of arrays inside a two-dimensional array. For example:</p>  <pre><code>var arrArrays = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];  function sumArray(numberArray) {   var sum = 0;   numberArray.forEach(function(a,b) {     sum = a + b;   });   return sum; } </code></pre>  <p>The function sumArray can successfully add up &amp; return the sum of a regular (one-dimensional array), but when passed arrArrays it returns a single array of random-looking values.</p>  <p>I would need it to be able to return the sums of however many arrays are inside another array. The reason being is because I need this next function to call sumArray():</p>  <pre><code>function sumSort(arrayOfArrays) {   arrayOfArrays.sort(function(a,b) {     var sumArray1 = sumArray(a);     var sumArray2 = sumArray(b);     if (sumArray1 &lt; sumArray2) {       return -1;     } else {       return 0;     }   }); } </code></pre>  <p>sumSort() will, theoretically, order the arrays based on the sum of the numbers inside each array (descending from highest to lowest).</p>  <p>Any tips would be awesome. Thank you in advance!</p>