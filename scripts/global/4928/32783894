<p>I have a list of objects (<code>ObjectX</code>), and i want to sum the occurences of a specific field (<code>fieldX</code>) from this object for each element of the list with the same id (<code>idX</code>).</p>  <p>Example folderList:</p>  <pre><code>                idX     fieldX      fieldYY ObjectX1 :      1       50          a ObjectX2 :      1       null        a ObjectX3 :      1       30          a ObjectX4 :      2       99          b </code></pre>  <p>I want to get :</p>  <pre><code>                idX     fieldX      fieldYY ObjectX1 :      1       80          a ObjectX2 :      2       99          b </code></pre>  <p>I started by sorting the list to regroup the objects with the same <code>idX</code> : (I'm using Java 1.6)</p>  <pre><code>Collections.sort(folderList, new Comparator&lt;ObjectX&gt;() {     public int compare(final ObjectX objOne, final ObjectX objTwo)     {         Integer orderFirst = objOne.getOrders();         Integer orderSecond = objTwo.getOrders();         Integer dareOne = new Integer(0);         Integer dareTwo = new Integer(0);         int sComp = orderFirst.compareTo(orderSecond);         if (sComp != 0) {             return sComp;         }         else {             dareOne = objOne.getFolderNum();             dareTwo = objTwo.getFolderNum();             return dareOne.compareTo(dareTwo);         }     } }); </code></pre>  <p>But i don't get how i can at the same time sum the <code>fieldX</code> values and get only one row by <code>fieldX</code> (like the SUM() function in SQL) in a efficient way.</p>