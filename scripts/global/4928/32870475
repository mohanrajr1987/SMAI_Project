<p>I'm attempting to create sigma/summation function with the variables in my dataset that looks like this:</p>  <pre><code>paste0("(choose(",zipdistrib$Leads[1],",",zipdistrib$Starts[1],")*beta(a+",zipdistrib$Starts[1],",b+",zipdistrib$Leads[1],"-",zipdistrib$Starts[1],")/beta(a,b))") </code></pre>  <p>When I enter that code, I get</p>  <pre><code>[1] "(choose(9,6)*beta(a+6,b+9-6)/beta(a,b))" </code></pre>  <p>I want to create a sigma/summation function where <code>a</code> and <code>b</code> are unknown free-floating variables and the values of <code>Leads[i]</code> and <code>Starts[i]</code> are determined by the values for <code>Leads</code> and <code>Starts</code> for observation <code>i</code> in my dataset. I have tried using a <code>sum</code> function in conjunction with <code>mapply</code> and <code>sapply</code> to no avail. Currently, I am taking the tack of creating the function as a string using a <code>for</code> loop in conjunction with a <code>paste0</code> command so that the only things that change are the values of the variables <code>Leads</code> and <code>Starts</code>. Then, I try coercing the result into a function. To my surprise, I can actually enter this code without creating a syntax error, but when I try optimize the function for variables <code>a</code> and <code>b</code>, I'm not having success.</p>  <p>Here's my attempt to create the function out of a string.</p>  <pre><code>betafcn &lt;- function (a,b) { abfcnstring &lt;-    for (i in 1:length(zipdistrib$Zip5))     toString(       paste0("      (choose(",zipdistrib$Leads[i],",",zipdistrib$Starts[i],")*beta(a+",zipdistrib$Starts[i],",b+",zipdistrib$Leads[i],"-",zipdistrib$Starts[i],")/beta(a,b))+")    ) as.function(   as.list(     substr(abfcnstring, 1, nchar(abfcnstring)-1)    ) ) } </code></pre>  <p>Then when I try to optimize the function for a and b, I get the following:</p>  <pre><code>optim(c(a=.03, b=100), betafcn(a,b)) ## Error in as.function.default(x, envir) :    argument must have length at least 1 </code></pre>  <p>Is there a better way for me to compile a <code>sigma</code> from <code>i=1</code> to length of dataset with <code>mapply</code> or <code>lapply</code> or some other <code>*apply</code> function? Or am I stuck using a dreaded <code>for</code> loop? And then once I create the function, how do I make sure that I can optimize for <code>a</code> and <code>b</code>?</p>  <p><strong>Update</strong></p>  <p>This is what my dataset would look like:</p>  <pre><code>leads &lt;-c(7,4,2) sales &lt;-c(3,1,0) zipcodes &lt;-factor(c("11111", "22222", "33333")) zipleads &lt;-data.frame(ZipCode=zipcodes, Leads=leads, Sales=sales) zipleads ##  ZipCode Leads Sales # 1   11111     7     3 # 2   22222     4     1 # 3   33333     2     0 </code></pre>  <p>My goal is to create a function that would look something like this:</p>  <pre><code>betafcn &lt;-function (a,b) {    (choose(7,3)*beta(a+3,b+7-3)/beta(a,b))+    (choose(4,1)*beta(a+4,b+4-1)/beta(a,b))+    (choose(2,0)*beta(a+0,b+2-0)/beta(a,b))   } </code></pre>  <p>The difference is that I would ideally like to replace the dataset values with any other possible vectors for Leads and Sales.</p>