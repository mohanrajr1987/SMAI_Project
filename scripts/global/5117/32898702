<p>My application android 4.2 uses bluetooth. I have set up a broadcast receiver to get messages from the bluetooth device and adapter. I am looking for a way to detect a loss in communication from out of range or (external) BT device has been turned off. I tried BluetoothDevice.ACTION_ACL_DISCONNECTED but no response from the broadcast receiver. Here is one post that I have found. </p>  <p><a href="http://stackoverflow.com/questions/29984570/android-bluetooth-connection-lost">Android Bluetooth connection lost</a> </p>  <p>MY bluetooth receiver is a RN42. Is there a message sent that I can get that will detect this loss ?</p>  <p>Here is my BroadcastReceiver</p>  <pre><code>    private class SingBroadcastReceiver extends BroadcastReceiver {      public void onReceive(Context context, Intent intent) {          String action = intent.getAction(); //may need to chain this to a recognizing function          if (BluetoothDevice.ACTION_FOUND.equals(action)) {             Log.d("TAG", "Receiver");              BluetoothDevice device = intent.getParcelableExtra(BluetoothDevice.EXTRA_DEVICE);             // Add the name and address to an array adapter to show in a Toast             String derp = device.getName();// + " - " + device.getAddress();             Toast.makeText(context, derp, Toast.LENGTH_LONG).show();             Log.d("TAG", derp);               if (device.getName().equals("RN42-45A9")) {                 Log.d("TAG", "Should Connect");                 mBTA.cancelDiscovery();                 connectToDevice();               } else {                 Log.d("TAG", "NO Connect");             }          }         if (BluetoothDevice.ACTION_ACL_DISCONNECTED.equals(action)) {              Log.d("TAG", "Receiver ACL DIS");         }          String stateExtra = BluetoothAdapter.EXTRA_STATE;         int state = intent.getIntExtra(stateExtra, -1);          switch (state) {             case (BluetoothAdapter.STATE_TURNING_ON): {                 Log.d("TAG", "Turning ON");                  break;             }              case (BluetoothAdapter.STATE_ON): {                 Log.d("TAG", "ON");                  break;             }              case (BluetoothAdapter.STATE_TURNING_OFF): {                 Log.d("TAG", "Turning OFF");                  break;             }              case (BluetoothAdapter.STATE_OFF): {                 Log.d("TAG", "OFF");                  break;             }              case (BluetoothAdapter.STATE_DISCONNECTING):{                 Log.d("TAG", "Disconnecting");                 break;              }           }     } } </code></pre>  <p>Here is the filter</p>  <pre><code>        mReceiver = new SingBroadcastReceiver();     IntentFilter filter = new IntentFilter(BluetoothDevice.ACTION_FOUND);     registerReceiver(mReceiver, filter);     filter.addAction(BluetoothDevice.ACTION_ACL_DISCONNECTED); </code></pre>