<p>When i connect to a device, its starts the beginListenForData method.</p>  <pre><code>private void openBT() {         try {             // Standard SerialPortService ID             UUID uuid = UUID.fromString("00001101-0000-1000-8000-00805f9b34fb");             mmSocket = mmDevice.createRfcommSocketToServiceRecord(uuid);             mmSocket.connect();             mmOutputStream = mmSocket.getOutputStream();             mmInputStream = mmSocket.getInputStream();              beginListenForData();          } catch (NullPointerException e) {             e.printStackTrace();         } catch (Exception e) {             e.printStackTrace();         }     } </code></pre>  <p>Here is the beginListenForData-method</p>  <pre><code>void beginListenForData() {     try {         final Handler handler = new Handler();          // This is the ASCII code for a newline character         final byte delimiter = 10;          stopWorker = false;         readBufferPosition = 0;         readBuffer = new byte[1024];          workerThread = new Thread(new Runnable() {             public void run() {                 while (!Thread.currentThread().isInterrupted()                         &amp;&amp; !stopWorker) {                      try {                          int bytesAvailable = mmInputStream.available();                         if (bytesAvailable &gt; 0) {                             byte[] packetBytes = new byte[bytesAvailable];                             mmInputStream.read(packetBytes);                             for (int i = 0; i &lt; bytesAvailable; i++) {                                 byte b = packetBytes[i];                                 if (b == delimiter) {                                     byte[] encodedBytes = new byte[readBufferPosition];                                     System.arraycopy(readBuffer, 0,                                             encodedBytes, 0,                                             encodedBytes.length);                                     final String data = new String(                                             encodedBytes, "US-ASCII");                                     readBufferPosition = 0;                                      boolean post = handler.post(new Runnable() {                                         public void run() {                                             Log.d("mybluetooth","inputdata:"+data);                                         }                                      });                                 } else {                                     readBuffer[readBufferPosition++] = b;                                 }                             }                         }                      } catch (IOException ex) {                         stopWorker = true;                     }                  }             }         });          workerThread.start();     } catch (NullPointerException e) {         e.printStackTrace();     } catch (Exception e) {         e.printStackTrace();     } } </code></pre>  <p>In the <code>int bytesAvailable = mmInputStream.available();</code>line i always got </p>  <pre><code>D/BluetoothSocketï¹• available: android.net.LocalSocketImpl$SocketInputStream@42080a68 </code></pre>  <p>error message flood. and cant read more debug message, other functions works good, but if i log from there i cant found that in logcat. maybe its loss.</p>  <p>What is the problem with this code? Why i got flood?</p>  <p>I hope someone can help me! Thanks</p>