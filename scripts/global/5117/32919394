<p>this my broardcast code .. my broadcastrecevier is not receving signal.. but this same code connected  code i used in mainactivity.. in mainactivity it is connecting auto matically but when i exit application means bluetooth is not connect with external bluetooth.. please tell me where i did the mistake .. i need to autoconnect with external bluetooth  and mobile  bluetooth if  my bluetooth was in range... without open my application. i gave permission also</p>  <pre><code>public class Bluetoothrecevier extends BroadcastReceiver { private static BluetoothAdapter btAdapter = null; private static BluetoothSocket btSocket = null; private OutputStream outStream = null; dphelper databaseHelper; Handler handler4; Runnable runnable4; String add; private static final String TAG = "on and off"; Context context; private static BluetoothAdapter btAdapter = null; private static BluetoothSocket btSocket = null; private OutputStream outStream = null; private static final UUID MY_UUID = UUID.fromString("00001101-0000-1000-8000-00805F9B34FB");  BluetoothDevice device, pairedDevices; String devicename="HC-05"; @Override public void onReceive(Context context, Intent intent) {     btAdapter = BluetoothAdapter.getDefaultAdapter();      String action = intent.getAction();     if (BluetoothDevice.ACTION_BOND_STATE_CHANGED.equals(action)) {         device = intent.getParcelableExtra(BluetoothDevice.EXTRA_DEVICE);         databaseHelper = new dphelper(context);         SQLiteDatabase db = databaseHelper.getReadableDatabase();         String query = "select * from bluetoothTable";         final Cursor cursors = db.rawQuery(query, null);         cursors.moveToNext();         add = cursors.getString(cursors.getColumnIndex("macaddress"));         String name = intent.getStringExtra(BluetoothDevice.EXTRA_NAME);          if(name.equals(devicename)){             connectToBluetooth();             Set&lt;BluetoothDevice&gt; pairedDevices = btAdapter.getBondedDevices();             if (pairedDevices.size() &gt; 0) {                 for (BluetoothDevice device : pairedDevices) {                      int  rssi = intent.getShortExtra(BluetoothDevice.EXTRA_RSSI,Short.MIN_VALUE);                     if (device.getAddress().equals(add)){                         connectToBluetooth();                     }        }         }     } } </code></pre>  <p><code>}</code></p>  <pre><code>private void connectToBluetooth() {     try {          Log.d(TAG, "...In onResume - Attempting client connect...");          BluetoothDevice device = btAdapter.getRemoteDevice(add);          try {              if (device.getBondState() == device.BOND_BONDED) {                 btSocket = device.createInsecureRfcommSocketToServiceRecord(MY_UUID);               } else {                  btSocket = device.createRfcommSocketToServiceRecord(MY_UUID);              }          } catch (IOException e) {          }           Log.d(TAG, "...Connecting to Remote...");         try {             btSocket.connect();             Log.d(TAG, "...Connection established and data link opened...");          } catch (IOException e) {             try {                   btSocket.close();             } catch (IOException e2) {              }         }           Log.d(TAG, "...Creating Socket...");          try {             outStream = btSocket.getOutputStream();         } catch (IOException e) {           }      } catch (Throwable th) {      } }  private void sendData(String message) {      try {         byte[] msgBuffer = message.getBytes();          Log.d(TAG, "...Sending data: " + message + "...");          try {             outStream.write(msgBuffer);         } catch (Throwable th) {         }     } catch (Throwable th) {     } } } </code></pre>