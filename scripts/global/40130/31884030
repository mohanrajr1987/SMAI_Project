<p><strong>Context:</strong> Alright, so as part of a project I've been tasked with creating a tab  (NavigatorContent) which contains a File Tree that supports drag/drop reorganisation and importing. Copy/pasting. Essentially asking for the full functionality of a Windows folder, inside a desktop application.</p>  <p>I started, logically, with a FileSystemTree from the old MX components, and gave it the directory it needs to reference upon CreationComplete. To support native drag/drop, I added a container below it with prompts to drag/drop content. This successfully copies content into the directory referenced by the FileSystemTree, and refreshes it, displaying the new content. Gold.</p>  <p><strong>My problem starts here:</strong> I've enabled drag/drop on the Tree, and sure enough you can drag/drop items around the FileTree and reorganise them into the folders/whatever you want to do. But, because the Tree is only a reference to the directory, and not a direct link, nothing actually happens to the directory when all is said and done.</p>  <p>I attempted some lengthy, convoluted effort to catch drag/drop events and use the index of the dropped object to call <em>moveTo</em>  functions as files are moved, and refreshing the Tree at each. This <em>almost</em> works, but it has enough issues that it's moot. I can share this code if needed, but I'm fairly certain its the wrong direction.</p>  <p><strong>TL;DR Question</strong> Is there any previously established/easy way to capture the structure of a FileSystemTree and then use that structure to update an actual directory structure?</p>