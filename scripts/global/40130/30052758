<p>I have a checkbox for which I am setting the "selected" property programmatically. After setting the value, a mouse-click handler comes into action and rest of the logic lies in there.</p>  <p>The event handler is able to fetch the selected Checkbox via:</p>  <pre><code>event.target as CheckBox; </code></pre>  <p>But it is not fetching the proper value of the "selected" property. For e.g. if I set the property to "FALSE", then after fetching the CheckBox, it's value is found to be "TRUE". This behavior is very weird, and I never faced such issue before. </p>  <p>Any help in this regard will be greatly appreciated!</p>  <p>Following is the code snapshot:</p>  <p>CheckBox.selected is set to FALSE:</p>  <pre><code>filterUIObject.filterCheckBox.selected = false; filterUIObject.filterCheckBox.dispatchEvent(new MouseEvent(MouseEvent.CLICK)); </code></pre>  <p>filterUIObject is an Object which is holding references to multiple controls and containers as shown below:</p>  <pre><code>var filterUIObject:Object = new Object();                            var cbSelected:Boolean = false;             var tiValue:String = "";             var dateFilterName:String = dateByVariableFilterNames.getItemAt(i) as String;               var dateByVarCB:CheckBox = new CheckBox();             dateByVarCB.addEventListener(MouseEvent.CLICK, checkBoxClickHandler);             dateByVarCB.id = dateFilterName+"_CB";              dateByVarCB.name = dateFilterName;             dateByVarCB.label = dateFilterName;             dateByVarCB.toolTip = RB.getString('Common.ToolTip.SelectOccurrences.txt');              //dateByVarCB.selected = cbSelected;              // Creates last &lt;TextInput&gt; occurrences             var lastOccurrencesTI:TextInput = new TextInput();             lastOccurrencesTI.id = dateFilterName+"_TI";             lastOccurrencesTI.name = dateFilterName+"_TI";             lastOccurrencesTI.toolTip = RB.getString('Common.ToolTip.Occurrences.txt');             lastOccurrencesTI.width = 30             lastOccurrencesTI.text = ""+tiValue;             lastOccurrencesTI.restrict = RESTRICT_TO_CHARS;             lastOccurrencesTI.maxChars = 2;              var occurrencesLabel:Label = new Label();             occurrencesLabel.text = RB.getString('GallerySecondaryFilterPage.Occurrences.label.txt');              var eachRowContainer:GridRow = new GridRow();              var gridItem:GridItem = new GridItem();              var filterContainerVB:VBox = new VBox();             filterContainerVB.id = dateFilterName;             filterContainerVB.name = dateFilterName;             filterContainerVB.percentWidth = 33;             filterContainerVB.height = 65;              var horizontalContainer:HBox;             horizontalContainer = new HBox();             horizontalContainer.percentWidth = 100             horizontalContainer.percentHeight = 100;              var spaceVarLabel:Label = new Label();             spaceVarLabel.text = "";             horizontalContainer.addChild(spaceVarLabel);             horizontalContainer.addChild(lastOccurrencesTI);             horizontalContainer.addChild(occurrencesLabel);              filterContainerVB.addChild(dateByVarCB);             filterContainerVB.addChild(horizontalContainer);             gridItem.addChild(filterContainerVB);              eachRowContainer.addChild(gridItem);             this.addChild(eachRowContainer);              // update data in filterUIObject.             filterUIObject.filterContainer = eachRowContainer;             filterUIObject.dateFilterName = dateFilterName;             filterUIObject.filterCheckBox = dateByVarCB;              filterUIObject.filterTextInput = lastOccurrencesTI;                                           filterUIObject.filterOccurrencesLabel = occurrencesLabel;             filterUIObjects[i] = filterUIObject; </code></pre>  <p>This is the event handler:</p>  <pre><code>    private function checkBoxClickHandler(event:MouseEvent):void     {         var selectedCheckBox:CheckBox = event.target as CheckBox;         var checkBoxID:String = selectedCheckBox.id;          if(selectedCheckBox.selected)         {             for each(var filterUIObject:Object in filterUIObjects)             {                 if(checkBoxID == filterUIObject.filterCheckBox.id)                 {                     filterUIObject.filterOccurrencesLabel.enabled = true;                     filterUIObject.filterTextInput.enabled = true;                     //filterUIObject.filterTextInput.text = DEFAULT_OCCURENCE_VALUE;                     break;                                       }             }            }         else         {             for each(filterUIObject in filterUIObjects)             {                 if(checkBoxID == filterUIObject.filterCheckBox.id)                 {                     filterUIObject.filterOccurrencesLabel.enabled = false;                     filterUIObject.filterTextInput.enabled = false;                     //filterUIObject.filterTextInput.text = "";                     break;                                       }             }                        }     } </code></pre>  <p>Whenever I debug, the code in above event handler always goes into the 'IF' block, never enters the 'ELSE' block (even though the initial value was set to 'FALSE').</p>  <p>Is it because I am storing the control references in an Object? If YES, what can be done to retrieve the correct value?</p>