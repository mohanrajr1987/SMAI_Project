<p>I know how to upload with ASP.net FileUpload control. I got example and modify some of logic what I want to do is use "User Control (UC)".</p>  <p>But in same .aspx , I use two UC，"MultipleFileUpload1" can execution (can select file and uplod)， the other UC "MultipleFileUpload2" can not execution (can select file but can't uplod/Add success)</p>  <p><a href="http://i.stack.imgur.com/7ZFTk.png" rel="nofollow"><img src="http://i.stack.imgur.com/7ZFTk.png" alt="enter image description here"></a></p>  <p>In MultipleFileUpload.ascx , I already set function name are "unique" to avoid this problem,but have same problem.  <a href="http://i.stack.imgur.com/D82bc.png" rel="nofollow"><img src="http://i.stack.imgur.com/D82bc.png" alt="enter image description here"></a></p>  <p>Does anyone know how to do this? Thanks for your help!</p>  <pre><code>MultipleFileUpload.ascx  &lt;%@ Control Language="C#" AutoEventWireup="true" CodeBehind="MultipleFileUpload.ascx.cs" Inherits="CS.MultipleFileUpload" %&gt;     &lt;asp:Panel ID="pnlParent" runat="server" Width="300px" BorderColor="Black" BorderWidth="1px"         BorderStyle="Solid"&gt;         &lt;asp:Panel ID="pnlFiles" runat="server" Width="300px" HorizontalAlign="Left"&gt;             &lt;asp:FileUpload ID="IpFile" runat="server" /&gt;         &lt;/asp:Panel&gt;         &lt;asp:Panel ID="pnlListBox" runat="server" Width="292px" BorderStyle="Inset"&gt;         &lt;/asp:Panel&gt;         &lt;asp:Panel ID="pnlButton" runat="server" Width="300px" HorizontalAlign="Right"&gt;             &lt;input id="btnAdd" onclick="javascript:Add();" style="width: 60px" type="button"                 runat="server" value="Add" /&gt;             &lt;input id="btnClear" onclick="javascript:Clear();" style="width: 60px" type="button"                 value="Clear" runat="server" /&gt;             &lt;asp:Button ID="btnUpload" OnClientClick="javascript:return DisableTop();" runat="server"                 Text="Upload" Width="60px" OnClick="btnUpload_Click" /&gt;             &lt;br /&gt;             &lt;asp:Label ID="lblCaption" runat="server" Font-Bold="True" Font-Names="Verdana" Font-Size="XX-Small"                 ForeColor="Gray"&gt;&lt;/asp:Label&gt;&amp;nbsp;         &lt;/asp:Panel&gt;     &lt;/asp:Panel&gt; </code></pre>  <p>MultipleFileUpload.ascx.cs</p>  <pre><code>using System; using System.ComponentModel; using System.Text; using System.Data; using System.Configuration; using System.Collections; using System.Web; using System.Web.Security; using System.Web.UI; using System.Web.UI.WebControls; using System.Web.UI.WebControls.WebParts; using System.Web.UI.HtmlControls;   namespace CS {     //public partial class MultipleFileUpload : System.Web.UI.UserControl     //{     //    protected void Page_Load(object sender, EventArgs e)     //    {      //    }     //}      /// &lt;summary&gt;     /// This control is to upload multiple files.     /// &lt;/summary&gt;     public partial class MultipleFileUpload : System.Web.UI.UserControl     {         //This is Click event defenition for MultipleFileUpload control.         public event MultipleFileUploadClick Click;          /// &lt;summary&gt;         /// The no of visible rows to display.         /// &lt;/summary&gt;         private int _Rows = 6;         public int Rows         {             get { return _Rows; }             set { _Rows = value &lt; 6 ? 6 : value; }         }          /// &lt;summary&gt;         /// The no of maximukm files to upload.         /// &lt;/summary&gt;         private int _UpperLimit = 0;         public int UpperLimit         {             get { return _UpperLimit; }             set { _UpperLimit = value; }         }          /// &lt;summary&gt;         /// Methos for page load event.         /// &lt;/summary&gt;         /// &lt;param name="sender"&gt;Reference of the object that raises this event.&lt;/param&gt;         /// &lt;param name="e"&gt;Contains information regarding page load click event data.&lt;/param&gt;         protected void Page_Load(object sender, EventArgs e)         {             lblCaption.Text = _UpperLimit == 0 ? "Maximum Files: No Limit" : string.Format("Maximum Files: {0}", _UpperLimit);             pnlListBox.Attributes["style"] = "overflow:auto;";             pnlListBox.Height = Unit.Pixel(20 * _Rows - 1);             Page.ClientScript.RegisterStartupScript(typeof(Page), "MyScript", GetJavaScript());         }          /// &lt;summary&gt;         /// Methods for btnUpload Click event.          /// &lt;/summary&gt;         /// &lt;param name="sender"&gt;Reference of the object that raises this event.&lt;/param&gt;         /// &lt;param name="e"&gt;Contains information regarding button click event data.&lt;/param&gt;         protected void btnUpload_Click(object sender, EventArgs e)         {             // Fire the event.             Click(this, new FileCollectionEventArgs(this.Request));         }          /// &lt;summary&gt;         /// This method is used to generate javascript code for MultipleFileUpload control that execute at client side.         /// &lt;/summary&gt;         /// &lt;returns&gt;Javascript as a string object.&lt;/returns&gt;         private string GetJavaScript()         {              /// &lt;summary&gt;             /// 動態註冊javascript，如果頁面上有ScriptManager要透過Scriptmanager，每次Page重Load都要執行             /// 由於畫面上可能會有多個相同的UserControl，要避免執行的function相衝突，所以function Name也都設計成unique的方式             /// &lt;/summary&gt;              StringBuilder JavaScript = new StringBuilder();              //將javascript語法放入此屆接並註冊             JavaScript.Append("&lt;script type='text/javascript'&gt;");             JavaScript.Append("var Id = 0;\n");             JavaScript.AppendFormat("var MAX = {0};\n", _UpperLimit);             JavaScript.AppendFormat("var DivFiles = document.getElementById('{0}');\n", this.pnlFiles.ClientID);             JavaScript.AppendFormat("var DivListBox = document.getElementById('{0}');\n", this.pnlListBox.ClientID);             JavaScript.AppendFormat("var BtnAdd = document.getElementById('{0}');\n", this.btnAdd.ClientID);             JavaScript.AppendFormat("var btnClear = document.getElementById('{0}');\n", this.btnClear.ClientID);             JavaScript.Append("function Add()");             JavaScript.Append("{\n");             JavaScript.Append("var IpFile = GetTopFile();\n");             JavaScript.Append("if(IpFile == null || IpFile.value == null || IpFile.value.length == 0)\n");             JavaScript.Append("{\n");             JavaScript.Append("alert('Please select a file to add.');\n");             JavaScript.Append("return;\n");             JavaScript.Append("}\n");             JavaScript.Append("var NewIpFile = CreateFile();\n");             JavaScript.Append("DivFiles.insertBefore(NewIpFile,IpFile);\n");             JavaScript.Append("if(MAX != 0 &amp;&amp; GetTotalFiles() - 1 == MAX)\n");             JavaScript.Append("{\n");             JavaScript.Append("NewIpFile.disabled = true;\n");             JavaScript.Append("BtnAdd.disabled = true;\n");             JavaScript.Append("}\n");             JavaScript.Append("IpFile.style.display = 'none';\n");             JavaScript.Append("DivListBox.appendChild(CreateItem(IpFile));\n");             JavaScript.Append("}\n");             JavaScript.Append("function CreateFile()");             JavaScript.Append("{\n");             JavaScript.Append("var IpFile = document.createElement('input');\n");             JavaScript.Append("IpFile.id = IpFile.name = 'IpFile_' + Id++;\n");             JavaScript.Append("IpFile.type = 'file';\n");             JavaScript.Append("return IpFile;\n");             JavaScript.Append("}\n");             JavaScript.Append("function CreateItem(IpFile)\n");             JavaScript.Append("{\n");             JavaScript.Append("var Item = document.createElement('div');\n");             JavaScript.Append("Item.style.backgroundColor = '#ffffff';\n");             JavaScript.Append("Item.style.fontWeight = 'normal';\n");             JavaScript.Append("Item.style.textAlign = 'left';\n");             JavaScript.Append("Item.style.verticalAlign = 'middle'; \n");             JavaScript.Append("Item.style.cursor = 'default';\n");             JavaScript.Append("Item.style.height = 20 + 'px';\n");             JavaScript.Append("var Splits = IpFile.value.split('\\\\');\n");             JavaScript.Append("Item.innerHTML = Splits[Splits.length - 1] + '&amp;nbsp;';\n");             JavaScript.Append("Item.value = IpFile.id;\n");             JavaScript.Append("Item.title = IpFile.value;\n");             JavaScript.Append("var A = document.createElement('a');\n");             JavaScript.Append("A.innerHTML = 'Delete';\n");             JavaScript.Append("A.id = 'A_' + Id++;\n");             JavaScript.Append("A.href = '#';\n");             JavaScript.Append("A.style.color = 'blue';\n");             JavaScript.Append("A.onclick = function()\n");             JavaScript.Append("{\n");             JavaScript.Append("DivFiles.removeChild(document.getElementById(this.parentNode.value));\n");             JavaScript.Append("DivListBox.removeChild(this.parentNode);\n");             JavaScript.Append("if(MAX != 0 &amp;&amp; GetTotalFiles() - 1 &lt; MAX)\n");             JavaScript.Append("{\n");             JavaScript.Append("GetTopFile().disabled = false;\n");             JavaScript.Append("BtnAdd.disabled = false;\n");             JavaScript.Append("}\n");             JavaScript.Append("}\n");             JavaScript.Append("Item.appendChild(A);\n");             JavaScript.Append("Item.onmouseover = function()\n");             JavaScript.Append("{\n");             JavaScript.Append("Item.bgColor = Item.style.backgroundColor;\n");             JavaScript.Append("Item.fColor = Item.style.color;\n");             JavaScript.Append("Item.style.backgroundColor = '#C6790B';\n");             JavaScript.Append("Item.style.color = '#ffffff';\n");             JavaScript.Append("Item.style.fontWeight = 'bold';\n");             JavaScript.Append("}\n");             JavaScript.Append("Item.onmouseout = function()\n");             JavaScript.Append("{\n");             JavaScript.Append("Item.style.backgroundColor = Item.bgColor;\n");             JavaScript.Append("Item.style.color = Item.fColor;\n");             JavaScript.Append("Item.style.fontWeight = 'normal';\n");             JavaScript.Append("}\n");             JavaScript.Append("return Item;\n");             JavaScript.Append("}\n");             JavaScript.Append("function Clear()\n");             JavaScript.Append("{\n");             JavaScript.Append("DivListBox.innerHTML = '';\n");             JavaScript.Append("DivFiles.innerHTML = '';\n");             JavaScript.Append("DivFiles.appendChild(CreateFile());\n");             JavaScript.Append("BtnAdd.disabled = false;\n");             JavaScript.Append("}\n");             JavaScript.Append("function GetTopFile()\n");             JavaScript.Append("{\n");             JavaScript.Append("var Inputs = DivFiles.getElementsByTagName('input');\n");             JavaScript.Append("var IpFile = null;\n");             JavaScript.Append("for(var n = 0; n &lt; Inputs.length &amp;&amp; Inputs[n].type == 'file'; ++n)\n");             JavaScript.Append("{\n");             JavaScript.Append("IpFile = Inputs[n];\n");             JavaScript.Append("break;\n");             JavaScript.Append("}\n");             JavaScript.Append("return IpFile;\n");             JavaScript.Append("}\n");             JavaScript.Append("function GetTotalFiles()\n");             JavaScript.Append("{\n");             JavaScript.Append("var Inputs = DivFiles.getElementsByTagName('input');\n");             JavaScript.Append("var Counter = 0;\n");             JavaScript.Append("for(var n = 0; n &lt; Inputs.length &amp;&amp; Inputs[n].type == 'file'; ++n)\n");             JavaScript.Append("Counter++;\n");             JavaScript.Append("return Counter;\n");             JavaScript.Append("}\n");             JavaScript.Append("function GetTotalItems()\n");             JavaScript.Append("{\n");             JavaScript.Append("var Items = DivListBox.getElementsByTagName('div');\n");             JavaScript.Append("return Items.length;\n");             JavaScript.Append("}\n");             JavaScript.Append("function DisableTop()\n");             JavaScript.Append("{\n");             JavaScript.Append("if(GetTotalItems() == 0)\n");             JavaScript.Append("{\n");             JavaScript.Append("alert('Please browse at least one file to upload.');\n");             JavaScript.Append("return false;\n");             JavaScript.Append("}\n");             JavaScript.Append("GetTopFile().disabled = true;\n");             JavaScript.Append("return true;\n");             JavaScript.Append("}\n");             JavaScript.Append("&lt;/script&gt;");              return JavaScript.ToString();         }     }      /// &lt;summary&gt;     /// EventArgs class that has some readonly properties regarding posted files corresponding to MultipleFileUpload control.      /// &lt;/summary&gt;     public class FileCollectionEventArgs : EventArgs     {         private HttpRequest _HttpRequest;          public HttpFileCollection PostedFiles         {             get             {                 return _HttpRequest.Files;             }         }          public int Count         {             get { return _HttpRequest.Files.Count; }         }          public bool HasFiles         {             get { return _HttpRequest.Files.Count &gt; 0 ? true : false; }         }          public double TotalSize         {             get             {                 double Size = 0D;                 for (int n = 0; n &lt; _HttpRequest.Files.Count; ++n)                 {                     if (_HttpRequest.Files[n].ContentLength &lt; 0)                         continue;                     else                         Size += _HttpRequest.Files[n].ContentLength;                 }                  return Math.Round(Size / 1024D, 2);             }         }          public FileCollectionEventArgs(HttpRequest oHttpRequest)         {             _HttpRequest = oHttpRequest;         }     }      //Delegate that represents the Click event signature for MultipleFileUpload control.     public delegate void MultipleFileUploadClick(object sender, FileCollectionEventArgs e);   } </code></pre>  <p>Test01.aspx</p>  <pre><code>&lt;%@ Page Language="C#" AutoEventWireup="true" CodeBehind="Test01.aspx.cs" Inherits="CS.Test01" %&gt;  &lt;%@ Register Src="~/MultipleFileUpload.ascx" TagPrefix="uc1" TagName="MultipleFileUpload" %&gt;     &lt;!DOCTYPE html&gt;  &lt;html xmlns="http://www.w3.org/1999/xhtml"&gt; &lt;head runat="server"&gt;     &lt;title&gt;&lt;/title&gt; &lt;/head&gt; &lt;body&gt;     &lt;form id="form1" runat="server"&gt;     &lt;div&gt;             &lt;uc1:MultipleFileUpload ID="MultipleFileUpload1" OnClick="MultipleFileUpload1_Click"                 runat="server" UpperLimit="3" Rows="6" /&gt;             &lt;uc1:MultipleFileUpload ID="MultipleFileUpload2" OnClick="MultipleFileUpload2_Click"                 runat="server" UpperLimit="3" Rows="6" /&gt;     &lt;/div&gt;     &lt;/form&gt; &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>Test01.aspx.cs</p>  <pre><code>using System; using System.Collections.Generic; using System.Linq; using System.Web; using System.Web.UI; using System.Web.UI.WebControls;   namespace CS {     public partial class Test01 : System.Web.UI.Page     {         protected void Page_Load(object sender, EventArgs e)         {          }          protected void MultipleFileUpload1_Click(object sender, FileCollectionEventArgs e)         {             HttpFileCollection oHttpFileCollection = e.PostedFiles;             HttpPostedFile oHttpPostedFile = null;             if (e.HasFiles)             {                 for (int n = 0; n &lt; e.Count; n++)                 {                     oHttpPostedFile = oHttpFileCollection[n];                     if (oHttpPostedFile.ContentLength &lt;= 0)                         continue;                     else                         oHttpPostedFile.SaveAs(Server.MapPath("Uploads") + "\\" + System.IO.Path.GetFileName(oHttpPostedFile.FileName));                 }             }         }          protected void MultipleFileUpload2_Click(object sender, FileCollectionEventArgs e)         {             HttpFileCollection oHttpFileCollection = e.PostedFiles;             HttpPostedFile oHttpPostedFile = null;             if (e.HasFiles)             {                 for (int n = 0; n &lt; e.Count; n++)                 {                     oHttpPostedFile = oHttpFileCollection[n];                     if (oHttpPostedFile.ContentLength &lt;= 0)                         continue;                     else                         oHttpPostedFile.SaveAs(Server.MapPath("Uploads") + "\\" + System.IO.Path.GetFileName(oHttpPostedFile.FileName));                 }             }         }     } } </code></pre>