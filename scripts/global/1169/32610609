<p>I've a WPF application, with which I use Prism for the architecture.</p>  <p>I've something a little bit custom: I've one UserControl(a wizard), that can receive a <code>FrameworkElement</code>. This element is displayed within the wizard usercontrol with a <code>ContentPresenter</code>.</p>  <p>Basically, the view that will use this usercontrol will have such code:</p>  <pre><code>&lt;UserControl x:Class"My.Instance"    //skipping namespaces   mvvm:ViewModelLocator.AutoWireViewModel="True"&gt;     &lt;Wizard&gt;         &lt;Wizard.ContentElement&gt;             &lt;TextBlock Text="{Binding MyInstanceProperty}"/&gt;         &lt;/Wizard.ContentElement&gt;     &lt;/Wizard&gt; &lt;/UserControl&gt; </code></pre>  <p>Within the "Wizard" UserControl, I just have such thing:</p>  <pre><code>&lt;ContentControl Content="{Binding ContentElement}" Margin="10"/&gt; </code></pre>  <p>The context being the code behind of the usercontrol(set on the root <code>Grid</code>).</p>  <p>On runtime, I've the following error</p>  <blockquote>   <p>System.Windows.Data Error: 40 :  BindingExpression path error:   'MyInstanceProperty' property not found on 'object' ''Wizard'   (HashCode=29548405)'. BindingExpression:Path=MyInstanceProperty;   DataItem='WizardViewModel' (HashCode=29548405); target element is   'TextBlock' (Name=''); target property is 'Text' (type 'String')</p> </blockquote>  <p>So it seems that my TextBlock has its DataContext set on the Wizard UserControl, but not on the "My.Instance" owner.</p>  <p>I guess, it's because I host it within a ContentPresenter?</p>  <p>How can I avoid this?</p>