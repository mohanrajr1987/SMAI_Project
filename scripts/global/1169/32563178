<p>I'm trying to use a UserControl I did, but currently, I've an error:</p>  <blockquote>   <p>No parameterless constructor defined for this object</p> </blockquote>  <p>The thing is... There is only one constructor, and it has no parameters.</p>  <p>Here is some code:</p>  <pre><code>&lt;DockPanel x:Class="Xms.SomePackage.NewLicenseWizard"              xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"              xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"              xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"               xmlns:d="http://schemas.microsoft.com/expression/blend/2008"              xmlns:wizard="clr-namespace:my.wizard.namepsace;assembly=My.Common.Assembly"              mc:Ignorable="d"               d:DesignHeight="300" d:DesignWidth="300" LastChildFill="True"&gt;     &lt;wizard:Wizard&gt; &lt;-- Error is here --&gt;         &lt;wizard:WizardPage&gt;             &lt;wizard:WizardPage.ContentElement&gt;                 &lt;TextBlock&gt;Page one&lt;/TextBlock&gt;             &lt;/wizard:WizardPage.ContentElement&gt;         &lt;/wizard:WizardPage&gt;     &lt;/wizard:Wizard&gt; &lt;/DockPanel&gt; </code></pre>  <p>The <code>Wizard</code> UserControl looks like this:</p>  <pre><code>[ContentProperty("Pages")] public partial class Wizard : UserControl, IView {     #region Dependency Properties     //All the Dependencies Properties)]     #endregion      #region Public Properties     internal WizardViewModel ViewModel     {         get { return DataContext as WizardViewModel; }         set { DataContext = value; }     }     #endregion      #region Constructor     public Wizard()     {         Pages = new ObservableCollection&lt;WizardPage&gt;();         InitializeComponent();         ViewModelLocationProvider.AutoWireViewModelChanged(this);         //[Some other initialization]     }     #endregion } </code></pre>  <p>I just removed the DependencyProperties.</p>  <p>So why is it thinking that I've no parameterless constructor?</p>  <p>(at runtime I've no issues)</p>  <p><strong>EDIT</strong> Here is the ViewModel bound to the Wizard UserControl:</p>  <pre><code>internal class WizardViewModel : XmsViewModelBase {     #region public Properties     public InteractionRequest&lt;CloseWindowRequest&gt; CloseWindowRequest { get; private set; }     public DelegateCommand GoToPreviousPageCommand { get; set; }     public DelegateCommand GoToNextPageCommand { get; set; }     public DelegateCommand FinishCommand { get; set; }     public DelegateCommand CancelCommand { get; set; }     public ObservableCollection&lt;WizardPage&gt; Pages     {         get { return GetValue&lt;ObservableCollection&lt;WizardPage&gt;&gt;(); }         set { SetValue(value); }     }     public WizardPage CurrentPage     {         get { return GetValue&lt;WizardPage&gt;(); }         set         {             SetValue(value);             HandleCurrentPageChanged();         }     }     public Boolean IsLastPage     {         get { return GetValue&lt;Boolean&gt;(); }         set { SetValue(value); }     }     #endregion      #region Constructor     public WizardViewModel()     {         Pages = new ObservableCollection&lt;WizardPage&gt;();         //+Initialization of commands     }     #endregion      #region Private Methods       // All the methods related to the commands     #endregion } </code></pre>