<p>I am using youtube api in my .Net Application, and trying to initialize credentials according <a href="https://developers.google.com/identity/protocols/OAuth2#serviceaccount" rel="nofollow">server2server approach</a>. But, when my service to make content api related request, it returns an error says:</p>  <pre><code>Error: Google.Apis.Requests.RequestError Forbidden [403] Errors [     Message[Forbidden] Location[ - ] Reason[forbidden] Domain[global] ] </code></pre>  <p>Code sample: </p>  <pre><code>string serviceAccauntEmail = "123@developer.gserviceaccount.com"; var certificate = new X509Certificate2(@"sample.p12", "notasecret", X509KeyStorageFlags.Exportable);  _credential = new ServiceAccountCredential(     new ServiceAccountCredential.Initializer(serviceAccauntEmail)      {         Scopes = new List&lt;string&gt; { YouTubeService.Scope.Youtube,                                                      YouTubeService.Scope.YoutubeUpload,                                                      YouTubeService.Scope.YoutubeReadonly,                                                      YouTubeService.Scope.YoutubeForceSsl,                                                     YouTubePartnerService.Scope.YoutubePartner,                                                      YouTubePartnerService.Scope.YoutubepartnerContentOwnerReadonly,                                                      YouTubePartnerService.Scope.YoutubepartnerCannelAudit,                                                     YouTubeAnalyticsService.Scope.YtAnalyticsReadonly }}.FromCertificate(certificate));  private string GetOwnerPartner()         {             var youtubePartnerService = new YouTubePartnerService(new BaseClientService.Initializer()                         {                             HttpClientInitializer = _credential,                             ApplicationName = Assembly.GetExecutingAssembly().GetName().Name                         });              var listRequest = youtubePartnerService.ContentOwners.List();             listRequest.FetchMine = true;             var listResponce = listRequest.Execute();             var owner = listResponce.Items.Single();              return owner.Id;         } </code></pre>  <p>Unfortunately, I could not find any solution which can solve this problem. But, Youtube Data Api/Youtube Analytycs Api works fine for me. In the Google Developers Console I have proper rights to use Youtube Content ID Api.</p>  <p>How can I solve problem ?</p>