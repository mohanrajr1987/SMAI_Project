<p>I am working on a page ranking case study where the input is firstly the number of nodes, followed by the links for each page i to page j. The entire input has to be split according to lines and spaces (since the input is one big string consisting of multiple lines with integers). The tests I want to implement are: getNodeSize which simply returns the node, hasLink(integer i, integer j) of boolean whether or not (resp., true or false) there is a link from node i to node j (counting from 0 to nodes-1 ), and a method linkWeight(integer i, integer j) that returns the number of links between integer i and j. (after that there are some other methods but I will figure those out later) My code so far is:</p>  <pre><code>public class WebGraph {         static Scanner s = new Scanner(System.in);         static int nodes = s.nextInt();         double wg [][]= new double [nodes][nodes];         static ArrayList&lt;String&gt; array = new ArrayList&lt;String&gt;();         static int[][] counts = new int[nodes][nodes];             static int[] outDegree = new int[nodes];  public static WebGraph initFromScanner(Scanner s) {        do{         for(int i = 0; i&lt;nodes-1; i++){     }         String[] strArray = s.nextLine().split("\\s+");         int[] intArray = new int[strArray.length];         for(int i = 0; i &lt; strArray.length; i++) {         intArray[i] = Integer.parseInt(strArray[i]);         }            }while(s.hasNext());     return null; }  public Object getNodeSize() {     nodes = s.nextInt();     return nodes; } public boolean hasLink(int i, int j) {     for (int h = 0; h&lt;wg[i].length; h++) {         if(h==j){             return true;         }     }     return false; }  public void linkWeight(int a, int b) {     while (s.hasNext())  {         int i = s.nextInt();          int j = s.nextInt();          outDegree[i]++;          counts[i][j]++;  } } public List&lt;Integer&gt; successorsSortedList(int i) {     // TODO Auto-generated method stub     return null; } public int[][] asMatrix() {      return null; } public Set&lt;Integer&gt; successorsSortedSet(int i) {      return null; } } </code></pre>  <p>for the testcase:</p>  <pre><code>public class I5Exc4aTest {     WebGraph wg;     /**      * This will be invoked before each testcase.      * Ensure to copy/paste the content of file      * 'ext/web1.txt' to the Eclipse console.      * In L6, we will teach you how to automate that!      * @throws Exception      */     @Before     public void setUp() throws Exception {         Scanner s = new Scanner(System.in);         System.out.println("Please copy/paste the content of "                 + "file 'ext/web1.txt' to this console. "                 + "Then, press ENTER.");         wg = WebGraph.initFromScanner(s);     }  @Test public void testGetNodeSize() {     assertEquals(50, wg.getNodeSize()); } @Test public void testHasLink1() {     assertFalse(wg.hasLink(0, 0)); } @Test public void testHasLink2() {     assertTrue(wg.hasLink(0, 7)); } @Test public void testLinkWeight1() {     assertEquals(1, wg.linkWeight(0, 7)); } @Test public void testLinkWeight2() {     assertEquals(1, wg.linkWeight(0, 34)); } @Test public void testLinkWeight3() {     assertEquals(2, wg.linkWeight(1, 22)); } @Test public void testSuccessorsSortedList() {     List&lt;Integer&gt; a = wg.successorsSortedList(1);     List&lt;Integer&gt; expected = Arrays.asList(new Integer(14),             new Integer(22), new Integer(22), new Integer(45));     assertTrue("Expected 'a' and 'expected' to be equal."+             "\n 'a' = "+a+             "\n 'expected' = "+expected,             expected.equals(a)); } @Test public void testSuccessorsSortedSet() {     Set&lt;Integer&gt; a = wg.successorsSortedSet(1);     Set&lt;Integer&gt; expected = new java.util.TreeSet&lt;Integer&gt;(             Arrays.asList(new Integer(14), new Integer(22), new Integer(45)));     assertTrue("Expected 'a' and 'expected' to be equal."+             "\n 'a' = "+a+             "\n 'expected' = "+expected,             expected.equals(a)); } @Test public void testAsMatrix1() {     int[][] copy= wg.asMatrix();     assertArrayEquals(new int[]{0, 1, 0, 1, 0, 0}, copy[0]);     assertArrayEquals(new int[]{1, 0, 1, 0, 0, 1}, copy[1]);     assertArrayEquals(new int[]{0, 1, 2, 0, 1, 0}, copy[2]);     assertArrayEquals(new int[]{1, 2, 0, 1, 0, 0}, copy[3]);     assertArrayEquals(new int[]{1, 1, 0, 0, 0, 1}, copy[4]);     assertArrayEquals(new int[]{0, 1, 0, 2, 0, 0}, copy[5]); } } </code></pre>  <p>Any help on any of the methods would be greatly appreciated since now none of my test cases work.</p>  <p>EDIT: I am sorry for the unclear parts, this is the complete assignment:</p>  <p>"1.Provide a class WebGraph with an attribute w, and a method initFromScanner(Scanner s) that initializes itself by reading from the command line, based on the following format:</p>  <p>(a) The first input value is of type integer and represents the number of nodes in the graph. In the following, we call the value of that integer N,</p>  <p>(b) The next N lines always start by an integer i representing a source node's ID and then a (potentially empty) sequence of integers j that denote links from node i to node j.</p>  <p>An example corresponding to this structure is listed below. This example encompasses 5 nodes, where there a link from node 0 to node 1, a link from node 0 to node 2, but no link from node 0 to itself nor to nodes 3 or 4.</p>  <p>5</p>  <p>0 1 2</p>  <p>1 1 2 3</p>  <p>2 2 2 2 3 1</p>  <p>3</p>  <p>4 3 0 0</p>  <ol start="2"> <li><p>Provide a method getNodeSize that returns the value of N,</p></li> <li><p>Provide a method hasLink(integer i, integer j) of type boolean that returns whether or not (resp., true or false) there is a link from node i to node j (counting from 0 to N-1 ),</p></li> <li><p>Provide a method linkWeight(integer i, integer j) of type integer that returns the number of links from node i to node j (counting from 0 to N-1 ),</p></li> <li>Provide a method successorsSortedSet(integer i) of type Set which represents the set of successor nodes according to the outgoing links of node i, ordered by node ID.</li> <li>Provide a method successorsSortedList(integer i) of type List which represents a sequence of successor nodes according to the outgoing links of node i, ordered by node ID.</li> <li>Provide a method asMatrix() of type integer[][] that returns the ma- trix representation described above. Ensure that you do not allow updates to the internal data of your object!"</li> </ol>