<p>My company is considering submitting a traditional desktop application to Windows Store, targeting new Windows 10 OS.</p>  <p>It's a native Windows build, an archiver app that uses 7z.dll (SevenZip library).</p>  <p>It's a typical GUI application written in C++, and the installation setup is created using Inno Setup.</p>  <p>The main question is whether it's suitable for the Windows Store. And it involves the following sub-questions:</p>  <ul> <li><p>Does the store accept traditional Windows apps, not specifically designed for the Store format or compatibility with Windows RT? Can it use traditional Windows API?</p></li> <li><p>Does it allow applications that use native DLLs (7z.dll in our case)?</p></li> <li><p>Does it require specifically crafted installation package in order to be admitted to the Store?</p></li> <li><p>Can a Windows Store desktop application freely access the file system to be able to create new archives and decompress existing archives, or it runs in some kind of sandboxed environment?</p></li> </ul>  <p>We've already tried Windows App Certification Kit, but it doesn't give the complete picture.</p>  <p>I plan to set up and award a bounty on this SO question. </p>