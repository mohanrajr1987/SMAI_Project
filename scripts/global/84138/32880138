<p>Given this <code>DataTemplate</code>:</p>  <pre><code>&lt;DataTemplate x:DataType="Color"&gt;     ... &lt;/DataTemplate&gt; </code></pre>  <p>I get the following error:</p>  <blockquote>   <p>The as operator must be used with a reference type or nullable type ('Color' is a non-nullable value type)</p> </blockquote>  <p>When you follow the error, it takes you to auto-generated code for that view which uses the <code>as</code> operator.</p>  <pre><code>public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args) {         global::Windows.UI.Color data = args.NewValue as global::Windows.UI.Color;         if (args.NewValue != null &amp;&amp; data == null)         {         throw new global::System.ArgumentException("Incorrect type passed into template. Based on the x:DataType global::Windows.UI.Color was expected.");         }         this.SetDataRoot(data);         this.Update(); } </code></pre>  <p>I know that <code>{x:Bind}</code> is new, but just in case, does anyone know how to configure it to allow value types, or at least use direct casting?</p>