<p>I'm writing a Windows 10 App. I know that I can use </p>  <p><code>recognizer = new SpeechRecognizer(selectedLanguage);</code></p>  <p>to achieve this goal and it means that I need to Dispose it before creating a new instance. However, the <strong>state</strong> of SpeechRecognizer will always be <strong>Idle</strong> after calling </p>  <p><code>var operation = recognizer.RecognizeWithUIAsync();</code></p>  <p>over two times so that the SpeechRecognizer no longer can work. The test code is shown below</p>  <pre><code>    //You need a button with Click="Recognize_Click" in XAML     private async void Recognize_Click(object sender, RoutedEventArgs e)      {         try         {     #if DEBUG             recognizer.Constraints.Clear();   //recognizer is created in OnNavigatedTo method.             recognizer.StateChanged -= Recognizer_StateChanged;             recognizer.Dispose();   //Commenting this line or not does not affect the result.             recognizer = new SpeechRecognizer(new Language("en-US"));             recognizer.StateChanged += Recognizer_StateChanged;     #endif              ISpeechRecognitionConstraint constraint;             var list = new List&lt;string&gt;();             list.Add("This is a test.");             constraint = new SpeechRecognitionListConstraint(list);              recognizer.Constraints.Clear();             recognizer.Constraints.Add(constraint);              //* [2015-09-23 23:16] Initialize UI (2)             var compilationResult = await recognizer.CompileConstraintsAsync();             if (++ith &gt; 2) //This 'if' is just used to check whether recognizer.RecognizeWithUIAsync cause the problem. You can remove it.             {                 var operation = recognizer.RecognizeWithUIAsync();                 var result = await operation;                 tbRecognize.Text = result.Text;             }         }         catch (Exception exc)         {             Debug.WriteLine(exc.Message); //Never be executed.         }     }      private void Recognizer_StateChanged(SpeechRecognizer sender, SpeechRecognizerStateChangedEventArgs args)     {         Debug.WriteLine(args.State); //Normal: Capturing-&gt;SoundStarted-&gt;SpeechDetected-&gt;SoundEnded-&gt;Processing-&gt;Idle.         //Abnormal: Idle.....     } </code></pre>  <p>If I took out the <code>#if DEBUG</code> part, it worked fine. So. As my question. Is it possible for me to set the language of an instance of SpeechRecognizer since creating it too many times will cause a problem? </p>  <p>Besides, do you have any idea about the problem generated by the code above? Thanks for your answering. </p>