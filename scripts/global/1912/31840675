<p>I've been banging my head against the wall trying to figure this error out, so I thought I'd post it here and see if anyone has run into something similar.</p>  <p>I recently learned that I had to downgrade the REST service I have been building from Spring 4.0 to 3.0. I updated my <code>pom.xml</code> files, made a small handful of changes, and had no problem getting my unit tests to run fine. So I built the war and tried deploying it to a Tomcat server to do a quick functional test. Then everything broke.</p>  <p>The error I am getting is: </p>  <blockquote>   <p>org.xml.sax.SAXParseException: schema_reference.4: Failed to read   schema document   '<a href="http://www.springframework.org/schema/context/spring-context-3.2.xsd" rel="nofollow">http://www.springframework.org/schema/context/spring-context-3.2.xsd</a>',   because 1) could not find the document; 2) the document could not be   read; 3) the root element of the document is not .</p> </blockquote>  <p>Further into the stack trace are these lines:</p>  <blockquote>   <p>ERROR: org.springframework.web.servlet.DispatcherServlet - Context   initialization failed   org.springframework.beans.factory.parsing.BeanDefinitionParsingException:   Configuration problem: Failed to import bean definitions from URL   location [classpath*:/service-config.xml] Offending resource:   ServletContext resource   [/WEB-INF/spring/appServlet/servlet-context.xml]; nested exception is   org.springframework.beans.factory.xml.XmlBeanDefinitionStoreException:   Line 11 in XML document from URL   [jar:file:/D:/Downloads/apache-tomcat-7.0.62/apache-tomcat-7.0.62/lib/service-1.0-SNAPSHOT.jar!/service-config.xml]   is invalid; nested exception is org.xml.sax.SAXParseException:   cvc-complex-type.2.4.c: The matching wildcard is strict, but no   declaration can be found for element 'context:component-scan'.</p> </blockquote>  <p>I've got two projects, one for the service layer and one for the web layer. The web layer has a <code>servlet-context.xml</code> file that imports the service layer project as a resource, and it looks to me like the issue is caused when the <code>service-config.xml</code> from the service layer is read. </p>  <p>servlet-context.xml</p>  <pre><code>&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;beans:beans xmlns="http://www.springframework.org/schema/mvc"     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"      xmlns:beans="http://www.springframework.org/schema/beans"     xmlns:context="http://www.springframework.org/schema/context"     xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd         http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd         http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd"&gt;     &lt;beans:import resource="classpath*:/service-config.xml" /&gt;     &lt;annotation-driven /&gt;     &lt;resources mapping="/resources/**" location="/resources/" /&gt;     &lt;context:component-scan base-package="com.project" /&gt; </code></pre>  <p></p>  <p>service-config.xml</p>  <pre><code>&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;beans xmlns="http://www.springframework.org/schema/beans"     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"      xmlns:aop="http://www.springframework.org/schema/aop"     xmlns:context="http://www.springframework.org/schema/context"      xmlns:jee="http://www.springframework.org/schema/jee"     xmlns:util="http://www.springframework.org/schema/util"     xmlns:jdbc="http://www.springframework.org/schema/jdbc"     xsi:schemaLocation=         "http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd         http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd         http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd               http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd         http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd         http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd"&gt;       &lt;context:annotation-config /&gt;      &lt;util:properties id="responseCodesAndMessages" location="classpath:/responseCodesAndMessages.properties" /&gt;     &lt;util:properties id="mockDataOutput" location="classpath:/mock-output-data.properties" /&gt;       &lt;context:component-scan base-package="com.project" /&gt; </code></pre>  <p></p>  <p>The thing that is confusing me is that the error mentions not being able to find the schema <code>http://www.springframework.org/schema/context/spring-context-3.2.xsd</code>, but I am not specifying that schema anywhere. I checked the schema file in the spring-context jar and <code>http://www.springframework.org/schema/context/spring-context.xsd</code> should be mapped to <code>http://www.springframework.org/schema/context/spring-context-3.0.xsd</code>. </p>  <p>Another weird point is that I have a test file I was using in the web layer project to make sure that all of my beans were getting configured correctly. In it I have the line </p>  <pre><code>ApplicationContext context = new ClassPathXmlApplicationContext("file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml"); </code></pre>  <p>When I try to run that test file it has no problem loading up the <code>servlet-context.xml</code>, which successfully loads the <code>service-config.xml</code> with all the right schemas. So I am at a bit of a loss on what the actual problem is. Appreciate any light anyone can shed on this</p>