<p>I am having a very specific issue when trying to get a project deployed to Websphere that has multiple WARs packaged inside a single EAR. The first WAR is a SOAP-based web service while the second is a REST-based service. Besides sharing a common build pom.xml neither of the two projects depend on each other.</p>  <p>The problem I am running into is based on using the Jackson library in the REST service to handle JSON objects. For whatever reason the version of Jackson Websphere uses by default throws a <code>NoSuchMethod</code> error. This is apparently a common issue and switching the app to use a parent-last class loader solves it, afterwards the REST service works fine.</p>  <p>Unfortunately, the SOAP service does not work when using a parent-last class loader, throwing an error when trying to load one of the beans. I've spent the last few days trying to get the two apps to play nice but haven't succeeded yet.</p>  <p>An ideal solution to the problem would be to get the REST service in general, and Jackson in particular, to work with a parent-first class loader. A less ideal solution would be altering the SOAP service to work with a parent-last loader. Untenable solutions include splitting the apps into separate packages, or using something other than Jackson to handle the JSON objects.</p>  <p>Due to constraints at my company, I can only use versions of Jackson from 1.9.13 and below (currently using 1.9.9), and Websphere Application Server v 8.0.0.8</p>