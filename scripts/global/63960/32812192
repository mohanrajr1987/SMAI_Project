<p>I'm trying to take the result of an Eloquent query, and output its results as a JSON response.  My application uses Slim and Twig to generate HTML responses, however I am uncertain if I should be using Twig to generate JSON as well.  </p>  <p>I know that I can use PHP's native <code>echo json_encode(...)</code> function, but this creates a potential XSS vulnerability if my database contains HTML entities.  Twig is supposed to be in charge of escaping my output appropriately.</p>  <p>I am aware of <a href="http://stackoverflow.com/questions/21396530/using-twig-to-generate-json">this question</a>, however it doesn't seem to provide a relevant answer.  I am also aware of the <code>json_encode</code> filter, but when I do this:</p>  <p><em>/api/users-json.twig</em></p>  <pre><code>{     "rows"  : {{rows | json_encode}} } </code></pre>  <p><em>/api/users</em> controller:</p>  <pre><code>// Simulate database query results $result = [     "rows" =&gt; [         [             "user_name" =&gt; "alex",             "message" =&gt; "grawr!"             ],         [             "user_name" =&gt; "h4xx0r",             "message" =&gt; "&lt;script&gt;alert('hello, I can execute JS on your website!');&lt;/script&gt;"             ]                     ] ];  $app-&gt;response-&gt;headers-&gt;set('Content-Type', 'application/json; charset=utf-8'); $app-&gt;render("api/users-json.twig", $result); </code></pre>  <p>The response looks like:</p>  <pre><code>{     "rows"  : [{&amp;quot;user_name&amp;quot;:&amp;quot;alex&amp;quot;,&amp;quot;message&amp;quot;:&amp;quot;grawr!&amp;quot;},{&amp;quot;user_name&amp;quot;:&amp;quot;h4xx0r&amp;quot;,&amp;quot;message&amp;quot;:&amp;quot;&amp;lt;script&amp;gt;alert(&amp;#039;hello, I can execute JS on your website!&amp;#039;);&amp;lt;\/script&amp;gt;&amp;quot;}] } </code></pre>  <p>Which is not interpretable client-side without further processing.  According to my browser, the content-type is correctly set to <code>application/json</code>.</p>  <p>I can, of course, do: <em>/api/users-json.twig</em></p>  <pre><code>{     "rows"  : {{rows | json_encode | raw}} } </code></pre>  <p>Which gives me the response:</p>  <pre><code>{     "rows"  : [{"user_name":"alex","message":"grawr!"},{"user_name":"h4xx0r","message":"&lt;script&gt;alert('hello, I can execute JS on your website!');&lt;\/script&gt;"}] } </code></pre>  <p>But if I were to render h4xx0r's message in client-side code, I am open to an XSS attack.</p>  <p>The output that I believe would be "correct" would be:</p>  <pre><code>{     "rows"  : [{"user_name":"alex","message":"grawr!"},{"user_name":"h4xx0r","message":"&amp;lt;script&amp;gt;alert(&amp;#039;hello, I can execute JS on your website!&amp;#039;);&amp;lt;\/script&amp;gt;"}] } </code></pre>  <p>Note that h4xx0r's "message" is now escaped, but the structure of the response as a whole is preserved as valid JSON.</p>  <p>I could, of course, loop through every row and manually <code>htmlspecialchars</code> each value, and then either <code>echo json_encode</code> or pass it off to Twig.  But this seems like it should be Twig's responsibility!</p>  <p>Edit: It would seem that PHP's <code>filter_var_array</code>, combined with <code>json_encode</code>, is a reasonable alternative to using Twig:</p>  <pre><code>$app-&gt;response-&gt;headers-&gt;set('Content-Type', 'application/json; charset=utf-8'); echo json_encode(filter_var_array($result, FILTER_SANITIZE_SPECIAL_CHARS)); </code></pre>  <p>Produces:</p>  <pre><code>{"rows":[{"user_name":"alex","message":"grawr!"},{"user_name":"h4xx0r","message":"&amp;#60;script&amp;#62;alert(&amp;#39;hello, I can execute JS on your website!&amp;#39;);&amp;#60;\/script&amp;#62;"}]} </code></pre>  <p>But I am still not sure if this is something that "should" be done with Twig instead.</p>  <p>Is there a way to do this with Slim and Twig at all?  Or, am I on completely the wrong track, and should it be the responsibility of my client-side (JS) code to properly escape content before rendering?</p>