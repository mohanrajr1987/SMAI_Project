<p>Seems that the twig getTimestamp() function is not fully compatible with PHP 5.5.12 (windows/linux) and throws an exception when the file is not available. </p>  <pre><code>public function getTimestamp($key) {     return (int) @filemtime($key); } </code></pre>  <p>We are using Twig 1.22.2 without the rest of symfony. I was checking for the requested key but this file does not exists. Shouldnt twig check if the file exists <strong>before doing a filemtime()</strong> call? Otherwise the cache never gets populated. We were configuring twig the following:</p>  <pre><code>$this-&gt;loader = new \Twig_Loader_Filesystem($options['TEMPLATE_DIR']);     $this-&gt;twig = new \Twig_Environment($this-&gt;loader, array(         "auto_reload" =&gt;  true         , "cache"     =&gt;  'cache/twig'     )); </code></pre>  <p>Like this the cache files are never created. We have to disable the caching to make it working.  </p>  <pre><code>"cache" =&gt; false </code></pre>  <p>For a production environment this is not working</p>  <p><strong>Another Solution was the following:</strong></p>  <pre><code>public function getTimestamp($key) {     **return false;**     return (int) @filemtime($key); } </code></pre>  <p><strong>and then reverting back to the original source</strong>. Then the cache files were written to the disk and everything worked like a charm.</p>  <p>I guess something changed in php internals and the twig team needs to adapt to that change. By default twig always expects the file to be there which is for every application on the first hit not the case!</p>