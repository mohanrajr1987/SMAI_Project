<p>I want to build a hierarchy database to get real information from another source. So it is complex to build the correct database with only <code>child_id</code> and <code>parent_id</code> to linking them.</p>  <p>I've researched mostly the ways to build it. Im using MySQL and I think <code>Closure Table Model</code> is the best choice.</p>  <p>Here is the code aggregated from many sources:</p>  <pre><code>/* CREATE DATA TABLE */ DROP TABLE IF EXISTS `user_data`; CREATE TABLE `user_data` (     `id` INT NOT NULL AUTO_INCREMENT,     `user_id` INT NOT NULL,     `fullname` VARCHAR(255),     `parent_id` INT,     PRIMARY KEY (`user_id`) ) ENGINE=MyISAM;  /* INSERT DATA */ INSERT INTO `user_data` (user_id,fullname,parent_id) VALUES (008,'A',009); INSERT INTO `user_data` (user_id,fullname,parent_id) VALUES (012,'B',008); INSERT INTO `user_data` (user_id,fullname,parent_id) VALUES (007,'C',008); INSERT INTO `user_data` (user_id,fullname,parent_id) VALUES (011,'D',012); INSERT INTO `user_data` (user_id,fullname,parent_id) VALUES (023,'E',011); INSERT INTO `user_data` (user_id,fullname,parent_id) VALUES (021,'F',011);  /* CREATE CLOSURE TABLE */ DROP TABLE IF EXISTS user_closure; CREATE TABLE `user_closure` (     `id` int NOT NULL AUTO_INCREMENT,     `user_id` int(11) NOT NULL,     `access_user_id` int(11) NOT NULL DEFAULT '0',     `deep_level` tinyint(3) unsigned NOT NULL DEFAULT '0',     PRIMARY KEY (`user_id`,`access_user_id`),     KEY `tree_iuad` (`id`,`user_id`,`access_user_id`,`deep_level`),     KEY `tree_ad` (`access_user_id`,`deep_level`),     CONSTRAINT FOREIGN KEY (`user_id`)         REFERENCES `user_data` (`user_id`),     CONSTRAINT FOREIGN KEY (`access_user_id`)         REFERENCES `user_data` (`user_id`) ) ENGINE=InnoDB;  INSERT INTO `user_closure` VALUES  (008,008,0),(008,012,1),(008,007,1),(008,011,2),(008,023,3),(008,021,3), (012,012,0),(012,011,1),(012,023,2),(012,021,2), (007,007,0), (011,011,0),(011,023,1),(011,021,1), (023,023,0), (021,021,0); </code></pre>  <p>The tree:</p>  <pre><code>                          [008-A]                           /     \                     [012-B]     [007-C]                     /               [011-D]               /     \         [023-E]     [021-F] </code></pre>  <p>Adding a new node:</p>  <pre><code>/* ADD NEW NODE [036] */ INSERT INTO `user_data` (`user_id`, `fullname`, `parent_id`) VALUES (036, 'H', 029); INSERT INTO `user_closure` (`user_id`, `access_user_id`)     SELECT `user_id`, 036 FROM `user_closure`     WHERE `access_user_id` = 029     UNION ALL SELECT 036, 036 ON DUPLICATE KEY UPDATE user_id=VALUES(user_id),     access_user_id=VALUES(access_user_id); </code></pre>  <p>The tree is:</p>  <pre><code>                          [008-A]                           /     \                     [012-B]     [007-C]                     /               [011-D]               /     \         [023-E]     [021-F]          [036-H] &lt;-- Add new Node (unknown parent) </code></pre>  <p>Code using add a new node [029]:</p>  <pre><code>/* ADD NEW NODE [029] */ INSERT INTO `user_data` (`user_id`, `fullname`, `parent_id`) VALUES (029, 'G', 023); INSERT INTO `user_closure` (`user_id`, `access_user_id`)     SELECT `user_id`, 029 FROM `user_closure`     WHERE `access_user_id` = 023     UNION ALL SELECT 029, 029 ON DUPLICATE KEY UPDATE user_id=VALUES(user_id), access_user_id=VALUES(access_user_id); </code></pre>  <p>The tree in case:</p>  <pre><code>                                  [008-A]                                   /     \                             [012-B]     [007-C]                             /                       [011-D]                       /     \                 [023-E]     [021-F]                 /           [029-G] &lt;-- Add later (create connect between [036] and [023])           /     [036-H] &lt;-- Add first </code></pre>  <p><a href="http://i.stack.imgur.com/3rsDK.png" rel="nofollow"><img src="http://i.stack.imgur.com/3rsDK.png" alt="enter image description here"></a></p>  <p>If i added the descendant before the ancestor, are there a possible way to insert all the <code>links</code> (red arrows in image) to make new and old nodes into correct place?</p>