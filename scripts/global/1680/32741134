<p>I am writing a groovy code, when I hit the error reading like below:</p>  <pre><code>Exception in thread "main" groovy.lang.MissingMethodException: No signature of method: java.lang.Boolean.getAt() is applicable for argument types: (java.lang.Integer) values: [0] Possible solutions: getAt(java.lang.String), putAt(java.lang.String, java.lang.Object), wait(), grep(), getClass(), wait(long)     at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.unwrap(ScriptBytecodeAdapter.java:55)     at org.codehaus.groovy.runtime.callsite.PojoMetaClassSite.call(PojoMetaClassSite.java:46)     at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)     at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)     at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)     at myPackage.myClass.myMethod_closure3_closure5.doCall(line:xyz)     :     : </code></pre>  <p>So as you can see on the last line, my method have two nested closures. The line number xyz is doing something like this:</p>  <pre><code>(rvar1,rvar2) = methodThatReturnsMultipleValues(param1,param2) </code></pre>  <p>I debugged the code and found that <code>methodThatReturnsMultipleValues()</code> returns <code>[false,false]</code>, something like this:</p>  <pre><code>methodThatReturnsMultipleValues(def param1,def param2) {     //...     return [false,false] }    </code></pre>  <p>However when I step out of the method while debugging the line number xyz gives above exception. According to groovy, this should assign both <code>rvar1</code> and <code>rvar2</code> to <code>false</code>. I tried to replicate the exception on smaller code like this:</p>  <pre><code>class TempClass {     static main(def args)     {          boolean bvar1 = false          boolean bvar2 = false          (bvar1, bvar2) = returnMultipleValues()          println bvar1          println bvar2     }      static private returnMultipleValues()     {         boolean a = false         boolean b = false         return [a, b]     } } </code></pre>  <p>However, unfortunately above code works perfect and correctly prints <code>false</code> twice. So am not able to replicate the issue on small code. Surprisingly, when I change the line xyz to:</p>  <pre><code>def a = methodThatReturnsMultipleValues(param1,param2) </code></pre>  <p><code>a</code> gets assigned with <code>true</code> and continues in desired manner, given that I am testing for scenarios in which <code>rvar1</code> and <code>rvar2</code> will not be used. Its only when I change back the line xyz to </p>  <pre><code>(rvar1,rvar2) = methodThatReturnsMultipleValues(param1,param2) </code></pre>  <p>the error pops up again, failing scenarios where <code>rvar1</code> and <code>rvar2</code> will be used.</p>  <p>I am just lost with direction where should I be looking for. Especially that <code>java.lang.Boolean.getAt()</code> is not making me much sense.</p>  <p>PS: I know only explaining the behavior of code as I observe might not be completely helpful to resolve my query, and I should be giving the full code so that others can also observe more stuff, but honestly my code is not easy to make standalone, I mean directly callable from <code>main()</code>. So let me know if I should take extra effort to really make it callable from <code>main()</code> and really replicate the issue on as small code as possible. But before that I will really appreciate any blind guesses towards resolving this.</p>