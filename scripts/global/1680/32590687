<p>I'm trying to understand how can I caching a selection in a javascript object.</p>  <p>The problem is that everytime I try to call the selection by using this keyword the handle can't see it.</p>  <p>I used a closure to resolve that, but I'd like to know if there is a more elegant way to solve the issue.</p>  <p>For instance:</p>  <pre><code>var helloWorld = function() { return { text: "hello world", element: $("*.helloworld"), clickable : function() {return  this.element.click(this.changeText())}, changeText:  function(){                        this.element.text(this.text);                       },     } }();  helloWorld.clickable(); </code></pre>  <p>Otherwise in this way everything works:</p>  <pre><code>var helloWorld = function() { return { text: "hello world", element: $("*.helloworld"), clickable : function() {return  this.element.click(this.changeText(this.element, this.text))}, changeText: function(element, text){                  return function(){                        element.text(text);                               };          },     } }();  helloWorld.clickable(); </code></pre>  <p>Am I forced to use the closure to pass the element and text parameter to the handle? Or there is another way to solve the problem. I tried to put the handle in another proprierty of the object but it can't see the element and text variable.</p>  <p>I read the documentation about to be aware of anonymous function, but there, ther eis only about put function that doesn't talk to external variable and funcion.</p>  <p>Can anyone help me?</p>