<p>I'm using XCode Beta 7.1</p>  <p>I'm using Alamofire to make a call to a web service to retrieve the data from the server and passing a closure (completionHandler) to handle the response and populate it in a <code>UIPickerView</code>. Below is the relevant code causing the error (Commenting the line indicated in the code makes the error disappear).</p>  <pre><code>// Web service public static func getStates(completionHandler: (request: NSURLRequest?, response: NSHTTPURLResponse?, result: Alamofire.Result) -&gt; ()) {     // Request     let url = SERVER_API_URL + METHOD_GET_STATES;     let method:Alamofire.Method = Alamofire.Method.POST;      // Parameters     var params = [String:String]();     params["language_code"] = CommonHelperClass.LANGUAGE_CODE_ENGLISH;     params["country_name"] = CommonHelperClass.COUNTRY_NAME_UNITED_STATES;      // Execuete request     Alamofire.request(method, url, parameters: params).responseString     {         request, response, result in          // Line causing the error         completionHandler(request: request, response: response, result: result);     }; } </code></pre>  <p>If I move all the code to the class making the call (instead of passing the completionHandler), it works perfectly fine, but when I do it this way, it gives me the below error. I searched around and it seemed to have something to do with the forced unwrapped values being passed in function headers, but I don't have any of that here. Any help would be kindly appreciated.</p>  <p>Error: <code>Command /Applications/Xcode-beta.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swiftc failed with exit code 1</code></p>  <p>Screenshot of the whole error: <a href="http://prntscr.com/8ghi28" rel="nofollow">http://prntscr.com/8ghi28</a></p>  <p>Here is completionHandler body for the sake of completion (This part is working fine)</p>  <pre><code>MyHelperClass.getStates()     {         (request, response, result) in          // Success         if (response!.statusCode == 200)         {             // Result             var json:JSON = nil;             if let dataValue:NSData = (result.value! as String).dataUsingEncoding(NSUTF8StringEncoding)             {                 json = JSON(data:dataValue)             }              // Data             for item in json["data"].array!             {                 self.listItems.append(item["name"].string!);             }              // Refresh the picker             self.pickerviewStates.reloadAllComponents();         }         // Error         else         {             print("Request has failed");         }        } </code></pre>