<p>I've read the manual, and I'm probably being a complete idiot somewhere, but why does the code still show three symbols in the library? </p>  <p>I'm expecting methods from classes Y and Z to appear in the .o files but not be present in the liba.a.  Is that wrong?</p>  <pre><code>----- a.h -----  #define API __attribute__((visibility("default"))) #define HIDDEN __attribute__((visibility("hidden")))  class X {     public:         bool function(); };   class API Y {     public:         bool function(); };  class HIDDEN Z {     public:         bool function(); };   ----- a.cpp ----- #include "a.h"  bool X::function() {     return true; }  bool Y::function() {     return true; }  bool Z::function() {     return true; } </code></pre>  <p>Then build and run: </p>  <pre><code> $ make clang -O3 -std=c++11 -fvisibility=hidden -c a.cpp -o a.o ar crv liba.a a.o a - a.o nm liba.a  liba.a(a.o): 0000000000000000 T __ZN1X8functionEv 0000000000000010 T __ZN1Y8functionEv 0000000000000020 T __ZN1Z8functionEv </code></pre>