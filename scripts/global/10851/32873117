<p>So I have the following piece of code that works perfectly under VS2012.  It detects whether a global function 'Bar' exists.  </p>  <p>Sadly this fails to compile under clang 3.5 with this error:</p>  <pre><code>error : use of undeclared identifier 'Bar'   template &lt;typename T&gt; static int Foo( decltype( Bar )* ) { return 2; }                                                               ^  </code></pre>  <p>Does clang support this kind of thing and if so what is the correct syntax?</p>  <p>Thanks</p>  <pre><code>template &lt;typename T&gt; static int Foo( decltype( Bar )* ) { return 2; }       template &lt;typename T&gt; static int Foo(...) { return 1; }   void main() {     printf("%d", Foo&lt;int&gt;(nullptr)); } </code></pre>