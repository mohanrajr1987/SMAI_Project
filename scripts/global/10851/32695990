<p>I have the following code:</p>  <pre><code>int main(int argc, char** argv) {     const int64_t N = 10000000000;     float* data = new float[N];     int64_t i;      omp_set_dynamic(0);     omp_set_num_threads(4);      #pragma omp parallel for     for(i = 0; i &lt; N; ++i)         data[i] = i*i;      return 0; } </code></pre>  <p>If I compile it with g++ then during runtime the code uses 4 cores:</p>  <pre><code>g++ -fopenmp -std=c++11 main.cpp </code></pre>  <p>If I compile it with clang++3.7 then during runtime  the code uses only 1 core:</p>  <pre><code>clang++-3.7 -fopenmp -std=c++11 main.cpp </code></pre>  <p>In both cases I have set:</p>  <pre><code>OMP_NUM_THREADS=4 </code></pre>  <p>Both compilers have been installed from the Debian Testing repository:</p>  <pre><code>sudo apt-get install g++-5 sudo apt-get install clang-3.7 </code></pre>  <p>So, any ideas why the clang only uses one core? Thanks in advance.</p>