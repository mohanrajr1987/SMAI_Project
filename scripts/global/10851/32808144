<p>I am trying to cross-compile clang/llvm 3.7.0 for iOS8.x on ipad mini 3, with the help of the following :</p>  <p><a href="http://stackoverflow.com/questions/23946851/how-to-cross-compile-clang-llvm-for-ios">How to cross-compile clang/llvm for iOS?</a></p>  <p>I have tried this :</p>  <pre><code>curl -O http://llvm.org/releases/3.7.0/llvm-3.7.0.src.tar.xz tar -Jxf llvm-3.7.0.src.tar.xz cd llvm-3.7.0.src/tools/ curl -O http://llvm.org/releases/3.7/clang-3.7.src.tar.gz tar -Jxf cfe-3.7.0.src.tar.xz mv cfe-3.7.0.src clang cd .. export CC="clang -arch armv8a -mios-version-min=8.3 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS8.3.sdk" export CXX="clang++ -arch armv8a -mios-version-min=8.3 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS8.3.sdk" mkdir build &amp;&amp; cd build ../configure --prefix=/usr/local/XXX-cross/llvm-ios --host=armv8a-apple-darwin-eabi --enable-optimized --disable-assertions </code></pre>  <p>without success, having the</p>  <pre><code>error: invalid arch name '-arch armv8a' </code></pre>  <p>And I had this kind of error for all <code>arch</code>'s and <code>host</code>'s I've tried related to my iPad mini 3, for which I found infos <a href="http://www.gsmarena.com/apple_ipad_mini_3-6741.php" rel="nofollow">here</a> and <a href="https://en.wikipedia.org/wiki/Apple_A7" rel="nofollow">there</a>.</p>  <p>I had the same kind of problem when I tried to build gcc for my iPad mini 3, and I have the impression that at the moment, whatever compiler I am trying to "cross-build" for this target, the correct <code>host</code> &amp; <code>arch</code> options are not supported.</p>  <p>I am wrong ? I there a way to pass other options dealing with generic/unknown <code>arch</code>'s &amp; <code>host</code>'s, that with suitable other options, would give me workable llvm-clang on my iPad mini 3 ?</p>